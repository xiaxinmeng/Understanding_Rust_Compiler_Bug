{"sha": "37ed3e067925442661abfe3292cdf06d37bdb8db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlZDNlMDY3OTI1NDQyNjYxYWJmZTMyOTJjZGYwNmQzN2JkYjhkYg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-06-06T10:29:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:29:41Z"}, "message": "gnatlink.adb (Gnatlink): Do not specify -static-libgcc when --LINK= has been specified Correct error...\n\n2007-04-20  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Do not specify -static-libgcc when --LINK=\n\thas been specified\n\tCorrect error message when invocation of the linker fails\n\tAdd explicit size clause for the C imported variables\n\tObject_List_File_Supported and Using_GNU_Linker to emphasize that\n\twe expect char size.\n\tRead target parameters earlier, since this is needed to set\n\tTarget_VM properly. Also do not use -static/shared-libgcc for non GCC\n\ttargets.\n\nFrom-SVN: r125417", "tree": {"sha": "b470b416f77dbb0a189584d93fe36aca5b094744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b470b416f77dbb0a189584d93fe36aca5b094744"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ed3e067925442661abfe3292cdf06d37bdb8db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ed3e067925442661abfe3292cdf06d37bdb8db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ed3e067925442661abfe3292cdf06d37bdb8db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ed3e067925442661abfe3292cdf06d37bdb8db/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53a0bb66e7774fc5edc40aa840315248a937b62b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53a0bb66e7774fc5edc40aa840315248a937b62b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53a0bb66e7774fc5edc40aa840315248a937b62b"}], "stats": {"total": 146, "additions": 106, "deletions": 40}, "files": [{"sha": "de898c5a5a4789df1873b9bf409ed223dec854aa", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 106, "deletions": 40, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ed3e067925442661abfe3292cdf06d37bdb8db/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ed3e067925442661abfe3292cdf06d37bdb8db/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=37ed3e067925442661abfe3292cdf06d37bdb8db", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,10 +44,12 @@ with Types;\n \n with Ada.Command_Line;     use Ada.Command_Line;\n with Ada.Exceptions;       use Ada.Exceptions;\n-with GNAT.OS_Lib;          use GNAT.OS_Lib;\n+\n+with System.OS_Lib;        use System.OS_Lib;\n+with System.CRTL;\n+\n with Interfaces.C_Streams; use Interfaces.C_Streams;\n with Interfaces.C.Strings; use Interfaces.C.Strings;\n-with System.CRTL;\n \n procedure Gnatlink is\n    pragma Ident (Gnatvsn.Gnat_Static_Version_String);\n@@ -176,6 +178,7 @@ procedure Gnatlink is\n    --  the ALI file name (mainprog.ali => mainprog.map).\n \n    Object_List_File_Supported : Boolean;\n+   for Object_List_File_Supported'Size use Character'Size;\n    pragma Import\n      (C, Object_List_File_Supported, \"__gnat_objlist_file_supported\");\n    --  Predicate indicating whether the linker has an option whereby the\n@@ -416,17 +419,30 @@ procedure Gnatlink is\n                         Compile_Bind_File := False;\n \n                      when 'o' =>\n-                        Linker_Options.Increment_Last;\n-                        Linker_Options.Table (Linker_Options.Last) :=\n-                         new String'(Arg);\n+                        if VM_Target = CLI_Target then\n+                           Linker_Options.Increment_Last;\n+                           Linker_Options.Table (Linker_Options.Last) :=\n+                              new String'(\"/QUIET\");\n+\n+                        else\n+                           Linker_Options.Increment_Last;\n+                           Linker_Options.Table (Linker_Options.Last) :=\n+                             new String'(Arg);\n+                        end if;\n \n                         Next_Arg := Next_Arg + 1;\n \n                         if Next_Arg > Argument_Count then\n                            Exit_With_Error (\"Missing argument for -o\");\n                         end if;\n \n-                        Output_File_Name := new String'(Argument (Next_Arg));\n+                        if VM_Target = CLI_Target then\n+                           Output_File_Name :=\n+                             new String'(\"/OUTPUT=\" & Argument (Next_Arg));\n+                        else\n+                           Output_File_Name :=\n+                             new String'(Argument (Next_Arg));\n+                        end if;\n \n                         Linker_Options.Increment_Last;\n                         Linker_Options.Table (Linker_Options.Last) :=\n@@ -478,7 +494,7 @@ procedure Gnatlink is\n                   end if;\n \n                   Linker_Path :=\n-                    GNAT.OS_Lib.Locate_Exec_On_Path (Arg (8 .. Arg'Last));\n+                    System.OS_Lib.Locate_Exec_On_Path (Arg (8 .. Arg'Last));\n \n                   if Linker_Path = null then\n                      Exit_With_Error\n@@ -724,6 +740,7 @@ procedure Gnatlink is\n       --  the response file.\n \n       Using_GNU_Linker : Boolean;\n+      for Using_GNU_Linker'Size use Character'Size;\n       pragma Import (C, Using_GNU_Linker, \"__gnat_using_gnu_linker\");\n       --  Predicate indicating whether this target uses the GNU linker. In\n       --  this case we must output a GNU linker compatible response file.\n@@ -1415,8 +1432,21 @@ begin\n       Exit_Program (E_Fatal);\n    end if;\n \n-   if Hostparm.Java_VM then\n-      Gcc := new String'(\"jgnat\");\n+   --  Get target parameters\n+\n+   Namet.Initialize;\n+   Csets.Initialize;\n+   Snames.Initialize;\n+   Osint.Add_Default_Search_Dirs;\n+   Targparm.Get_Target_Parameters;\n+\n+   if VM_Target /= No_VM then\n+      case VM_Target is\n+         when JVM_Target => Gcc := new String'(\"jgnat\");\n+         when CLI_Target => Gcc := new String'(\"dotnet-gnatcompile\");\n+         when No_VM      => raise Program_Error;\n+      end case;\n+\n       Ada_Bind_File := True;\n       Begin_Info := \"--  BEGIN Object file/option list\";\n       End_Info   := \"--  END Object file/option list   \";\n@@ -1454,14 +1484,22 @@ begin\n \n    --  Locate all the necessary programs and verify required files are present\n \n-   Gcc_Path := GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n+   Gcc_Path := System.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n \n    if Gcc_Path = null then\n       Exit_With_Error (\"Couldn't locate \" & Gcc.all);\n    end if;\n \n    if Linker_Path = null then\n-      Linker_Path := Gcc_Path;\n+      if VM_Target = CLI_Target then\n+         Linker_Path := System.OS_Lib.Locate_Exec_On_Path (\"ilasm\");\n+\n+         if Linker_Path = null then\n+            Exit_With_Error (\"Couldn't locate ilasm\");\n+         end if;\n+      else\n+         Linker_Path := Gcc_Path;\n+      end if;\n    end if;\n \n    if Ali_File_Name = null then\n@@ -1472,14 +1510,6 @@ begin\n       Exit_With_Error (Ali_File_Name.all & \" not found\");\n    end if;\n \n-   --  Get target parameters\n-\n-   Namet.Initialize;\n-   Csets.Initialize;\n-   Snames.Initialize;\n-   Osint.Add_Default_Search_Dirs;\n-   Targparm.Get_Target_Parameters;\n-\n    --  Read the ALI file of the main subprogram if the binder generated\n    --  file needs to be compiled and no --GCC= switch has been specified.\n    --  Fetch the back end switches from this ALI file and use these switches\n@@ -1548,15 +1578,27 @@ begin\n    if Output_File_Name = null then\n       Output_File_Name :=\n         new String'(Base_Name (Ali_File_Name.all)\n-                       & Get_Target_Debuggable_Suffix.all);\n+                      & Get_Target_Debuggable_Suffix.all);\n+\n+      if VM_Target = CLI_Target then\n+         Linker_Options.Increment_Last;\n+         Linker_Options.Table (Linker_Options.Last) := new String'(\"/QUIET\");\n+\n+         Linker_Options.Increment_Last;\n+         Linker_Options.Table (Linker_Options.Last) := new String'(\"/DEBUG\");\n+\n+         Linker_Options.Increment_Last;\n+         Linker_Options.Table (Linker_Options.Last) :=\n+           new String'(\"/OUTPUT=\" & Output_File_Name.all);\n \n-      Linker_Options.Increment_Last;\n-      Linker_Options.Table (Linker_Options.Last) :=\n-        new String'(\"-o\");\n+      else\n+         Linker_Options.Increment_Last;\n+         Linker_Options.Table (Linker_Options.Last) := new String'(\"-o\");\n \n-      Linker_Options.Increment_Last;\n-      Linker_Options.Table (Linker_Options.Last) :=\n-        new String'(Output_File_Name.all);\n+         Linker_Options.Increment_Last;\n+         Linker_Options.Table (Linker_Options.Last) :=\n+           new String'(Output_File_Name.all);\n+      end if;\n    end if;\n \n    --  Warn if main program is called \"test\", as that may be a built-in command\n@@ -1690,7 +1732,7 @@ begin\n             Write_Eol;\n          end if;\n \n-         GNAT.OS_Lib.Spawn (Gcc_Path.all, Args, Success);\n+         System.OS_Lib.Spawn (Gcc_Path.all, Args, Success);\n \n          if not Success then\n             Exit_Program (E_Fatal);\n@@ -1700,11 +1742,11 @@ begin\n \n    --  Now, actually link the program\n \n-   --  Skip this step for now on the JVM since the Java interpreter will do\n+   --  Skip this step for now on JVM since the Java interpreter will do\n    --  the actual link at run time. We might consider packing all class files\n    --  in a .zip file during this step.\n \n-   if not Hostparm.Java_VM then\n+   if VM_Target /= JVM_Target then\n       Link_Step : declare\n          Num_Args : Natural :=\n                      (Linker_Options.Last - Linker_Options.First + 1) +\n@@ -1714,6 +1756,27 @@ begin\n          IDENT_Op : Boolean := False;\n \n       begin\n+         if VM_Target = CLI_Target then\n+\n+            --  Remove extraneous flags not relevant for CIL. Also remove empty\n+            --  arguments, since ilasm chokes on them.\n+\n+            for J in reverse Linker_Options.First .. Linker_Options.Last loop\n+               if Linker_Options.Table (J)'Length = 0\n+                 or else Linker_Options.Table (J) (1 .. 2) = \"-L\"\n+                 or else Linker_Options.Table (J) (1 .. 2) = \"-l\"\n+                 or else Linker_Options.Table (J) (1 .. 3) = \"-Wl\"\n+                 or else Linker_Options.Table (J) (1 .. 3) = \"-sh\"\n+                 or else Linker_Options.Table (J) (1 .. 2) = \"-g\"\n+               then\n+                  Linker_Options.Table (J .. Linker_Options.Last - 1) :=\n+                    Linker_Options.Table (J + 1 .. Linker_Options.Last);\n+                  Linker_Options.Decrement_Last;\n+                  Num_Args := Num_Args - 1;\n+               end if;\n+            end loop;\n+         end if;\n+\n          --  Remove duplicate stack size setting from the Linker_Options\n          --  table. The stack setting option \"-Xlinker --stack=R,C\" can be\n          --  found in one line when set by a pragma Linker_Options or in two\n@@ -1810,14 +1873,17 @@ begin\n                J := J + 1;\n             end loop;\n \n-            --  If gcc is not called with -shared-libgcc, call it with\n-            --  -static-libgcc, as there are some platforms where one of these\n-            --  two switches is compulsory to link.\n+            if Linker_Path = Gcc_Path and then VM_Target = No_VM then\n \n-            if not Shared_Libgcc_Seen then\n-               Linker_Options.Increment_Last;\n-               Linker_Options.Table (Linker_Options.Last) := Static_Libgcc;\n-               Num_Args := Num_Args + 1;\n+               --  If gcc is not called with -shared-libgcc, call it with\n+               --  -static-libgcc, as there are some platforms where one of\n+               --  these two switches is compulsory to link.\n+\n+               if not Shared_Libgcc_Seen then\n+                  Linker_Options.Increment_Last;\n+                  Linker_Options.Table (Linker_Options.Last) := Static_Libgcc;\n+                  Num_Args := Num_Args + 1;\n+               end if;\n             end if;\n \n          end Clean_Link_Option_Set;\n@@ -1885,7 +1951,7 @@ begin\n                end if;\n             end if;\n \n-            GNAT.OS_Lib.Spawn (Linker_Path.all, Args, Success);\n+            System.OS_Lib.Spawn (Linker_Path.all, Args, Success);\n \n             --  Delete the temporary file used in conjuction with linking if\n             --  one was created. See Process_Bind_File for details.\n@@ -1895,7 +1961,7 @@ begin\n             end if;\n \n             if not Success then\n-               Error_Msg (\"cannot call \" & Linker_Path.all);\n+               Error_Msg (\"error when calling \" & Linker_Path.all);\n                Exit_Program (E_Fatal);\n             end if;\n          end Call_Linker;\n@@ -1917,7 +1983,7 @@ begin\n \n       Delete (Binder_Body_Src_File.all & ASCII.NUL);\n \n-      if not Hostparm.Java_VM then\n+      if VM_Target = No_VM then\n          Delete (Binder_Obj_File.all & ASCII.NUL);\n       end if;\n    end if;"}]}