{"sha": "99e6bdda90bc96029f692df81028dcdaa65e3dea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllNmJkZGE5MGJjOTYwMjlmNjkyZGY4MTAyOGRjZGFhNjVlM2RlYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-19T06:35:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-19T06:35:52Z"}, "message": "tree-complex.c (init_dont_simulate_again): Clear DONT_SIMULATE_AGAIN for control-altering statements; set it again for returns.\n\n        * tree-complex.c (init_dont_simulate_again): Clear DONT_SIMULATE_AGAIN\n        for control-altering statements; set it again for returns.\n        (complex_visit_stmt): Return SSA_PROP_VARYING for stmts that are\n        not MODIFY_EXPR.\n\nFrom-SVN: r101178", "tree": {"sha": "70c9f858c3de8aaa06631784a98a24206baa9fe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c9f858c3de8aaa06631784a98a24206baa9fe2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99e6bdda90bc96029f692df81028dcdaa65e3dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e6bdda90bc96029f692df81028dcdaa65e3dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e6bdda90bc96029f692df81028dcdaa65e3dea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e6bdda90bc96029f692df81028dcdaa65e3dea/comments", "author": null, "committer": null, "parents": [{"sha": "aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "6e25cbb3e05b04f289d0a4bcab2f2b220e1ccbe1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e6bdda90bc96029f692df81028dcdaa65e3dea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e6bdda90bc96029f692df81028dcdaa65e3dea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99e6bdda90bc96029f692df81028dcdaa65e3dea", "patch": "@@ -1,3 +1,10 @@\n+2005-06-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-complex.c (init_dont_simulate_again): Clear DONT_SIMULATE_AGAIN\n+\tfor control-altering statements; set it again for returns.\n+\t(complex_visit_stmt): Return SSA_PROP_VARYING for stmts that are\n+\tnot MODIFY_EXPR.\n+\n 2005-06-18  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-opt/22116"}, {"sha": "f949633fed41678e9d041319072ac1a5343b323e", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e6bdda90bc96029f692df81028dcdaa65e3dea/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e6bdda90bc96029f692df81028dcdaa65e3dea/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=99e6bdda90bc96029f692df81028dcdaa65e3dea", "patch": "@@ -160,12 +160,20 @@ init_dont_simulate_again (void)\n       for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))\n \t{\n \t  tree orig_stmt, stmt, rhs = NULL;\n-\t  bool dsa = true;\n+\t  bool dsa;\n \n \t  orig_stmt = stmt = bsi_stmt (bsi);\n+\n+\t  /* Most control-altering statements must be initially \n+\t     simulated, else we won't cover the entire cfg.  */\n+\t  dsa = !stmt_ends_bb_p (stmt);\n+\n \t  switch (TREE_CODE (stmt))\n \t    {\n \t    case RETURN_EXPR:\n+\t      /* We don't care what the lattice value of <retval> is,\n+\t\t since it's never used as an input to another computation.  */\n+\t      dsa = true;\n \t      stmt = TREE_OPERAND (stmt, 0);\n \t      if (!stmt || TREE_CODE (stmt) != MODIFY_EXPR)\n \t\tbreak;\n@@ -228,15 +236,14 @@ complex_visit_stmt (tree stmt, edge *taken_edge_p ATTRIBUTE_UNUSED,\n   unsigned int ver;\n   tree lhs, rhs;\n \n-  /* These conditions should be satisfied due to the initial filter\n-     set up in init_dont_simulate_again.  */\n-  if (TREE_CODE (stmt) == RETURN_EXPR)\n-    stmt = TREE_OPERAND (stmt, 0);\n-  gcc_assert (TREE_CODE (stmt) == MODIFY_EXPR);\n+  if (TREE_CODE (stmt) != MODIFY_EXPR)\n+    return SSA_PROP_VARYING;\n \n   lhs = TREE_OPERAND (stmt, 0);\n   rhs = TREE_OPERAND (stmt, 1);\n \n+  /* These conditions should be satisfied due to the initial filter\n+     set up in init_dont_simulate_again.  */\n   gcc_assert (TREE_CODE (lhs) == SSA_NAME);\n   gcc_assert (TREE_CODE (TREE_TYPE (lhs)) == COMPLEX_TYPE);\n "}]}