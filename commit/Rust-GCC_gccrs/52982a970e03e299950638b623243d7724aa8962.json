{"sha": "52982a970e03e299950638b623243d7724aa8962", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5ODJhOTcwZTAzZTI5OTk1MDYzOGI2MjMyNDNkNzcyNGFhODk2Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2007-11-07T22:05:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-11-07T22:05:37Z"}, "message": "re PR rtl-optimization/33737 (verify_flow_info failed: Wrong probability of edge 94->1 -6651)\n\n\tPR rtl-optimization/33737\n\t* cfgcleanup.c (try_crossjump_to_edge): Add count and frequency of\n\ttarget block after computing the probabilities of outgoing edges.\n\tCap the frequency to BB_FREQ_MAX.\n\t* tree-ssa-threadupdate.c (redirect_edges): Also adjust count and\n\tfrequency of the basic block if it has been reused.\n\nFrom-SVN: r129973", "tree": {"sha": "3b09819b82398b3577c387dc732255b7f014c8d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b09819b82398b3577c387dc732255b7f014c8d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52982a970e03e299950638b623243d7724aa8962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52982a970e03e299950638b623243d7724aa8962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52982a970e03e299950638b623243d7724aa8962", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52982a970e03e299950638b623243d7724aa8962/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c6c36a3c9583d2e804edd181c75e076a4f38b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6c36a3c9583d2e804edd181c75e076a4f38b3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6c36a3c9583d2e804edd181c75e076a4f38b3e"}], "stats": {"total": 361, "additions": 358, "deletions": 3}, "files": [{"sha": "7cbf17fd8ba2789aef38f2bb2e831ecad40c74ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52982a970e03e299950638b623243d7724aa8962/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52982a970e03e299950638b623243d7724aa8962/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52982a970e03e299950638b623243d7724aa8962", "patch": "@@ -1,3 +1,12 @@\n+2007-11-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR rtl-optimization/33737\n+\t* cfgcleanup.c (try_crossjump_to_edge): Add count and frequency of\n+\ttarget block after computing the probabilities of outgoing edges.\n+\tCap the frequency to BB_FREQ_MAX.\n+\t* tree-ssa-threadupdate.c (redirect_edges): Also adjust count and\n+\tfrequency of the basic block if it has been reused.\n+\n 2007-11-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR rtl-optimization/33822"}, {"sha": "b1c94da8489e9439f09b27d3c4475ed53ce8c3ee", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52982a970e03e299950638b623243d7724aa8962/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52982a970e03e299950638b623243d7724aa8962/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=52982a970e03e299950638b623243d7724aa8962", "patch": "@@ -1699,8 +1699,6 @@ try_crossjump_to_edge (int mode, edge e1, edge e2)\n \t     \"Cross jumping from bb %i to bb %i; %i common insns\\n\",\n \t     src1->index, src2->index, nmatch);\n \n-  redirect_to->count += src1->count;\n-  redirect_to->frequency += src1->frequency;\n   /* We may have some registers visible through the block.  */\n   df_set_bb_dirty (redirect_to);\n \n@@ -1757,6 +1755,14 @@ try_crossjump_to_edge (int mode, edge e1, edge e2)\n \t     / (redirect_to->frequency + src1->frequency));\n     }\n \n+  /* Adjust count and frequency for the block.  An earlier jump\n+     threading pass may have left the profile in an inconsistent\n+     state (see update_bb_profile_for_threading) so we must be\n+     prepared for overflows.  */\n+  redirect_to->count += src1->count;\n+  redirect_to->frequency += src1->frequency;\n+  if (redirect_to->frequency > BB_FREQ_MAX)\n+    redirect_to->frequency = BB_FREQ_MAX;\n   update_br_prob_note (redirect_to);\n \n   /* Edit SRC1 to go to REDIRECT_TO at NEWPOS1.  */"}, {"sha": "ff2affba0193254c95ab55c438017aeee4433426", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52982a970e03e299950638b623243d7724aa8962/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52982a970e03e299950638b623243d7724aa8962/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52982a970e03e299950638b623243d7724aa8962", "patch": "@@ -1,3 +1,7 @@\n+2007-11-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/compile/20071107-1.c: New test.\n+\n 2007-11-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/out-of-bounds-1.c: New test."}, {"sha": "627b705d5bda05d7c16dbcd7479928f3ef9a8dc3", "filename": "gcc/testsuite/gcc.c-torture/compile/20071107-1.c", "status": "added", "additions": 332, "deletions": 0, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52982a970e03e299950638b623243d7724aa8962/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52982a970e03e299950638b623243d7724aa8962/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071107-1.c?ref=52982a970e03e299950638b623243d7724aa8962", "patch": "@@ -0,0 +1,332 @@\n+/* PR rtl-optimization/33737 */\n+/* Testcase by Richard Guenther <rguenth@gcc.gnu.org> */\n+\n+enum { PROP_0, PROP_DOUBLE_CLICK_TIME, PROP_DOUBLE_CLICK_DISTANCE, PROP_CURSOR_BLINK, PROP_CURSOR_BLINK_TIME, PROP_CURSOR_BLINK_TIMEOUT, PROP_SPLIT_CURSOR, PROP_THEME_NAME, PROP_ICON_THEME_NAME, PROP_FALLBACK_ICON_THEME, PROP_KEY_THEME_NAME, PROP_MENU_BAR_ACCEL, PROP_DND_DRAG_THRESHOLD, PROP_FONT_NAME, PROP_ICON_SIZES, PROP_MODULES, PROP_XFT_ANTIALIAS, PROP_XFT_HINTING, PROP_XFT_HINTSTYLE, PROP_XFT_RGBA, PROP_XFT_DPI, PROP_CURSOR_THEME_NAME, PROP_CURSOR_THEME_SIZE, PROP_ALTERNATIVE_BUTTON_ORDER, PROP_ALTERNATIVE_SORT_ARROWS, PROP_SHOW_INPUT_METHOD_MENU, PROP_SHOW_UNICODE_MENU, PROP_TIMEOUT_INITIAL, PROP_TIMEOUT_REPEAT, PROP_TIMEOUT_EXPAND, PROP_COLOR_SCHEME, PROP_ENABLE_ANIMATIONS, PROP_TOUCHSCREEN_MODE, PROP_TOOLTIP_TIMEOUT, PROP_TOOLTIP_BROWSE_TIMEOUT, PROP_TOOLTIP_BROWSE_MODE_TIMEOUT, PROP_KEYNAV_CURSOR_ONLY, PROP_KEYNAV_WRAP_AROUND, PROP_ERROR_BELL, PROP_COLOR_HASH, PROP_FILE_CHOOSER_BACKEND, PROP_PRINT_BACKENDS, PROP_PRINT_PREVIEW_COMMAND, PROP_ENABLE_MNEMONICS, PROP_ENABLE_ACCELS, PROP_RECENT_FILES_LIMIT };\n+void g_assert_warning (void) __attribute__((__noreturn__));\n+void gtk_settings_class_init (void)\n+{\n+    unsigned int result;\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_DOUBLE_CLICK_TIME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_DOUBLE_CLICK_DISTANCE) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_CURSOR_BLINK) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_CURSOR_BLINK_TIME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_CURSOR_BLINK_TIMEOUT) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_SPLIT_CURSOR) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_THEME_NAME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ICON_THEME_NAME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_FALLBACK_ICON_THEME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_KEY_THEME_NAME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_MENU_BAR_ACCEL) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_DND_DRAG_THRESHOLD) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_FONT_NAME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ICON_SIZES) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_MODULES) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_XFT_ANTIALIAS) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_XFT_HINTING) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_XFT_HINTSTYLE) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_XFT_RGBA) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_XFT_DPI) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_CURSOR_THEME_NAME) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_CURSOR_THEME_SIZE) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ALTERNATIVE_BUTTON_ORDER) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ALTERNATIVE_SORT_ARROWS) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_SHOW_INPUT_METHOD_MENU) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_SHOW_UNICODE_MENU) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_TOOLTIP_BROWSE_TIMEOUT) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_TOOLTIP_BROWSE_MODE_TIMEOUT) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_KEYNAV_CURSOR_ONLY) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_KEYNAV_WRAP_AROUND) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ERROR_BELL) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_FILE_CHOOSER_BACKEND) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_PRINT_PREVIEW_COMMAND) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ENABLE_MNEMONICS) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+    result = settings_install_property_parser();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_ENABLE_ACCELS) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+     if (__builtin_expect (__extension__ ({\n+       int _g_boolean_var_;\n+       if (result == PROP_RECENT_FILES_LIMIT) _g_boolean_var_ = 1;\n+       else _g_boolean_var_ = 0;\n+       _g_boolean_var_;\n+   }), 1)) {\n+     }\n+     else g_assert_warning();\n+}"}, {"sha": "fe3876ec3320f70016a4be0854d400377583f1fb", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52982a970e03e299950638b623243d7724aa8962/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52982a970e03e299950638b623243d7724aa8962/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=52982a970e03e299950638b623243d7724aa8962", "patch": "@@ -442,10 +442,14 @@ redirect_edges (void **slot, void *data)\n \t  remove_ctrl_stmt_and_useless_edges (local_info->bb,\n \t\t\t\t\t      rd->outgoing_edge->dest);\n \n-\t  /* And fixup the flags on the single remaining edge.  */\n+\t  /* Fixup the flags on the single remaining edge.  */\n \t  single_succ_edge (local_info->bb)->flags\n \t    &= ~(EDGE_TRUE_VALUE | EDGE_FALSE_VALUE | EDGE_ABNORMAL);\n \t  single_succ_edge (local_info->bb)->flags |= EDGE_FALLTHRU;\n+\n+\t  /* And adjust count and frequency on BB.  */\n+\t  local_info->bb->count = e->count;\n+\t  local_info->bb->frequency = EDGE_FREQUENCY (e);\n \t}\n     }\n "}]}