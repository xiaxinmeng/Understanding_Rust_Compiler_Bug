{"sha": "62f1c6492fd8177d0ade0b7846a29d2aa2e619ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmMWM2NDkyZmQ4MTc3ZDBhZGUwYjc4NDZhMjlkMmFhMmU2MTllZQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-08-19T22:40:29Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-08-19T22:40:29Z"}, "message": "sparc.h ({MASK,TARGET}_LITTLE_ENDIAN): Define.\n\n\t* sparc.h ({MASK,TARGET}_LITTLE_ENDIAN): Define.\n\t(LIBGCC2_WORDS_BIG_ENDIAN): Add little endian support.\n\nFrom-SVN: r12660", "tree": {"sha": "4ffc8f23fcec4b9b0a655b3868514c1df7b7d93f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ffc8f23fcec4b9b0a655b3868514c1df7b7d93f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62f1c6492fd8177d0ade0b7846a29d2aa2e619ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f1c6492fd8177d0ade0b7846a29d2aa2e619ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f1c6492fd8177d0ade0b7846a29d2aa2e619ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f1c6492fd8177d0ade0b7846a29d2aa2e619ee/comments", "author": null, "committer": null, "parents": [{"sha": "747691c4ee3f19e199741c53d580d2a4814450c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747691c4ee3f19e199741c53d580d2a4814450c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747691c4ee3f19e199741c53d580d2a4814450c6"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "9848f954710b24d6a32c0a4a23d027786b149909", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f1c6492fd8177d0ade0b7846a29d2aa2e619ee/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f1c6492fd8177d0ade0b7846a29d2aa2e619ee/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=62f1c6492fd8177d0ade0b7846a29d2aa2e619ee", "patch": "@@ -324,7 +324,12 @@ extern int target_flags;\n #define MASK_HARD_QUAD 0x800\n #define TARGET_HARD_QUAD (target_flags & MASK_HARD_QUAD)\n \n-/* Bit 0x1000 currently unused.  */\n+/* Non-zero on little-endian machines.  */\n+/* ??? Little endian support currently only exists for sparclet-aout and\n+   sparc64-elf configurations.  May eventually want to expand the support\n+   to all targets, but for now it's kept local to only those two.  */\n+#define MASK_LITTLE_ENDIAN 0x1000\n+#define TARGET_LITTLE_ENDIAN (target_flags & MASK_LITTLE_ENDIAN)\n \n /* Nonzero if ints are 64 bits.\n    This automatically implies longs are 64 bits too.\n@@ -530,15 +535,20 @@ extern struct sparc_cpu_select sparc_select[];\n #define BITS_BIG_ENDIAN 1\n \n /* Define this if most significant byte of a word is the lowest numbered.  */\n-/* This is true on the SPARC.  */\n #define BYTES_BIG_ENDIAN 1\n \n /* Define this if most significant word of a multiword number is the lowest\n    numbered.  */\n-/* Doubles are stored in memory with the high order word first.  This\n-   matters when cross-compiling.  */\n #define WORDS_BIG_ENDIAN 1\n \n+/* Define this to set the endianness to use in libgcc2.c, which can\n+   not depend on target_flags.  */\n+#if defined (__LITTLE_ENDIAN__)\n+#define LIBGCC2_WORDS_BIG_ENDIAN 0\n+#else\n+#define LIBGCC2_WORDS_BIG_ENDIAN 1\n+#endif\n+\n /* number of bits in an addressable storage unit */\n #define BITS_PER_UNIT 8\n "}]}