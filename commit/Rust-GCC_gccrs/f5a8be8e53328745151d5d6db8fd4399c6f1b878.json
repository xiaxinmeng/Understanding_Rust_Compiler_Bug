{"sha": "f5a8be8e53328745151d5d6db8fd4399c6f1b878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVhOGJlOGU1MzMyODc0NTE1MWQ1ZDZkYjhmZDQzOTljNmYxYjg3OA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-05T16:42:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-05T16:42:25Z"}, "message": "Fix typo in last change.\n\nFrom-SVN: r29128", "tree": {"sha": "e85e8535e1a54958701279232901714b1dc743a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e85e8535e1a54958701279232901714b1dc743a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5a8be8e53328745151d5d6db8fd4399c6f1b878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a8be8e53328745151d5d6db8fd4399c6f1b878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a8be8e53328745151d5d6db8fd4399c6f1b878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a8be8e53328745151d5d6db8fd4399c6f1b878/comments", "author": null, "committer": null, "parents": [{"sha": "b9096844c1ef68031ce8c52fe25cf86f1e555873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9096844c1ef68031ce8c52fe25cf86f1e555873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9096844c1ef68031ce8c52fe25cf86f1e555873"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6bcdadbd26e0df886788b536e98403ac67ebcb51", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a8be8e53328745151d5d6db8fd4399c6f1b878/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a8be8e53328745151d5d6db8fd4399c6f1b878/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=f5a8be8e53328745151d5d6db8fd4399c6f1b878", "patch": "@@ -149,7 +149,7 @@ function_cannot_inline_p (fndecl)\n     return N_(\"function with nested functions cannot be inline\");\n \n   if (forced_labels)\n-    return \"function with label addresses used in initializers cannot inline\";\n+    return N_(\"function with label addresses used in initializers cannot inline\");\n \n   if (current_function_cannot_inline)\n     return current_function_cannot_inline;"}]}