{"sha": "4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "node_id": "C_kwDOANBUbNoAKDQ5ODRkZDU5YjZiN2Y4MTFlYTgxZDY5YmZhMjRmZjczYzFkMTllYmY", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-04-12T13:28:45Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-04-21T13:15:47Z"}, "message": "libproc_macro: Add remaining tokenstream structs.\n\nAdd remaining missing tokenstream structures. Most are interdependent.\n\nChangeLog:\n\n\t* libgrust/libproc_macro/Makefile.am: Add tokenstream,\n\tgroup and  tokentree source files.\n\t* libgrust/libproc_macro/Makefile.in: Regenerate.\n\t* libgrust/libproc_macro/group.cc: New file.\n\t* libgrust/libproc_macro/group.h: New file.\n\t* libgrust/libproc_macro/tokenstream.cc: New file.\n\t* libgrust/libproc_macro/tokenstream.h: New file.\n\t* libgrust/libproc_macro/tokentree.cc: New file.\n\t* libgrust/libproc_macro/tokentree.h: New file.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "4c091a9b3ef0c6ab8c5ecdc0b4de6924a33092ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c091a9b3ef0c6ab8c5ecdc0b4de6924a33092ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67905463cbcf8cd375c51a114367d8209d98f065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67905463cbcf8cd375c51a114367d8209d98f065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67905463cbcf8cd375c51a114367d8209d98f065"}], "stats": {"total": 402, "additions": 400, "deletions": 2}, "files": [{"sha": "2846ac882d5a4157d1454262c3426f9060a9030f", "filename": "libgrust/libproc_macro/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2FMakefile.am?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -54,6 +54,9 @@ libproc_macro_la_SOURCES = \\\n \tproc_macro.cc \\\n \tident.cc \\\n \tpunct.cc \\\n+\tgroup.cc \\\n+\ttokentree.cc \\\n+\ttokenstream.cc \\\n \tliteral.cc\n \n include_HEADERS = \\"}, {"sha": "77fe66285df3085d8bfffc593c5f341492d187db", "filename": "libgrust/libproc_macro/Makefile.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2FMakefile.in?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -138,8 +138,8 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n \t\"$(DESTDIR)$(includedir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libproc_macro_la_LIBADD =\n-am_libproc_macro_la_OBJECTS = proc_macro.lo ident.lo punct.lo \\\n-\tliteral.lo\n+am_libproc_macro_la_OBJECTS = proc_macro.lo ident.lo punct.lo group.lo \\\n+\ttokentree.lo tokenstream.lo literal.lo\n libproc_macro_la_OBJECTS = $(am_libproc_macro_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n@@ -389,6 +389,9 @@ libproc_macro_la_SOURCES = \\\n \tproc_macro.cc \\\n \tident.cc \\\n \tpunct.cc \\\n+\tgroup.cc \\\n+\ttokentree.cc \\\n+\ttokenstream.cc \\\n \tliteral.cc\n \n include_HEADERS = \\\n@@ -472,10 +475,13 @@ mostlyclean-compile:\n distclean-compile:\n \t-rm -f *.tab.c\n \n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/group.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ident.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/literal.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proc_macro.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/punct.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tokenstream.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tokentree.Plo@am__quote@\n \n .cc.o:\n @am__fastdepCXX_TRUE@\t$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<"}, {"sha": "e6fdce5f84e2689d5282b3d4b8137b258948b9e0", "filename": "libgrust/libproc_macro/group.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Fgroup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Fgroup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fgroup.cc?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -0,0 +1,33 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"group.h\"\n+\n+namespace Group {\n+\n+Group\n+Group::make_group (TokenStream::TokenStream stream, Delimiter delim)\n+{\n+  return {delim, stream};\n+}\n+\n+} // namespace Group"}, {"sha": "09a7add70e086f01d8d62d2a37899f25a452ab96", "filename": "libgrust/libproc_macro/group.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Fgroup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Fgroup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fgroup.h?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef GROUP_H\n+#define GROUP_H\n+\n+#include \"tokenstream.h\"\n+\n+namespace Group {\n+\n+enum Delimiter\n+{\n+  Parenthesis,\n+  Brace,\n+  Bracket,\n+  None,\n+};\n+\n+struct Group\n+{\n+  Delimiter delimiter;\n+  TokenStream::TokenStream stream;\n+\n+public:\n+  static Group make_group (TokenStream::TokenStream stream, Delimiter delim);\n+};\n+\n+} // namespace Group\n+\n+#endif /* ! GROUP_H */"}, {"sha": "b8116c1735ac1d93b8cf684cca405631a53d0c09", "filename": "libgrust/libproc_macro/tokenstream.cc", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokenstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokenstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokenstream.cc?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -0,0 +1,110 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"tokenstream.h\"\n+#include \"tokentree.h\"\n+\n+#include <cstring>\n+\n+namespace TokenStream {\n+\n+TokenStream\n+TokenStream::make_tokenstream (std::vector<TokenTree::TokenTree> vec)\n+{\n+  auto stream = make_tokenstream (vec.size ());\n+  for (auto tt : vec)\n+    {\n+      stream.push (tt);\n+    }\n+  return stream;\n+}\n+\n+TokenStream\n+TokenStream::make_tokenstream (std::uint64_t capacity)\n+{\n+  auto *data = new TokenTree::TokenTree[capacity];\n+  return {data, 0, capacity};\n+}\n+\n+void\n+TokenStream::grow (std::uint64_t delta)\n+{\n+  auto new_capacity = capacity + delta;\n+  auto *new_data = new TokenTree::TokenTree[new_capacity];\n+  std::memcpy (new_data, data, size);\n+  delete[] data;\n+  data = new_data;\n+}\n+\n+void\n+TokenStream::push (TokenTree::TokenTree tree)\n+{\n+  if (size == capacity)\n+    grow (capacity);\n+  data[size] = tree;\n+  size++;\n+}\n+\n+extern \"C\" TokenStream\n+TokenStream__new ()\n+{\n+  return TokenStream::make_tokenstream ();\n+}\n+\n+extern \"C\" TokenStream\n+TokenStream__with_capacity (std::uint64_t capacity)\n+{\n+  return TokenStream::make_tokenstream (capacity);\n+}\n+\n+extern \"C\" void\n+TokenSream__push (TokenStream *stream, TokenTree::TokenTree tree)\n+{\n+  stream->push (tree);\n+}\n+\n+extern \"C\" bool\n+TokenStream__from_string (unsigned char *str, std::uint64_t len,\n+\t\t\t  TokenStream *ts)\n+{\n+  // FIXME: Implement using parser ?\n+  return false;\n+}\n+\n+extern \"C\" TokenStream\n+TokenStream__clone (const TokenStream *ts)\n+{\n+  auto *data = new TokenTree::TokenTree[ts->capacity];\n+  std::memcpy (data, ts->data, ts->size);\n+  return {data, ts->size, ts->capacity};\n+}\n+\n+extern \"C\" void\n+TokenStream__drop (TokenStream *stream)\n+{\n+  // FIXME: Also drop stream components\n+  delete[] stream->data;\n+  stream->capacity = 0;\n+  stream->size = 0;\n+}\n+\n+} // namespace TokenStream"}, {"sha": "513553e1b2b46e03944806dea91c1401f267df82", "filename": "libgrust/libproc_macro/tokenstream.h", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokenstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokenstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokenstream.h?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -0,0 +1,75 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef TOKENSTREAM_H\n+#define TOKENSTREAM_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+namespace TokenTree {\n+struct TokenTree;\n+}\n+\n+namespace TokenStream {\n+\n+const std::int64_t DEFAULT_CAPACITY = 0;\n+\n+struct TokenStream\n+{\n+  TokenTree::TokenTree *data;\n+  std::uint64_t size;\n+  std::uint64_t capacity;\n+\n+public:\n+  void grow (std::uint64_t delta);\n+  void push (TokenTree::TokenTree tree);\n+\n+  TokenStream clone () const;\n+\n+  static TokenStream make_tokenstream (std::vector<TokenTree::TokenTree> vec);\n+  static TokenStream make_tokenstream (std::uint64_t capacity\n+\t\t\t\t       = DEFAULT_CAPACITY);\n+};\n+\n+extern \"C\" TokenStream\n+TokenStream__new ();\n+\n+extern \"C\" TokenStream\n+TokenStream__with_capacity (std::uint64_t capacity);\n+\n+extern \"C\" void\n+TokenSream__push (TokenStream *stream, TokenTree::TokenTree tree);\n+\n+extern \"C\" bool\n+TokenStream__from_string (unsigned char *str, std::uint64_t len,\n+\t\t\t  TokenStream *ts);\n+\n+extern \"C\" TokenStream\n+TokenStream__clone (const TokenStream *ts);\n+\n+extern \"C\" void\n+TokenStream__drop (TokenStream *stream);\n+\n+} // namespace TokenStream\n+\n+#endif /* ! TOKENSTREAM_H */"}, {"sha": "fd9d9815a890c57e4e1fdd94b542ac90ed779613", "filename": "libgrust/libproc_macro/tokentree.cc", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokentree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokentree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokentree.cc?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -0,0 +1,59 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"tokentree.h\"\n+\n+namespace TokenTree {\n+\n+TokenTree\n+TokenTree::make_tokentree (Group::Group group)\n+{\n+  TokenTreePayload payload;\n+  payload.group = group;\n+  return {GROUP, payload};\n+}\n+\n+TokenTree\n+TokenTree::make_tokentree (Ident::Ident ident)\n+{\n+  TokenTreePayload payload;\n+  payload.ident = ident;\n+  return {IDENT, payload};\n+}\n+\n+TokenTree\n+TokenTree::make_tokentree (Punct::Punct punct)\n+{\n+  TokenTreePayload payload;\n+  payload.punct = punct;\n+  return {PUNCT, payload};\n+}\n+\n+TokenTree\n+TokenTree::make_tokentree (Literal::Literal literal)\n+{\n+  TokenTreePayload payload;\n+  payload.literal = literal;\n+  return {LITERAL, payload};\n+}\n+\n+} // namespace TokenTree"}, {"sha": "a982bfcc1ee373bc93f7acbf7aa999084c298cc5", "filename": "libgrust/libproc_macro/tokentree.h", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokentree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf/libgrust%2Flibproc_macro%2Ftokentree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokentree.h?ref=4984dd59b6b7f811ea81d69bfa24ff73c1d19ebf", "patch": "@@ -0,0 +1,63 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef TOKENTREE_H\n+#define TOKENTREE_H\n+\n+#include \"group.h\"\n+#include \"ident.h\"\n+#include \"punct.h\"\n+#include \"literal.h\"\n+\n+namespace TokenTree {\n+\n+enum TokenTreeTag\n+{\n+  GROUP,\n+  IDENT,\n+  PUNCT,\n+  LITERAL\n+};\n+\n+union TokenTreePayload\n+{\n+  Group::Group group;\n+  Ident::Ident ident;\n+  Punct::Punct punct;\n+  Literal::Literal literal;\n+};\n+\n+struct TokenTree\n+{\n+  TokenTreeTag tag;\n+  TokenTreePayload payload;\n+\n+public:\n+  static TokenTree make_tokentree (Group::Group group);\n+  static TokenTree make_tokentree (Ident::Ident ident);\n+  static TokenTree make_tokentree (Punct::Punct punct);\n+  static TokenTree make_tokentree (Literal::Literal literal);\n+};\n+\n+} // namespace TokenTree\n+\n+#endif /* ! TOKENTREE_H */"}]}