{"sha": "211ca15cb41d3ae362b6e0b01e47344a9b30d987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjExY2ExNWNiNDFkM2FlMzYyYjZlMGIwMWU0NzM0NGE5YjMwZDk4Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-27T11:18:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-27T11:18:38Z"}, "message": "re PR java/38374 (constant pool references have wrong types in ADDR_EXPR)\n\n2009-04-27  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-cfg.c (remove_useless_stmts): Verify stmts afterwards.\n\t(verify_stmts): Dispatch to gimple/type verification code.\n\t* tree-inline.c (remap_gimple_op_r): Work around C++ FE\n\tissue with call argument types.\n\n\tjava/\n\tPR java/38374\n\t* constants.c (build_constants_constructor): Retain the old\n\tpointer type as valid TYPE_POINTER_TO after patching the\n\ttype of the constant pool decl.\n\nFrom-SVN: r146831", "tree": {"sha": "311268027d8b08e109c2a84ccb88ed8b40680011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/311268027d8b08e109c2a84ccb88ed8b40680011"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/211ca15cb41d3ae362b6e0b01e47344a9b30d987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211ca15cb41d3ae362b6e0b01e47344a9b30d987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211ca15cb41d3ae362b6e0b01e47344a9b30d987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211ca15cb41d3ae362b6e0b01e47344a9b30d987/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fca5f3d11ce7bc4c2c1b302217d0a4247f2596fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca5f3d11ce7bc4c2c1b302217d0a4247f2596fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca5f3d11ce7bc4c2c1b302217d0a4247f2596fd"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "74160c48b0a4eaa4e11247222c53c9b6725e4ab1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=211ca15cb41d3ae362b6e0b01e47344a9b30d987", "patch": "@@ -1,3 +1,10 @@\n+2009-04-27  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (remove_useless_stmts): Verify stmts afterwards.\n+\t(verify_stmts): Dispatch to gimple/type verification code.\n+\t* tree-inline.c (remap_gimple_op_r): Work around C++ FE\n+\tissue with call argument types.\n+\n 2009-04-27  Michael Matz  <matz@suse.de>\n \n \t* tree-into-ssa.c (regs_to_rename, mem_syms_to_rename): Remove."}, {"sha": "4f7fc4117b6688b3aa29d692cc7e84c8c19287df", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=211ca15cb41d3ae362b6e0b01e47344a9b30d987", "patch": "@@ -1,3 +1,10 @@\n+2009-04-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR java/38374\n+\t* constants.c (build_constants_constructor): Retain the old\n+\tpointer type as valid TYPE_POINTER_TO after patching the\n+\ttype of the constant pool decl.\n+\n 2009-04-24  Ian Lance Taylor  <iant@google.com>\n \n \t* jcf-parse.c (handle_constant): Add cast to enum type."}, {"sha": "70d628b4c5aba06abafa84ba6599c8ee4a421911", "filename": "gcc/java/constants.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Fjava%2Fconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Fjava%2Fconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconstants.c?ref=211ca15cb41d3ae362b6e0b01e47344a9b30d987", "patch": "@@ -557,13 +557,22 @@ build_constants_constructor (void)\n       tree data_decl, tags_decl, tags_type;\n       tree max_index = build_int_cst (sizetype, outgoing_cpool->count - 1);\n       tree index_type = build_index_type (max_index);\n+      tree tem;\n \n       /* Add dummy 0'th element of constant pool. */\n       tags_list = tree_cons (NULL_TREE, get_tag_node (0), tags_list);\n       data_list = tree_cons (NULL_TREE, null_pointer_node, data_list);\n   \n+      /* Change the type of the decl to have the proper array size.\n+         ???  Make sure to transition the old type-pointer-to list to this\n+\t new type to not invalidate all build address expressions.  */\n       data_decl = build_constant_data_ref (false);\n+      tem = TYPE_POINTER_TO (TREE_TYPE (data_decl));\n+      if (!tem)\n+\ttem = build_pointer_type (TREE_TYPE (data_decl));\n+      TYPE_POINTER_TO (TREE_TYPE (data_decl)) = NULL_TREE;\n       TREE_TYPE (data_decl) = build_array_type (ptr_type_node, index_type);\n+      TYPE_POINTER_TO (TREE_TYPE (data_decl)) = tem;\n       DECL_INITIAL (data_decl) = build_constructor_from_list\n \t\t\t\t  (TREE_TYPE (data_decl), data_list);\n       DECL_SIZE (data_decl) = TYPE_SIZE (TREE_TYPE (data_decl));"}, {"sha": "78f82a279bc3b9acab225803f63558c65cf47bf4", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=211ca15cb41d3ae362b6e0b01e47344a9b30d987", "patch": "@@ -2084,6 +2084,11 @@ remove_useless_stmts (void)\n       remove_useless_stmts_1 (&gsi, &data);\n     }\n   while (data.repeat);\n+\n+#ifdef ENABLE_TYPES_CHECKING\n+  verify_types_in_gimple_seq (gimple_body (current_function_decl));\n+#endif\n+\n   return 0;\n }\n \n@@ -4313,6 +4318,14 @@ verify_stmts (void)\n \t\t  err |= true;\n \t\t}\n \t    }\n+\n+#ifdef ENABLE_TYPES_CHECKING\n+\t  if (verify_gimple_phi (phi))\n+\t    {\n+\t      debug_gimple_stmt (phi);\n+\t      err |= true;\n+\t    }\n+#endif\n \t}\n \n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); )\n@@ -4349,6 +4362,14 @@ verify_stmts (void)\n \t    }\n \n \t  err |= verify_stmt (&gsi);\n+\n+#ifdef ENABLE_TYPES_CHECKING\n+\t  if (verify_types_in_gimple_stmt (gsi_stmt (gsi)))\n+\t    {\n+\t      debug_gimple_stmt (stmt);\n+\t      err |= true;\n+\t    }\n+#endif\n \t  addr = walk_gimple_op (gsi_stmt (gsi), verify_node_sharing, &wi);\n \t  if (addr)\n \t    {"}, {"sha": "b134ae53d1586b098e2b2cf55c659f8bccb2cf88", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211ca15cb41d3ae362b6e0b01e47344a9b30d987/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=211ca15cb41d3ae362b6e0b01e47344a9b30d987", "patch": "@@ -705,6 +705,13 @@ remap_gimple_op_r (tree *tp, int *walk_subtrees, void *data)\n       gcc_assert (new_decl);\n       /* Replace this variable with the copy.  */\n       STRIP_TYPE_NOPS (new_decl);\n+      /* ???  The C++ frontend uses void * pointer zero to initialize\n+         any other type.  This confuses the middle-end type verification.\n+\t As cloned bodies do not go through gimplification again the fixup\n+\t there doesn't trigger.  */\n+      if (TREE_CODE (new_decl) == INTEGER_CST\n+\t  && !useless_type_conversion_p (TREE_TYPE (*tp), TREE_TYPE (new_decl)))\n+\tnew_decl = fold_convert (TREE_TYPE (*tp), new_decl);\n       *tp = new_decl;\n       *walk_subtrees = 0;\n     }"}]}