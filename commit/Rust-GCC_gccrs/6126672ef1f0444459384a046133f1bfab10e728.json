{"sha": "6126672ef1f0444459384a046133f1bfab10e728", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEyNjY3MmVmMWYwNDQ0NDU5Mzg0YTA0NjEzM2YxYmZhYjEwZTcyOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-04-22T12:41:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-22T12:41:14Z"}, "message": "re PR target/29096 (faster _mm_cvtpi32x2_ps for xmmintrin.h)\n\n\tPR target/29096\n\t* config/i386/xmmintrin.h (_mm_cvtpi16_ps): Rearrange calls to\n\tbuiltin functions to generate faster code.\n\t(_mm_cvtpu16_ps): Ditto.\n\t(_mm_cvtpi32x2_ps): Ditto.\n\nFrom-SVN: r134558", "tree": {"sha": "4fef4bb972ef64542388158dbedcdd6b87c048df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fef4bb972ef64542388158dbedcdd6b87c048df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6126672ef1f0444459384a046133f1bfab10e728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6126672ef1f0444459384a046133f1bfab10e728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6126672ef1f0444459384a046133f1bfab10e728", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6126672ef1f0444459384a046133f1bfab10e728/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e842d14ec8d365fa4e529600dd20b5140db2bd94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e842d14ec8d365fa4e529600dd20b5140db2bd94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e842d14ec8d365fa4e529600dd20b5140db2bd94"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "d26292e91b63cfa0ee976cb8e848019424f680b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6126672ef1f0444459384a046133f1bfab10e728/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6126672ef1f0444459384a046133f1bfab10e728/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6126672ef1f0444459384a046133f1bfab10e728", "patch": "@@ -1,3 +1,11 @@\n+2008-04-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/29096\n+\t* config/i386/xmmintrin.h (_mm_cvtpi16_ps): Rearrange calls to\n+\tbuiltin functions to generate faster code.\n+\t(_mm_cvtpu16_ps): Ditto.\n+\t(_mm_cvtpi32x2_ps): Ditto.\n+\n 2008-04-22  Nick Clifton  <nickc@redhat.com>\n \n \t* common.opt (ftree-loop-distribution): Add Optimization"}, {"sha": "fcfdaf98915202b102a92b6d4c39d74a1c5fec26", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6126672ef1f0444459384a046133f1bfab10e728/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6126672ef1f0444459384a046133f1bfab10e728/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=6126672ef1f0444459384a046133f1bfab10e728", "patch": "@@ -621,7 +621,7 @@ _mm_cvtpi16_ps (__m64 __A)\n {\n   __v4hi __sign;\n   __v2si __hisi, __losi;\n-  __v4sf __r;\n+  __v4sf __zero, __ra, __rb;\n \n   /* This comparison against zero gives us a mask that can be used to\n      fill in the missing sign bits in the unpack operations below, so\n@@ -633,32 +633,30 @@ _mm_cvtpi16_ps (__m64 __A)\n   __losi = (__v2si) __builtin_ia32_punpcklwd ((__v4hi)__A, __sign);\n \n   /* Convert the doublewords to floating point two at a time.  */\n-  __r = (__v4sf) _mm_setzero_ps ();\n-  __r = __builtin_ia32_cvtpi2ps (__r, __hisi);\n-  __r = __builtin_ia32_movlhps (__r, __r);\n-  __r = __builtin_ia32_cvtpi2ps (__r, __losi);\n+  __zero = (__v4sf) _mm_setzero_ps ();\n+  __ra = __builtin_ia32_cvtpi2ps (__zero, __hisi);\n+  __rb = __builtin_ia32_cvtpi2ps (__ra, __losi);\n \n-  return (__m128) __r;\n+  return (__m128) __builtin_ia32_movlhps (__ra, __rb);\n }\n \n /* Convert the four unsigned 16-bit values in A to SPFP form.  */\n extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_cvtpu16_ps (__m64 __A)\n {\n   __v2si __hisi, __losi;\n-  __v4sf __r;\n+  __v4sf __zero, __ra, __rb;\n \n   /* Convert the four words to doublewords.  */\n   __hisi = (__v2si) __builtin_ia32_punpckhwd ((__v4hi)__A, (__v4hi)0LL);\n   __losi = (__v2si) __builtin_ia32_punpcklwd ((__v4hi)__A, (__v4hi)0LL);\n \n   /* Convert the doublewords to floating point two at a time.  */\n-  __r = (__v4sf) _mm_setzero_ps ();\n-  __r = __builtin_ia32_cvtpi2ps (__r, __hisi);\n-  __r = __builtin_ia32_movlhps (__r, __r);\n-  __r = __builtin_ia32_cvtpi2ps (__r, __losi);\n+  __zero = (__v4sf) _mm_setzero_ps ();\n+  __ra = __builtin_ia32_cvtpi2ps (__zero, __hisi);\n+  __rb = __builtin_ia32_cvtpi2ps (__ra, __losi);\n \n-  return (__m128) __r;\n+  return (__m128) __builtin_ia32_movlhps (__ra, __rb);\n }\n \n /* Convert the low four signed 8-bit values in A to SPFP form.  */\n@@ -692,7 +690,7 @@ _mm_cvtpi32x2_ps(__m64 __A, __m64 __B)\n {\n   __v4sf __zero = (__v4sf) _mm_setzero_ps ();\n   __v4sf __sfa = __builtin_ia32_cvtpi2ps (__zero, (__v2si)__A);\n-  __v4sf __sfb = __builtin_ia32_cvtpi2ps (__zero, (__v2si)__B);\n+  __v4sf __sfb = __builtin_ia32_cvtpi2ps (__sfa, (__v2si)__B);\n   return (__m128) __builtin_ia32_movlhps (__sfa, __sfb);\n }\n "}]}