{"sha": "58182de35798c4aaeaf0b01a8fe09d01542e70eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgxODJkZTM1Nzk4YzRhYWVhZjBiMDFhOGZlMDlkMDE1NDJlNzBlYg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-11-01T05:28:41Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-11-01T05:28:41Z"}, "message": "In gcc/: PR 23067\n\nIn gcc/:\n\tPR 23067\n\t* c-decl.c (start_struct): Don't create self-containing\n\tstructures.\n\t* config/rs6000/rs6000.c (darwin_rs6000_special_round_type_align):\n\tNew.\n\t* config/rs6000/rs6000-protos.h\n\t(darwin_rs6000_special_round_type_align): New.\n\t* config/rs6000/darwin.h (ADJUST_FIELD_ALIGN): Rewrite.\n\t(ROUND_TYPE_ALIGN): Use darwin_rs6000_special_round_type_align.\nIn gcc/testsuite/:\n\tPR 23067\n\t* gcc.target/powerpc/darwin-abi-3.c: Remove XFAIL.\n\t* gcc.target/powerpc/darwin-abi-6.c: Remove XFAIL.\n\t* gcc.target/powerpc/darwin-abi-7.c: Remove XFAIL.\n\t* gcc.target/powerpc/darwin-abi-8.c: Remove XFAIL.\n\t* gcc.target/powerpc/darwin-abi-9.c: Remove XFAIL.\n\t* gcc.target/powerpc/darwin-abi-10.c: Remove XFAIL.\n\t* gcc.target/powerpc/darwin-abi-11.c: Remove XFAIL.\nIn libobjc/:\n\t* encoding.c (darwin_rs6000_special_round_type_align): New.\nIn libffi/:\n\t* src/powerpc/ffi_darwin.c (darwin_adjust_aggregate_sizes): New.\n\t(ffi_prep_cif_machdep): Call darwin_adjust_aggregate_sizes for\n\tDarwin.\n\t* testsuite/libffi.call/nested_struct4.c: Remove Darwin XFAIL.\n\t* testsuite/libffi.call/nested_struct6.c: Remove Darwin XFAIL.\n\nFrom-SVN: r118365", "tree": {"sha": "74f939bf9675730feae0078a642eb4da864c5ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f939bf9675730feae0078a642eb4da864c5ce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58182de35798c4aaeaf0b01a8fe09d01542e70eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58182de35798c4aaeaf0b01a8fe09d01542e70eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58182de35798c4aaeaf0b01a8fe09d01542e70eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58182de35798c4aaeaf0b01a8fe09d01542e70eb/comments", "author": null, "committer": null, "parents": [{"sha": "0e7e09dc1ea764c04262a1d3d2adba77a73bdc7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e7e09dc1ea764c04262a1d3d2adba77a73bdc7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e7e09dc1ea764c04262a1d3d2adba77a73bdc7e"}], "stats": {"total": 184, "additions": 151, "deletions": 33}, "files": [{"sha": "5ad5fb9a8877928c1bd9d6e1c5bd640eea77977a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,3 +1,15 @@\n+2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR 23067\n+\t* c-decl.c (start_struct): Don't create self-containing\n+\tstructures.\n+\t* config/rs6000/rs6000.c (darwin_rs6000_special_round_type_align):\n+\tNew.\n+\t* config/rs6000/rs6000-protos.h\n+\t(darwin_rs6000_special_round_type_align): New.\n+\t* config/rs6000/darwin.h (ADJUST_FIELD_ALIGN): Rewrite.\n+\t(ROUND_TYPE_ALIGN): Use darwin_rs6000_special_round_type_align.\n+\n 2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n \n \t* toplev.c (compile_file): Call final_write_globals"}, {"sha": "b8cbdcc2dd14b4bb369a8af53e3774c512fae1a4", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -374,26 +374,28 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Fix for emit_group_load (): force large constants to be pushed via regs.  */\n #define ALWAYS_PUSH_CONSTS_USING_REGS_P\t\t1\n \n-/* This now supports a natural alignment mode */\n-/* Darwin word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n-#define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n-  (TARGET_ALIGN_NATURAL ? (COMPUTED) : \\\n-  (TYPE_MODE (TREE_CODE (TREE_TYPE (FIELD)) == ARRAY_TYPE \\\n-\t      ? get_inner_array_type (FIELD) \\\n-\t      : TREE_TYPE (FIELD)) == DFmode \\\n-   ? MIN ((COMPUTED), 32) : (COMPUTED)))\n+/* Compute field alignment.  This is similar to the version of the\n+   macro in the Apple version of GCC, except that version supports\n+   'mac68k' alignment, and that version uses the computed alignment\n+   always for the first field of a structure.  The first-field\n+   behaviour is dealt with by\n+   darwin_rs6000_special_round_type_align.  */\n+#define ADJUST_FIELD_ALIGN(FIELD, COMPUTED)\t\\\n+  (TARGET_ALIGN_NATURAL ? (COMPUTED)\t\t\\\n+   : (COMPUTED) == 128 ? 128\t\t\t\\\n+   : MIN ((COMPUTED), 32))\n \n /* Darwin increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n-#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\\\n-  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\t\\\n-    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\t\\\n-    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\t\\\n-   && TARGET_ALIGN_NATURAL == 0                         \t\t\\\n-   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\\\n-   : (TREE_CODE (STRUCT) == VECTOR_TYPE\t\t\t\t\t\\\n-      && ALTIVEC_VECTOR_MODE (TYPE_MODE (STRUCT))) \t\t\t\\\n-   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 128)          \t\t\t \\\n+#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t  \\\n+  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\t  \\\n+    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\t  \\\n+    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\t  \\\n+   && TARGET_ALIGN_NATURAL == 0\t\t\t\t\t\t  \\\n+   ? darwin_rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED) \\\n+   : (TREE_CODE (STRUCT) == VECTOR_TYPE\t\t\t\t\t  \\\n+      && ALTIVEC_VECTOR_MODE (TYPE_MODE (STRUCT)))\t\t\t  \\\n+   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 128)\t\t\t\t  \\\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n /* Specify padding for the last element of a block move between"}, {"sha": "3331c1137b725b0f2bbbf19a274568b2be7c5873", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -114,6 +114,8 @@ extern rtx rs6000_machopic_legitimize_pic_address (rtx, enum machine_mode,\n #ifdef TREE_CODE\n extern unsigned int rs6000_special_round_type_align (tree, unsigned int,\n \t\t\t\t\t\t     unsigned int);\n+extern unsigned int darwin_rs6000_special_round_type_align (tree, unsigned int,\n+\t\t\t\t\t\t\t    unsigned int);\n extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t  tree, int, int);\n extern int function_arg_boundary (enum machine_mode, tree);"}, {"sha": "e82b6d595818dc2ac4a8d3b3aaa3c7261c397e46", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -2591,7 +2591,7 @@ invalid_e500_subreg (rtx op, enum machine_mode mode)\n   return false;\n }\n \n-/* Darwin, AIX increases natural record alignment to doubleword if the first\n+/* AIX increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n \n unsigned int\n@@ -2618,6 +2618,37 @@ rs6000_special_round_type_align (tree type, unsigned int computed,\n   return align;\n }\n \n+/* Darwin increases record alignment to the natural alignment of\n+   the first field.  */\n+\n+unsigned int\n+darwin_rs6000_special_round_type_align (tree type, unsigned int computed,\n+\t\t\t\t\tunsigned int specified)\n+{\n+  unsigned int align = MAX (computed, specified);\n+\n+  if (TYPE_PACKED (type))\n+    return align;\n+\n+  /* Find the first field, looking down into aggregates.  */\n+  do {\n+    tree field = TYPE_FIELDS (type);\n+    /* Skip all non field decls */\n+    while (field != NULL && TREE_CODE (field) != FIELD_DECL)\n+      field = TREE_CHAIN (field);\n+    if (! field)\n+      break;\n+    type = TREE_TYPE (field);\n+    while (TREE_CODE (type) == ARRAY_TYPE)\n+      type = TREE_TYPE (type);\n+  } while (AGGREGATE_TYPE_P (type));\n+\n+  if (! AGGREGATE_TYPE_P (type) && type != error_mark_node)\n+    align = MAX (align, TYPE_ALIGN (type));\n+\n+  return align;\n+}\n+\n /* Return 1 for an operand in small memory on V.4/eabi.  */\n \n int"}, {"sha": "64115a9c2e9de8d6d296e8b1b3bce790c7340425", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,3 +1,14 @@\n+2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR 23067\n+\t* gcc.target/powerpc/darwin-abi-3.c: Remove XFAIL.\n+\t* gcc.target/powerpc/darwin-abi-6.c: Remove XFAIL.\n+\t* gcc.target/powerpc/darwin-abi-7.c: Remove XFAIL.\n+\t* gcc.target/powerpc/darwin-abi-8.c: Remove XFAIL.\n+\t* gcc.target/powerpc/darwin-abi-9.c: Remove XFAIL.\n+\t* gcc.target/powerpc/darwin-abi-10.c: Remove XFAIL.\n+\t* gcc.target/powerpc/darwin-abi-11.c: Remove XFAIL.\n+\n 2006-10-31  Eric Christopher  <echristo@apple.com>\n \t    Falk Hueffner  <falk@debian.org>\n \n@@ -6,7 +17,7 @@\n \t* gcc.dg/builtin-bswap-3.c: New.\n \t* gcc.dg/builtin-bswap-4.c: New.\n \t* gcc.dg/builtin-bswap-5.c: New.\n-\t* gcc.dg/i386/builtin-bswap-1.c: New.\n+\t* gcc.target/i386/builtin-bswap-1.c: New.\n \n 2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n "}, {"sha": "68540b8a162321892e37c761e756c5582037ec70", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-10.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-10.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-options \"-Wno-long-long\" } */\n \n struct b"}, {"sha": "5d01572a8bafd7835204196134a77a86a87590e7", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-11.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-11.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-options \"-Wno-long-long\" } */\n \n struct A"}, {"sha": "021abc8fe4d3cfc6e410ff1f6d3c6ebc126f25f8", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-3.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-options \"-Wno-long-long\" } */\n struct f\n {"}, {"sha": "1892e15bcee4b9ce715e97da7820ee43aa81c5e8", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-6.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-6.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-options \"-Wno-long-long\" } */\n \n struct a"}, {"sha": "8af61ddacb31d334f74497ff21174ea2d0db344d", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-7.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-7.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-options \"-Wno-long-long\" } */\n \n struct b"}, {"sha": "eac0d12d188a1035353bd0b5dc5b79471194653c", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-8.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n \n struct c\n {"}, {"sha": "fa5bd017fec3072288f58f1cb2dbb8c4390bcc2d", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-abi-9.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-abi-9.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-xfail-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-options \"-Wno-long-long\" } */\n \n struct b"}, {"sha": "a5bdcd27e54b9ff61b163c17b34472badcc1da0c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,3 +1,11 @@\n+2006-10-16  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* src/powerpc/ffi_darwin.c (darwin_adjust_aggregate_sizes): New.\n+\t(ffi_prep_cif_machdep): Call darwin_adjust_aggregate_sizes for\n+\tDarwin.\n+\t* testsuite/libffi.call/nested_struct4.c: Remove Darwin XFAIL.\n+\t* testsuite/libffi.call/nested_struct6.c: Remove Darwin XFAIL.\n+\n 2006-10-10  Paolo Bonzini  <bonzini@gnu.org>\n \t    Sandro Tolaini  <tolaini@libero.it>\n "}, {"sha": "6bc0474e3dbe0abb65d4b2cf359915ae5264453b", "filename": "libffi/src/powerpc/ffi_darwin.c", "status": "modified", "additions": 56, "deletions": 5, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,11 +1,12 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998 Geoffrey Keating\n+   ffi_darwin.c\n \n-   PowerPC Foreign Function Interface\n-\n-   Darwin ABI support (c) 2001 John Hornkvist\n-   AIX ABI support (c) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998 Geoffrey Keating\n+   Copyright (C) 2001 John Hornkvist\n+   Copyright (C) 2002, 2006 Free Software Foundation, Inc.\n \n+   FFI support for Darwin and AIX.\n+   \n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    ``Software''), to deal in the Software without restriction, including\n@@ -225,6 +226,48 @@ void ffi_prep_args(extended_cif *ecif, unsigned *const stack)\n   //FFI_ASSERT(flags & FLAG_4_GPR_ARGUMENTS || intarg_count <= 4);\n }\n \n+/* Adjust the size of S to be correct for Darwin.\n+   On Darwin, the first field of a structure has natural alignment.  */\n+\n+static void\n+darwin_adjust_aggregate_sizes (ffi_type *s)\n+{\n+  int i;\n+\n+  if (s->type != FFI_TYPE_STRUCT)\n+    return;\n+\n+  s->size = 0;\n+  for (i = 0; s->elements[i] != NULL; i++)\n+    {\n+      ffi_type *p;\n+      int align;\n+      \n+      p = s->elements[i];\n+      darwin_adjust_aggregate_sizes (p);\n+      if (i == 0\n+\t  && (p->type == FFI_TYPE_UINT64\n+\t      || p->type == FFI_TYPE_SINT64\n+\t      || p->type == FFI_TYPE_DOUBLE\n+\t      || p->alignment == 8))\n+\talign = 8;\n+      else if (p->alignment == 16 || p->alignment < 4)\n+\talign = p->alignment;\n+      else\n+\talign = 4;\n+      s->size = ALIGN(s->size, align) + p->size;\n+    }\n+  \n+  s->size = ALIGN(s->size, s->alignment);\n+  \n+  if (s->elements[0]->type == FFI_TYPE_UINT64\n+      || s->elements[0]->type == FFI_TYPE_SINT64\n+      || s->elements[0]->type == FFI_TYPE_DOUBLE\n+      || s->elements[0]->alignment == 8)\n+    s->alignment = s->alignment > 8 ? s->alignment : 8;\n+  /* Do not add additional tail padding.  */\n+}\n+\n /* Perform machine dependent cif processing.  */\n ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n {\n@@ -237,8 +280,16 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n   unsigned size_al = 0;\n \n   /* All the machine-independent calculation of cif->bytes will be wrong.\n+     All the calculation of structure sizes will also be wrong.\n      Redo the calculation for DARWIN.  */\n \n+  if (cif->abi == FFI_DARWIN)\n+    {\n+      darwin_adjust_aggregate_sizes (cif->rtype);\n+      for (i = 0; i < cif->nargs; i++)\n+\tdarwin_adjust_aggregate_sizes (cif->arg_types[i]);\n+    }\n+\n   /* Space for the frame pointer, callee's LR, CR, etc, and for\n      the asm's temp regs.  */\n "}, {"sha": "f67b6a95874abebd3675e7c079a3a081aea41cdd", "filename": "libffi/testsuite/libffi.call/nested_struct4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct4.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -6,7 +6,7 @@\n    PR:\t\tPR 25630.\n    Originator:\t<andreast@gcc.gnu.org> 20051010\t */\n \n-/* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* powerpc*-*-darwin* } } */\n+/* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n typedef struct A {"}, {"sha": "8bf737b36f857a2d1636c547eaaad247b877f246", "filename": "libffi/testsuite/libffi.call/nested_struct6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fnested_struct6.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -6,7 +6,7 @@\n    PR:\t\tPR 25630.\n    Originator:\t<andreast@gcc.gnu.org> 20051010\t */\n \n-/* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* powerpc*-*-darwin* } } */\n+/* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n #include \"ffitest.h\"\n \n typedef struct A {"}, {"sha": "dbc79f8eb846805a27ebc626c948def7e67e934d", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -1,3 +1,7 @@\n+2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* encoding.c (darwin_rs6000_special_round_type_align): New.\n+\n 2006-10-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* Makefile.in: Use multi_basedir instead of toplevel_srcdir."}, {"sha": "e65634103aa41c55ff2b903e29ac74513d2a17a4", "filename": "libobjc/encoding.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58182de35798c4aaeaf0b01a8fe09d01542e70eb/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=58182de35798c4aaeaf0b01a8fe09d01542e70eb", "patch": "@@ -120,6 +120,10 @@ static int __attribute__ ((__unused__)) not_target_flags = 0;\n \t\t    : TREE_TYPE (_fields)) == DFmode)\t\t\t\\\n    ? MAX (MAX (COMPUTED, SPECIFIED), 64)\t\t\t\t\\\n    : MAX (COMPUTED, SPECIFIED));})\n+/* FIXME: The word 'fixme' is insufficient to explain the wrong-ness\n+   of this next macro definition.  */\n+#define darwin_rs6000_special_round_type_align(S,C,S2) \\\n+  rs6000_special_round_type_align(S,C,S2)\n \n /*\n   return the size of an object specified by type"}]}