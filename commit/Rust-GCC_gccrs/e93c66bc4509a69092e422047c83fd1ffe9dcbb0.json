{"sha": "e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzYzY2YmM0NTA5YTY5MDkyZTQyMjA0N2M4M2ZkMWZmZTlkY2JiMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-15T08:16:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-15T08:16:08Z"}, "message": "re PR tree-optimization/69117 (wrong code at -O1 -fstrict-aliasing)\n\n2016-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69117\n\t* tree-ssa-sccvn.h (struct vn_ssa_aux): Add info member.\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Save and adjust SSA name info\n\tof the leader conservatively.\n\t(free_scc_vn): Restore original SSA name infos.\n\n\t* gcc.dg/torture/pr69117.c: New testcase.\n\nFrom-SVN: r232401", "tree": {"sha": "33f5020fb384b207315cae72de2656e7575955d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33f5020fb384b207315cae72de2656e7575955d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54e32f9d2fac5e8147c1e266229e838f7b122233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e32f9d2fac5e8147c1e266229e838f7b122233", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e32f9d2fac5e8147c1e266229e838f7b122233"}], "stats": {"total": 120, "additions": 117, "deletions": 3}, "files": [{"sha": "410c893ee61d39a840460efa83f3fca33038965c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "patch": "@@ -1,3 +1,11 @@\n+2016-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69117\n+\t* tree-ssa-sccvn.h (struct vn_ssa_aux): Add info member.\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Save and adjust SSA name info\n+\tof the leader conservatively.\n+\t(free_scc_vn): Restore original SSA name infos.\n+\n 2016-01-14  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/69270"}, {"sha": "52f5b1e643858af7b151d7d789201c6f57caa1ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "patch": "@@ -1,3 +1,8 @@\n+2016-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69117\n+\t* gcc.dg/torture/pr69117.c: New testcase.\n+\n 2015-01-14  Ryan Burn  <contact@rnburn.com>\n \n \tPR c++/69048"}, {"sha": "fbf82c1535687f4599c80709e97f0adf14bbb219", "filename": "gcc/testsuite/gcc.dg/torture/pr69117.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69117.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69117.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69117.c?ref=e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fstrict-aliasing\" } */\n+\n+int a, c, *d = &c, **e = &d, *g = &a;\n+static int ***b, **f = &d;\n+\n+int\n+main ()\n+{\n+  **f = 0;\n+  int ****h = 0;\n+  if (c) \n+    {\n+      *h = &e; \n+      ***b = 0;\n+    }\n+  *e = g;\n+\n+  if (d != &a)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "a6ee501892b1d38bdffab9f3940ff8c15d52b462", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 78, "deletions": 3, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "patch": "@@ -3037,6 +3037,73 @@ set_ssa_val_to (tree from, tree to)\n \t       == get_addr_base_and_unit_offset (TREE_OPERAND (to, 0), &toff))\n \t   && coff == toff))\n     {\n+      /* If we equate two SSA names we have to make the side-band info\n+         of the leader conservative (and remember whatever original value\n+\t was present).  */\n+      if (TREE_CODE (to) == SSA_NAME)\n+\t{\n+\t  if (INTEGRAL_TYPE_P (TREE_TYPE (to))\n+\t      && SSA_NAME_RANGE_INFO (to))\n+\t    {\n+\t      if (SSA_NAME_IS_DEFAULT_DEF (to)\n+\t\t  || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from)),\n+\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (to))))\n+\t\t/* Keep the info from the dominator.  */\n+\t\t;\n+\t      else if (SSA_NAME_IS_DEFAULT_DEF (from)\n+\t\t       || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (to)),\n+\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (from))))\n+\t\t{\n+\t\t  /* Save old info.  */\n+\t\t  if (! VN_INFO (to)->info.range_info)\n+\t\t    VN_INFO (to)->info.range_info = SSA_NAME_RANGE_INFO (to);\n+\t\t  /* Use that from the dominator.  */\n+\t\t  SSA_NAME_RANGE_INFO (to) = SSA_NAME_RANGE_INFO (from);\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* Save old info.  */\n+\t\t  if (! VN_INFO (to)->info.range_info)\n+\t\t    VN_INFO (to)->info.range_info = SSA_NAME_RANGE_INFO (to);\n+\t\t  /* Rather than allocating memory and unioning the info\n+\t\t     just clear it.  */\n+\t\t  SSA_NAME_RANGE_INFO (to) = NULL;\n+\t\t}\n+\t    }\n+\t  else if (POINTER_TYPE_P (TREE_TYPE (to))\n+\t\t   && SSA_NAME_PTR_INFO (to))\n+\t    {\n+\t      if (SSA_NAME_IS_DEFAULT_DEF (to)\n+\t\t  || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from)),\n+\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (to))))\n+\t\t/* Keep the info from the dominator.  */\n+\t\t;\n+\t      else if (SSA_NAME_IS_DEFAULT_DEF (from)\n+\t\t       || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (to)),\n+\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (from))))\n+\t\t{\n+\t\t  /* Save old info.  */\n+\t\t  if (! VN_INFO (to)->info.ptr_info)\n+\t\t    VN_INFO (to)->info.ptr_info = SSA_NAME_PTR_INFO (to);\n+\t\t  /* Use that from the dominator.  */\n+\t\t  SSA_NAME_PTR_INFO (to) = SSA_NAME_PTR_INFO (from);\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* Save old info.  */\n+\t\t  if (! VN_INFO (to)->info.ptr_info)\n+\t\t    VN_INFO (to)->info.ptr_info = SSA_NAME_PTR_INFO (to);\n+\t\t  /* Rather than allocating memory and unioning the info\n+\t\t     just clear it.  */\n+\t\t  SSA_NAME_PTR_INFO (to) = NULL;\n+\t\t}\n+\t    }\n+\t}\n+\n       VN_INFO (from)->valnum = to;\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file, \" (changed)\\n\");\n@@ -4152,9 +4219,17 @@ free_scc_vn (void)\n     {\n       tree name = ssa_name (i);\n       if (name\n-\t  && has_VN_INFO (name)\n-\t  && VN_INFO (name)->needs_insertion)\n-\trelease_ssa_name (name);\n+\t  && has_VN_INFO (name))\n+\t{\n+\t  if (VN_INFO (name)->needs_insertion)\n+\t    release_ssa_name (name);\n+\t  else if (POINTER_TYPE_P (TREE_TYPE (name))\n+\t\t   && VN_INFO (name)->info.ptr_info)\n+\t    SSA_NAME_PTR_INFO (name) = VN_INFO (name)->info.ptr_info;\n+\t  else if (INTEGRAL_TYPE_P (TREE_TYPE (name))\n+\t\t   && VN_INFO (name)->info.range_info)\n+\t    SSA_NAME_RANGE_INFO (name) = VN_INFO (name)->info.range_info;\n+\t}\n     }\n   obstack_free (&vn_ssa_aux_obstack, NULL);\n   vn_ssa_aux_table.release ();"}, {"sha": "d94bc1c095055999be97fde8a6db9b40908f3acb", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e93c66bc4509a69092e422047c83fd1ffe9dcbb0/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=e93c66bc4509a69092e422047c83fd1ffe9dcbb0", "patch": "@@ -169,6 +169,9 @@ typedef struct vn_ssa_aux\n   /* Statements to insert if needs_insertion is true.  */\n   gimple_seq expr;\n \n+  /* Saved SSA name info.  */\n+  tree_ssa_name::ssa_name_info_type info;\n+\n   /* Unique identifier that all expressions with the same value have. */\n   unsigned int value_id;\n "}]}