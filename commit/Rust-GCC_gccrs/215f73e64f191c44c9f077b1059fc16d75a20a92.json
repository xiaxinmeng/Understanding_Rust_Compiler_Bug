{"sha": "215f73e64f191c44c9f077b1059fc16d75a20a92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE1ZjczZTY0ZjE5MWM0NGM5ZjA3N2IxMDU5ZmMxNmQ3NWEyMGE5Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-08-28T16:31:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-08-28T16:31:41Z"}, "message": "re PR target/58067 (ICE in GFortran recog.c:2158)\n\n\tPR target/58067\n\t* config/i386/i386.md (*tls_global_dynamic_64_largepic): New insn.\n\t(*tls_local_dynamic_base_64_largepic): Likewise.\n\t(tls_global_dynamic_64_<mode>, tls_local_dynamic_base_64_<mode>):\n\tRemove predicate from call operand.\n\t* config/i386/i386.c (ix86_tls_get_addr): For -mcmodel=large -fpic\n\treturn sum of pic_offset_table_rtx and UNSPEC_PLTOFF of the symbol.\n\nFrom-SVN: r202055", "tree": {"sha": "938a859d8f1bb66426fc941c87efe0e753056516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/938a859d8f1bb66426fc941c87efe0e753056516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/215f73e64f191c44c9f077b1059fc16d75a20a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215f73e64f191c44c9f077b1059fc16d75a20a92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/215f73e64f191c44c9f077b1059fc16d75a20a92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215f73e64f191c44c9f077b1059fc16d75a20a92/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34554d1a8ff28d42caf020a4e68982458fc9ad93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34554d1a8ff28d42caf020a4e68982458fc9ad93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34554d1a8ff28d42caf020a4e68982458fc9ad93"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "03577ecf93bfa7f83de38f1558f6ec96eb6fc6ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/215f73e64f191c44c9f077b1059fc16d75a20a92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/215f73e64f191c44c9f077b1059fc16d75a20a92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=215f73e64f191c44c9f077b1059fc16d75a20a92", "patch": "@@ -1,3 +1,13 @@\n+2013-08-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/58067\n+\t* config/i386/i386.md (*tls_global_dynamic_64_largepic): New insn.\n+\t(*tls_local_dynamic_base_64_largepic): Likewise.\n+\t(tls_global_dynamic_64_<mode>, tls_local_dynamic_base_64_<mode>):\n+\tRemove predicate from call operand.\n+\t* config/i386/i386.c (ix86_tls_get_addr): For -mcmodel=large -fpic\n+\treturn sum of pic_offset_table_rtx and UNSPEC_PLTOFF of the symbol.\n+\n 2013-08-28  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadedge.c (thread_around_empty_block): Remove"}, {"sha": "a8d70bc49b3dd00e769c7d590cfe6630b17871b0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/215f73e64f191c44c9f077b1059fc16d75a20a92/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/215f73e64f191c44c9f077b1059fc16d75a20a92/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=215f73e64f191c44c9f077b1059fc16d75a20a92", "patch": "@@ -13048,6 +13048,14 @@ ix86_tls_get_addr (void)\n       ix86_tls_symbol = gen_rtx_SYMBOL_REF (Pmode, sym);\n     }\n \n+  if (ix86_cmodel == CM_LARGE_PIC && !TARGET_PECOFF)\n+    {\n+      rtx unspec = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, ix86_tls_symbol),\n+\t\t\t\t   UNSPEC_PLTOFF);\n+      return gen_rtx_PLUS (Pmode, pic_offset_table_rtx,\n+\t\t\t   gen_rtx_CONST (Pmode, unspec));\n+    }\n+\n   return ix86_tls_symbol;\n }\n "}, {"sha": "3307b081aaa0ce6c83561776fbc453cc22a610e1", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/215f73e64f191c44c9f077b1059fc16d75a20a92/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/215f73e64f191c44c9f077b1059fc16d75a20a92/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=215f73e64f191c44c9f077b1059fc16d75a20a92", "patch": "@@ -12397,11 +12397,33 @@\n    (set (attr \"length\")\n \t(symbol_ref \"TARGET_X32 ? 15 : 16\"))])\n \n+(define_insn \"*tls_global_dynamic_64_largepic\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n+\t(call:DI\n+\t (mem:QI (plus:DI (match_operand:DI 2 \"register_operand\" \"b\")\n+\t\t\t  (match_operand:DI 3 \"immediate_operand\" \"i\")))\n+\t (match_operand 4)))\n+   (unspec:DI [(match_operand 1 \"tls_symbolic_operand\")]\n+\t     UNSPEC_TLS_GD)]\n+  \"TARGET_64BIT && ix86_cmodel == CM_LARGE_PIC && !TARGET_PECOFF\n+   && GET_CODE (operands[3]) == CONST\n+   && GET_CODE (XEXP (operands[3], 0)) == UNSPEC\n+   && XINT (XEXP (operands[3], 0), 1) == UNSPEC_PLTOFF\"\n+{\n+  output_asm_insn\n+    (\"lea{q}\\t{%E1@tlsgd(%%rip), %%rdi|rdi, %E1@tlsgd[rip]}\", operands);\n+  output_asm_insn (\"movabs{q}\\t{%3, %%rax|rax, %3}\", operands);\n+  output_asm_insn (\"add{q}\\t{%2, %%rax|rax, %2}\", operands);\n+  return \"call\\t{*%%rax|rax}\";\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"22\")])\n+\n (define_expand \"tls_global_dynamic_64_<mode>\"\n   [(parallel\n     [(set (match_operand:P 0 \"register_operand\")\n \t  (call:P\n-\t   (mem:QI (match_operand 2 \"constant_call_address_operand\"))\n+\t   (mem:QI (match_operand 2))\n \t   (const_int 0)))\n      (unspec:P [(match_operand 1 \"tls_symbolic_operand\")]\n \t       UNSPEC_TLS_GD)])]\n@@ -12459,11 +12481,32 @@\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"12\")])\n \n+(define_insn \"*tls_local_dynamic_base_64_largepic\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n+\t(call:DI\n+\t (mem:QI (plus:DI (match_operand:DI 1 \"register_operand\" \"b\")\n+\t\t\t  (match_operand:DI 2 \"immediate_operand\" \"i\")))\n+\t (match_operand 3)))\n+   (unspec:DI [(const_int 0)] UNSPEC_TLS_LD_BASE)]\n+  \"TARGET_64BIT && ix86_cmodel == CM_LARGE_PIC && !TARGET_PECOFF\n+   && GET_CODE (operands[2]) == CONST\n+   && GET_CODE (XEXP (operands[2], 0)) == UNSPEC\n+   && XINT (XEXP (operands[2], 0), 1) == UNSPEC_PLTOFF\"\n+{\n+  output_asm_insn\n+    (\"lea{q}\\t{%&@tlsld(%%rip), %%rdi|rdi, %&@tlsld[rip]}\", operands);\n+  output_asm_insn (\"movabs{q}\\t{%2, %%rax|rax, %2}\", operands);\n+  output_asm_insn (\"add{q}\\t{%1, %%rax|rax, %1}\", operands);\n+  return \"call\\t{*%%rax|rax}\";\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"22\")])\n+\n (define_expand \"tls_local_dynamic_base_64_<mode>\"\n   [(parallel\n      [(set (match_operand:P 0 \"register_operand\")\n \t   (call:P\n-\t    (mem:QI (match_operand 1 \"constant_call_address_operand\"))\n+\t    (mem:QI (match_operand 1))\n \t    (const_int 0)))\n       (unspec:P [(const_int 0)] UNSPEC_TLS_LD_BASE)])]\n   \"TARGET_64BIT\")"}]}