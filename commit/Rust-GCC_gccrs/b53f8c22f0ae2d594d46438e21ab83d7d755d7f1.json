{"sha": "b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUzZjhjMjJmMGFlMmQ1OTRkNDY0MzhlMjFhYjgzZDdkNzU1ZDdmMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-11-04T17:44:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-11-04T17:44:48Z"}, "message": "expr.h (copy_blkmode_from_reg): Delete.\n\n\t* expr.h (copy_blkmode_from_reg): Delete.\n\t* expr.c (copy_blkmode_from_reg): Make static.\n\nFrom-SVN: r241856", "tree": {"sha": "e25cf4226b215348b54a9e954c99911ebe197729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e25cf4226b215348b54a9e954c99911ebe197729"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/comments", "author": null, "committer": null, "parents": [{"sha": "6a4cf4188b2969680fe8e048da2d4a614cfebcc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4cf4188b2969680fe8e048da2d4a614cfebcc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4cf4188b2969680fe8e048da2d4a614cfebcc5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f40070843f57e271675426dea82fb895c33c6bb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "patch": "@@ -1,3 +1,8 @@\n+2016-11-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* expr.h (copy_blkmode_from_reg): Delete.\n+\t* expr.c (copy_blkmode_from_reg): Make static.\n+\n 2016-11-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* defaults.h (LOAD_EXTEND_OP): Define if not already defined."}, {"sha": "e925fcad8349c58b8cabe726d0167534f7938a7b", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "patch": "@@ -2591,7 +2591,7 @@ maybe_emit_group_store (rtx x, tree type)\n \n    This is used on targets that return BLKmode values in registers.  */\n \n-void\n+static void\n copy_blkmode_from_reg (rtx target, rtx srcreg, tree type)\n {\n   unsigned HOST_WIDE_INT bytes = int_size_in_bytes (type);"}, {"sha": "558721d7d8a0d0c631e6ee89a0bb809c0a4a100a", "filename": "gcc/expr.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53f8c22f0ae2d594d46438e21ab83d7d755d7f1/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=b53f8c22f0ae2d594d46438e21ab83d7d755d7f1", "patch": "@@ -146,9 +146,6 @@ extern void emit_group_store (rtx, rtx, tree, int);\n \n extern rtx maybe_emit_group_store (rtx, tree);\n \n-/* Copy BLKmode object from a set of registers.  */\n-extern void copy_blkmode_from_reg (rtx, rtx, tree);\n-\n /* Mark REG as holding a parameter for the next CALL_INSN.\n    Mode is TYPE_MODE of the non-promoted parameter, or VOIDmode.  */\n extern void use_reg_mode (rtx *, rtx, machine_mode);"}]}