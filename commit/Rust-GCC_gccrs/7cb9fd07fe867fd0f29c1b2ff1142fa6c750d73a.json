{"sha": "7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NiOWZkMDdmZTg2N2ZkMGYyOWMxYjJmZjExNDJmYTZjNzUwZDczYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-01-11T11:46:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-01-11T11:46:21Z"}, "message": "Makefile.tpl (BOOT_ADAFLAGS): Remove -gnata.\n\n\t* Makefile.tpl (BOOT_ADAFLAGS): Remove -gnata.\n\t* Makefile.in: Regenerate.\ngcc/\n\t* configure.ac (Tree checking): Set TREECHECKING to yes if enabled.\n\tSubstitute TREECHECKING.\n\t* configure: Regenerate.\n\t* Makefile.in (TREECHECKING): New.\ngcc/ada/\n\t* gcc-interface/Make-lang.in (COMMON_ADAFLAGS): Remove -gnata.\n\t(CHECKING_ADAFLAGS): New.\n\t(ALL_ADAFLAGS): Include CHECKING_ADAFLAGS.\n\nFrom-SVN: r195104", "tree": {"sha": "53024f967ba745e5434dd0f0cb402d262cc2f6c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53024f967ba745e5434dd0f0cb402d262cc2f6c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/comments", "author": null, "committer": null, "parents": [{"sha": "c7ab25306dd8672e44b23414ebd2cf590c9fa63e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ab25306dd8672e44b23414ebd2cf590c9fa63e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ab25306dd8672e44b23414ebd2cf590c9fa63e"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "db450e820bf78ec54a294fddebd21d5aa7c70cd5", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -1,3 +1,8 @@\n+2013-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* Makefile.tpl (BOOT_ADAFLAGS): Remove -gnata.\n+\t* Makefile.in: Regenerate.\n+\n 2013-01-10  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* MAINTAINERS (arc): Add new port maintainership for myself."}, {"sha": "a2ce3545ec0f6b1f1554493c82491a5185220eb6", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -364,7 +364,7 @@ BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n # here so that they can be overridden by Makefile fragments.\n BOOT_CFLAGS= -g -O2\n BOOT_LDFLAGS=\n-BOOT_ADAFLAGS=-gnatpg -gnata\n+BOOT_ADAFLAGS= -gnatpg\n \n AWK = @AWK@\n SED = @SED@"}, {"sha": "3233a788d8d3c012263d856fd41770e8920ae6f4", "filename": "Makefile.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -367,7 +367,7 @@ BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n # here so that they can be overridden by Makefile fragments.\n BOOT_CFLAGS= -g -O2\n BOOT_LDFLAGS=\n-BOOT_ADAFLAGS=-gnatpg -gnata\n+BOOT_ADAFLAGS= -gnatpg\n \n AWK = @AWK@\n SED = @SED@"}, {"sha": "c33dba772490e27c137b6760b56230fc1478d74c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -1,3 +1,10 @@\n+2013-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.ac (Tree checking): Set TREECHECKING to yes if enabled.\n+\tSubstitute TREECHECKING.\n+\t* configure: Regenerate.\n+\t* Makefile.in (TREECHECKING): New.\n+\n 2012-01-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44061"}, {"sha": "1ef6ee11025141ae647dd2364816a8b4c59e33ba", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -1487,6 +1487,10 @@ ALL_HOST_OBJS = $(ALL_HOST_FRONTEND_OBJS) $(ALL_HOST_BACKEND_OBJS)\n BACKEND = libbackend.a main.o @TREEBROWSER@ libcommon-target.a libcommon.a \\\n \t$(CPPLIB) $(LIBDECNUMBER)\n \n+# This is defined to \"yes\" if Tree checking is enabled, which roughly means\n+# front-end checking.\n+TREECHECKING = @TREECHECKING@\n+\n MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n  insn-attr.h insn-attr-common.h insn-attrtab.c insn-dfatab.c \\"}, {"sha": "daf50efd5e4962496aeea57eafa4baea73cc9c99", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -1,3 +1,9 @@\n+2013-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in (COMMON_ADAFLAGS): Remove -gnata.\n+\t(CHECKING_ADAFLAGS): New.\n+\t(ALL_ADAFLAGS): Include CHECKING_ADAFLAGS.\n+\n 2013-01-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/config-lang.in (boot_language_boot_flags): Delete."}, {"sha": "72c0f5d84909a1b3f156a89d27a9b28bd8396ac8", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -45,7 +45,12 @@ RMDIR = rm -rf\n \f\n \n # Extra flags to pass to recursive makes.\n-COMMON_ADAFLAGS= -gnatpg -gnata\n+COMMON_ADAFLAGS= -gnatpg\n+ifeq ($(TREECHECKING),)\n+CHECKING_ADAFLAGS=\n+else\n+CHECKING_ADAFLAGS= -gnata\n+endif\n WARN_ADAFLAGS= -W -Wall\n \n # For native builds, the base compiler might be old and we need to arrange for\n@@ -59,7 +64,8 @@ else\n ADAFLAGS= $(COMMON_ADAFLAGS)\n endif\n \n-ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS) $(WARN_ADAFLAGS)\n+ALL_ADAFLAGS = \\\n+  $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS) $(CHECKING_ADAFLAGS) $(WARN_ADAFLAGS)\n FORCE_DEBUG_ADAFLAGS = -g\n ADA_CFLAGS =\n ADA_INCLUDES = -nostdinc -I- -I. -Iada -I$(srcdir)/ada -I$(srcdir)/ada/gcc-interface"}, {"sha": "10ff5aeb43391be071d20c7b112dbeed692d7135", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -773,6 +773,7 @@ coverage_flags\n valgrind_command\n valgrind_path_defines\n valgrind_path\n+TREECHECKING\n TREEBROWSER\n nocommon_flag\n noexception_flags\n@@ -6786,13 +6787,15 @@ if test x$ac_tree_checking != x ; then\n $as_echo \"#define ENABLE_TREE_CHECKING 1\" >>confdefs.h\n \n   TREEBROWSER=tree-browser.o\n+  TREECHECKING=yes\n fi\n if test x$ac_types_checking != x ; then\n \n $as_echo \"#define ENABLE_TYPES_CHECKING 1\" >>confdefs.h\n \n fi\n \n+\n if test x$ac_rtl_checking != x ; then\n \n $as_echo \"#define ENABLE_RTL_CHECKING 1\" >>confdefs.h\n@@ -17822,7 +17825,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17825 \"configure\"\n+#line 17828 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17928,7 +17931,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17931 \"configure\"\n+#line 17934 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "3703a20b075b4c548806122f4ee59c726ec1f233", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7cb9fd07fe867fd0f29c1b2ff1142fa6c750d73a", "patch": "@@ -470,6 +470,7 @@ if test x$ac_tree_checking != x ; then\n    routines will also be enabled by this option.\n    ])\n   TREEBROWSER=tree-browser.o\n+  TREECHECKING=yes\n fi\n if test x$ac_types_checking != x ; then\n   AC_DEFINE(ENABLE_TYPES_CHECKING, 1,\n@@ -478,6 +479,7 @@ if test x$ac_types_checking != x ; then\n    ])\n fi\n AC_SUBST(TREEBROWSER)\n+AC_SUBST(TREECHECKING)\n if test x$ac_rtl_checking != x ; then\n   AC_DEFINE(ENABLE_RTL_CHECKING, 1,\n [Define if you want all operations on RTL (the basic data structure"}]}