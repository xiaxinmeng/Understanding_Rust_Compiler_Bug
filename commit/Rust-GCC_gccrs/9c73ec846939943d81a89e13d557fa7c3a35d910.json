{"sha": "9c73ec846939943d81a89e13d557fa7c3a35d910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM3M2VjODQ2OTM5OTQzZDgxYTg5ZTEzZDU1N2ZhN2MzYTM1ZDkxMA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1999-04-13T18:09:57Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1999-04-13T18:09:57Z"}, "message": "decl2.c (import_export_decl): Because vtables always reference virtual functions...\n\n\t* decl2.c (import_export_decl): Because vtables always reference\n\tvirtual functions, even if they are inlined, don't allow\n\t-fno-implement-inlines to not emit them, instead, emit them with\n\tthe vtable.\n\t* decl.c (start_function): Likewise.\nFixes vtable1.C\n\nFrom-SVN: r26416", "tree": {"sha": "d8df67840e22615efad5a352108e5e1281646f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8df67840e22615efad5a352108e5e1281646f84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c73ec846939943d81a89e13d557fa7c3a35d910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c73ec846939943d81a89e13d557fa7c3a35d910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c73ec846939943d81a89e13d557fa7c3a35d910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c73ec846939943d81a89e13d557fa7c3a35d910/comments", "author": null, "committer": null, "parents": [{"sha": "63a4a903a76197650e672fe559ac654b7c85ec43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a4a903a76197650e672fe559ac654b7c85ec43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a4a903a76197650e672fe559ac654b7c85ec43"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "de3261256dcbc444708371da58c1375db468e028", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c73ec846939943d81a89e13d557fa7c3a35d910", "patch": "@@ -1,3 +1,11 @@\n+1999-04-13  Mike Stump  <mrs@wrs.com>\n+\n+\t* decl2.c (import_export_decl): Because vtables always reference\n+\tvirtual functions, even if they are inlined, don't allow\n+\t-fno-implement-inlines to not emit them, instead, emit them with\n+\tthe vtable.\n+\t* decl.c (start_function): Likewise.\n+\n 1999-04-12  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* cp-tree.h (struct lang_type): Add com_interface."}, {"sha": "70f93d2505922200365f21640c31ec326f62dcc2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9c73ec846939943d81a89e13d557fa7c3a35d910", "patch": "@@ -13260,7 +13260,8 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n \t{\n \t  DECL_EXTERNAL (decl1)\n \t    = (interface_only\n-\t       || (DECL_THIS_INLINE (decl1) && ! flag_implement_inlines));\n+\t       || (DECL_THIS_INLINE (decl1) && ! flag_implement_inlines\n+\t\t   && !DECL_VINDEX (decl1)));\n \n \t  /* For WIN32 we also want to put these in linkonce sections.  */\n \t  maybe_make_one_only (decl1);"}, {"sha": "0ba19fdc8fa898d236520ab0cf5566555524dd3f", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=9c73ec846939943d81a89e13d557fa7c3a35d910", "patch": "@@ -2773,7 +2773,8 @@ import_export_decl (decl)\n \t{\n \t  DECL_NOT_REALLY_EXTERN (decl)\n \t    = ! (CLASSTYPE_INTERFACE_ONLY (ctype)\n-\t\t || (DECL_THIS_INLINE (decl) && ! flag_implement_inlines));\n+\t\t || (DECL_THIS_INLINE (decl) && ! flag_implement_inlines\n+\t\t     && !DECL_VINDEX (decl)));\n \n \t  /* Always make artificials weak.  */\n \t  if (DECL_ARTIFICIAL (decl) && flag_weak)\n@@ -2803,7 +2804,8 @@ import_export_decl (decl)\n \t{\n \t  DECL_NOT_REALLY_EXTERN (decl)\n \t    = ! (CLASSTYPE_INTERFACE_ONLY (ctype)\n-\t\t || (DECL_THIS_INLINE (decl) && ! flag_implement_inlines));\n+\t\t || (DECL_THIS_INLINE (decl) && ! flag_implement_inlines\n+\t\t     && !DECL_VINDEX (decl)));\n \n \t  /* Always make artificials weak.  */\n \t  if (flag_weak)"}, {"sha": "260f93de048a75523fb9fd7a29220a91927692ca", "filename": "gcc/testsuite/g++.old-deja/g++.mike/vtable1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvtable1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c73ec846939943d81a89e13d557fa7c3a35d910/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvtable1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvtable1.C?ref=9c73ec846939943d81a89e13d557fa7c3a35d910", "patch": "@@ -0,0 +1,12 @@\n+// Build don't run:\n+// Special g++ Options: -fno-implement-inlines \n+struct type {\n+  virtual void m1();\n+  virtual void m2() { }\n+};\n+\n+void type::m1() { }\n+\n+int main() {\n+  type t;\n+}"}]}