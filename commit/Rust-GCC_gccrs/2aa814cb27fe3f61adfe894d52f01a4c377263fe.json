{"sha": "2aa814cb27fe3f61adfe894d52f01a4c377263fe", "node_id": "C_kwDOANBUbNoAKDJhYTgxNGNiMjdmZTNmNjFhZGZlODk0ZDUyZjAxYTRjMzc3MjYzZmU", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-10-13T11:48:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-20T10:17:04Z"}, "message": "[Ada] Refine type of a counter function for record delta aggregate\n\ngcc/ada/\n\n\t* sem_aggr.adb (Variant_Depth): Refine type from Integer to\n\tNatural.", "tree": {"sha": "df59411b2dbd0e309d0214eb06045d36ebed6594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df59411b2dbd0e309d0214eb06045d36ebed6594"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aa814cb27fe3f61adfe894d52f01a4c377263fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa814cb27fe3f61adfe894d52f01a4c377263fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aa814cb27fe3f61adfe894d52f01a4c377263fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa814cb27fe3f61adfe894d52f01a4c377263fe/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36e38022125f2f336e5d281fb3e5e66191d21e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e38022125f2f336e5d281fb3e5e66191d21e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e38022125f2f336e5d281fb3e5e66191d21e73"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "e59a0e2ee689535317ed28b5101b13cdadfa1c2e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa814cb27fe3f61adfe894d52f01a4c377263fe/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa814cb27fe3f61adfe894d52f01a4c377263fe/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=2aa814cb27fe3f61adfe894d52f01a4c377263fe", "patch": "@@ -3384,9 +3384,8 @@ package body Sem_Aggr is\n       function Nested_In (V1 : Node_Id; V2 : Node_Id) return Boolean;\n       --  Determine whether variant V1 is within variant V2\n \n-      function Variant_Depth (N : Node_Id) return Integer;\n-      --  Determine the distance of a variant to the enclosing type\n-      --  declaration.\n+      function Variant_Depth (N : Node_Id) return Natural;\n+      --  Determine the distance of a variant to the enclosing type declaration\n \n       --------------------\n       --  Check_Variant --\n@@ -3492,8 +3491,8 @@ package body Sem_Aggr is\n       -- Variant_Depth --\n       -------------------\n \n-      function Variant_Depth (N : Node_Id) return Integer is\n-         Depth : Integer;\n+      function Variant_Depth (N : Node_Id) return Natural is\n+         Depth : Natural;\n          Par   : Node_Id;\n \n       begin"}]}