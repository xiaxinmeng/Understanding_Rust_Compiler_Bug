{"sha": "e375c819ffafb6cf16f528ee7405d873f060dbec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3NWM4MTlmZmFmYjZjZjE2ZjUyOGVlNzQwNWQ4NzNmMDYwZGJlYw==", "commit": {"author": {"name": "Michael Hayes", "email": "mhayes@cygnus.com", "date": "2000-08-25T09:48:47Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-08-25T09:48:47Z"}, "message": "loop.c (prescan_loop): Move checks for NOTE_INSN_LOOP_CONT and NOTE_INSN_LOOP_VTOP to...\n\n\t* loop.c (prescan_loop): Move checks for NOTE_INSN_LOOP_CONT\n\tand NOTE_INSN_LOOP_VTOP to...\n\t(find_and_verify_loops) ...here.\n\nFrom-SVN: r35976", "tree": {"sha": "ac85b2863617120dd3ee22b8f5041a437dac04f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac85b2863617120dd3ee22b8f5041a437dac04f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e375c819ffafb6cf16f528ee7405d873f060dbec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e375c819ffafb6cf16f528ee7405d873f060dbec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e375c819ffafb6cf16f528ee7405d873f060dbec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e375c819ffafb6cf16f528ee7405d873f060dbec/comments", "author": null, "committer": null, "parents": [{"sha": "e403cf292201bc8a8471c7a841edc3f50ec76bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e403cf292201bc8a8471c7a841edc3f50ec76bd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e403cf292201bc8a8471c7a841edc3f50ec76bd6"}], "stats": {"total": 38, "additions": 14, "deletions": 24}, "files": [{"sha": "0c9961e57b04ae181f5af0031d23d2fe0b1bf3c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e375c819ffafb6cf16f528ee7405d873f060dbec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e375c819ffafb6cf16f528ee7405d873f060dbec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e375c819ffafb6cf16f528ee7405d873f060dbec", "patch": "@@ -1,3 +1,9 @@\n+2000-08-26  Michael Hayes  <mhayes@cygnus.com>\n+\n+\t* loop.c (prescan_loop): Move checks for NOTE_INSN_LOOP_CONT\n+\tand NOTE_INSN_LOOP_VTOP to...\n+\t(find_and_verify_loops) ...here.\n+\n Fri Aug 25 04:21:13 2000  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* crtstuff.c (CRT_CALL_STATIC_FUNCTION): Define default."}, {"sha": "dccdcd9fc68c7f48bf17dee338abffda9d8abebb", "filename": "gcc/loop.c", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e375c819ffafb6cf16f528ee7405d873f060dbec/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e375c819ffafb6cf16f528ee7405d873f060dbec/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=e375c819ffafb6cf16f528ee7405d873f060dbec", "patch": "@@ -2396,8 +2396,6 @@ prescan_loop (loop)\n   loop_info->has_volatile = 0;\n   loop_info->has_tablejump = 0;\n   loop_info->has_multiple_exit_targets = 0;\n-  loop->cont = 0;\n-  loop->vtop = 0;\n   loop->level = 1;\n \n   unknown_address_altered = 0;\n@@ -2421,25 +2419,6 @@ prescan_loop (loop)\n \t  else if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END)\n \t    {\n \t      --level;\n-\t      if (level == 0)\n-\t\t{\n-\t\t  end = insn;\n-\t\t  break;\n-\t\t}\n-\t    }\n-\t  else if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_CONT)\n-\t    {\n-\t      if (level == 1)\n-\t\tloop->cont = insn;\n-\t    }\n-\t  else if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_VTOP)\n-\t    {\n-\t      /* If there is a NOTE_INSN_LOOP_VTOP, then this is a for\n-\t\t or while style loop, with a loop exit test at the\n-\t\t start.  Thus, we can assume that the loop condition\n-\t\t was true when the loop was entered.  */\n-\t      if (level == 1)\n-\t\tloop->vtop = insn;\n \t    }\n \t}\n       else if (GET_CODE (insn) == CALL_INSN)\n@@ -2532,7 +2511,7 @@ prescan_loop (loop)\n    and the continue note that is a the destination of a (cond)jump after\n    the continue note.  If there is any (cond)jump between the loop start\n    and what we have so far as LOOP->CONT_DOMINATOR that has a\n-   target between LOOP->DOMINATOR and the continue note, move\n+   target between LOOP->CONT_DOMINATOR and the continue note, move\n    LOOP->CONT_DOMINATOR forward to that label; if a jump's\n    destination cannot be determined, clear LOOP->CONT_DOMINATOR.  */\n \n@@ -2640,6 +2619,11 @@ find_and_verify_loops (f, loops)\n \t  case NOTE_INSN_LOOP_CONT:\n \t    current_loop->cont = insn;\n \t    break;\n+\n+\t  case NOTE_INSN_LOOP_VTOP:\n+\t    current_loop->vtop = insn;\n+\t    break;\n+\n \t  case NOTE_INSN_LOOP_END:\n \t    if (! current_loop)\n \t      abort ();\n@@ -2653,7 +2637,7 @@ find_and_verify_loops (f, loops)\n \t    break;\n \t  }\n       /* If for any loop, this is a jump insn between the NOTE_INSN_LOOP_CONT\n-\t and NOTE_INSN_LOOP_END notes, update loop->dominator.  */\n+\t and NOTE_INSN_LOOP_END notes, update loop->cont_dominator.  */\n       else if (GET_CODE (insn) == JUMP_INSN\n \t       && GET_CODE (PATTERN (insn)) != RETURN\n \t       && current_loop)\n@@ -2670,7 +2654,7 @@ find_and_verify_loops (f, loops)\n \t      if (loop->cont && loop->cont_dominator != const0_rtx)\n \t\t{\n \t\t  /* If the jump destination is not known, invalidate\n-\t\t     loop->const_dominator.  */\n+\t\t     loop->cont_dominator.  */\n \t\t  if (! label)\n \t\t    loop->cont_dominator = const0_rtx;\n \t\t  else"}]}