{"sha": "4851726d28a60d59345e8a8ab06575885d98e74f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg1MTcyNmQyOGE2MGQ1OTM0NWU4YThhYjA2NTc1ODg1ZDk4ZTc0Zg==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-09-24T18:27:31Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-09-24T18:27:31Z"}, "message": "scanasm.exp (make_pattern_printable): New function.\n\n\t* lib/scanasm.exp (make_pattern_printable): New function.\n\t(dg-scan, scan-assembler-times, scan-assembler-dem,\n\tscan-assembler-dem-not): Use it.\n\nFrom-SVN: r152136", "tree": {"sha": "6d7a4b7ad44246d551ba8e6fdfe28dcdb708160d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7a4b7ad44246d551ba8e6fdfe28dcdb708160d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4851726d28a60d59345e8a8ab06575885d98e74f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4851726d28a60d59345e8a8ab06575885d98e74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4851726d28a60d59345e8a8ab06575885d98e74f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4851726d28a60d59345e8a8ab06575885d98e74f/comments", "author": null, "committer": null, "parents": [{"sha": "2d84a33774e1201a09b07eaec60b4e019cb40dd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d84a33774e1201a09b07eaec60b4e019cb40dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d84a33774e1201a09b07eaec60b4e019cb40dd5"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "51993a10b1e09c0838f941ca8ee5cac30442099f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4851726d28a60d59345e8a8ab06575885d98e74f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4851726d28a60d59345e8a8ab06575885d98e74f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4851726d28a60d59345e8a8ab06575885d98e74f", "patch": "@@ -1,3 +1,9 @@\n+2009-09-24  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* lib/scanasm.exp (make_pattern_printable): New function.\n+\t(dg-scan, scan-assembler-times, scan-assembler-dem,\n+\tscan-assembler-dem-not): Use it.\n+\n 2009-09-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/pr12329.c (dg-do): Changed to run."}, {"sha": "abc01b7cc55a9809e1b4d199f711faf4f46f884b", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4851726d28a60d59345e8a8ab06575885d98e74f/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4851726d28a60d59345e8a8ab06575885d98e74f/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=4851726d28a60d59345e8a8ab06575885d98e74f", "patch": "@@ -19,6 +19,11 @@\n \n # Utility for scanning compiler result, invoked via dg-final.\n \n+# Transform newline and similar characters into their escaped form.\n+proc make_pattern_printable { pattern } {\n+    return [string map {\\t \\\\t \\n \\\\n \\r \\\\r \\\\ \\\\\\\\} $pattern]\n+}\n+\n # Scan the OUTPUT_FILE for a pattern.  If it is present and POSITIVE\n # is non-zero, or it is not present and POSITIVE is zero, the test\n # passes.  The ORIG_ARGS is the list of arguments provided by dg-final\n@@ -52,7 +57,7 @@ proc dg-scan { name positive testcase output_file orig_args } {\n     close $fd\n \n     set pattern [lindex $orig_args 0]\n-    set printable_pattern [string map {\\t \\\\t \\n \\\\n \\r \\\\r \\\\ \\\\\\\\} $pattern]\n+    set printable_pattern [make_pattern_printable $pattern]\n \n     set match [regexp -- $pattern $text]\n     if { $match == $positive } {\n@@ -181,10 +186,12 @@ proc scan-assembler-times { args } {\n     set text [read $fd]\n     close $fd\n \n-    if { [llength [regexp -inline -all -- [lindex $args 0] $text]] == [lindex $args 1]} {\n-\tpass \"$testcase scan-assembler-times [lindex $args 0] [lindex $args 1]\"\n+    set pattern [lindex $args 0]\n+    set pp_pattern [make_pattern_printable $pattern]\n+    if { [llength [regexp -inline -all -- $pattern $text]] == [lindex $args 1]} {\n+\tpass \"$testcase scan-assembler-times $pp_pattern [lindex $args 1]\"\n     } else {\n-\tfail \"$testcase scan-assembler-times [lindex $args 0] [lindex $args 1]\"\n+\tfail \"$testcase scan-assembler-times $pp_pattern [lindex $args 1]\"\n     }\n }\n \n@@ -228,10 +235,12 @@ proc scan-assembler-dem { args } {\n     set output [remote_exec host \"$cxxfilt\" \"\" \"$output_file\"]\n     set text [lindex $output 1]\n \n-    if [regexp -- [lindex $args 0] $text] {\n-\tpass \"$testcase scan-assembler-dem [lindex $args 0]\"\n+    set pattern [lindex $args 0]\n+    set pp_pattern [make_pattern_printable $pattern]\n+    if [regexp -- $pattern $text] {\n+\tpass \"$testcase scan-assembler-dem $pp_pattern\"\n     } else {\n-\tfail \"$testcase scan-assembler-dem [lindex $args 0]\"\n+\tfail \"$testcase scan-assembler-dem $pp_pattern\"\n     }\n }\n \n@@ -274,9 +283,11 @@ proc scan-assembler-dem-not { args } {\n     set output [remote_exec host \"$cxxfilt\" \"\" \"$output_file\"]\n     set text [lindex $output 1]\n \n-    if ![regexp -- [lindex $args 0] $text] {\n-\tpass \"$testcase scan-assembler-dem-not [lindex $args 0]\"\n+    set pattern [lindex $args 0]\n+    set pp_pattern [make_pattern_printable $pattern]\n+    if ![regexp -- $pattern $text] {\n+\tpass \"$testcase scan-assembler-dem-not $pp_pattern\"\n     } else {\n-\tfail \"$testcase scan-assembler-dem-not [lindex $args 0]\"\n+\tfail \"$testcase scan-assembler-dem-not $pp_pattern\"\n     }\n }"}]}