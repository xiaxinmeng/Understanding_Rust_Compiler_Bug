{"sha": "ae63a1cc461959bc27a64bb36fe28dbd58f88759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU2M2ExY2M0NjE5NTliYzI3YTY0YmIzNmZlMjhkYmQ1OGY4ODc1OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-02-13T10:25:02Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-02-13T10:25:02Z"}, "message": "re PR libstdc++/11706 (std::pow(T, int) implementation pessimizes code)\n\n2005-02-13  Richard Guenther  <rguenth@gcc.gnu.org>\n\t    Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/11706\n\t* include/c_std/std_cmath.h (pow): Use __builtin_powi[lf]\n\tfor integer overloads.\n\n\t* testsuite/26_numerics/cmath/powi.cc: New.\n\nCo-Authored-By: Paolo Carlini <pcarlini@suse.de>\n\nFrom-SVN: r94982", "tree": {"sha": "534b4c8232e4ec3b8bc9632876d6fdc4732cb00b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/534b4c8232e4ec3b8bc9632876d6fdc4732cb00b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae63a1cc461959bc27a64bb36fe28dbd58f88759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae63a1cc461959bc27a64bb36fe28dbd58f88759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae63a1cc461959bc27a64bb36fe28dbd58f88759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae63a1cc461959bc27a64bb36fe28dbd58f88759/comments", "author": null, "committer": null, "parents": [{"sha": "b8b3c655b01914f3164c267320d6ef16d2d36ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b3c655b01914f3164c267320d6ef16d2d36ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b3c655b01914f3164c267320d6ef16d2d36ac0"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "6d3eea2887d762f08a81a4bdda72d7fe1820defa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae63a1cc461959bc27a64bb36fe28dbd58f88759/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae63a1cc461959bc27a64bb36fe28dbd58f88759/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ae63a1cc461959bc27a64bb36fe28dbd58f88759", "patch": "@@ -1,3 +1,12 @@\n+2005-02-13  Richard Guenther  <rguenth@gcc.gnu.org>\n+\t    Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/11706\n+\t* include/c_std/std_cmath.h (pow): Use __builtin_powi[lf]\n+\tfor integer overloads.\n+\n+\t* testsuite/26_numerics/cmath/powi.cc: New.\n+\n 2005-02-11  Janis Johnson  <janis187@us.ibm.com>\n \n \t* testsuite/26_numerics/complex/13450.cc: Fix XFAIL selector."}, {"sha": "1dd6c732ab1d59c85d323def13d817a459d747c5", "filename": "libstdc++-v3/include/c_std/std_cmath.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae63a1cc461959bc27a64bb36fe28dbd58f88759/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae63a1cc461959bc27a64bb36fe28dbd58f88759/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h?ref=ae63a1cc461959bc27a64bb36fe28dbd58f88759", "patch": "@@ -350,15 +350,15 @@ namespace std\n \n   inline double\n   pow(double __x, int __i)\n-  { return __pow_helper(__x, __i); }\n+  { return __builtin_powi(__x, __i); }\n \n   inline float\n   pow(float __x, int __n)\n-  { return __pow_helper(__x, __n); }\n+  { return __builtin_powif(__x, __n); }\n \n   inline long double\n   pow(long double __x, int __n)\n-  { return __pow_helper(__x, __n); }\n+  { return __builtin_powil(__x, __n); }\n \n   using ::sin;\n "}, {"sha": "588448c3f1378ce3398119e5d6b2bdc4038810a5", "filename": "libstdc++-v3/testsuite/26_numerics/cmath/powi.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae63a1cc461959bc27a64bb36fe28dbd58f88759/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcmath%2Fpowi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae63a1cc461959bc27a64bb36fe28dbd58f88759/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcmath%2Fpowi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcmath%2Fpowi.cc?ref=ae63a1cc461959bc27a64bb36fe28dbd58f88759", "patch": "@@ -0,0 +1,64 @@\n+// 2005-02-13  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2005 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 26.5 C Library\n+\n+#include <cmath>\n+#include <testsuite_hooks.h>\n+\n+template<typename T>\n+  void test01_do()\n+  {\n+    using namespace std;\n+    bool test __attribute__((unused)) = true;\n+    \n+    VERIFY( pow(T(1.0), 0) == T(1.0) );\n+    VERIFY( pow(T(2.0), 0) == T(1.0) );\n+    VERIFY( pow(T(-1.0), 0) == T(1.0) );\n+    VERIFY( pow(T(-4.0), 0) == T(1.0) );\n+\n+    VERIFY( pow(T(1.0), 1) == T(1.0) );\n+    VERIFY( pow(T(2.0), 1) == T(2.0) );\n+    VERIFY( pow(T(-1.0), 1) == T(-1.0) );\n+    VERIFY( pow(T(-4.0), 1) == T(-4.0) );\n+\n+    VERIFY( pow(T(1.0), -1) == T(1.0) / T(1.0) );\n+    VERIFY( pow(T(2.0), -1) == T(1.0) / T(2.0) );\n+    VERIFY( pow(T(-1.0), -1) == T(1.0) / T(-1.0) );\n+    VERIFY( pow(T(-4.0), -1) == T(1.0) / T(-4.0) );\n+\n+    VERIFY( pow(T(1.0), 2) == T(1.0) * T(1.0) );\n+    VERIFY( pow(T(2.0), 2) == T(2.0) * T(2.0) );\n+    VERIFY( pow(T(-1.0), 2) == T(-1.0) * T(-1.0) );\n+    VERIFY( pow(T(-4.0), 2) == T(-4.0) * T(-4.0) );\n+  }\n+\n+void test01()\n+{\n+  test01_do<float>();\n+  test01_do<double>();\n+  test01_do<long double>();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}