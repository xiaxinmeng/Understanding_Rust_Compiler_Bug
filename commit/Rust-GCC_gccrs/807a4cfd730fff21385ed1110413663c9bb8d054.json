{"sha": "807a4cfd730fff21385ed1110413663c9bb8d054", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA3YTRjZmQ3MzBmZmYyMTM4NWVkMTExMDQxMzY2M2M5YmI4ZDA1NA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-18T12:24:57Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-18T12:24:57Z"}, "message": "Connection.java, [...]: Merged copyright text from classpath to make it possible to merge the classes.\n\n2003-10-18  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/protocol/file/Connection.java,\n\tgnu/java/net/protocol/file/Handler.java,\n\tgnu/java/net/protocol/http/Connection.java,\n\tgnu/java/net/protocol/http/Handler.java,\n\tgnu/java/net/protocol/jar/Connection.java,\n\tgnu/java/net/protocol/jar/Handler.java:\n\tMerged copyright text from classpath to make\n\tit possible to merge the classes.\n\nFrom-SVN: r72638", "tree": {"sha": "57f8a39b3e705ea55e93b8abac613e79389669e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57f8a39b3e705ea55e93b8abac613e79389669e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/807a4cfd730fff21385ed1110413663c9bb8d054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807a4cfd730fff21385ed1110413663c9bb8d054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/807a4cfd730fff21385ed1110413663c9bb8d054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807a4cfd730fff21385ed1110413663c9bb8d054/comments", "author": null, "committer": null, "parents": [{"sha": "490ee176e1c37d6a9def586c43019fd9c00900b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490ee176e1c37d6a9def586c43019fd9c00900b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/490ee176e1c37d6a9def586c43019fd9c00900b8"}], "stats": {"total": 376, "additions": 292, "deletions": 84}, "files": [{"sha": "dfe95a6e59bb5a3afffa10ae49cc48a63da209c2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,3 +1,14 @@\n+2003-10-18  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/protocol/file/Connection.java,\n+\tgnu/java/net/protocol/file/Handler.java,\n+\tgnu/java/net/protocol/http/Connection.java,\n+\tgnu/java/net/protocol/http/Handler.java,\n+\tgnu/java/net/protocol/jar/Connection.java,\n+\tgnu/java/net/protocol/jar/Handler.java:\n+\tMerged copyright text from classpath to make\n+\tit possible to merge the classes.\n+\n 2003-10-18  Mark Wielaard  <mark@klomp.org>\n \n \tReported by M.Negovanovic"}, {"sha": "1df5c487c88f8152fc82a7e21b50e397ce0be60a", "filename": "libjava/gnu/java/net/protocol/file/Connection.java", "status": "modified", "additions": 73, "deletions": 33, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,15 +1,45 @@\n-// Connection.java - Implementation of URLConnection for file protocol.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n+/*\n+  FileURLConnection.java -- URLConnection class for \"file\" protocol\n+  Copyright (C) 1998, 1999, 2003 Free Software Foundation, Inc.\n+\n+  This file is part of GNU Classpath.\n+\n+  GNU Classpath is free software; you can redistribute it and/or modify\n+  it under the terms of the GNU General Public License as published by\n+  the Free Software Foundation; either version 2, or (at your option)\n+  any later version.\n+ \n+  GNU Classpath is distributed in the hope that it will be useful, but\n+  WITHOUT ANY WARRANTY; without even the implied warranty of\n+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+  General Public License for more details.\n+\n+  You should have received a copy of the GNU General Public License\n+  along with GNU Classpath; see the file COPYING.  If not, write to the\n+  Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+  02111-1307 USA.\n+\n+  Linking this library statically or dynamically with other modules is\n+  making a combined work based on this library.  Thus, the terms and\n+  conditions of the GNU General Public License cover the whole\n+  combination.\n+\n+  As a special exception, the copyright holders of this library give you\n+  permission to link this library with independent modules to produce an\n+  executable, regardless of the license terms of these independent\n+  modules, and to copy and distribute the resulting executable under\n+  terms of your choice, provided that you also meet, for each linked\n+  independent module, the terms and conditions of the license of that\n+  module.  An independent module is a module which is not derived from\n+  or based on this library.  If you modify this library, you may extend\n+  this exception to your version of the library, but you are not\n+  obligated to do so.  If you do not wish to do so, delete this\n+  exception statement from your version.\n+*/\n package gnu.java.net.protocol.file;\n \n+import java.net.URL;\n+import java.net.URLConnection;\n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n import java.io.File;\n@@ -19,8 +49,6 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.net.ProtocolException;\n-import java.net.URL;\n-import java.net.URLConnection;\n import java.util.Map;\n import java.util.Vector;\n import java.util.Hashtable;\n@@ -30,14 +58,7 @@\n  * @author Warren Levy <warrenl@cygnus.com>\n  * @date April 13, 1999.\n  */\n-\n-/**\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * Status:  Minimal subset of functionality.\n- */\n-\n-class Connection extends URLConnection\n+public class Connection extends URLConnection\n {\n   private Hashtable hdrHash = new Hashtable();\n   private Vector hdrVec = new Vector();\n@@ -48,46 +69,64 @@ class Connection extends URLConnection\n \n   public Connection(URL url)\n   {\n-    super(url);\n+    super (url);\n   }\n-\n-  // Implementation of abstract method.\n+  \n+  /**\n+   * \"Connects\" to the file by opening it.\n+   */\n   public void connect() throws IOException\n   {\n     // Call is ignored if already connected.\n     if (connected)\n       return;\n-\n+    \n     // If not connected, then file needs to be openned.\n     String fname = url.getFile();\n     fileIn = new File(fname);\n     if (doInput)\n       inputStream = new BufferedInputStream(new FileInputStream(fileIn));\n     if (doOutput)\n       outputStream = new BufferedOutputStream(new FileOutputStream(fileIn));\n+    \n     connected = true;\n   }\n-\n-  public InputStream getInputStream() throws IOException\n+  \n+  /**\n+   * Opens the file for reading and returns a stream for it.\n+   *\n+   * @return An InputStream for this connection.\n+   *\n+   * @exception IOException If an error occurs\n+   */\n+  public InputStream getInputStream()\n+    throws IOException\n   {\n     if (! doInput)\n       throw new ProtocolException(\"Can't open InputStream if doInput is false\");\n     if (!connected)\n       connect();\n-\n+    \n     return inputStream;\n   }\n \n-  // Override default method in URLConnection.\n-  public OutputStream getOutputStream() throws IOException\n+  /**\n+   * Opens the file for writing and returns a stream for it.\n+   *\n+   * @return An OutputStream for this connection.\n+   *\n+   * @exception IOException If an error occurs.\n+   */\n+  public OutputStream getOutputStream()\n+    throws IOException\n   {\n     if (! doOutput)\n       throw new\n \tProtocolException(\"Can't open OutputStream if doOutput is false\");\n \n     if (!connected)\n       connect();\n-\n+    \n     return outputStream;\n   }\n \n@@ -98,7 +137,7 @@ public String getHeaderField(String name)\n       {\n \tgetHeaders();\n       }\n-    catch (IOException x)\n+    catch (IOException e)\n       {\n \treturn null;\n       }\n@@ -112,7 +151,7 @@ public Map getHeaderFields()\n       {\n \tgetHeaders();\n       }\n-    catch (IOException x)\n+    catch (IOException e)\n       {\n \treturn null;\n       }\n@@ -198,4 +237,5 @@ private void getHeaders() throws IOException\n     String key = getKey(line);\n     hdrHash.put(key.toLowerCase(), Long.toString(len));\n   }\n-}\n+  \n+} // class FileURLConnection"}, {"sha": "7470d17f20ad816d3f4e6d693af1e291b8314f49", "filename": "libjava/gnu/java/net/protocol/file/Handler.java", "status": "modified", "additions": 40, "deletions": 15, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FHandler.java?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,12 +1,39 @@\n-// Handler.java - URLStreamHandler for file protocol.\n+/* Handler.java -- \"file\" protocol handler for java.net\n+   Copyright (C) 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+This file is part of GNU Classpath.\n \n-   This file is part of libgcj.\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n package gnu.java.net.protocol.file;\n \n@@ -16,16 +43,14 @@\n import java.net.URLStreamHandler;\n \n /**\n+ * This is the protocol handler for the \"file\" protocol.\n+ * It implements the abstract openConnection() method from\n+ * URLStreamHandler by returning a new FileURLConnection object (from\n+ * this package).  All other methods are inherited\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @author Warren Levy <warrenl@cygnus.com>\n- * @date April 13, 1999.\n  */\n-\n-/**\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * Status:  Minimal functionality.\n- */\n-\n public class Handler extends URLStreamHandler\n {\n   protected URLConnection openConnection(URL url) throws IOException\n@@ -50,4 +75,4 @@ protected URLConnection openConnection(URL url) throws IOException\n \n     return new Connection(url);\n   }\n-}\n+} // class Handler"}, {"sha": "7794bc7f2f7f40d27c458d8fcfa22381052b62df", "filename": "libjava/gnu/java/net/protocol/http/Connection.java", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,12 +1,40 @@\n-// Connection.java - Implementation of HttpURLConnection for http protocol.\n+/* HttpURLConnection.java -- URLConnection class for HTTP protocol\n+   Copyright (C) 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n-/* Copyright (C) 1999, 2000, 2003  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package gnu.java.net.protocol.http;\n "}, {"sha": "6f2ebb125d8c6fc809d894b99c4f1ecaddda461a", "filename": "libjava/gnu/java/net/protocol/http/Handler.java", "status": "modified", "additions": 60, "deletions": 14, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHandler.java?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,12 +1,39 @@\n-// Handler.java - URLStreamHandler for http protocol.\n+/* Handler.java -- HTTP protocol handler for java.net\n+   Copyright (c) 1998, 1999, 2003 Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999, 2003  Free Software Foundation\n+This file is part of GNU Classpath.\n \n-   This file is part of libgcj.\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n package gnu.java.net.protocol.http;\n \n@@ -16,25 +43,44 @@\n import java.net.URLStreamHandler;\n \n /**\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * Status:  Minimal functionality.\n- */\n-\n-/**\n+ * This is the protocol handler for the HTTP protocol.  It implements\n+ * the abstract openConnection() method from URLStreamHandler by returning\n+ * a new HttpURLConnection object (from this package).  All other \n+ * methods are inherited\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @author Warren Levy\n  * @author Anthony Green <green@redhat.com>\n- * @date March 26, 1999.\n  */\n public class Handler extends URLStreamHandler\n {\n+  /**\n+   * A do nothing constructor\n+   */\n+  public Handler()\n+  {\n+  }\n+\n+  /**\n+   * This method returs a new HttpURLConnection for the specified URL\n+   *\n+   * @param url The URL to return a connection for\n+   *\n+   * @return The URLConnection\n+   *\n+   * @exception IOException If an error occurs\n+   */\n   protected URLConnection openConnection (URL url) throws IOException\n   {\n     return new Connection (url);\n   }\n \n+  /**\n+   * Returns the default port for a URL parsed by this handler.\n+   */\n   protected int getDefaultPort()\n   {\n     return 80;\n   }\n-}\n+\n+} // class Handler"}, {"sha": "7d9d7cb48b2737b714c4f8165b193529d06b1821", "filename": "libjava/gnu/java/net/protocol/jar/Connection.java", "status": "modified", "additions": 38, "deletions": 8, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,17 +1,47 @@\n-/* Copyright (C) 1999, 2002  Free Software Foundation\n+/* Connection - jar url connection for java.net\n+   Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package gnu.java.net.protocol.jar;\n \n-import java.io.InputStream;\n-import java.io.IOException;\n import java.io.File;\n import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n import java.net.JarURLConnection;\n import java.net.MalformedURLException;\n import java.net.ProtocolException;\n@@ -28,7 +58,7 @@\n  * @author Kresten Krab Thorup <krab@gnu.org>\n  * @date Aug 10, 1999.\n  */\n-public class Connection extends JarURLConnection \n+public class Connection extends JarURLConnection\n {\n   static Hashtable file_cache = new Hashtable();\n   private JarFile jarfile;"}, {"sha": "7bde053e20e03049481377c20fe036317162113a", "filename": "libjava/gnu/java/net/protocol/jar/Handler.java", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807a4cfd730fff21385ed1110413663c9bb8d054/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java?ref=807a4cfd730fff21385ed1110413663c9bb8d054", "patch": "@@ -1,12 +1,40 @@\n-// Handler.java - URLStreamHandler for file protocol.\n+/* gnu.java.net.protocol.jar.Handler - jar protocol handler for java.net\n+   Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+This file is part of GNU Classpath.\n \n-   This file is part of libgcj.\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package gnu.java.net.protocol.jar;\n "}]}