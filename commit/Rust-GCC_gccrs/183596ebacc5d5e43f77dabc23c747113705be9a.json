{"sha": "183596ebacc5d5e43f77dabc23c747113705be9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgzNTk2ZWJhY2M1ZDVlNDNmNzdkYWJjMjNjNzQ3MTEzNzA1YmU5YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-01-16T19:35:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-01-16T19:35:08Z"}, "message": "tree-ssa-alias.c (struct used_part): Add write_only field.\n\n2006-01-16  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (struct used_part): Add write_only field.\n\t(get_or_create_used_part_for): Initialize it to true.\n\t(create_overlap_variables_for): Don't create structure variables\n\tfor structures that only are written to.\n\t(find_used_portions): Handle MODIFY_EXPR to track whether a\n\tstructure is only written to.\n\n\t* gcc.dg/tree-ssa/20031015-1.c: Adjust testcase.\n\nFrom-SVN: r109766", "tree": {"sha": "81b34c2198f03ac751ceca53567fb3a0777c0618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81b34c2198f03ac751ceca53567fb3a0777c0618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/183596ebacc5d5e43f77dabc23c747113705be9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183596ebacc5d5e43f77dabc23c747113705be9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183596ebacc5d5e43f77dabc23c747113705be9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183596ebacc5d5e43f77dabc23c747113705be9a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcc2da4198c3727aa52e5aa3d95a844f96a60b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc2da4198c3727aa52e5aa3d95a844f96a60b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc2da4198c3727aa52e5aa3d95a844f96a60b42"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "d19082a192e3ab270b7f4bd98aa49b63851474ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=183596ebacc5d5e43f77dabc23c747113705be9a", "patch": "@@ -1,3 +1,12 @@\n+2006-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (struct used_part): Add write_only field.\n+\t(get_or_create_used_part_for): Initialize it to true.\n+\t(create_overlap_variables_for): Don't create structure variables\n+\tfor structures that only are written to.\n+\t(find_used_portions): Handle MODIFY_EXPR to track whether a\n+\tstructure is only written to.\n+\n 2006-01-16  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* bb-reorder.c (partition_hot_cold_basic_blocks): Make it"}, {"sha": "36c42f7327ea7529d692f707b854d7766b64054c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=183596ebacc5d5e43f77dabc23c747113705be9a", "patch": "@@ -1,3 +1,7 @@\n+2006-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/20031015-1.c: Adjust testcase.\n+\n 2006-01-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR testsuite/25777"}, {"sha": "302165608d55b2bda384b79dc73bfdbbb20d14e1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031015-1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031015-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031015-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031015-1.c?ref=183596ebacc5d5e43f77dabc23c747113705be9a", "patch": "@@ -13,8 +13,6 @@ main(void)\n   return 0;\n }\n \n-/* The V_MUST_DEF comes from the initial assignment; the V_MAY_DEF\n-   comes from the asm.  */\n-/* { dg-final { scan-tree-dump-times \"V_MUST_DEF\" 1 \"alias1\" } } */\n-/* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 1 \"alias1\" } } */\n+/* The V_*_DEF comes from the initial assignment and the asm.  */\n+/* { dg-final { scan-tree-dump-times \"_DEF\" 2 \"alias1\" } } */\n /* { dg-final { cleanup-tree-dump \"alias1\" } } */"}, {"sha": "5370747fc62c951e8d36009cd32cf22040909fd9", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183596ebacc5d5e43f77dabc23c747113705be9a/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=183596ebacc5d5e43f77dabc23c747113705be9a", "patch": "@@ -2424,6 +2424,8 @@ typedef struct used_part\n      variable.  Implicit uses occur when we can't tell what part we\n      are referencing, and have to make conservative assumptions.  */\n   bool implicit_uses;\n+  /* True if the structure is only written to or taken its address.  */\n+  bool write_only;\n } *used_part_t;\n \n /* An array of used_part structures, indexed by variable uid.  */\n@@ -2509,6 +2511,7 @@ get_or_create_used_part_for (size_t uid)\n       up->maxused = 0;\n       up->explicit_uses = false;\n       up->implicit_uses = false;\n+      up->write_only = true;\n     }\n \n   return up;\n@@ -2552,10 +2555,11 @@ create_overlap_variables_for (tree var)\n   used_part_t up;\n   size_t uid = DECL_UID (var);\n \n-  if (!up_lookup (uid))\n+  up = up_lookup (uid);\n+  if (!up\n+      || up->write_only)\n     return;\n \n-  up = up_lookup (uid);\n   push_fields_onto_fieldstack (TREE_TYPE (var), &fieldstack, 0, NULL);\n   if (VEC_length (fieldoff_s, fieldstack) != 0)\n     {\n@@ -2691,10 +2695,15 @@ create_overlap_variables_for (tree var)\n    entire structure.  */\n \n static tree\n-find_used_portions (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n+find_used_portions (tree *tp, int *walk_subtrees, void *lhs_p)\n {\n   switch (TREE_CODE (*tp))\n     {\n+    case MODIFY_EXPR:\n+      /* Recurse manually here to track whether the use is in the\n+\t LHS of an assignment.  */\n+      find_used_portions (&TREE_OPERAND (*tp, 0), walk_subtrees, tp);\n+      return find_used_portions (&TREE_OPERAND (*tp, 1), walk_subtrees, NULL);\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n     case COMPONENT_REF:\n@@ -2723,6 +2732,8 @@ find_used_portions (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t      up->explicit_uses = true;\n \t    else\n \t      up->implicit_uses = true;\n+\t    if (!lhs_p)\n+\t      up->write_only = false;\n \t    up_insert (uid, up);\n \n \t    *walk_subtrees = 0;"}]}