{"sha": "7205254be85f07852b41fa0a92f6667a4ecaca8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIwNTI1NGJlODVmMDc4NTJiNDFmYTBhOTJmNjY2N2E0ZWNhY2E4Yw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2009-07-23T09:21:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T09:21:31Z"}, "message": "einfo.adb (Component_Type): Add missing assertion.\n\n2009-07-23  Javier Miranda  <miranda@adacore.com>\n\n\t* einfo.adb (Component_Type): Add missing assertion.\n\t* sem_res.adb (Resolve_Call): Ensure proper kind of entity before\n\treading attribute Component_Size.\n\t* exp_ch4.adb (Is_Safe_In_Place_Array_Op): Ensure proper kind of entity\n\tbefore reading attributes Component_Size and Component_Type.\n\t* exp_ch3.adb (Build_Initialization_Call): Ensure proper kind of entity\n\tbefore reading attribute Component_Type.\n\nFrom-SVN: r149981", "tree": {"sha": "0bf407b1cb5a130c7ac89816340b484ec08924ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bf407b1cb5a130c7ac89816340b484ec08924ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7205254be85f07852b41fa0a92f6667a4ecaca8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7205254be85f07852b41fa0a92f6667a4ecaca8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7205254be85f07852b41fa0a92f6667a4ecaca8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7205254be85f07852b41fa0a92f6667a4ecaca8c/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57aed6d6f8b84e93d4dc9a80c8aa9120ae8d1679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57aed6d6f8b84e93d4dc9a80c8aa9120ae8d1679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57aed6d6f8b84e93d4dc9a80c8aa9120ae8d1679"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "bbb9f649c586278fe2705f4da87e1ec2f96aeba9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7205254be85f07852b41fa0a92f6667a4ecaca8c", "patch": "@@ -1,3 +1,13 @@\n+2009-07-23  Javier Miranda  <miranda@adacore.com>\n+\n+\t* einfo.adb (Component_Type): Add missing assertion.\n+\t* sem_res.adb (Resolve_Call): Ensure proper kind of entity before\n+\treading attribute Component_Size.\n+\t* exp_ch4.adb (Is_Safe_In_Place_Array_Op): Ensure proper kind of entity\n+\tbefore reading attributes Component_Size and Component_Type.\n+\t* exp_ch3.adb (Build_Initialization_Call): Ensure proper kind of entity\n+\tbefore reading attribute Component_Type.\n+\n 2009-07-23  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat_rm.texi: Document the GNAT.SSE units."}, {"sha": "4d873da239606cf769c1c1e1d39dc33052bf2259", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=7205254be85f07852b41fa0a92f6667a4ecaca8c", "patch": "@@ -691,6 +691,7 @@ package body Einfo is\n \n    function Component_Type (Id : E) return E is\n    begin\n+      pragma Assert (Is_Array_Type (Id) or else Is_String_Type (Id));\n       return Node20 (Implementation_Base_Type (Id));\n    end Component_Type;\n "}, {"sha": "fe51d2f2b3b6ebaabfc4cf28833434742facf485", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7205254be85f07852b41fa0a92f6667a4ecaca8c", "patch": "@@ -1409,7 +1409,8 @@ package body Exp_Ch3 is\n \n       if (Is_Null_Init_Proc (Proc) and then not Init_Or_Norm_Scalars)\n         or else Is_Value_Type (Typ)\n-        or else Is_Value_Type (Component_Type (Typ))\n+        or else ((Is_Array_Type (Typ) or else Is_String_Type (Typ))\n+                    and then Is_Value_Type (Component_Type (Typ)))\n       then\n          return Empty_List;\n       end if;"}, {"sha": "456f46f607c2a225c603686a76f20589f5ae3264", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7205254be85f07852b41fa0a92f6667a4ecaca8c", "patch": "@@ -9596,7 +9596,9 @@ package body Exp_Ch4 is\n       --  Skip this processing if the component size is different from system\n       --  storage unit (since at least for NOT this would cause problems).\n \n-      if Component_Size (Etype (Lhs)) /= System_Storage_Unit then\n+      if Is_Array_Type (Etype (Lhs))\n+        and then Component_Size (Etype (Lhs)) /= System_Storage_Unit\n+      then\n          return False;\n \n       --  Cannot do in place stuff on VM_Target since cannot pass addresses\n@@ -9606,7 +9608,9 @@ package body Exp_Ch4 is\n \n       --  Cannot do in place stuff if non-standard Boolean representation\n \n-      elsif Has_Non_Standard_Rep (Component_Type (Etype (Lhs))) then\n+      elsif (Is_Array_Type (Etype (Lhs)) or else Is_String_Type (Etype (Lhs)))\n+        and then Has_Non_Standard_Rep (Component_Type (Etype (Lhs)))\n+      then\n          return False;\n \n       elsif not Is_Unaliased (Lhs) then"}, {"sha": "fcd11f4472ca9460f6f8ab3434609b8aac2c25cb", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7205254be85f07852b41fa0a92f6667a4ecaca8c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7205254be85f07852b41fa0a92f6667a4ecaca8c", "patch": "@@ -4958,7 +4958,13 @@ package body Sem_Res is\n                New_Subp := Relocate_Node (Subp);\n                Set_Entity (Subp, Nam);\n \n-               if Component_Type (Ret_Type) /= Any_Type then\n+               if (Is_Array_Type (Ret_Type)\n+                     and then Component_Type (Ret_Type) /= Any_Type)\n+                 or else\n+                  (Is_Access_Type (Ret_Type)\n+                     and then Component_Type (Designated_Type (Ret_Type))\n+                                /= Any_Type)\n+               then\n                   if Needs_No_Actuals (Nam) then\n \n                      --  Indexed call to a parameterless function"}]}