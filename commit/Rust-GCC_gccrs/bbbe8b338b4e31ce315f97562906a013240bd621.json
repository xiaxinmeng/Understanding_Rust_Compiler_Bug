{"sha": "bbbe8b338b4e31ce315f97562906a013240bd621", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJiZThiMzM4YjRlMzFjZTMxNWY5NzU2MjkwNmEwMTMyNDBiZDYyMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-11-21T01:27:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-11-21T01:27:44Z"}, "message": "re PR go/66574 (Time is provided in millisecond precision instead of nanoseconds as described in go documentation)\n\n\tPR go/66574\n    runtime: Use clock_gettime to get current time.\n    \n    Fetch the current time in nanoseconds, not microseconds, by using\n    clock_gettime rather than gettimeofday.\n    \n    Update golang/go#11222.\n    \n    Fixes https://gcc.gnu.org/PR66574.\n    \n    Reviewed-on: https://go-review.googlesource.com/17156\n\nFrom-SVN: r230694", "tree": {"sha": "ce90880ae1cd1318680980381769544c90f941c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce90880ae1cd1318680980381769544c90f941c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbbe8b338b4e31ce315f97562906a013240bd621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbbe8b338b4e31ce315f97562906a013240bd621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbbe8b338b4e31ce315f97562906a013240bd621", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbbe8b338b4e31ce315f97562906a013240bd621/comments", "author": null, "committer": null, "parents": [{"sha": "23df90322f24ea24b9f0d077be543dc0a71e7f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23df90322f24ea24b9f0d077be543dc0a71e7f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23df90322f24ea24b9f0d077be543dc0a71e7f02"}], "stats": {"total": 69, "additions": 63, "deletions": 6}, "files": [{"sha": "4097bab3073f4ef25492445e88de3d2087f4217f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbbe8b338b4e31ce315f97562906a013240bd621/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbbe8b338b4e31ce315f97562906a013240bd621/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=bbbe8b338b4e31ce315f97562906a013240bd621", "patch": "@@ -1,4 +1,4 @@\n-f79db38cf3484b63f7807abef05eecb23e9d0806\n+b839c8c35af49bd6d86306ad34449654a4657cb1\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "e024b2f4b6294681f36184008fbd0bc2ad9c6bb0", "filename": "libgo/configure", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbbe8b338b4e31ce315f97562906a013240bd621/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbbe8b338b4e31ce315f97562906a013240bd621/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=bbbe8b338b4e31ce315f97562906a013240bd621", "patch": "@@ -14477,6 +14477,62 @@ ac_res=$ac_cv_search_nanosleep\n if test \"$ac_res\" != no; then :\n   test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n \n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing clock_gettime\" >&5\n+$as_echo_n \"checking for library containing clock_gettime... \" >&6; }\n+if test \"${ac_cv_search_clock_gettime+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char clock_gettime ();\n+int\n+main ()\n+{\n+return clock_gettime ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+for ac_lib in '' rt; do\n+  if test -z \"$ac_lib\"; then\n+    ac_res=\"none required\"\n+  else\n+    ac_res=-l$ac_lib\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+  fi\n+  if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_search_clock_gettime=$ac_res\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext\n+  if test \"${ac_cv_search_clock_gettime+set}\" = set; then :\n+  break\n+fi\n+done\n+if test \"${ac_cv_search_clock_gettime+set}\" = set; then :\n+\n+else\n+  ac_cv_search_clock_gettime=no\n+fi\n+rm conftest.$ac_ext\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_clock_gettime\" >&5\n+$as_echo \"$ac_cv_search_clock_gettime\" >&6; }\n+ac_res=$ac_cv_search_clock_gettime\n+if test \"$ac_res\" != no; then :\n+  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n+\n fi\n \n "}, {"sha": "6eddb860974dd04f8050eca56a87d7d947f86950", "filename": "libgo/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbbe8b338b4e31ce315f97562906a013240bd621/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbbe8b338b4e31ce315f97562906a013240bd621/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=bbbe8b338b4e31ce315f97562906a013240bd621", "patch": "@@ -501,9 +501,10 @@ PTHREAD_LIBS=\n AC_CHECK_LIB([pthread], [pthread_create], PTHREAD_LIBS=-lpthread)\n AC_SUBST(PTHREAD_LIBS)\n \n-dnl Test if -lrt is required for sched_yield and/or nanosleep.\n+dnl Test if -lrt is required for sched_yield or nanosleep or clock_gettime.\n AC_SEARCH_LIBS([sched_yield], [rt])\n AC_SEARCH_LIBS([nanosleep], [rt])\n+AC_SEARCH_LIBS([clock_gettime], [rt])\n \n AC_C_BIGENDIAN\n "}, {"sha": "d24e6ee76af17794b0a324d7c93e118c3810a8a6", "filename": "libgo/runtime/go-now.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbbe8b338b4e31ce315f97562906a013240bd621/libgo%2Fruntime%2Fgo-now.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbbe8b338b4e31ce315f97562906a013240bd621/libgo%2Fruntime%2Fgo-now.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-now.c?ref=bbbe8b338b4e31ce315f97562906a013240bd621", "patch": "@@ -13,11 +13,11 @@\n struct time_now_ret\n now()\n {\n-  struct timeval tv;\n+  struct timespec ts;\n   struct time_now_ret ret;\n \n-  gettimeofday (&tv, NULL);\n-  ret.sec = tv.tv_sec;\n-  ret.nsec = tv.tv_usec * 1000;\n+  clock_gettime (CLOCK_REALTIME, &ts);\n+  ret.sec = ts.tv_sec;\n+  ret.nsec = ts.tv_nsec;\n   return ret;\n }"}]}