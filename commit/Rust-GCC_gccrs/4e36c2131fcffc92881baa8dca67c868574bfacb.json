{"sha": "4e36c2131fcffc92881baa8dca67c868574bfacb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUzNmMyMTMxZmNmZmM5Mjg4MWJhYThkY2E2N2M4Njg1NzRiZmFjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-31T20:28:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-31T20:28:31Z"}, "message": "parser.c (cp_parser_init_declarator): Avoid redundant cp_finish_decl for member declarations.\n\n\t* parser.c (cp_parser_init_declarator): Avoid redundant\n\tcp_finish_decl for member declarations.\n\nFrom-SVN: r171796", "tree": {"sha": "e19131d84408420d503000791293a1422e69553a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19131d84408420d503000791293a1422e69553a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e36c2131fcffc92881baa8dca67c868574bfacb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e36c2131fcffc92881baa8dca67c868574bfacb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e36c2131fcffc92881baa8dca67c868574bfacb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e36c2131fcffc92881baa8dca67c868574bfacb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8faca75e7b2a0c0a0b4185be32432e578c2b945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8faca75e7b2a0c0a0b4185be32432e578c2b945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8faca75e7b2a0c0a0b4185be32432e578c2b945"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "c2f983103976704956bfbc46fc2f5ef7e9dd4f98", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e36c2131fcffc92881baa8dca67c868574bfacb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e36c2131fcffc92881baa8dca67c868574bfacb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4e36c2131fcffc92881baa8dca67c868574bfacb", "patch": "@@ -1,3 +1,8 @@\n+2011-03-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_init_declarator): Avoid redundant\n+\tcp_finish_decl for member declarations.\n+\n 2011-03-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48212"}, {"sha": "9ed3a1f7ec421b20b3e4c48a23e359b1dc30f0dd", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e36c2131fcffc92881baa8dca67c868574bfacb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e36c2131fcffc92881baa8dca67c868574bfacb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4e36c2131fcffc92881baa8dca67c868574bfacb", "patch": "@@ -14501,9 +14501,9 @@ cp_parser_init_declarator (cp_parser* parser,\n \tcp_parser_save_default_args (parser, decl);\n     }\n \n-  /* Finish processing the declaration.  But, skip friend\n+  /* Finish processing the declaration.  But, skip member\n      declarations.  */\n-  if (!friend_p && decl && decl != error_mark_node && !range_for_decl_p)\n+  if (!member_p && decl && decl != error_mark_node && !range_for_decl_p)\n     {\n       cp_finish_decl (decl,\n \t\t      initializer, !is_non_constant_init,"}]}