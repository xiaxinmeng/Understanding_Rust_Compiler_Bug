{"sha": "1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3M2VmNmM0NTdkZjdiMDBkMjZkYWZiNjhkMGEzZjVlYjI4ZjRmNw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2016-03-30T12:48:42Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2016-03-30T12:48:42Z"}, "message": "re PR target/62254 (gcc-4.9 ICEs on linux kernel zlib for armv3)\n\n\tPR target/62254\n\t* config/arm/arm.c (arm_reload_out_hi): Add code to handle the\n\tcase where we are already provided with an SImode SUBREG.\n\nFrom-SVN: r234568", "tree": {"sha": "234abe964d2af48711cc1b4922b78b206008359c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/234abe964d2af48711cc1b4922b78b206008359c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41ec61d3ef99e27e1d2584836ce8c6483c628689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ec61d3ef99e27e1d2584836ce8c6483c628689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41ec61d3ef99e27e1d2584836ce8c6483c628689"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "641bf2579c22a3073727395f85dd8e7905bf4057", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "patch": "@@ -1,3 +1,9 @@\n+2016-03-30  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR target/62254\n+\t* config/arm/arm.c (arm_reload_out_hi): Add code to handle the\n+\tcase where we are already provided with an SImode SUBREG.\n+\n 2016-03-30  Michael Matz  <matz@suse.de>\n \tRichard Biener  <rguenther@suse.de>\n "}, {"sha": "5974c65d314c973d49a000ef458d6f765596f001", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "patch": "@@ -15596,14 +15596,27 @@ arm_reload_out_hi (rtx *operands)\n \t/* The slot is out of range, or was dressed up in a SUBREG.  */\n \tbase = reg_equiv_address (REGNO (ref));\n \n-      /* PR 62554: If there is no equivalent memory location then just move\n+      /* PR 62254: If there is no equivalent memory location then just move\n \t the value as an SImode register move.  This happens when the target\n \t architecture variant does not have an HImode register move.  */\n       if (base == NULL)\n \t{\n-\t  gcc_assert (REG_P (outval));\n-\t  emit_insn (gen_movsi (gen_rtx_SUBREG (SImode, ref, 0),\n-\t\t\t\tgen_rtx_SUBREG (SImode, outval, 0)));\n+\t  gcc_assert (REG_P (outval) || SUBREG_P (outval));\n+\n+\t  if (REG_P (outval))\n+\t    {\n+\t      emit_insn (gen_movsi (gen_rtx_SUBREG (SImode, ref, 0),\n+\t\t\t\t    gen_rtx_SUBREG (SImode, outval, 0)));\n+\t    }\n+\t  else /* SUBREG_P (outval)  */\n+\t    {\n+\t      if (GET_MODE (SUBREG_REG (outval)) == SImode)\n+\t\temit_insn (gen_movsi (gen_rtx_SUBREG (SImode, ref, 0),\n+\t\t\t\t      SUBREG_REG (outval)));\n+\t      else\n+\t\t/* FIXME: Handle other cases ?  */\n+\t\tgcc_unreachable ();\n+\t    }\n \t  return;\n \t}\n     }"}]}