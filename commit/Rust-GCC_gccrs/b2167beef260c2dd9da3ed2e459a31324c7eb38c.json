{"sha": "b2167beef260c2dd9da3ed2e459a31324c7eb38c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIxNjdiZWVmMjYwYzJkZDlkYTNlZDJlNDU5YTMxMzI0YzdlYjM4Yw==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@dgii.com", "date": "1997-10-18T05:21:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-18T05:21:23Z"}, "message": "sco5.h: Let ELF use dwarf2 unwinding.\n\n        * i386/sco5.h: Let ELF use dwarf2 unwinding.  COFF uses sjlj.\n        (EH_FRAME_SECTION_ASM_OP, EH_FRAME_SECTION_ASM_OP_ELF): Defined.\n        (EH_FRAME_SECTION_ASM_OP_COFF): Likewise.\n        (DWARF2_UNWIND_INFO): Let this track object file format.\n        (EXTRA_SECTIONS): Add in_eh.\n        (EH_FRAME_SECTION_ASM_OP, EH_FRAME_SECTION_ASM_OP_ELF): Define.\n        (EH_FRAME_SECTION_ASM_OP_COFF): Likewise.\n\nFrom-SVN: r15990", "tree": {"sha": "5f61c5b0f8b0a3ef69ee1a3557cbe34979d62375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f61c5b0f8b0a3ef69ee1a3557cbe34979d62375"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2167beef260c2dd9da3ed2e459a31324c7eb38c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2167beef260c2dd9da3ed2e459a31324c7eb38c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2167beef260c2dd9da3ed2e459a31324c7eb38c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2167beef260c2dd9da3ed2e459a31324c7eb38c/comments", "author": null, "committer": null, "parents": [{"sha": "8070c78887949b019683b0df268d0e4bbc98169e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8070c78887949b019683b0df268d0e4bbc98169e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8070c78887949b019683b0df268d0e4bbc98169e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "2c785dd2e4c1dbd959d71d77a12dd31189c1cde6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2167beef260c2dd9da3ed2e459a31324c7eb38c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2167beef260c2dd9da3ed2e459a31324c7eb38c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2167beef260c2dd9da3ed2e459a31324c7eb38c", "patch": "@@ -1,3 +1,13 @@\n+Fri Oct 17 23:24:40 1997  Robert Lipe (robertl@dgii.com)\n+\n+\t* i386/sco5.h: Let ELF use dwarf2 unwinding.  COFF uses sjlj.\n+\t(EH_FRAME_SECTION_ASM_OP, EH_FRAME_SECTION_ASM_OP_ELF): Defined.\n+\t(EH_FRAME_SECTION_ASM_OP_COFF): Likewise.\n+\t(DWARF2_UNWIND_INFO): Let this track object file format.\n+\t(EXTRA_SECTIONS): Add in_eh.\n+\t(EH_FRAME_SECTION_ASM_OP, EH_FRAME_SECTION_ASM_OP_ELF): Define.\n+\t(EH_FRAME_SECTION_ASM_OP_COFF): Likewise.\n+\n Fri Oct 17 17:13:42 1997  David S. Miller  <davem@tanya.rutgers.edu>\n \n \t* sparc/linux64.h (LINK_SPEC): Dynamic linker is ld-linux64.so.2."}, {"sha": "a7c57a521a82f34150758e47a5b2b3accb964d16", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2167beef260c2dd9da3ed2e459a31324c7eb38c/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2167beef260c2dd9da3ed2e459a31324c7eb38c/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=b2167beef260c2dd9da3ed2e459a31324c7eb38c", "patch": "@@ -76,6 +76,17 @@ Boston, MA 02111-1307, USA.  */\n #undef GLOBAL_ASM_OP\n #define GLOBAL_ASM_OP\t\t\t\"\\t.globl\"\n \n+#undef EH_FRAME_SECTION_ASM_OP\n+#define EH_FRAME_SECTION_ASM_OP_COFF\t\"\\t.section\\t.ehfram, \\\"x\\\"\"\n+#define EH_FRAME_SECTION_ASM_OP_ELF\t\"\\t.section\\t.eh_frame, \\\"aw\\\"\"\n+#define EH_FRAME_SECTION_ASM_OP\t\\\n+  ((TARGET_ELF) ? EH_FRAME_SECTION_ASM_OP_ELF : EH_FRAME_SECTION_ASM_OP_COFF)\n+\n+/* Avoid problems (long sectino names, forward assembler refs) with DWARF\n+   exception unwinding when we're generating COFF */\n+#define DWARF2_UNWIND_INFO\t\\\n+  ((TARGET_ELF) ? 1 : 0 )  \n+\n #undef CONST_SECTION_ASM_OP\n #define CONST_SECTION_ASM_OP_COFF\t\"\\t.section\\t.rodata, \\\"x\\\"\"\n #define CONST_SECTION_ASM_OP_ELF\t\"\\t.section\\t.rodata\"\n@@ -901,6 +912,7 @@ compiler at the end of the day. Onward we go ...\n # undef FINI_SECTION_ASM_OP\n # undef CTORS_SECTION_ASM_OP\n # undef DTORS_SECTION_ASM_OP\n+# undef EH_FRAME_SECTION_ASM_OP\n # undef CTOR_LIST_BEGIN\n # undef CTOR_LIST_END\n # undef DO_GLOBAL_CTORS_BODY\n@@ -912,11 +924,13 @@ compiler at the end of the day. Onward we go ...\n #  define FINI_SECTION_ASM_OP FINI_SECTION_ASM_OP_ELF\n #  define DTORS_SECTION_ASM_OP DTORS_SECTION_ASM_OP_ELF\n #  define CTORS_SECTION_ASM_OP CTORS_SECTION_ASM_OP_ELF\n+#  define EH_FRAME_SECTION_ASM_OP EH_FRAME_SECTION_ASM_OP_ELF\n # else /* ! _SCO_ELF */\n #  define INIT_SECTION_ASM_OP INIT_SECTION_ASM_OP_COFF\n #  define FINI_SECTION_ASM_OP FINI_SECTION_ASM_OP_COFF\n #  define DTORS_SECTION_ASM_OP DTORS_SECTION_ASM_OP_COFF\n #  define CTORS_SECTION_ASM_OP CTORS_SECTION_ASM_OP_COFF\n+#  define EH_FRAME_SECTION_ASM_OP \"\"\n #  define CTOR_LIST_BEGIN asm (INIT_SECTION_ASM_OP); asm (\"pushl $0\")\n #  define CTOR_LIST_END CTOR_LIST_BEGIN\n #  define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\t\\\n@@ -927,4 +941,3 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n # endif /* ! _SCO_ELF */\n #endif /* CRT_BEGIN !! CRT_END */\n-"}]}