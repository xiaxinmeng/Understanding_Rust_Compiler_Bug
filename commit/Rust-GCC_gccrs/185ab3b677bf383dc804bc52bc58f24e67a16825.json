{"sha": "185ab3b677bf383dc804bc52bc58f24e67a16825", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg1YWIzYjY3N2JmMzgzZGM4MDRiYzUyYmM1OGYyNGU2N2ExNjgyNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-06-25T11:13:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-06-25T11:13:44Z"}, "message": "tree-ssa-structalias.c (fieldoff_compare): Make sure to not overflow the result type.\n\n2008-06-25  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (fieldoff_compare): Make sure to\n\tnot overflow the result type.\n\n\t* gcc.c-torture/compile/20080625-1.c: New testcase.\n\nFrom-SVN: r137104", "tree": {"sha": "ece01c7290f7172ceb9d98a3f064935a89dc9b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ece01c7290f7172ceb9d98a3f064935a89dc9b09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/185ab3b677bf383dc804bc52bc58f24e67a16825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185ab3b677bf383dc804bc52bc58f24e67a16825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/185ab3b677bf383dc804bc52bc58f24e67a16825", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185ab3b677bf383dc804bc52bc58f24e67a16825/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ef834ca4defdd75ad6b9bb329a95eb5cf55823b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef834ca4defdd75ad6b9bb329a95eb5cf55823b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ef834ca4defdd75ad6b9bb329a95eb5cf55823b"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "2516b26bdef4e00327780253eb13d2c627ccb747", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=185ab3b677bf383dc804bc52bc58f24e67a16825", "patch": "@@ -1,3 +1,8 @@\n+2008-06-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (fieldoff_compare): Make sure to\n+\tnot overflow the result type.\n+\n 2008-06-25  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vn.c (vn_add): Handle TRUTH_*_EXPR."}, {"sha": "6bcc8e70ead2e9cad5e9a765dfbffcfe934e98c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=185ab3b677bf383dc804bc52bc58f24e67a16825", "patch": "@@ -1,3 +1,7 @@\n+2008-06-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.c-torture/compile/20080625-1.c: New testcase.\n+\n 2008-06-25  Richard Guenther  <rguenther@suse.de>\n \n \t* g++.dg/torture/20080625-1.C: New testcase."}, {"sha": "f0900fd9693a6e2aa4168a7f5814ed644df18241", "filename": "gcc/testsuite/gcc.c-torture/compile/20080625-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c?ref=185ab3b677bf383dc804bc52bc58f24e67a16825", "patch": "@@ -0,0 +1,16 @@\n+struct peakbufStruct {\n+    unsigned int lnum [5000];\n+    int lscan [5000][4000];\n+    double lmz [5000][4000];\n+    double lint [5000][4000];\n+    int PeaksInBuf;\n+    unsigned char freelists [350000];\n+    unsigned char freelistl [5000];\n+    unsigned int LastFreeL;\n+} peakbuf;\n+void foo(int);\n+void findmzROI(int i, int *p_scan)\n+{\n+    foo(peakbuf.PeaksInBuf);\n+    __builtin_memmove(p_scan, peakbuf.lscan[i], peakbuf.lnum[i]*sizeof(int));\n+}"}, {"sha": "052903da76be4954141502bbc88c83c59572ecf0", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185ab3b677bf383dc804bc52bc58f24e67a16825/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=185ab3b677bf383dc804bc52bc58f24e67a16825", "patch": "@@ -3999,14 +3999,20 @@ fieldoff_compare (const void *pa, const void *pb)\n {\n   const fieldoff_s *foa = (const fieldoff_s *)pa;\n   const fieldoff_s *fob = (const fieldoff_s *)pb;\n-  HOST_WIDE_INT foasize, fobsize;\n+  unsigned HOST_WIDE_INT foasize, fobsize;\n \n-  if (foa->offset != fob->offset)\n-    return foa->offset - fob->offset;\n+  if (foa->offset < fob->offset)\n+    return -1;\n+  else if (foa->offset > fob->offset)\n+    return 1;\n \n   foasize = TREE_INT_CST_LOW (foa->size);\n   fobsize = TREE_INT_CST_LOW (fob->size);\n-  return foasize - fobsize;\n+  if (foasize < fobsize)\n+    return - 1;\n+  else if (foasize > fobsize)\n+    return 1;\n+  return 0;\n }\n \n /* Sort a fieldstack according to the field offset and sizes.  */"}]}