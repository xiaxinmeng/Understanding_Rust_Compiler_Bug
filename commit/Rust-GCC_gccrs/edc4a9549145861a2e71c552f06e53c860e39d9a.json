{"sha": "edc4a9549145861a2e71c552f06e53c860e39d9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRjNGE5NTQ5MTQ1ODYxYTJlNzFjNTUyZjA2ZTUzYzg2MGUzOWQ5YQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-10T16:59:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-10T16:59:05Z"}, "message": "Merge #348\n\n348: Address miscellaneous '-Werror=unused-parameter' diagnostics [#336] r=philberty a=tschwinge\n\n#336\r\n\r\n    In file included from [...]/gcc/rust/ast/rust-ast-full.h:23,\r\n                     from [...]/gcc/rust/parse/rust-parse.h:21,\r\n                     from [...]/gcc/rust/rust-session-manager.cc:34:\r\n    [...]/gcc/rust/ast/rust-expr.h: In member function \u2018virtual void Rust::AST::RangeExpr::set_outer_attrs(std::vector<Rust::AST::Attribute>)\u2019:\r\n    [...]/gcc/rust/ast/rust-expr.h:3220:48: error: unused parameter \u2018new_attrs\u2019 [-Werror=unused-parameter]\r\n     3220 |   void set_outer_attrs (std::vector<Attribute> new_attrs) override\r\n          |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\r\n    [...]/gcc/rust/ast/rust-expr.h: In constructor \u2018Rust::AST::IfLetExpr::IfLetExpr(std::vector<std::unique_ptr<Rust::AST::Pattern> >, std::unique_ptr<Rust::AST::Expr>, std::unique_ptr<Rust::AST::BlockExpr>, std::vector<Rust::AST::Attribute>, Location)\u2019:\r\n    [...]/gcc/rust/ast/rust-expr.h:4380:37: error: unused parameter \u2018outer_attrs\u2019 [-Werror=unused-parameter]\r\n     4380 |              std::vector<Attribute> outer_attrs, Location locus)\r\n          |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~\r\n\r\n    In file included from [...]/gcc/rust/backend/rust-compile-context.h:27,\r\n                     from [...]/gcc/rust/backend/rust-compile.h:24,\r\n                     from [...]/gcc/rust/rust-session-manager.cc:41:\r\n    [...]/gcc/rust/backend/rust-compile-tyty.h: In member function \u2018virtual void Rust::Compile::TyTyCompile::visit(Rust::TyTy::FnPtr&)\u2019:\r\n    [...]/gcc/rust/backend/rust-compile-tyty.h:67:28: error: unused parameter \u2018type\u2019 [-Werror=unused-parameter]\r\n       67 |   void visit (TyTy::FnPtr &type) override { gcc_unreachable (); }\r\n          |               ~~~~~~~~~~~~~^~~~\r\n\r\n    [...]/gcc/rust/rust-gcc.cc: In member function \u2018virtual Btype* Gcc_backend::function_ptr_type(Btype*, const std::vector<Btype*>&, Location)\u2019:\r\n    [...]/gcc/rust/rust-gcc.cc:998:42: error: unused parameter \u2018locus\u2019 [-Werror=unused-parameter]\r\n      998 |                                 Location locus)\r\n          |                                 ~~~~~~~~~^~~~~\r\n\r\n    [...]/gcc/rust/rust-lang.cc: In function \u2018void grs_langhook_init_options_struct(gcc_options*)\u2019:\r\n    [...]/gcc/rust/rust-lang.cc:153:55: error: unused parameter \u2018opts\u2019 [-Werror=unused-parameter]\r\n      153 | grs_langhook_init_options_struct (struct gcc_options *opts)\r\n          |                                   ~~~~~~~~~~~~~~~~~~~~^~~~\n\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "dffc57c3681be7675e7ad9493b7e4256dc234279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dffc57c3681be7675e7ad9493b7e4256dc234279"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edc4a9549145861a2e71c552f06e53c860e39d9a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgcdlZCRBK7hj4Ov3rIwAAdHIIADhsmp9TkLqjloJQAjSVgGKr\nIQ09gJYP2ziquvApC+ULQpm7iXkavltTV+ZyHrvkos6OqQOhdlEqaFA93J9vpQyY\nm9EqhOFtOstZtx6Hslndd6GPTAjxYpXnYq2dKjBCWU6D8ubFskwgSIliZMZ+9CEa\nKuqRiEz5+q3NDWy3bKsl47VqgWDR82avcWndD3CBYM+bXjzogc7IEXy+HU+idkkR\ngc0UVxdr2t5TDLxilfiiKDO9NYhd4MAZSxtdOO39JBTsSqGWoV3sDmn42IOk4pw7\nF1ltJMwbHbWpw7lV5cCuM1ixm6shczgic5YU25yryy1Pt/dNQXkmBk6niQ66nAw=\n=reEp\n-----END PGP SIGNATURE-----\n", "payload": "tree dffc57c3681be7675e7ad9493b7e4256dc234279\nparent 9c97c8588321a106512affb2935b8ec1f836804f\nparent 114bd7b45ea3db56fbd07048857db102fe87821f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618073945 +0000\ncommitter GitHub <noreply@github.com> 1618073945 +0000\n\nMerge #348\n\n348: Address miscellaneous '-Werror=unused-parameter' diagnostics [#336] r=philberty a=tschwinge\n\n#336\r\n\r\n    In file included from [...]/gcc/rust/ast/rust-ast-full.h:23,\r\n                     from [...]/gcc/rust/parse/rust-parse.h:21,\r\n                     from [...]/gcc/rust/rust-session-manager.cc:34:\r\n    [...]/gcc/rust/ast/rust-expr.h: In member function \u2018virtual void Rust::AST::RangeExpr::set_outer_attrs(std::vector<Rust::AST::Attribute>)\u2019:\r\n    [...]/gcc/rust/ast/rust-expr.h:3220:48: error: unused parameter \u2018new_attrs\u2019 [-Werror=unused-parameter]\r\n     3220 |   void set_outer_attrs (std::vector<Attribute> new_attrs) override\r\n          |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\r\n    [...]/gcc/rust/ast/rust-expr.h: In constructor \u2018Rust::AST::IfLetExpr::IfLetExpr(std::vector<std::unique_ptr<Rust::AST::Pattern> >, std::unique_ptr<Rust::AST::Expr>, std::unique_ptr<Rust::AST::BlockExpr>, std::vector<Rust::AST::Attribute>, Location)\u2019:\r\n    [...]/gcc/rust/ast/rust-expr.h:4380:37: error: unused parameter \u2018outer_attrs\u2019 [-Werror=unused-parameter]\r\n     4380 |              std::vector<Attribute> outer_attrs, Location locus)\r\n          |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~\r\n\r\n    In file included from [...]/gcc/rust/backend/rust-compile-context.h:27,\r\n                     from [...]/gcc/rust/backend/rust-compile.h:24,\r\n                     from [...]/gcc/rust/rust-session-manager.cc:41:\r\n    [...]/gcc/rust/backend/rust-compile-tyty.h: In member function \u2018virtual void Rust::Compile::TyTyCompile::visit(Rust::TyTy::FnPtr&)\u2019:\r\n    [...]/gcc/rust/backend/rust-compile-tyty.h:67:28: error: unused parameter \u2018type\u2019 [-Werror=unused-parameter]\r\n       67 |   void visit (TyTy::FnPtr &type) override { gcc_unreachable (); }\r\n          |               ~~~~~~~~~~~~~^~~~\r\n\r\n    [...]/gcc/rust/rust-gcc.cc: In member function \u2018virtual Btype* Gcc_backend::function_ptr_type(Btype*, const std::vector<Btype*>&, Location)\u2019:\r\n    [...]/gcc/rust/rust-gcc.cc:998:42: error: unused parameter \u2018locus\u2019 [-Werror=unused-parameter]\r\n      998 |                                 Location locus)\r\n          |                                 ~~~~~~~~~^~~~~\r\n\r\n    [...]/gcc/rust/rust-lang.cc: In function \u2018void grs_langhook_init_options_struct(gcc_options*)\u2019:\r\n    [...]/gcc/rust/rust-lang.cc:153:55: error: unused parameter \u2018opts\u2019 [-Werror=unused-parameter]\r\n      153 | grs_langhook_init_options_struct (struct gcc_options *opts)\r\n          |                                   ~~~~~~~~~~~~~~~~~~~~^~~~\n\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc4a9549145861a2e71c552f06e53c860e39d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc4a9549145861a2e71c552f06e53c860e39d9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc4a9549145861a2e71c552f06e53c860e39d9a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c97c8588321a106512affb2935b8ec1f836804f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c97c8588321a106512affb2935b8ec1f836804f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c97c8588321a106512affb2935b8ec1f836804f"}, {"sha": "114bd7b45ea3db56fbd07048857db102fe87821f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114bd7b45ea3db56fbd07048857db102fe87821f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/114bd7b45ea3db56fbd07048857db102fe87821f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "dde833fe7fdf04b849b8b2f089f2d95d15f0b274", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=edc4a9549145861a2e71c552f06e53c860e39d9a", "patch": "@@ -3214,7 +3214,7 @@ class RangeExpr : public ExprWithoutBlock\n   Location get_locus_slow () const final override { return get_locus (); }\n \n   // should never be called - error if called\n-  void set_outer_attrs (std::vector<Attribute> new_attrs) override\n+  void set_outer_attrs (std::vector<Attribute> /* new_attrs */) override\n   {\n     rust_assert (false);\n   }\n@@ -4374,7 +4374,7 @@ class IfLetExpr : public ExprWithBlock\n \n   IfLetExpr (std::vector<std::unique_ptr<Pattern> > match_arm_patterns,\n \t     std::unique_ptr<Expr> value, std::unique_ptr<BlockExpr> if_block,\n-\t     std::vector<Attribute> outer_attrs, Location locus)\n+\t     std::vector<Attribute> /* outer_attrs */, Location locus)\n     : match_arm_patterns (std::move (match_arm_patterns)),\n       value (std::move (value)), if_block (std::move (if_block)), locus (locus)\n   {}"}, {"sha": "28db2897184706ebdca8ef4d172248b63b496732", "filename": "gcc/rust/backend/rust-compile-tyty.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Fbackend%2Frust-compile-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Fbackend%2Frust-compile-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-tyty.h?ref=edc4a9549145861a2e71c552f06e53c860e39d9a", "patch": "@@ -64,7 +64,7 @@ class TyTyCompile : public TyTy::TyVisitor\n \n   void visit (TyTy::ParamType &) override { gcc_unreachable (); }\n \n-  void visit (TyTy::FnPtr &type) override { gcc_unreachable (); }\n+  void visit (TyTy::FnPtr &) override { gcc_unreachable (); }\n \n   void visit (TyTy::FnType &type) override\n   {"}, {"sha": "b23d14114cd8627a2c97b071e9a6c1ef1af8d154", "filename": "gcc/rust/rust-gcc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Frust-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Frust-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc.cc?ref=edc4a9549145861a2e71c552f06e53c860e39d9a", "patch": "@@ -995,7 +995,7 @@ Gcc_backend::function_type (const Btyped_identifier &receiver,\n Btype *\n Gcc_backend::function_ptr_type (Btype *result_type,\n \t\t\t\tconst std::vector<Btype *> &parameters,\n-\t\t\t\tLocation locus)\n+\t\t\t\tLocation /* locus */)\n {\n   tree args = NULL_TREE;\n   tree *pp = &args;"}, {"sha": "a6fd48ad05b29e6c332abeda902b28d0404a2a0c", "filename": "gcc/rust/rust-lang.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Frust-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc4a9549145861a2e71c552f06e53c860e39d9a/gcc%2Frust%2Frust-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-lang.cc?ref=edc4a9549145861a2e71c552f06e53c860e39d9a", "patch": "@@ -150,7 +150,7 @@ grs_langhook_option_lang_mask (void)\n \n /* Initialize the options structure. */\n static void\n-grs_langhook_init_options_struct (struct gcc_options *opts)\n+grs_langhook_init_options_struct (struct gcc_options * /* opts */)\n {\n   // nothing yet - used by frontends to change specific options for the language\n   session.init_options ();"}]}