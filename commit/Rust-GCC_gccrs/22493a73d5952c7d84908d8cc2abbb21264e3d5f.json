{"sha": "22493a73d5952c7d84908d8cc2abbb21264e3d5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI0OTNhNzNkNTk1MmM3ZDg0OTA4ZDhjYzJhYmJiMjEyNjRlM2Q1Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-12-06T10:25:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-12-06T10:25:24Z"}, "message": "re PR libstdc++/38421 (libstdc++-v3/include/tr1/ell_integral.tcc contains __ea identifier)\n\n2008-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/38421\n\t* include/tr1/ell_integral.tcc: Avoid __ea, future SPU badname.\n\t* doc/xml/manual/appendix_contributing.xml: Add __ea to the list\n\tof badnames.\n\nFrom-SVN: r142519", "tree": {"sha": "81c02a1e0055475356cd6644161392934d00cf90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c02a1e0055475356cd6644161392934d00cf90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22493a73d5952c7d84908d8cc2abbb21264e3d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22493a73d5952c7d84908d8cc2abbb21264e3d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22493a73d5952c7d84908d8cc2abbb21264e3d5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22493a73d5952c7d84908d8cc2abbb21264e3d5f/comments", "author": null, "committer": null, "parents": [{"sha": "c0ee00211f683cd8a0974cb211822c50b35b6782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ee00211f683cd8a0974cb211822c50b35b6782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ee00211f683cd8a0974cb211822c50b35b6782"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "7bcae27edb988c9f08275ddcbabea6bedb71ef32", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22493a73d5952c7d84908d8cc2abbb21264e3d5f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22493a73d5952c7d84908d8cc2abbb21264e3d5f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=22493a73d5952c7d84908d8cc2abbb21264e3d5f", "patch": "@@ -1,3 +1,10 @@\n+2008-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/38421\n+\t* include/tr1/ell_integral.tcc: Avoid __ea, future SPU badname.\n+\t* doc/xml/manual/appendix_contributing.xml: Add __ea to the list\n+\tof badnames.\n+\n 2008-12-05  Tom Tromey  <tromey@redhat.com>\n \n \t* include/tr1_impl/functional (_Mu): Fix typo."}, {"sha": "86723d6913a5e70fb3487bea884b0588cde8a190", "filename": "libstdc++-v3/doc/xml/manual/appendix_contributing.xml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22493a73d5952c7d84908d8cc2abbb21264e3d5f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22493a73d5952c7d84908d8cc2abbb21264e3d5f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml?ref=22493a73d5952c7d84908d8cc2abbb21264e3d5f", "patch": "@@ -364,6 +364,9 @@ indicate a place that may require attention for multi-thread safety.\n       _res_ext\n       __tg_*\n \n+      SPU adds:\n+      __ea\n+\n       For GCC:\n \n       [Note that this list is out of date. It applies to the old"}, {"sha": "d1587fc66e6cbc99bb8b22f9abfc28f3c5893eec", "filename": "libstdc++-v3/include/tr1/ell_integral.tcc", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22493a73d5952c7d84908d8cc2abbb21264e3d5f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22493a73d5952c7d84908d8cc2abbb21264e3d5f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc?ref=22493a73d5952c7d84908d8cc2abbb21264e3d5f", "patch": "@@ -371,17 +371,18 @@ namespace tr1\n               __zn = __c0 * (__zn + __lambda);\n             }\n \n-          _Tp __ea = __xndev * __yndev;\n+\t  // Note: __ea is an SPU badname.\n+          _Tp __eaa = __xndev * __yndev;\n           _Tp __eb = __zndev * __zndev;\n-          _Tp __ec = __ea - __eb;\n-          _Tp __ed = __ea - _Tp(6) * __eb;\n+          _Tp __ec = __eaa - __eb;\n+          _Tp __ed = __eaa - _Tp(6) * __eb;\n           _Tp __ef = __ed + __ec + __ec;\n           _Tp __s1 = __ed * (-__c1 + __c3 * __ed\n                                    / _Tp(3) - _Tp(3) * __c4 * __zndev * __ef\n                                    / _Tp(2));\n           _Tp __s2 = __zndev\n                    * (__c2 * __ef\n-                    + __zndev * (-__c3 * __ec - __zndev * __c4 - __ea));\n+                    + __zndev * (-__c3 * __ec - __zndev * __c4 - __eaa));\n \n           return _Tp(3) * __sigma + __power4 * (_Tp(1) + __s1 + __s2)\n                                         / (__mu * std::sqrt(__mu));\n@@ -634,16 +635,17 @@ namespace tr1\n               __pn = __c0 * (__pn + __lambda);\n             }\n \n-          _Tp __ea = __xndev * (__yndev + __zndev) + __yndev * __zndev;\n+\t  // Note: __ea is an SPU badname.\n+          _Tp __eaa = __xndev * (__yndev + __zndev) + __yndev * __zndev;\n           _Tp __eb = __xndev * __yndev * __zndev;\n           _Tp __ec = __pndev * __pndev;\n-          _Tp __e2 = __ea - _Tp(3) * __ec;\n-          _Tp __e3 = __eb + _Tp(2) * __pndev * (__ea - __ec);\n+          _Tp __e2 = __eaa - _Tp(3) * __ec;\n+          _Tp __e3 = __eb + _Tp(2) * __pndev * (__eaa - __ec);\n           _Tp __s1 = _Tp(1) + __e2 * (-__c1 + _Tp(3) * __c3 * __e2 / _Tp(4)\n                             - _Tp(3) * __c4 * __e3 / _Tp(2));\n           _Tp __s2 = __eb * (__c2 / _Tp(2)\n                    + __pndev * (-__c3 - __c3 + __pndev * __c4));\n-          _Tp __s3 = __pndev * __ea * (__c2 - __pndev * __c3)\n+          _Tp __s3 = __pndev * __eaa * (__c2 - __pndev * __c3)\n                    - __c2 * __pndev * __ec;\n \n           return _Tp(3) * __sigma + __power4 * (__s1 + __s2 + __s3)"}]}