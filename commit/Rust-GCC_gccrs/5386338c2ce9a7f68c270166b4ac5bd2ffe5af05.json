{"sha": "5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM4NjMzOGMyY2U5YTdmNjhjMjcwMTY2YjRhYzViZDJmZmU1YWYwNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-19T18:32:57Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-19T18:32:57Z"}, "message": "re PR c/46547 (internal compiler error when converting a complex to a bool)\n\n\tPR c/46547\n\t* c-tree.h (in_late_binary_op): Move to c-family/c-common.h.\n\t* c-typeck.c (in_late_binary_op): Move to c-family/c-common.c.\n\nc-family:\n\t* c-common.c (in_late_binary_op): Define.\n\t(c_common_truthvalue_conversion): Check in_late_binary_op before\n\tcalling c_save_expr.\n\t* c-common.h (in_late_binary_op): Declare.\n\ntestsuite:\n\t* gcc.c-torture/compile/pr46547-1.c: New test.\n\nFrom-SVN: r166951", "tree": {"sha": "9151e4c17120304997a7c6d34c179af7fb0dcd7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9151e4c17120304997a7c6d34c179af7fb0dcd7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a336abaa12e18d6f3e36e29c57bd7a2665a33f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a336abaa12e18d6f3e36e29c57bd7a2665a33f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a336abaa12e18d6f3e36e29c57bd7a2665a33f7"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "4d467a2341e453dc3a809567dd0b6ebf74f02f02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -1,3 +1,9 @@\n+2010-11-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/46547\n+\t* c-tree.h (in_late_binary_op): Move to c-family/c-common.h.\n+\t* c-typeck.c (in_late_binary_op): Move to c-family/c-common.c.\n+\n 2010-11-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* doc/extend.texi (Function attributes): Document PowerPC target"}, {"sha": "1c4b3f5506eeaf5d7af087d71ab7c9fc7c432c8e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -1,3 +1,11 @@\n+2010-11-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/46547\n+\t* c-common.c (in_late_binary_op): Define.\n+\t(c_common_truthvalue_conversion): Check in_late_binary_op before\n+\tcalling c_save_expr.\n+\t* c-common.h (in_late_binary_op): Declare.\n+\n 2010-11-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-opts.c (c_common_handle_option): Update calls to"}, {"sha": "cd9175adb7c1e85de7084722fd4c0883ea2e4fee", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -271,6 +271,14 @@ tree (*make_fname_decl) (location_t, tree, int);\n    executed.  */\n int c_inhibit_evaluation_warnings;\n \n+/* Whether we are building a boolean conversion inside\n+   convert_for_assignment, or some other late binary operation.  If\n+   build_binary_op is called for C (from code shared by C and C++) in\n+   this case, then the operands have already been folded and the\n+   result will not be folded again, so C_MAYBE_CONST_EXPR should not\n+   be generated.  */\n+bool in_late_binary_op;\n+\n /* Whether lexing has been completed, so subsequent preprocessor\n    errors should use the compiler's input_location.  */\n bool done_lexing = false;\n@@ -3939,7 +3947,7 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n \n   if (TREE_CODE (TREE_TYPE (expr)) == COMPLEX_TYPE)\n     {\n-      tree t = c_save_expr (expr);\n+      tree t = (in_late_binary_op ? save_expr (expr) : c_save_expr (expr));\n       expr = (build_binary_op\n \t      (EXPR_LOCATION (expr),\n \t       (TREE_SIDE_EFFECTS (expr)"}, {"sha": "c01b183203a6e775d646970acd409f6ea5dc9048", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -675,6 +675,7 @@ extern tree (*make_fname_decl) (location_t, tree, int);\n extern void c_register_addr_space (const char *str, addr_space_t as);\n \n /* In c-common.c.  */\n+extern bool in_late_binary_op;\n extern const char *c_addr_space_name (addr_space_t as);\n extern tree identifier_global_value (tree);\n extern void record_builtin_type (enum rid, const char *, tree);"}, {"sha": "64e784407f134bfa3ecd741450bcbd8f5255a296", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -501,7 +501,6 @@ extern void c_initialize_diagnostics (diagnostic_context *);\n extern bool c_vla_unspec_p (tree x, tree fn);\n \n /* in c-typeck.c */\n-extern bool in_late_binary_op;\n extern int in_alignof;\n extern int in_sizeof;\n extern int in_typeof;"}, {"sha": "09e9ca730394e49722bd71a8e1eba6733cf18517", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -51,13 +51,6 @@ enum impl_conv {\n   ic_return\n };\n \n-/* Whether we are building a boolean conversion inside\n-   convert_for_assignment, or some other late binary operation.  If\n-   build_binary_op is called (from code shared with C++) in this case,\n-   then the operands have already been folded and the result will not\n-   be folded again, so C_MAYBE_CONST_EXPR should not be generated.  */\n-bool in_late_binary_op;\n-\n /* The level of nesting inside \"__alignof__\".  */\n int in_alignof;\n "}, {"sha": "c80e04246f62e4d7d3cd38b335d09cbe2c5354fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -1,3 +1,8 @@\n+2010-11-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/46547\n+\t* gcc.c-torture/compile/pr46547-1.c: New test.\n+\n 2010-11-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/gcc-defs.exp (gcc-set-multilib-library-path): Use eval to"}, {"sha": "67d8e1e7e9aa9355b1633ee9c23f23b34a0746f5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr46547-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46547-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5386338c2ce9a7f68c270166b4ac5bd2ffe5af05/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46547-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46547-1.c?ref=5386338c2ce9a7f68c270166b4ac5bd2ffe5af05", "patch": "@@ -0,0 +1,6 @@\n+void foo (void) {\n+  _Bool d;\n+  long double _Complex *s;\n+\n+  d = *s++;\n+}"}]}