{"sha": "56871768b4cf5c2fd82456e03ae2f83a9789d2fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY4NzE3NjhiNGNmNWMyZmQ4MjQ1NmUwM2FlMmY4M2E5Nzg5ZDJmYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-05-05T07:35:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-05-05T07:35:13Z"}, "message": "tree.c (next_type_uid): Change type to unsigned.\n\n\t* tree.c (next_type_uid): Change type to unsigned.\n\t(type_hash_canon): Decrement back next_type_uid if\n\tfreeing a type node with the highest TYPE_UID.  For INTEGER_TYPEs\n\talso ggc_free TYPE_MIN_VALUE, TYPE_MAX_VALUE and TYPE_CACHED_VALUES\n\tif possible.\n\nFrom-SVN: r247628", "tree": {"sha": "3931dd8a559a4ebe52383d293c6f640d81e3894d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3931dd8a559a4ebe52383d293c6f640d81e3894d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56871768b4cf5c2fd82456e03ae2f83a9789d2fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56871768b4cf5c2fd82456e03ae2f83a9789d2fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56871768b4cf5c2fd82456e03ae2f83a9789d2fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56871768b4cf5c2fd82456e03ae2f83a9789d2fb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18c182ff7d54b3ca7bbaeb0a79dbd863a234b470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c182ff7d54b3ca7bbaeb0a79dbd863a234b470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c182ff7d54b3ca7bbaeb0a79dbd863a234b470"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "44df0d7ecddc4d0fa1317946806537d1ba3afa3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56871768b4cf5c2fd82456e03ae2f83a9789d2fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56871768b4cf5c2fd82456e03ae2f83a9789d2fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56871768b4cf5c2fd82456e03ae2f83a9789d2fb", "patch": "@@ -1,3 +1,11 @@\n+2017-05-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree.c (next_type_uid): Change type to unsigned.\n+\t(type_hash_canon): Decrement back next_type_uid if\n+\tfreeing a type node with the highest TYPE_UID.  For INTEGER_TYPEs\n+\talso ggc_free TYPE_MIN_VALUE, TYPE_MAX_VALUE and TYPE_CACHED_VALUES\n+\tif possible.\n+\n 2017-05-04  Martin Sebor  <msebor@redhat.com>\n \n \t* builtins.c: Fix a trivial typo in a comment."}, {"sha": "b76b521df61a4ce7bdbeaa1a6e76d01690c9ed8f", "filename": "gcc/tree.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56871768b4cf5c2fd82456e03ae2f83a9789d2fb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56871768b4cf5c2fd82456e03ae2f83a9789d2fb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=56871768b4cf5c2fd82456e03ae2f83a9789d2fb", "patch": "@@ -151,7 +151,7 @@ static const char * const tree_node_kind_names[] = {\n /* Unique id for next decl created.  */\n static GTY(()) int next_decl_uid;\n /* Unique id for next type created.  */\n-static GTY(()) int next_type_uid = 1;\n+static GTY(()) unsigned next_type_uid = 1;\n /* Unique id for next debug decl created.  Use negative numbers,\n    to catch erroneous uses.  */\n static GTY(()) int next_debug_decl_uid;\n@@ -7188,6 +7188,22 @@ type_hash_canon (unsigned int hashcode, tree type)\n     {\n       tree t1 = ((type_hash *) *loc)->type;\n       gcc_assert (TYPE_MAIN_VARIANT (t1) == t1);\n+      if (TYPE_UID (type) + 1 == next_type_uid)\n+\t--next_type_uid;\n+      /* Free also min/max values and the cache for integer\n+\t types.  This can't be done in free_node, as LTO frees\n+\t those on its own.  */\n+      if (TREE_CODE (type) == INTEGER_TYPE)\n+\t{\n+\t  if (TYPE_MIN_VALUE (type)\n+\t      && TREE_TYPE (TYPE_MIN_VALUE (type)) == type)\n+\t    ggc_free (TYPE_MIN_VALUE (type));\n+\t  if (TYPE_MAX_VALUE (type)\n+\t      && TREE_TYPE (TYPE_MAX_VALUE (type)) == type)\n+\t    ggc_free (TYPE_MAX_VALUE (type));\n+\t  if (TYPE_CACHED_VALUES_P (type))\n+\t    ggc_free (TYPE_CACHED_VALUES (type));\n+\t}\n       free_node (type);\n       return t1;\n     }"}]}