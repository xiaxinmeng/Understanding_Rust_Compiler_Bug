{"sha": "3a37d6f68c50d38303cf04039f79fc65e72d5a27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EzN2Q2ZjY4YzUwZDM4MzAzY2YwNDAzOWY3OWZjNjVlNzJkNWEyNw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-06-18T22:13:54Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-06-18T22:13:54Z"}, "message": "[PR90862] OpenACC 'declare' ICE when nested inside another construct\n\n\tgcc/\n\tPR middle-end/90862\n\t* omp-low.c (check_omp_nesting_restrictions): Handle\n\tGF_OMP_TARGET_KIND_OACC_DECLARE.\n\tgcc/testsuite/\n\tPR middle-end/90862\n\t* c-c++-common/goacc/declare-1.c: Update.\n\t* c-c++-common/goacc/declare-2.c: Likewise.\n\tlibgomp/\n\tPR middle-end/90862\n\t* testsuite/libgomp.oacc-c-c++-common/declare-1.c: Update.\n\nFrom-SVN: r272444", "tree": {"sha": "6ad78acf990e5a9e6427ec88b9d7d916e7409d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ad78acf990e5a9e6427ec88b9d7d916e7409d9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a37d6f68c50d38303cf04039f79fc65e72d5a27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a37d6f68c50d38303cf04039f79fc65e72d5a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a37d6f68c50d38303cf04039f79fc65e72d5a27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a37d6f68c50d38303cf04039f79fc65e72d5a27/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab2c347c358036f017003ab7c1043705c6482a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2c347c358036f017003ab7c1043705c6482a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab2c347c358036f017003ab7c1043705c6482a8c"}], "stats": {"total": 233, "additions": 223, "deletions": 10}, "files": [{"sha": "43a0a232dc2188682dbc634c98b9da322993a1df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -1,3 +1,9 @@\n+2019-06-18  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/90862\n+\t* omp-low.c (check_omp_nesting_restrictions): Handle\n+\tGF_OMP_TARGET_KIND_OACC_DECLARE.\n+\n 2019-06-18  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (@cmp<mode>_1): Rename from cmp<mode>_1."}, {"sha": "b0f1d94abf73f85bf157bb88e4f764720cb82d97", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -3119,6 +3119,7 @@ check_omp_nesting_restrictions (gimple *stmt, omp_context *ctx)\n \t    case GF_OMP_TARGET_KIND_OACC_UPDATE: stmt_name = \"update\"; break;\n \t    case GF_OMP_TARGET_KIND_OACC_ENTER_EXIT_DATA:\n \t      stmt_name = \"enter/exit data\"; break;\n+\t    case GF_OMP_TARGET_KIND_OACC_DECLARE: stmt_name = \"declare\"; break;\n \t    case GF_OMP_TARGET_KIND_OACC_HOST_DATA: stmt_name = \"host_data\";\n \t      break;\n \t    default: gcc_unreachable ();"}, {"sha": "473fd66d39fd5a9d115ffe68c5b8878850840143", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -1,3 +1,9 @@\n+2019-06-18  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/90862\n+\t* c-c++-common/goacc/declare-1.c: Update.\n+\t* c-c++-common/goacc/declare-2.c: Likewise.\n+\n 2019-06-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/84698"}, {"sha": "7c4380f4f04191cad106dab930583c6d49cc3eb1", "filename": "gcc/testsuite/c-c++-common/goacc/declare-1.c", "status": "modified", "additions": 80, "deletions": 2, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-1.c?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -1,5 +1,5 @@\n-/* Test valid uses of declare directive.  */\n-/* { dg-do compile } */\n+/* Test valid use of the OpenACC 'declare' directive.  */\n+\n \n int v0;\n #pragma acc declare create(v0)\n@@ -25,6 +25,7 @@ int v9;\n int v10;\n #pragma acc declare present_or_create(v10)\n \n+\n void\n f (void)\n {\n@@ -93,3 +94,80 @@ f (void)\n   }\n  b:;\n }\n+\n+\n+/* The same as 'f' but everything contained in an OpenACC 'data' construct.  */\n+\n+void\n+f_data (void)\n+{\n+#pragma acc data\n+  {\n+    int va0;\n+# pragma acc declare create(va0)\n+\n+    int va1;\n+# pragma acc declare copyin(va1)\n+\n+    int *va2;\n+# pragma acc declare deviceptr(va2)\n+\n+    int va3;\n+# pragma acc declare device_resident(va3)\n+\n+#if 0 /* TODO */\n+    extern int ve0;\n+# pragma acc declare create(ve0)\n+\n+    extern int ve1;\n+# pragma acc declare copyin(ve1)\n+\n+    extern int *ve2;\n+# pragma acc declare deviceptr(ve2)\n+\n+    extern int ve3;\n+# pragma acc declare device_resident(ve3)\n+\n+    extern int ve4;\n+# pragma acc declare link(ve4)\n+\n+    extern int ve5;\n+# pragma acc declare present_or_copyin(ve5)\n+ \n+    extern int ve6;\n+# pragma acc declare present_or_create(ve6)\n+#endif\n+\n+    int va5;\n+# pragma acc declare copy(va5)\n+\n+    int va6;\n+# pragma acc declare copyout(va6)\n+\n+    int va7;\n+# pragma acc declare present(va7)\n+\n+    int va8;\n+# pragma acc declare present_or_copy(va8)\n+\n+    int va9;\n+# pragma acc declare present_or_copyin(va9)\n+\n+    int va10;\n+# pragma acc declare present_or_copyout(va10)\n+\n+    int va11;\n+# pragma acc declare present_or_create(va11)\n+\n+  a:\n+    {\n+      int va0;\n+# pragma acc declare create(va0)\n+      if (v1)\n+\tgoto a;\n+      else\n+\tgoto b;\n+    }\n+  b:;\n+  }\n+}"}, {"sha": "af43b6bc816261d49d6944b02ed139b324d2fa08", "filename": "gcc/testsuite/c-c++-common/goacc/declare-2.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-2.c?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -1,5 +1,5 @@\n-/* Test invalid uses of declare directive.  */\n-/* { dg-do compile } */\n+/* Test invalid use of the OpenACC 'declare' directive.  */\n+\n \n #pragma acc declare /* { dg-error \"no valid clauses\" } */\n \n@@ -42,6 +42,7 @@ int va11;\n int va12;\n #pragma acc declare create (va12) link (va12) /* { dg-error \"more than once\" } */\n \n+\n void\n f (void)\n {\n@@ -65,3 +66,33 @@ f (void)\n \n #pragma acc declare present (v2) /* { dg-error \"invalid use of\" } */\n }\n+\n+\n+/* The same as 'f' but everything contained in an OpenACC 'data' construct.  */\n+\n+void\n+f_data (void)\n+{\n+#pragma acc data\n+  {\n+    int va0;\n+# pragma acc declare link(va0) /* { dg-error \"global variable\" } */\n+\n+    extern int ve0;\n+# pragma acc declare copy(ve0) /* { dg-error \"invalid use of\" } */\n+\n+    extern int ve1;\n+# pragma acc declare copyout(ve1) /* { dg-error \"invalid use of\" } */\n+\n+    extern int ve2;\n+# pragma acc declare present(ve2) /* { dg-error \"invalid use of\" } */\n+\n+    extern int ve3;\n+# pragma acc declare present_or_copy(ve3) /* { dg-error \"invalid use of\" } */\n+\n+    extern int ve4;\n+# pragma acc declare present_or_copyout(ve4) /* { dg-error \"invalid use of\" } */\n+\n+# pragma acc declare present (v2) /* { dg-error \"invalid use of\" } */\n+  }\n+}"}, {"sha": "06004aafde989d6ed4e52515421bb4328c1220bd", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -1,3 +1,8 @@\n+2019-06-18  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/90862\n+\t* testsuite/libgomp.oacc-c-c++-common/declare-1.c: Update.\n+\n 2019-06-16  Tom de Vries  <tdevries@suse.de>\n \n \tPR tree-optimization/89376"}, {"sha": "087b95456926c1928f9560f8df40f912182b5194", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/declare-1.c", "status": "modified", "additions": 92, "deletions": 6, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37d6f68c50d38303cf04039f79fc65e72d5a27/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdeclare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37d6f68c50d38303cf04039f79fc65e72d5a27/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdeclare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdeclare-1.c?ref=3a37d6f68c50d38303cf04039f79fc65e72d5a27", "patch": "@@ -1,6 +1,5 @@\n #include <openacc.h>\n #include <stdlib.h>\n-#include <stdio.h>\n \n #define N 8\n \n@@ -39,14 +38,14 @@ subr1 (int *a)\n   }\n }\n \n-int b[8];\n+int b[N];\n #pragma acc declare create (b)\n \n-int d[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+int d[N] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n #pragma acc declare copyin (d)\n \n-int\n-main (int argc, char **argv)\n+static void\n+f (void)\n {\n   int a[N];\n   int e[N];\n@@ -110,11 +109,98 @@ main (int argc, char **argv)\n \n   subr2 (&a[0]);\n \n-  for (i = 0; i < 1; i++)\n+  for (i = 0; i < N; i++)\n     {\n       if (a[i] != 1234 * 6)\n \tabort ();\n     }\n+}\n+\n+\n+/* The same as 'f' but everything contained in an OpenACC 'data' construct.  */\n+\n+static void\n+f_data (void)\n+{\n+#pragma acc data\n+  {\n+    int a[N];\n+    int e[N];\n+# pragma acc declare create (e)\n+    int i;\n+\n+    for (i = 0; i < N; i++)\n+      a[i] = i + 1;\n+\n+    if (!acc_is_present (&b, sizeof (b)))\n+      abort ();\n+\n+    if (!acc_is_present (&d, sizeof (d)))\n+      abort ();\n+\n+    if (!acc_is_present (&e, sizeof (e)))\n+      abort ();\n+\n+# pragma acc parallel copyin (a[0:N])\n+    {\n+      for (i = 0; i < N; i++)\n+\t{\n+\t  b[i] = a[i];\n+\t  a[i] = b[i];\n+\t}\n+    }\n+\n+    for (i = 0; i < N; i++)\n+      {\n+\tif (a[i] != i + 1)\n+\t  abort ();\n+      }\n+\n+# pragma acc parallel copy (a[0:N])\n+    {\n+      for (i = 0; i < N; i++)\n+\t{\n+\t  e[i] = a[i] + d[i];\n+\t  a[i] = e[i];\n+\t}\n+    }\n+\n+    for (i = 0; i < N; i++)\n+      {\n+\tif (a[i] != (i + 1) * 2)\n+\t  abort ();\n+      }\n+\n+    for (i = 0; i < N; i++)\n+      {\n+\ta[i] = 1234;\n+      }\n+\n+    subr1 (&a[0]);\n+\n+    for (i = 0; i < N; i++)\n+      {\n+\tif (a[i] != 1234 * 2)\n+\t  abort ();\n+      }\n+\n+    subr2 (&a[0]);\n+\n+    for (i = 0; i < N; i++)\n+      {\n+\tif (a[i] != 1234 * 6)\n+\t  abort ();\n+      }\n+  }\n+}\n+\n+\n+int\n+main (int argc, char **argv)\n+{\n+  f ();\n+\n+  f_data ();\n \n   return 0;\n }"}]}