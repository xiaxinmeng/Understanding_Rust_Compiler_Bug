{"sha": "b278301b1b1724a1edb673afafc8c90e211f1906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI3ODMwMWIxYjE3MjRhMWVkYjY3M2FmYWZjOGM5MGUyMTFmMTkwNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T22:48:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T22:48:42Z"}, "message": "(may_trap_p, case EXPR_LIST): New case.\n\nFrom-SVN: r7983", "tree": {"sha": "72e13b7dcad0e3739d0f659c21d1dd849e1f9efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72e13b7dcad0e3739d0f659c21d1dd849e1f9efb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b278301b1b1724a1edb673afafc8c90e211f1906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b278301b1b1724a1edb673afafc8c90e211f1906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b278301b1b1724a1edb673afafc8c90e211f1906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b278301b1b1724a1edb673afafc8c90e211f1906/comments", "author": null, "committer": null, "parents": [{"sha": "8d60a67df2fd94c12c4f81b983c2602c521af60a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d60a67df2fd94c12c4f81b983c2602c521af60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d60a67df2fd94c12c4f81b983c2602c521af60a"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d52bd646686ff1c83c5d911213522d575d53cf7f", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b278301b1b1724a1edb673afafc8c90e211f1906/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b278301b1b1724a1edb673afafc8c90e211f1906/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=b278301b1b1724a1edb673afafc8c90e211f1906", "patch": "@@ -1603,6 +1603,10 @@ may_trap_p (x)\n \t we can link this file into other programs.  */\n       if (GET_CODE (XEXP (x, 1)) == CONST_INT && INTVAL (XEXP (x, 1)) == 0)\n \treturn 1;\n+    case EXPR_LIST:\n+      /* An EXPR_LIST is used to represent a function call.  This\n+\t certainly may trap.  */\n+      return 1;\n     default:\n       /* Any floating arithmetic may trap.  */\n       if (GET_MODE_CLASS (GET_MODE (x)) == MODE_FLOAT)"}]}