{"sha": "2afed683ea103c28f0b17a3a996ba5e69bf8d749", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFmZWQ2ODNlYTEwM2MyOGYwYjE3YTNhOTk2YmE1ZTY5YmY4ZDc0OQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-07-30T14:50:50Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-07-30T14:50:50Z"}, "message": "2004-07-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/EmbeddedWindow.java\n\t(addNotify): Use AccessController to allow execution of privileged\n\tcode.\n\nFrom-SVN: r85337", "tree": {"sha": "a442b6f713d775dc41e2cad274ba6f5cea81feae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a442b6f713d775dc41e2cad274ba6f5cea81feae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2afed683ea103c28f0b17a3a996ba5e69bf8d749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afed683ea103c28f0b17a3a996ba5e69bf8d749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afed683ea103c28f0b17a3a996ba5e69bf8d749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afed683ea103c28f0b17a3a996ba5e69bf8d749/comments", "author": null, "committer": null, "parents": [{"sha": "0a925a32e2dfcc71b77b2bd506e0239c206c2f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a925a32e2dfcc71b77b2bd506e0239c206c2f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a925a32e2dfcc71b77b2bd506e0239c206c2f61"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "db17ad758e2c987a548c9e763302679a5ddf526c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afed683ea103c28f0b17a3a996ba5e69bf8d749/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afed683ea103c28f0b17a3a996ba5e69bf8d749/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2afed683ea103c28f0b17a3a996ba5e69bf8d749", "patch": "@@ -1,3 +1,9 @@\n+2004-07-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/EmbeddedWindow.java\n+\t(addNotify): Use AccessController to allow execution of privileged\n+\tcode.\n+\n 2004-07-29  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/lang/MainThread.java:"}, {"sha": "08bc02755ea5b46aff0e79f78f8f79ca84e7044d", "filename": "libjava/gnu/java/awt/EmbeddedWindow.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afed683ea103c28f0b17a3a996ba5e69bf8d749/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afed683ea103c28f0b17a3a996ba5e69bf8d749/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java?ref=2afed683ea103c28f0b17a3a996ba5e69bf8d749", "patch": "@@ -40,11 +40,13 @@\n \n import gnu.classpath.Configuration;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n+import gnu.java.security.action.SetAccessibleAction;\n \n import java.awt.Component;\n import java.awt.Frame;\n import java.awt.Toolkit;\n import java.lang.reflect.Field;\n+import java.security.AccessController;\n \n /**\n  * Represents an AWT window that can be embedded into another\n@@ -88,13 +90,15 @@ public void addNotify()\n \n     if (! (tk instanceof EmbeddedWindowSupport))\n       throw new UnsupportedOperationException\n-        (\"Embedded windows are not supported by the current peers: \" + tk.getClass());\n+        (\"Embedded windows are not supported by the current peers: \"\n+\t + tk.getClass());\n \n     // Circumvent the package-privateness of the AWT internal\n     // java.awt.Component.peer member variable.\n     try\n       {\n \tField peerField = Component.class.getDeclaredField(\"peer\");\n+\tAccessController.doPrivileged(new SetAccessibleAction(peerField));\n \tpeerField.set(this, ((EmbeddedWindowSupport) tk).createEmbeddedWindow (this));\n       }\n     catch (IllegalAccessException e)"}]}