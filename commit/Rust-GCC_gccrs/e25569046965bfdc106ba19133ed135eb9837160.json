{"sha": "e25569046965bfdc106ba19133ed135eb9837160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI1NTY5MDQ2OTY1YmZkYzEwNmJhMTkxMzNlZDEzNWViOTgzNzE2MA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-04-28T10:21:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-28T10:21:24Z"}, "message": "inclhack.def (glibc_stdint): New fix.\n\n\t* inclhack.def (glibc_stdint): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/stdint.h: Update.\n\nFrom-SVN: r146883", "tree": {"sha": "98dd6d5179bb3516ea2451bba228d1f309859544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98dd6d5179bb3516ea2451bba228d1f309859544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e25569046965bfdc106ba19133ed135eb9837160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25569046965bfdc106ba19133ed135eb9837160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25569046965bfdc106ba19133ed135eb9837160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25569046965bfdc106ba19133ed135eb9837160/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2c45f08668a1e898d965d02914957d03ffb091f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c45f08668a1e898d965d02914957d03ffb091f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c45f08668a1e898d965d02914957d03ffb091f"}], "stats": {"total": 81, "additions": 76, "deletions": 5}, "files": [{"sha": "a6205bd5c29172b2a3dcec80138bdead57ef35fe", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=e25569046965bfdc106ba19133ed135eb9837160", "patch": "@@ -1,3 +1,9 @@\n+2009-04-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* inclhack.def (glibc_stdint): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/stdint.h: Update.\n+\n 2009-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in: Change copyright header to refer to version"}, {"sha": "652adeb0da7a802bc06ae213ef5ee74208bf1a50", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 49, "deletions": 5, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=e25569046965bfdc106ba19133ed135eb9837160", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday March 31, 2009 at 05:01:22 PM UTC\n+ * It has been AutoGen-ed  Tuesday April 28, 2009 at 10:20:23 AM UTC\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Mar 31 17:01:22 UTC 2009\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Apr 28 10:20:23 UTC 2009\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 180 fixup descriptions.\n+ * This file contains 181 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2217,6 +2217,44 @@ s/{ { 0, } }/{ { 0, 0, 0, 0, 0, 0 } }/\\n\\\n     \"-e\", \"/define[ \\t]\\\\+PTHREAD_COND_INITIALIZER/s/{ { 0, } }/{ { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }/\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Glibc_Stdint fix\n+ */\n+tSCC zGlibc_StdintName[] =\n+     \"glibc_stdint\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zGlibc_StdintList[] =\n+  \"stdint.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzGlibc_StdintMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zGlibc_StdintSelect0[] =\n+       \"GNU C Library\";\n+\n+#define    GLIBC_STDINT_TEST_CT  1\n+static tTestDesc aGlibc_StdintTests[] = {\n+  { TT_EGREP,    zGlibc_StdintSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Glibc_Stdint\n+ */\n+static const char* apzGlibc_StdintPatch[] = {\n+    \"format\",\n+    \"# define UINT8_C(c)\\tc\\n\\\n+# define UINT16_C(c)\\tc\",\n+    \"# define UINT8_C\\\\(c\\\\)\\tc ## U\\n\\\n+# define UINT16_C\\\\(c\\\\)\\tc ## U\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Glibc_Tgmath fix\n@@ -7325,9 +7363,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          225\n+#define REGEX_COUNT          226\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            180\n+#define FIX_COUNT            181\n \n /*\n  *  Enumerate the fixes\n@@ -7386,6 +7424,7 @@ typedef enum {\n     GLIBC_C99_INLINE_3_FIXIDX,\n     GLIBC_C99_INLINE_4_FIXIDX,\n     GLIBC_MUTEX_INIT_FIXIDX,\n+    GLIBC_STDINT_FIXIDX,\n     GLIBC_TGMATH_FIXIDX,\n     GNU_TYPES_FIXIDX,\n     HP_INLINE_FIXIDX,\n@@ -7781,6 +7820,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      GLIBC_MUTEX_INIT_TEST_CT, FD_MACH_ONLY,\n      aGlibc_Mutex_InitTests,   apzGlibc_Mutex_InitPatch, 0 },\n \n+  {  zGlibc_StdintName,    zGlibc_StdintList,\n+     apzGlibc_StdintMachs,\n+     GLIBC_STDINT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aGlibc_StdintTests,   apzGlibc_StdintPatch, 0 },\n+\n   {  zGlibc_TgmathName,    zGlibc_TgmathList,\n      apzGlibc_TgmathMachs,\n      GLIBC_TGMATH_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "0b7c3b094fa9c6f3957ab2a78835ddfcc8e242b4", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=e25569046965bfdc106ba19133ed135eb9837160", "patch": "@@ -1265,6 +1265,20 @@ fix = {\n };\n \n \n+/* glibc versions before 2.5 have a version of stdint.h that defines\n+   UINT8_C and UINT16_C to produce unsigned constants, as do uClibc\n+   versions with stdint.h based on those glibc versions.  */\n+fix = {\n+    hackname  = glibc_stdint;\n+    files     = stdint.h;\n+    select    = \"GNU C Library\";\n+    c_fix     = format;\n+    c_fix_arg = \"# define UINT8_C(c)\\tc\\n# define UINT16_C(c)\\tc\";\n+    c_fix_arg = \"# define UINT8_C\\\\(c\\\\)\\tc ## U\\n# define UINT16_C\\\\(c\\\\)\\tc ## U\";\n+    test_text = \"/* This file is part of the GNU C Library.  */\\n# define UINT8_C(c)\\tc ## U\\n# define UINT16_C(c)\\tc ## U\";\n+};\n+\n+\n /* glibc's tgmath.h relies on an expression that is not an integer\n    constant expression being treated as it was by GCC 4.4 and\n    earlier.  */"}, {"sha": "30ba3adac886e4e3db5df6b36d8367cb3d98381c", "filename": "fixincludes/tests/base/stdint.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2Ftests%2Fbase%2Fstdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25569046965bfdc106ba19133ed135eb9837160/fixincludes%2Ftests%2Fbase%2Fstdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdint.h?ref=e25569046965bfdc106ba19133ed135eb9837160", "patch": "@@ -9,6 +9,13 @@\n \n \n \n+#if defined( GLIBC_STDINT_CHECK )\n+/* This file is part of the GNU C Library.  */\n+# define UINT8_C(c)\tc\n+# define UINT16_C(c)\tc\n+#endif  /* GLIBC_STDINT_CHECK */\n+\n+\n #if defined( IRIX_STDINT_C99_CHECK )\n #if 0\n #error This header file is to be used only for c99 mode compilations"}]}