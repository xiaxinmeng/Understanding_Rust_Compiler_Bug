{"sha": "ecaf6f07808d7d2f5a3929de189d8799e8a085f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNhZjZmMDc4MDhkN2QyZjVhMzkyOWRlMTg5ZDg3OTllOGEwODVmNQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2006-11-16T08:57:50Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2006-11-16T08:57:50Z"}, "message": "arm.md (abssi2): Allow Thumb as well.\n\n\t* arm.md (abssi2): Allow Thumb as well.\t Use an SImode scratch for\n\tThumb.\n\t(arm_neg_abssi2): Renamed from neg_abssi2.\n\t(thumb_abssi2, thumb_neg_abssi2): New patterns with splitters.\n\nFrom-SVN: r118884", "tree": {"sha": "9b7c31f05a2310df35ce1701b32f9907cb69b8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b7c31f05a2310df35ce1701b32f9907cb69b8ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecaf6f07808d7d2f5a3929de189d8799e8a085f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecaf6f07808d7d2f5a3929de189d8799e8a085f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecaf6f07808d7d2f5a3929de189d8799e8a085f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecaf6f07808d7d2f5a3929de189d8799e8a085f5/comments", "author": null, "committer": null, "parents": [{"sha": "56829cae9cf564f26d4159f6599c045e71c0a41a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56829cae9cf564f26d4159f6599c045e71c0a41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56829cae9cf564f26d4159f6599c045e71c0a41a"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "c5ae49aec635e1d1d26e64e1fe14fbb69f67c3a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaf6f07808d7d2f5a3929de189d8799e8a085f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaf6f07808d7d2f5a3929de189d8799e8a085f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecaf6f07808d7d2f5a3929de189d8799e8a085f5", "patch": "@@ -1,3 +1,10 @@\n+2006-11-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (abssi2): Allow Thumb as well.\t Use an SImode scratch for\n+\tThumb.\n+\t(arm_neg_abssi2): Renamed from neg_abssi2.\n+\t(thumb_abssi2, thumb_neg_abssi2): New patterns with splitters.\n+\n 2006-11-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_function_sseregparm): Fix comment:"}, {"sha": "83a3cf41252e2107abe42c30af39636aaab8b5b0", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 38, "deletions": 5, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaf6f07808d7d2f5a3929de189d8799e8a085f5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaf6f07808d7d2f5a3929de189d8799e8a085f5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ecaf6f07808d7d2f5a3929de189d8799e8a085f5", "patch": "@@ -3066,12 +3066,17 @@\n   [(parallel\n     [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n \t  (abs:SI (match_operand:SI 1 \"s_register_operand\" \"\")))\n-     (clobber (reg:CC CC_REGNUM))])]\n-  \"TARGET_ARM\"\n-  \"\")\n+     (clobber (match_dup 2))])]\n+  \"TARGET_EITHER\"\n+  \"\n+  if (TARGET_THUMB)\n+    operands[2] = gen_rtx_SCRATCH (SImode);\n+  else\n+    operands[2] = gen_rtx_REG (CCmode, CC_REGNUM);\n+\")\n \n (define_insn \"*arm_abssi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r,&r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,&r\")\n \t(abs:SI (match_operand:SI 1 \"s_register_operand\" \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n@@ -3084,7 +3089,21 @@\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*neg_abssi2\"\n+(define_insn_and_split \"*thumb_abssi2\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=l\")\n+\t(abs:SI (match_operand:SI 1 \"s_register_operand\" \"l\")))\n+   (clobber (match_scratch:SI 2 \"=&l\"))]\n+  \"TARGET_THUMB\"\n+  \"#\"\n+  \"TARGET_THUMB && reload_completed\"\n+  [(set (match_dup 2) (ashiftrt:SI (match_dup 1) (const_int 31)))\n+   (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))\n+   (set (match_dup 0) (xor:SI (match_dup 0) (match_dup 2)))]\n+  \"\"\n+  [(set_attr \"length\" \"6\")]\n+)\n+\n+(define_insn \"*arm_neg_abssi2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,&r\")\n \t(neg:SI (abs:SI (match_operand:SI 1 \"s_register_operand\" \"0,r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n@@ -3098,6 +3117,20 @@\n    (set_attr \"length\" \"8\")]\n )\n \n+(define_insn_and_split \"*thumb_neg_abssi2\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=l\")\n+\t(neg:SI (abs:SI (match_operand:SI 1 \"s_register_operand\" \"l\"))))\n+   (clobber (match_scratch:SI 2 \"=&l\"))]\n+  \"TARGET_THUMB\"\n+  \"#\"\n+  \"TARGET_THUMB && reload_completed\"\n+  [(set (match_dup 2) (ashiftrt:SI (match_dup 1) (const_int 31)))\n+   (set (match_dup 0) (minus:SI (match_dup 2) (match_dup 1)))\n+   (set (match_dup 0) (xor:SI (match_dup 0) (match_dup 2)))]\n+  \"\"\n+  [(set_attr \"length\" \"6\")]\n+)\n+\n (define_expand \"abssf2\"\n   [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n \t(abs:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]"}]}