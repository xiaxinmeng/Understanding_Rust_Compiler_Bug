{"sha": "f3930418cb82000fae3cb4e98e870428800cf295", "node_id": "C_kwDOANBUbNoAKGYzOTMwNDE4Y2I4MjAwMGZhZTNjYjRlOThlODcwNDI4ODAwY2YyOTU", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-05T13:50:02Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-05T13:50:02Z"}, "message": "c++: templated static local var has value-dep addr [PR98930]\n\nHere uses_template_parms returns false for the dependent type A<&impl::i>,\nwhich causes tsubst_aggr_type to think it's non-dependent and not bother\nsubstituting into it, leading to breakage.\n\nThis patch fixes this by making has_value_dependent_address also return\ntrue for templated static local variables.\n\n\tPR c++/98930\n\ngcc/cp/ChangeLog:\n\n\t* pt.c (has_value_dependent_address): Return true for a static\n\tlocal variable from a function template.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1z/nontype4.C: New test.\n\t* g++.dg/cpp1z/nontype4a.C: New test.", "tree": {"sha": "5609e92195272b7a11bf3bb262eba6298b5f024c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5609e92195272b7a11bf3bb262eba6298b5f024c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3930418cb82000fae3cb4e98e870428800cf295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3930418cb82000fae3cb4e98e870428800cf295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3930418cb82000fae3cb4e98e870428800cf295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3930418cb82000fae3cb4e98e870428800cf295/comments", "author": null, "committer": null, "parents": [{"sha": "7f4192dd3d84cb3f6584ae847eae18519d1eb76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f4192dd3d84cb3f6584ae847eae18519d1eb76d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f4192dd3d84cb3f6584ae847eae18519d1eb76d"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "844b7c14fe42b0a42f404e63d697c26e3d342988", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3930418cb82000fae3cb4e98e870428800cf295/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3930418cb82000fae3cb4e98e870428800cf295/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f3930418cb82000fae3cb4e98e870428800cf295", "patch": "@@ -6760,8 +6760,15 @@ has_value_dependent_address (tree op)\n   if (DECL_P (op))\n     {\n       tree ctx = CP_DECL_CONTEXT (op);\n+\n       if (TYPE_P (ctx) && dependent_type_p (ctx))\n \treturn true;\n+\n+      if (VAR_P (op)\n+\t  && TREE_STATIC (op)\n+\t  && TREE_CODE (ctx) == FUNCTION_DECL\n+\t  && type_dependent_expression_p (ctx))\n+\treturn true;\n     }\n \n   return false;"}, {"sha": "ff476dcf1dfb53f3fdf831d0c88d60c0785bb015", "filename": "gcc/testsuite/g++.dg/cpp1z/nontype4.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3930418cb82000fae3cb4e98e870428800cf295/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3930418cb82000fae3cb4e98e870428800cf295/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype4.C?ref=f3930418cb82000fae3cb4e98e870428800cf295", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/98930\n+// { dg-do compile { target c++17 } }\n+\n+template<int*>\n+struct A { A() { } };\n+\n+template<class T>\n+void impl() {\n+  static int i;\n+  static A<&i> a;\n+}\n+\n+template void impl<int>();\n+template void impl<char>();"}, {"sha": "5b742926b6dbe1c7bcd1cddc45f8c528f7b5be95", "filename": "gcc/testsuite/g++.dg/cpp1z/nontype4a.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3930418cb82000fae3cb4e98e870428800cf295/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype4a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3930418cb82000fae3cb4e98e870428800cf295/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype4a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype4a.C?ref=f3930418cb82000fae3cb4e98e870428800cf295", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/98930\n+// { dg-do compile { target c++17 } }\n+\n+template<int*>\n+struct A { };\n+\n+template<class T>\n+auto impl() {\n+  static int i;\n+  return A<&i>();\n+}\n+\n+using type = decltype(impl<int>());\n+using type = decltype(impl<char>()); // { dg-error \"conflicting declaration\" }"}]}