{"sha": "d989dba8ef02c2406b7c9e62b352197dffc6b880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4OWRiYThlZjAyYzI0MDZiN2M5ZTYyYjM1MjE5N2RmZmM2Yjg4MA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-08-03T11:21:09Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-08-03T11:21:09Z"}, "message": "[c++] Don't emit exception tables for UI_NONE\n\nIf a target does not support exceptions, it can indicate this by returning\nUI_NONE in TARGET_EXCEPT_UNWIND_INFO.  Currently the compiler still emits\nexception tables for such a target.\n\nThis patch makes sure that no exception tables are emitted if the target does\nnot support exceptions.  This allows us to remove a workaround in\nTARGET_ASM_BYTE_OP in the nvptx port.\n\nBuild on x86_64 with nvptx accelerator, and tested libgomp.\n\nBuild and reg-tested on x86_64.\n\n2018-08-03  Tom de Vries  <tdevries@suse.de>\n\n\t* common/config/nvptx/nvptx-common.c (nvptx_except_unwind_info): Return\n\tUI_NONE.\n\t* config/nvptx/nvptx.c (TARGET_ASM_BYTE_OP): Remove define.\n\t* except.c (output_function_exception_table): Do early exit if\n\ttargetm_common.except_unwind_info (&global_options) == UI_NONE.\n\nFrom-SVN: r263287", "tree": {"sha": "583b687ac4891326b23d1469a5fd735ff85ffff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/583b687ac4891326b23d1469a5fd735ff85ffff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d989dba8ef02c2406b7c9e62b352197dffc6b880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d989dba8ef02c2406b7c9e62b352197dffc6b880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d989dba8ef02c2406b7c9e62b352197dffc6b880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d989dba8ef02c2406b7c9e62b352197dffc6b880/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a77e3a39de3843a8c0a0d59635b2bdd07ee67812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77e3a39de3843a8c0a0d59635b2bdd07ee67812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77e3a39de3843a8c0a0d59635b2bdd07ee67812"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "8d2814b19b30476495e6510cbf673bbdf30a6b4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d989dba8ef02c2406b7c9e62b352197dffc6b880", "patch": "@@ -1,3 +1,11 @@\n+2018-08-03  Tom de Vries  <tdevries@suse.de>\n+\n+\t* common/config/nvptx/nvptx-common.c (nvptx_except_unwind_info): Return\n+\tUI_NONE.\n+\t* config/nvptx/nvptx.c (TARGET_ASM_BYTE_OP): Remove define.\n+\t* except.c (output_function_exception_table): Do early exit if\n+\ttargetm_common.except_unwind_info (&global_options) == UI_NONE.\n+\n 2018-08-03  Martin Liska  <mliska@suse.cz>\n \n \t* predict.c (dump_prediction): Change to 2 digits"}, {"sha": "3a124e8844d180bcb663c8d1ff5250011a149064", "filename": "gcc/common/config/nvptx/nvptx-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2Fcommon%2Fconfig%2Fnvptx%2Fnvptx-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2Fcommon%2Fconfig%2Fnvptx%2Fnvptx-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fnvptx%2Fnvptx-common.c?ref=d989dba8ef02c2406b7c9e62b352197dffc6b880", "patch": "@@ -33,7 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n enum unwind_info_type\n nvptx_except_unwind_info (struct gcc_options *opts ATTRIBUTE_UNUSED)\n {\n-  return UI_TARGET;\n+  return UI_NONE;\n }\n \n #undef TARGET_HAVE_NAMED_SECTIONS"}, {"sha": "c0b0a2ec3ab95f71132d3f49134ac6b2128b4b63", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=d989dba8ef02c2406b7c9e62b352197dffc6b880", "patch": "@@ -6051,9 +6051,6 @@ nvptx_can_change_mode_class (machine_mode, machine_mode, reg_class_t)\n #undef TARGET_HAVE_SPECULATION_SAFE_VALUE\n #define TARGET_HAVE_SPECULATION_SAFE_VALUE speculation_safe_value_not_needed\n \n-#undef TARGET_ASM_BYTE_OP\n-#define TARGET_ASM_BYTE_OP \"// .byte \"\n-\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-nvptx.h\""}, {"sha": "728b1e1d349cfba5b76e575ad04ebe3d245b6e53", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d989dba8ef02c2406b7c9e62b352197dffc6b880/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=d989dba8ef02c2406b7c9e62b352197dffc6b880", "patch": "@@ -3189,7 +3189,8 @@ output_function_exception_table (int section)\n   rtx personality = get_personality_function (current_function_decl);\n \n   /* Not all functions need anything.  */\n-  if (!crtl->uses_eh_lsda)\n+  if (!crtl->uses_eh_lsda\n+      || targetm_common.except_unwind_info (&global_options) == UI_NONE)\n     return;\n \n   /* No need to emit any boilerplate stuff for the cold part.  */"}]}