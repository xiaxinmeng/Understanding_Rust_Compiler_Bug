{"sha": "4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb", "node_id": "C_kwDOANBUbNoAKDRmOGFhYzc3ZTA1ZDBhZTBiN2YyNDJmZDFhYTM0NGQzNmZmNTJjZWI", "commit": {"author": {"name": "David Seifert", "email": "soap@gentoo.org", "date": "2022-11-01T20:27:53Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-01T20:28:53Z"}, "message": "configure: cache result of \"sys/sdt.h\" header check\n\nUse AC_CACHE_CHECK to store the result of the header check for\nsystemtap's \"sys/sdt.h\", which is similar in spirit to libstdc++'s\nAC_CACHE_CHECK(..., glibcxx_cv_sys_sdt_h).\n\ngcc/\n\t* configure.ac: Add AC_CACHE_CHECK(..., gcc_cv_sys_sdt_h).\n\t* configure: Regenerate.", "tree": {"sha": "5b3a729443ec0f45f381465ea3225729346a317e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b3a729443ec0f45f381465ea3225729346a317e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb/comments", "author": {"login": "SoapGentoo", "id": 16636962, "node_id": "MDQ6VXNlcjE2NjM2OTYy", "avatar_url": "https://avatars.githubusercontent.com/u/16636962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SoapGentoo", "html_url": "https://github.com/SoapGentoo", "followers_url": "https://api.github.com/users/SoapGentoo/followers", "following_url": "https://api.github.com/users/SoapGentoo/following{/other_user}", "gists_url": "https://api.github.com/users/SoapGentoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/SoapGentoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SoapGentoo/subscriptions", "organizations_url": "https://api.github.com/users/SoapGentoo/orgs", "repos_url": "https://api.github.com/users/SoapGentoo/repos", "events_url": "https://api.github.com/users/SoapGentoo/events{/privacy}", "received_events_url": "https://api.github.com/users/SoapGentoo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5c15eb183f17e806ad6b58c9497321ded87866f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c15eb183f17e806ad6b58c9497321ded87866f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5c15eb183f17e806ad6b58c9497321ded87866f"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "e55c6566e89da11edd212d8b111de728b41dd0f5", "filename": "gcc/configure", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb", "patch": "@@ -31103,15 +31103,25 @@ fi\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking sys/sdt.h in the target C library\" >&5\n $as_echo_n \"checking sys/sdt.h in the target C library... \" >&6; }\n-have_sys_sdt_h=no\n-if test -f $target_header_dir/sys/sdt.h; then\n-  have_sys_sdt_h=yes\n+if ${gcc_cv_sys_sdt_h+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+  gcc_cv_sys_sdt_h=no\n+  if test -f $target_header_dir/sys/sdt.h; then\n+    gcc_cv_sys_sdt_h=yes\n+  fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_sys_sdt_h\" >&5\n+$as_echo \"$gcc_cv_sys_sdt_h\" >&6; }\n+if test x$gcc_cv_sys_sdt_h = xyes; then :\n+\n \n $as_echo \"#define HAVE_SYS_SDT_H 1\" >>confdefs.h\n \n+\n fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $have_sys_sdt_h\" >&5\n-$as_echo \"$have_sys_sdt_h\" >&6; }\n \n # Check if TFmode long double should be used by default or not.\n # Some glibc targets used DFmode long double, but with glibc 2.4"}, {"sha": "9ca77797894e9756e51fc20dc0814ff5fcae0e2f", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=4f8aac77e05d0ae0b7f242fd1aa344d36ff52ceb", "patch": "@@ -6778,14 +6778,16 @@ AC_SUBST([enable_default_ssp])\n \n # Test for <sys/sdt.h> on the target.\n GCC_TARGET_TEMPLATE([HAVE_SYS_SDT_H])\n-AC_MSG_CHECKING(sys/sdt.h in the target C library)\n-have_sys_sdt_h=no\n-if test -f $target_header_dir/sys/sdt.h; then\n-  have_sys_sdt_h=yes\n-  AC_DEFINE(HAVE_SYS_SDT_H, 1,\n+AC_CACHE_CHECK([sys/sdt.h in the target C library], [gcc_cv_sys_sdt_h], [\n+  gcc_cv_sys_sdt_h=no\n+  if test -f $target_header_dir/sys/sdt.h; then\n+    gcc_cv_sys_sdt_h=yes\n+  fi\n+])\n+AS_IF([test x$gcc_cv_sys_sdt_h = xyes], [\n+  AC_DEFINE([HAVE_SYS_SDT_H], [1],\n             [Define if your target C library provides sys/sdt.h])\n-fi\n-AC_MSG_RESULT($have_sys_sdt_h)\n+])\n \n # Check if TFmode long double should be used by default or not.\n # Some glibc targets used DFmode long double, but with glibc 2.4"}]}