{"sha": "1f600feab05dc0737a6e11b871fe31b0698ba812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY2MDBmZWFiMDVkYzA3MzdhNmUxMWI4NzFmZTMxYjA2OThiYTgxMg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-10-13T10:08:59Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-10-13T10:08:59Z"}, "message": "Add param parloops-schedule\n\n2015-10-13  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/67476\n\t* doc/invoke.texi (@item parloops-schedule): New item.\n\t* params.def (PARAM_PARLOOPS_SCHEDULE): New DEFPARAMENUM5.\n\t* tree-parloops.c: Include params-enum.h.\n\t(create_parallel_loop): Handle PARAM_PARLOOPS_SCHEDULE.\n\n\t* testsuite/libgomp.c/autopar-3.c: New test.\n\t* testsuite/libgomp.c/autopar-4.c: New test.\n\t* testsuite/libgomp.c/autopar-5.c: New test.\n\t* testsuite/libgomp.c/autopar-6.c: New test.\n\t* testsuite/libgomp.c/autopar-7.c: New test.\n\t* testsuite/libgomp.c/autopar-8.c: New test.\n\nFrom-SVN: r228756", "tree": {"sha": "4e5a5ae77f108036483e9d79859170f07a5a626c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e5a5ae77f108036483e9d79859170f07a5a626c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f600feab05dc0737a6e11b871fe31b0698ba812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f600feab05dc0737a6e11b871fe31b0698ba812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f600feab05dc0737a6e11b871fe31b0698ba812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f600feab05dc0737a6e11b871fe31b0698ba812/comments", "author": null, "committer": null, "parents": [{"sha": "d78182cc0ce05104e2f1cd40c97de974f075479f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78182cc0ce05104e2f1cd40c97de974f075479f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78182cc0ce05104e2f1cd40c97de974f075479f"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "d71bcd28bc914575715090ffffdb3fb4d285d8be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -1,3 +1,11 @@\n+2015-10-13  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/67476\n+\t* doc/invoke.texi (@item parloops-schedule): New item.\n+\t* params.def (PARAM_PARLOOPS_SCHEDULE): New DEFPARAMENUM5.\n+\t* tree-parloops.c: Include params-enum.h.\n+\t(create_parallel_loop): Handle PARAM_PARLOOPS_SCHEDULE.\n+\n 2015-10-13  Tom de Vries  <tom@codesourcery.com>\n \n \t* Makefile.in (PARAMS_H, PLUGIN_HEADERS): Add params-enum.h."}, {"sha": "54e9f12863416816f0267fae1ec3f3903aedc559", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -11133,6 +11133,10 @@ automaton.  The default is 50.\n Chunk size of omp schedule for loops parallelized by parloops.  The default\n is 0.\n \n+@item parloops-schedule\n+Schedule type of omp schedule for loops parallelized by parloops (static,\n+dynamic, guided, auto, runtime).  The default is static.\n+\n @item max-ssa-name-query-depth\n Maximum depth of recursion when querying properties of SSA names in things\n like fold routines.  One level of recursion corresponds to following a"}, {"sha": "dd073019d691d81e935aaf866e5a971e5abda8db", "filename": "gcc/params.def", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -35,6 +35,11 @@ along with GCC; see the file COPYING3.  If not see\n      - The maximum acceptable value for the parameter (if greater than\n      the minimum).\n \n+   The DEFPARAMENUM<N> macro is similar, but instead of the minumum and maximum\n+   arguments, it contains a list of <N> allowed strings, corresponding to\n+   integer values 0..<N>-1.  Note that the default argument needs to be\n+   specified as one of the allowed strings, rather than an integer value.\n+\n    Be sure to add an entry to invoke.texi summarizing the parameter.  */\n \n /* When branch is predicted to be taken with probability lower than this\n@@ -1153,6 +1158,13 @@ DEFPARAM (PARAM_PARLOOPS_CHUNK_SIZE,\n \t  \"Chunk size of omp schedule for loops parallelized by parloops\",\n \t  0, 0, 0)\n \n+DEFPARAMENUM5 (PARAM_PARLOOPS_SCHEDULE,\n+\t       \"parloops-schedule\",\n+\t       \"Schedule type of omp schedule for loops parallelized by \"\n+\t       \"parloops (static, dynamic, guided, auto, runtime)\",\n+\t       static,\n+\t       static, dynamic, guided, auto, runtime)\n+\n DEFPARAM (PARAM_MAX_SSA_NAME_QUERY_DEPTH,\n \t  \"max-ssa-name-query-depth\",\n \t  \"Maximum recursion depth allowed when querying a property of an\""}, {"sha": "62e561c5b4ffff35e9bfc667cd23f90300da5f33", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -58,6 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"tree-ssa.h\"\n #include \"params.h\"\n+#include \"params-enum.h\"\n \n /* This pass tries to distribute iterations of loops into several threads.\n    The implementation is straightforward -- for each loop we test whether its\n@@ -2086,8 +2087,31 @@ create_parallel_loop (struct loop *loop, tree loop_fn, tree data,\n   gimple_cond_set_lhs (cond_stmt, cvar_base);\n   type = TREE_TYPE (cvar);\n   t = build_omp_clause (loc, OMP_CLAUSE_SCHEDULE);\n-  OMP_CLAUSE_SCHEDULE_KIND (t) = OMP_CLAUSE_SCHEDULE_STATIC;\n   int chunk_size = PARAM_VALUE (PARAM_PARLOOPS_CHUNK_SIZE);\n+  enum PARAM_PARLOOPS_SCHEDULE_KIND schedule_type \\\n+    = (enum PARAM_PARLOOPS_SCHEDULE_KIND) PARAM_VALUE (PARAM_PARLOOPS_SCHEDULE);\n+  switch (schedule_type)\n+    {\n+    case PARAM_PARLOOPS_SCHEDULE_KIND_static:\n+      OMP_CLAUSE_SCHEDULE_KIND (t) = OMP_CLAUSE_SCHEDULE_STATIC;\n+      break;\n+    case PARAM_PARLOOPS_SCHEDULE_KIND_dynamic:\n+      OMP_CLAUSE_SCHEDULE_KIND (t) = OMP_CLAUSE_SCHEDULE_DYNAMIC;\n+      break;\n+    case PARAM_PARLOOPS_SCHEDULE_KIND_guided:\n+      OMP_CLAUSE_SCHEDULE_KIND (t) = OMP_CLAUSE_SCHEDULE_GUIDED;\n+      break;\n+    case PARAM_PARLOOPS_SCHEDULE_KIND_auto:\n+      OMP_CLAUSE_SCHEDULE_KIND (t) = OMP_CLAUSE_SCHEDULE_AUTO;\n+      chunk_size = 0;\n+      break;\n+    case PARAM_PARLOOPS_SCHEDULE_KIND_runtime:\n+      OMP_CLAUSE_SCHEDULE_KIND (t) = OMP_CLAUSE_SCHEDULE_RUNTIME;\n+      chunk_size = 0;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n   if (chunk_size != 0)\n     OMP_CLAUSE_SCHEDULE_CHUNK_EXPR (t)\n       = build_int_cst (integer_type_node, chunk_size);"}, {"sha": "74a135cd55bf8da0fda6207f7fb4f36b8e68be60", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -1,3 +1,13 @@\n+2015-10-13  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/67476\n+\t* testsuite/libgomp.c/autopar-3.c: New test.\n+\t* testsuite/libgomp.c/autopar-4.c: New test.\n+\t* testsuite/libgomp.c/autopar-5.c: New test.\n+\t* testsuite/libgomp.c/autopar-6.c: New test.\n+\t* testsuite/libgomp.c/autopar-7.c: New test.\n+\t* testsuite/libgomp.c/autopar-8.c: New test.\n+\n 2015-10-12  James Norris  <jnorris@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/vector-loop.c: Fix loop"}, {"sha": "1c25a44c789173b4706fc6e99901b1fdedf2a091", "filename": "libgomp/testsuite/libgomp.c/autopar-3.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-3.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-schedule=dynamic\" } */\n+\n+#include \"autopar-1.c\""}, {"sha": "78c77d9ff7c82de7b34cef85c9a1ee67a8469dc6", "filename": "libgomp/testsuite/libgomp.c/autopar-4.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-4.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-schedule=dynamic --param parloops-chunk-size=100\" } */\n+\n+#include \"autopar-1.c\""}, {"sha": "f0acb20e4e6cb51a522d7fe9586817ec9d391b0d", "filename": "libgomp/testsuite/libgomp.c/autopar-5.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-5.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-schedule=guided\" } */\n+\n+#include \"autopar-1.c\""}, {"sha": "f6e723e7867dbbd959955bbd24c9118cea377cdc", "filename": "libgomp/testsuite/libgomp.c/autopar-6.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-6.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-schedule=guided --param parloops-chunk-size=100\" } */\n+\n+#include \"autopar-1.c\""}, {"sha": "5f15508f6b3ef4fe365b694528da4f875f75c852", "filename": "libgomp/testsuite/libgomp.c/autopar-7.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-7.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-schedule=auto\" } */\n+\n+#include \"autopar-1.c\""}, {"sha": "6099e9f457ddfd7866bd58a2dba64641546da14f", "filename": "libgomp/testsuite/libgomp.c/autopar-8.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f600feab05dc0737a6e11b871fe31b0698ba812/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-8.c?ref=1f600feab05dc0737a6e11b871fe31b0698ba812", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-schedule=runtime\" } */\n+\n+#include \"autopar-1.c\""}]}