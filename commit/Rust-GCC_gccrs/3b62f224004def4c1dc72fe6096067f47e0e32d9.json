{"sha": "3b62f224004def4c1dc72fe6096067f47e0e32d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2MmYyMjQwMDRkZWY0YzFkYzcyZmU2MDk2MDY3ZjQ3ZTBlMzJkOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-10-01T04:34:24Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-10-01T04:34:24Z"}, "message": "* method.c (emit_thunk): Don't crash when -fsyntax-only.\n\nFrom-SVN: r29748", "tree": {"sha": "136b5e8057777101280144c263bd7434211e3f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/136b5e8057777101280144c263bd7434211e3f82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b62f224004def4c1dc72fe6096067f47e0e32d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b62f224004def4c1dc72fe6096067f47e0e32d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b62f224004def4c1dc72fe6096067f47e0e32d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b62f224004def4c1dc72fe6096067f47e0e32d9/comments", "author": null, "committer": null, "parents": [{"sha": "e82d3ca3b99269f1f5cadec45b8b7e0a9de55c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82d3ca3b99269f1f5cadec45b8b7e0a9de55c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82d3ca3b99269f1f5cadec45b8b7e0a9de55c90"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "4b40f8427bd899b4c9dcb9a906365981b117b2de", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b62f224004def4c1dc72fe6096067f47e0e32d9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b62f224004def4c1dc72fe6096067f47e0e32d9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3b62f224004def4c1dc72fe6096067f47e0e32d9", "patch": "@@ -1,5 +1,7 @@\n 1999-09-30  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* method.c (emit_thunk): Don't crash when -fsyntax-only.\n+\n \t* cp-tree.h (lang_decl_flags): Add global_ctor_p and\n \tglobal_dtor_p.  Add init_priority.\n \t(DECL_ACCESS): Adjust accordingly."}, {"sha": "b2daeb2f4f62cfcac575f7449c38be0c237ec0d1", "filename": "gcc/cp/method.c", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b62f224004def4c1dc72fe6096067f47e0e32d9/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b62f224004def4c1dc72fe6096067f47e0e32d9/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=3b62f224004def4c1dc72fe6096067f47e0e32d9", "patch": "@@ -2086,26 +2086,29 @@ emit_thunk (thunk_fndecl)\n \n   TREE_SET_CODE (thunk_fndecl, FUNCTION_DECL);\n \n-  {\n #ifdef ASM_OUTPUT_MI_THUNK\n-    char *fnname;\n-    current_function_decl = thunk_fndecl;\n-    /* Make sure we build up its RTL before we go onto the\n-       temporary obstack.  */\n-    make_function_rtl (thunk_fndecl);\n-    temporary_allocation ();\n-    DECL_RESULT (thunk_fndecl)\n-      = build_decl (RESULT_DECL, 0, integer_type_node);\n-    fnname = XSTR (XEXP (DECL_RTL (thunk_fndecl), 0), 0);\n-    init_function_start (thunk_fndecl, input_filename, lineno);\n-    current_function_is_thunk = 1;\n-    assemble_start_function (thunk_fndecl, fnname);\n-    ASM_OUTPUT_MI_THUNK (asm_out_file, thunk_fndecl, delta, function);\n-    assemble_end_function (thunk_fndecl, fnname);\n-    permanent_allocation (1);\n-    current_function_decl = 0;\n-    current_function = 0;\n+  if (!flag_syntax_only)\n+    {\n+      char *fnname;\n+      current_function_decl = thunk_fndecl;\n+      /* Make sure we build up its RTL before we go onto the\n+\t temporary obstack.  */\n+      make_function_rtl (thunk_fndecl);\n+      temporary_allocation ();\n+      DECL_RESULT (thunk_fndecl)\n+\t= build_decl (RESULT_DECL, 0, integer_type_node);\n+      fnname = XSTR (XEXP (DECL_RTL (thunk_fndecl), 0), 0);\n+      init_function_start (thunk_fndecl, input_filename, lineno);\n+      current_function_is_thunk = 1;\n+      assemble_start_function (thunk_fndecl, fnname);\n+      ASM_OUTPUT_MI_THUNK (asm_out_file, thunk_fndecl, delta, function);\n+      assemble_end_function (thunk_fndecl, fnname);\n+      permanent_allocation (1);\n+      current_function_decl = 0;\n+      current_function = 0;\n+    }\n #else /* ASM_OUTPUT_MI_THUNK */\n+  {\n   /* If we don't have the necessary macro for efficient thunks, generate a\n      thunk function that just makes a call to the real function.\n      Unfortunately, this doesn't work for varargs.  */\n@@ -2157,8 +2160,8 @@ emit_thunk (thunk_fndecl)\n \toutput_inline_function (thunk_fndecl);\n \tpermanent_allocation (1);\n       }\n-#endif /* ASM_OUTPUT_MI_THUNK */\n   }\n+#endif /* ASM_OUTPUT_MI_THUNK */\n \n   TREE_SET_CODE (thunk_fndecl, THUNK_DECL);\n }"}, {"sha": "5775af0d261dcbeb4415f31f07dd125391ac24b7", "filename": "gcc/testsuite/g++.old-deja/g++.other/syntax2.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b62f224004def4c1dc72fe6096067f47e0e32d9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b62f224004def4c1dc72fe6096067f47e0e32d9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax2.C?ref=3b62f224004def4c1dc72fe6096067f47e0e32d9", "patch": "@@ -0,0 +1,28 @@\n+// Build don't link:\n+// Special g++ Options: -fsyntax-only\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+struct B \n+{\n+  double d;\n+  \n+  virtual void f ();\n+};\n+\n+struct C: virtual public B\n+{\n+  char c;\n+};\n+\n+struct D: virtual public B\n+{\n+  int i;\n+  virtual void f ();\n+};\n+\n+struct E : public C, public D \n+{\n+};\n+\n+E e;\n+"}]}