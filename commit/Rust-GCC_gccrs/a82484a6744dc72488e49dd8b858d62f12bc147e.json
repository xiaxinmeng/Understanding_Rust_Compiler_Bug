{"sha": "a82484a6744dc72488e49dd8b858d62f12bc147e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgyNDg0YTY3NDRkYzcyNDg4ZTQ5ZGQ4Yjg1OGQ2MmYxMmJjMTQ3ZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-01-16T23:10:11Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-01-16T23:10:11Z"}, "message": "Dimension.java: Updated copyright.\n\n\t* java/awt/Dimension.java: Updated copyright.  Added javadoc from\n\tClasspath.\n\t* java/awt/Point.java: Updated copyright.\n\nFrom-SVN: r48932", "tree": {"sha": "69d6905e470086c9aaf2eabbbf2d383a0ed8bd67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69d6905e470086c9aaf2eabbbf2d383a0ed8bd67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a82484a6744dc72488e49dd8b858d62f12bc147e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82484a6744dc72488e49dd8b858d62f12bc147e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a82484a6744dc72488e49dd8b858d62f12bc147e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82484a6744dc72488e49dd8b858d62f12bc147e/comments", "author": null, "committer": null, "parents": [{"sha": "c10a75a7348cb596e9146bd19160b7bec17dbab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10a75a7348cb596e9146bd19160b7bec17dbab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c10a75a7348cb596e9146bd19160b7bec17dbab9"}], "stats": {"total": 134, "additions": 119, "deletions": 15}, "files": [{"sha": "7e4b39a44934595d3e9eef83bd0c668495a3ba6c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82484a6744dc72488e49dd8b858d62f12bc147e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82484a6744dc72488e49dd8b858d62f12bc147e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a82484a6744dc72488e49dd8b858d62f12bc147e", "patch": "@@ -1,5 +1,9 @@\n 2002-01-16  Tom Tromey  <tromey@redhat.com>\n \n+\t* java/awt/Dimension.java: Updated copyright.  Added javadoc from\n+\tClasspath.\n+\t* java/awt/Point.java: Updated copyright.\n+\n \t* java/awt/Point.java (toString): Use getClass().getName().\n \tAdded javadoc.\n "}, {"sha": "22e2e5ad1968679fe46633c9ac70efa6e0a05df1", "filename": "libjava/java/awt/Dimension.java", "status": "modified", "additions": 93, "deletions": 11, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82484a6744dc72488e49dd8b858d62f12bc147e/libjava%2Fjava%2Fawt%2FDimension.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82484a6744dc72488e49dd8b858d62f12bc147e/libjava%2Fjava%2Fawt%2FDimension.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDimension.java?ref=a82484a6744dc72488e49dd8b858d62f12bc147e", "patch": "@@ -1,44 +1,103 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-package java.awt;\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n \n-/**\n- * @author Per Bothner <bothner@cygnus.com>\n- * @date Fenruary 8, 1999.\n- */\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+\n+package java.awt;\n \n /* Written using \"Java Class Libraries\", 2nd edition, plus online\n  * API docs for JDK 1.2 beta from http://www.javasoft.com.\n  * Status:  Believed complete and correct, except that neither toString\n  * has not been compared with JDK output.\n  */\n \n+/**\n+  * This class holds a width and height value pair.\n+  *\n+  * @author Per Bothner <bothner@cygnus.com>\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @date Fenruary 8, 1999.\n+  */\n public class Dimension extends java.awt.geom.Dimension2D\n   implements java.io.Serializable\n {\n-  public int height;\n+  /**\n+   * This width of this object.\n+   */\n   public int width;\n \n+  /**\n+   * The height of this object.\n+   */\n+  public int height;\n+\n+  /**\n+   * Initializes a new instance of <code>Dimension</code> with a width\n+   * and height of zero.\n+   */\n   public Dimension () { }\n \n+  /**\n+   * Initializes a new instance of <code>Dimension</code> to have a width\n+   * and height identical to that of the specified dimension object.\n+   *\n+   * @param dim The <code>Dimension</code> to take the width and height from.\n+   */\n   public Dimension (Dimension dim)\n   {\n     this.width = dim.width;\n     this.height = dim.height;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Dimension</code> with the\n+   * specified width and height.\n+   *\n+   * @param width The width of this object.\n+   * @param height The height of this object.\n+   */\n   public Dimension (int width, int height)\n   {\n     this.width = width;\n     this.height = height;\n   }\n \n+  /**\n+   * Tests this object for equality against the specified object.  This will\n+   * be true if and only if the specified object:\n+   * <p>\n+   * <ul>\n+   * <li>Is not <code>null</code>.\n+   * <li>Is an instance of <code>Dimension</code>.\n+   * <li>Has width and height values identical to this object.\n+   * </ul>\n+   *\n+   * @param obj The object to test against.\n+   *\n+   * @return <code>true</code> if the specified object is equal to this\n+   * object, <code>false</code> otherwise.\n+   */\n   public boolean equals (Object obj)\n   {\n     if (! (obj instanceof Dimension))\n@@ -47,20 +106,43 @@ public boolean equals (Object obj)\n     return height == dim.height && width == dim.width;\n   }\n \n+  /**\n+   * Returns the size of this object.  Not very useful.\n+   *\n+   * @return This object.\n+   */\n   public Dimension getSize () { return new Dimension(this); }\n \n+  /**\n+   * Sets the width and height of this object to match that of the\n+   * specified object.\n+   *\n+   * @param dim The <code>Dimension</code> object to get the new width and\n+   * height from.\n+   */\n   public void setSize (Dimension dim)\n   {\n     this.width = dim.width;\n     this.height = dim.height;\n   }\n \n+  /**\n+   * Sets the width and height of this object to the specified values.\n+   *\n+   * @param width The new width value.\n+   * @param height The new height value.\n+   */\n   public void setSize (int width, int height)\n   {\n     this.width = width;\n     this.height = height;\n   }\n \n+  /**\n+   * Returns a string representation of this object.\n+   *\n+   * @return A string representation of this object.\n+   */\n   public String toString ()\n   {\n     return \"Dimension[w:\"+width+\",h:\"+height+']';"}, {"sha": "d5d41093697132748b2b73ed53ba42475b69969d", "filename": "libjava/java/awt/Point.java", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82484a6744dc72488e49dd8b858d62f12bc147e/libjava%2Fjava%2Fawt%2FPoint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82484a6744dc72488e49dd8b858d62f12bc147e/libjava%2Fjava%2Fawt%2FPoint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPoint.java?ref=a82484a6744dc72488e49dd8b858d62f12bc147e", "patch": "@@ -1,10 +1,28 @@\n /* Copyright (C) 1999, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n \n package java.awt;\n import java.awt.geom.Point2D;"}]}