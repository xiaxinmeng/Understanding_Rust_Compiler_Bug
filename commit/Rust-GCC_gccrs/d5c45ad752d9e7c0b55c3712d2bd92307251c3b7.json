{"sha": "d5c45ad752d9e7c0b55c3712d2bd92307251c3b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVjNDVhZDc1MmQ5ZTdjMGI1NWMzNzEyZDJiZDkyMzA3MjUxYzNiNw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-11-23T21:53:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-11-23T21:53:12Z"}, "message": "opth-gen.awk: Use unsigned shifts for bit masks.\n\n2016-11-07  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n\t* opth-gen.awk: Use unsigned shifts for bit masks.  Allow all bits\n\tto be used.  Add brackets around macro argument.\n\nFrom-SVN: r242803", "tree": {"sha": "81b6be817fb88432ad53c1881225518885ca12d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81b6be817fb88432ad53c1881225518885ca12d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91c9fb42c0c9121b745779bb86e7ac6dae4363b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c9fb42c0c9121b745779bb86e7ac6dae4363b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c9fb42c0c9121b745779bb86e7ac6dae4363b7"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "e6f29db082b40a6c262458db7bfc6f7b9277892c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5c45ad752d9e7c0b55c3712d2bd92307251c3b7", "patch": "@@ -1,3 +1,8 @@\n+2016-11-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* opth-gen.awk: Use unsigned shifts for bit masks.  Allow all bits\n+\tto be used.  Add brackets around macro argument.\n+\n 2016-11-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*<any_or:code>hi_1): Fix operand 2 constraints."}, {"sha": "27f414118c2918c3f2013be06a346cf923205d70", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5c45ad752d9e7c0b55c3712d2bd92307251c3b7/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=d5c45ad752d9e7c0b55c3712d2bd92307251c3b7", "patch": "@@ -350,28 +350,28 @@ for (i = 0; i < n_opts; i++) {\n \t\tmask_bits[name] = 1\n \t\tvname = var_name(flags[i])\n \t\tmask = \"MASK_\"\n-\t\tmask_1 = \"1\"\n+\t\tmask_1 = \"1U\"\n \t\tif (vname != \"\") {\n \t\t\tmask = \"OPTION_MASK_\"\n \t\t\tif (host_wide_int[vname] == \"yes\")\n-\t\t\t\tmask_1 = \"HOST_WIDE_INT_1\"\n+\t\t\t\tmask_1 = \"HOST_WIDE_INT_1U\"\n \t\t} else\n \t\t\textra_mask_bits[name] = 1\n \t\tprint \"#define \" mask name \" (\" mask_1 \" << \" masknum[vname]++ \")\"\n \t}\n }\n for (i = 0; i < n_extra_masks; i++) {\n \tif (extra_mask_bits[extra_masks[i]] == 0)\n-\t\tprint \"#define MASK_\" extra_masks[i] \" (1 << \" masknum[\"\"]++ \")\"\n+\t\tprint \"#define MASK_\" extra_masks[i] \" (1U << \" masknum[\"\"]++ \")\"\n }\n \n for (var in masknum) {\n \tif (var != \"\" && host_wide_int[var] == \"yes\") {\n-\t\tprint\" #if defined(HOST_BITS_PER_WIDE_INT) && \" masknum[var] \" >= HOST_BITS_PER_WIDE_INT\"\n+\t\tprint \"#if defined(HOST_BITS_PER_WIDE_INT) && \" masknum[var] \" > HOST_BITS_PER_WIDE_INT\"\n \t\tprint \"#error too many masks for \" var\n \t\tprint \"#endif\"\n \t}\n-\telse if (masknum[var] > 31) {\n+\telse if (masknum[var] > 32) {\n \t\tif (var == \"\")\n \t\t\tprint \"#error too many target masks\"\n \t\telse\n@@ -401,7 +401,7 @@ for (i = 0; i < n_opts; i++) {\n \t\tprint \"#define TARGET_\" name \\\n \t\t      \" ((\" vname \" & \" mask name \") != 0)\"\n \t\tprint \"#define TARGET_\" name \"_P(\" vname \")\" \\\n-\t\t      \" ((\" vname \" & \" mask name \") != 0)\"\n+\t\t      \" (((\" vname \") & \" mask name \") != 0)\"\n \t}\n }\n for (i = 0; i < n_extra_masks; i++) {"}]}