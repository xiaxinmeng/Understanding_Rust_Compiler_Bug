{"sha": "54e034613467cfab3e89f23f7a1043910791d35b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlMDM0NjEzNDY3Y2ZhYjNlODlmMjNmN2ExMDQzOTEwNzkxZDM1Yg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-08-20T15:42:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T15:42:52Z"}, "message": "make.adb (Gnatmake_Switch_Found): New Boolean global variable\n\n2008-08-20  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Gnatmake_Switch_Found): New Boolean global variable\n\t(Switch_May_Be_Passed_To_The_Compiler): New Boolean global variable\n\t(Add_Switches): New Boolean parameter Unknown_Switches_To_The_Compiler\n\t defaulted to True. Fail when Unknown_Switches_To_The_Compiler is False\n\tand a switch is not recognized by gnatmake.\n\t(Gnatmake): Implement new scheme for gnatmake switches and global\n\tcompilation switches.\n\t(Switches_Of): Try successively Switches (<file name>),\n\tSwitches (\"Ada\"), Switches (others) and Default_Switches (\"Ada\").\n\nFrom-SVN: r139315", "tree": {"sha": "133213ff171fab92fc5792713622af0dee282c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/133213ff171fab92fc5792713622af0dee282c5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e034613467cfab3e89f23f7a1043910791d35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e034613467cfab3e89f23f7a1043910791d35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e034613467cfab3e89f23f7a1043910791d35b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e034613467cfab3e89f23f7a1043910791d35b/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7486d8e0c87a721a4b04229d1a3c3638d53d870c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7486d8e0c87a721a4b04229d1a3c3638d53d870c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7486d8e0c87a721a4b04229d1a3c3638d53d870c"}], "stats": {"total": 252, "additions": 190, "deletions": 62}, "files": [{"sha": "9da7537249f3c2742c827a81ba2b34563b7385b3", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 190, "deletions": 62, "changes": 252, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e034613467cfab3e89f23f7a1043910791d35b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e034613467cfab3e89f23f7a1043910791d35b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=54e034613467cfab3e89f23f7a1043910791d35b", "patch": "@@ -27,6 +27,7 @@ with ALI;      use ALI;\n with ALI.Util; use ALI.Util;\n with Csets;\n with Debug;\n+with Errutil;\n with Fmap;\n with Fname;    use Fname;\n with Fname.SF; use Fname.SF;\n@@ -319,6 +320,15 @@ package body Make is\n \n    Saved_Maximum_Processes : Natural := 0;\n \n+   Gnatmake_Switch_Found : Boolean;\n+   --  Set by Scan_Make_Arg. True when the switch is a gnatmake switch.\n+   --  Tested by Add_Switches when switches in package Builder must all be\n+   --  gnatmake switches.\n+\n+   Switch_May_Be_Passed_To_The_Compiler : Boolean;\n+   --  Set by Add_Switches and Switches_Of. True when unrecognized switches\n+   --  are passed to the Ada compiler.\n+\n    type Arg_List_Ref is access Argument_List;\n    The_Saved_Gcc_Switches : Arg_List_Ref;\n \n@@ -719,10 +729,11 @@ package body Make is\n    --  file, to avoid displaying the -gnatec switch for a temporary file.\n \n    procedure Add_Switches\n-     (The_Package : Package_Id;\n-      File_Name   : String;\n-      Index       : Int;\n-      Program     : Make_Program_Type);\n+     (The_Package                      : Package_Id;\n+      File_Name                        : String;\n+      Index                            : Int;\n+      Program                          : Make_Program_Type;\n+      Unknown_Switches_To_The_Compiler : Boolean := True);\n    procedure Add_Switch\n      (S             : String_Access;\n       Program       : Make_Program_Type;\n@@ -1237,64 +1248,42 @@ package body Make is\n    ------------------\n \n    procedure Add_Switches\n-     (The_Package : Package_Id;\n-      File_Name   : String;\n-      Index       : Int;\n-      Program     : Make_Program_Type)\n+     (The_Package                      : Package_Id;\n+      File_Name                        : String;\n+      Index                            : Int;\n+      Program                          : Make_Program_Type;\n+      Unknown_Switches_To_The_Compiler : Boolean := True)\n    is\n       Switches    : Variable_Value;\n       Switch_List : String_List_Id;\n       Element     : String_Element;\n \n    begin\n+      Switch_May_Be_Passed_To_The_Compiler :=\n+        Unknown_Switches_To_The_Compiler;\n+\n       if File_Name'Length > 0 then\n          Name_Len := File_Name'Length;\n          Name_Buffer (1 .. Name_Len) := File_Name;\n          Switches :=\n            Switches_Of\n-           (Source_File      => Name_Find,\n-            Source_File_Name => File_Name,\n-            Source_Index     => Index,\n-            Naming           => Project_Tree.Projects.Table\n-                                  (Main_Project).Naming,\n-            In_Package       => The_Package,\n-            Allow_ALI        =>\n-              Program = Binder or else Program = Linker);\n-\n-         case Switches.Kind is\n-            when Undefined =>\n-               null;\n-\n-            when List =>\n-               Program_Args := Program;\n+             (Source_File      => Name_Find,\n+              Source_File_Name => File_Name,\n+              Source_Index     => Index,\n+              Naming           => Project_Tree.Projects.Table\n+                (Main_Project).Naming,\n+              In_Package       => The_Package,\n+              Allow_ALI        =>\n+                Program = Binder or else Program = Linker);\n \n-               Switch_List := Switches.Values;\n+         if Switches.Kind = List then\n+            Program_Args := Program;\n \n-               while Switch_List /= Nil_String loop\n-                  Element := Project_Tree.String_Elements.Table (Switch_List);\n-                  Get_Name_String (Element.Value);\n+            Switch_List := Switches.Values;\n \n-                  if Name_Len > 0 then\n-                     declare\n-                        Argv : constant String := Name_Buffer (1 .. Name_Len);\n-                        --  We need a copy, because Name_Buffer may be modified\n-\n-                     begin\n-                        if Verbose_Mode then\n-                           Write_Str (\"   Adding \");\n-                           Write_Line (Argv);\n-                        end if;\n-\n-                        Scan_Make_Arg (Argv, And_Save => False);\n-                     end;\n-                  end if;\n-\n-                  Switch_List := Element.Next;\n-               end loop;\n-\n-            when Single =>\n-               Program_Args := Program;\n-               Get_Name_String (Switches.Value);\n+            while Switch_List /= Nil_String loop\n+               Element := Project_Tree.String_Elements.Table (Switch_List);\n+               Get_Name_String (Element.Value);\n \n                if Name_Len > 0 then\n                   declare\n@@ -1308,9 +1297,25 @@ package body Make is\n                      end if;\n \n                      Scan_Make_Arg (Argv, And_Save => False);\n+\n+                     if not Gnatmake_Switch_Found\n+                       and then not Switch_May_Be_Passed_To_The_Compiler\n+                     then\n+                        Errutil.Error_Msg\n+                          ('\"' & Argv &\n+                           \"\"\" is not a gnatmake switch. Consider moving \" &\n+                           \"it to Global_Compilation_Switches.\",\n+                           Element.Location);\n+                        Errutil.Finalize;\n+                        Make_Failed\n+                          (\"*** illegal switch \"\"\", Argv, \"\"\"\");\n+                     end if;\n                   end;\n                end if;\n-         end case;\n+\n+               Switch_List := Element.Next;\n+            end loop;\n+         end if;\n       end if;\n    end Add_Switches;\n \n@@ -5038,6 +5043,12 @@ package body Make is\n                                   In_Packages => The_Packages,\n                                   In_Tree     => Project_Tree);\n \n+            Default_Switches_Array : Array_Id;\n+\n+            Global_Compilation_Array    : Array_Element_Id;\n+            Global_Compilation_Elem     : Array_Element;\n+            Global_Compilation_Switches : Variable_Value;\n+\n          begin\n             --  We fail if we cannot find the main source file\n \n@@ -5083,6 +5094,37 @@ package body Make is\n \n             if Builder_Package /= No_Package then\n \n+               Global_Compilation_Array := Prj.Util.Value_Of\n+                 (Name      => Name_Global_Compilation_Switches,\n+                  In_Arrays => Project_Tree.Packages.Table\n+                    (Builder_Package).Decl.Arrays,\n+                  In_Tree   => Project_Tree);\n+\n+               Default_Switches_Array :=\n+                 Project_Tree.Packages.Table\n+                   (Builder_Package).Decl.Arrays;\n+\n+               while Default_Switches_Array /= No_Array and then\n+               Project_Tree.Arrays.Table (Default_Switches_Array).Name /=\n+                 Name_Default_Switches\n+               loop\n+                  Default_Switches_Array :=\n+                    Project_Tree.Arrays.Table (Default_Switches_Array).Next;\n+               end loop;\n+\n+               if Global_Compilation_Array /= No_Array_Element and then\n+                  Default_Switches_Array /= No_Array\n+               then\n+                  Errutil.Error_Msg\n+                    (\"Default_Switches forbidden in presence of \" &\n+                     \"Global_Compilation_Switches. Use Switches instead.\",\n+                     Project_Tree.Arrays.Table\n+                       (Default_Switches_Array).Location);\n+                  Errutil.Finalize;\n+                  Make_Failed\n+                    (\"*** illegal combination of Builder attributes\");\n+               end if;\n+\n                --  If there is only one main, we attempt to get the gnatmake\n                --  switches for this main (if any). If there are no specific\n                --  switch for this particular main, get the general gnatmake\n@@ -5096,10 +5138,12 @@ package body Make is\n                   end if;\n \n                   Add_Switches\n-                    (File_Name   => Main_Unit_File_Name,\n-                     Index       => Main_Index,\n-                     The_Package => Builder_Package,\n-                     Program     => None);\n+                    (File_Name                        => Main_Unit_File_Name,\n+                     Index                            => Main_Index,\n+                     The_Package                      => Builder_Package,\n+                     Program                          => None,\n+                     Unknown_Switches_To_The_Compiler =>\n+                       Global_Compilation_Array = No_Array_Element);\n \n                else\n                   --  If there are several mains, we always get the general\n@@ -5149,10 +5193,11 @@ package body Make is\n                         end if;\n \n                         Add_Switches\n-                          (File_Name   => \" \",\n-                           Index       => 0,\n-                           The_Package => Builder_Package,\n-                           Program     => None);\n+                          (File_Name                        => \" \",\n+                           Index                            => 0,\n+                           The_Package                      => Builder_Package,\n+                           Program                          => None,\n+                           Unknown_Switches_To_The_Compiler => False);\n \n                      elsif Defaults /= Nil_Variable_Value then\n                         if not Quiet_Output\n@@ -5178,6 +5223,59 @@ package body Make is\n                      end if;\n                   end;\n                end if;\n+\n+               --  Take into account attribute Global_Compilation_Switches\n+               --  (\"Ada\").\n+\n+               declare\n+                  Index : Name_Id;\n+                  List  : String_List_Id;\n+                  Elem  : String_Element;\n+\n+               begin\n+                  while Global_Compilation_Array /= No_Array_Element loop\n+                     Global_Compilation_Elem :=\n+                       Project_Tree.Array_Elements.Table\n+                         (Global_Compilation_Array);\n+\n+                     Get_Name_String (Global_Compilation_Elem.Index);\n+                     To_Lower (Name_Buffer (1 .. Name_Len));\n+                     Index := Name_Find;\n+\n+                     if Index = Name_Ada then\n+                        Global_Compilation_Switches :=\n+                          Global_Compilation_Elem.Value;\n+\n+                        if Global_Compilation_Switches /= Nil_Variable_Value\n+                          and then not Global_Compilation_Switches.Default\n+                        then\n+                           --  We have found attribute\n+                           --  Global_Compilation_Switches (\"Ada\"): put the\n+                           --  switches in the appropriate table.\n+\n+                           List := Global_Compilation_Switches.Values;\n+\n+                           while List /= Nil_String loop\n+                              Elem :=\n+                                Project_Tree.String_Elements.Table (List);\n+\n+                              if Elem.Value /= No_Name then\n+                                 Add_Switch\n+                                   (Get_Name_String (Elem.Value),\n+                                    Compiler,\n+                                    And_Save => False);\n+                              end if;\n+\n+                              List := Elem.Next;\n+                           end loop;\n+\n+                           exit;\n+                        end if;\n+                     end if;\n+\n+                     Global_Compilation_Array := Global_Compilation_Elem.Next;\n+                  end loop;\n+               end;\n             end if;\n \n             Osint.Add_Default_Search_Dirs;\n@@ -7528,6 +7626,8 @@ package body Make is\n       Success : Boolean;\n \n    begin\n+      Gnatmake_Switch_Found := True;\n+\n       pragma Assert (Argv'First = 1);\n \n       if Argv'Length = 0 then\n@@ -8068,14 +8168,14 @@ package body Make is\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Binder, And_Save => And_Save);\n \n-         --  All other switches are processed by Scan_Make_Switches.\n-         --  If the call returns with Success = False, then the switch is\n-         --  passed to the compiler.\n+         --  All other switches are processed by Scan_Make_Switches. If the\n+         --  call returns with Gnatmake_Switch_Found = False, then the switch\n+         --  is passed to the compiler.\n \n          else\n-            Scan_Make_Switches (Argv, Success);\n+            Scan_Make_Switches (Argv, Gnatmake_Switch_Found);\n \n-            if not Success then\n+            if not Gnatmake_Switch_Found then\n                Add_Switch (Argv, Compiler, And_Save => And_Save);\n             end if;\n          end if;\n@@ -8119,13 +8219,17 @@ package body Make is\n                             In_Tree   => Project_Tree);\n \n    begin\n+      --  First, try Switches (<file name>)\n+\n       Switches :=\n         Prj.Util.Value_Of\n           (Index     => Name_Id (Source_File),\n            Src_Index => Source_Index,\n            In_Array  => Switches_Array,\n            In_Tree   => Project_Tree);\n \n+      --  Check also without the suffix\n+\n       if Switches = Nil_Variable_Value then\n          declare\n             Name        : String (1 .. Source_File_Name'Length + 3);\n@@ -8189,15 +8293,39 @@ package body Make is\n          end;\n       end if;\n \n+      --  Next, try Switches (\"Ada\")\n+\n+      if Switches = Nil_Variable_Value then\n+         Switches :=\n+           Prj.Util.Value_Of\n+             (Index                  => Name_Ada,\n+              Src_Index              => 0,\n+              In_Array               => Switches_Array,\n+              In_Tree                => Project_Tree,\n+              Force_Lower_Case_Index => True);\n+\n+         if Switches /= Nil_Variable_Value then\n+            Switch_May_Be_Passed_To_The_Compiler := False;\n+         end if;\n+      end if;\n+\n+      --  Next, try Switches (others)\n+\n       if Switches = Nil_Variable_Value then\n          Switches :=\n            Prj.Util.Value_Of\n              (Index     => All_Other_Names,\n               Src_Index => 0,\n               In_Array  => Switches_Array,\n               In_Tree   => Project_Tree);\n+\n+         if Switches /= Nil_Variable_Value then\n+            Switch_May_Be_Passed_To_The_Compiler := False;\n+         end if;\n       end if;\n \n+      --  And finally, Default_Switches (\"Ada\")\n+\n       if Switches = Nil_Variable_Value then\n          Switches :=\n            Prj.Util.Value_Of"}]}