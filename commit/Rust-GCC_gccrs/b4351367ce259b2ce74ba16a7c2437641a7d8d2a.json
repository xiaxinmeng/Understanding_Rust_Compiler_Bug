{"sha": "b4351367ce259b2ce74ba16a7c2437641a7d8d2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQzNTEzNjdjZTI1OWIyY2U3NGJhMTZhN2MyNDM3NjQxYTdkOGQyYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-07-28T07:44:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-07-28T07:44:34Z"}, "message": "re PR middle-end/44790 (Bootstrap fails after MEM-REF merge)\n\n\tPR middle-end/44790\n\tPR middle-end/44993\n\t* expr.c (expand_expr_real_1) <MEM_REF>: Revert latest change.  Make\n\tsure the base has address_mode before adding the offset.\n\nFrom-SVN: r162618", "tree": {"sha": "ba48970086fccf74bc08fdd978c74b3120c72141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba48970086fccf74bc08fdd978c74b3120c72141"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4351367ce259b2ce74ba16a7c2437641a7d8d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4351367ce259b2ce74ba16a7c2437641a7d8d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4351367ce259b2ce74ba16a7c2437641a7d8d2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4351367ce259b2ce74ba16a7c2437641a7d8d2a/comments", "author": null, "committer": null, "parents": [{"sha": "51680dfb0286dbacb62c112f8c09f3ebea4b2750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51680dfb0286dbacb62c112f8c09f3ebea4b2750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51680dfb0286dbacb62c112f8c09f3ebea4b2750"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "2ec44035826249c13a4574adc693cda575acb4cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4351367ce259b2ce74ba16a7c2437641a7d8d2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4351367ce259b2ce74ba16a7c2437641a7d8d2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4351367ce259b2ce74ba16a7c2437641a7d8d2a", "patch": "@@ -1,4 +1,12 @@\n+2010-07-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/44790\n+\tPR middle-end/44993\n+\t* expr.c (expand_expr_real_1) <MEM_REF>: Revert latest change.  Make\n+\tsure the base has address_mode before adding the offset.\n+\n 2010-07-27  Xinliang David Li <davidxl@google.com>\n+\n \t* tree-flow.h (create_mem_ref): Add one new parameter.\n \t* tree-ssa-address.c (create_mem_ref): New parameter.\n \t(addr_to_parts): Ditto."}, {"sha": "a27dfd8e4ab73defa247c356165285f28d5a856d", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4351367ce259b2ce74ba16a7c2437641a7d8d2a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4351367ce259b2ce74ba16a7c2437641a7d8d2a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b4351367ce259b2ce74ba16a7c2437641a7d8d2a", "patch": "@@ -8730,11 +8730,14 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t  base = build2 (BIT_AND_EXPR, TREE_TYPE (base),\n \t\t\t gimple_assign_rhs1 (def_stmt),\n \t\t\t gimple_assign_rhs2 (def_stmt));\n+\top0 = expand_expr (base, NULL_RTX, VOIDmode, EXPAND_NORMAL);\n+\top0 = convert_memory_address_addr_space (address_mode, op0, as);\n \tif (!integer_zerop (TREE_OPERAND (exp, 1)))\n-\t  base = build2 (POINTER_PLUS_EXPR, TREE_TYPE (base),\n-\t\t\t base, double_int_to_tree (sizetype,\n-\t\t\t\t\t\t   mem_ref_offset (exp)));\n-\top0 = expand_expr (base, NULL_RTX, address_mode, EXPAND_SUM);\n+\t  {\n+\t    rtx off\n+\t      = immed_double_int_const (mem_ref_offset (exp), address_mode);\n+\t    op0 = simplify_gen_binary (PLUS, address_mode, op0, off);\n+\t  }\n \top0 = memory_address_addr_space (mode, op0, as);\n \ttemp = gen_rtx_MEM (mode, op0);\n \tset_mem_attributes (temp, exp, 0);"}]}