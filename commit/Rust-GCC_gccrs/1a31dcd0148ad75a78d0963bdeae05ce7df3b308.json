{"sha": "1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEzMWRjZDAxNDhhZDc1YTc4ZDA5NjNiZGVhZTA1Y2U3ZGYzYjMwOA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2015-07-30T21:36:18Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2015-07-30T21:36:18Z"}, "message": "[V850] Hookize LIBCALL_VALUE\n\nFrom-SVN: r226418", "tree": {"sha": "e8ee364041b895d4fa7508c97b2daca02f4b835f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8ee364041b895d4fa7508c97b2daca02f4b835f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/comments", "author": null, "committer": null, "parents": [{"sha": "3403a1a9597dd6f853c25aff2290a16d3a9c9d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3403a1a9597dd6f853c25aff2290a16d3a9c9d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3403a1a9597dd6f853c25aff2290a16d3a9c9d00"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "4985050a743e7a4e2cc5842b49046d75e0a901b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "patch": "@@ -1,3 +1,11 @@\n+2015-07-30  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/v850/v850.h (LIBCALL_VALUE): Remove macros.\n+\t* config/v850/v850.md (RV_REGNUM): New constants.\n+\t* config/v850/v850.c (v850_libcall_value): New functions.\n+\t(v850_function_value_regno_p, v850_function_value): Use RV_REGNUM.\n+\t(TARGET_LIBCALL_VALUE): Define.\n+\n 2015-07-30  Anatoly Sokolov  <aesok@post.ru>\n \n \t* rtl.h (lowpart_subreg): Move in file."}, {"sha": "a03f5e2fc9d563173d3c490cfce474c49825f366", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "patch": "@@ -2979,7 +2979,7 @@ v850_select_section (tree exp,\n static bool\n v850_function_value_regno_p (const unsigned int regno)\n {\n-  return (regno == 10);\n+  return (regno == RV_REGNUM);\n }\n \n /* Worker function for TARGET_RETURN_IN_MEMORY.  */\n@@ -3002,7 +3002,16 @@ v850_function_value (const_tree valtype,\n                     const_tree fn_decl_or_type ATTRIBUTE_UNUSED,\n                     bool outgoing ATTRIBUTE_UNUSED)\n {\n-  return gen_rtx_REG (TYPE_MODE (valtype), 10);\n+  return gen_rtx_REG (TYPE_MODE (valtype), RV_REGNUM);\n+}\n+\n+/* Implement TARGET_LIBCALL_VALUE.  */\n+\n+static rtx\n+v850_libcall_value (machine_mode mode,\n+\t\t    const_rtx func ATTRIBUTE_UNUSED)\n+{\n+  return gen_rtx_REG (mode, RV_REGNUM);\n }\n \n \f\n@@ -3304,6 +3313,8 @@ v850_gen_movdi (rtx * operands)\n #define TARGET_FUNCTION_VALUE_REGNO_P v850_function_value_regno_p\n #undef  TARGET_FUNCTION_VALUE\n #define TARGET_FUNCTION_VALUE v850_function_value\n+#undef  TARGET_LIBCALL_VALUE\n+#define TARGET_LIBCALL_VALUE v850_libcall_value\n \n #undef  TARGET_PROMOTE_PROTOTYPES\n #define TARGET_PROMOTE_PROTOTYPES hook_bool_const_tree_true"}, {"sha": "7b65187de7942235ef0e82bfd1d59c015e57ae3e", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "patch": "@@ -549,12 +549,6 @@ struct cum_arg { int nbytes; };\n \n #define FUNCTION_ARG_REGNO_P(N) (N >= 6 && N <= 9)\n \n-/* Define how to find the value returned by a library function\n-   assuming the value has mode MODE.  */\n-\n-#define LIBCALL_VALUE(MODE) \\\n-  gen_rtx_REG (MODE, 10)\n-\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,"}, {"sha": "5d7bd5ff2af91b724097d904ed19bdfd580abeee", "filename": "gcc/config/v850/v850.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2Fconfig%2Fv850%2Fv850.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a31dcd0148ad75a78d0963bdeae05ce7df3b308/gcc%2Fconfig%2Fv850%2Fv850.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.md?ref=1a31dcd0148ad75a78d0963bdeae05ce7df3b308", "patch": "@@ -39,6 +39,7 @@\n   [(ZERO_REGNUM            \t0)          ; constant zero\n    (SP_REGNUM      \t\t3)          ; Stack Pointer\n    (GP_REGNUM      \t\t4)          ; GP Pointer\n+   (RV_REGNUM\t\t\t10)         ; Return value register\n    (EP_REGNUM      \t\t30)         ; EP pointer\n    (LP_REGNUM       \t\t31)         ; Return address register\n    (CC_REGNUM       \t\t32)         ; Condition code pseudo register"}]}