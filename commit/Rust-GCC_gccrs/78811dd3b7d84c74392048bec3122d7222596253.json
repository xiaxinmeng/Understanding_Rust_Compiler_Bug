{"sha": "78811dd3b7d84c74392048bec3122d7222596253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg4MTFkZDNiN2Q4NGM3NDM5MjA0OGJlYzMxMjJkNzIyMjU5NjI1Mw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2011-11-19T13:47:35Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2011-11-19T13:47:35Z"}, "message": "re PR target/50493 (ICE in neon_disambiguate_copy, at config/arm/arm.c:20388)\n\nPR target/50493\n* arm.c (neon_disambiguate_copy): Correctly handle partial overlap\nof src and dest operands.\n\nFrom-SVN: r181508", "tree": {"sha": "574f7789a94ddef4c81768c221499716fb99b920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/574f7789a94ddef4c81768c221499716fb99b920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78811dd3b7d84c74392048bec3122d7222596253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78811dd3b7d84c74392048bec3122d7222596253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78811dd3b7d84c74392048bec3122d7222596253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78811dd3b7d84c74392048bec3122d7222596253/comments", "author": null, "committer": null, "parents": [{"sha": "40353fb3aa64e07ac3dd27fc2306b5c5010b91d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40353fb3aa64e07ac3dd27fc2306b5c5010b91d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40353fb3aa64e07ac3dd27fc2306b5c5010b91d2"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "43de112c96ecbf044bff0d1362c478c56d0bffe2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78811dd3b7d84c74392048bec3122d7222596253/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78811dd3b7d84c74392048bec3122d7222596253/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78811dd3b7d84c74392048bec3122d7222596253", "patch": "@@ -1,3 +1,9 @@\n+2011-11-19  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/50493\n+\t* arm.c (neon_disambiguate_copy): Correctly handle partial overlap\n+\tof src and dest operands.\n+\n 2011-11-19  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/darwin.h (ASM_DEBUG_SPEC): New."}, {"sha": "e3b0b883ec8107f1c21acdd3ad471fe32d3cedb4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 20, "deletions": 25, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78811dd3b7d84c74392048bec3122d7222596253/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78811dd3b7d84c74392048bec3122d7222596253/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=78811dd3b7d84c74392048bec3122d7222596253", "patch": "@@ -20728,39 +20728,34 @@ neon_emit_pair_result_insn (enum machine_mode mode,\n   emit_move_insn (mem, tmp2);\n }\n \n-/* Set up operands for a register copy from src to dest, taking care not to\n-   clobber registers in the process.\n-   FIXME: This has rather high polynomial complexity (O(n^3)?) but shouldn't\n-   be called with a large N, so that should be OK.  */\n+/* Set up OPERANDS for a register copy from SRC to DEST, taking care\n+   not to early-clobber SRC registers in the process.\n \n+   We assume that the operands described by SRC and DEST represent a\n+   decomposed copy of OPERANDS[1] into OPERANDS[0].  COUNT is the\n+   number of components into which the copy has been decomposed.  */\n void\n neon_disambiguate_copy (rtx *operands, rtx *dest, rtx *src, unsigned int count)\n {\n-  unsigned int copied = 0, opctr = 0;\n-  unsigned int done = (1 << count) - 1;\n-  unsigned int i, j;\n+  unsigned int i;\n \n-  while (copied != done)\n+  if (!reg_overlap_mentioned_p (operands[0], operands[1])\n+      || REGNO (operands[0]) < REGNO (operands[1]))\n     {\n       for (i = 0; i < count; i++)\n-        {\n-          int good = 1;\n-\n-          for (j = 0; good && j < count; j++)\n-            if (i != j && (copied & (1 << j)) == 0\n-                && reg_overlap_mentioned_p (src[j], dest[i]))\n-              good = 0;\n-\n-          if (good)\n-            {\n-              operands[opctr++] = dest[i];\n-              operands[opctr++] = src[i];\n-              copied |= 1 << i;\n-            }\n-        }\n+\t{\n+\t  operands[2 * i] = dest[i];\n+\t  operands[2 * i + 1] = src[i];\n+\t}\n+    }\n+  else\n+    {\n+      for (i = 0; i < count; i++)\n+\t{\n+\t  operands[2 * i] = dest[count - i - 1];\n+\t  operands[2 * i + 1] = src[count - i - 1];\n+\t}\n     }\n-\n-  gcc_assert (opctr == count * 2);\n }\n \n /* Expand an expression EXP that calls a built-in function,"}]}