{"sha": "a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhNmMxNGE1NWRjZTdjYWUzYmNjN2Y0NDBjMzc2NGY1YzA0ODE0Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-12-13T12:26:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-12-13T12:26:52Z"}, "message": "Fix [fs.path.gen] tests to use backslashes for mingw\n\nThe normalized paths contain backslashes so fix the expected values to\nuse backslashes too.\n\n\t* testsuite/27_io/filesystem/path/generation/proximate.cc: Use\n\tpreferred directory separators for normalized paths.\n\t* testsuite/27_io/filesystem/path/generation/relative.cc: Likewise.\n\nFrom-SVN: r267090", "tree": {"sha": "66059615001d9fdead7676d9709320008e76b315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66059615001d9fdead7676d9709320008e76b315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebfaf345701abe17eae7757dd07ebc0c2955b0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebfaf345701abe17eae7757dd07ebc0c2955b0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebfaf345701abe17eae7757dd07ebc0c2955b0e6"}], "stats": {"total": 57, "additions": 43, "deletions": 14}, "files": [{"sha": "cde8426089ab5d2ada82c99bad9a3ed25a3f12d7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "patch": "@@ -1,5 +1,9 @@\n 2018-12-13  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/27_io/filesystem/path/generation/proximate.cc: Use\n+\tpreferred directory separators for normalized paths.\n+\t* testsuite/27_io/filesystem/path/generation/relative.cc: Likewise.\n+\n \t* testsuite/27_io/filesystem/path/itr/traversal.cc: Fix test for\n \tmingw.\n "}, {"sha": "699b536b87724ab2635f94aa2b8005aabef70b6c", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/generation/proximate.cc", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneration%2Fproximate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneration%2Fproximate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneration%2Fproximate.cc?ref=a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "patch": "@@ -26,24 +26,37 @@\n using std::filesystem::path;\n using __gnu_test::compare_paths;\n \n+// Normalize directory-separators\n+std::string operator\"\"_norm(const char* s, std::size_t n)\n+{\n+  std::string str(s, n);\n+#if defined(__MING32__) || defined(__MINGW64__)\n+  for (auto& c : str)\n+    if (c == '/')\n+      c = '\\\\';\n+#endif\n+  return str;\n+}\n+\n void\n test01()\n {\n   // C++17 [fs.path.gen] p5\n-  compare_paths( path(\"/a/d\").lexically_proximate(\"/a/b/c\"), \"../../d\" );\n-  compare_paths( path(\"/a/b/c\").lexically_proximate(\"/a/d\"), \"../b/c\" );\n-  compare_paths( path(\"a/b/c\").lexically_proximate(\"a\"), \"b/c\" );\n-  compare_paths( path(\"a/b/c\").lexically_proximate(\"a/b/c/x/y\"), \"../..\" );\n-  compare_paths( path(\"a/b/c\").lexically_proximate(\"a/b/c\"), \".\" );\n-  compare_paths( path(\"a/b\").lexically_proximate(\"c/d\"), \"../../a/b\" );\n+  compare_paths( path(\"/a/d\").lexically_proximate(\"/a/b/c\"), \"../../d\"_norm );\n+  compare_paths( path(\"/a/b/c\").lexically_proximate(\"/a/d\"), \"../b/c\"_norm );\n+  compare_paths( path(\"a/b/c\").lexically_proximate(\"a\"), \"b/c\"_norm );\n+  compare_paths( path(\"a/b/c\").lexically_proximate(\"a/b/c/x/y\"), \"../..\"_norm );\n+  compare_paths( path(\"a/b/c\").lexically_proximate(\"a/b/c\"), \".\"_norm );\n+  compare_paths( path(\"a/b\").lexically_proximate(\"c/d\"), \"../../a/b\"_norm );\n }\n \n void\n test02()\n {\n   path p = \"a/b/c\";\n   compare_paths( p.lexically_proximate(p), \".\" );\n-  compare_paths( p.lexically_proximate(\"a/../a/b/../b/c/../c/.\"), \"../../b/c\" );\n+  compare_paths( p.lexically_proximate(\"a/../a/b/../b/c/../c/.\"),\n+\t\t \"../../b/c\"_norm );\n   compare_paths( p.lexically_proximate(\"../../../\"), p );\n }\n "}, {"sha": "c366261951df17939c93dcfde0a8975f04abb52a", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/generation/relative.cc", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneration%2Frelative.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6c14a55dce7cae3bcc7f440c3764f5c048147/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneration%2Frelative.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fgeneration%2Frelative.cc?ref=a7a6c14a55dce7cae3bcc7f440c3764f5c048147", "patch": "@@ -26,27 +26,39 @@\n using std::filesystem::path;\n using __gnu_test::compare_paths;\n \n+// Normalize directory-separators\n+std::string operator\"\"_norm(const char* s, std::size_t n)\n+{\n+  std::string str(s, n);\n+#if defined(__MING32__) || defined(__MINGW64__)\n+  for (auto& c : str)\n+    if (c == '/')\n+      c = '\\\\';\n+#endif\n+  return str;\n+}\n+\n void\n test01()\n {\n   // C++17 [fs.path.gen] p5\n-  compare_paths( path(\"/a/d\").lexically_relative(\"/a/b/c\"), \"../../d\" );\n-  compare_paths( path(\"/a/b/c\").lexically_relative(\"/a/d\"), \"../b/c\" );\n-  compare_paths( path(\"a/b/c\").lexically_relative(\"a\"), \"b/c\" );\n-  compare_paths( path(\"a/b/c\").lexically_relative(\"a/b/c/x/y\"), \"../..\" );\n+  compare_paths( path(\"/a/d\").lexically_relative(\"/a/b/c\"), \"../../d\"_norm );\n+  compare_paths( path(\"/a/b/c\").lexically_relative(\"/a/d\"), \"../b/c\"_norm );\n+  compare_paths( path(\"a/b/c\").lexically_relative(\"a\"), \"b/c\"_norm );\n+  compare_paths( path(\"a/b/c\").lexically_relative(\"a/b/c/x/y\"), \"../..\"_norm );\n   compare_paths( path(\"a/b/c\").lexically_relative(\"a/b/c\"), \".\" );\n-  compare_paths( path(\"a/b\").lexically_relative(\"c/d\"), \"../../a/b\" );\n+  compare_paths( path(\"a/b\").lexically_relative(\"c/d\"), \"../../a/b\"_norm );\n }\n \n void\n test02()\n {\n   path p = \"a/b/c\";\n   compare_paths( p.lexically_relative(p), \".\" );\n-  compare_paths( p.lexically_relative(\"a/../a/b/../b/c/../c/.\"), \"../../b/c\" );\n+  compare_paths( p.lexically_relative(\"a/../a/b/../b/c/../c/.\"), \"../../b/c\"_norm );\n   compare_paths( p.lexically_relative(\"../../../\"), \"\" );\n \n-  compare_paths( path(\"a/./.\").lexically_relative(\"a\"), \"./.\" );\n+  compare_paths( path(\"a/./.\").lexically_relative(\"a\"), \"./.\"_norm );\n }\n \n void"}]}