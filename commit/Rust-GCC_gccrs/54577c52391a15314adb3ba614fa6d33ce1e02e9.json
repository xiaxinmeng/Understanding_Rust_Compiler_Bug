{"sha": "54577c52391a15314adb3ba614fa6d33ce1e02e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1NzdjNTIzOTFhMTUzMTRhZGIzYmE2MTRmYTZkMzNjZTFlMDJlOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T01:41:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T01:41:12Z"}, "message": "(TCFLAGS): New variable.\n\n(GCC_CFLAGS): Add $(TCFLAGS).\n(LIBGCC2_CFLAGS): Add -D for __GCC_FLOAT_NOT_NEEDED.\n(libgcc1-test): Remove -nostdlib.\n(float.h-cross): Don't give error #ifdef __GCC_FLOAT_NOT_NEEDED.\n\nFrom-SVN: r11243", "tree": {"sha": "bba9d2dc9ddcfeb487875a63aedfe4ac756ccc8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bba9d2dc9ddcfeb487875a63aedfe4ac756ccc8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54577c52391a15314adb3ba614fa6d33ce1e02e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54577c52391a15314adb3ba614fa6d33ce1e02e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54577c52391a15314adb3ba614fa6d33ce1e02e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54577c52391a15314adb3ba614fa6d33ce1e02e9/comments", "author": null, "committer": null, "parents": [{"sha": "072a08d9c7efc8b8f2bea85d3cde5a24d3192d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072a08d9c7efc8b8f2bea85d3cde5a24d3192d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072a08d9c7efc8b8f2bea85d3cde5a24d3192d2d"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "996cb5d5ab10e8354fbbf4ddeab04be0e2f6254c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54577c52391a15314adb3ba614fa6d33ce1e02e9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54577c52391a15314adb3ba614fa6d33ce1e02e9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=54577c52391a15314adb3ba614fa6d33ce1e02e9", "patch": "@@ -46,7 +46,9 @@ ALLOCA_FINISH = true\n # BOOT_CFLAGS is the value of CFLAGS to pass\n # to the stage2 and stage3 compilations\n # XCFLAGS is used for most compilations but not when using the GCC just built.\n+# TCFLAGS is used for compilations with the GCC just built.\n XCFLAGS =\n+TCFLAGS =\n CFLAGS = -g\n BOOT_CFLAGS = -O $(CFLAGS)\n # These exists to be overridden by the x-* and t-* files, respectively.\n@@ -127,7 +129,7 @@ GCC_FOR_TARGET = ./xgcc -B./\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -I./include to find, e.g., stddef.h.\n-GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -I./include\n+GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -I./include $(TCFLAGS)\n \n # Special flags for compiling enquire.\n # We disable optimization to make floating point more reliable.\n@@ -246,7 +248,7 @@ LIBGCC2 = libgcc2.a\n # -g1 causes output of debug info only for file-scope entities.\n # we use this here because that should be enough, and also\n # so that -g1 will be tested.\n-LIBGCC2_CFLAGS = -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) $(TARGET_LIBGCC2_CFLAGS) -g1 -DIN_LIBGCC2\n+LIBGCC2_CFLAGS = -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) $(TARGET_LIBGCC2_CFLAGS) -g1 -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED\n \n # Additional options to use when compiling libgcc2.a.\n # Some targets override this to -Iinclude\n@@ -664,7 +666,7 @@ rest.cross: $(LIBGCC) gfloat.h specs\n libgcc1-test: libgcc1-test.o native $(GCC_PARTS)\n \t@echo \"Testing libgcc1.  Ignore linker warning messages.\"\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) libgcc1-test.o -o libgcc1-test \\\n-\t  -nostartfiles -nostdlib `$(GCC_FOR_TARGET) --print-libgcc-file-name`\n+\t  -nostartfiles `$(GCC_FOR_TARGET) --print-libgcc-file-name`\n libgcc1-test.o: libgcc1-test.c native xgcc\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -c $(srcdir)/libgcc1-test.c\n \n@@ -714,7 +716,9 @@ float.h-nat: enquire\n # ??? This isn't used anymore.  Should we create config/float-unkn.h\n # and make that the default float_format in configure?\n float.h-cross:\n-\techo \"#error float.h values not known for cross-compiler\" > t-float.h-cross\n+\techo \"#ifndef\t__GCC_FLOAT_NOT_NEEDED\" > t-float.h-cross\n+\techo \"#error float.h values not known for cross-compiler\" >> t-float.h-cross\n+\techo \"#endif\" >> t-float.h-cross\n \tmv t-float.h-cross float.h-cross\n \n # Used to compile enquire with standard cc, but have forgotten why."}]}