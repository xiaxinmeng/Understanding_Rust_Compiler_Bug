{"sha": "afe91e2566f47a6041f45095a48fc255625cb468", "node_id": "C_kwDOANBUbNoAKGFmZTkxZTI1NjZmNDdhNjA0MWY0NTA5NWE0OGZjMjU1NjI1Y2I0Njg", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2022-01-21T19:13:11Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2022-01-21T19:14:19Z"}, "message": "rs6000: Support vector float/double for vec_sldw\n\n2022-01-21  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000-overload.def (VEC_SLDW): Add instances for\n\tvector float and vector double.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/builtins-4.c: Add two test variants.  Adjust\n\tassembler counts.", "tree": {"sha": "3f08cd1e443cb63bfa672a83262cf7f556bb7e8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f08cd1e443cb63bfa672a83262cf7f556bb7e8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afe91e2566f47a6041f45095a48fc255625cb468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe91e2566f47a6041f45095a48fc255625cb468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe91e2566f47a6041f45095a48fc255625cb468", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe91e2566f47a6041f45095a48fc255625cb468/comments", "author": null, "committer": null, "parents": [{"sha": "518aad6a161598fd49dffaa5b5c8da477fda160a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518aad6a161598fd49dffaa5b5c8da477fda160a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518aad6a161598fd49dffaa5b5c8da477fda160a"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "7d030abf51b8ff1504b93fd3d9f6f423f9cab796", "filename": "gcc/config/rs6000/rs6000-overload.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe91e2566f47a6041f45095a48fc255625cb468/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe91e2566f47a6041f45095a48fc255625cb468/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def?ref=afe91e2566f47a6041f45095a48fc255625cb468", "patch": "@@ -3401,6 +3401,10 @@\n     XXSLDWI_2DI  XXSLDWI_VSLL\n   vull __builtin_vec_sldw (vull, vull, const int);\n     XXSLDWI_2DI  XXSLDWI_VULL\n+  vf __builtin_vec_sldw (vf, vf, const int);\n+    XXSLDWI_4SF  XXSLDWI_VF\n+  vd __builtin_vec_sldw (vd, vd, const int);\n+    XXSLDWI_2DF  XXSLDWI_VD\n \n [VEC_SLL, vec_sll, __builtin_vec_sll]\n   vsc __builtin_vec_sll (vsc, vuc);"}, {"sha": "f65e582541aaea6d0f335f0b299232ea9f294000", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-4.c", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe91e2566f47a6041f45095a48fc255625cb468/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe91e2566f47a6041f45095a48fc255625cb468/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c?ref=afe91e2566f47a6041f45095a48fc255625cb468", "patch": "@@ -119,6 +119,18 @@ test_vul_sldw_vul_vul (vector unsigned long long x,\n \treturn vec_sldw (x, y, 3);\n }\n \n+vector float\n+test_vf_sldw_vf_vf (vector float x, vector float y)\n+{\n+  return vec_sldw (x, y, 3);\n+}\n+\n+vector double\n+test_vd_sldw_vd_vd (vector double x, vector double y)\n+{\n+  return vec_sldw (x, y, 1);\n+}\n+\n vector signed int long long\n test_sll_vsill_vsill_vuc (vector signed long long int x,\n \t\t\t  vector unsigned char y)\n@@ -146,21 +158,23 @@ test_sll_vuill_vuill_vuc (vector unsigned long long int x,\n      test_slo_vsll_slo_vsll_vuc    1 vslo\n      test_slo_vull_slo_vull_vsc    1 vslo\n      test_slo_vull_slo_vull_vuc    1 vslo\n-     test_vsc_sldw_vsc_vsc         1 xxlor\n-     test_vuc_sldw_vuc_vuc         1 xxlor\n-     test_vssi_sldw_vssi_vssi      1 xxlor\n-     test_vusi_sldw_vusi_vusi      1 xxlor\n-     test_vsi_sldw_vsi_vsi         1 xxlor\n-     test_vui_sldw_vui_vui         1 xxlor\n-     test_vsl_sldw_vsl_vsl         1 xxlor\n-     test_vul_sldw_vul_vul         1 xxlor\n+     test_vsc_sldw_vsc_vsc         1 xxlor, 1 xxsldwi\n+     test_vuc_sldw_vuc_vuc         1 xxlor, 1 xxsldwi\n+     test_vssi_sldw_vssi_vssi      1 xxlor, 1 xxsldwi\n+     test_vusi_sldw_vusi_vusi      1 xxlor, 1 xxsldwi\n+     test_vsi_sldw_vsi_vsi         1 xxlor, 1 xxsldwi\n+     test_vui_sldw_vui_vui         1 xxlor, 1 xxsldwi\n+     test_vsl_sldw_vsl_vsl         1 xxlor, 1 xxsldwi\n+     test_vul_sldw_vul_vul         1 xxlor, 1 xxsldwi\n+     test_vf_sldw_vf_vf            1 xxlor, 1 xxsldwi\n+     test_vd_sldw_vd_vd            1 xxlor, 1 xxsldwi\n      test_sll_vsill_vsill_vuc      1 vsl\n      test_sll_vuill_vuill_vuc      1 vsl  */\n \n /* { dg-final { scan-assembler-times \"vsldoi\"    1 } } */\n /* { dg-final { scan-assembler-times \"xvnabssp\"  1 } } */\n /* { dg-final { scan-assembler-times \"xvnabsdp\"  1 } } */\n /* { dg-final { scan-assembler-times \"vslo\"      4 } } */\n-/* { dg-final { scan-assembler-times \"xxlor\"     30 } } */\n+/* { dg-final { scan-assembler-times \"xxlor\"     32 } } */\n /* { dg-final { scan-assembler-times {\\mvsl\\M}   5 } } */\n-\n+/* { dg-final { scan-assembler-times {\\mxxsldwi\\M} 10 } } */"}]}