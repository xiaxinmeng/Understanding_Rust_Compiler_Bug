{"sha": "2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhZTk5ZjdhNGZmMWFkYjdiN2I1NTdlYjk4ZWNjY2U4M2E0MzdkYw==", "commit": {"author": {"name": "Xiong Hu Luo", "email": "luoxhu@linux.ibm.com", "date": "2019-11-15T08:15:37Z"}, "committer": {"name": "Xiong Hu Luo", "email": "luoxhu@gcc.gnu.org", "date": "2019-11-15T08:15:37Z"}, "message": "Update iterator of next\n\nnext is initialized only in the loop before, it is never updated\nin it's own loop.\n\ngcc/ChangeLog:\n\n\t2019-11-15  Xiong Hu Luo  <luoxhu@linux.ibm.com>\n\n\t* ipa-inline.c (inline_small_functions): Update iterator of next.\n\nFrom-SVN: r278277", "tree": {"sha": "fae549dc3c967bcf1d02d5fab073fe09335f3710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae549dc3c967bcf1d02d5fab073fe09335f3710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f543bdd3f997a82627fee4bd3704dd939ece809d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f543bdd3f997a82627fee4bd3704dd939ece809d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f543bdd3f997a82627fee4bd3704dd939ece809d"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "cd8e656540b083c623afb54705b749cff05cd03c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "patch": "@@ -1,3 +1,7 @@\n+2019-11-15  Xiong Hu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* ipa-inline.c (inline_small_functions): Update iterator of next.\n+\n 2019-11-14  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* lra-spills.c (assign_spill_hard_regs): Check that the spill"}, {"sha": "85521ed2888700a8c5ceba28d5965e8ba8ac8e7b", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "patch": "@@ -1931,12 +1931,15 @@ inline_small_functions (void)\n \t}\n       if (has_speculative)\n \tfor (edge = node->callees; edge; edge = next)\n-\t  if (edge->speculative && !speculation_useful_p (edge,\n-\t\t\t\t\t\t\t  edge->aux != NULL))\n-\t    {\n-\t      edge->resolve_speculation ();\n-\t      update = true;\n-\t    }\n+\t  {\n+\t    if (edge->speculative\n+\t\t&& !speculation_useful_p (edge, edge->aux != NULL))\n+\t      {\n+\t\tedge->resolve_speculation ();\n+\t\tupdate = true;\n+\t      }\n+\t    next = edge->next_callee;\n+\t  }\n       if (update)\n \t{\n \t  struct cgraph_node *where = node->inlined_to"}]}