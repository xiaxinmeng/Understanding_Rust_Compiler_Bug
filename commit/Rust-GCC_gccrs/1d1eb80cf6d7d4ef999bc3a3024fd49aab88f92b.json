{"sha": "1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxZWI4MGNmNmQ3ZDRlZjk5OWJjM2EzMDI0ZmQ0OWFhYjg4ZjkyYg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2009-03-31T15:19:33Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2009-03-31T15:19:33Z"}, "message": "simplify-rtx.c (simplify_relational_operation_1): Simplify (LTU (PLUS a C) C) or (LTU (PLUS a C) a) to (GEU a -C)...\n\n\t* simplify-rtx.c (simplify_relational_operation_1): Simplify\n\t(LTU (PLUS a C) C) or (LTU (PLUS a C) a) to (GEU a -C); likewise with\n\tGEU/LTU reversed.\n\nFrom-SVN: r145353", "tree": {"sha": "20349adba55f7efe9d61f97de733c2a776a6cf74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20349adba55f7efe9d61f97de733c2a776a6cf74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b/comments", "author": null, "committer": null, "parents": [{"sha": "1569e19062140aa281bc0d08d1be4cf8d4a0e7bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1569e19062140aa281bc0d08d1be4cf8d4a0e7bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1569e19062140aa281bc0d08d1be4cf8d4a0e7bf"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "9aeafa9eae200d596e41eb3174af6906802c2984", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b", "patch": "@@ -15,6 +15,10 @@\n \tand keep using them to simplify new expressions, while applying the\n \tsame substitutions to them as to the expression.\n \n+\t* simplify-rtx.c (simplify_relational_operation_1): Simplify\n+\t(LTU (PLUS a C) C) or (LTU (PLUS a C) a) to (GEU a -C); likewise with\n+\tGEU/LTU reversed.\n+\n 2009-03-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n         PR target/27237"}, {"sha": "b8b6ad81763a86da253af2141e4e93399e3d1830", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=1d1eb80cf6d7d4ef999bc3a3024fd49aab88f92b", "patch": "@@ -3856,6 +3856,20 @@ simplify_relational_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t}\n     }\n \n+  /* (LTU/GEU (PLUS a C) C), where C is constant, can be simplified to\n+     (GEU/LTU a -C).  Likewise for (LTU/GEU (PLUS a C) a).  */\n+  if ((code == LTU || code == GEU)\n+      && GET_CODE (op0) == PLUS\n+      && GET_CODE (XEXP (op0, 1)) == CONST_INT\n+      && (rtx_equal_p (op1, XEXP (op0, 0))\n+\t  || rtx_equal_p (op1, XEXP (op0, 1))))\n+    {\n+      rtx new_cmp\n+\t= simplify_gen_unary (NEG, cmp_mode, XEXP (op0, 1), cmp_mode);\n+      return simplify_gen_relational ((code == LTU ? GEU : LTU), mode,\n+\t\t\t\t      cmp_mode, XEXP (op0, 0), new_cmp);\n+    }\n+\n   /* Canonicalize (LTU/GEU (PLUS a b) b) as (LTU/GEU (PLUS a b) a).  */\n   if ((code == LTU || code == GEU)\n       && GET_CODE (op0) == PLUS"}]}