{"sha": "d4881d364f4a56a41ec47624f6c1076424c00179", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4ODFkMzY0ZjRhNTZhNDFlYzQ3NjI0ZjZjMTA3NjQyNGMwMDE3OQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-06-16T08:34:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:34:41Z"}, "message": "clean.adb (Clean_Project): Correctly delete executable specified as absolute path names.\n\n2005-06-14  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb (Clean_Project): Correctly delete executable specified as\n\tabsolute path names.\n\n\t* make.adb (Gnatmake): Allow relative executable path names with\n\tdirectory information even when project files are used.\n\t(Change_To_Object_Directory): Fail gracefully when unable to change\n\tcurrent working directory to object directory of a project.\n\t(Gnatmake): Remove exception handler that could no longer be exercized\n\t(Compile_Sources.Compile): Use deep copies of arguments, as some of them\n\tmay be deallocated by Normalize_Arguments.\n\t(Collect_Arguments): Eliminate empty arguments\n\n\t* gnatcmd.adb (All_Projects): New Boolean flag, initialized to False,\n\tand set to True when -U is used for GNAT PRETTY or GNAT METRIC.\n\t(Check_Project): Return False when Project is No_Project. Return True\n\twhen All_Projects is True.\n\t(GNATCmd): Recognize switch -U for GNAT PRETTY and GNAT METRIC and set\n\tAll_Projects to True.\n\tMinor reformatting\n\nFrom-SVN: r101028", "tree": {"sha": "d745fc7e6dbcbf297fb6736799c3c03c4e76e002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d745fc7e6dbcbf297fb6736799c3c03c4e76e002"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4881d364f4a56a41ec47624f6c1076424c00179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4881d364f4a56a41ec47624f6c1076424c00179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4881d364f4a56a41ec47624f6c1076424c00179", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4881d364f4a56a41ec47624f6c1076424c00179/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8b9660d16d93d5e5b17da70df59f955bd2be03b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b9660d16d93d5e5b17da70df59f955bd2be03b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b9660d16d93d5e5b17da70df59f955bd2be03b"}], "stats": {"total": 204, "additions": 98, "deletions": 106}, "files": [{"sha": "4941f91644952ff92303cfc5feed0c377bc300b3", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4881d364f4a56a41ec47624f6c1076424c00179/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4881d364f4a56a41ec47624f6c1076424c00179/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=d4881d364f4a56a41ec47624f6c1076424c00179", "patch": "@@ -884,7 +884,8 @@ package body Clean is\n       if Project = Main_Project and then Data.Exec_Directory /= No_Name then\n          declare\n             Exec_Dir : constant String :=\n-              Get_Name_String (Data.Exec_Directory);\n+                         Get_Name_String (Data.Exec_Directory);\n+\n          begin\n             Change_Dir (Exec_Dir);\n \n@@ -899,9 +900,22 @@ package body Clean is\n                        Main_Source_File,\n                        Current_File_Index);\n \n-                  if Is_Regular_File (Get_Name_String (Executable)) then\n-                     Delete (Exec_Dir, Get_Name_String (Executable));\n-                  end if;\n+                  declare\n+                     Exec_File_Name : constant String :=\n+                                        Get_Name_String (Executable);\n+\n+                  begin\n+                     if Is_Absolute_Path (Name => Exec_File_Name) then\n+                        if Is_Regular_File (Exec_File_Name) then\n+                           Delete (\"\", Exec_File_Name);\n+                        end if;\n+\n+                     else\n+                        if Is_Regular_File (Exec_File_Name) then\n+                           Delete (Exec_Dir, Exec_File_Name);\n+                        end if;\n+                     end if;\n+                  end;\n                end if;\n \n                if Data.Object_Directory /= No_Name then"}, {"sha": "40919620e30e49626e35b669c1a52c38f403b266", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4881d364f4a56a41ec47624f6c1076424c00179/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4881d364f4a56a41ec47624f6c1076424c00179/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=d4881d364f4a56a41ec47624f6c1076424c00179", "patch": "@@ -149,12 +149,22 @@ procedure GNATCmd is\n    ----------------------------------\n \n    The_Command : Command_Type;\n+   --  The command specified in the invocation of the GNAT driver\n \n    Command_Arg : Positive := 1;\n+   --  The index of the command in the arguments of the GNAT driver\n \n    My_Exit_Status : Exit_Status := Success;\n+   --  The exit status of the spawned tool. Used to set the correct VMS\n+   --  exit status.\n \n    Current_Work_Dir : constant String := Get_Current_Dir;\n+   --  The path of the working directory\n+\n+   All_Projects : Boolean := False;\n+   --  Flag used for GNAT PRETTY and GNAT METRIC to indicate that\n+   --  the underlying tool (gnatpp or gnatmetric) should be invoked for all\n+   --  sources of all projects.\n \n    -----------------------\n    -- Local Subprograms --\n@@ -336,7 +346,7 @@ procedure GNATCmd is\n \n                else\n                   --  For gnatpp and gnatmetric, put all sources\n-                  --  of the project.\n+                  --  of the project, or of all projects if -U was specified.\n \n                   for Kind in Spec_Or_Body loop\n \n@@ -425,7 +435,10 @@ procedure GNATCmd is\n       Root_Project : Project_Id) return Boolean\n    is\n    begin\n-      if Project = Root_Project then\n+      if Project = No_Project then\n+         return False;\n+\n+      elsif All_Projects or Project = Root_Project then\n          return True;\n \n       elsif The_Command = Metric then\n@@ -1526,6 +1539,13 @@ begin\n \n                      Remove_Switch (Arg_Num);\n \n+                  elsif (The_Command = Pretty or else The_Command = Metric)\n+                    and then Argv'Length = 2\n+                    and then Argv (2) = 'U'\n+                  then\n+                     All_Projects := True;\n+                     Remove_Switch (Arg_Num);\n+\n                   else\n                      Arg_Num := Arg_Num + 1;\n                   end if;\n@@ -1710,6 +1730,7 @@ begin\n                      First_Switches.Increment_Last;\n                      First_Switches.Table (First_Switches.Last)  :=\n                        new String'(\"-C\" & Get_Name_String (CP_File));\n+\n                   else\n                      Add_To_Carg_Switches\n                        (new String'(\"-gnatec=\" & Get_Name_String (CP_File)));"}, {"sha": "cc7860d4e8841007e09ce867aef138539d975b26", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 57, "deletions": 100, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4881d364f4a56a41ec47624f6c1076424c00179/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4881d364f4a56a41ec47624f6c1076424c00179/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d4881d364f4a56a41ec47624f6c1076424c00179", "patch": "@@ -1065,32 +1065,41 @@ package body Make is\n    --------------------------------\n \n    procedure Change_To_Object_Directory (Project : Project_Id) is\n+      Actual_Project : Project_Id;\n+\n    begin\n-      --  Nothing to do if the current working directory is alresdy the one\n-      --  we want.\n+      --  For sources outside of any project, compilation occurs in the object\n+      --  directory of the main project, otherwise we use the project given.\n+\n+      if Project = No_Project then\n+         Actual_Project := Main_Project;\n+      else\n+         Actual_Project := Project;\n+      end if;\n \n-      if Project_Object_Directory /= Project then\n-         Project_Object_Directory := Project;\n+      --  Nothing to do if the current working directory is already the correct\n+      --  object directory.\n \n-         --  If in a real project, set the working directory to the object\n-         --  directory of the project.\n+      if Project_Object_Directory /= Actual_Project then\n+         Project_Object_Directory := Actual_Project;\n \n-         if Project /= No_Project then\n-            Change_Dir\n-              (Get_Name_String\n-                 (Project_Tree.Projects.Table\n-                    (Project).Object_Directory));\n+         --  Set the working directory to the object directory of the actual\n+         --  project.\n \n-         --  Otherwise, for sources outside of any project, set the working\n-         --  directory to the object directory of the main project.\n+         Change_Dir\n+           (Get_Name_String\n+              (Project_Tree.Projects.Table\n+                 (Actual_Project).Object_Directory));\n \n-         elsif Main_Project /= No_Project then\n-            Change_Dir\n-              (Get_Name_String\n-                 (Project_Tree.Projects.Table\n-                    (Main_Project).Object_Directory));\n-         end if;\n       end if;\n+\n+   exception\n+      --  Fail if unable to change to the object directory\n+\n+      when Directory_Error =>\n+         Make_Failed (\"unable to change to object directory of project \" &\n+                      Get_Name_String (Project_Tree.Projects.Table\n+                                         (Actual_Project).Display_Name));\n    end Change_To_Object_Directory;\n \n    -----------\n@@ -1823,6 +1832,7 @@ package body Make is\n \n                         declare\n                            New_Args : Argument_List (1 .. Number);\n+                           Last_New : Natural := 0;\n \n                         begin\n                            Current := Switches.Values;\n@@ -1831,17 +1841,24 @@ package body Make is\n                               Element := Project_Tree.String_Elements.\n                                            Table (Current);\n                               Get_Name_String (Element.Value);\n-                              New_Args (Index) :=\n-                                new String'(Name_Buffer (1 .. Name_Len));\n-                              Test_If_Relative_Path\n-                                (New_Args (Index), Parent => Data.Dir_Path);\n+\n+                              if Name_Len > 0 then\n+                                 Last_New := Last_New + 1;\n+                                 New_Args (Last_New) :=\n+                                   new String'(Name_Buffer (1 .. Name_Len));\n+                                 Test_If_Relative_Path\n+                                   (New_Args (Last_New),\n+                                    Parent => Data.Dir_Path);\n+                              end if;\n+\n                               Current := Element.Next;\n                            end loop;\n \n                            Add_Arguments\n                              (Configuration_Pragmas_Switch\n                                 (Arguments_Project) &\n-                              New_Args & The_Saved_Gcc_Switches.all);\n+                              New_Args (1 .. Last_New) &\n+                              The_Saved_Gcc_Switches.all);\n                         end;\n                      end;\n \n@@ -2312,6 +2329,7 @@ package body Make is\n          Comp_Args : Argument_List (Args'First .. Args'Last + 9);\n          Comp_Next : Integer := Args'First;\n          Comp_Last : Integer;\n+         Arg_Index : Integer;\n \n          function Ada_File_Name (Name : Name_Id) return Boolean;\n          --  Returns True if Name is the name of an ada source file\n@@ -2376,14 +2394,21 @@ package body Make is\n            and then S = Strip_Directory (S)\n          then\n             Comp_Last := Comp_Next + Args'Length - 3;\n-            Comp_Args (Comp_Next .. Comp_Last) :=\n-              Args (Args'First + 1 .. Args'Last - 1);\n+            Arg_Index := Args'First + 1;\n \n          else\n             Comp_Last := Comp_Next + Args'Length - 1;\n-            Comp_Args (Comp_Next .. Comp_Last) := Args;\n+            Arg_Index := Args'First;\n          end if;\n \n+         --  Make a deep copy of the arguments, because Normalize_Arguments\n+         --  may deallocate some arguments.\n+\n+         for J in Comp_Next .. Comp_Last loop\n+            Comp_Args (J) := new String'(Args (Arg_Index).all);\n+            Arg_Index := Arg_Index + 1;\n+         end loop;\n+\n          --  Set -gnatpg for predefined files (for this purpose the renamings\n          --  such as Text_IO do not count as predefined). Note that we strip\n          --  the directory name from the source file name becase the call to\n@@ -4156,60 +4181,8 @@ package body Make is\n          then\n             --  Change current directory to object directory of main project\n \n-            begin\n-               Project_Object_Directory := No_Project;\n-               Change_To_Object_Directory (Main_Project);\n-\n-            exception\n-               when Directory_Error =>\n-\n-                  --  This should never happen. But, if it does, display the\n-                  --  content of the parent directory of the obj dir.\n-\n-                  declare\n-                     Parent : constant Dir_Name_Str :=\n-                                Dir_Name\n-                                  (Get_Name_String\n-                                     (Project_Tree.Projects.Table\n-                                        (Main_Project).Object_Directory));\n-\n-                     Dir  : Dir_Type;\n-                     Str  : String (1 .. 200);\n-                     Last : Natural;\n-\n-                  begin\n-                     Write_Str (\"Contents of directory \"\"\");\n-                     Write_Str (Parent);\n-                     Write_Line (\"\"\":\");\n-\n-                     Open (Dir, Parent);\n-\n-                     loop\n-                        Read (Dir, Str, Last);\n-                        exit when Last = 0;\n-                        Write_Str (\"   \");\n-                        Write_Line (Str (1 .. Last));\n-                     end loop;\n-\n-                     Close (Dir);\n-\n-                  exception\n-                     when X : others =>\n-                        Write_Line (\"(unexpected exception)\");\n-                        Write_Line (Exception_Information (X));\n-\n-                        if Is_Open (Dir) then\n-                           Close (Dir);\n-                        end if;\n-                  end;\n-\n-                  Make_Failed\n-                    (\"unable to change working directory to \"\"\",\n-                     Get_Name_String\n-                       (Project_Tree.Projects.Table\n-                          (Main_Project).Object_Directory),\n-                     \"\"\"\");\n-            end;\n+            Project_Object_Directory := No_Project;\n+            Change_To_Object_Directory (Main_Project);\n          end if;\n \n          --  Source file lookups should be cached for efficiency.\n@@ -4498,15 +4471,6 @@ package body Make is\n \n                begin\n                   if not Is_Absolute_Path (Exec_File_Name) then\n-                     for Index in Exec_File_Name'Range loop\n-                        if Exec_File_Name (Index) = Directory_Separator then\n-                           Make_Failed (\"relative executable (\"\"\",\n-                                        Exec_File_Name,\n-                                        \"\"\") with directory part not \" &\n-                                        \"allowed when using project files\");\n-                        end if;\n-                     end loop;\n-\n                      Get_Name_String\n                        (Project_Tree.Projects.Table\n                           (Main_Project).Exec_Directory);\n@@ -4743,17 +4707,9 @@ package body Make is\n \n             begin\n                if not Is_Absolute_Path (Exec_File_Name) then\n-                  for Index in Exec_File_Name'Range loop\n-                     if Exec_File_Name (Index) = Directory_Separator then\n-                        Make_Failed (\"relative executable (\"\"\",\n-                                           Exec_File_Name,\n-                                           \"\"\") with directory part not \" &\n-                                           \"allowed when using project files\");\n-                     end if;\n-                  end loop;\n \n                   Get_Name_String (Project_Tree.Projects.Table\n-                                           (Main_Project).Exec_Directory);\n+                                     (Main_Project).Exec_Directory);\n \n                   if\n                     Name_Buffer (Name_Len) /= Directory_Separator\n@@ -4768,8 +4724,9 @@ package body Make is\n \n                   Name_Len := Name_Len + Exec_File_Name'Length;\n                   Executable := Name_Find;\n-                  Non_Std_Executable := True;\n                end if;\n+\n+               Non_Std_Executable := True;\n             end;\n          end if;\n "}]}