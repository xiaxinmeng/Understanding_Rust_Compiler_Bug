{"sha": "e602bbfc30cd7d40509edaba120429dc4a92cbce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYwMmJiZmMzMGNkN2Q0MDUwOWVkYWJhMTIwNDI5ZGM0YTkyY2JjZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-04-25T17:40:58Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-04-25T17:40:58Z"}, "message": "PR tree-optimization/80497 - ICE at -O1 and above on valid code on x86_64-linux-gnu in tree_to_uhwi\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/80497\n\t* gimple-ssa-sprintf.c (get_int_range): Avoid assuming all integer\n\tconstants are representable in HOST_WIDE_INT.\n\t(parse_directive): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/80497\n\t* gcc.dg/tree-ssa/builtin-sprintf-warn-17.c: New test.\n\nFrom-SVN: r247262", "tree": {"sha": "46f475ef5106615483c9a5128dfd8f3f33fd2ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46f475ef5106615483c9a5128dfd8f3f33fd2ff2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e602bbfc30cd7d40509edaba120429dc4a92cbce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e602bbfc30cd7d40509edaba120429dc4a92cbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e602bbfc30cd7d40509edaba120429dc4a92cbce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e602bbfc30cd7d40509edaba120429dc4a92cbce/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e640712d5af13fec089a36c6f7fa089ffc2d062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e640712d5af13fec089a36c6f7fa089ffc2d062", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e640712d5af13fec089a36c6f7fa089ffc2d062"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "7c549a483cbe7ec5562be87b7502637509aba710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e602bbfc30cd7d40509edaba120429dc4a92cbce", "patch": "@@ -1,3 +1,10 @@\n+2017-04-25  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/80497\n+\t* gimple-ssa-sprintf.c (get_int_range): Avoid assuming all integer\n+\tconstants are representable in HOST_WIDE_INT.\n+\t(parse_directive): Ditto.\n+\n 2017-04-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR bootstrap/80486"}, {"sha": "d3771ddcc67b5eb77dfa61c169b32b1b88a332e7", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=e602bbfc30cd7d40509edaba120429dc4a92cbce", "patch": "@@ -948,7 +948,8 @@ get_int_range (tree arg, HOST_WIDE_INT *pmin, HOST_WIDE_INT *pmax,\n       *pmin = tree_to_shwi (TYPE_MIN_VALUE (type));\n       *pmax = tree_to_shwi (TYPE_MAX_VALUE (type));\n     }\n-  else if (TREE_CODE (arg) == INTEGER_CST)\n+  else if (TREE_CODE (arg) == INTEGER_CST\n+\t   && TYPE_PRECISION (TREE_TYPE (arg)) <= TYPE_PRECISION (type))\n     {\n       /* For a constant argument return its value adjusted as specified\n \t by NEGATIVE and NEGBOUND and return true to indicate that the\n@@ -2916,7 +2917,9 @@ parse_directive (pass_sprintf_length::call_info &info,\n       if (width != -1)\n \tdollar = width + info.argidx;\n       else if (star_width\n-\t       && TREE_CODE (star_width) == INTEGER_CST)\n+\t       && TREE_CODE (star_width) == INTEGER_CST\n+\t       && (TYPE_PRECISION (TREE_TYPE (star_width))\n+\t\t   <= TYPE_PRECISION (integer_type_node)))\n \tdollar = width + tree_to_shwi (star_width);\n \n       /* Bail when the numbered argument is out of range (it will"}, {"sha": "70b5682e1a3ad42b96b960e7c96bc5ac2724fecf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e602bbfc30cd7d40509edaba120429dc4a92cbce", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/80497\n+\t* gcc.dg/tree-ssa/builtin-sprintf-warn-17.c: New test.\n+\n 2017-04-25  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "27aa83983411d57cd067aae2552348b304869395", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-17.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e602bbfc30cd7d40509edaba120429dc4a92cbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-17.c?ref=e602bbfc30cd7d40509edaba120429dc4a92cbce", "patch": "@@ -0,0 +1,42 @@\n+/* PR tree-optimization/80497 - ICE at -O1 and above on valid code on\n+   x86_64-linux-gnu in \"tree_to_uhwi\"\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall -Wformat-overflow\" }\n+   { dg-require-effective-target int128 } */\n+\n+extern char buf[];\n+\n+const __int128_t sint128_max\n+  = (__int128_t)1 << (sizeof sint128_max * __CHAR_BIT__ - 2);\n+\n+void fn0 (void)\n+{\n+  __int128_t si128 = 0;\n+\n+  __builtin_sprintf (buf, \"%*i\", si128, 0);\n+\n+  __builtin_sprintf (buf, \"%.*i\", si128, 0);\n+\n+  __builtin_sprintf (buf, \"%i\", si128);\n+\n+  __builtin_sprintf (buf, \"%2$*1$i\", si128, 0);\n+\n+  __builtin_sprintf (buf, \"%2$.*1$i\", si128, 0);\n+}\n+\n+void fn1 (void)\n+{\n+  __int128_t si128 = sint128_max;\n+\n+  __builtin_sprintf (buf, \"%*i\", si128, 0);\n+\n+  __builtin_sprintf (buf, \"%.*i\", si128, 0);\n+\n+  __builtin_sprintf (buf, \"%i\", si128);\n+\n+  __builtin_sprintf (buf, \"%2$*1$i\", si128, 0);\n+\n+  __builtin_sprintf (buf, \"%2$.*1$i\", si128, 0);\n+}\n+\n+/* { dg-prune-output \"expects argument of type .int.\" } */"}]}