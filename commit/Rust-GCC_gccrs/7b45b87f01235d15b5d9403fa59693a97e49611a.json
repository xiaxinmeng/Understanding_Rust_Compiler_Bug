{"sha": "7b45b87f01235d15b5d9403fa59693a97e49611a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I0NWI4N2YwMTIzNWQxNWI1ZDk0MDNmYTU5NjkzYTk3ZTQ5NjExYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-10-23T18:43:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-23T18:43:11Z"}, "message": "sse.md (sseintprefix): Rename from gthrfirstp.\n\n\t* config/i386/sse.md (sseintprefix): Rename from gthrfirstp.\n\t(<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>): Delete expander.\n\t(<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>) Merge insn\n\tpattern from *avx2_maskload<ssemodesuffix><avxsizesuffix> and\n\t*avx_maskload<ssemodesuffix><avxsizesuffix> using V48_AVX mode\n\titerator.  Use sseintprefix mode attribute.\n\t(<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>): Delete expander.\n\t(<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>) Merge insn\n\tpattern from *avx2_maskstore<ssemodesuffix><avxsizesuffix> and\n\t*avx_maskstore<ssemodesuffix><avxsizesuffix> using V48_AVX mode\n\titerator.  Use sseintprefix mode attribute.\n\t(*avx2_gathersi<mode>) Use sseintprefix and ssemodesuffix mode\n\tattributes.\n\t(*avx2_gatherdi<mode>): Ditto.\n\t(*avx2_gatherdi<mode>256): Ditto.\n\t(VI48_AVX2): Remove mode iterator.\n\t(gthrlastfp): Remove mode attribute.\n\nFrom-SVN: r180344", "tree": {"sha": "e1b5993b2a29ed801d270d09ce0000aceb76281d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1b5993b2a29ed801d270d09ce0000aceb76281d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b45b87f01235d15b5d9403fa59693a97e49611a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b45b87f01235d15b5d9403fa59693a97e49611a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b45b87f01235d15b5d9403fa59693a97e49611a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b45b87f01235d15b5d9403fa59693a97e49611a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "263734e172ff1d250e27ff19347077cd847d94b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263734e172ff1d250e27ff19347077cd847d94b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/263734e172ff1d250e27ff19347077cd847d94b5"}], "stats": {"total": 119, "additions": 44, "deletions": 75}, "files": [{"sha": "038610281ebe9d0eac5f83b208e4483f203eb458", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45b87f01235d15b5d9403fa59693a97e49611a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45b87f01235d15b5d9403fa59693a97e49611a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b45b87f01235d15b5d9403fa59693a97e49611a", "patch": "@@ -1,3 +1,23 @@\n+2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (sseintprefix): Rename from gthrfirstp.\n+\t(<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>): Delete expander.\n+\t(<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>) Merge insn\n+\tpattern from *avx2_maskload<ssemodesuffix><avxsizesuffix> and\n+\t*avx_maskload<ssemodesuffix><avxsizesuffix> using V48_AVX mode\n+\titerator.  Use sseintprefix mode attribute.\n+\t(<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>): Delete expander.\n+\t(<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>) Merge insn\n+\tpattern from *avx2_maskstore<ssemodesuffix><avxsizesuffix> and\n+\t*avx_maskstore<ssemodesuffix><avxsizesuffix> using V48_AVX mode\n+\titerator.  Use sseintprefix mode attribute.\n+\t(*avx2_gathersi<mode>) Use sseintprefix and ssemodesuffix mode\n+\tattributes.\n+\t(*avx2_gatherdi<mode>): Ditto.\n+\t(*avx2_gatherdi<mode>256): Ditto.\n+\t(VI48_AVX2): Remove mode iterator.\n+\t(gthrlastfp): Remove mode attribute.\n+\n 2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50810\n@@ -40,7 +60,7 @@\n 2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/50788\n-\t* config/i386/sse.md (avx2_maskload<ssemodesuffix><avxsizesuffix>):\n+\t* config/i386/sse.md (<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>):\n \tRemove (match_dup 0).\n \t(*avx2_maskload<ssemodesuffix><avxsizesuffix>): New insn pattern.\n \t(*avx_maskload<ssemodesuffix><avxsizesuffix>): Ditto."}, {"sha": "dcb2d4ba110694952ebf6b6ee86af7234de49cbd", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 22, "deletions": 73, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45b87f01235d15b5d9403fa59693a97e49611a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45b87f01235d15b5d9403fa59693a97e49611a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=7b45b87f01235d15b5d9403fa59693a97e49611a", "patch": "@@ -125,9 +125,6 @@\n    (V8SI \"TARGET_AVX2\") V4SI\n    (V4DI \"TARGET_AVX2\") V2DI])\n \n-(define_mode_iterator VI48_AVX2\n-  [V8SI V4SI V4DI V2DI])\n-\n (define_mode_iterator VI4SD_AVX2\n   [V4SI V4DI])\n \n@@ -246,8 +243,7 @@\n    (V8SI \"V8SI\") (V4DI \"V4DI\")\n    (V4SI \"V4SI\") (V2DI \"V2DI\")\n    (V16HI \"V16HI\") (V8HI \"V8HI\")\n-   (V32QI \"V32QI\") (V16QI \"V16QI\")\n-  ])\n+   (V32QI \"V32QI\") (V16QI \"V16QI\")])\n \n ;; Mapping of vector modes to a vector mode of double size\n (define_mode_attr ssedoublevecmode\n@@ -277,6 +273,13 @@\n    (V8SF \"8\") (V4DF \"4\")\n    (V4SF \"4\") (V2DF \"2\")])\n \n+;; SSE prefix for integer vector modes\n+(define_mode_attr sseintprefix\n+  [(V2DI \"p\") (V2DF \"\")\n+   (V4DI \"p\") (V4DF \"\")\n+   (V4SI \"p\") (V4SF \"\")\n+   (V8SI \"p\") (V8SF \"\")])\n+\n ;; SSE scalar suffix for vector modes\n (define_mode_attr ssescalarmodesuffix\n   [(SF \"ss\") (DF \"sd\")\n@@ -319,16 +322,6 @@\n \t\t       (V4DI \"V4DI\") (V4DF \"V4DI\")\n \t\t       (V4SI \"V2DI\") (V4SF \"V2DI\")\n \t\t       (V8SI \"V4DI\") (V8SF \"V4DI\")])\n-(define_mode_attr gthrfirstp\n-\t\t      [(V2DI \"p\") (V2DF \"\")\n-\t\t       (V4DI \"p\") (V4DF \"\")\n-\t\t       (V4SI \"p\") (V4SF \"\")\n-\t\t       (V8SI \"p\") (V8SF \"\")])\n-(define_mode_attr gthrlastp\n-\t\t      [(V2DI \"q\") (V2DF \"pd\")\n-\t\t       (V4DI \"q\") (V4DF \"pd\")\n-\t\t       (V4SI \"d\") (V4SF \"ps\")\n-\t\t       (V8SI \"d\") (V8SF \"ps\")])\n \n (define_mode_iterator FMAMODE [SF DF V4SF V2DF V8SF V4DF])\n \n@@ -12275,76 +12268,32 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:V48_AVX2 0 \"register_operand\" \"\")\n+(define_insn \"<avx_avx2>_maskload<ssemodesuffix><avxsizesuffix>\"\n+  [(set (match_operand:V48_AVX2 0 \"register_operand\" \"=x\")\n \t(unspec:V48_AVX2\n-\t  [(match_operand:<sseintvecmode> 2 \"register_operand\" \"\")\n-\t   (match_operand:V48_AVX2 1 \"memory_operand\" \"\")]\n-\t  UNSPEC_MASKMOV))]\n-  \"TARGET_AVX\")\n-\n-(define_insn \"*avx2_maskload<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VI48_AVX2 0 \"register_operand\" \"=x\")\n-\t(unspec:VI48_AVX2\n-\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n-\t   (match_operand:VI48_AVX2 2 \"memory_operand\" \"m\")]\n-\t  UNSPEC_MASKMOV))]\n-  \"TARGET_AVX2\"\n-  \"vpmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<sseinsnmode>\")])\n-\n-(define_insn \"*avx_maskload<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VF 0 \"register_operand\" \"=x\")\n-\t(unspec:VF\n-\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n-\t   (match_operand:VF 2 \"memory_operand\" \"m\")]\n+\t  [(match_operand:<sseintvecmode> 2 \"register_operand\" \"x\")\n+\t   (match_operand:V48_AVX2 1 \"memory_operand\" \"m\")]\n \t  UNSPEC_MASKMOV))]\n   \"TARGET_AVX\"\n-  \"vmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_expand \"<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:V48_AVX2 0 \"memory_operand\" \"\")\n-\t(unspec:V48_AVX2\n-\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"\")\n-\t   (match_operand:V48_AVX2 2 \"register_operand\" \"\")\n-\t   (match_dup 0)]\n-\t  UNSPEC_MASKMOV))]\n-  \"TARGET_AVX\")\n-\n-(define_insn \"*avx2_maskstore<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VI48_AVX2 0 \"memory_operand\" \"=m\")\n-\t(unspec:VI48_AVX2\n-\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n-\t   (match_operand:VI48_AVX2 2 \"register_operand\" \"x\")\n-\t   (match_dup 0)]\n-\t  UNSPEC_MASKMOV))]\n-  \"TARGET_AVX2\"\n-  \"vpmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"v<sseintprefix>maskmov<ssemodesuffix>\\t{%1, %2, %0|%0, %2, %1}\"\n   [(set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"*avx_maskstore<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VF 0 \"memory_operand\" \"=m\")\n-\t(unspec:VF\n+(define_insn \"<avx_avx2>_maskstore<ssemodesuffix><avxsizesuffix>\"\n+  [(set (match_operand:V48_AVX2 0 \"memory_operand\" \"=m\")\n+\t(unspec:V48_AVX2\n \t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"x\")\n-\t   (match_operand:VF 2 \"register_operand\" \"x\")\n+\t   (match_operand:V48_AVX2 2 \"register_operand\" \"x\")\n \t   (match_dup 0)]\n \t  UNSPEC_MASKMOV))]\n   \"TARGET_AVX\"\n-  \"vmaskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"v<sseintprefix>maskmov<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn_and_split \"avx_<castmode><avxsizesuffix>_<castmode>\"\n   [(set (match_operand:AVX256MODE2P 0 \"nonimmediate_operand\" \"=x,m\")\n@@ -12810,7 +12759,7 @@\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:VEC_GATHER_MODE 1 \"=&x\"))]\n   \"TARGET_AVX2\"\n-  \"v<gthrfirstp>gatherd<gthrlastp>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n+  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -12840,7 +12789,7 @@\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:AVXMODE48P_DI 1 \"=&x\"))]\n   \"TARGET_AVX2\"\n-  \"v<gthrfirstp>gatherq<gthrlastp>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n+  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -12872,7 +12821,7 @@\n \t  UNSPEC_GATHER)) \n    (clobber (match_scratch:VI4F_128 1 \"=&x\"))]\n   \"TARGET_AVX2\"\n-  \"v<gthrfirstp>gatherq<gthrlastp>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n+  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])"}, {"sha": "0393eec3da9324119d357217b2a6bda57ea13e41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45b87f01235d15b5d9403fa59693a97e49611a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45b87f01235d15b5d9403fa59693a97e49611a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b45b87f01235d15b5d9403fa59693a97e49611a", "patch": "@@ -12,7 +12,7 @@\n 2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/50788\n-\t* testsuite/gcc.target/i386/pr50788.c: New test.\n+\t* gcc.target/i386/pr50788.c: New test.\n \n 2011-10-23  Ira Rosen  <ira.rosen@linaro.org>\n "}]}