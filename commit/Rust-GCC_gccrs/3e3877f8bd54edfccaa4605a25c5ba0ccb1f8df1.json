{"sha": "3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UzODc3ZjhiZDU0ZWRmY2NhYTQ2MDVhMjVjNWJhMGNjYjFmOGRmMQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-08-14T02:26:33Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-08-14T02:26:33Z"}, "message": "djgpp-stdint.h: New.\n\n* config/i386/djgpp-stdint.h: New.\n* config.gcc (djgpp): Use it.\n\nFrom-SVN: r150732", "tree": {"sha": "dc5a4654165f654d1b471028bbeaf120c33b298e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc5a4654165f654d1b471028bbeaf120c33b298e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/comments", "author": null, "committer": null, "parents": [{"sha": "2019698b6b80f6922acd6b60a49186d7b04c3571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2019698b6b80f6922acd6b60a49186d7b04c3571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2019698b6b80f6922acd6b60a49186d7b04c3571"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "6eb18899621b660190a25866acd377ae303b9472", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "patch": "@@ -1,3 +1,8 @@\n+2009-08-13  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/i386/djgpp-stdint.h: New.\n+\t* config.gcc (djgpp): Use it.\n+\n 2009-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_override_options): When flag_exceptions or"}, {"sha": "d354677468553cc11181f8575a6544822515ab0c", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "patch": "@@ -1172,6 +1172,7 @@ i[34567]86-pc-msdosdjgpp*)\n \textra_options=\"${extra_options} i386/djgpp.opt\"\n \tgnu_ld=yes\n \tgas=yes\n+\tuse_gcc_stdint=wrap\n \t;;\n i[34567]86-*-lynxos*)\n \txm_defines=POSIX"}, {"sha": "8fd3a25653d76592b95a710f3ff5dd68942b6696", "filename": "gcc/config/i386/djgpp-stdint.h", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/gcc%2Fconfig%2Fi386%2Fdjgpp-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1/gcc%2Fconfig%2Fi386%2Fdjgpp-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp-stdint.h?ref=3e3877f8bd54edfccaa4605a25c5ba0ccb1f8df1", "patch": "@@ -0,0 +1,62 @@\n+/* Definitions for <stdint.h> types on systems using DJGPP.\n+   Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#define SIG_ATOMIC_TYPE \"int\"\n+\n+/* Exact-width integer types */\n+\n+#define INT8_TYPE \"signed char\"\n+#define INT16_TYPE \"signed short int\"\n+#define INT32_TYPE \"signed long int\"\n+#define INT64_TYPE \"signed long long int\"\n+\n+#define UINT8_TYPE \"unsigned char\"\n+#define UINT16_TYPE \"short unsigned int\"\n+#define UINT32_TYPE \"long unsigned int\"\n+#define UINT64_TYPE \"long long unsigned int\"\n+\n+/* Minimum-width integer types */\n+\n+#define INT_LEAST8_TYPE \"signed char\"\n+#define INT_LEAST16_TYPE \"signed short int\"\n+#define INT_LEAST32_TYPE \"signed int\"\n+#define INT_LEAST64_TYPE \"signed long long int\"\n+\n+#define UINT_LEAST8_TYPE \"unsigned char\"\n+#define UINT_LEAST16_TYPE \"short unsigned int\"\n+#define UINT_LEAST32_TYPE \"unsigned int\"\n+#define UINT_LEAST64_TYPE \"long long unsigned int\"\n+\n+/* Fastest minimum-width integer types */\n+\n+#define INT_FAST8_TYPE \"signed char\"\n+#define INT_FAST16_TYPE \"signed int\"\n+#define INT_FAST32_TYPE \"signed int\"\n+#define INT_FAST64_TYPE \"long long signed int\"\n+\n+#define UINT_FAST8_TYPE \"unsigned char\"\n+#define UINT_FAST16_TYPE \"unsigned int\"\n+#define UINT_FAST32_TYPE \"unsigned int\"\n+#define UINT_FAST64_TYPE \"long long unsigned int\"\n+\n+/* Integer types capable of holding object pointers */\n+\n+#define INTPTR_TYPE \"long int\"\n+#define UINTPTR_TYPE \"long unsigned int\"\n+"}]}