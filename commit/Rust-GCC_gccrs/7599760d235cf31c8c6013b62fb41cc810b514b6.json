{"sha": "7599760d235cf31c8c6013b62fb41cc810b514b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU5OTc2MGQyMzVjZjMxYzhjNjAxM2I2MmZiNDFjYzgxMGI1MTRiNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-16T19:29:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-16T19:29:19Z"}, "message": "re PR c++/66536 (ICE in build_ctor_subob_ref, at cp/tree.c:2534)\n\n\tPR c++/66536\n\t* tree.c (replace_placeholders_r) [CONSTRUCTOR]: Handle type\n\tmismatch.\n\nFrom-SVN: r224534", "tree": {"sha": "88c3e7c999851944ff1fdca5df950053679d27cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c3e7c999851944ff1fdca5df950053679d27cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7599760d235cf31c8c6013b62fb41cc810b514b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7599760d235cf31c8c6013b62fb41cc810b514b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7599760d235cf31c8c6013b62fb41cc810b514b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7599760d235cf31c8c6013b62fb41cc810b514b6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ed4c0297fb2ece975c69d17e02eac8d8b62325b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed4c0297fb2ece975c69d17e02eac8d8b62325b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ed4c0297fb2ece975c69d17e02eac8d8b62325b"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "d2908c20a66c61e582656eae17867d04f859d2c0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7599760d235cf31c8c6013b62fb41cc810b514b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7599760d235cf31c8c6013b62fb41cc810b514b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7599760d235cf31c8c6013b62fb41cc810b514b6", "patch": "@@ -1,5 +1,9 @@\n 2015-06-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/66536\n+\t* tree.c (replace_placeholders_r) [CONSTRUCTOR]: Handle type\n+\tmismatch.\n+\n \tPR c++/58063\n \t* tree.c (bot_manip): Remap SAVE_EXPR.\n "}, {"sha": "e6442cd9a458320c95fefb06bbb8cdb5bca224b5", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7599760d235cf31c8c6013b62fb41cc810b514b6/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7599760d235cf31c8c6013b62fb41cc810b514b6/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=7599760d235cf31c8c6013b62fb41cc810b514b6", "patch": "@@ -2599,7 +2599,12 @@ replace_placeholders_r (tree* t, int* walk_subtrees, void* data_)\n \t    if (TREE_CODE (*valp) == CONSTRUCTOR\n \t\t&& AGGREGATE_TYPE_P (type))\n \t      {\n-\t\tsubob = build_ctor_subob_ref (ce->index, type, obj);\n+\t\t/* If we're looking at the initializer for OBJ, then build\n+\t\t   a sub-object reference.  If we're looking at an\n+\t\t   initializer for another object, just pass OBJ down.  */\n+\t\tif (same_type_ignoring_top_level_qualifiers_p\n+\t\t    (TREE_TYPE (*t), TREE_TYPE (obj)))\n+\t\t  subob = build_ctor_subob_ref (ce->index, type, obj);\n \t\tif (TREE_CODE (*valp) == TARGET_EXPR)\n \t\t  valp = &TARGET_EXPR_INITIAL (*valp);\n \t      }"}, {"sha": "e89aa7c2f24ea0832d08aed255be0febc64c8db1", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ30.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7599760d235cf31c8c6013b62fb41cc810b514b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7599760d235cf31c8c6013b62fb41cc810b514b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ30.C?ref=7599760d235cf31c8c6013b62fb41cc810b514b6", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/66536\n+// { dg-do compile { target c++14 } }\n+\n+template <typename> struct make_impl;\n+struct Tuple;\n+template <> struct make_impl<Tuple> {};\n+struct A {\n+  template <typename X> auto operator()(X) { return make_impl<Tuple>(); }\n+};\n+template <typename> A make;\n+template <typename _Tp, int> struct array { _Tp _M_elems; };\n+struct Tracked {\n+  Tracked(int);\n+};\n+struct B {\n+  Tracked tracker{0};\n+};\n+template <int> using ct_eq = B;\n+auto eq_arrays = make<Tuple>(array<ct_eq<0>, 0>{});"}]}