{"sha": "62d3f2615c6b22bf424ad17675d47b146d0dcfaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkM2YyNjE1YzZiMjJiZjQyNGFkMTc2NzVkNDdiMTQ2ZDBkY2ZhYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-03-01T09:20:12Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-03-01T09:20:12Z"}, "message": "S/390: Use enabled attribute overrides to disable\n alternatives.\n\nSo far whenever we wanted to disable an alternative we have used mode\nattributes emitting constraints matching an earlier alternative\nassuming that due to this the later alternative will never be chosen.\n\nWith this patch the `enabled' attribute, which so far is only set from\n`cpu_facility', is overridden to 0 to disable certain alternatives.\nThis comes handy when defining the substitutions later and while\nadding it anyway I've used it for the existing cases as well.\n\ngcc/ChangeLog:\n\n2016-03-01  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"op_type\", \"atype\", \"length\" attributes):\n\tRemove RRR type.  It doesn't really exist.\n\t(\"RRer\", \"f0\", \"v0\", \"vf\", \"vd\", \"op1\", \"Rf\"): Remove mode\n\tattributes.\n\t(\"BFP\", \"DFP\", \"nDSF\", \"nDFDI\"): Add mode attributes.\n\t(\"*cmp<mode>_ccs\", \"floatdi<mode>2\", \"add<mode>3\")\n\t(\"*add<mode>3_cc\", \"*add<mode>3_cconly\", \"sub<mode>3\")\n\t(\"*sub<mode>3_cc\", \"*sub<mode>3_cconly\", \"mul<mode>3\")\n\t(\"fma<mode>4\", \"fms<mode>4\", \"div<mode>3\", \"*neg<mode>2\")\n\t(\"*abs<mode>2\", \"*negabs<mode>2\", \"sqrt<mode>2\"): Override\n\t`enabled' attribute.\n\nFrom-SVN: r233842", "tree": {"sha": "1923e2830da769019c749d3f6f1092c8efc64d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1923e2830da769019c749d3f6f1092c8efc64d42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62d3f2615c6b22bf424ad17675d47b146d0dcfaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d3f2615c6b22bf424ad17675d47b146d0dcfaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d3f2615c6b22bf424ad17675d47b146d0dcfaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d3f2615c6b22bf424ad17675d47b146d0dcfaa/comments", "author": null, "committer": null, "parents": [{"sha": "772040f7967768f060d5a6c2e528ace2f1439ef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772040f7967768f060d5a6c2e528ace2f1439ef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/772040f7967768f060d5a6c2e528ace2f1439ef3"}], "stats": {"total": 229, "additions": 125, "deletions": 104}, "files": [{"sha": "46e9f23f4172b3e19a2c8b1a4c56282af2a3e618", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d3f2615c6b22bf424ad17675d47b146d0dcfaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d3f2615c6b22bf424ad17675d47b146d0dcfaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62d3f2615c6b22bf424ad17675d47b146d0dcfaa", "patch": "@@ -1,3 +1,17 @@\n+2016-03-01  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"op_type\", \"atype\", \"length\" attributes):\n+\tRemove RRR type.  It doesn't really exist.\n+\t(\"RRer\", \"f0\", \"v0\", \"vf\", \"vd\", \"op1\", \"Rf\"): Remove mode\n+\tattributes.\n+\t(\"BFP\", \"DFP\", \"nDSF\", \"nDFDI\"): Add mode attributes.\n+\t(\"*cmp<mode>_ccs\", \"floatdi<mode>2\", \"add<mode>3\")\n+\t(\"*add<mode>3_cc\", \"*add<mode>3_cconly\", \"sub<mode>3\")\n+\t(\"*sub<mode>3_cc\", \"*sub<mode>3_cconly\", \"mul<mode>3\")\n+\t(\"fma<mode>4\", \"fms<mode>4\", \"div<mode>3\", \"*neg<mode>2\")\n+\t(\"*abs<mode>2\", \"*negabs<mode>2\", \"sqrt<mode>2\"): Override\n+\t`enabled' attribute.\n+\n 2016-03-01  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gensupport.c (process_substs_on_one_elem): Split loop to"}, {"sha": "65b6ce9085ca74fab4382fc417a7fad03976ce55", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 111, "deletions": 104, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d3f2615c6b22bf424ad17675d47b146d0dcfaa/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d3f2615c6b22bf424ad17675d47b146d0dcfaa/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=62d3f2615c6b22bf424ad17675d47b146d0dcfaa", "patch": "@@ -366,7 +366,7 @@\n ;; Used to determine defaults for length and other attribute values.\n \n (define_attr \"op_type\"\n-  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE,RXY,RSY,SIY,RRF,RRR,SIL,RRS,RIS,VRI,VRR,VRS,VRV,VRX\"\n+  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE,RXY,RSY,SIY,RRF,SIL,RRS,RIS,VRI,VRR,VRS,VRV,VRX\"\n   (const_string \"NN\"))\n \n ;; Instruction type attribute used for scheduling.\n@@ -393,7 +393,7 @@\n ;;   reg: Instruction does not use the agen unit\n \n (define_attr \"atype\" \"agen,reg\"\n-  (if_then_else (eq_attr \"op_type\" \"E,RR,RI,RRE,RSI,RIL,RIE,RRF,RRR\")\n+  (if_then_else (eq_attr \"op_type\" \"E,RR,RI,RRE,RSI,RIL,RIE,RRF\")\n \t\t(const_string \"reg\")\n \t\t(const_string \"agen\")))\n \n@@ -434,8 +434,8 @@\n ;; Length in bytes.\n \n (define_attr \"length\" \"\"\n-  (cond [(eq_attr \"op_type\" \"E,RR\")\t\t              (const_int 2)\n-         (eq_attr \"op_type\" \"RX,RI,RRE,RS,RSI,S,SI,RRF,RRR\")  (const_int 4)]\n+  (cond [(eq_attr \"op_type\" \"E,RR\")\t\t          (const_int 2)\n+         (eq_attr \"op_type\" \"RX,RI,RRE,RS,RSI,S,SI,RRF\")  (const_int 4)]\n     (const_int 6)))\n \n \n@@ -618,27 +618,14 @@\n ;; fp register operands.  The following attributes allow to merge the bfp and\n ;; dfp variants in a single insn definition.\n \n-;; This attribute is used to set op_type accordingly.\n-(define_mode_attr RRer [(TF \"RRE\") (DF \"RRE\") (SF \"RRE\") (TD \"RRR\")\n-                        (DD \"RRR\") (SD \"RRR\")])\n-\n-;; This attribute is used in the operand constraint list in order to have the\n-;; first and the second operand match for bfp modes.\n-(define_mode_attr f0 [(TF \"0\") (DF \"0\") (SF \"0\") (TD \"f\") (DD \"f\") (DD \"f\")])\n-\n-;; This attribute is used to merge the scalar vector instructions into\n-;; the FP patterns.  For non-supported modes (all but DF) it expands\n-;; to constraints which are supposed to be matched by an earlier\n-;; variant.\n-(define_mode_attr v0      [(TF \"0\") (DF \"v\") (SF \"0\") (TD \"0\") (DD \"0\") (DD \"0\") (TI \"0\") (DI \"v\") (SI \"0\")])\n-(define_mode_attr vf      [(TF \"f\") (DF \"v\") (SF \"f\") (TD \"f\") (DD \"f\") (DD \"f\") (TI \"f\") (DI \"v\") (SI \"f\")])\n-(define_mode_attr vd      [(TF \"d\") (DF \"v\") (SF \"d\") (TD \"d\") (DD \"d\") (DD \"d\") (TI \"d\") (DI \"v\") (SI \"d\")])\n-\n-;; This attribute is used in the operand list of the instruction to have an\n-;; additional operand for the dfp instructions.\n-(define_mode_attr op1 [(TF \"\") (DF \"\") (SF \"\")\n-                       (TD \"%1,\") (DD \"%1,\") (SD \"%1,\")])\n-\n+;; These mode attributes are supposed to be used in the `enabled' insn\n+;; attribute to disable certain alternatives for certain modes.\n+(define_mode_attr nBFP [(TF \"0\") (DF \"0\") (SF \"0\") (TD \"*\") (DD \"*\") (DD \"*\")])\n+(define_mode_attr nDFP [(TF \"*\") (DF \"*\") (SF \"*\") (TD \"0\") (DD \"0\") (DD \"0\")])\n+(define_mode_attr DSF [(TF \"0\") (DF \"*\") (SF \"*\") (TD \"0\") (DD \"0\") (SD \"0\")])\n+(define_mode_attr DFDI [(TF \"0\") (DF \"*\") (SF \"0\")\n+\t\t\t(TD \"0\") (DD \"0\") (DD \"0\")\n+\t\t\t(TI \"0\") (DI \"*\") (SI \"0\")])\n \n ;; This attribute is used in the operand constraint list\n ;; for instructions dealing with the sign bit of 32 or 64bit fp values.\n@@ -648,10 +635,6 @@\n ;; target operand uses the same fp register.\n (define_mode_attr fT0 [(TF \"0\") (DF \"f\") (SF \"f\")])\n \n-;; In FP templates, \"<Rf>\" will expand to \"f\" in TFmode and \"R\" otherwise.\n-;; This is used to disable the memory alternative in TFmode patterns.\n-(define_mode_attr Rf [(TF \"f\") (DF \"R\") (SF \"R\") (TD \"f\") (DD \"f\") (SD \"f\")])\n-\n ;; This attribute adds b for bfp instructions and t for dfp instructions and is used\n ;; within instruction mnemonics.\n (define_mode_attr bt [(TF \"b\") (DF \"b\") (SF \"b\") (TD \"t\") (DD \"t\") (SD \"t\")])\n@@ -1260,13 +1243,14 @@\n (define_insn \"*cmp<mode>_ccs\"\n   [(set (reg CC_REGNUM)\n         (compare (match_operand:FP 0 \"register_operand\" \"f,f\")\n-                 (match_operand:FP 1 \"general_operand\"  \"f,<Rf>\")))]\n+                 (match_operand:FP 1 \"general_operand\"  \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT\"\n   \"@\n    c<xde><bt>r\\t%0,%1\n    c<xde>b\\t%0,%1\"\n    [(set_attr \"op_type\" \"RRE,RXE\")\n-    (set_attr \"type\"  \"fsimp<mode>\")])\n+    (set_attr \"type\"  \"fsimp<mode>\")\n+    (set_attr \"enabled\" \"*,<DSF>\")])\n \n ; wfcedbs, wfchdbs, wfchedbs\n (define_insn \"*vec_cmp<insn_cmp>df_cconly\"\n@@ -4731,15 +4715,16 @@\n \n ; cxgbr, cdgbr, cegbr, cxgtr, cdgtr\n (define_insn \"floatdi<mode>2\"\n-  [(set (match_operand:FP           0 \"register_operand\" \"=f,<vf>\")\n-        (float:FP (match_operand:DI 1 \"register_operand\"  \"d,<vd>\")))]\n+  [(set (match_operand:FP           0 \"register_operand\" \"=f,v\")\n+        (float:FP (match_operand:DI 1 \"register_operand\"  \"d,v\")))]\n   \"TARGET_ZARCH && TARGET_HARD_FLOAT\"\n   \"@\n    c<xde>g<bt>r\\t%0,%1\n    wcdgb\\t%v0,%v1,0,0\"\n   [(set_attr \"op_type\"      \"RRE,VRR\")\n    (set_attr \"type\"         \"itof<mode>\" )\n-   (set_attr \"cpu_facility\" \"*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,vec\")\n+   (set_attr \"enabled\"      \"*,<DFDI>\")])\n \n ; cxfbr, cdfbr, cefbr\n (define_insn \"floatsi<mode>2\"\n@@ -5498,47 +5483,53 @@\n ; axbr, adbr, aebr, axb, adb, aeb, adtr, axtr\n ; FIXME: wfadb does not clobber cc\n (define_insn \"add<mode>3\"\n-  [(set (match_operand:FP 0 \"register_operand\"                 \"=f,   f,<vf>\")\n-        (plus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%<f0>,   0,<v0>\")\n-\t\t (match_operand:FP 2 \"general_operand\"          \"f,<Rf>,<vf>\")))\n+  [(set (match_operand:FP 0 \"register_operand\"              \"=f,f,f,v\")\n+        (plus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%f,0,0,v\")\n+\t\t (match_operand:FP 2 \"general_operand\"       \"f,f,R,v\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   a<xde><bt>r\\t%0,<op1>%2\n+   a<xde>tr\\t%0,%1,%2\n+   a<xde>br\\t%0,%2\n    a<xde>b\\t%0,%2\n    wfadb\\t%v0,%v1,%v2\"\n-  [(set_attr \"op_type\"      \"<RRer>,RXE,VRR\")\n+  [(set_attr \"op_type\"      \"RRF,RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fsimp<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,*,vec\")\n+   (set_attr \"enabled\"      \"<nBFP>,<nDFP>,<DSF>,<DFDI>\")])\n \n ; axbr, adbr, aebr, axb, adb, aeb, adtr, axtr\n (define_insn \"*add<mode>3_cc\"\n   [(set (reg CC_REGNUM)\n-\t(compare (plus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%<f0>,0\")\n-\t\t\t  (match_operand:FP 2 \"general_operand\"      \" f,<Rf>\"))\n+\t(compare (plus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%f,0,0\")\n+\t\t\t  (match_operand:FP 2 \"general_operand\"       \"f,f,R\"))\n \t\t (match_operand:FP 3 \"const0_operand\" \"\")))\n-   (set (match_operand:FP 0 \"register_operand\" \"=f,f\")\n+   (set (match_operand:FP 0 \"register_operand\" \"=f,f,f\")\n \t(plus:FP (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT\"\n   \"@\n-   a<xde><bt>r\\t%0,<op1>%2\n+   a<xde>tr\\t%0,%1,%2\n+   a<xde>br\\t%0,%2\n    a<xde>b\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"<RRer>,RXE\")\n-   (set_attr \"type\"     \"fsimp<mode>\")])\n+  [(set_attr \"op_type\"  \"RRF,RRE,RXE\")\n+   (set_attr \"type\"     \"fsimp<mode>\")\n+   (set_attr \"enabled\"  \"<nBFP>,<nDFP>,<DSF>\")])\n \n ; axbr, adbr, aebr, axb, adb, aeb, adtr, axtr\n (define_insn \"*add<mode>3_cconly\"\n   [(set (reg CC_REGNUM)\n-\t(compare (plus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%<f0>,0\")\n-\t\t\t   (match_operand:FP 2 \"general_operand\"      \" f,<Rf>\"))\n+\t(compare (plus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%f,0,0\")\n+\t\t\t  (match_operand:FP 2 \"general_operand\"       \"f,f,R\"))\n \t\t (match_operand:FP 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FP 0 \"=f,f\"))]\n+   (clobber (match_scratch:FP 0 \"=f,f,f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT\"\n   \"@\n-   a<xde><bt>r\\t%0,<op1>%2\n+   a<xde>tr\\t%0,%1,%2\n+   a<xde>br\\t%0,%2\n    a<xde>b\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"<RRer>,RXE\")\n-   (set_attr \"type\"     \"fsimp<mode>\")])\n+  [(set_attr \"op_type\"  \"RRF,RRE,RXE\")\n+   (set_attr \"type\"     \"fsimp<mode>\")\n+   (set_attr \"enabled\"  \"<nBFP>,<nDFP>,<DSF>\")])\n \n ;\n ; Pointer add instruction patterns\n@@ -5922,47 +5913,53 @@\n \n ; sxbr, sdbr, sebr, sdb, seb, sxtr, sdtr\n (define_insn \"sub<mode>3\"\n-  [(set (match_operand:FP           0 \"register_operand\"   \"=f,   f,<vf>\")\n-        (minus:FP (match_operand:FP 1 \"register_operand\" \"<f0>,   0,<v0>\")\n-                  (match_operand:FP 2 \"general_operand\"     \"f,<Rf>,<vf>\")))\n+  [(set (match_operand:FP           0 \"register_operand\" \"=f,f,f,v\")\n+        (minus:FP (match_operand:FP 1 \"register_operand\"  \"f,0,0,v\")\n+                  (match_operand:FP 2 \"general_operand\"   \"f,f,R,v\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   s<xde><bt>r\\t%0,<op1>%2\n+   s<xde>tr\\t%0,%1,%2\n+   s<xde>br\\t%0,%2\n    s<xde>b\\t%0,%2\n    wfsdb\\t%v0,%v1,%v2\"\n-  [(set_attr \"op_type\"      \"<RRer>,RXE,VRR\")\n+  [(set_attr \"op_type\"      \"RRF,RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fsimp<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,*,vec\")\n+   (set_attr \"enabled\"      \"<nBFP>,<nDFP>,<DSF>,<DFDI>\")])\n \n ; sxbr, sdbr, sebr, sdb, seb, sxtr, sdtr\n (define_insn \"*sub<mode>3_cc\"\n   [(set (reg CC_REGNUM)\n-\t(compare (minus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"<f0>,0\")\n-                           (match_operand:FP 2 \"general_operand\"      \"f,<Rf>\"))\n+\t(compare (minus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"f,0,0\")\n+                           (match_operand:FP 2 \"general_operand\"      \"f,f,R\"))\n \t\t (match_operand:FP 3 \"const0_operand\" \"\")))\n-   (set (match_operand:FP 0 \"register_operand\" \"=f,f\")\n+   (set (match_operand:FP 0 \"register_operand\" \"=f,f,f\")\n \t(minus:FP (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT\"\n   \"@\n-   s<xde><bt>r\\t%0,<op1>%2\n+   s<xde>tr\\t%0,%1,%2\n+   s<xde>br\\t%0,%2\n    s<xde>b\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"<RRer>,RXE\")\n-   (set_attr \"type\"     \"fsimp<mode>\")])\n+  [(set_attr \"op_type\"  \"RRF,RRE,RXE\")\n+   (set_attr \"type\"     \"fsimp<mode>\")\n+   (set_attr \"enabled\"  \"<nBFP>,<nDFP>,<DSF>\")])\n \n ; sxbr, sdbr, sebr, sdb, seb, sxtr, sdtr\n (define_insn \"*sub<mode>3_cconly\"\n   [(set (reg CC_REGNUM)\n-\t(compare (minus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"<f0>,0\")\n-\t\t\t   (match_operand:FP 2 \"general_operand\"      \"f,<Rf>\"))\n+\t(compare (minus:FP (match_operand:FP 1 \"nonimmediate_operand\" \"f,0,0\")\n+\t\t\t   (match_operand:FP 2 \"general_operand\"      \"f,f,R\"))\n \t\t (match_operand:FP 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:FP 0 \"=f,f\"))]\n+   (clobber (match_scratch:FP 0 \"=f,f,f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT\"\n   \"@\n-   s<xde><bt>r\\t%0,<op1>%2\n+   s<xde>tr\\t%0,%1,%2\n+   s<xde>br\\t%0,%2\n    s<xde>b\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"<RRer>,RXE\")\n-   (set_attr \"type\"     \"fsimp<mode>\")])\n+  [(set_attr \"op_type\"  \"RRF,RRE,RXE\")\n+   (set_attr \"type\"     \"fsimp<mode>\")\n+   (set_attr \"enabled\"  \"<nBFP>,<nDFP>,<DSF>\")])\n \n \n ;;\n@@ -6344,47 +6341,51 @@\n \n ; mxbr, mdbr, meebr, mxb, mxb, meeb, mdtr, mxtr\n (define_insn \"mul<mode>3\"\n-  [(set (match_operand:FP          0 \"register_operand\"        \"=f,   f,<vf>\")\n-        (mult:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%<f0>,   0,<v0>\")\n-                 (match_operand:FP 2 \"general_operand\"          \"f,<Rf>,<vf>\")))]\n+  [(set (match_operand:FP          0 \"register_operand\"     \"=f,f,f,v\")\n+        (mult:FP (match_operand:FP 1 \"nonimmediate_operand\" \"%f,0,0,v\")\n+                 (match_operand:FP 2 \"general_operand\"       \"f,f,R,v\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   m<xdee><bt>r\\t%0,<op1>%2\n+   m<xdee>tr\\t%0,%1,%2\n+   m<xdee>br\\t%0,%2\n    m<xdee>b\\t%0,%2\n    wfmdb\\t%v0,%v1,%v2\"\n-  [(set_attr \"op_type\"      \"<RRer>,RXE,VRR\")\n+  [(set_attr \"op_type\"      \"RRF,RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fmul<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,*,vec\")\n+   (set_attr \"enabled\"      \"<nBFP>,<nDFP>,<DSF>,<DFDI>\")])\n \n ; madbr, maebr, maxb, madb, maeb\n (define_insn \"fma<mode>4\"\n-  [(set (match_operand:DSF          0 \"register_operand\"     \"=f,f,<vf>\")\n-\t(fma:DSF (match_operand:DSF 1 \"nonimmediate_operand\" \"%f,f,<vf>\")\n-\t\t (match_operand:DSF 2 \"nonimmediate_operand\"  \"f,R,<vf>\")\n-\t\t (match_operand:DSF 3 \"register_operand\"      \"0,0,<v0>\")))]\n+  [(set (match_operand:DSF          0 \"register_operand\"     \"=f,f,v\")\n+\t(fma:DSF (match_operand:DSF 1 \"nonimmediate_operand\" \"%f,f,v\")\n+\t\t (match_operand:DSF 2 \"nonimmediate_operand\"  \"f,R,v\")\n+\t\t (match_operand:DSF 3 \"register_operand\"      \"0,0,v\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n    ma<xde>br\\t%0,%1,%2\n    ma<xde>b\\t%0,%1,%2\n    wfmadb\\t%v0,%v1,%v2,%v3\"\n   [(set_attr \"op_type\"      \"RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fmadd<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,vec\")\n+   (set_attr \"enabled\"      \"*,*,<DFDI>\")])\n \n ; msxbr, msdbr, msebr, msxb, msdb, mseb\n (define_insn \"fms<mode>4\"\n-  [(set (match_operand:DSF                   0 \"register_operand\"     \"=f,f,<vf>\")\n-\t(fma:DSF (match_operand:DSF          1 \"nonimmediate_operand\" \"%f,f,<vf>\")\n-\t\t (match_operand:DSF          2 \"nonimmediate_operand\"  \"f,R,<vf>\")\n-\t\t (neg:DSF (match_operand:DSF 3 \"register_operand\"      \"0,0,<v0>\"))))]\n+  [(set (match_operand:DSF                   0 \"register_operand\"     \"=f,f,v\")\n+\t(fma:DSF (match_operand:DSF          1 \"nonimmediate_operand\" \"%f,f,v\")\n+\t\t (match_operand:DSF          2 \"nonimmediate_operand\"  \"f,R,v\")\n+\t\t (neg:DSF (match_operand:DSF 3 \"register_operand\"      \"0,0,v\"))))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n    ms<xde>br\\t%0,%1,%2\n    ms<xde>b\\t%0,%1,%2\n    wfmsdb\\t%v0,%v1,%v2,%v3\"\n   [(set_attr \"op_type\"      \"RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fmadd<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,vec\")\n+   (set_attr \"enabled\"      \"*,*,<DFDI>\")])\n \n ;;\n ;;- Divide and modulo instructions.\n@@ -6810,17 +6811,19 @@\n \n ; dxbr, ddbr, debr, dxb, ddb, deb, ddtr, dxtr\n (define_insn \"div<mode>3\"\n-  [(set (match_operand:FP         0 \"register_operand\"   \"=f,   f,<vf>\")\n-        (div:FP (match_operand:FP 1 \"register_operand\" \"<f0>,   0,<v0>\")\n-\t\t(match_operand:FP 2 \"general_operand\"     \"f,<Rf>,<vf>\")))]\n+  [(set (match_operand:FP         0 \"register_operand\" \"=f,f,f,v\")\n+        (div:FP (match_operand:FP 1 \"register_operand\"  \"f,0,0,v\")\n+\t\t(match_operand:FP 2 \"general_operand\"   \"f,f,R,v\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   d<xde><bt>r\\t%0,<op1>%2\n+   d<xde>tr\\t%0,%1,%2\n+   d<xde>br\\t%0,%2\n    d<xde>b\\t%0,%2\n    wfddb\\t%v0,%v1,%v2\"\n-  [(set_attr \"op_type\"      \"<RRer>,RXE,VRR\")\n+  [(set_attr \"op_type\"      \"RRF,RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fdiv<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,*,vec\")\n+   (set_attr \"enabled\"      \"<nBFP>,<nDFP>,<DSF>,<DFDI>\")])\n \n \n ;;\n@@ -8031,16 +8034,17 @@\n ; lcxbr, lcdbr, lcebr\n ; FIXME: wflcdb does not clobber cc\n (define_insn \"*neg<mode>2\"\n-  [(set (match_operand:BFP          0 \"register_operand\" \"=f,<vf>\")\n-        (neg:BFP (match_operand:BFP 1 \"register_operand\"  \"f,<vf>\")))\n+  [(set (match_operand:BFP          0 \"register_operand\" \"=f,v\")\n+        (neg:BFP (match_operand:BFP 1 \"register_operand\"  \"f,v\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n    lc<xde>br\\t%0,%1\n    wflcdb\\t%0,%1\"\n   [(set_attr \"op_type\"      \"RRE,VRR\")\n    (set_attr \"cpu_facility\" \"*,vec\")\n-   (set_attr \"type\"         \"fsimp<mode>,*\")])\n+   (set_attr \"type\"         \"fsimp<mode>,*\")\n+   (set_attr \"enabled\"      \"*,<DFDI>\")])\n \n \n ;;\n@@ -8153,16 +8157,17 @@\n ; lpxbr, lpdbr, lpebr\n ; FIXME: wflpdb does not clobber cc\n (define_insn \"*abs<mode>2\"\n-  [(set (match_operand:BFP          0 \"register_operand\" \"=f,<vf>\")\n-        (abs:BFP (match_operand:BFP 1 \"register_operand\"  \"f,<vf>\")))\n+  [(set (match_operand:BFP          0 \"register_operand\" \"=f,v\")\n+        (abs:BFP (match_operand:BFP 1 \"register_operand\"  \"f,v\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n     lp<xde>br\\t%0,%1\n     wflpdb\\t%0,%1\"\n   [(set_attr \"op_type\"      \"RRE,VRR\")\n    (set_attr \"cpu_facility\" \"*,vec\")\n-   (set_attr \"type\"         \"fsimp<mode>,*\")])\n+   (set_attr \"type\"         \"fsimp<mode>,*\")\n+   (set_attr \"enabled\"      \"*,<DFDI>\")])\n \n \n ;;\n@@ -8268,16 +8273,17 @@\n ; lnxbr, lndbr, lnebr\n ; FIXME: wflndb does not clobber cc\n (define_insn \"*negabs<mode>2\"\n-  [(set (match_operand:BFP                   0 \"register_operand\" \"=f,<vf>\")\n-        (neg:BFP (abs:BFP (match_operand:BFP 1 \"register_operand\"  \"f,<vf>\"))))\n+  [(set (match_operand:BFP                   0 \"register_operand\" \"=f,v\")\n+        (neg:BFP (abs:BFP (match_operand:BFP 1 \"register_operand\"  \"f,v\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n    ln<xde>br\\t%0,%1\n    wflndb\\t%0,%1\"\n   [(set_attr \"op_type\"      \"RRE,VRR\")\n    (set_attr \"cpu_facility\" \"*,vec\")\n-   (set_attr \"type\"         \"fsimp<mode>,*\")])\n+   (set_attr \"type\"         \"fsimp<mode>,*\")\n+   (set_attr \"enabled\"      \"*,<DFDI>\")])\n \n ;;\n ;;- Square root instructions.\n@@ -8289,16 +8295,17 @@\n \n ; sqxbr, sqdbr, sqebr, sqdb, sqeb\n (define_insn \"sqrt<mode>2\"\n-  [(set (match_operand:BFP           0 \"register_operand\" \"=f,   f,<vf>\")\n-\t(sqrt:BFP (match_operand:BFP 1 \"general_operand\"   \"f,<Rf>,<vf>\")))]\n+  [(set (match_operand:BFP           0 \"register_operand\" \"=f,f,v\")\n+\t(sqrt:BFP (match_operand:BFP 1 \"general_operand\"   \"f,R,v\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n    sq<xde>br\\t%0,%1\n    sq<xde>b\\t%0,%1\n    wfsqdb\\t%v0,%v1\"\n   [(set_attr \"op_type\"      \"RRE,RXE,VRR\")\n    (set_attr \"type\"         \"fsqrt<mode>\")\n-   (set_attr \"cpu_facility\" \"*,*,vec\")])\n+   (set_attr \"cpu_facility\" \"*,*,vec\")\n+   (set_attr \"enabled\"      \"*,<DSF>,<DFDI>\")])\n \n \n ;;"}]}