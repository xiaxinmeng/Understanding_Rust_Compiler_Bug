{"sha": "ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY2ZTFhMmYyNmZiMTUyMTg3NTA4Y2MzMTAyYmMxMGZiN2I3MWIyMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-19T04:36:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-19T04:36:44Z"}, "message": "h8300.c (general_operand_src): Always check MODE.\n\n\t* config/h8300/h8300.c (general_operand_src): Always check\n\tMODE.\n\t(general_operand_dst): Likewise.\n\t* gcc.c-torture/execute/20030218-1.c: New.\n\nFrom-SVN: r63091", "tree": {"sha": "2820bc6f83bffee737ba2f7979ce799607133dd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2820bc6f83bffee737ba2f7979ce799607133dd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/comments", "author": null, "committer": null, "parents": [{"sha": "2104fa743d15fa8865fe3f406795807167866be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2104fa743d15fa8865fe3f406795807167866be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2104fa743d15fa8865fe3f406795807167866be2"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "ae5510e82a6c6b9c4b7fc2a37a8f7f661128f210", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "patch": "@@ -1,3 +1,9 @@\n+2003-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (general_operand_src): Always check\n+\tMODE.\n+\t(general_operand_dst): Likewise.\n+\n 2003-02-18  Roger Sayle  <roger@eyesopen.com>\n \n \t* convert.c (convert_to_real): Also optimize (float)log(x) into"}, {"sha": "e8de91dd08e1a4993ac561b727b11daaaee8bf93", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "patch": "@@ -723,7 +723,9 @@ general_operand_src (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n-  if (GET_CODE (op) == MEM && GET_CODE (XEXP (op, 0)) == POST_INC)\n+  if (GET_MODE (op) == mode\n+      && GET_CODE (op) == MEM\n+      && GET_CODE (XEXP (op, 0)) == POST_INC)\n     return 1;\n   return general_operand (op, mode);\n }\n@@ -736,7 +738,9 @@ general_operand_dst (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n-  if (GET_CODE (op) == MEM && GET_CODE (XEXP (op, 0)) == PRE_DEC)\n+  if (GET_MODE (op) == mode\n+      && GET_CODE (op) == MEM\n+      && GET_CODE (XEXP (op, 0)) == PRE_DEC)\n     return 1;\n   return general_operand (op, mode);\n }"}, {"sha": "9d41b1af62a010abbc9382693b6114f31fff6aa5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "patch": "@@ -1,3 +1,7 @@\n+2003-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* gcc.c-torture/execute/20030218-1.c: New.\n+\n 2003-02-18  Aldy Hernandez  <aldyh@redhat.com>\n \n         * gcc.dg/20030218-1.c: New."}, {"sha": "8dde79451feb519cf1c9391ab8c8dbb73c462a42", "filename": "gcc/testsuite/gcc.c-torture/execute/20030218-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff6e1a2f26fb152187508cc3102bc10fb7b71b23/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030218-1.c?ref=ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "patch": "@@ -0,0 +1,25 @@\n+/*  On H8, the predicate general_operand_src(op,mode) used to ignore\n+    mode when op is a (mem (post_inc ...)).  As a result, the pattern\n+    for extendhisi2 was recognized as extendqisi2.  */\n+\n+extern void abort ();\n+extern void exit (int);\n+\n+short *q;\n+\n+long\n+foo (short *p)\n+{\n+  long b = *p;\n+  q = p + 1;\n+  return b;\n+}\n+\n+int\n+main ()\n+{\n+  short a = 0xff00;\n+  if (foo (&a) != (long) (short) 0xff00)\n+    abort ();\n+  exit (0);\n+}"}]}