{"sha": "1d22a2c1640bb948e7db64d9908d920faf2993ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyMmEyYzE2NDBiYjk0OGU3ZGI2NGQ5OTA4ZDkyMGZhZjI5OTNmZg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-06-17T20:20:21Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-06-17T20:20:21Z"}, "message": "cse.c (cse_basic_block): Don't include NOTE insns in the count that is used to decide whether or not it...\n\n\t* cse.c (cse_basic_block): Don't include NOTE insns in the count\n\tthat is used to decide whether or not it is time to erase the\n\tequivalence table.\n\nFrom-SVN: r20548", "tree": {"sha": "a62242f940ad1226ecbce193b9add4fdb4308b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a62242f940ad1226ecbce193b9add4fdb4308b10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d22a2c1640bb948e7db64d9908d920faf2993ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d22a2c1640bb948e7db64d9908d920faf2993ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d22a2c1640bb948e7db64d9908d920faf2993ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d22a2c1640bb948e7db64d9908d920faf2993ff/comments", "author": null, "committer": null, "parents": [{"sha": "316d4b547e6de0d43de81011508fe23aa009b38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316d4b547e6de0d43de81011508fe23aa009b38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316d4b547e6de0d43de81011508fe23aa009b38a"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "d68654bad5bbb31abb3e8b03a83e8a32a5d14f01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d22a2c1640bb948e7db64d9908d920faf2993ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d22a2c1640bb948e7db64d9908d920faf2993ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d22a2c1640bb948e7db64d9908d920faf2993ff", "patch": "@@ -1,3 +1,9 @@\n+Wed Jun 17 20:20:48 1998  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* cse.c (cse_basic_block): Don't include NOTE insns in the count\n+\tthat is used to decide whether or not it is time to erase the\n+\tequivalence table.\n+\n Wed Jun 17 18:30:43 1998 Franz Sirl <Franz.Sirl-kernel@lauterbach.com> \n \n         * rs6000/linux.h (JUMP_TABLES_IN_TEXT_SECTION): Define to zero."}, {"sha": "f104ff586dc13d812b2bf6ce27c04e85fb602922", "filename": "gcc/cse.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d22a2c1640bb948e7db64d9908d920faf2993ff/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d22a2c1640bb948e7db64d9908d920faf2993ff/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=1d22a2c1640bb948e7db64d9908d920faf2993ff", "patch": "@@ -8507,16 +8507,20 @@ cse_basic_block (from, to, next_branch, around_loop)\n \n   for (insn = from; insn != to; insn = NEXT_INSN (insn))\n     {\n-      register enum rtx_code code;\n+      register enum rtx_code code = GET_CODE (insn);\n       int i;\n       struct table_elt *p, *next;\n \n-      /* If we have processed 1,000 insns, flush the hash table to avoid\n-\t extreme quadratic behavior.\n+      /* If we have processed 1,000 insns, flush the hash table to\n+\t avoid extreme quadratic behavior.  We must not include NOTEs\n+\t in the count since there may be more or them when generating\n+\t debugging information.  If we clear the table at different\n+\t times, code generated with -g -O might be different than code\n+\t generated with -O but not -g.\n \n \t ??? This is a real kludge and needs to be done some other way.\n \t Perhaps for 2.9.  */\n-      if (num_insns++ > 1000)\n+      if (code != NOTE && num_insns++ > 1000)\n \t{\n \t  for (i = 0; i < NBUCKETS; i++)\n \t    for (p = table[i]; p; p = next)\n@@ -8555,7 +8559,6 @@ cse_basic_block (from, to, next_branch, around_loop)\n \t    }\n \t}\n         \n-      code = GET_CODE (insn);\n       if (GET_MODE (insn) == QImode)\n \tPUT_MODE (insn, VOIDmode);\n "}]}