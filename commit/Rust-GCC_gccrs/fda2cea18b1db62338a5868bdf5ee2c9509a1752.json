{"sha": "fda2cea18b1db62338a5868bdf5ee2c9509a1752", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhMmNlYTE4YjFkYjYyMzM4YTU4NjhiZGY1ZWUyYzk1MDlhMTc1Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-19T14:57:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-19T14:57:29Z"}, "message": "re PR libgcj/38396 (ecj1 linked against both -lgcj and -lgcj_bc)\n\n\tPR libgcj/38396\n\t* configure.ac (use_libgcj_bc): Set to no if not enable_shared.\n\t(LIBGCJ_SPEC): Use -lgcj instead of -lgcj_bc even for -static\n\tor -static-libgcj.\n\t* Makefile.am (ecjx_SOURCES): Add ecjx.cc.\n\t(ecjx_LDADD): Don't add libgcj.la when\n\tNATIVE && USE_LIBBGCJ_BC.\n\t* ecjx.cc: New file.\n\t* Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\nFrom-SVN: r142834", "tree": {"sha": "b627927143f54133a2b04d48493cc5adf96da4de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b627927143f54133a2b04d48493cc5adf96da4de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fda2cea18b1db62338a5868bdf5ee2c9509a1752", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda2cea18b1db62338a5868bdf5ee2c9509a1752", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda2cea18b1db62338a5868bdf5ee2c9509a1752", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda2cea18b1db62338a5868bdf5ee2c9509a1752/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acd08fa87c2e45c25f52ba12ba019ecb460d73de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd08fa87c2e45c25f52ba12ba019ecb460d73de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd08fa87c2e45c25f52ba12ba019ecb460d73de"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "a13b884928cdd4b35e71f4431fab8b270e98d90b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fda2cea18b1db62338a5868bdf5ee2c9509a1752", "patch": "@@ -1,3 +1,16 @@\n+2008-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgcj/38396\n+\t* configure.ac (use_libgcj_bc): Set to no if not enable_shared.\n+\t(LIBGCJ_SPEC): Use -lgcj instead of -lgcj_bc even for -static\n+\tor -static-libgcj.\n+\t* Makefile.am (ecjx_SOURCES): Add ecjx.cc.\n+\t(ecjx_LDADD): Don't add libgcj.la when\n+\tNATIVE && USE_LIBBGCJ_BC.\n+\t* ecjx.cc: New file.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "d94bb117be547e2d7dedce78c16cb4a325c3c51d", "filename": "libjava/Makefile.am", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=fda2cea18b1db62338a5868bdf5ee2c9509a1752", "patch": "@@ -868,7 +868,7 @@ gij_LDADD = -L$(here)/.libs libgij.la\n gij_DEPENDENCIES = libgij.la\n \n ## Build an ecjx from a .jar.\n-ecjx_SOURCES =\n+ecjx_SOURCES = ecjx.cc\n ## We use the BC ABI here so that we don't need to compile ecj.jar.\n ## Hopefully the user has compiled it into his system .db.\n ## However, even if not it will run reasonably quickly.\n@@ -888,10 +888,12 @@ else !ENABLE_SHARED\n ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR) -fbootclasspath=$(BOOTCLASSPATH)\n endif !ENABLE_SHARED\n \n-ecjx_LDADD = -L$(here)/.libs libgcj.la\n+ecjx_LDADD = -L$(here)/.libs\n ecjx_DEPENDENCIES = libgcj.la libgcj.spec\n if USE_LIBGCJ_BC\n ecjx_DEPENDENCIES += libgcj_bc.la\n+else\n+ecjx_LDADD += libgcj.la\n endif\n \n else !NATIVE"}, {"sha": "81ac0d38e1781ddb3aa87316f746dc4a3252ed55", "filename": "libjava/Makefile.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=fda2cea18b1db62338a5868bdf5ee2c9509a1752", "patch": "@@ -76,7 +76,8 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(top_srcdir)/scripts/jar.in COPYING ChangeLog NEWS THANKS\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@am__append_19 = gen-from-JIS\n @NATIVE_TRUE@@USE_LIBGCJ_BC_TRUE@am__append_20 = libgcj_bc.la\n-@XLIB_AWT_TRUE@am__append_21 = $(xlib_nat_headers)\n+@NATIVE_TRUE@@USE_LIBGCJ_BC_FALSE@am__append_21 = libgcj.la\n+@XLIB_AWT_TRUE@am__append_22 = $(xlib_nat_headers)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/libltdl/acinclude.m4 \\\n@@ -467,8 +468,9 @@ libexecsubPROGRAMS_INSTALL = $(INSTALL_PROGRAM)\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@am__EXEEXT_4 =  \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tgen-from-JIS$(EXEEXT)\n PROGRAMS = $(bin_PROGRAMS) $(libexecsub_PROGRAMS) $(noinst_PROGRAMS)\n-am_ecjx_OBJECTS =\n+am_ecjx_OBJECTS = ecjx.$(OBJEXT)\n ecjx_OBJECTS = $(am_ecjx_OBJECTS)\n+@NATIVE_TRUE@@USE_LIBGCJ_BC_FALSE@am__DEPENDENCIES_6 = libgcj.la\n am_gappletviewer_OBJECTS =\n gappletviewer_OBJECTS = $(am_gappletviewer_OBJECTS)\n am_gc_analyze_OBJECTS =\n@@ -8343,7 +8345,7 @@ gij_LDFLAGS = -rpath $(dbexecdir) -rpath $(toolexeclibdir) \\\n gij_LINK = $(GCJLINK)\n gij_LDADD = -L$(here)/.libs libgij.la\n gij_DEPENDENCIES = libgij.la\n-ecjx_SOURCES = \n+ecjx_SOURCES = ecjx.cc\n ECJX_BASE_FLAGS = -findirect-dispatch \\\n \t--main=org.eclipse.jdt.internal.compiler.batch.GCCMain\n \n@@ -8353,7 +8355,7 @@ ECJX_BASE_FLAGS = -findirect-dispatch \\\n @ENABLE_SHARED_TRUE@@NATIVE_TRUE@ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) -Djava.class.path=$(ECJ_JAR)\n @NATIVE_FALSE@ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n @NATIVE_FALSE@ecjx_LDADD = \n-@NATIVE_TRUE@ecjx_LDADD = -L$(here)/.libs libgcj.la\n+@NATIVE_TRUE@ecjx_LDADD = -L$(here)/.libs $(am__append_21)\n @NATIVE_FALSE@ecjx_DEPENDENCIES = \n @NATIVE_TRUE@ecjx_DEPENDENCIES = libgcj.la libgcj.spec \\\n @NATIVE_TRUE@\t$(am__append_20)\n@@ -8572,7 +8574,7 @@ gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n sourcesdir = $(jardir)\n-headers_to_make = $(nat_headers) $(am__append_21)\n+headers_to_make = $(nat_headers) $(am__append_22)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -9554,6 +9556,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boehm.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/darwin.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defineclass.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecjx.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exception.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gij.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret.Plo@am__quote@"}, {"sha": "224ed4cc02a2d4348d0c103b8ef80b6781e01156", "filename": "libjava/configure", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=fda2cea18b1db62338a5868bdf5ee2c9509a1752", "patch": "@@ -20903,6 +20903,9 @@ else\n   USING_NO_THREADS_FALSE=\n fi\n \n+if test \"$enable_shared\" != yes; then\n+  use_libgcj_bc=no\n+fi\n \n \n if test \"$use_libgcj_bc\" = yes; then\n@@ -20924,7 +20927,7 @@ if test -d sysdep; then true; else mkdir sysdep; fi\n \n LIBGCJ_SPEC=\"%{s-bc-abi:} -lgcj\"\n if test \"$use_libgcj_bc\" = yes; then\n-  LIBGCJ_SPEC=\"%{s-bc-abi:-lgcj_bc;:-lgcj}\"\n+  LIBGCJ_SPEC=\"%{static|static-libgcj|!s-bc-abi:-lgcj;:-lgcj_bc}\"\n fi\n \n "}, {"sha": "91adc20facb375e8cf74ed6f9df64cbce4ad74f3", "filename": "libjava/configure.ac", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=fda2cea18b1db62338a5868bdf5ee2c9509a1752", "patch": "@@ -1046,6 +1046,9 @@ AC_SUBST(THREADCXXFLAGS)\n AM_CONDITIONAL(USING_POSIX_THREADS, test \"$THREADS\" = posix)\n AM_CONDITIONAL(USING_WIN32_THREADS, test \"$THREADS\" = win32)\n AM_CONDITIONAL(USING_NO_THREADS, test \"$THREADS\" = none)\n+if test \"$enable_shared\" != yes; then\n+  use_libgcj_bc=no\n+fi\n AM_CONDITIONAL(USE_LIBGCJ_BC, test \"$use_libgcj_bc\" = yes)\n \n if test -d sysdep; then true; else mkdir sysdep; fi\n@@ -1055,7 +1058,7 @@ AC_CONFIG_LINKS(sysdep/descriptor.h:$descriptor_h)\n \n LIBGCJ_SPEC=\"%{s-bc-abi:} -lgcj\"\n if test \"$use_libgcj_bc\" = yes; then\n-  LIBGCJ_SPEC=\"%{s-bc-abi:-lgcj_bc;:-lgcj}\"\n+  LIBGCJ_SPEC=\"%{static|static-libgcj|!s-bc-abi:-lgcj;:-lgcj_bc}\"\n fi\n AC_SUBST(LIBGCJ_SPEC)\n "}, {"sha": "4fa662b6ba03a8741c1664b548f5d4914381674d", "filename": "libjava/ecjx.cc", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2Fecjx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda2cea18b1db62338a5868bdf5ee2c9509a1752/libjava%2Fecjx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fecjx.cc?ref=fda2cea18b1db62338a5868bdf5ee2c9509a1752", "patch": "@@ -0,0 +1 @@\n+// Dummy"}]}