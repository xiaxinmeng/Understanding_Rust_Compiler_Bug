{"sha": "c56e97274f164e704e7f13dfe53531ced3cb24ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU2ZTk3Mjc0ZjE2NGU3MDRlN2YxM2RmZTUzNTMxY2VkM2NiMjRjYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-07-18T13:13:11Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-07-18T13:13:11Z"}, "message": "PR c++/86190 - bogus -Wsign-conversion warning\n\n\tPR c++/86190 - bogus -Wsign-conversion warning\n\t* typeck.c (cp_build_binary_op): Fix formatting.  Add a warning\n\tsentinel.\n\n\t* g++.dg/warn/Wsign-conversion-3.C: New test.\n\t* g++.dg/warn/Wsign-conversion-4.C: New test.\n\nFrom-SVN: r262855", "tree": {"sha": "8af96e877c0c68e48efb2eedf1d2ebca4c93f1f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8af96e877c0c68e48efb2eedf1d2ebca4c93f1f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c56e97274f164e704e7f13dfe53531ced3cb24ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56e97274f164e704e7f13dfe53531ced3cb24ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c56e97274f164e704e7f13dfe53531ced3cb24ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56e97274f164e704e7f13dfe53531ced3cb24ca/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb5926451a7873a62de7ef02cba9f671bad14b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5926451a7873a62de7ef02cba9f671bad14b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5926451a7873a62de7ef02cba9f671bad14b88"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "738b179532273d0e3d2ce85a68cba5d0af64dd40", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c56e97274f164e704e7f13dfe53531ced3cb24ca", "patch": "@@ -1,3 +1,9 @@\n+2018-07-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/86190 - bogus -Wsign-conversion warning\n+\t* typeck.c (cp_build_binary_op): Fix formatting.  Add a warning\n+\tsentinel.\n+\n 2018-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59480, DR 136"}, {"sha": "1335da5e9bcf3b4694460275e72ebd83d009c25c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=c56e97274f164e704e7f13dfe53531ced3cb24ca", "patch": "@@ -5312,12 +5312,13 @@ cp_build_binary_op (location_t location,\n \n       if (short_compare)\n \t{\n-\t  /* We call shorten_compare only for diagnostic-reason.  */\n-\t  tree xop0 = fold_simple (op0), xop1 = fold_simple (op1),\n-\t       xresult_type = result_type;\n+\t  /* We call shorten_compare only for diagnostics.  */\n+\t  tree xop0 = fold_simple (op0);\n+\t  tree xop1 = fold_simple (op1);\n+\t  tree xresult_type = result_type;\n \t  enum tree_code xresultcode = resultcode;\n \t  shorten_compare (location, &xop0, &xop1, &xresult_type,\n-\t\t\t       &xresultcode);\n+\t\t\t   &xresultcode);\n \t}\n \n       if ((short_compare || code == MIN_EXPR || code == MAX_EXPR)\n@@ -5350,6 +5351,7 @@ cp_build_binary_op (location_t location,\n      otherwise, it will be given type RESULT_TYPE.  */\n   if (! converted)\n     {\n+      warning_sentinel w (warn_sign_conversion, short_compare);\n       if (TREE_TYPE (op0) != result_type)\n \top0 = cp_convert_and_check (result_type, op0, complain);\n       if (TREE_TYPE (op1) != result_type)"}, {"sha": "47aec4f5c7aa5c88b7633fc77af3d47f4ee2b1d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c56e97274f164e704e7f13dfe53531ced3cb24ca", "patch": "@@ -1,3 +1,9 @@\n+2018-07-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/86190 - bogus -Wsign-conversion warning\n+\t* g++.dg/warn/Wsign-conversion-3.C: New test.\n+\t* g++.dg/warn/Wsign-conversion-4.C: New test.\n+\n 2018-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59480, DR 136"}, {"sha": "2c3fef314750cc68366d7e35c29138c13faa2288", "filename": "gcc/testsuite/g++.dg/warn/Wsign-conversion-3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-conversion-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-conversion-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-conversion-3.C?ref=c56e97274f164e704e7f13dfe53531ced3cb24ca", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/86190\n+// { dg-options \"-Wsign-conversion -Wsign-compare\" }\n+\n+typedef unsigned long sz_t;\n+sz_t s();\n+bool f(int i) { return s() < (unsigned long) i; }\n+bool f2(int i) { return s() < static_cast<unsigned long>(i); }\n+bool f3(int i) { return s() < i; } // { dg-warning \"comparison of integer expressions of different signedness\" }\n+bool f4(int i) { return s() < (long) i; } // { dg-warning \"comparison of integer expressions of different signedness\" }\n+bool f5(short int i) { return s() < (int) i; } // { dg-warning \"comparison of integer expressions of different signedness\" }\n+bool f6(signed char i) { return s() < (int) i; } // { dg-warning \"comparison of integer expressions of different signedness\" }\n+bool f7(unsigned char i) { return s() < i; }\n+bool f8(signed char i) { return s() < i; } // { dg-warning \"comparison of integer expressions of different signedness\" }"}, {"sha": "40814b95587b7f4b1a5ed1bfa0039f7cf830a3c7", "filename": "gcc/testsuite/g++.dg/warn/Wsign-conversion-4.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-conversion-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c56e97274f164e704e7f13dfe53531ced3cb24ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-conversion-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-conversion-4.C?ref=c56e97274f164e704e7f13dfe53531ced3cb24ca", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/86190\n+// { dg-options \"-Wsign-conversion -Wsign-compare\" }\n+\n+typedef unsigned long size_t;\n+\n+struct vector {\n+  typedef size_t size_type;\n+  size_type size();\n+};\n+\n+bool func(vector vec, int var)\n+{\n+  return vec.size() < static_cast<size_t>(var); // { dg-bogus \"may change\" }\n+}"}]}