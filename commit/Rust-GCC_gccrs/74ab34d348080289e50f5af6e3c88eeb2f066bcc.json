{"sha": "74ab34d348080289e50f5af6e3c88eeb2f066bcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRhYjM0ZDM0ODA4MDI4OWU1MGY1YWY2ZTNjODhlZWIyZjA2NmJjYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-01-18T09:55:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-01-18T09:55:15Z"}, "message": "re PR target/34484 (libgcc should check if feclearexcept (and others) available for BID support on uclibc)\n\n\tPR debug/34484\n\t* dwarf2out.c (dwarf2out_switch_text_section): Do not guard with\n\tDWARF2_DEBUGGING_INFO.\n\t(dwarf2out_note_section_used): Ditto.  Add prototype.\n\t(have_multiple_function_sections, text_section_used,\n\tcold_text_section_used, *cold_text_sections): Move declarations\n\tbefore their uses.\n\nFrom-SVN: r131626", "tree": {"sha": "a68205acd4b6d3fb09b6215487da104ff8d8b934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a68205acd4b6d3fb09b6215487da104ff8d8b934"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74ab34d348080289e50f5af6e3c88eeb2f066bcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ab34d348080289e50f5af6e3c88eeb2f066bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ab34d348080289e50f5af6e3c88eeb2f066bcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ab34d348080289e50f5af6e3c88eeb2f066bcc/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4312e020f1419864e1c05ecb0e85b4876d01bd08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4312e020f1419864e1c05ecb0e85b4876d01bd08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4312e020f1419864e1c05ecb0e85b4876d01bd08"}], "stats": {"total": 102, "additions": 56, "deletions": 46}, "files": [{"sha": "8099410d1edc4cc5d0a8ec15e2915ba6f906ecda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ab34d348080289e50f5af6e3c88eeb2f066bcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ab34d348080289e50f5af6e3c88eeb2f066bcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74ab34d348080289e50f5af6e3c88eeb2f066bcc", "patch": "@@ -1,3 +1,13 @@\n+2008-01-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR debug/34484\n+\t* dwarf2out.c (dwarf2out_switch_text_section): Do not guard with\n+\tDWARF2_DEBUGGING_INFO.\n+\t(dwarf2out_note_section_used): Ditto.  Add prototype.\n+\t(have_multiple_function_sections, text_section_used,\n+\tcold_text_section_used, *cold_text_sections): Move declarations\n+\tbefore their uses.\n+\n 2007-01-17  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/unwind-dw2-xtensa.h (_Unwind_FrameState): Remove pc"}, {"sha": "d06e499bd2ede4fdf2ffd7811940e3acc63a2bf9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ab34d348080289e50f5af6e3c88eeb2f066bcc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ab34d348080289e50f5af6e3c88eeb2f066bcc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=74ab34d348080289e50f5af6e3c88eeb2f066bcc", "patch": "@@ -339,6 +339,17 @@ static GTY ((param_is (struct indirect_string_node))) htab_t debug_str_hash;\n static GTY(()) int dw2_string_counter;\n static GTY(()) unsigned long dwarf2out_cfi_label_num;\n \n+/* True if the compilation unit places functions in more than one section.  */\n+static GTY(()) bool have_multiple_function_sections = false;\n+\n+/* Whether the default text and cold text sections have been used at all.  */\n+\n+static GTY(()) bool text_section_used = false;\n+static GTY(()) bool cold_text_section_used = false;\n+\n+/* The default cold text section.  */\n+static GTY(()) section *cold_text_section;\n+\n #if defined (DWARF2_DEBUGGING_INFO) || defined (DWARF2_UNWIND_INFO)\n \n /* Forward declarations for functions defined in this file.  */\n@@ -357,6 +368,7 @@ static void initial_return_save (rtx);\n static HOST_WIDE_INT stack_adjust_offset (const_rtx);\n static void output_cfi (dw_cfi_ref, dw_fde_ref, int);\n static void output_call_frame_info (int);\n+static void dwarf2out_note_section_used (void);\n static void dwarf2out_stack_adjust (rtx, bool);\n static void flush_queued_reg_saves (void);\n static bool clobbers_queued_reg_save (const_rtx);\n@@ -2685,6 +2697,40 @@ dwarf2out_frame_finish (void)\n     output_call_frame_info (1);\n #endif\n }\n+\n+/* Note that the current function section is being used for code.  */\n+\n+static void\n+dwarf2out_note_section_used (void)\n+{\n+  section *sec = current_function_section ();\n+  if (sec == text_section)\n+    text_section_used = true;\n+  else if (sec == cold_text_section)\n+    cold_text_section_used = true;\n+}\n+\n+void\n+dwarf2out_switch_text_section (void)\n+{\n+  dw_fde_ref fde;\n+\n+  gcc_assert (cfun);\n+\n+  fde = &fde_table[fde_table_in_use - 1];\n+  fde->dw_fde_switched_sections = true;\n+  fde->dw_fde_hot_section_label = cfun->hot_section_label;\n+  fde->dw_fde_hot_section_end_label = cfun->hot_section_end_label;\n+  fde->dw_fde_unlikely_section_label = cfun->cold_section_label;\n+  fde->dw_fde_unlikely_section_end_label = cfun->cold_section_end_label;\n+  have_multiple_function_sections = true;\n+\n+  /* Reset the current label on switching text sections, so that we\n+     don't attempt to advance_loc4 between labels in different sections.  */\n+  fde->dw_fde_current_label = NULL;\n+\n+  dwarf2out_note_section_used ();\n+}\n #endif\n \f\n /* And now, the subset of the debugging information support code necessary\n@@ -3971,9 +4017,6 @@ static GTY(()) unsigned line_info_table_allocated;\n /* Number of elements in line_info_table currently in use.  */\n static GTY(()) unsigned line_info_table_in_use;\n \n-/* True if the compilation unit places functions in more than one section.  */\n-static GTY(()) bool have_multiple_function_sections = false;\n-\n /* A pointer to the base of a table that contains line information\n    for each source code line outside of .text in the compilation unit.  */\n static GTY ((length (\"separate_line_info_table_allocated\")))\n@@ -4056,15 +4099,6 @@ static GTY(()) int label_num;\n /* Cached result of previous call to lookup_filename.  */\n static GTY(()) struct dwarf_file_data * file_table_last_lookup;\n \n-/* Whether the default text and cold text sections have been used at\n-   all.  */\n-\n-static GTY(()) bool text_section_used = false;\n-static GTY(()) bool cold_text_section_used = false;\n-\n-/* The default cold text section.  */\n-static GTY(()) section *cold_text_section;\n-\n #ifdef DWARF2_DEBUGGING_INFO\n \n /* Offset from the \"steady-state frame pointer\" to the frame base,\n@@ -7085,40 +7119,6 @@ add_loc_descr_to_loc_list (dw_loc_list_ref *list_head, dw_loc_descr_ref descr,\n   *d = new_loc_list (descr, begin, end, section, 0);\n }\n \n-/* Note that the current function section is being used for code.  */\n-\n-static void\n-dwarf2out_note_section_used (void)\n-{\n-  section *sec = current_function_section ();\n-  if (sec == text_section)\n-    text_section_used = true;\n-  else if (sec == cold_text_section)\n-    cold_text_section_used = true;\n-}\n-\n-void\n-dwarf2out_switch_text_section (void)\n-{\n-  dw_fde_ref fde;\n-\n-  gcc_assert (cfun);\n-\n-  fde = &fde_table[fde_table_in_use - 1];\n-  fde->dw_fde_switched_sections = true;\n-  fde->dw_fde_hot_section_label = cfun->hot_section_label;\n-  fde->dw_fde_hot_section_end_label = cfun->hot_section_end_label;\n-  fde->dw_fde_unlikely_section_label = cfun->cold_section_label;\n-  fde->dw_fde_unlikely_section_end_label = cfun->cold_section_end_label;\n-  have_multiple_function_sections = true;\n-\n-  /* Reset the current label on switching text sections, so that we\n-     don't attempt to advance_loc4 between labels in different sections.  */\n-  fde->dw_fde_current_label = NULL;\n-\n-  dwarf2out_note_section_used ();\n-}\n-\n /* Output the location list given to us.  */\n \n static void"}]}