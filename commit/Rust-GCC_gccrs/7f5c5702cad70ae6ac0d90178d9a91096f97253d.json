{"sha": "7f5c5702cad70ae6ac0d90178d9a91096f97253d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1YzU3MDJjYWQ3MGFlNmFjMGQ5MDE3OGQ5YTkxMDk2Zjk3MjUzZA==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2008-12-30T06:58:57Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2008-12-30T06:58:57Z"}, "message": "re PR tree-optimization/38529 (ICE with nested loops)\n\n\tPR tree-optimization/38529\n\t* tree-vect-transform (vect_transform_stmt): Handle inner-loop stmts\n\twhose DEF is used in the loop-nest that is being vectorized, but\n\toutside the immediately enclosing loop.\n\n\nCo-Authored-By: Ira Rosen <irar@il.ibm.com>\n\nFrom-SVN: r142959", "tree": {"sha": "400c8e032ea4bf174b1c2f04975882457f9b370d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/400c8e032ea4bf174b1c2f04975882457f9b370d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5c5702cad70ae6ac0d90178d9a91096f97253d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5c5702cad70ae6ac0d90178d9a91096f97253d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5c5702cad70ae6ac0d90178d9a91096f97253d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5c5702cad70ae6ac0d90178d9a91096f97253d/comments", "author": null, "committer": null, "parents": [{"sha": "b72bc5243fdc2830e2e4290526d43d210ff3178a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b72bc5243fdc2830e2e4290526d43d210ff3178a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b72bc5243fdc2830e2e4290526d43d210ff3178a"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "603b68d0b4da5a4394f22206b3b0eb5af49be38c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f5c5702cad70ae6ac0d90178d9a91096f97253d", "patch": "@@ -1,3 +1,11 @@\n+2008-12-30  Dorit Nuzman  <dorit@il.ibm.com>\n+            Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/38529\n+\t* tree-vect-transform (vect_transform_stmt): Handle inner-loop stmts\n+\twhose DEF is used in the loop-nest that is being vectorized, but\n+\toutside the immediately enclosing loop.\n+\n 2008-12-29  Seongbae Park  <seongbae.park@gmail.com>\n \n \t* tree-profile.c (tree_init_ic_make_global_vars): Make static"}, {"sha": "4f010a2782d5684577707f2c31ac4b891a399675", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f5c5702cad70ae6ac0d90178d9a91096f97253d", "patch": "@@ -1,3 +1,9 @@\n+2008-12-29  Dorit Nuzman  <dorit@il.ibm.com>\n+            Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/38529\n+\t* gcc.dg/vect/pr38529.c: New test.\n+\n 2008-12-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38635"}, {"sha": "496aa43f39b9ce98372c7b799ec84fa64aa9fb9e", "filename": "gcc/testsuite/gcc.dg/vect/pr38529.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr38529.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr38529.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr38529.c?ref=7f5c5702cad70ae6ac0d90178d9a91096f97253d", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+\n+float a[4];\n+\n+void foo()\n+{\n+  int i, j;\n+\n+  for (i = 0; i < 4; ++i)\n+    for (j = 0; j < 17; ++j)\n+      a[i] = 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"OUTER LOOP VECTORIZED\" 1 \"vect\"  } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+\n+"}, {"sha": "2db01676bdbc6f835649bdbe635847b5f9152f47", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5c5702cad70ae6ac0d90178d9a91096f97253d/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=7f5c5702cad70ae6ac0d90178d9a91096f97253d", "patch": "@@ -7047,6 +7047,8 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n   gimple orig_stmt_in_pattern;\n   bool done;\n+  loop_vec_info loop_vinfo = STMT_VINFO_LOOP_VINFO (stmt_info);\n+  struct loop *loop = LOOP_VINFO_LOOP (loop_vinfo);\n \n   switch (STMT_VINFO_TYPE (stmt_info))\n     {\n@@ -7130,6 +7132,43 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n \t}\n     }\n \n+  /* Handle inner-loop stmts whose DEF is used in the loop-nest that\n+     is being vectorized, but outside the immediately enclosing loop.  */\n+  if (vec_stmt\n+      && nested_in_vect_loop_p (loop, stmt)\n+      && STMT_VINFO_TYPE (stmt_info) != reduc_vec_info_type\n+      && (STMT_VINFO_RELEVANT (stmt_info) == vect_used_in_outer\n+          || STMT_VINFO_RELEVANT (stmt_info) == vect_used_in_outer_by_reduction))\n+    {\n+      struct loop *innerloop = loop->inner;\n+      imm_use_iterator imm_iter;\n+      use_operand_p use_p;\n+      tree scalar_dest;\n+      gimple exit_phi;\n+\n+      if (vect_print_dump_info (REPORT_DETAILS))\n+       fprintf (vect_dump, \"Record the vdef for outer-loop vectorization.\");\n+\n+      /* Find the relevant loop-exit phi-node, and reord the vec_stmt there\n+        (to be used when vectorizing outer-loop stmts that use the DEF of\n+        STMT).  */\n+      if (gimple_code (stmt) == GIMPLE_PHI)\n+        scalar_dest = PHI_RESULT (stmt);\n+      else\n+        scalar_dest = gimple_assign_lhs (stmt);\n+\n+      FOR_EACH_IMM_USE_FAST (use_p, imm_iter, scalar_dest)\n+       {\n+         if (!flow_bb_inside_loop_p (innerloop, gimple_bb (USE_STMT (use_p))))\n+           {\n+             exit_phi = USE_STMT (use_p);\n+             STMT_VINFO_VEC_STMT (vinfo_for_stmt (exit_phi)) = vec_stmt;\n+           }\n+       }\n+    }\n+\n+  /* Handle stmts whose DEF is used outside the loop-nest that is\n+     being vectorized.  */\n   if (STMT_VINFO_LIVE_P (stmt_info)\n       && STMT_VINFO_TYPE (stmt_info) != reduc_vec_info_type)\n     {"}]}