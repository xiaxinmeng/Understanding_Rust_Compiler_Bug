{"sha": "030a53c613031d11e11fb7b1b08aec1a736da067", "node_id": "C_kwDOANBUbNoAKDAzMGE1M2M2MTMwMzFkMTFlMTFmYjdiMWIwOGFlYzFhNzM2ZGEwNjc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-07-09T15:43:44Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-07-09T19:08:10Z"}, "message": "Set VR_VARYING in irange::irange_single_pair_union.\n\nThe fast union operation is sometimes setting a range of the entire\ndomain, but leaving the kind bit as VR_RANGE instead of downgrading it\nto VR_VARYING.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (irange::irange_single_pair_union): Set\n\tVR_VARYING when appropriate.", "tree": {"sha": "6b7aead121f68f92385655d2d846e55b4057c328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b7aead121f68f92385655d2d846e55b4057c328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/030a53c613031d11e11fb7b1b08aec1a736da067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030a53c613031d11e11fb7b1b08aec1a736da067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030a53c613031d11e11fb7b1b08aec1a736da067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030a53c613031d11e11fb7b1b08aec1a736da067/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a16d39903ed1bf159f7933a19ccae62155b371b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a16d39903ed1bf159f7933a19ccae62155b371b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a16d39903ed1bf159f7933a19ccae62155b371b"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "fd549b9ca598e1d12748694de41487076c99c531", "filename": "gcc/value-range.cc", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030a53c613031d11e11fb7b1b08aec1a736da067/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030a53c613031d11e11fb7b1b08aec1a736da067/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=030a53c613031d11e11fb7b1b08aec1a736da067", "patch": "@@ -1777,20 +1777,16 @@ irange::irange_single_pair_union (const irange &r)\n       // Check for overlap/touching ranges, or single target range.\n       if (m_max_ranges == 1\n \t  || wi::to_widest (m_base[1]) + 1 >= wi::to_widest (r.m_base[0]))\n-\t{\n-\t  m_base[1] = r.m_base[1];\n-\t  if (varying_compatible_p ())\n-\t    m_kind = VR_VARYING;\n-\t}\n+\tm_base[1] = r.m_base[1];\n       else\n \t{\n \t  // This is a dual range result.\n \t  m_base[2] = r.m_base[0];\n \t  m_base[3] = r.m_base[1];\n \t  m_num_ranges = 2;\n \t}\n-      if (flag_checking)\n-\tverify_range ();\n+      if (varying_compatible_p ())\n+\tm_kind = VR_VARYING;\n       return true;\n     }\n \n@@ -1817,8 +1813,8 @@ irange::irange_single_pair_union (const irange &r)\n       m_base[3] = m_base[1];\n       m_base[1] = r.m_base[1];\n     }\n-  if (flag_checking)\n-    verify_range ();\n+  if (varying_compatible_p ())\n+    m_kind = VR_VARYING;\n   return true;\n }\n \n@@ -1857,6 +1853,8 @@ irange::irange_union (const irange &r)\n     {\n       bool ret = irange_single_pair_union (r);\n       set_nonzero_bits (saved_nz);\n+      if (flag_checking)\n+\tverify_range ();\n       return ret || ret_nz;\n     }\n "}]}