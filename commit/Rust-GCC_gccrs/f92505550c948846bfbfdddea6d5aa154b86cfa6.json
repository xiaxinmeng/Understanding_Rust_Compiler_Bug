{"sha": "f92505550c948846bfbfdddea6d5aa154b86cfa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkyNTA1NTUwYzk0ODg0NmJmYmZkZGRlYTZkNWFhMTU0Yjg2Y2ZhNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-27T19:36:39Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-27T19:36:39Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1097", "tree": {"sha": "76579e1778bb964b1a9e8a195a16ef5bf09689ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76579e1778bb964b1a9e8a195a16ef5bf09689ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f92505550c948846bfbfdddea6d5aa154b86cfa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f92505550c948846bfbfdddea6d5aa154b86cfa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f92505550c948846bfbfdddea6d5aa154b86cfa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f92505550c948846bfbfdddea6d5aa154b86cfa6/comments", "author": null, "committer": null, "parents": [{"sha": "10f4f53f434aa4d421e9113197e7c1d71522d8a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f4f53f434aa4d421e9113197e7c1d71522d8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10f4f53f434aa4d421e9113197e7c1d71522d8a5"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "571eb5d453cca61a0d467e550fcfa874cfb3437f", "filename": "gcc/real.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f92505550c948846bfbfdddea6d5aa154b86cfa6/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f92505550c948846bfbfdddea6d5aa154b86cfa6/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=f92505550c948846bfbfdddea6d5aa154b86cfa6", "patch": "@@ -67,6 +67,34 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define REAL_IS_NOT_DOUBLE\n #endif\n \n+#if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT\n+\n+/* Convert a type `double' value in host format first to a type `float'\n+   value in host format and then to a single type `long' value which\n+   is the bitwise equivalent of the `float' value.  */\n+#define REAL_VALUE_TO_TARGET_SINGLE(IN, OUT)\t\t\t\t\\\n+do { float f = (float) (IN);\t\t\t\t\t\t\\\n+     (OUT) = *(long *) &f;\t\t\t\t\t\t\\\n+  } while (0)\n+\n+/* Convert a type `double' value in host format to a pair of type `long'\n+   values which is its bitwise equivalent, but put the two words into\n+   proper word order for the target.  */\n+#if defined (HOST_WORDS_BIG_ENDIAN) == WORDS_BIG_ENDIAN\n+#define REAL_VALUE_TO_TARGET_DOUBLE(IN, OUT)\t\t\t\t\\\n+do { REAL_VALUE_TYPE in = (IN);  /* Make sure it's not in a register.  */\\\n+     (OUT)[0] = ((long *) &in)[0];\t\t\t\t\t\\\n+     (OUT)[1] = ((long *) &in)[1];\t\t\t\t\t\\\n+   } while (0)\n+#else\n+#define REAL_VALUE_TO_TARGET_DOUBLE(IN, OUT)\t\t\t\t\\\n+do { REAL_VALUE_TYPE in = (IN);  /* Make sure it's not in a register.  */\\\n+     (OUT)[1] = ((long *) &in)[0];\t\t\t\t\t\\\n+     (OUT)[0] = ((long *) &in)[1];\t\t\t\t\t\\\n+   } while (0)\n+#endif\n+#endif /* HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT */\n+\n /* Compare two floating-point values for equality.  */\n #ifndef REAL_VALUES_EQUAL\n #define REAL_VALUES_EQUAL(x,y) ((x) == (y))"}]}