{"sha": "588c2d1c2f7303efadc5159cab5af58d78d1c405", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg4YzJkMWMyZjczMDNlZmFkYzUxNTljYWI1YWY1OGQ3OGQxYzQwNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-10-16T13:24:28Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-10-16T13:24:28Z"}, "message": "pt.c (for_each_template_parm): Don't examine uninstantiated default arguments.\n\n\t* pt.c (for_each_template_parm): Don't examine uninstantiated\n\tdefault arguments.\n\nFrom-SVN: r23137", "tree": {"sha": "127e237c9bd7170c301d5c18d276709ebadb7d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/127e237c9bd7170c301d5c18d276709ebadb7d04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/588c2d1c2f7303efadc5159cab5af58d78d1c405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588c2d1c2f7303efadc5159cab5af58d78d1c405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/588c2d1c2f7303efadc5159cab5af58d78d1c405", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588c2d1c2f7303efadc5159cab5af58d78d1c405/comments", "author": null, "committer": null, "parents": [{"sha": "cc4824564d972ee9f170612d1ab637a37b8ee683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc4824564d972ee9f170612d1ab637a37b8ee683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc4824564d972ee9f170612d1ab637a37b8ee683"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "4fa45af56638f644dccf72e558d25b0bfe019d5f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588c2d1c2f7303efadc5159cab5af58d78d1c405/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588c2d1c2f7303efadc5159cab5af58d78d1c405/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=588c2d1c2f7303efadc5159cab5af58d78d1c405", "patch": "@@ -1,3 +1,8 @@\n+1998-10-16  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* pt.c (for_each_template_parm): Don't examine uninstantiated\n+\tdefault arguments.\n+\n 1998-10-16  Dave Brolley  <brolley@cygnus.com>\n \n         * lex.c (real_yylex): Fix unaligned access of wchar_t."}, {"sha": "852634c622a8dc4088f45c5ac807cae6012d23d9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588c2d1c2f7303efadc5159cab5af58d78d1c405/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588c2d1c2f7303efadc5159cab5af58d78d1c405/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=588c2d1c2f7303efadc5159cab5af58d78d1c405", "patch": "@@ -3766,10 +3766,29 @@ for_each_template_parm (t, fn, data)\n       return for_each_template_parm (TREE_VALUE\n \t\t\t\t     (TYPE_TEMPLATE_INFO (t)),\n \t\t\t\t     fn, data);\n-    case FUNCTION_TYPE:\n-      if (for_each_template_parm (TYPE_ARG_TYPES (t), fn, data))\n+    case METHOD_TYPE:\n+      if (for_each_template_parm (TYPE_METHOD_BASETYPE (t), fn, data))\n \treturn 1;\n+      /* Fall through.  */\n+\n+    case FUNCTION_TYPE:\n+      /* Check the parameter types.  Since default arguments are not\n+\t instantiated until they are needed, the TYPE_ARG_TYPES may\n+\t contain expressions that involve template parameters.  But,\n+\t no-one should be looking at them yet.  And, once they're\n+\t instantiated, they don't contain template parameters, so\n+\t there's no point in looking at them then, either.  */\n+      {\n+\ttree parm;\n+\n+\tfor (parm = TYPE_ARG_TYPES (t); parm; parm = TREE_CHAIN (parm))\n+\t  if (for_each_template_parm (TREE_VALUE (parm), fn, data))\n+\t    return 1;\n+      }\n+\n+      /* Check the return type, too.  */\n       return for_each_template_parm (TREE_TYPE (t), fn, data);\n+\n     case ARRAY_TYPE:\n       if (for_each_template_parm (TYPE_DOMAIN (t), fn, data))\n \treturn 1;\n@@ -3778,12 +3797,6 @@ for_each_template_parm (t, fn, data)\n       if (for_each_template_parm (TYPE_OFFSET_BASETYPE (t), fn, data))\n \treturn 1;\n       return for_each_template_parm (TREE_TYPE (t), fn, data);\n-    case METHOD_TYPE:\n-      if (for_each_template_parm (TYPE_METHOD_BASETYPE (t), fn, data))\n-\treturn 1;\n-      if (for_each_template_parm (TYPE_ARG_TYPES (t), fn, data))\n-\treturn 1;\n-      return for_each_template_parm (TREE_TYPE (t), fn, data);\n \n       /* decl nodes */\n     case TYPE_DECL:"}, {"sha": "6a68bad8251826e67eac028173f964fb79daaa89", "filename": "gcc/testsuite/g++.old-deja/g++.pt/defarg5.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588c2d1c2f7303efadc5159cab5af58d78d1c405/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588c2d1c2f7303efadc5159cab5af58d78d1c405/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg5.C?ref=588c2d1c2f7303efadc5159cab5af58d78d1c405", "patch": "@@ -0,0 +1,24 @@\n+// Build don't link:\n+\n+template <int dim>\n+class Point {\n+  public:\n+    Point (Point<dim> &);\n+    Point<dim> & operator = (Point<dim> &);\n+};\n+\n+\n+\n+template <int dim>\n+class bar{\n+  public:\n+    void foo (Point<dim> p = Point<dim>());\n+};\n+\n+\n+\n+template <>\n+void bar<2>::foo (Point<2> p) {\n+  const int dim = 2;\n+  Point<dim> q = p;\n+};"}]}