{"sha": "0b9ccabc3c5e637a794516c9b06bb492c56c77f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI5Y2NhYmMzYzVlNjM3YTc5NDUxNmM5YjA2YmI0OTJjNTZjNzdmNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-26T23:01:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-26T23:01:08Z"}, "message": "(MASK_NO_SUM_IN_TOC, TARGET_NO_SUM_IN_TOC): New macros.\n\n(MASK_MINIMAL_TOC): Change bit value.\n(TARGET_SWITCHES): Add -mno-sum-in-toc; use -mfull-toc instead of\n-mnormal-toc, other minor changes.\n\nFrom-SVN: r6634", "tree": {"sha": "8c6bd4e320dda4647cc526fe59a4ddd70193f19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c6bd4e320dda4647cc526fe59a4ddd70193f19f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b9ccabc3c5e637a794516c9b06bb492c56c77f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b9ccabc3c5e637a794516c9b06bb492c56c77f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b9ccabc3c5e637a794516c9b06bb492c56c77f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b9ccabc3c5e637a794516c9b06bb492c56c77f7/comments", "author": null, "committer": null, "parents": [{"sha": "4fe73cc129e2b244d4ae113844518028ff7df440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe73cc129e2b244d4ae113844518028ff7df440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fe73cc129e2b244d4ae113844518028ff7df440"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "dd5fb2b3ccec5488f2da78190d748c650417ed6f", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b9ccabc3c5e637a794516c9b06bb492c56c77f7/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b9ccabc3c5e637a794516c9b06bb492c56c77f7/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=0b9ccabc3c5e637a794516c9b06bb492c56c77f7", "patch": "@@ -89,14 +89,18 @@ extern int target_flags;\n    TOC overflows.  */\n #define MASK_NO_FP_IN_TOC\t0x40\n \n+/* Disable placing symbol+offset constants in the TOC; can be turned on when\n+   the TOC overflows.  */\n+#define MASK_NO_SUM_IN_TOC\t0x80\n+\n /* Output only one TOC entry per module.  Normally linking fails if\n    there are more than 16K unique variables/constants in an executable.  With\n    this option, linking fails only if there are more than 16K modules, or\n    if there are more than 16K unique variables/constant in a single module.\n \n    This is at the cost of having 2 extra loads and one extra store per\n    function, and one less allocatable register.  */\n-#define MASK_MINIMAL_TOC\t0x80\n+#define MASK_MINIMAL_TOC\t0x100\n \n #define TARGET_POWER\t\t\t(target_flags & MASK_POWER)\n #define TARGET_POWER2\t\t\t(target_flags & MASK_POWER2)\n@@ -105,6 +109,7 @@ extern int target_flags;\n #define TARGET_POWERPC64\t\t(target_flags & MASK_POWERPC64)\n #define TARGET_NEW_MNEMONICS\t\t(target_flags & MASK_NEW_MNEMONICS)\n #define TARGET_NO_FP_IN_TOC\t\t(target_flags & MASK_NO_FP_IN_TOC)\n+#define TARGET_NO_SUM_IN_TOC\t\t(target_flags & MASK_NO_SUM_IN_TOC)\n #define TARGET_MINIMAL_TOC\t\t(target_flags & MASK_MINIMAL_TOC)\n \n /* Run-time compilation parameters selecting different hardware subsets.\n@@ -128,10 +133,14 @@ extern int target_flags;\n   {\"no-powerpc64\",\t-MASK_POWERPC64},\t\t\t\\\n   {\"new-mnemonics\",\tMASK_NEW_MNEMONICS},\t\t\t\\\n   {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS},\t\t\t\\\n-  {\"normal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_MINIMAL_TOC)}, \\\n+  {\"full-toc\",\t\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC \\\n+\t\t\t   | MASK_MINIMAL_TOC)},\t\t\\\n   {\"fp-in-toc\",\t\t- MASK_NO_FP_IN_TOC},\t\t\t\\\n   {\"no-fp-in-toc\",\tMASK_NO_FP_IN_TOC},\t\t\t\\\n+  {\"sum-in-toc\",\t- MASK_NO_SUM_IN_TOC},\t\t\t\\\n+  {\"no-sum-in-toc\",\tMASK_NO_SUM_IN_TOC},\t\t\t\\\n   {\"minimal-toc\",\tMASK_MINIMAL_TOC},\t\t\t\\\n+  {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC)}, \\\n   {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC},\t\t\t\\\n   {\"\",\t\t\tTARGET_DEFAULT}}\n "}]}