{"sha": "f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFmYTM3ZmY2YmJkNGY3NjBmN2RmNmU2MGRkNDRjZjczMWQ3OWY0NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-04-11T18:22:46Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-04-11T18:22:46Z"}, "message": "Makefile.in (gcse.o): Depend on params.h.\n\n\t* Makefile.in (gcse.o): Depend on params.h.\n\t* gcse.c: Include params.h.\n\t(gcse_main): Don't do GCSE if doing so will take inordinate\n\tamounts of memory.\n\t* params.def (PARAM_MAX_GCSE_MEMORY): New  parameter.\n\t* params.h (MAX_GCSE_MEMORY): New macro.\n\nFrom-SVN: r41260", "tree": {"sha": "36d9539f4aea987e424c87b9c099ac485cbe15f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36d9539f4aea987e424c87b9c099ac485cbe15f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/comments", "author": null, "committer": null, "parents": [{"sha": "f3a8030a5bb6a347cdfd4c9fcedabb76bac54ea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a8030a5bb6a347cdfd4c9fcedabb76bac54ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a8030a5bb6a347cdfd4c9fcedabb76bac54ea5"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "69015e90b533fe19f227b3ffbed0fdba98635312", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "patch": "@@ -1,3 +1,12 @@\n+2001-04-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Makefile.in (gcse.o): Depend on params.h.\n+\t* gcse.c: Include params.h.\n+\t(gcse_main): Don't do GCSE if doing so will take inordinate\n+\tamounts of memory.\n+\t* params.def (PARAM_MAX_GCSE_MEMORY): New  parameter.\n+\t* params.h (MAX_GCSE_MEMORY): New macro.\n+\n 2001-04-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (insn-output.o): Depend on $(EXPR_H)."}, {"sha": "04757de7bc328238c0698b213424d1aba5eb6c21", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "patch": "@@ -1465,7 +1465,7 @@ cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h flags.h\n    $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h \\\n    flags.h real.h insn-config.h ggc.h $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n-   function.h output.h toplev.h $(TM_P_H)\n+   function.h output.h toplev.h $(TM_P_H) params.h\n sibcall.o : sibcall.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) function.h \\\n    hard-reg-set.h flags.h insn-config.h $(RECOG_H) $(BASIC_BLOCK_H)\n resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\"}, {"sha": "402e85e787efb22727c3852b7f10b1453794bbd9", "filename": "gcc/gcse.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "patch": "@@ -160,6 +160,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"function.h\"\n #include \"expr.h\" \n #include \"ggc.h\"\n+#include \"params.h\"\n \n #include \"obstack.h\"\n #define obstack_chunk_alloc gmalloc\n@@ -767,6 +768,19 @@ gcse_main (f, file)\n       return 0;\n     }\n \n+  /* If allocating memory for the cprop bitmap would take up too much\n+     storage it's better just to disable the optimization.  */\n+  if ((n_basic_blocks \n+       * SBITMAP_SET_SIZE (max_gcse_regno)\n+       * sizeof (SBITMAP_ELT_TYPE)) > MAX_GCSE_MEMORY)\n+    {\n+      if (warn_disabled_optimization)\n+\twarning (\"GCSE disabled: %d basic blocks and %d registers\",\n+\t\t n_basic_blocks, max_gcse_regno);\n+\n+      return 0;\n+    }\n+\n   /* See what modes support reg/reg copy operations.  */\n   if (! can_copy_init_p)\n     {"}, {"sha": "749414f6e9c5dd1d07be1146040c6472435ac715", "filename": "gcc/params.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "patch": "@@ -66,6 +66,13 @@ DEFPARAM(PARAM_MAX_DELAY_SLOT_LIVE_SEARCH,\n \t \"The maximum number of instructions to consider to find accurate live register information\",\n \t 333)\n \n+/* The GCSE optimization will be disabled if it would require\n+   significantly more memory than this value.  */\n+DEFPARAM(PARAM_MAX_GCSE_MEMORY,\n+\t \"max-gcse-memory\",\n+\t \"The maximum amount of memory to be allocated by GCSE\",\n+\t 50 * 1024 * 1024)\n+\n /*\n Local variables:\n mode:c"}, {"sha": "d97e7bbc396827faf7fb2e8fb83bf6b0c08a9eb7", "filename": "gcc/params.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=f1fa37ff6bbd4f760f7df6e60dd44cf731d79f44", "patch": "@@ -88,5 +88,7 @@ typedef enum compiler_param\n   PARAM_VALUE (PARAM_MAX_DELAY_SLOT_INSN_SEARCH)\n #define MAX_DELAY_SLOT_LIVE_SEARCH \\\n   PARAM_VALUE (PARAM_MAX_DELAY_SLOT_LIVE_SEARCH)\n+#define MAX_GCSE_MEMORY \\\n+  ((size_t) PARAM_VALUE (PARAM_MAX_GCSE_MEMORY))\n \n #endif /* PARAMS_H */"}]}