{"sha": "b7db11490f4928d6e15c7e2310e65b53225f0f21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkYjExNDkwZjQ5MjhkNmUxNWM3ZTIzMTBlNjViNTMyMjVmMGYyMQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-01-30T15:23:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-30T15:23:22Z"}, "message": "sem_prag.adb (Process_Import_Or_Interface): Warn if used in Pure unit.\n\n2015-01-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Process_Import_Or_Interface): Warn if used in\n\tPure unit.\n\t* s-valllu.ads (Scan_Raw_Long_Long_Unsigned): Clarify\n\tdocumentation for some special cases of invalid attempts at\n\tbased integers.\n\nFrom-SVN: r220287", "tree": {"sha": "4eb1670355e4d3c2c0879b68808e2f1817a2d85e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb1670355e4d3c2c0879b68808e2f1817a2d85e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7db11490f4928d6e15c7e2310e65b53225f0f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7db11490f4928d6e15c7e2310e65b53225f0f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7db11490f4928d6e15c7e2310e65b53225f0f21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7db11490f4928d6e15c7e2310e65b53225f0f21/comments", "author": null, "committer": null, "parents": [{"sha": "1db700c32b598f2b8cead592036713cbc69c8058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db700c32b598f2b8cead592036713cbc69c8058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db700c32b598f2b8cead592036713cbc69c8058"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "f9cbac4c1c1b2d1d4ea4192d02b9b0d59748e686", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7db11490f4928d6e15c7e2310e65b53225f0f21/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7db11490f4928d6e15c7e2310e65b53225f0f21/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b7db11490f4928d6e15c7e2310e65b53225f0f21", "patch": "@@ -1,3 +1,11 @@\n+2015-01-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Process_Import_Or_Interface): Warn if used in\n+\tPure unit.\n+\t* s-valllu.ads (Scan_Raw_Long_Long_Unsigned): Clarify\n+\tdocumentation for some special cases of invalid attempts at\n+\tbased integers.\n+\n 2015-01-30  Gary Dismukes  <dismukes@adacore.com>\n \n \t* errout.ads: Minor reformatting."}, {"sha": "612004accb4fcfec18a9dc9c7fa1cff16d8f09f6", "filename": "gcc/ada/s-valllu.ads", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7db11490f4928d6e15c7e2310e65b53225f0f21/gcc%2Fada%2Fs-valllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7db11490f4928d6e15c7e2310e65b53225f0f21/gcc%2Fada%2Fs-valllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.ads?ref=b7db11490f4928d6e15c7e2310e65b53225f0f21", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,13 +65,32 @@ package System.Val_LLU is\n    --  seem to imply that for a case like\n    --\n    --    8#12345670009#\n-\n+   --\n    --  the pointer should be left at the first # having scanned out the longest\n    --  valid integer literal (8), but in fact in this case the pointer points\n-   --  to the invalid based digit (9 in this case). Not only would the strict\n-   --  reading of the RM require unlimited backup, which is unreasonable, but\n-   --  in addition, the intepretation as given here is the one expected and\n-   --  enforced by the ACATS tests.\n+   --  past the final # and Constraint_Error is raised. This is the behavior\n+   --  expected for Text_IO and enforced by the ACATS tests.\n+   --\n+   --  If a based literal is malformed in that a character other than a valid\n+   --  hexadecimal digit is encountered during scanning out the digits after\n+   --  the # (this includes the case of using the wrong terminator, : instead\n+   --  of # or vice versa) there are two cases. If all the digits before the\n+   --  non-digit are in range of the base, as in\n+   --\n+   --    8#100x00#\n+   --    8#100:\n+   --\n+   --  then in this case, the \"base\" value before the initial # is returned as\n+   --  the result, and the pointer points to the initial # character on return.\n+   --\n+   --  If an out of range digit has been detected before the invalid character,\n+   --  as in:\n+   --\n+   --   8#900x00#\n+   --   8#900:\n+   --\n+   --  then the pointer is also left at the initial # character, but constraint\n+   --  error is raised reflecting the encounter of an out of range digit.\n    --\n    --  Note: if Str is empty, i.e. if Max is less than Ptr, then this is a\n    --  special case of an all-blank string, and Ptr is unchanged, and hence"}, {"sha": "bd236e5eee071cad5c709c57fb2e51807ccb4f74", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7db11490f4928d6e15c7e2310e65b53225f0f21/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7db11490f4928d6e15c7e2310e65b53225f0f21/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b7db11490f4928d6e15c7e2310e65b53225f0f21", "patch": "@@ -3169,7 +3169,7 @@ package body Sem_Prag is\n       --  Common processing for Share_Generic and Inline_Generic\n \n       procedure Process_Import_Or_Interface;\n-      --  Common processing for Import of Interface\n+      --  Common processing for Import or Interface\n \n       procedure Process_Import_Predefined_Type;\n       --  Processing for completing a type with pragma Import. This is used\n@@ -7742,6 +7742,8 @@ package body Sem_Prag is\n             Note_Possible_Modification (Get_Pragma_Arg (Arg2), Sure => False);\n          end if;\n \n+         --  Various error checks\n+\n          if Ekind_In (Def_Id, E_Variable, E_Constant) then\n \n             --  We do not permit Import to apply to a renaming declaration"}]}