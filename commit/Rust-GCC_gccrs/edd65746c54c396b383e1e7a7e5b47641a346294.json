{"sha": "edd65746c54c396b383e1e7a7e5b47641a346294", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRkNjU3NDZjNTRjMzk2YjM4M2UxZTdhN2U1YjQ3NjQxYTM0NjI5NA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2016-02-23T22:28:23Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-02-23T22:28:23Z"}, "message": "re PR target/69810 (PowerPC64: unrecognizable insn)\n\nPR target/69810\n* config/rs6000/rs6000.md (zero_extendqi<mode>2_dot): Convert from\ndefine_insn_and_split to define_insn.\n(zero_extendqi<mode>2_dot2): Same.\n(extendqi<mode>2_dot): Same.\n(extendqi<mode>2_dot2): Same.\n\nFrom-SVN: r233648", "tree": {"sha": "aeb1dad10c0d5241fe980e1022e3bc4ceb0b43e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb1dad10c0d5241fe980e1022e3bc4ceb0b43e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edd65746c54c396b383e1e7a7e5b47641a346294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd65746c54c396b383e1e7a7e5b47641a346294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd65746c54c396b383e1e7a7e5b47641a346294", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd65746c54c396b383e1e7a7e5b47641a346294/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25cc21998e546c9a84df754d428c61f79bd89cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cc21998e546c9a84df754d428c61f79bd89cd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cc21998e546c9a84df754d428c61f79bd89cd6"}], "stats": {"total": 53, "additions": 17, "deletions": 36}, "files": [{"sha": "0ba100dedf24f9165b0c939ebc43ba9ec1bc5677", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd65746c54c396b383e1e7a7e5b47641a346294/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd65746c54c396b383e1e7a7e5b47641a346294/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edd65746c54c396b383e1e7a7e5b47641a346294", "patch": "@@ -1,3 +1,12 @@\n+2016-02-23  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\tPR target/69810\n+\t* config/rs6000/rs6000.md (zero_extendqi<mode>2_dot): Convert from\n+\tdefine_insn_and_split to define_insn.\n+\t(zero_extendqi<mode>2_dot2): Same.\n+\t(extendqi<mode>2_dot): Same.\n+\t(extendqi<mode>2_dot2): Same.\n+\n 2016-02-23  Evandro Menezes  <e.menezes@samsung.com>\n \n \t* config/arm/exynos-m1.md: Change cost of STP, fix bypass for stores"}, {"sha": "0299a0002af2f99f0167f4d20021595eb4553e86", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 8, "deletions": 36, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd65746c54c396b383e1e7a7e5b47641a346294/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd65746c54c396b383e1e7a7e5b47641a346294/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=edd65746c54c396b383e1e7a7e5b47641a346294", "patch": "@@ -701,27 +701,20 @@\n    rlwinm %0,%1,0,0xff\"\n   [(set_attr \"type\" \"load,shift\")])\n \n-(define_insn_and_split \"*zero_extendqi<mode>2_dot\"\n+(define_insn \"*zero_extendqi<mode>2_dot\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:EXTQI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:EXTQI 0 \"=r,r\"))]\n   \"rs6000_gen_cell_microcode\"\n   \"@\n    andi. %0,%1,0xff\n-   #\"\n-  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n-  [(set (match_dup 0)\n-\t(zero_extend:EXTQI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\"\n+   rlwinm %0,%1,0,0xff\\;cmpwi %2,%0,0\"\n   [(set_attr \"type\" \"logical\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_insn_and_split \"*zero_extendqi<mode>2_dot2\"\n+(define_insn \"*zero_extendqi<mode>2_dot2\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:EXTQI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n@@ -730,14 +723,7 @@\n   \"rs6000_gen_cell_microcode\"\n   \"@\n    andi. %0,%1,0xff\n-   #\"\n-  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n-  [(set (match_dup 0)\n-\t(zero_extend:EXTQI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\"\n+   rlwinm %0,%1,0,0xff\\;cmpwi %2,%0,0\"\n   [(set_attr \"type\" \"logical\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n@@ -855,27 +841,20 @@\n   \"extsb %0,%1\"\n   [(set_attr \"type\" \"exts\")])\n \n-(define_insn_and_split \"*extendqi<mode>2_dot\"\n+(define_insn \"*extendqi<mode>2_dot\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (sign_extend:EXTQI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:EXTQI 0 \"=r,r\"))]\n   \"rs6000_gen_cell_microcode\"\n   \"@\n    extsb. %0,%1\n-   #\"\n-  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n-  [(set (match_dup 0)\n-\t(sign_extend:EXTQI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\"\n+   extsb %0,%1\\;cmpwi %2,%0,0\"\n   [(set_attr \"type\" \"exts\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_insn_and_split \"*extendqi<mode>2_dot2\"\n+(define_insn \"*extendqi<mode>2_dot2\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (sign_extend:EXTQI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n@@ -884,14 +863,7 @@\n   \"rs6000_gen_cell_microcode\"\n   \"@\n    extsb. %0,%1\n-   #\"\n-  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n-  [(set (match_dup 0)\n-\t(sign_extend:EXTQI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\"\n+   extsb %0,%1\\;cmpwi %2,%0,0\"\n   [(set_attr \"type\" \"exts\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])"}]}