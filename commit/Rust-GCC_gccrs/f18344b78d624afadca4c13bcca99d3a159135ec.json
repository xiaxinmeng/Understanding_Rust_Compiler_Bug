{"sha": "f18344b78d624afadca4c13bcca99d3a159135ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4MzQ0Yjc4ZDYyNGFmYWRjYTRjMTNiY2NhOTlkM2ExNTkxMzVlYw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-10-10T15:24:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-10-10T15:24:01Z"}, "message": "[Ada] 'others' in conditional_expressions\n\n2019-10-10  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Aggregate): Add missing cases in the\n\tOthers_Allowed => True case -- N_Case_Expression_Alternative and\n\tN_If_Expression.  Use Nkind_In.\n\t* atree.adb, atree.ads, sinfo.adb, sinfo.ads (Nkind_In): New\n\t16-parameter version.\n\nFrom-SVN: r276824", "tree": {"sha": "27068cb55425ff33c680533d0eea4acfae4b3f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27068cb55425ff33c680533d0eea4acfae4b3f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18344b78d624afadca4c13bcca99d3a159135ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18344b78d624afadca4c13bcca99d3a159135ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18344b78d624afadca4c13bcca99d3a159135ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18344b78d624afadca4c13bcca99d3a159135ec/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a096f12eae91f891ef17687a9c48fee3de0b2fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a096f12eae91f891ef17687a9c48fee3de0b2fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a096f12eae91f891ef17687a9c48fee3de0b2fdd"}], "stats": {"total": 163, "additions": 135, "deletions": 28}, "files": [{"sha": "4685380588f51d6b9579bda0bb6e4cd5f414abe4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f18344b78d624afadca4c13bcca99d3a159135ec", "patch": "@@ -1,6 +1,7 @@\n-2019-10-10  Ed Schonberg  <schonberg@adacore.com>\n+2019-10-10  Bob Duff  <duff@adacore.com>\n \n-\t* sem_aggr.adb (Resolve_Array_Aggregate): Set properly the\n-\tPredicated_Parent link of an itype created for an aggregate, so\n-\tthat the predicate_function of the parent can support proofs on\n-\tthe object that it initializes.\n\\ No newline at end of file\n+\t* sem_aggr.adb (Resolve_Aggregate): Add missing cases in the\n+\tOthers_Allowed => True case -- N_Case_Expression_Alternative and\n+\tN_If_Expression.  Use Nkind_In.\n+\t* atree.adb, atree.ads, sinfo.adb, sinfo.ads (Nkind_In): New\n+\t16-parameter version.\n\\ No newline at end of file"}, {"sha": "ef1d885c76c138e4ad11a80a2d9b3102a508b09c", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=f18344b78d624afadca4c13bcca99d3a159135ec", "patch": "@@ -1924,6 +1924,30 @@ package body Atree is\n                                   V11);\n    end Nkind_In;\n \n+   function Nkind_In\n+     (N   : Node_Id;\n+      V1  : Node_Kind;\n+      V2  : Node_Kind;\n+      V3  : Node_Kind;\n+      V4  : Node_Kind;\n+      V5  : Node_Kind;\n+      V6  : Node_Kind;\n+      V7  : Node_Kind;\n+      V8  : Node_Kind;\n+      V9  : Node_Kind;\n+      V10 : Node_Kind;\n+      V11 : Node_Kind;\n+      V12 : Node_Kind;\n+      V13 : Node_Kind;\n+      V14 : Node_Kind;\n+      V15 : Node_Kind;\n+      V16 : Node_Kind) return Boolean\n+   is\n+   begin\n+      return Nkind_In (Nkind (N), V1, V2, V3, V4, V5, V6, V7, V8, V9, V10,\n+                                  V11, V12, V13, V14, V15, V16);\n+   end Nkind_In;\n+\n    --------\n    -- No --\n    --------"}, {"sha": "e6617e9d4beec613f22737d31c7a7cc5359ae0c2", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=f18344b78d624afadca4c13bcca99d3a159135ec", "patch": "@@ -780,6 +780,27 @@ package Atree is\n       V10 : Node_Kind;\n       V11 : Node_Kind) return Boolean;\n \n+   --  12..15-parameter versions are not yet needed\n+\n+   function Nkind_In\n+     (N   : Node_Id;\n+      V1  : Node_Kind;\n+      V2  : Node_Kind;\n+      V3  : Node_Kind;\n+      V4  : Node_Kind;\n+      V5  : Node_Kind;\n+      V6  : Node_Kind;\n+      V7  : Node_Kind;\n+      V8  : Node_Kind;\n+      V9  : Node_Kind;\n+      V10 : Node_Kind;\n+      V11 : Node_Kind;\n+      V12 : Node_Kind;\n+      V13 : Node_Kind;\n+      V14 : Node_Kind;\n+      V15 : Node_Kind;\n+      V16 : Node_Kind) return Boolean;\n+\n    pragma Inline (Nkind_In);\n    --  Inline all above functions\n "}, {"sha": "d6d7c5967aef5101cb3e3997b94104f318b382b5", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=f18344b78d624afadca4c13bcca99d3a159135ec", "patch": "@@ -893,7 +893,6 @@ package body Sem_Aggr is\n \n    procedure Resolve_Aggregate (N : Node_Id; Typ : Entity_Id) is\n       Loc   : constant Source_Ptr := Sloc (N);\n-      Pkind : constant Node_Kind  := Nkind (Parent (N));\n \n       Aggr_Subtyp : Entity_Id;\n       --  The actual aggregate subtype. This is not necessarily the same as Typ\n@@ -1078,16 +1077,17 @@ package body Sem_Aggr is\n             --  permit it, or the aggregate type is unconstrained, an OTHERS\n             --  choice is not allowed (except that it is always allowed on the\n             --  right-hand side of an assignment statement; in this case the\n-            --  constrainedness of the type doesn't matter).\n+            --  constrainedness of the type doesn't matter, because an array\n+            --  object is always constrained).\n \n             --  If expansion is disabled (generic context, or semantics-only\n             --  mode) actual subtypes cannot be constructed, and the type of an\n             --  object may be its unconstrained nominal type. However, if the\n-            --  context is an assignment, we assume that OTHERS is allowed,\n-            --  because the target of the assignment will have a constrained\n-            --  subtype when fully compiled. Ditto if the context is an\n-            --  initialization procedure where a component may have a predicate\n-            --  function that carries the base type.\n+            --  context is an assignment statement, OTHERS is allowed, because\n+            --  the target of the assignment will have a constrained subtype\n+            --  when fully compiled. Ditto if the context is an initialization\n+            --  procedure where a component may have a predicate function that\n+            --  carries the base type.\n \n             --  Note that there is no node for Explicit_Actual_Parameter.\n             --  To test for this context we therefore have to test for node\n@@ -1101,24 +1101,26 @@ package body Sem_Aggr is\n \n             Set_Etype (N, Aggr_Typ);  --  May be overridden later on\n \n-            if Pkind = N_Assignment_Statement\n+            if Nkind (Parent (N)) = N_Assignment_Statement\n               or else Inside_Init_Proc\n               or else (Is_Constrained (Typ)\n-                        and then\n-                          (Pkind = N_Parameter_Association     or else\n-                           Pkind = N_Function_Call             or else\n-                           Pkind = N_Procedure_Call_Statement  or else\n-                           Pkind = N_Generic_Association       or else\n-                           Pkind = N_Formal_Object_Declaration or else\n-                           Pkind = N_Simple_Return_Statement   or else\n-                           Pkind = N_Object_Declaration        or else\n-                           Pkind = N_Component_Declaration     or else\n-                           Pkind = N_Parameter_Specification   or else\n-                           Pkind = N_Qualified_Expression      or else\n-                           Pkind = N_Reference                 or else\n-                           Pkind = N_Aggregate                 or else\n-                           Pkind = N_Extension_Aggregate       or else\n-                           Pkind = N_Component_Association))\n+                        and then Nkind_In (Parent (N),\n+                                           N_Parameter_Association,\n+                                           N_Function_Call,\n+                                           N_Procedure_Call_Statement,\n+                                           N_Generic_Association,\n+                                           N_Formal_Object_Declaration,\n+                                           N_Simple_Return_Statement,\n+                                           N_Object_Declaration,\n+                                           N_Component_Declaration,\n+                                           N_Parameter_Specification,\n+                                           N_Qualified_Expression,\n+                                           N_Reference,\n+                                           N_Aggregate,\n+                                           N_Extension_Aggregate,\n+                                           N_Component_Association,\n+                                           N_Case_Expression_Alternative,\n+                                           N_If_Expression))\n             then\n                Aggr_Resolved :=\n                  Resolve_Array_Aggregate"}, {"sha": "2689ebe281068e1080a3d8eb5f13322c16dc7453", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=f18344b78d624afadca4c13bcca99d3a159135ec", "patch": "@@ -7295,6 +7295,44 @@ package body Sinfo is\n              T = V11;\n    end Nkind_In;\n \n+   function Nkind_In\n+     (T   : Node_Kind;\n+      V1  : Node_Kind;\n+      V2  : Node_Kind;\n+      V3  : Node_Kind;\n+      V4  : Node_Kind;\n+      V5  : Node_Kind;\n+      V6  : Node_Kind;\n+      V7  : Node_Kind;\n+      V8  : Node_Kind;\n+      V9  : Node_Kind;\n+      V10 : Node_Kind;\n+      V11 : Node_Kind;\n+      V12 : Node_Kind;\n+      V13 : Node_Kind;\n+      V14 : Node_Kind;\n+      V15 : Node_Kind;\n+      V16 : Node_Kind) return Boolean\n+   is\n+   begin\n+      return T = V1  or else\n+             T = V2  or else\n+             T = V3  or else\n+             T = V4  or else\n+             T = V5  or else\n+             T = V6  or else\n+             T = V7  or else\n+             T = V8  or else\n+             T = V9  or else\n+             T = V10 or else\n+             T = V11 or else\n+             T = V12 or else\n+             T = V13 or else\n+             T = V14 or else\n+             T = V15 or else\n+             T = V16;\n+   end Nkind_In;\n+\n    --------------------------\n    -- Pragma_Name_Unmapped --\n    --------------------------"}, {"sha": "5a920669b62f0a4ff71ae2e0db7fe048aa303250", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18344b78d624afadca4c13bcca99d3a159135ec/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=f18344b78d624afadca4c13bcca99d3a159135ec", "patch": "@@ -11574,6 +11574,27 @@ package Sinfo is\n       V10 : Node_Kind;\n       V11 : Node_Kind) return Boolean;\n \n+   --  12..15-parameter versions are not yet needed\n+\n+   function Nkind_In\n+     (T   : Node_Kind;\n+      V1  : Node_Kind;\n+      V2  : Node_Kind;\n+      V3  : Node_Kind;\n+      V4  : Node_Kind;\n+      V5  : Node_Kind;\n+      V6  : Node_Kind;\n+      V7  : Node_Kind;\n+      V8  : Node_Kind;\n+      V9  : Node_Kind;\n+      V10 : Node_Kind;\n+      V11 : Node_Kind;\n+      V12 : Node_Kind;\n+      V13 : Node_Kind;\n+      V14 : Node_Kind;\n+      V15 : Node_Kind;\n+      V16 : Node_Kind) return Boolean;\n+\n    pragma Inline (Nkind_In);\n    --  Inline all above functions\n "}]}