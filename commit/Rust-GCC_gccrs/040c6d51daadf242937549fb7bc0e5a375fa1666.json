{"sha": "040c6d51daadf242937549fb7bc0e5a375fa1666", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwYzZkNTFkYWFkZjI0MjkzNzU0OWZiN2JjMGU1YTM3NWZhMTY2Ng==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-09-17T11:11:58Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-09-17T11:11:58Z"}, "message": "re PR middle-end/41347 (ICE with -O3 or '-O2 -finline-functions')\n\n\tPR middle-end/41347\n\t* tree.c (build_type_attribute_qual_variant): Export.\n\t* tree.h (build_type_attribute_qual_variant): Declare.\n\t* tree-inline.c (remap_type_1): Use it to build variants with\n\tthe original qualifiers and attributes.\n\ntestsuite/\n\t* gfortran.dg/pr41347.f90: New test.\n\nFrom-SVN: r151799", "tree": {"sha": "6faf3b30da5c11513bde779849161da980479ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6faf3b30da5c11513bde779849161da980479ec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040c6d51daadf242937549fb7bc0e5a375fa1666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040c6d51daadf242937549fb7bc0e5a375fa1666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040c6d51daadf242937549fb7bc0e5a375fa1666", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040c6d51daadf242937549fb7bc0e5a375fa1666/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0714aafa1fd25aa1524869f4284b752e1a0e3161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0714aafa1fd25aa1524869f4284b752e1a0e3161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0714aafa1fd25aa1524869f4284b752e1a0e3161"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "7a31855336b2bf1a4f18a4e9e0e31561fd9037c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040c6d51daadf242937549fb7bc0e5a375fa1666", "patch": "@@ -1,3 +1,11 @@\n+2009-09-17  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/41347\n+\t* tree.c (build_type_attribute_qual_variant): Export.\n+\t* tree.h (build_type_attribute_qual_variant): Declare.\n+\t* tree-inline.c (remap_type_1): Use it to build variants with\n+\tthe original qualifiers and attributes.\n+\n 2009-09-17  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* cfglayout.c (fixup_reorder_chain): Accept conditional jumps"}, {"sha": "691e328af1d72e3624a49c1fa76910d26e8da02d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=040c6d51daadf242937549fb7bc0e5a375fa1666", "patch": "@@ -1,3 +1,8 @@\n+2009-09-17  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/41347\n+\t* gfortran.dg/pr41347.f90: New test.\n+\n 2009-09-17  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* gcc.c-torture/compile/20090917-1.c: New testcase."}, {"sha": "ae48857d50731fe2695bc33eb4a24261f906331b", "filename": "gcc/testsuite/gfortran.dg/pr41347.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr41347.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr41347.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr41347.f90?ref=040c6d51daadf242937549fb7bc0e5a375fa1666", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+module hsl_ma41_m\n+\n+   implicit none\n+\n+   contains\n+\n+      subroutine solve_ma41\n+         integer, dimension(20) :: info\n+         call prininfo(15, info)\n+      end subroutine solve_ma41\n+\n+      subroutine prininfo (ni, info)\n+         integer, intent(in) ::  ni\n+         integer, intent(in), dimension(:) :: info\n+\n+         integer i\n+\n+         call prinfo\n+\n+         contains\n+\n+            subroutine prinfo\n+               do i = 1, ni\n+                  write(*,'(i5,1x,i0)') i, info(i)\n+               end do\n+            end subroutine prinfo\n+\n+      end subroutine prininfo\n+\n+end module hsl_ma41_m"}, {"sha": "feb749985c23147035d9800e01e172fa9d3af244", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=040c6d51daadf242937549fb7bc0e5a375fa1666", "patch": "@@ -342,6 +342,10 @@ remap_type_1 (tree type, copy_body_data *id)\n       new_tree = build_pointer_type_for_mode (remap_type (TREE_TYPE (type), id),\n \t\t\t\t\t TYPE_MODE (type),\n \t\t\t\t\t TYPE_REF_CAN_ALIAS_ALL (type));\n+      if (TYPE_ATTRIBUTES (type) || TYPE_QUALS (type))\n+\tnew_tree = build_type_attribute_qual_variant (new_tree,\n+\t\t\t\t\t\t      TYPE_ATTRIBUTES (type),\n+\t\t\t\t\t\t      TYPE_QUALS (type));\n       insert_decl_map (id, type, new_tree);\n       return new_tree;\n     }\n@@ -350,6 +354,10 @@ remap_type_1 (tree type, copy_body_data *id)\n       new_tree = build_reference_type_for_mode (remap_type (TREE_TYPE (type), id),\n \t\t\t\t\t    TYPE_MODE (type),\n \t\t\t\t\t    TYPE_REF_CAN_ALIAS_ALL (type));\n+      if (TYPE_ATTRIBUTES (type) || TYPE_QUALS (type))\n+\tnew_tree = build_type_attribute_qual_variant (new_tree,\n+\t\t\t\t\t\t      TYPE_ATTRIBUTES (type),\n+\t\t\t\t\t\t      TYPE_QUALS (type));\n       insert_decl_map (id, type, new_tree);\n       return new_tree;\n     }"}, {"sha": "846dd983ea774ccdfeb414e5b31dd3b87c74a091", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=040c6d51daadf242937549fb7bc0e5a375fa1666", "patch": "@@ -4034,7 +4034,7 @@ iterative_hash_host_wide_int (HOST_WIDE_INT val, hashval_t val2)\n \n    Record such modified types already made so we don't make duplicates.  */\n \n-static tree\n+tree\n build_type_attribute_qual_variant (tree ttype, tree attribute, int quals)\n {\n   if (! attribute_list_equal (TYPE_ATTRIBUTES (ttype), attribute))"}, {"sha": "afb1d4260a08a47a4eb2b408982042c77355dae4", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040c6d51daadf242937549fb7bc0e5a375fa1666/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=040c6d51daadf242937549fb7bc0e5a375fa1666", "patch": "@@ -3997,6 +3997,7 @@ extern tree make_tree (tree, rtx);\n \n extern tree build_type_attribute_variant (tree, tree);\n extern tree build_decl_attribute_variant (tree, tree);\n+extern tree build_type_attribute_qual_variant (tree, tree, int);\n \n /* Structure describing an attribute and a function to handle it.  */\n struct attribute_spec"}]}