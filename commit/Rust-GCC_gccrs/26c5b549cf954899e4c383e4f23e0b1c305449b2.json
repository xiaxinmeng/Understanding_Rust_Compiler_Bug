{"sha": "26c5b549cf954899e4c383e4f23e0b1c305449b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjNWI1NDljZjk1NDg5OWU0YzM4M2U0ZjIzZTBiMWMzMDU0NDliMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-07-17T11:44:54Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-07-17T11:44:54Z"}, "message": "Do not allow -fgnu-tm w/ -fsanitize={kernel-,}address (PR sanitizer/81302).\n\n2017-07-17  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/81302\n\t* opts.c (finish_options): Do not allow -fgnu-tm\n\tw/ -fsanitize={kernel-,}address.  Say sorry.\n\nFrom-SVN: r250271", "tree": {"sha": "2d0b3bb9ecb59da52e87b8ff753f0b8fa951d255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d0b3bb9ecb59da52e87b8ff753f0b8fa951d255"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26c5b549cf954899e4c383e4f23e0b1c305449b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c5b549cf954899e4c383e4f23e0b1c305449b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c5b549cf954899e4c383e4f23e0b1c305449b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c5b549cf954899e4c383e4f23e0b1c305449b2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ff37519800c8826818929eccef30412bc530483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff37519800c8826818929eccef30412bc530483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff37519800c8826818929eccef30412bc530483"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "f241a89ad2cc5881cdc18ab7f140f4bcc10aa877", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c5b549cf954899e4c383e4f23e0b1c305449b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c5b549cf954899e4c383e4f23e0b1c305449b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26c5b549cf954899e4c383e4f23e0b1c305449b2", "patch": "@@ -1,3 +1,9 @@\n+2017-07-17  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/81302\n+\t* opts.c (finish_options): Do not allow -fgnu-tm\n+\tw/ -fsanitize={kernel-,}address.  Say sorry.\n+\n 2017-07-17  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR target/81369"}, {"sha": "3182bc99d65f40815cf838922d1e6ab027614eba", "filename": "gcc/opts.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c5b549cf954899e4c383e4f23e0b1c305449b2/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c5b549cf954899e4c383e4f23e0b1c305449b2/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=26c5b549cf954899e4c383e4f23e0b1c305449b2", "patch": "@@ -1005,6 +1005,13 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n \n       opts->x_flag_stack_reuse = SR_NONE;\n     }\n+\n+  if ((opts->x_flag_sanitize & SANITIZE_USER_ADDRESS) && opts->x_flag_tm)\n+    sorry (\"transactional memory is not supported with %<-fsanitize=address%>\");\n+\n+  if ((opts->x_flag_sanitize & SANITIZE_KERNEL_ADDRESS) && opts->x_flag_tm)\n+    sorry (\"transactional memory is not supported with \"\n+\t   \"%<-fsanitize=kernel-address%>\");\n }\n \n #define LEFT_COLUMN\t27"}]}