{"sha": "d23455ce238122c20c4fa81fa55eeb9ad1d938ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzNDU1Y2UyMzgxMjJjMjBjNGZhODFmYTU1ZWViOWFkMWQ5MzhlZQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-04-06T11:10:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:46Z"}, "message": "[Ada] Rewrite Validated_View in recursive style\n\ngcc/ada/\n\n\t* sem_util.ads (Validated_View): Fix style in comment.\n\t* sem_util.adb (Validated_View): Rewrite in recursive style.", "tree": {"sha": "8aeac1498baa3721af240d24e359c463dcd7ae27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8aeac1498baa3721af240d24e359c463dcd7ae27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d23455ce238122c20c4fa81fa55eeb9ad1d938ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23455ce238122c20c4fa81fa55eeb9ad1d938ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23455ce238122c20c4fa81fa55eeb9ad1d938ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23455ce238122c20c4fa81fa55eeb9ad1d938ee/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d94afa43f7c21c9625fd636903f490cc474b444d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94afa43f7c21c9625fd636903f490cc474b444d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94afa43f7c21c9625fd636903f490cc474b444d"}], "stats": {"total": 46, "additions": 20, "deletions": 26}, "files": [{"sha": "169825ec03065cbb768b15e9559c993bfca0876c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 19, "deletions": 25, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23455ce238122c20c4fa81fa55eeb9ad1d938ee/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23455ce238122c20c4fa81fa55eeb9ad1d938ee/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d23455ce238122c20c4fa81fa55eeb9ad1d938ee", "patch": "@@ -29471,42 +29471,36 @@ package body Sem_Util is\n    --------------------\n \n    function Validated_View (Typ : Entity_Id) return Entity_Id is\n-      Continue : Boolean;\n-      Val_Typ  : Entity_Id;\n-\n    begin\n-      Continue := True;\n-      Val_Typ  := Base_Type (Typ);\n-\n       --  Obtain the full view of the input type by stripping away concurrency,\n       --  derivations, and privacy.\n \n-      while Continue loop\n-         Continue := False;\n-\n-         if Is_Concurrent_Type (Val_Typ) then\n-            if Present (Corresponding_Record_Type (Val_Typ)) then\n-               Continue := True;\n-               Val_Typ  := Corresponding_Record_Type (Val_Typ);\n+      if Is_Base_Type (Typ) then\n+         if Is_Concurrent_Type (Typ) then\n+            if Present (Corresponding_Record_Type (Typ)) then\n+               return Corresponding_Record_Type (Typ);\n+            else\n+               return Typ;\n             end if;\n \n-         elsif Is_Derived_Type (Val_Typ) then\n-            Continue := True;\n-            Val_Typ  := Etype (Val_Typ);\n+         elsif Is_Derived_Type (Typ) then\n+            return Validated_View (Etype (Typ));\n \n-         elsif Is_Private_Type (Val_Typ) then\n-            if Present (Underlying_Full_View (Val_Typ)) then\n-               Continue := True;\n-               Val_Typ  := Underlying_Full_View (Val_Typ);\n+         elsif Is_Private_Type (Typ) then\n+            if Present (Underlying_Full_View (Typ)) then\n+               return Validated_View (Underlying_Full_View (Typ));\n \n-            elsif Present (Full_View (Val_Typ)) then\n-               Continue := True;\n-               Val_Typ  := Full_View (Val_Typ);\n+            elsif Present (Full_View (Typ)) then\n+               return Validated_View (Full_View (Typ));\n+            else\n+               return Typ;\n             end if;\n          end if;\n-      end loop;\n \n-      return Val_Typ;\n+         return Typ;\n+      else\n+         return Validated_View (Base_Type (Typ));\n+      end if;\n    end Validated_View;\n \n    -----------------------"}, {"sha": "f9db80ea496c45b7ce2473b50732087212e18664", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23455ce238122c20c4fa81fa55eeb9ad1d938ee/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23455ce238122c20c4fa81fa55eeb9ad1d938ee/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=d23455ce238122c20c4fa81fa55eeb9ad1d938ee", "patch": "@@ -3290,7 +3290,7 @@ package Sem_Util is\n \n    function Validated_View (Typ : Entity_Id) return Entity_Id;\n    --  Obtain the \"validated view\" of arbitrary type Typ which is suitable for\n-   --  verification by attributes 'Valid_Scalars. This view is the type itself\n+   --  verification by attribute 'Valid_Scalars. This view is the type itself\n    --  or its full view while stripping away concurrency, derivations, and\n    --  privacy.\n "}]}