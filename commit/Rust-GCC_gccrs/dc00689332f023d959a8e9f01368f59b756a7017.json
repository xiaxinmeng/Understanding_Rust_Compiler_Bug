{"sha": "dc00689332f023d959a8e9f01368f59b756a7017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwMDY4OTMzMmYwMjNkOTU5YThlOWYwMTM2OGY1OWI3NTZhNzAxNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-18T05:33:51Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-18T05:35:25Z"}, "message": "Go testsuite: handle +build lines correctly\n\nUpdate the Go testsuite driver to handle +build lines as is done in\nthe upstream repo, and update some tests to the upstream repo copy\nusing +build lines with \"gc\" and \"!gccgo\" as appropriate.\n\n\t* go.test/go-test.exp (go-set-goos): New procedure.\n\t(go-gc-match): New procedure.\n\t(go-gc-tests): Call go-set-goos.  Use go-gc-match to handle +build\n\tlines.  Look for +build lines beyond first line of file.", "tree": {"sha": "9ff4375c067bf5455161a072e34810b335b0c478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ff4375c067bf5455161a072e34810b335b0c478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc00689332f023d959a8e9f01368f59b756a7017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc00689332f023d959a8e9f01368f59b756a7017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc00689332f023d959a8e9f01368f59b756a7017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc00689332f023d959a8e9f01368f59b756a7017/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddb9c661c2f1040a2fe569098fce09f44ab05b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb9c661c2f1040a2fe569098fce09f44ab05b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb9c661c2f1040a2fe569098fce09f44ab05b52"}], "stats": {"total": 192, "additions": 119, "deletions": 73}, "files": [{"sha": "c7d5c724f9bc553e6d30529689e4de325e97f689", "filename": "gcc/testsuite/go.test/go-test.exp", "status": "modified", "additions": 102, "deletions": 45, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -255,6 +255,53 @@ proc go-set-goarch { } {\n     setenv GOARCH $goarch\n }\n \n+# This be kept in sync with libgo/configure.ac.\n+proc go-set-goos { } {\n+    global target_triplet\n+\n+    switch -glob $target_triplet {\n+\t\"*-*-darwin*\" {\n+\t    set goos \"darwin\"\n+\t}\n+\t\"*-*-freebsd*\" {\n+\t    set goos \"freebsd\"\n+\t}\n+\t\"*-*-irix6*\" {\n+\t    set goos \"irix\"\n+\t}\n+\t\"*-*-linux*\" {\n+\t    set goos \"linux\"\n+\t}\n+\t\"*-*-netbsd*\" {\n+\t    set goos \"netbsd\"\n+\t}\n+\t\"*-*-openbsd*\" {\n+\t    set goos \"openbsd\"\n+\t}\n+\t\"*-*-dragonfly*\" {\n+\t    set goos \"dragonfly\"\n+\t}\n+\t\"*-*-rtems*\" {\n+\t    set goos \"rtems\"\n+\t}\n+\t\"*-*-solaris2*\" {\n+\t    set goos \"solaris\"\n+\t}\n+\t\"*-*-aix*\" {\n+\t    set goos \"aix\"\n+\t}\n+\t\"*-*-gnu*\" {\n+\t    set goos \"hurd\"\n+\t}\n+\tdefault {\n+\t    perror \"$target_triplet: unhandled GOOS\"\n+\t    return\n+\t}\n+    }\n+    verbose -log \"Setting GOOS=$goos\" 1\n+    setenv GOOS $goos\n+}\n+\n # Take a list of files and return a lists of lists, where each list is\n # the set of files in the same package.\n proc go-find-packages { test name files } {\n@@ -291,6 +338,27 @@ proc go-find-packages { test name files } {\n     return $packages\n }\n \n+proc go-gc-match { name } {\n+    verbose -log \"go-gc-match $name\"\n+    set idx [string first \",\" $name]\n+    if { $idx >= 0 } {\n+\tset left [string range $name 0 [expr $idx - 1]]\n+\tset right [string range $name [expr $idx + 1] end]\n+\treturn [expr [go-gc-match $left] && [go-gc-match $right]]\n+    }\n+    if { [string index $name 0] == \"!\" && [string index $name 1] == \"!\" } {\n+\treturn 0\n+    }\n+    if { [string index $name 0] == \"!\" } {\n+\treturn [expr ! [go-gc-match [string range $name 1 end]]]\n+    }\n+    if { $name == [getenv GOARCH] || $name == [getenv GOOS] || $name == \"gccgo\" } {\n+\treturn 1\n+    }\n+\n+    return 0\n+}\n+\n proc go-gc-tests { } {\n     global srcdir subdir\n     global runtests\n@@ -311,8 +379,9 @@ proc go-gc-tests { } {\n     set options \"\"\n     lappend options \"additional_flags=$DEFAULT_GOCFLAGS\"\n \n-    # Set GOARCH for tests that need it.\n+    # Set GOARCH and GOOS for tests that need it.\n     go-set-goarch\n+    go-set-goos\n \n     # Running all the torture options takes too long and, since the\n     # frontend ignores the standard options, it doesn't significantly\n@@ -432,73 +501,61 @@ proc go-gc-tests { } {\n \n \tset lines_ok 1\n \n+\tset test_line \"\"\n \twhile 1 {\n-\t    if { [gets $fd test_line] < 0 } {\n-\t\tclose $fd\n-\t\tclone_output \"$test: could not read first line\"\n+\t    if { [gets $fd file_line] < 0 } {\n+\t\tif [eof $fd] {\n+\t\t    break\n+\t\t}\n+\t\tclone_output \"$test: read failed\"\n \t\tunresolved $name\n \t\tset lines_ok 0\n \t\tbreak\n \t    }\n \n-\t    if { [ string match \"*nacl*exit 0*\" $test_line ] \\\n-\t\t     || [ string match \"*exit 0*nacl*\" $test_line ] \\\n-\t\t     || [ string match \"*Android*exit 0*\" $test_line ] \\\n-\t\t     || [ string match \"*exit 0*Android*\" $test_line ] \\\n-\t\t     || [ string match \"*\\\"\\$GOOS\\\" == windows*\" $test_line ] } {\n+\t    if { [ string match \"*nacl*exit 0*\" $file_line ] \\\n+\t\t     || [ string match \"*exit 0*nacl*\" $file_line ] \\\n+\t\t     || [ string match \"*Android*exit 0*\" $file_line ] \\\n+\t\t     || [ string match \"*exit 0*Android*\" $file_line ] \\\n+\t\t     || [ string match \"*\\\"\\$GOOS\\\" == windows*\" $file_line ] } {\n \t\tcontinue\n \t    }\n \n-\t    if { [ string match \"// +build *\" $test_line ] } {\n-\t\tset matches_pos 0\n-\t\tset matches_neg 0\n-\t\tif { [ regexp -line \"\\[ \t\\][getenv GOARCH]\\(\\[ \t\\]\\|\\$\\)\" $test_line ] } {\n-\t\t    set matches_pos 1\n-\t\t} elseif { [ regexp -line \"\\[ \t\\]\\![getenv GOARCH]\\(\\[ \t\\]\\|\\$\\)\" $test_line ] } {\n-\t\t    set matches_neg 1\n-\t\t} elseif { [ regexp -line \"\\[ \t\\]linux\\(\\[ \t\\]\\|\\$\\)\" $test_line ] } {\n-\t\t    set matches_pos 1\n-\t\t} elseif { [ regexp -line \"\\[ \t\\]\\!linux\\(\\[ \t\\]\\|\\$\\)\" $test_line ] } {\n-\t\t    set matches_neg 1\n-\t\t} elseif { [ regexp -line \"\\[ \t\\]\\!windows\\(\\[ \t\\]\\|\\$\\)\" $test_line ] } {\n-\t\t    set matches_pos 1\n-\t\t} elseif { [ regexp -line \"\\[ \t\\]windows\\(\\[ \t\\]\\|\\$\\)\" $test_line ] } {\n-\t\t    set matches_neg 1\n+\t    if ![string match \"// *\" $file_line] {\n+\t\tif { $file_line != \"\" } {\n+\t\t    break\n \t\t}\n-\t\tif { $matches_pos == 1 && $matches_neg == 0 } {\n+\t\tcontinue\n+\t    }\n+\n+\t    if { [ string match \"// +build *\" $file_line ] } {\n+\t\tset words [split $file_line]\n+\t\tset matches 0\n+\t\tfor { set idx 2 } { $idx < [llength $words] } { incr idx } {\n+\t\t    if { [go-gc-match [lindex $words $idx]] } {\n+\t\t\tset matches 1\n+\t\t\tbreak\n+\t\t    }\n+\t\t}\n+\t\tif { $matches == 1 } {\n \t\t    continue\n \t\t}\n-\t\tclose $fd\n \t\tunsupported $name\n \t\tset lines_ok 0\n+\t\tbreak\n \t    }\n \n-\t    break\n-\t}\n-\n-\tif { $lines_ok == 0 } {\n-\t    continue\n+\t    if { $test_line == \"\" } {\n+\t\tset test_line $file_line\n+\t    }\n \t}\n \n-\tset lineno 1\n-\tset test_line1 $test_line\n+\tclose $fd\n \n-\twhile { [eval \"string match \\\"//*&&\\\" \\${test_line$lineno}\"] } {\n-\t    set lineno [expr $lineno + 1]\n-\t    if { [eval \"gets \\$fd test_line$lineno\"] < 0 } {\n-\t\tclose $fd\n-\t\tclone_output \"$test: could not read line $lineno\"\n-\t\tunresolved $name\n-\t\tset lines_ok 0\n-\t\tbreak\n-\t    }\n-\t}\n \tif { $lines_ok == 0 } {\n \t    continue\n \t}\n \n-\tclose $fd\n-\n \t# runtest_file_p is already run above, and the code below can run\n \t# runtest_file_p again, make sure everything for this test is\n \t# performed if the above runtest_file_p decided this runtest"}, {"sha": "a2ab661277a38ff40b45c1c73232d25502f91bb5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug302.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js\n+// +build !nacl,!js,gc\n // run\n \n // Copyright 2010 The Go Authors. All rights reserved."}, {"sha": "83f638d04632af0dafaff07c4c6324fad14c79b7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug369.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js,!windows\n+// +build !nacl,!js,!windows,gc\n // run\n \n // Copyright 2011 The Go Authors. All rights reserved."}, {"sha": "448a37dcac24d6ec6c5a0b21ab554224805b614a", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue10607.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue10607.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue10607.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue10607.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build linux,!ppc64,!riscv64\n+// +build linux,!ppc64,!riscv64,gc\n // run\n \n // Copyright 2015 The Go Authors. All rights reserved."}, {"sha": "c95dd6ba3965849ac2432eaa1494a67d209dc972", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue11771.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue11771.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue11771.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue11771.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js\n+// +build !nacl,!js,gc\n // run\n \n // Copyright 2015 The Go Authors. All rights reserved."}, {"sha": "53a82d5074ab97af601fee7bcb70ba84d60ff67a", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue13268.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue13268.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue13268.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue13268.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,3 +1,4 @@\n+// +build gc\n // run\n \n // Copyright 2015 The Go Authors. All rights reserved."}, {"sha": "06fd193dae0ba1d8c60085f7511b618887248646", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue14636.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue14636.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue14636.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue14636.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js,!android\n+// +build !nacl,!js,!android,gc\n // run\n \n // Copyright 2016 The Go Authors. All rights reserved."}, {"sha": "68104a9000795d835154d476a840c5dc95429220", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue16037_run.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue16037_run.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue16037_run.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue16037_run.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js,!android\n+// +build !nacl,!js,!android,!gccgo\n // run\n \n // Copyright 2016 The Go Authors. All rights reserved."}, {"sha": "bab409c6c03cc86d64ae51ef3bb51a09d77f2d6a", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue19658.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue19658.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue19658.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue19658.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js\n+// +build !nacl,!js,!gccgo\n // run\n \n // Copyright 2017 The Go Authors. All rights reserved."}, {"sha": "32b660c1639169262c16826024369d3e04d0a088", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue21317.go", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21317.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21317.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21317.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,3 +1,4 @@\n+// +build !js,gc\n // run\n \n // Copyright 2017 The Go Authors. All rights reserved.\n@@ -16,15 +17,10 @@ import (\n \t\"log\"\n \t\"os\"\n \t\"os/exec\"\n-\t\"runtime\"\n \t\"strings\"\n )\n \n func main() {\n-\tif runtime.Compiler != \"gc\" || runtime.GOOS == \"js\" {\n-\t\treturn\n-\t}\n-\n \tf, err := ioutil.TempFile(\"\", \"issue21317.go\")\n \tif err != nil {\n \t\tlog.Fatal(err)"}, {"sha": "3f9b1ba008af4cfee4cd502d844925101ec04764", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue21576.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21576.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21576.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21576.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// +build !nacl,!js\n+// +build !nacl,!js,!gccgo\n \n // Copyright 2019 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "9ce9c4d732e6d4b6cffb4f85e53ed3a005cdcea3", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue22660.go", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue22660.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue22660.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue22660.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,3 +1,4 @@\n+// +build !js,gc\n // run\n \n // Copyright 2017 The Go Authors. All rights reserved.\n@@ -14,15 +15,10 @@ import (\n \t\"os\"\n \t\"os/exec\"\n \t\"path/filepath\"\n-\t\"runtime\"\n \t\"strings\"\n )\n \n func main() {\n-\tif runtime.GOOS == \"js\" {\n-\t\treturn // no file system available on builders\n-\t}\n-\n \tf, err := ioutil.TempFile(\"\", \"issue22660.go\")\n \tif err != nil {\n \t\tlog.Fatal(err)"}, {"sha": "ed03dccf4c8086bb8253ae1e4f029d9fd7dc57b6", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33275_run.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33275_run.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33275_run.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33275_run.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js\n+// +build !nacl,!js,!gccgo\n // run\n \n // Copyright 2019 The Go Authors. All rights reserved."}, {"sha": "c1fcd2a79b387a8b23020bc42c2cf666471bee6d", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33555.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33555.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33555.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33555.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js\n+// +build !nacl,!js,!gccgo\n // run\n \n // Copyright 2019 The Go Authors. All rights reserved."}, {"sha": "c7a11d27a8934985d1bc975d7a60f4e96d793746", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue36437.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue36437.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue36437.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue36437.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// +build !nacl,!js\n+// +build !nacl,!js,gc\n \n // Copyright 2020 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "319a2a90df9ba26c8725fe179abe6e349262afb8", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue9355.go", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue9355.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue9355.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue9355.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,3 +1,4 @@\n+// +build !js,gc\n // run\n \n // Copyright 2014 The Go Authors. All rights reserved.\n@@ -13,14 +14,9 @@ import (\n \t\"os/exec\"\n \t\"path/filepath\"\n \t\"regexp\"\n-\t\"runtime\"\n )\n \n func main() {\n-\tif runtime.Compiler != \"gc\" || runtime.GOOS == \"js\" {\n-\t\treturn\n-\t}\n-\n \terr := os.Chdir(filepath.Join(\"fixedbugs\", \"issue9355.dir\"))\n \tcheck(err)\n "}, {"sha": "c956c7f7bd50f3aa0445ea1f5f994421dfc28b24", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue9862_run.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue9862_run.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue9862_run.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue9862_run.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -1,4 +1,4 @@\n-// +build !nacl,!js\n+// +build !nacl,!js,gc\n // run\n \n // Copyright 2015 The Go Authors. All rights reserved."}, {"sha": "db3e9f6c2fc18040fc63b81c27375b90c53031d1", "filename": "gcc/testsuite/go.test/test/run.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Frun.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc00689332f023d959a8e9f01368f59b756a7017/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Frun.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Frun.go?ref=dc00689332f023d959a8e9f01368f59b756a7017", "patch": "@@ -438,7 +438,7 @@ func (ctxt *context) match(name string) bool {\n \t\t}\n \t}\n \n-\tif name == ctxt.GOOS || name == ctxt.GOARCH {\n+\tif name == ctxt.GOOS || name == ctxt.GOARCH || name == \"gc\" {\n \t\treturn true\n \t}\n "}]}