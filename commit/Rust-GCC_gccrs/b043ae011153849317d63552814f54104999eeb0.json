{"sha": "b043ae011153849317d63552814f54104999eeb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA0M2FlMDExMTUzODQ5MzE3ZDYzNTUyODE0ZjU0MTA0OTk5ZWViMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:00:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:00:45Z"}, "message": "[multiple changes]\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* sem_util.ads, sem_util.adb (Should_Ignore_Pragma): New function\n\tthat returns True when appropriate.\n\t* par-prag.adb, exp_prag.adb, sem_prag.adb: Do not ignore pragmas\n\twhen compiling predefined files.\n\t* fname.ads, fname.adb (Is_Predefined_File_Name): Fix bug:\n\t\"gnat.adc\" should not be considered a predefined file name.\n\tThat required (or at least encouraged) a lot of cleanup of global\n\tvariable usage. We shouldn't be communicating information via\n\tthe global name buffer.\n\t* bindgen.adb, errout.adb, fname-uf.adb, lib-load.adb, make.adb,\n\t* restrict.adb, sem_ch10.adb, sem_ch6.adb, sem_ch8.adb: Changes\n\trequired by the above-mentioned cleanup.\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* osint.adb (Find_File): Handle properly a request for a\n\tconfiguration file whose name is a directory.\n\nFrom-SVN: r247151", "tree": {"sha": "76db43f4fd0f168ca1b0171fd54f5952bfecb030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76db43f4fd0f168ca1b0171fd54f5952bfecb030"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b043ae011153849317d63552814f54104999eeb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b043ae011153849317d63552814f54104999eeb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b043ae011153849317d63552814f54104999eeb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b043ae011153849317d63552814f54104999eeb0/comments", "author": null, "committer": null, "parents": [{"sha": "b6e6a4e3804fc142a8c130cd2189f2461c9403ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e6a4e3804fc142a8c130cd2189f2461c9403ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6e6a4e3804fc142a8c130cd2189f2461c9403ff"}], "stats": {"total": 321, "additions": 201, "deletions": 120}, "files": [{"sha": "3f938e8364c2c8847a6ff0f8b16c72a8e42a8aef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -1,3 +1,23 @@\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_util.ads, sem_util.adb (Should_Ignore_Pragma): New function\n+\tthat returns True when appropriate.\n+\t* par-prag.adb, exp_prag.adb, sem_prag.adb: Do not ignore pragmas\n+\twhen compiling predefined files.\n+\t* fname.ads, fname.adb (Is_Predefined_File_Name): Fix bug:\n+\t\"gnat.adc\" should not be considered a predefined file name.\n+\tThat required (or at least encouraged) a lot of cleanup of global\n+\tvariable usage. We shouldn't be communicating information via\n+\tthe global name buffer.\n+\t* bindgen.adb, errout.adb, fname-uf.adb, lib-load.adb, make.adb,\n+\t* restrict.adb, sem_ch10.adb, sem_ch6.adb, sem_ch8.adb: Changes\n+\trequired by the above-mentioned cleanup.\n+\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* osint.adb (Find_File): Handle properly a request for a\n+\tconfiguration file whose name is a directory.\n+\n 2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_attr.adb, sem_ch5.adb: Minor reformatting."}, {"sha": "e87b251fa131973b8898eda9cb468caf92081b36", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -1275,6 +1275,7 @@ package body Bindgen is\n                 (No_Run_Time_Mode\n                   and then Is_Predefined_File_Name (U.Sfile))\n             then\n+               Get_Name_String (U.Sfile);\n                Set_String (\"   \");\n                Set_String (\"E\");\n                Set_Unit_Number (Unum);"}, {"sha": "40eaf91b9428ace33cbcb56cb44794aca221888c", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -2734,6 +2734,7 @@ package body Errout is\n           not Is_Predefined_File_Name\n                 (Unit_File_Name (Get_Source_Unit (Error_Msg_Node_1)))\n       then\n+         Get_Name_String (Unit_File_Name (Get_Source_Unit (Error_Msg_Node_1)));\n          Set_Msg_Str (\" defined\");\n          Set_Msg_Insertion_Line_Number (Sloc (Error_Msg_Node_1), Flag);\n "}, {"sha": "b83cc38da21d9522197524f8d288e28e520146b8", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -168,7 +168,7 @@ package body Exp_Prag is\n       --  the back end or the expander here does not get overenthusiastic and\n       --  start processing such a pragma!\n \n-      if Get_Name_Table_Boolean3 (Pname) then\n+      if Should_Ignore_Pragma (Pname) then\n          Rewrite (N, Make_Null_Statement (Sloc (N)));\n          return;\n       end if;"}, {"sha": "cc639fb33f1b60b50570e4c1fa9440c71d2c5ffd", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -302,10 +302,9 @@ package body Fname.UF is\n \n                   --  Determine if we have a predefined file name\n \n-                  Name_Len := Uname'Length;\n-                  Name_Buffer (1 .. Name_Len) := Uname;\n                   Is_Predef :=\n-                    Is_Predefined_File_Name (Renamings_Included => True);\n+                    Is_Predefined_File_Name\n+                      (Uname, Renamings_Included => True);\n \n                   --  Found a match, execute the pattern\n "}, {"sha": "9ee2e9a936c1302d56fb523dd7c05593f8320db1", "filename": "gcc/ada/fname.adb", "status": "modified", "additions": 110, "deletions": 85, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ffname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ffname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -57,122 +57,147 @@ package body Fname is\n      Table_Increment      => Alloc.SFN_Table_Increment,\n      Table_Name           => \"Fname_Dummy_Table\");\n \n+   function Has_Prefix (X, Prefix : String) return Boolean;\n+   --  True if Prefix is at the beginning of X. For example,\n+   --  Has_Prefix(\"a-filename.ads\", Prefix => \"a-\") is True.\n+\n+   function Has_Suffix (X, Suffix : String) return Boolean;\n+   --  True if Suffix is at the end of X\n+\n+   function Has_Internal_Extension (Fname : String) return Boolean;\n+   --  True if the extension is \".ads\" or \".adb\", as is always the case for\n+   --  internal/predefined units.\n+\n+   ----------------------------\n+   -- Has_Internal_Extension --\n+   ----------------------------\n+\n+   function Has_Internal_Extension (Fname : String) return Boolean is\n+   begin\n+      return Has_Suffix (Fname, Suffix => \".ads\")\n+        or else Has_Suffix (Fname, Suffix => \".adb\");\n+   end Has_Internal_Extension;\n+\n+   ----------------\n+   -- Has_Prefix --\n+   ----------------\n+\n+   function Has_Prefix (X, Prefix : String) return Boolean is\n+   begin\n+      if X'Length >= Prefix'Length then\n+         declare\n+            Slice : String renames\n+              X (X'First .. X'First + Prefix'Length - 1);\n+         begin\n+            return Slice = Prefix;\n+         end;\n+      end if;\n+      return False;\n+   end Has_Prefix;\n+\n+   ----------------\n+   -- Has_Suffix --\n+   ----------------\n+\n+   function Has_Suffix (X, Suffix : String) return Boolean is\n+   begin\n+      if X'Length >= Suffix'Length then\n+         declare\n+            Slice : String renames\n+              X (X'Last - Suffix'Length + 1 .. X'Last);\n+         begin\n+            return Slice = Suffix;\n+         end;\n+      end if;\n+      return False;\n+   end Has_Suffix;\n+\n    ---------------------------\n    -- Is_Internal_File_Name --\n    ---------------------------\n \n    function Is_Internal_File_Name\n-     (Fname              : File_Name_Type;\n-      Renamings_Included : Boolean := True) return Boolean\n-   is\n+     (Fname              : String;\n+      Renamings_Included : Boolean := True) return Boolean is\n    begin\n-      if Is_Predefined_File_Name (Fname, Renamings_Included) then\n-         return True;\n-\n-      --  Once Is_Predefined_File_Name has been called and returns False,\n-      --  Name_Buffer contains Fname and Name_Len is set to 8.\n+      --  Check for internal extensions first, so we don't think (e.g.)\n+      --  \"gnat.adc\" is internal.\n \n-      elsif Name_Buffer (1 .. 2) = \"g-\"\n-        or else Name_Buffer (1 .. 8) = \"gnat    \"\n-      then\n-         return True;\n-\n-      else\n+      if not Has_Internal_Extension (Fname) then\n          return False;\n       end if;\n-   end Is_Internal_File_Name;\n-\n-   -----------------------------\n-   -- Is_Predefined_File_Name --\n-   -----------------------------\n \n-   --  This should really be a test of unit name, given the possibility of\n-   --  pragma Source_File_Name setting arbitrary file names for any files???\n-\n-   --  Once Is_Predefined_File_Name has been called and returns False,\n-   --  Name_Buffer contains Fname and Name_Len is set to 8. This is used\n-   --  only by Is_Internal_File_Name, and is not part of the official\n-   --  external interface of this function.\n+      return Is_Predefined_File_Name (Fname, Renamings_Included)\n+        or else Has_Prefix (Fname, Prefix => \"g-\")\n+        or else Has_Prefix (Fname, Prefix => \"gnat.ad\");\n+   end Is_Internal_File_Name;\n \n-   function Is_Predefined_File_Name\n+   function Is_Internal_File_Name\n      (Fname              : File_Name_Type;\n       Renamings_Included : Boolean := True) return Boolean\n    is\n    begin\n-      Get_Name_String (Fname);\n-      return Is_Predefined_File_Name (Renamings_Included);\n-   end Is_Predefined_File_Name;\n-\n-   function Is_Predefined_File_Name\n-     (Renamings_Included : Boolean := True) return Boolean\n-   is\n-      subtype Str8 is String (1 .. 8);\n-\n-      Predef_Names : constant array (1 .. 11) of Str8 :=\n-        (\"ada     \",       -- Ada\n-         \"interfac\",       -- Interfaces\n-         \"system  \",       -- System\n-\n-         --  Remaining entries are only considered if Renamings_Included true\n-\n-         \"calendar\",       -- Calendar\n-         \"machcode\",       -- Machine_Code\n-         \"unchconv\",       -- Unchecked_Conversion\n-         \"unchdeal\",       -- Unchecked_Deallocation\n-         \"directio\",       -- Direct_IO\n-         \"ioexcept\",       -- IO_Exceptions\n-         \"sequenio\",       -- Sequential_IO\n-         \"text_io \");      -- Text_IO\n+      return Is_Internal_File_Name\n+        (Get_Name_String (Fname), Renamings_Included);\n+   end Is_Internal_File_Name;\n \n-         Num_Entries : constant Natural :=\n-                         3 + 8 * Boolean'Pos (Renamings_Included);\n+   -----------------------------\n+   -- Is_Predefined_File_Name --\n+   -----------------------------\n \n+   function Is_Predefined_File_Name\n+     (Fname              : String;\n+      Renamings_Included : Boolean := True) return Boolean is\n    begin\n-      --  Remove extension (if present)\n-\n-      if Name_Len > 4 and then Name_Buffer (Name_Len - 3) = '.' then\n-         Name_Len := Name_Len - 4;\n+      if not Has_Internal_Extension (Fname) then\n+         return False;\n       end if;\n \n-      --  Definitely predefined if prefix is a- i- or s- followed by letter\n-\n-      if Name_Len >=  3\n-        and then Name_Buffer (2) = '-'\n-        and then (Name_Buffer (1) = 'a'\n-                    or else\n-                  Name_Buffer (1) = 'i'\n-                    or else\n-                  Name_Buffer (1) = 's')\n-        and then (Name_Buffer (3) in 'a' .. 'z'\n-                    or else\n-                  Name_Buffer (3) in 'A' .. 'Z')\n+      if Has_Prefix (Fname, \"a-\")\n+        or else Has_Prefix (Fname, \"i-\")\n+        or else Has_Prefix (Fname, \"s-\")\n       then\n          return True;\n+      end if;\n \n       --  Definitely false if longer than 12 characters (8.3)\n \n-      elsif Name_Len > 8 then\n+      if Fname'Length > 12 then\n          return False;\n       end if;\n \n-      --  Otherwise check against special list, first padding to 8 characters\n-\n-      while Name_Len < 8 loop\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := ' ';\n-      end loop;\n+      if Has_Prefix (Fname, Prefix => \"ada.ad\") -- Ada\n+        or else Has_Prefix (Fname, Prefix => \"interfac.ad\") -- Interfaces\n+        or else Has_Prefix (Fname, Prefix => \"system.ad\") -- System\n+      then\n+         return True;\n+      end if;\n \n-      for J in 1 .. Num_Entries loop\n-         if Name_Buffer (1 .. 8) = Predef_Names (J) then\n-            return True;\n-         end if;\n-      end loop;\n+      if not Renamings_Included then\n+         return False;\n+      end if;\n \n-      --  Note: when we return False here, the Name_Buffer contains the\n-      --  padded file name. This is not defined for clients of the package,\n-      --  but is used by Is_Internal_File_Name.\n+      --  The following are the predefined renamings\n+\n+      return Has_Prefix (Fname, Prefix => \"calendar.ad\") -- Calendar\n+        or else Has_Prefix (Fname, Prefix => \"machcode.ad\") -- Machine_Code\n+        or else Has_Prefix (Fname, Prefix => \"unchconv.ad\")\n+         --  Unchecked_Conversion\n+        or else Has_Prefix (Fname, Prefix => \"unchdeal.ad\")\n+         --  Unchecked_Deallocation\n+        or else Has_Prefix (Fname, Prefix => \"directio.ad\") -- Direct_IO\n+        or else Has_Prefix (Fname, Prefix => \"ioexcept.ad\") -- IO_Exceptions\n+        or else Has_Prefix (Fname, Prefix => \"sequenio.ad\") -- Sequential_IO\n+        or else Has_Prefix (Fname, Prefix => \"text_io.ad\"); -- Text_IO\n+   end Is_Predefined_File_Name;\n \n-      return False;\n+   function Is_Predefined_File_Name\n+     (Fname              : File_Name_Type;\n+      Renamings_Included : Boolean := True) return Boolean\n+   is\n+   begin\n+      return Is_Predefined_File_Name\n+        (Get_Name_String (Fname), Renamings_Included);\n    end Is_Predefined_File_Name;\n \n    ---------------"}, {"sha": "88c402aaf5d059ec68237c00c437037e84286d9c", "filename": "gcc/ada/fname.ads", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ffname.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Ffname.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.ads?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,27 +63,29 @@ package Fname is\n    -----------------\n \n    function Is_Predefined_File_Name\n-     (Fname              : File_Name_Type;\n+     (Fname              : String;\n       Renamings_Included : Boolean := True) return Boolean;\n-   --  This function determines if the given file name (which must be a simple\n-   --  file name with no directory information) is the file name for one of the\n-   --  predefined library units (i.e. part of the Ada, System, or Interface\n-   --  hierarchies). Note that units in the GNAT hierarchy are not considered\n-   --  predefined (see Is_Internal_File_Name below). On return, Name_Buffer\n-   --  contains the file name. The Renamings_Included parameter indicates\n-   --  whether annex J renamings such as Text_IO are to be considered as\n-   --  predefined. If Renamings_Included is True, then Text_IO will return\n-   --  True, otherwise only children of Ada, Interfaces and System return True.\n-\n    function Is_Predefined_File_Name\n-     (Renamings_Included : Boolean := True) return Boolean;\n-   --  This version is called with the file name already in Name_Buffer\n+     (Fname              : File_Name_Type;\n+      Renamings_Included : Boolean := True) return Boolean;\n+   --  These functions determine if the given file name (which must be a\n+   --  simple file name with no directory information) is the file name for\n+   --  one of the predefined library units (i.e. part of the Ada, System, or\n+   --  Interface hierarchies). Note that units in the GNAT hierarchy are not\n+   --  considered predefined (see Is_Internal_File_Name below). The\n+   --  Renamings_Included parameter indicates whether annex J renamings such as\n+   --  Text_IO are to be considered as predefined. If Renamings_Included is\n+   --  True, then Text_IO will return True, otherwise only children of Ada,\n+   --  Interfaces and System return True.\n \n+   function Is_Internal_File_Name\n+     (Fname              : String;\n+      Renamings_Included : Boolean := True) return Boolean;\n    function Is_Internal_File_Name\n      (Fname              : File_Name_Type;\n       Renamings_Included : Boolean := True) return Boolean;\n-   --  Similar to Is_Predefined_File_Name. The internal file set is a superset\n-   --  of the predefined file set including children of GNAT.\n+   --  Same as Is_Predefined_File_Name, except units in the GNAT hierarchy are\n+   --  included.\n \n    procedure Tree_Read;\n    --  Dummy procedure (reads dummy table values from tree file)"}, {"sha": "f68e40e962faa3ddebd8ecb996b311fcd2cf5e77", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -582,6 +582,8 @@ package body Lib.Load is\n                end if;\n \n                if Present (Error_Node) then\n+                  Get_Name_String (Fname);\n+\n                   if Is_Predefined_File_Name (Fname) then\n                      Error_Msg_Unit_1 := Uname_Actual;\n                      Error_Msg\n@@ -785,6 +787,8 @@ package body Lib.Load is\n             --  Generate message if unit required\n \n             if Required then\n+               Get_Name_String (Fname);\n+\n                if Is_Predefined_File_Name (Fname) then\n \n                   --  This is a predefined library unit which is not present"}, {"sha": "bfdd2163f41236c130120299c56ab5febdbfd678", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -2944,7 +2944,9 @@ package body Make is\n             Fname : constant File_Name_Type := Strip_Directory (S);\n \n          begin\n-            if Is_Predefined_File_Name (Fname, False) then\n+            if Is_Predefined_File_Name\n+              (Fname, Renamings_Included => False)\n+            then\n                if Check_Readonly_Files or else Must_Compile then\n                   Comp_Args (Comp_Args'First + 2 .. Comp_Last + 1) :=\n                     Comp_Args (Comp_Args'First + 1 .. Comp_Last);"}, {"sha": "d5f63075fa8bf670158c3e6000b0afb16d0ea0cd", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -1189,16 +1189,25 @@ package body Osint is\n             Found := N;\n             Attr.all  := Unknown_Attributes;\n \n-            if T = Config and then Full_Name then\n-               declare\n-                  Full_Path : constant String :=\n-                                Normalize_Pathname (Get_Name_String (N));\n-                  Full_Size : constant Natural := Full_Path'Length;\n-               begin\n-                  Name_Buffer (1 .. Full_Size) := Full_Path;\n-                  Name_Len := Full_Size;\n-                  Found := Name_Find;\n-               end;\n+            if T = Config then\n+               if Full_Name then\n+                  declare\n+                     Full_Path : constant String :=\n+                                   Normalize_Pathname (Get_Name_String (N));\n+                     Full_Size : constant Natural := Full_Path'Length;\n+\n+                  begin\n+                     Name_Buffer (1 .. Full_Size) := Full_Path;\n+                     Name_Len := Full_Size;\n+                     Found := Name_Find;\n+                  end;\n+               end if;\n+\n+               --  Check that it is a file, not a directory\n+\n+               if not Is_Regular_File (Get_Name_String (Found)) then\n+                  Found := No_File;\n+               end if;\n             end if;\n \n             return;"}, {"sha": "85cd8998549df38366da2aae7020b3cb0707fe00", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -294,7 +294,7 @@ begin\n \n    --  Ignore pragma previously flagged by Ignore_Pragma\n \n-   if Get_Name_Table_Boolean3 (Prag_Name) then\n+   if Should_Ignore_Pragma (Prag_Name) then\n       return Pragma_Node;\n    end if;\n "}, {"sha": "b8eb6ad42679cef4d24546f5987422f07f127036", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -6101,6 +6101,8 @@ package body Sem_Ch6 is\n              Is_Predefined_File_Name\n                (Unit_File_Name (Get_Source_Unit (Alias (Overridden_Subp))))\n          then\n+            Get_Name_String\n+              (Unit_File_Name (Get_Source_Unit (Alias (Overridden_Subp))));\n             Error_Msg_NE (\"subprogram & is not overriding\", Spec, Subp);\n \n          elsif Is_Subprogram (Subp) then"}, {"sha": "2875579fa088e523aebec6f660a492d5fda7250e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -3631,7 +3631,8 @@ package body Sem_Ch8 is\n       --  children of Ada.Numerics, which are never loaded by Rtsfind).\n \n       if Is_Predefined_File_Name (Unit_File_Name (Current_Sem_Unit))\n-        and then Name_Buffer (1 .. 3) /= \"a-n\"\n+        and then Get_Name_String\n+          (Unit_File_Name (Current_Sem_Unit)) (1 .. 3) /= \"a-n\"\n         and then\n           Nkind (Unit (Cunit (Current_Sem_Unit))) = N_Package_Declaration\n       then"}, {"sha": "c16973763ddab2dd3a8191ae8f609a74351c00c1", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -10352,7 +10352,7 @@ package body Sem_Prag is\n \n       --  Ignore pragma if Ignore_Pragma applies\n \n-      if Get_Name_Table_Boolean3 (Pname) then\n+      if Should_Ignore_Pragma (Pname) then\n          return;\n       end if;\n "}, {"sha": "700203598ab7272247cd8b8c91ceadbfbe702ee4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -20499,6 +20499,16 @@ package body Sem_Util is\n       Set_Alignment                 (T1, Alignment                 (T2));\n    end Set_Size_Info;\n \n+   --------------------------\n+   -- Should_Ignore_Pragma --\n+   --------------------------\n+\n+   function Should_Ignore_Pragma (Prag_Name : Name_Id) return Boolean is\n+   begin\n+      return not Is_Internal_File_Name (File_Name (Current_Source_File))\n+        and then Get_Name_Table_Boolean3 (Prag_Name);\n+   end Should_Ignore_Pragma;\n+\n    --------------------\n    -- Static_Boolean --\n    --------------------"}, {"sha": "06be2f87fd2a8bee1aa363cfaf9c1e13e210720b", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b043ae011153849317d63552814f54104999eeb0/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=b043ae011153849317d63552814f54104999eeb0", "patch": "@@ -2335,6 +2335,11 @@ package Sem_Util is\n    function Scope_Is_Transient return Boolean;\n    --  True if the current scope is transient\n \n+   function Should_Ignore_Pragma (Prag_Name : Name_Id) return Boolean;\n+   --  True if we should ignore pragmas with the specified name. In particular,\n+   --  this returns True if pragma Ignore_Pragma applies, and we are not in a\n+   --  predefined unit.\n+\n    function Static_Boolean (N : Node_Id) return Uint;\n    --  This function analyzes the given expression node and then resolves it\n    --  as Standard.Boolean. If the result is static, then Uint_1 or Uint_0 is"}]}