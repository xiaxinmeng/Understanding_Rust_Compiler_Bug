{"sha": "af4c82ed94434ca16d03b575be97c813c371b3a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY0YzgyZWQ5NDQzNGNhMTZkMDNiNTc1YmU5N2M4MTNjMzcxYjNhOQ==", "commit": {"author": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2007-06-18T20:02:33Z"}, "committer": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2007-06-18T20:02:33Z"}, "message": "re PR rtl-optimization/32339 (ICE in insert_save, at caller-save.c:726)\n\ngcc/ChangeLog:\n\n2007-06-18  Seongbae Park  <seongbae.park@gmail.com>\n\n\tPR rtl-optimization/32339\n\t* df-scan.c (df_uses_record): Don't modify flags but just add to\n\tit for df_ref_record.\n\ngcc/testsuite/ChangeLog:\n\n2007-06-18  Martin Michlmayr <tbm@cyrius.com>\n\n\tPR rtl-optimization/32339\n\t* gcc.c-torture/compile/pr32339.c: New test.\n\nFrom-SVN: r125825", "tree": {"sha": "3d6e05db60195e91246da2e360ad9ca972e4bfba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d6e05db60195e91246da2e360ad9ca972e4bfba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af4c82ed94434ca16d03b575be97c813c371b3a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4c82ed94434ca16d03b575be97c813c371b3a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af4c82ed94434ca16d03b575be97c813c371b3a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4c82ed94434ca16d03b575be97c813c371b3a9/comments", "author": null, "committer": null, "parents": [{"sha": "2902c34e51bbb82181104caf213cdf99af1cd8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2902c34e51bbb82181104caf213cdf99af1cd8de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2902c34e51bbb82181104caf213cdf99af1cd8de"}], "stats": {"total": 53, "additions": 42, "deletions": 11}, "files": [{"sha": "606632d5e2f4d6547b5fe44feb0f60171fb75c5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af4c82ed94434ca16d03b575be97c813c371b3a9", "patch": "@@ -1,3 +1,9 @@\n+2007-06-18  Seongbae Park  <seongbae.park@gmail.com>\n+\n+\tPR rtl-optimization/32339\n+\t* df-scan.c (df_uses_record): Don't modify flags but just add to\n+\tit for df_ref_record.\n+\n 2007-06-18  David Daney  <ddaney@avtrex.com\n \n \tRevert:"}, {"sha": "8278714cefea420fa329fac315b222bf4aa0f2c4", "filename": "gcc/gcse.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=af4c82ed94434ca16d03b575be97c813c371b3a9", "patch": "@@ -6341,17 +6341,6 @@ replace_store_insn (rtx reg, rtx del, basic_block bb, struct ls_expr *smexpr)\n \n   mem = smexpr->pattern;\n   insn = gen_move_insn (reg, SET_SRC (single_set (del)));\n-  insn = emit_insn_after (insn, del);\n-\n-  if (dump_file)\n-    {\n-      fprintf (dump_file,\n-\t       \"STORE_MOTION  delete insn in BB %d:\\n      \", bb->index);\n-      print_inline_rtx (dump_file, del, 6);\n-      fprintf (dump_file, \"\\nSTORE MOTION  replaced with insn:\\n      \");\n-      print_inline_rtx (dump_file, insn, 6);\n-      fprintf (dump_file, \"\\n\");\n-    }\n \n   for (ptr = ANTIC_STORE_LIST (smexpr); ptr; ptr = XEXP (ptr, 1))\n     if (XEXP (ptr, 0) == del)\n@@ -6379,6 +6368,20 @@ replace_store_insn (rtx reg, rtx del, basic_block bb, struct ls_expr *smexpr)\n       XEXP (note, 0) = insn;\n     }\n \n+  /* Emit the insn AFTER all the notes are transferred.\n+     This is cheaper since we avoid df rescanning for the note change.  */\n+  insn = emit_insn_after (insn, del);\n+\n+  if (dump_file)\n+    {\n+      fprintf (dump_file,\n+\t       \"STORE_MOTION  delete insn in BB %d:\\n      \", bb->index);\n+      print_inline_rtx (dump_file, del, 6);\n+      fprintf (dump_file, \"\\nSTORE MOTION  replaced with insn:\\n      \");\n+      print_inline_rtx (dump_file, insn, 6);\n+      fprintf (dump_file, \"\\n\");\n+    }\n+\n   delete_insn (del);\n \n   /* Now we must handle REG_EQUAL notes whose contents is equal to the mem;"}, {"sha": "b864722701bfc72142e28700e93450b369f97c74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af4c82ed94434ca16d03b575be97c813c371b3a9", "patch": "@@ -1,3 +1,8 @@\n+2007-06-18  Martin Michlmayr <tbm@cyrius.com>\n+\n+\tPR rtl-optimization/32339\n+\t* gcc.c-torture/compile/pr32339.c: New test.\n+\n 2007-06-18  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* gcc.c-torture/compile/pr32355.c: New testcase."}, {"sha": "5aca6e415385e1fe3df5813cd9d0b8edb8905a45", "filename": "gcc/testsuite/gcc.c-torture/compile/pr32339.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32339.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4c82ed94434ca16d03b575be97c813c371b3a9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32339.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32339.c?ref=af4c82ed94434ca16d03b575be97c813c371b3a9", "patch": "@@ -0,0 +1,17 @@\n+/* We used to ICE in insert_save at caller-save.c,\n+   due to missing REG_DEAD for register use in post-decrement on ia64. */\n+struct city_dialog\n+{\n+  struct city *pcity;\n+  char change_list_names[200][200];\n+  int change_list_ids[200];\n+};\n+change_callback (void)\n+{\n+  struct city_dialog *pdialog;\n+  int n;\n+  int i;\n+  get_city_dialog_production_full (pdialog->change_list_names[n],\n+    pdialog->pcity);\n+  pdialog->change_list_ids[n++] = i;\n+}"}]}