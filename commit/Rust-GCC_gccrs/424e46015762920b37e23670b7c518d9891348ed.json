{"sha": "424e46015762920b37e23670b7c518d9891348ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI0ZTQ2MDE1NzYyOTIwYjM3ZTIzNjcwYjdjNTE4ZDk4OTEzNDhlZA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-27T05:49:55Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-09-01T15:39:14Z"}, "message": "Simplify 'gcc/tree.c:walk_tree_1' handling of 'OMP_CLAUSE'\n\nNo behavioral change, other than that for a few clauses, operands are now\nwalked in a different order, and 'OMP_CLAUSE_ERROR' now no longer runs into\n'default: gcc_unreachable ();' here (but instead will at some later stage).\n\nFollow-up for r110243 (commit aaf46ef9792bbc562175b606bd1c3f225ea56924)\n\"Fix PR 25886.  Convert OMP_CLAUSE_* into sub-codes\".\n\n\tgcc/\n\t* tree.c (walk_tree_1) <OMP_CLAUSE>: Simplify.", "tree": {"sha": "d29c51332987fd7d9f4ded06522ccac79aa41793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d29c51332987fd7d9f4ded06522ccac79aa41793"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/424e46015762920b37e23670b7c518d9891348ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424e46015762920b37e23670b7c518d9891348ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/424e46015762920b37e23670b7c518d9891348ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424e46015762920b37e23670b7c518d9891348ed/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cef3039b880a21fbdf4153e6fc42026619fd4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cef3039b880a21fbdf4153e6fc42026619fd4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cef3039b880a21fbdf4153e6fc42026619fd4ad"}], "stats": {"total": 134, "additions": 8, "deletions": 126}, "files": [{"sha": "a89d50a30ad9a5d96744f12bd6ce0b731c851ee4", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 126, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424e46015762920b37e23670b7c518d9891348ed/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424e46015762920b37e23670b7c518d9891348ed/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=424e46015762920b37e23670b7c518d9891348ed", "patch": "@@ -275,7 +275,7 @@ struct int_n_trees_t int_n_trees [NUM_INT_N_ENTS];\n \n bool tree_contains_struct[MAX_TREE_CODES][64];\n \n-/* Number of operands for each OpenMP clause.  */\n+/* Number of operands for each OMP clause.  */\n unsigned const char omp_clause_num_ops[] =\n {\n   0, /* OMP_CLAUSE_ERROR  */\n@@ -10289,7 +10289,7 @@ build_empty_stmt (location_t loc)\n }\n \n \n-/* Build an OpenMP clause with code CODE.  LOC is the location of the\n+/* Build an OMP clause with code CODE.  LOC is the location of the\n    clause.  */\n \n tree\n@@ -11091,130 +11091,12 @@ walk_tree_1 (tree *tp, walk_tree_fn func, void *data,\n       break;\n \n     case OMP_CLAUSE:\n-      switch (OMP_CLAUSE_CODE (*tp))\n-\t{\n-\tcase OMP_CLAUSE_GANG:\n-\t  WALK_SUBTREE (OMP_CLAUSE_OPERAND (*tp, 1));\n-\t  /* FALLTHRU */\n-\n-\tcase OMP_CLAUSE_AFFINITY:\n-\tcase OMP_CLAUSE_ASYNC:\n-\tcase OMP_CLAUSE_WAIT:\n-\tcase OMP_CLAUSE_WORKER:\n-\tcase OMP_CLAUSE_VECTOR:\n-\tcase OMP_CLAUSE_NUM_GANGS:\n-\tcase OMP_CLAUSE_NUM_WORKERS:\n-\tcase OMP_CLAUSE_VECTOR_LENGTH:\n-\tcase OMP_CLAUSE_PRIVATE:\n-\tcase OMP_CLAUSE_SHARED:\n-\tcase OMP_CLAUSE_FIRSTPRIVATE:\n-\tcase OMP_CLAUSE_COPYIN:\n-\tcase OMP_CLAUSE_COPYPRIVATE:\n-\tcase OMP_CLAUSE_FINAL:\n-\tcase OMP_CLAUSE_IF:\n-\tcase OMP_CLAUSE_NUM_THREADS:\n-\tcase OMP_CLAUSE_SCHEDULE:\n-\tcase OMP_CLAUSE_UNIFORM:\n-\tcase OMP_CLAUSE_DEPEND:\n-\tcase OMP_CLAUSE_NONTEMPORAL:\n-\tcase OMP_CLAUSE_NUM_TEAMS:\n-\tcase OMP_CLAUSE_THREAD_LIMIT:\n-\tcase OMP_CLAUSE_DEVICE:\n-\tcase OMP_CLAUSE_DIST_SCHEDULE:\n-\tcase OMP_CLAUSE_SAFELEN:\n-\tcase OMP_CLAUSE_SIMDLEN:\n-\tcase OMP_CLAUSE_ORDERED:\n-\tcase OMP_CLAUSE_PRIORITY:\n-\tcase OMP_CLAUSE_GRAINSIZE:\n-\tcase OMP_CLAUSE_NUM_TASKS:\n-\tcase OMP_CLAUSE_HINT:\n-\tcase OMP_CLAUSE_FILTER:\n-\tcase OMP_CLAUSE_TO_DECLARE:\n-\tcase OMP_CLAUSE_LINK:\n-\tcase OMP_CLAUSE_DETACH:\n-\tcase OMP_CLAUSE_USE_DEVICE_PTR:\n-\tcase OMP_CLAUSE_USE_DEVICE_ADDR:\n-\tcase OMP_CLAUSE_IS_DEVICE_PTR:\n-\tcase OMP_CLAUSE_INCLUSIVE:\n-\tcase OMP_CLAUSE_EXCLUSIVE:\n-\tcase OMP_CLAUSE__LOOPTEMP_:\n-\tcase OMP_CLAUSE__REDUCTEMP_:\n-\tcase OMP_CLAUSE__CONDTEMP_:\n-\tcase OMP_CLAUSE__SCANTEMP_:\n-\tcase OMP_CLAUSE__SIMDUID_:\n-\t  WALK_SUBTREE (OMP_CLAUSE_OPERAND (*tp, 0));\n-\t  /* FALLTHRU */\n-\n-\tcase OMP_CLAUSE_INDEPENDENT:\n-\tcase OMP_CLAUSE_NOWAIT:\n-\tcase OMP_CLAUSE_DEFAULT:\n-\tcase OMP_CLAUSE_UNTIED:\n-\tcase OMP_CLAUSE_MERGEABLE:\n-\tcase OMP_CLAUSE_PROC_BIND:\n-\tcase OMP_CLAUSE_DEVICE_TYPE:\n-\tcase OMP_CLAUSE_INBRANCH:\n-\tcase OMP_CLAUSE_NOTINBRANCH:\n-\tcase OMP_CLAUSE_FOR:\n-\tcase OMP_CLAUSE_PARALLEL:\n-\tcase OMP_CLAUSE_SECTIONS:\n-\tcase OMP_CLAUSE_TASKGROUP:\n-\tcase OMP_CLAUSE_NOGROUP:\n-\tcase OMP_CLAUSE_THREADS:\n-\tcase OMP_CLAUSE_SIMD:\n-\tcase OMP_CLAUSE_DEFAULTMAP:\n-\tcase OMP_CLAUSE_ORDER:\n-\tcase OMP_CLAUSE_BIND:\n-\tcase OMP_CLAUSE_AUTO:\n-\tcase OMP_CLAUSE_SEQ:\n-\tcase OMP_CLAUSE__SIMT_:\n-\tcase OMP_CLAUSE_IF_PRESENT:\n-\tcase OMP_CLAUSE_FINALIZE:\n-\tcase OMP_CLAUSE_NOHOST:\n-\t  WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n-\n-\tcase OMP_CLAUSE_LASTPRIVATE:\n-\t  WALK_SUBTREE (OMP_CLAUSE_DECL (*tp));\n-\t  WALK_SUBTREE (OMP_CLAUSE_LASTPRIVATE_STMT (*tp));\n-\t  WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n-\n-\tcase OMP_CLAUSE_COLLAPSE:\n-\tcase OMP_CLAUSE_TILE:\n-\t  {\n-\t    int i;\n-\t    for (i = 0; i < 3; i++)\n-\t      WALK_SUBTREE (OMP_CLAUSE_OPERAND (*tp, i));\n-\t    WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n-\t  }\n-\n-\tcase OMP_CLAUSE_LINEAR:\n-\t  WALK_SUBTREE (OMP_CLAUSE_DECL (*tp));\n-\t  WALK_SUBTREE (OMP_CLAUSE_LINEAR_STEP (*tp));\n-\t  WALK_SUBTREE (OMP_CLAUSE_LINEAR_STMT (*tp));\n-\t  WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n-\n-\tcase OMP_CLAUSE_ALIGNED:\n-\tcase OMP_CLAUSE_ALLOCATE:\n-\tcase OMP_CLAUSE_FROM:\n-\tcase OMP_CLAUSE_TO:\n-\tcase OMP_CLAUSE_MAP:\n-\tcase OMP_CLAUSE__CACHE_:\n-\t  WALK_SUBTREE (OMP_CLAUSE_DECL (*tp));\n-\t  WALK_SUBTREE (OMP_CLAUSE_OPERAND (*tp, 1));\n-\t  WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n-\n-\tcase OMP_CLAUSE_REDUCTION:\n-\tcase OMP_CLAUSE_TASK_REDUCTION:\n-\tcase OMP_CLAUSE_IN_REDUCTION:\n-\t  {\n-\t    int i;\n-\t    for (i = 0; i < 5; i++)\n-\t      WALK_SUBTREE (OMP_CLAUSE_OPERAND (*tp, i));\n-\t    WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n-\t  }\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+      {\n+\tint len = omp_clause_num_ops[OMP_CLAUSE_CODE (*tp)];\n+\tfor (int i = 0; i < len; i++)\n+\t  WALK_SUBTREE (OMP_CLAUSE_OPERAND (*tp, i));\n+\tWALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n+      }\n       break;\n \n     case TARGET_EXPR:"}]}