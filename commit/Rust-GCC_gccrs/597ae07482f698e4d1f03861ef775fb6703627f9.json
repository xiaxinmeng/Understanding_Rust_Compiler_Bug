{"sha": "597ae07482f698e4d1f03861ef775fb6703627f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3YWUwNzQ4MmY2OThlNGQxZjAzODYxZWY3NzVmYjY3MDM2MjdmOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-07-24T11:27:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-07-24T11:27:53Z"}, "message": "re PR middle-end/28071 (A file that can not be compiled in reasonable time/space)\n\n\tPR rtl-optimization/28071\n\t* tree-cfg.c (tree_split_block): Do not allocate new stmt_list nodes.\n\t* tree-iterator.c (tsi_split_statement_list_before): Do not crash when\n\tsplitting before first stmt.\n\nFrom-SVN: r115713", "tree": {"sha": "d178fe07a5109b0f0e76af5303139624cf4bdd77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d178fe07a5109b0f0e76af5303139624cf4bdd77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/597ae07482f698e4d1f03861ef775fb6703627f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597ae07482f698e4d1f03861ef775fb6703627f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597ae07482f698e4d1f03861ef775fb6703627f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597ae07482f698e4d1f03861ef775fb6703627f9/comments", "author": null, "committer": null, "parents": [{"sha": "f10d1a747d57ce28acd2b83ce96c154af5e9a286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10d1a747d57ce28acd2b83ce96c154af5e9a286", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f10d1a747d57ce28acd2b83ce96c154af5e9a286"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "b03da442bc809a1b7aadd4a6084f3b5b4b33c255", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597ae07482f698e4d1f03861ef775fb6703627f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597ae07482f698e4d1f03861ef775fb6703627f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=597ae07482f698e4d1f03861ef775fb6703627f9", "patch": "@@ -1,3 +1,10 @@\n+2006-07-24  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR rtl-optimization/28071\n+\t* tree-cfg.c (tree_split_block): Do not allocate new stmt_list nodes.\n+\t* tree-iterator.c (tsi_split_statement_list_before): Do not crash when\n+\tsplitting before first stmt.\n+\n 2006-07-24  Jan Hubicka  <jh@suse.cz>\n \n \tPR rtl-optimization/28071"}, {"sha": "ced78077047469d912da02f14ac3ff63cf2d002d", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597ae07482f698e4d1f03861ef775fb6703627f9/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597ae07482f698e4d1f03861ef775fb6703627f9/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=597ae07482f698e4d1f03861ef775fb6703627f9", "patch": "@@ -4158,7 +4158,8 @@ tree_redirect_edge_and_branch_force (edge e, basic_block dest)\n static basic_block\n tree_split_block (basic_block bb, void *stmt)\n {\n-  block_stmt_iterator bsi, bsi_tgt;\n+  block_stmt_iterator bsi;\n+  tree_stmt_iterator tsi_tgt;\n   tree act;\n   basic_block new_bb;\n   edge e;\n@@ -4192,13 +4193,17 @@ tree_split_block (basic_block bb, void *stmt)\n \t}\n     }\n \n-  bsi_tgt = bsi_start (new_bb);\n-  while (!bsi_end_p (bsi))\n-    {\n-      act = bsi_stmt (bsi);\n-      bsi_remove (&bsi, false);\n-      bsi_insert_after (&bsi_tgt, act, BSI_NEW_STMT);\n-    }\n+  if (bsi_end_p (bsi))\n+    return new_bb;\n+\n+  /* Split the statement list - avoid re-creating new containers as this\n+     brings ugly quadratic memory consumption in the inliner.  \n+     (We are still quadratic since we need to update stmt BB pointers,\n+     sadly.)  */\n+  new_bb->stmt_list = tsi_split_statement_list_before (&bsi.tsi);\n+  for (tsi_tgt = tsi_start (new_bb->stmt_list);\n+       !tsi_end_p (tsi_tgt); tsi_next (&tsi_tgt))\n+    set_bb_for_stmt (tsi_stmt (tsi_tgt), new_bb);\n \n   return new_bb;\n }"}, {"sha": "77e2345e4c23db5c0f17158d28c2cd8f27af0f15", "filename": "gcc/tree-iterator.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597ae07482f698e4d1f03861ef775fb6703627f9/gcc%2Ftree-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597ae07482f698e4d1f03861ef775fb6703627f9/gcc%2Ftree-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-iterator.c?ref=597ae07482f698e4d1f03861ef775fb6703627f9", "patch": "@@ -289,7 +289,8 @@ tsi_split_statement_list_before (tree_stmt_iterator *i)\n   STATEMENT_LIST_TAIL (new_sl) = STATEMENT_LIST_TAIL (old_sl);\n   STATEMENT_LIST_TAIL (old_sl) = prev;\n   cur->prev = NULL;\n-  prev->next = NULL;\n+  if (prev)\n+    prev->next = NULL;\n \n   return new_sl;\n }"}]}