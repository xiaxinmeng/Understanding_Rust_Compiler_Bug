{"sha": "b77dfefc0c8ec4eb62549727fd64033ba8ee9c32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3ZGZlZmMwYzhlYzRlYjYyNTQ5NzI3ZmQ2NDAzM2JhOGVlOWMzMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-29T00:11:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-29T00:11:02Z"}, "message": "(fsel): Remove insns with record bit set.\n\nFrom-SVN: r6435", "tree": {"sha": "050da35d0ff7a80fad9beb7256334c65988eee8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/050da35d0ff7a80fad9beb7256334c65988eee8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b77dfefc0c8ec4eb62549727fd64033ba8ee9c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77dfefc0c8ec4eb62549727fd64033ba8ee9c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77dfefc0c8ec4eb62549727fd64033ba8ee9c32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77dfefc0c8ec4eb62549727fd64033ba8ee9c32/comments", "author": null, "committer": null, "parents": [{"sha": "28c1753a1b53af841444c0f6a8fb76a7fa171e37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c1753a1b53af841444c0f6a8fb76a7fa171e37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c1753a1b53af841444c0f6a8fb76a7fa171e37"}], "stats": {"total": 62, "additions": 6, "deletions": 56}, "files": [{"sha": "7c5388ffe237009972c5c7ee09c3fd2baea06b38", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 56, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77dfefc0c8ec4eb62549727fd64033ba8ee9c32/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77dfefc0c8ec4eb62549727fd64033ba8ee9c32/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b77dfefc0c8ec4eb62549727fd64033ba8ee9c32", "patch": "@@ -2349,35 +2349,6 @@\n   \"fsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"fp\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP\n-\t (if_then_else:SF (ge (match_operand:SF 1 \"gpc_reg_operand\" \"f\")\n-\t\t\t      (const_int 0))\n-\t\t\t  (match_operand:SF 2 \"gpc_reg_operand\" \"f\")\n-\t\t\t  (match_operand:SF 3 \"gpc_reg_operand\" \"f\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SF 4 \"=f\"))]\n-  \"TARGET_PPCFPX\"\n-  \"fsel. %4,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:CCFP 4 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP\n-\t (if_then_else:SF (ge (match_operand:SF 1 \"gpc_reg_operand\" \"f\")\n-\t\t\t      (const_int 0))\n-\t\t\t  (match_operand:SF 2 \"gpc_reg_operand\" \"f\")\n-\t\t\t  (match_operand:SF 3 \"gpc_reg_operand\" \"f\"))\n-\t (const_int 0)))\n-   (set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n-\t(if_then_else:SF (ge (match_dup 1) (const_int 0))\n-\t\t\t (match_dup 2)\n-\t\t\t (match_dup 3)))]\n-  \"TARGET_PPCFPX\"\n-  \"fsel. %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n-\n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))]\n@@ -2473,10 +2444,12 @@\n   \"TARGET_PPCFPX || TARGET_POWER2\"\n   \"fsqrt %0,%1\"\n   [(set_attr \"type\" \"dsqrt\")])\n+\n ;; For SMIN, SMAX, UMIN, and UMAX, we use DEFINE_EXPAND's that involve a fsel\n ;; instruction and some auxiliary computations.  Then we just have a single\n ;; DEFINE_INSN for fsel and the define_splits to make them if made by\n ;; combine.\n+\n (define_expand \"maxdf3\"\n   [(set (match_dup 3)\n \t(minus:DF (match_operand:DF 1 \"gpc_reg_operand\" \"\")\n@@ -2489,6 +2462,7 @@\n   \"TARGET_PPCFPX\"\n   \"\n { operands[3] = gen_reg_rtx (DFmode); }\")\n+\n (define_split\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(smax:DF (match_operand:DF 1 \"gpc_reg_operand\" \"\")\n@@ -2503,6 +2477,7 @@\n \t\t\t (match_dup 1)\n \t\t\t (match_dup 2)))]\n   \"\")\n+\n (define_expand \"mindf3\"\n   [(set (match_dup 3)\n \t(minus:DF (match_operand:DF 2 \"gpc_reg_operand\" \"\")\n@@ -2515,6 +2490,7 @@\n   \"TARGET_PPCFPX\"\n   \"\n { operands[3] = gen_reg_rtx (DFmode); }\")\n+\n (define_split\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(smin:DF (match_operand:DF 1 \"gpc_reg_operand\" \"\")\n@@ -2529,6 +2505,7 @@\n \t\t\t (match_dup 1)\n \t\t\t (match_dup 2)))]\n   \"\")\n+\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n \t(if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n@@ -2538,33 +2515,6 @@\n   \"TARGET_PPCFPX\"\n   \"fsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"fp\")])\n-(define_insn \"\"\n-  [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP\n-\t (if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n-\t\t\t      (const_int 0))\n-\t\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"f\")\n-\t\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:DF 4 \"=f\"))]\n-  \"TARGET_PPCFPX\"\n-  \"fsel. %4,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n-(define_insn \"\"\n-  [(set (match_operand:CCFP 4 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP\n-\t (if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n-\t\t\t      (const_int 0))\n-\t\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"f\")\n-\t\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))\n-\t (const_int 0)))\n-   (set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(if_then_else:DF (ge (match_dup 1) (const_int 0))\n-\t\t\t (match_dup 2)\n-\t\t\t (match_dup 3)))]\n-  \"TARGET_PPCFPX\"\n-  \"fsel. %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n \f\n ;; Conversions to and from floating-point.\n (define_expand \"floatsidf2\""}]}