{"sha": "0e3ad7e4d030b5bd3598cd3955947e3130a24339", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzYWQ3ZTRkMDMwYjViZDM1OThjZDM5NTU5NDdlMzEzMGEyNDMzOQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-07-24T18:38:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-07-24T19:13:42Z"}, "message": "revamp intelmic-mkoffload aux dump names\n\nRework intelmic-mkoffload into the new aux and dump file naming\nsemantics.  Obey -save-temps.\n\n\nCo-Authored-By: Thomas Schwinge <thomas@codesourcery.com>\nfor  gcc/ChangeLog\n\n\t* config/i386/intelmic-mkoffload.c\n\t(generate_target_descr_file): Use dumppfx for save_temps\n\tfiles.  Pass -dumpbase et al down to the compiler.\n\t(generate_target_offloadend_file): Likewise.\n\t(generate_host_descr_file): Likewise.\n\t(prepare_target_image): Likewise.  Move out_obj_filename\n\tsetting...\n\t(main): ... here.  Detect -dumpbase, set dumppfx too.", "tree": {"sha": "7f7d0698f6c18ec377bbea8744989790718cc51c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f7d0698f6c18ec377bbea8744989790718cc51c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e3ad7e4d030b5bd3598cd3955947e3130a24339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3ad7e4d030b5bd3598cd3955947e3130a24339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3ad7e4d030b5bd3598cd3955947e3130a24339", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3ad7e4d030b5bd3598cd3955947e3130a24339/comments", "author": null, "committer": null, "parents": [{"sha": "c1b9cb1a83b0d6485d9922ecef097d250a22d830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b9cb1a83b0d6485d9922ecef097d250a22d830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b9cb1a83b0d6485d9922ecef097d250a22d830"}], "stats": {"total": 72, "additions": 62, "deletions": 10}, "files": [{"sha": "15b5c3d771a863f0a85cd1c8b7f87fde1d63dbf1", "filename": "gcc/config/i386/intelmic-mkoffload.c", "status": "modified", "additions": 62, "deletions": 10, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3ad7e4d030b5bd3598cd3955947e3130a24339/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3ad7e4d030b5bd3598cd3955947e3130a24339/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c?ref=0e3ad7e4d030b5bd3598cd3955947e3130a24339", "patch": "@@ -245,8 +245,13 @@ compile_for_target (struct obstack *argv_obstack)\n static const char *\n generate_target_descr_file (const char *target_compiler)\n {\n-  const char *src_filename = make_temp_file (\"_target_descr.c\");\n-  const char *obj_filename = make_temp_file (\"_target_descr.o\");\n+  char *dump_filename = concat (dumppfx, \"_target_descr.c\", NULL);\n+  const char *src_filename = save_temps\n+    ? dump_filename\n+    : make_temp_file (\"_target_descr.c\");\n+  const char *obj_filename = save_temps\n+    ? concat (dumppfx, \"_target_descr.o\", NULL)\n+    : make_temp_file (\"_target_descr.o\");\n   temp_files[num_temps++] = src_filename;\n   temp_files[num_temps++] = obj_filename;\n   FILE *src_file = fopen (src_filename, \"w\");\n@@ -293,6 +298,12 @@ generate_target_descr_file (const char *target_compiler)\n     obstack_ptr_grow (&argv_obstack, \"-save-temps\");\n   if (verbose)\n     obstack_ptr_grow (&argv_obstack, \"-v\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpdir\");\n+  obstack_ptr_grow (&argv_obstack, \"\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase\");\n+  obstack_ptr_grow (&argv_obstack, dump_filename);\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase-ext\");\n+  obstack_ptr_grow (&argv_obstack, \".c\");\n   obstack_ptr_grow (&argv_obstack, \"-c\");\n   obstack_ptr_grow (&argv_obstack, \"-shared\");\n   obstack_ptr_grow (&argv_obstack, \"-fPIC\");\n@@ -309,8 +320,13 @@ generate_target_descr_file (const char *target_compiler)\n static const char *\n generate_target_offloadend_file (const char *target_compiler)\n {\n-  const char *src_filename = make_temp_file (\"_target_offloadend.c\");\n-  const char *obj_filename = make_temp_file (\"_target_offloadend.o\");\n+  char *dump_filename = concat (dumppfx, \"_target_offloadend.c\", NULL);\n+  const char *src_filename = save_temps\n+    ? dump_filename\n+    : make_temp_file (\"_target_offloadend.c\");\n+  const char *obj_filename = save_temps\n+    ? concat (dumppfx, \"_target_offloadend.o\", NULL)\n+    : make_temp_file (\"_target_offloadend.o\");\n   temp_files[num_temps++] = src_filename;\n   temp_files[num_temps++] = obj_filename;\n   FILE *src_file = fopen (src_filename, \"w\");\n@@ -335,6 +351,12 @@ generate_target_offloadend_file (const char *target_compiler)\n     obstack_ptr_grow (&argv_obstack, \"-save-temps\");\n   if (verbose)\n     obstack_ptr_grow (&argv_obstack, \"-v\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpdir\");\n+  obstack_ptr_grow (&argv_obstack, \"\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase\");\n+  obstack_ptr_grow (&argv_obstack, dump_filename);\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase-ext\");\n+  obstack_ptr_grow (&argv_obstack, \".c\");\n   obstack_ptr_grow (&argv_obstack, \"-c\");\n   obstack_ptr_grow (&argv_obstack, \"-shared\");\n   obstack_ptr_grow (&argv_obstack, \"-fPIC\");\n@@ -350,8 +372,13 @@ generate_target_offloadend_file (const char *target_compiler)\n static const char *\n generate_host_descr_file (const char *host_compiler)\n {\n-  const char *src_filename = make_temp_file (\"_host_descr.c\");\n-  const char *obj_filename = make_temp_file (\"_host_descr.o\");\n+  char *dump_filename = concat (dumppfx, \"_host_descr.c\", NULL);\n+  const char *src_filename = save_temps\n+    ? dump_filename\n+    : make_temp_file (\"_host_descr.c\");\n+  const char *obj_filename = save_temps\n+    ? concat (dumppfx, \"_host_descr.o\", NULL)\n+    : make_temp_file (\"_host_descr.o\");\n   temp_files[num_temps++] = src_filename;\n   temp_files[num_temps++] = obj_filename;\n   FILE *src_file = fopen (src_filename, \"w\");\n@@ -402,6 +429,12 @@ generate_host_descr_file (const char *host_compiler)\n     obstack_ptr_grow (&argv_obstack, \"-save-temps\");\n   if (verbose)\n     obstack_ptr_grow (&argv_obstack, \"-v\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpdir\");\n+  obstack_ptr_grow (&argv_obstack, \"\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase\");\n+  obstack_ptr_grow (&argv_obstack, dump_filename);\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase-ext\");\n+  obstack_ptr_grow (&argv_obstack, \".c\");\n   obstack_ptr_grow (&argv_obstack, \"-c\");\n   obstack_ptr_grow (&argv_obstack, \"-fPIC\");\n   obstack_ptr_grow (&argv_obstack, \"-shared\");\n@@ -443,7 +476,10 @@ prepare_target_image (const char *target_compiler, int argc, char **argv)\n   sprintf (opt1, \"-Wl,%s\", target_descr_filename);\n   sprintf (opt2, \"-Wl,%s\", target_offloadend_filename);\n \n-  const char *target_so_filename = make_temp_file (\"_offload_intelmic.so\");\n+  char *dump_filename = concat (dumppfx, \".mkoffload\", NULL);\n+  const char *target_so_filename = save_temps\n+    ? concat (dumppfx, \"_offload_intelmic.so\", NULL)\n+    : make_temp_file (\"_offload_intelmic.so\");\n   temp_files[num_temps++] = target_so_filename;\n   struct obstack argv_obstack;\n   obstack_init (&argv_obstack);\n@@ -457,16 +493,20 @@ prepare_target_image (const char *target_compiler, int argc, char **argv)\n   for (int i = 1; i < argc; i++)\n     {\n       if (!strcmp (argv[i], \"-o\") && i + 1 != argc)\n-\tout_obj_filename = argv[++i];\n+\t++i;\n       else\n \tobstack_ptr_grow (&argv_obstack, argv[i]);\n     }\n-  if (!out_obj_filename)\n-    fatal_error (input_location, \"output file not specified\");\n   obstack_ptr_grow (&argv_obstack, opt2);\n   /* NB: Put -fPIC and -shared the last to create shared library.  */\n   obstack_ptr_grow (&argv_obstack, \"-fPIC\");\n   obstack_ptr_grow (&argv_obstack, \"-shared\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpdir\");\n+  obstack_ptr_grow (&argv_obstack, \"\");\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase\");\n+  obstack_ptr_grow (&argv_obstack, dump_filename);\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase-ext\");\n+  obstack_ptr_grow (&argv_obstack, \"\");\n   obstack_ptr_grow (&argv_obstack, \"-o\");\n   obstack_ptr_grow (&argv_obstack, target_so_filename);\n   compile_for_target (&argv_obstack);\n@@ -589,8 +629,20 @@ main (int argc, char **argv)\n \tsave_temps = true;\n       else if (strcmp (argv[i], \"-v\") == 0)\n \tverbose = true;\n+      else if (strcmp (argv[i], \"-dumpbase\") == 0\n+\t       && i + 1 < argc)\n+\tdumppfx = argv[++i];\n+      else if (strcmp (argv[i], \"-o\") == 0\n+\t       && i + 1 < argc)\n+\tout_obj_filename = argv[++i];\n     }\n \n+  if (!out_obj_filename)\n+    fatal_error (input_location, \"output file not specified\");\n+\n+  if (!dumppfx)\n+    dumppfx = out_obj_filename;\n+\n   const char *target_so_filename\n     = prepare_target_image (target_compiler, argc, argv);\n "}]}