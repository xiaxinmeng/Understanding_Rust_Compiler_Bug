{"sha": "1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5NzhmNWY3ZWJhNDUxNzA2ZjlkNmE3YjU0YWM4MjI2ZWY1OTFmYg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-12-02T00:04:36Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-12-02T00:04:36Z"}, "message": "c-decl.c (duplicate_decls, [...]): Remove leading capital from diagnostics.\n\n\t* c-decl.c (duplicate_decls, push_parm_decl): Remove leading\n\tcapital from diagnostics.\n\t* c-lex.c (cb_file_change): Similarly.\n\t* c-parse.in : Similarly.\n\t* cfgrtl.c (verify_flow_info): Similarly.\n\t* collect2.c: Similarly.\n\t* cppfiles.c (find_include_file): Similarly.\n\t* cppinit.c (cpp_handle_option): Similarly.\n\t* cpplex.c (cpp_spell_token): Similarly.\n\t* cppmain.c (do_preprocessing): Similarly.\n\t* gcc.c (translate_options, process_command, do_spec1,\n\tmain, pfatal_execute): Similarly.\n\t* genattr.c (main): Similarly.\n\t* genattrtab.c (check_attr_test, operate_exp, simplify_test_exp,\n\twrite_test_expr, main): Similarly.\n\t* gencodes.c (main): Similarly.\n\t* genconfig.c (main): Similarly.\n\t* genconstants.c (main): Similarly.\n\t* genemit.c (main): Similarly.\n\t* genextract.c (main): Similarly.\n\t* genflags.c (main): Similarly.\n\t* genopinit.c (main): Similarly.\n\t* genoutput.c (process_template, main): Similarly.\n\t* genpeep.c (main): Similarly.\n\t* genrecog.c (main): Similarly.\n\t* gensupport.c (is_predicable, identify_predicable_attribute,\n\talter_predicate_for_insn, init_md_reader_args, main): Similarly.\n\t* ggc-page.c (alloc_anon): Similarly.\n\t* mips-tfile.c (add_string, add_procedure, add_file, read_line,\n\tparse_begin, parse_bend, parse_def, parse_end, parse_file,\n\tparse_stabs_common, parse_stabs, write_varray, write_object,\n\tread_seek, copy_object, main, error): Similarly.\n\t* profile.c (compute_branch_probabilities): Similarly.\n\t* reg-stack.c (check_asm_stack_operands): Similarly.\n\t* reload.c (find_reloads): Similarly.\n\t* reload1.c (spill_failure, failed_reload): Similarly.\n\t* rtl-error.c (_fatal_insn_not_found): Similarly.\n\t* toplev.c (read_integral_parameter, crash_signal,\n\tdecode_f_option, set_target_switch, parse_options_and_default_flags)\n\t: Similarly.\n\t* tradcif.y (parse_number, yylex): Similarly.\n\t* tradcpp.c (main, fancy_abort): Similarly.\n\t* tree.c (tree_check_failed): Similarly.\n\t* varray.c (varray_check_failed): Similarly.\n\t* xcoffout.c (xcoff_output_standard_types): Similarly.\ncp:\n\t* call.c (build_java_interface_fn_ref): Similarly.\n\t* except.c (is_admissible_throw_operand): Similarly.\n\t* init.c (build_java_class_ref): Similarly.\n\t* xref.c (open_xref_file): Similarly.\nobjc:\n\t* objc-act.c (get_object_ref, lookup_and_install_protocols,\n\tbuild_objc_string_object, objc_declare_alias, build_ivar_chain,\n\tfinish_message_expr, build_protocol_expr, is_public,\n\tstart_class): Similarly.\ntestsuite:\n\t* objc.dg/alias.m: Update.\n\t* objc.dg/class-1.m: Update.\n\t* objc.dg/const-str-1.m: Update.\n\t* objc.dg/fwd-proto-1.m: Update.\n\t* objc.dg/id-1.m: Update.\n\t* objc.dg/super-class-1.m: Update.\n\nFrom-SVN: r47518", "tree": {"sha": "3dc37bbf8a99ef97f3a73dc491dbfca9f6a93d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dc37bbf8a99ef97f3a73dc491dbfca9f6a93d79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/comments", "author": null, "committer": null, "parents": [{"sha": "357351e5a702dde74fbccf7ba88027e166b0111c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357351e5a702dde74fbccf7ba88027e166b0111c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357351e5a702dde74fbccf7ba88027e166b0111c"}], "stats": {"total": 455, "additions": 249, "deletions": 206}, "files": [{"sha": "df03675ad3cb90000da742ab2fc062120769d5fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1,3 +1,56 @@\n+2001-12-02  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-decl.c (duplicate_decls, push_parm_decl): Remove leading\n+\tcapital from diagnostics.\n+\t* c-lex.c (cb_file_change): Similarly.\n+\t* c-parse.in : Similarly.\n+\t* cfgrtl.c (verify_flow_info): Similarly.\n+\t* collect2.c: Similarly.\n+\t* cppfiles.c (find_include_file): Similarly.\n+\t* cppinit.c (cpp_handle_option): Similarly.\n+\t* cpplex.c (cpp_spell_token): Similarly.\n+\t* cppmain.c (do_preprocessing): Similarly.\n+\t* gcc.c (translate_options, process_command, do_spec1,\n+\tmain, pfatal_execute): Similarly.\n+\t* genattr.c (main): Similarly.\n+\t* genattrtab.c (check_attr_test, operate_exp, simplify_test_exp,\n+\twrite_test_expr, main): Similarly.\n+\t* gencodes.c (main): Similarly.\n+\t* genconfig.c (main): Similarly.\n+\t* genconstants.c (main): Similarly.\n+\t* genemit.c (main): Similarly.\n+\t* genextract.c (main): Similarly.\n+\t* genflags.c (main): Similarly.\n+\t* genopinit.c (main): Similarly.\n+\t* genoutput.c (process_template, main): Similarly.\n+\t* genpeep.c (main): Similarly.\n+\t* genrecog.c (main): Similarly.\n+\t* gensupport.c (is_predicable, identify_predicable_attribute,\n+\talter_predicate_for_insn, init_md_reader_args, main): Similarly.\n+\t* ggc-page.c (alloc_anon): Similarly.\n+\t* mips-tfile.c (add_string, add_procedure, add_file, read_line,\n+\tparse_begin, parse_bend, parse_def, parse_end, parse_file,\n+\tparse_stabs_common, parse_stabs, write_varray, write_object,\n+\tread_seek, copy_object, main, error): Similarly.\n+\t* profile.c (compute_branch_probabilities): Similarly.\n+\t* reg-stack.c (check_asm_stack_operands): Similarly.\n+\t* reload.c (find_reloads): Similarly.\n+\t* reload1.c (spill_failure, failed_reload): Similarly.\n+\t* rtl-error.c (_fatal_insn_not_found): Similarly.\n+\t* toplev.c (read_integral_parameter, crash_signal,\n+\tdecode_f_option, set_target_switch, parse_options_and_default_flags)\n+\t: Similarly.\n+\t* tradcif.y (parse_number, yylex): Similarly.\n+\t* tradcpp.c (main, fancy_abort): Similarly.\n+\t* tree.c (tree_check_failed): Similarly.\n+\t* varray.c (varray_check_failed): Similarly.\n+\t* xcoffout.c (xcoff_output_standard_types): Similarly.\n+objc:\n+\t* objc-act.c (get_object_ref, lookup_and_install_protocols,\n+\tbuild_objc_string_object, objc_declare_alias, build_ivar_chain,\n+\tfinish_message_expr, build_protocol_expr, is_public,\n+\tstart_class): Similarly.\n+\n 2001-12-01  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* c-decl.c (duplicate_decls, parmlist_tags_warning): Remove"}, {"sha": "674759305a273d93500e89ed69347a6d70b992d5", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1621,13 +1621,13 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n \t      if (TREE_CHAIN (t) == 0\n \t\t  && TYPE_MAIN_VARIANT (type) != void_type_node)\n \t\t{\n-\t\t  error (\"A parameter list with an ellipsis can't match an empty parameter name list declaration\");\n+\t\t  error (\"a parameter list with an ellipsis can't match an empty parameter name list declaration\");\n \t\t  break;\n \t\t}\n \n \t      if (simple_type_promotes_to (type) != NULL_TREE)\n \t\t{\n-\t\t  error (\"An argument type that has a default promotion can't match an empty parameter name list declaration\");\n+\t\t  error (\"an argument type that has a default promotion can't match an empty parameter name list declaration\");\n \t\t  break;\n \t\t}\n \t    }\n@@ -3765,7 +3765,7 @@ push_parm_decl (parm)\n       olddecl = lookup_name (DECL_NAME (decl));\n       if (pedantic && olddecl != 0 && TREE_CODE (olddecl) == TYPE_DECL)\n \tpedwarn_with_decl (decl,\n-\t\t\t   \"ANSI C forbids parameter `%s' shadowing typedef\");\n+\t\t\t   \"ISO C forbids parameter `%s' shadowing typedef\");\n     }\n #endif\n "}, {"sha": "94bc63e6609d06e7e02b7fe21c66e62951d45039", "filename": "gcc/c-lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -297,7 +297,7 @@ cb_file_change (pfile, new_map)\n \t{\n \t  warning_with_file_and_line\n \t    (input_filename, lineno,\n-\t     \"This file contains more '%c's than '%c's\",\n+\t     \"this file contains more '%c's than '%c's\",\n \t     indent_level > input_file_stack->indent_level ? '{' : '}',\n \t     indent_level > input_file_stack->indent_level ? '}' : '{');\n \t}"}, {"sha": "fe57047ec9cd9e75463919bf5a658d3d01370f99", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1801,7 +1801,7 @@ ifobjc\n \t\t    $$ = get_class_ivars (interface);\n \t\t  else\n \t\t    {\n-\t\t      error (\"Cannot find interface declaration for `%s'\",\n+\t\t      error (\"cannot find interface declaration for `%s'\",\n \t\t\t     IDENTIFIER_POINTER ($3));\n \t\t      $$ = NULL_TREE;\n \t\t    }"}, {"sha": "66dd7ffcf2a2f937d40bc55aaf496b0eabc953ab", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1542,7 +1542,7 @@ verify_flow_info ()\n \t  break;\n       if (!x)\n \t{\n-\t  error (\"End insn %d for block %d not found in the insn stream.\",\n+\t  error (\"end insn %d for block %d not found in the insn stream\",\n \t\t INSN_UID (end), bb->index);\n \t  err = 1;\n \t}\n@@ -1556,7 +1556,7 @@ verify_flow_info ()\n \t     used by other passes.  */\n \t  if (bb_info[INSN_UID (x)] != NULL)\n \t    {\n-\t      error (\"Insn %d is in multiple basic blocks (%d and %d)\",\n+\t      error (\"insn %d is in multiple basic blocks (%d and %d)\",\n \t\t     INSN_UID (x), bb->index, bb_info[INSN_UID (x)]->index);\n \t      err = 1;\n \t    }\n@@ -1567,7 +1567,7 @@ verify_flow_info ()\n \t}\n       if (!x)\n \t{\n-\t  error (\"Head insn %d for block %d not found in the insn stream.\",\n+\t  error (\"head insn %d for block %d not found in the insn stream\",\n \t\t INSN_UID (head), bb->index);\n \t  err = 1;\n \t}\n@@ -1614,7 +1614,7 @@ verify_flow_info ()\n \t\t    {\n \t\t      error (\"verify_flow_info: Incorrect fallthru %i->%i\",\n \t\t\t     e->src->index, e->dest->index);\n-\t\t      fatal_insn (\"Wrong insn in the fallthru edge\", insn);\n+\t\t      fatal_insn (\"wrong insn in the fallthru edge\", insn);\n \t\t      err = 1;\n \t\t    }\n \t    }\n@@ -1643,7 +1643,7 @@ verify_flow_info ()\n \t\t|| (GET_CODE (insn) == NOTE\n \t\t    && NOTE_LINE_NUMBER (insn) == NOTE_INSN_BASIC_BLOCK))\n \t\t{\n-\t\t  error (\"Missing barrier after block %i\", bb->index);\n+\t\t  error (\"missing barrier after block %i\", bb->index);\n \t\t  err = 1;\n \t\t  break;\n \t\t}\n@@ -1654,7 +1654,7 @@ verify_flow_info ()\n \t{\n \t  if (e->dest != bb)\n \t    {\n-\t      error (\"Basic block %d pred edge is corrupted\", bb->index);\n+\t      error (\"basic block %d pred edge is corrupted\", bb->index);\n \t      fputs (\"Predecessor: \", stderr);\n \t      dump_edge_info (stderr, e, 0);\n \t      fputs (\"\\nSuccessor: \", stderr);\n@@ -1670,10 +1670,10 @@ verify_flow_info ()\n \t   {\n \t     debug_rtx (x);\n \t     if (! BLOCK_FOR_INSN (x))\n-\t       error (\"Insn %d is inside basic block %d but block_for_insn is NULL\",\n+\t       error (\"insn %d is inside basic block %d but block_for_insn is NULL\",\n \t\t      INSN_UID (x), bb->index);\n \t     else\n-\t       error (\"Insn %d is inside basic block %d but block_for_insn is %i\",\n+\t       error (\"insn %d is inside basic block %d but block_for_insn is %i\",\n \t\t      INSN_UID (x), bb->index, BLOCK_FOR_INSN (x)->index);\n \t     err = 1;\n \t   }\n@@ -1722,8 +1722,8 @@ verify_flow_info ()\n \t\t  || GET_CODE (x) == CODE_LABEL\n \t\t  || GET_CODE (x) == BARRIER)\n \t\t{\n-\t\t  error (\"In basic block %d:\", bb->index);\n-\t\t  fatal_insn (\"Flow control insn inside a basic block\", x);\n+\t\t  error (\"in basic block %d:\", bb->index);\n+\t\t  fatal_insn (\"flow control insn inside a basic block\", x);\n \t\t}\n \n \t      x = NEXT_INSN (x);\n@@ -1743,7 +1743,7 @@ verify_flow_info ()\n   for (i = -2; i < n_basic_blocks; ++i)\n     if (edge_checksum[i + 2])\n       {\n-\terror (\"Basic block %i edge lists are corrupted\", i);\n+\terror (\"basic block %i edge lists are corrupted\", i);\n \terr = 1;\n       }\n \n@@ -1757,7 +1757,7 @@ verify_flow_info ()\n \t  basic_block bb = NOTE_BASIC_BLOCK (x);\n \t  num_bb_notes++;\n \t  if (bb->index != last_bb_num_seen + 1)\n-\t    internal_error (\"Basic blocks not numbered consecutively.\");\n+\t    internal_error (\"basic blocks not numbered consecutively.\");\n \n \t  last_bb_num_seen = bb->index;\n \t}\n@@ -1784,15 +1784,15 @@ verify_flow_info ()\n \t      break;\n \n \t    default:\n-\t      fatal_insn (\"Insn outside basic block\", x);\n+\t      fatal_insn (\"insn outside basic block\", x);\n \t    }\n \t}\n \n       if (INSN_P (x)\n \t  && GET_CODE (x) == JUMP_INSN\n \t  && returnjump_p (x) && ! condjump_p (x)\n \t  && ! (NEXT_INSN (x) && GET_CODE (NEXT_INSN (x)) == BARRIER))\n-\t    fatal_insn (\"Return not followed by barrier\", x);\n+\t    fatal_insn (\"return not followed by barrier\", x);\n \n       x = NEXT_INSN (x);\n     }"}, {"sha": "19009e301809c6b9561cb252dda7a9ef4fcb49cb", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -2897,7 +2897,7 @@ if (debug) fprintf (stderr, \"found: %s\\n\", lib_buf);\n   if (debug)\n     fprintf (stderr, \"not found\\n\");\n   else\n-    fatal (\"Library lib%s not found\", name);\n+    fatal (\"library lib%s not found\", name);\n   return (NULL);\n }\n "}, {"sha": "2b6914bdfd8f6acb7afd3717289558cfb8e66eed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1,3 +1,10 @@\n+2001-12-02  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* call.c (build_java_interface_fn_ref): Similarly.\n+\t* except.c (is_admissible_throw_operand): Similarly.\n+\t* init.c (build_java_class_ref): Similarly.\n+\t* xref.c (open_xref_file): Similarly.\n+\n 2001-12-01  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* class.c (finish_struct): Remove trailing periods from messages."}, {"sha": "0a59b179de3549faf1e0315409936b7d6ba62e93", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -4398,7 +4398,7 @@ build_java_interface_fn_ref (fn, instance)\n   if (!iface_ref || TREE_CODE (iface_ref) != VAR_DECL\n       || DECL_CONTEXT (iface_ref) != iface)\n     {\n-      cp_error (\"Could not find class$ field in java interface type `%T'\", \n+      cp_error (\"could not find class$ field in java interface type `%T'\", \n \t\tiface);\n       return error_mark_node;\n     }"}, {"sha": "079df977566c824a575c2c52b7eb19ae6b9b9d40", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -772,7 +772,7 @@ is_admissible_throw_operand (expr)\n             conversion.  */\n   else if (CLASS_TYPE_P (type) && CLASSTYPE_PURE_VIRTUALS (type))\n     {\n-      cp_error (\"Expression '%E' of abstract class type '%T' cannot be used in throw-expression\", expr, type);\n+      cp_error (\"expression '%E' of abstract class type '%T' cannot be used in throw-expression\", expr, type);\n       return false;\n     }\n "}, {"sha": "b7b230d3ca2d6b7209b2e123c4987b01608f9934", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -2138,7 +2138,7 @@ build_java_class_ref (type)\n \t  break;\n \t}\n     if (!field)\n-      internal_error (\"Can't find class$\");\n+      internal_error (\"can't find class$\");\n     }\n \n   class_decl = IDENTIFIER_GLOBAL_VALUE (name);"}, {"sha": "5a2127be8a113f2a22c30357474cb240dd683b09", "filename": "gcc/cp/xref.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcp%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fxref.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -823,7 +823,7 @@ open_xref_file(file)\n \n   if (xref_file == NULL)\n     {\n-      error(\"Can't create cross-reference file `%s'\", xref_name);\n+      error(\"can't create cross-reference file `%s'\", xref_name);\n       doing_xref = 0;\n     }\n }"}, {"sha": "52c095f28fcc846e21c55ac6e8aca9c734d75418", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -548,7 +548,7 @@ find_include_file (pfile, header, type)\n \n   if (path == NULL)\n     {\n-      cpp_error (pfile, \"No include path in which to find %s\", fname);\n+      cpp_error (pfile, \"no include path in which to find %s\", fname);\n       return NO_INCLUDE_PATH;\n     }\n "}, {"sha": "9975577516c3d4dcd44c914f6ca87159b01d2c00", "filename": "gcc/cppinit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1521,7 +1521,7 @@ cpp_handle_option (pfile, argc, argv)\n \t    CPP_OPTION (pfile, out_fname) = arg;\n \t  else\n \t    {\n-\t      cpp_fatal (pfile, \"Output filename specified twice\");\n+\t      cpp_fatal (pfile, \"output filename specified twice\");\n \t      return argc;\n \t    }\n \t  break;"}, {"sha": "45d28b66ab20444b2c970f6fff3f8d76bf0088e9", "filename": "gcc/cpplex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1376,7 +1376,7 @@ cpp_spell_token (pfile, token, buffer)\n       break;\n \n     case SPELL_NONE:\n-      cpp_ice (pfile, \"Unspellable token %s\", TOKEN_NAME (token));\n+      cpp_ice (pfile, \"unspellable token %s\", TOKEN_NAME (token));\n       break;\n     }\n "}, {"sha": "237f901932d3545a482fd41828abcf0bd56bc3d1", "filename": "gcc/cppmain.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -118,7 +118,7 @@ do_preprocessing (argc, argv)\n \n   if (argi < argc)\n     {\n-      cpp_fatal (pfile, \"Invalid option %s\", argv[argi]);\n+      cpp_fatal (pfile, \"invalid option %s\", argv[argi]);\n       return;\n     }\n "}, {"sha": "b9ee4ef0caaddc9462de6a600c5a6a9fb11ad5b3", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1088,7 +1088,7 @@ translate_options (argcp, argvp)\n \t\t\tif (strlen (option_map[k].name) >= arglen\n \t\t\t    && !strncmp (argv[i], option_map[k].name, arglen))\n \t\t\t  {\n-\t\t\t    error (\"Ambiguous abbreviation %s\", argv[i]);\n+\t\t\t    error (\"ambiguous abbreviation %s\", argv[i]);\n \t\t\t    break;\n \t\t\t  }\n \n@@ -1115,7 +1115,7 @@ translate_options (argcp, argvp)\n \n \t\t  else if (strchr (arginfo, '*') != 0)\n \t\t    {\n-\t\t      error (\"Incomplete `%s' option\", option_map[j].name);\n+\t\t      error (\"incomplete `%s' option\", option_map[j].name);\n \t\t      break;\n \t\t    }\n \n@@ -1126,7 +1126,7 @@ translate_options (argcp, argvp)\n \t\t\t{\n \t\t\t  if (i + 1 == argc)\n \t\t\t    {\n-\t\t\t      error (\"Missing argument to `%s' option\",\n+\t\t\t      error (\"missing argument to `%s' option\",\n \t\t\t\t     option_map[j].name);\n \t\t\t      break;\n \t\t\t    }\n@@ -1139,7 +1139,7 @@ translate_options (argcp, argvp)\n \t\t  else if (strchr (arginfo, 'o') == 0)\n \t\t    {\n \t\t      if (arg != 0)\n-\t\t\terror (\"Extraneous argument to `%s' option\",\n+\t\t\terror (\"extraneous argument to `%s' option\",\n \t\t\t       option_map[j].name);\n \t\t      arg = 0;\n \t\t    }\n@@ -3886,11 +3886,11 @@ process_command (argc, argv)\n \t{\n \t  /* -save-temps overrides -pipe, so that temp files are produced */\n \t  if (save_temps_flag)\n-\t    error (\"Warning: -pipe ignored because -save-temps specified\");\n+\t    error (\"warning: -pipe ignored because -save-temps specified\");\n           /* -time overrides -pipe because we can't get correct stats when\n \t     multiple children are running at once.  */\n \t  else if (report_times)\n-\t    error (\"Warning: -pipe ignored because -time specified\");\n+\t    error (\"warning: -pipe ignored because -time specified\");\n \t}\n       else if (argv[i][0] == '-' && argv[i][1] != 0)\n \t{\n@@ -4921,7 +4921,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t      /* Catch the case where a spec string contains something like\n \t\t '%{foo:%*}'.  ie there is no * in the pattern on the left\n \t\t hand side of the :.  */\n-\t      error (\"Spec failure: '%%*' has not been initialised by pattern match\");\n+\t      error (\"spec failure: '%%*' has not been initialised by pattern match\");\n \t    break;\n \n \t    /* Process a string found as the value of a spec given by name.\n@@ -4930,7 +4930,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t       %[...] modifies -D options the way %P does;\n \t       %(...) uses the spec unmodified.  */\n \t  case '[':\n-\t    error (\"Warning: use of obsolete %%[ operator in specs\");\n+\t    error (\"warning: use of obsolete %%[ operator in specs\");\n \t  case '(':\n \t    {\n \t      const char *name = p;\n@@ -5073,7 +5073,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t    break;\n \n \t  default:\n-\t    error (\"Spec failure: Unrecognised spec option '%c'\", c);\n+\t    error (\"spec failure: unrecognised spec option '%c'\", c);\n \t    break;\n \t  }\n \tbreak;\n@@ -5183,7 +5183,7 @@ handle_braces (p)\n \t      else if (*q == '}')\n \t\tcount--;\n \t      else if (*q == 0)\n-\t\tfatal (\"Mismatched braces in specs\");\n+\t\tfatal (\"mismatched braces in specs\");\n \t      q++;\n \t    }\n \t  endbody = q;\n@@ -5963,7 +5963,7 @@ main (argc, argv)\n     }\n \n   if (n_infiles == added_libraries)\n-    fatal (\"No input files\");\n+    fatal (\"no input files\");\n \n   /* Make a place to record the compiler output file names\n      that correspond to the input files.  */\n@@ -6222,7 +6222,7 @@ pfatal_pexecute (errmsg_fmt, errmsg_arg)\n void\n fancy_abort ()\n {\n-  fatal (\"Internal gcc abort.\");\n+  fatal (\"internal gcc abort.\");\n }\n \f\n /* Output an error message and exit */"}, {"sha": "4d53077c506602a05bdd0912d071ed09cbf90664", "filename": "gcc/genattr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -208,7 +208,7 @@ main (argc, argv)\n   progname = \"genattr\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "f1f383c31e37d29a6cbfb19bf7b124d6ba874490", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -948,11 +948,11 @@ check_attr_test (exp, is_const, lineno)\n \t\t  return exp;\n \t\t}\n \t      else\n-\t\tfatal (\"Unknown attribute `%s' in EQ_ATTR\", XSTR (exp, 0));\n+\t\tfatal (\"unknown attribute `%s' in EQ_ATTR\", XSTR (exp, 0));\n \t    }\n \n \t  if (is_const && ! attr->is_const)\n-\t    fatal (\"Constant expression uses insn attribute `%s' in EQ_ATTR\",\n+\t    fatal (\"constant expression uses insn attribute `%s' in EQ_ATTR\",\n \t\t   XSTR (exp, 0));\n \n \t  /* Copy this just to make it permanent,\n@@ -969,7 +969,7 @@ check_attr_test (exp, is_const, lineno)\n \t    {\n \t      for (p = XSTR (exp, 1); *p; p++)\n \t\tif (! ISDIGIT (*p))\n-\t\t  fatal (\"Attribute `%s' takes only numeric values\",\n+\t\t  fatal (\"attribute `%s' takes only numeric values\",\n \t\t\t XSTR (exp, 0));\n \t    }\n \t  else\n@@ -980,7 +980,7 @@ check_attr_test (exp, is_const, lineno)\n \t\t  break;\n \n \t      if (av == NULL)\n-\t\tfatal (\"Unknown value `%s' for `%s' attribute\",\n+\t\tfatal (\"unknown value `%s' for `%s' attribute\",\n \t\t       XSTR (exp, 1), XSTR (exp, 0));\n \t    }\n \t}\n@@ -1775,7 +1775,7 @@ operate_exp (op, left, right)\n \t  return newexp;\n \t}\n       else\n-\tfatal (\"Badly formed attribute value\");\n+\tfatal (\"badly formed attribute value\");\n     }\n \n   /* A hack to prevent expand_units from completely blowing up: ORX_OP does\n@@ -1827,7 +1827,7 @@ operate_exp (op, left, right)\n     }\n \n   else\n-    fatal (\"Badly formed attribute value\");\n+    fatal (\"badly formed attribute value\");\n   /* NOTREACHED */\n   return NULL;\n }\n@@ -3305,7 +3305,7 @@ simplify_test_exp (exp, insn_code, insn_index)\n \t{\n \t  i = compute_alternative_mask (exp, AND);\n \t  if (i & ~insn_alternatives[insn_code])\n-\t    fatal (\"Invalid alternative specified for pattern number %d\",\n+\t    fatal (\"invalid alternative specified for pattern number %d\",\n \t\t   insn_index);\n \n \t  /* If all alternatives are excluded, this is false.  */\n@@ -3389,7 +3389,7 @@ simplify_test_exp (exp, insn_code, insn_index)\n \t{\n \t  i = compute_alternative_mask (exp, IOR);\n \t  if (i & ~insn_alternatives[insn_code])\n-\t    fatal (\"Invalid alternative specified for pattern number %d\",\n+\t    fatal (\"invalid alternative specified for pattern number %d\",\n \t\t   insn_index);\n \n \t  /* If all alternatives are included, this is true.  */\n@@ -4745,7 +4745,7 @@ write_test_expr (exp, flags)\n       if (XSTR (exp, 1) == NULL || *XSTR (exp, 1) == '\\0')\n \t{\n \t  if (GET_MODE (exp) == VOIDmode)\n-\t    fatal (\"Null MATCH_OPERAND specified as test\");\n+\t    fatal (\"null MATCH_OPERAND specified as test\");\n \t  else\n \t    printf (\"GET_MODE (operands[%d]) == %smode\",\n \t\t    XINT (exp, 0), GET_MODE_NAME (GET_MODE (exp)));\n@@ -6065,7 +6065,7 @@ main (argc, argv)\n   progname = \"genattrtab\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "0611eecaf03210e0a8bf081eb583600eae6d722c", "filename": "gcc/gencodes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -54,7 +54,7 @@ main (argc, argv)\n   progname = \"gencodes\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "d7709b0eb4a46ff8f0cf3c3e3841084901dbb9ad", "filename": "gcc/genconfig.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -275,7 +275,7 @@ main (argc, argv)\n   progname = \"genconfig\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "9208f0c00092ad7348b8c771e015a44eaf1c8b48", "filename": "gcc/genconstants.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconstants.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -61,7 +61,7 @@ main (argc, argv)\n   progname = \"genconstants\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "86c852c2f5171ac05d40062f956c059e85902eb2", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -787,7 +787,7 @@ main (argc, argv)\n   progname = \"genemit\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "72e3e56e4491cbf3fbe2b2b250e07efff968033b", "filename": "gcc/genextract.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -360,7 +360,7 @@ main (argc, argv)\n   progname = \"genextract\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "031155f14de9e4fff251d686b5db0181f665c2be", "filename": "gcc/genflags.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenflags.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenflags.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenflags.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -228,7 +228,7 @@ main (argc, argv)\n   obstack_init (&obstack);\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "384a06601d81eb0ea3e7b600130463d891d6eab3", "filename": "gcc/genopinit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -317,7 +317,7 @@ main (argc, argv)\n   progname = \"genopinit\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "b11e08331ed3f4773b91e55c06c0d6234d034663", "filename": "gcc/genoutput.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -713,7 +713,7 @@ process_template (d, template)\n       if (i != d->n_alternatives)\n \t{\n \t  message_with_line (d->lineno,\n-\t\t\t     \"Wrong number of alternatives in the output template\");\n+\t\t\t     \"wrong number of alternatives in the output template\");\n \t  have_error = 1;\n \t}\n \n@@ -951,7 +951,7 @@ main (argc, argv)\n   progname = \"genoutput\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "036f68812d17180901bfa641d5ea9e3ceb976d06", "filename": "gcc/genpeep.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -383,7 +383,7 @@ main (argc, argv)\n   progname = \"genpeep\";\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "71e9b842145a8ca303a5c5d7a46ff62c6bf36890", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -2687,7 +2687,7 @@ main (argc, argv)\n   memset (&peephole2_tree, 0, sizeof peephole2_tree);\n \n   if (argc <= 1)\n-    fatal (\"No input file name\");\n+    fatal (\"no input file name\");\n \n   if (init_md_reader_args (argc, argv) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);"}, {"sha": "415df01775a9099d891039c1bde6d05919292e93", "filename": "gcc/gensupport.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -485,7 +485,7 @@ is_predicable (elem)\n     return 0;\n \n   message_with_line (elem->lineno,\n-\t\t     \"Unknown value `%s' for `predicable' attribute\",\n+\t\t     \"unknown value `%s' for `predicable' attribute\",\n \t\t     value);\n   errors = 1;\n   return 0;\n@@ -508,7 +508,7 @@ identify_predicable_attribute ()\n       goto found;\n \n   message_with_line (define_cond_exec_queue->lineno,\n-\t\t     \"Attribute `predicable' not defined\");\n+\t\t     \"attribute `predicable' not defined\");\n   errors = 1;\n   return;\n \n@@ -522,7 +522,7 @@ identify_predicable_attribute ()\n   if (p_true == NULL || strchr (++p_true, ',') != NULL)\n     {\n       message_with_line (elem->lineno,\n-\t\t\t \"Attribute `predicable' is not a boolean\");\n+\t\t\t \"attribute `predicable' is not a boolean\");\n       errors = 1;\n       return;\n     }\n@@ -539,13 +539,13 @@ identify_predicable_attribute ()\n \n     case CONST:\n       message_with_line (elem->lineno,\n-\t\t\t \"Attribute `predicable' cannot be const\");\n+\t\t\t \"attribute `predicable' cannot be const\");\n       errors = 1;\n       return;\n \n     default:\n       message_with_line (elem->lineno,\n-\t\t\t \"Attribute `predicable' must have a constant default\");\n+\t\t\t \"attribute `predicable' must have a constant default\");\n       errors = 1;\n       return;\n     }\n@@ -557,7 +557,7 @@ identify_predicable_attribute ()\n   else\n     {\n       message_with_line (elem->lineno,\n-\t\t\t \"Unknown value `%s' for `predicable' attribute\",\n+\t\t\t \"unknown value `%s' for `predicable' attribute\",\n \t\t\t value);\n       errors = 1;\n     }\n@@ -658,7 +658,7 @@ alter_predicate_for_insn (pattern, alt, max_op, lineno)\n \tif (n_alternatives (c) != 1)\n \t  {\n \t    message_with_line (lineno,\n-\t\t\t       \"Too many alternatives for operand %d\",\n+\t\t\t       \"too many alternatives for operand %d\",\n \t\t\t       XINT (pattern, 0));\n \t    errors = 1;\n \t    return NULL;\n@@ -989,15 +989,15 @@ init_md_reader_args (argc, argv)\n \t\tif (argv[i][1] == 'I' && argv[i][2] != 0)\n \t\t  dirtmp->fname = argv[i] + 2;\n \t\telse if (i + 1 == argc)\n-\t\t  fatal (\"Directory name missing after -I option\");\n+\t\t  fatal (\"directory name missing after -I option\");\n \t\telse\n \t\t  dirtmp->fname = argv[++i];\n \t\tif (strlen (dirtmp->fname) > max_include_len)\n \t\t  max_include_len = strlen (dirtmp->fname);\n \t      }\n \t      break;\n \t    default:\n-\t      fatal (\"Invalid option `%s'\", argv[i]);\n+\t      fatal (\"invalid option `%s'\", argv[i]);\n \n \t    }\n \t}"}, {"sha": "b941f54aed34fdc728656dd3cf18a07cc7de22fa", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -518,7 +518,7 @@ alloc_anon (pref, size)\n \n   if (page == (char *) MAP_FAILED)\n     {\n-      perror (\"Virtual memory exhausted\");\n+      perror (\"virtual memory exhausted\");\n       exit (FATAL_EXIT_CODE);\n     }\n "}, {"sha": "167742a605216a83245a4f4d4902231b1d2583f4", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1820,7 +1820,7 @@ add_string (vp, hash_tbl, start, end_p1, ret_hash)\n   symint_t hi;\n \n   if (len >= (Ptrdiff_t) PAGE_USIZE)\n-    fatal (\"String too big (%ld bytes)\", (long) len);\n+    fatal (\"string too big (%ld bytes)\", (long) len);\n \n   hash_ptr = hash_string (start, len, hash_tbl, &hi);\n   if (hash_ptr == (shash_t *) 0)\n@@ -2457,7 +2457,7 @@ add_procedure (func_start, func_end_p1)\n     }\n \n   if (cur_oproc_ptr == (PDR *) 0)\n-    error (\"Did not find a PDR block for %.*s\",\n+    error (\"did not find a PDR block for %.*s\",\n \t   (int) (func_end_p1 - func_start), func_start);\n \n   /* Determine the start of symbols.  */\n@@ -2526,7 +2526,7 @@ add_file (file_start, file_end_p1)\n \t\t  (shash_t **) 0);\n \n       if (file_end_p1 - file_start > (long) PAGE_USIZE-2)\n-\tfatal (\"Filename goes over one page boundary\");\n+\tfatal (\"filename goes over one page boundary\");\n \n       /* Push the start of the filename. We assume that the filename\n          will be stored at string offset 1.  */\n@@ -2713,7 +2713,7 @@ read_line ()\n \t}\n \n       else if (ch == '\\0')\n-\terror (\"Null character found in input\");\n+\terror (\"null character found in input\");\n \n       else if (!comment_p)\n \t{\n@@ -2775,14 +2775,14 @@ parse_begin (start)\n \n   if (hash_ptr == (shash_t *) 0)\n     {\n-      error (\"Label %.*s not found for #.begin\",\n+      error (\"label %.*s not found for #.begin\",\n \t     (int) (end_p1 - start), start);\n       return;\n     }\n \n   if (cur_oproc_begin == (SYMR *) 0)\n     {\n-      error (\"Procedure table %.*s not found for #.begin\",\n+      error (\"procedure table %.*s not found for #.begin\",\n \t     (int) (end_p1 - start), start);\n       return;\n     }\n@@ -2827,13 +2827,13 @@ parse_bend (start)\n \n   if (hash_ptr == (shash_t *) 0)\n     {\n-      error (\"Label %.*s not found for #.bend\", (int) (end_p1 - start), start);\n+      error (\"label %.*s not found for #.bend\", (int) (end_p1 - start), start);\n       return;\n     }\n \n   if (cur_oproc_begin == (SYMR *) 0)\n     {\n-      error (\"Procedure table %.*s not found for #.bend\",\n+      error (\"procedure table %.*s not found for #.bend\",\n \t     (int) (end_p1 - start), start);\n       return;\n     }\n@@ -3289,7 +3289,7 @@ parse_def (name_start)\n \t{\n \t  if (tag_start == (char *) 0)\n \t    {\n-\t      error (\"No tag specified for %.*s\",\n+\t      error (\"no tag specified for %.*s\",\n \t\t     (int) (name_end_p1 - name_start),\n \t\t     name_start);\n \t      return;\n@@ -3480,7 +3480,7 @@ parse_end (start)\n     value = cur_oproc_end->value;\n \n   else\n-    error (\"Cannot find .end block for %.*s\",\n+    error (\"cannot find .end block for %.*s\",\n \t   (int) (end_func_p1 - start_func), start_func);\n \n   (void) add_local_symbol (start_func, end_func_p1,\n@@ -3544,13 +3544,13 @@ parse_file (start)\n       || (start_name = strchr (p, '\"')) == (char *) 0\n       || (end_name_p1 = strrchr (++start_name, '\"')) == (char *) 0)\n     {\n-      error (\"Invalid .file directive\");\n+      error (\"invalid .file directive\");\n       return;\n     }\n \n   if (cur_proc_ptr != (PDR *) 0)\n     {\n-      error (\"No way to handle .file within .ent/.end section\");\n+      error (\"no way to handle .file within .ent/.end section\");\n       return;\n     }\n \n@@ -3625,7 +3625,7 @@ parse_stabs_common (string_start, string_end, rest)\n   /* Read code from stabs.  */\n   if (!ISDIGIT (*rest))\n     {\n-      error (\"Invalid .stabs/.stabn directive, code is non-numeric\");\n+      error (\"invalid .stabs/.stabn directive, code is non-numeric\");\n       return;\n     }\n \n@@ -3645,22 +3645,22 @@ parse_stabs_common (string_start, string_end, rest)\n       /* Skip ,0, */\n       if (p[0] != ',' || p[1] != '0' || p[2] != ',' || !ISDIGIT (p[3]))\n \t{\n-\t  error (\"Invalid line number .stabs/.stabn directive\");\n+\t  error (\"invalid line number .stabs/.stabn directive\");\n \t  return;\n \t}\n \n       code = strtol (p+3, &p, 0);\n       ch = *++p;\n       if (p[-1] != ',' || ISDIGIT (ch) || !IS_ASM_IDENT (ch))\n \t{\n-\t  error (\"Invalid line number .stabs/.stabn directive\");\n+\t  error (\"invalid line number .stabs/.stabn directive\");\n \t  return;\n \t}\n \n       dummy_symr.index = code;\n       if (dummy_symr.index != code)\n \t{\n-\t  error (\"Line number (%lu) for .stabs/.stabn directive cannot fit in index field (20 bits)\",\n+\t  error (\"line number (%lu) for .stabs/.stabn directive cannot fit in index field (20 bits)\",\n \t\t code);\n \n \t  return;\n@@ -3674,13 +3674,13 @@ parse_stabs_common (string_start, string_end, rest)\n       if (shash_ptr == (shash_t *) 0\n \t  || (sym_ptr = shash_ptr->sym_ptr) == (SYMR *) 0)\n \t{\n-\t  error (\"Invalid .stabs/.stabn directive, value not found\");\n+\t  error (\"invalid .stabs/.stabn directive, value not found\");\n \t  return;\n \t}\n \n       if ((st_t) sym_ptr->st != st_Label)\n \t{\n-\t  error (\"Invalid line number .stabs/.stabn directive\");\n+\t  error (\"invalid line number .stabs/.stabn directive\");\n \t  return;\n \t}\n \n@@ -3705,7 +3705,7 @@ parse_stabs_common (string_start, string_end, rest)\n       if (!IS_ASM_IDENT (ch) && ch != '-')\n \t{\n \tfailure:\n-\t  error (\"Invalid .stabs/.stabn directive, bad character\");\n+\t  error (\"invalid .stabs/.stabn directive, bad character\");\n \t  return;\n \t}\n \n@@ -3716,13 +3716,13 @@ parse_stabs_common (string_start, string_end, rest)\n \t  value = strtol (p, &p, 0);\n \t  if (*p != '\\n')\n \t    {\n-\t      error (\"Invalid .stabs/.stabn directive, stuff after numeric value\");\n+\t      error (\"invalid .stabs/.stabn directive, stuff after numeric value\");\n \t      return;\n \t    }\n \t}\n       else if (!IS_ASM_IDENT (ch))\n \t{\n-\t  error (\"Invalid .stabs/.stabn directive, bad character\");\n+\t  error (\"invalid .stabs/.stabn directive, bad character\");\n \t  return;\n \t}\n       else\n@@ -3754,7 +3754,7 @@ parse_stabs_common (string_start, string_end, rest)\n \t      if (shash_ptr == (shash_t *) 0\n \t\t  || shash_ptr->esym_ptr == (EXTR *) 0)\n \t\t{\n-\t\t  error (\"Invalid .stabs/.stabn directive, value not found\");\n+\t\t  error (\"invalid .stabs/.stabn directive, value not found\");\n \t\t  return;\n \t\t}\n \t      else\n@@ -3780,7 +3780,7 @@ parse_stabs_common (string_start, string_end, rest)\n \t      if (((!ISDIGIT (*end_p1)) && (*end_p1 != '-'))\n \t\t  || ((ch != '+') && (ch != '-')))\n \t\t{\n-\t\t  error (\"Invalid .stabs/.stabn directive, badly formed value\");\n+\t\t  error (\"invalid .stabs/.stabn directive, badly formed value\");\n \t\t  return;\n \t\t}\n \t      if (ch == '+')\n@@ -3790,7 +3790,7 @@ parse_stabs_common (string_start, string_end, rest)\n \n \t      if (*p != '\\n')\n \t\t{\n-\t\t  error (\"Invalid .stabs/.stabn directive, stuff after numeric value\");\n+\t\t  error (\"invalid .stabs/.stabn directive, stuff after numeric value\");\n \t\t  return;\n \t\t}\n \t    }\n@@ -3812,7 +3812,7 @@ parse_stabs (start)\n \n   if (*start != '\"' || end == (const char *) 0 || end[1] != ',')\n     {\n-      error (\"Invalid .stabs directive, no string\");\n+      error (\"invalid .stabs directive, no string\");\n       return;\n     }\n \n@@ -4115,7 +4115,7 @@ write_varray (vp, offset, str)\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != num_write)\n-\tfatal (\"Wrote %d bytes to %s, system returned %d\",\n+\tfatal (\"wrote %d bytes to %s, system returned %d\",\n \t       num_write,\n \t       object_name,\n \t       sys_write);\n@@ -4151,7 +4151,7 @@ write_object ()\n     pfatal_with_name (object_name);\n \n   else if (sys_write != sizeof (symbolic_header))\n-    fatal (\"Wrote %d bytes to %s, system returned %d\",\n+    fatal (\"wrote %d bytes to %s, system returned %d\",\n \t   (int) sizeof (symbolic_header),\n \t   object_name,\n \t   sys_write);\n@@ -4185,7 +4185,7 @@ write_object ()\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != symbolic_header.cbLine)\n-\tfatal (\"Wrote %ld bytes to %s, system returned %ld\",\n+\tfatal (\"wrote %ld bytes to %s, system returned %ld\",\n \t       (long) symbolic_header.cbLine,\n \t       object_name,\n \t       sys_write);\n@@ -4220,7 +4220,7 @@ write_object ()\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != num_write)\n-\tfatal (\"Wrote %ld bytes to %s, system returned %ld\",\n+\tfatal (\"wrote %ld bytes to %s, system returned %ld\",\n \t       num_write,\n \t       object_name,\n \t       sys_write);\n@@ -4312,7 +4312,7 @@ write_object ()\n \t    pfatal_with_name (object_name);\n \n \t  else if (sys_write != sizeof (FDR))\n-\t    fatal (\"Wrote %d bytes to %s, system returned %d\",\n+\t    fatal (\"wrote %d bytes to %s, system returned %d\",\n \t\t   (int) sizeof (FDR),\n \t\t   object_name,\n \t\t   sys_write);\n@@ -4348,7 +4348,7 @@ write_object ()\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != (long)num_write)\n-\tfatal (\"Wrote %lu bytes to %s, system returned %ld\",\n+\tfatal (\"wrote %lu bytes to %s, system returned %ld\",\n \t       num_write,\n \t       object_name,\n \t       sys_write);\n@@ -4404,7 +4404,7 @@ read_seek (size, offset, str)\n \t    pfatal_with_name (obj_in_name);\n \n \t  if ((symint_t)sys_read != difference)\n-\t    fatal (\"Wanted to read %lu bytes from %s, system returned %ld\",\n+\t    fatal (\"wanted to read %lu bytes from %s, system returned %ld\",\n \t\t   (unsigned long) size,\n \t\t   obj_in_name,\n \t\t   sys_read);\n@@ -4418,7 +4418,7 @@ read_seek (size, offset, str)\n     pfatal_with_name (obj_in_name);\n \n   if (sys_read != (long) size)\n-    fatal (\"Wanted to read %lu bytes from %s, system returned %ld\",\n+    fatal (\"wanted to read %lu bytes from %s, system returned %ld\",\n \t   (unsigned long) size,\n \t   obj_in_name,\n \t   sys_read);\n@@ -4468,7 +4468,7 @@ copy_object ()\n     return;\t\t\t/* create a .T file sans file header */\n \n   else if (sys_read < (int) sizeof (struct filehdr))\n-    fatal (\"Wanted to read %d bytes from %s, system returned %d\",\n+    fatal (\"wanted to read %d bytes from %s, system returned %d\",\n \t   (int) sizeof (struct filehdr),\n \t   obj_in_name,\n \t   sys_read);\n@@ -4492,7 +4492,7 @@ copy_object ()\n     pfatal_with_name (object_name);\n \n   else if (sys_read < (int) sizeof (struct filehdr))\n-    fatal (\"Wanted to read %d bytes from %s, system returned %d\",\n+    fatal (\"wanted to read %d bytes from %s, system returned %d\",\n \t   (int) sizeof (struct filehdr),\n \t   obj_in_name,\n \t   sys_read);\n@@ -4570,7 +4570,7 @@ copy_object ()\n \n   /* Abort if the symbol table is not last.  */\n   if (max_file_offset != stat_buf.st_size)\n-    fatal (\"Symbol table is not last (symbol table ends at %ld, .o ends at %ld\",\n+    fatal (\"symbol table is not last (symbol table ends at %ld, .o ends at %ld\",\n \t   max_file_offset,\n \t   (long) stat_buf.st_size);\n \n@@ -4786,7 +4786,7 @@ copy_object ()\n \tpfatal_with_name (obj_in_name);\n \n       else if (sys_read != num_write)\n-\tfatal (\"Wanted to read %d bytes from %s, system returned %d\",\n+\tfatal (\"wanted to read %d bytes from %s, system returned %d\",\n \t       num_write,\n \t       obj_in_name,\n \t       sys_read);\n@@ -4796,7 +4796,7 @@ copy_object ()\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != num_write)\n-\tfatal (\"Wrote %d bytes to %s, system returned %d\",\n+\tfatal (\"wrote %d bytes to %s, system returned %d\",\n \t       num_write,\n \t       object_name,\n \t       sys_write);\n@@ -4827,12 +4827,12 @@ main (argc, argv)\n \n #if !defined(__SABER__) && !defined(lint)\n   if (sizeof (efdr_t) > PAGE_USIZE)\n-    fatal (\"Efdr_t has a sizeof %d bytes, when it should be less than %d\",\n+    fatal (\"efdr_t has a sizeof %d bytes, when it should be less than %d\",\n \t   (int) sizeof (efdr_t),\n \t   (int) PAGE_USIZE);\n \n   if (sizeof (page_t) != PAGE_USIZE)\n-    fatal (\"Page_t has a sizeof %d bytes, when it should be %d\",\n+    fatal (\"page_t has a sizeof %d bytes, when it should be %d\",\n \t   (int) sizeof (page_t),\n \t   (int) PAGE_USIZE);\n \n@@ -5608,7 +5608,7 @@ error VPARAMS ((const char *format, ...))\n void\n fancy_abort ()\n {\n-  fatal (\"Internal abort\");\n+  fatal (\"internal abort\");\n }\n \f\n "}, {"sha": "93262e00abae1caa8078bfd2fdea44c9f59ffcf3", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 22, "deletions": 48, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -58,7 +58,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"cpplib.h\"\n #include \"debug.h\"\n #include \"target.h\"\n-#include \"varray.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n \n@@ -482,8 +481,6 @@ static int print_struct_values = 0;\n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n-static varray_type deferred_fns;\n-\n /* Post-switch processing.  */\n static void\n objc_post_options ()\n@@ -610,36 +607,13 @@ objc_init (filename)\n \n   objc_act_parse_init ();\n \n-  VARRAY_TREE_INIT (deferred_fns, 32, \"deferred_fns\");\n-  ggc_add_tree_varray_root (&deferred_fns, 1);\n-\n   return filename;\n }\n \n-/* Register a function tree, so that its optimization and conversion\n-   to RTL is only done at the end of the compilation.  */\n-\n-int\n-defer_fn (fn)\n-     tree fn;\n-{\n-  VARRAY_PUSH_TREE (deferred_fns, fn);\n-\n-  return 1;\n-}\n-\n void\n finish_file ()\n {\n-  int i;\n-\n-  for (i = 0; i < VARRAY_ACTIVE_SIZE (deferred_fns); i++)\n-    /* Don't output the same function twice.  We may run into such\n-       situations when an extern inline function is later given a\n-       non-extern-inline definition.  */\n-    if (! TREE_ASM_WRITTEN (VARRAY_TREE (deferred_fns, i)))\n-      c_expand_deferred_function (VARRAY_TREE (deferred_fns, i));\n-  VARRAY_FREE (deferred_fns);\n+  c_objc_common_finish_file ();\n \n   finish_objc ();\t\t/* Objective-C finalization */\n \n@@ -1010,12 +984,12 @@ get_object_reference (protocols)\n     {\n       type = TREE_TYPE (type_decl);\n       if (TYPE_MAIN_VARIANT (type) != id_type)\n-\twarning (\"Unexpected type for `id' (%s)\",\n+\twarning (\"unexpected type for `id' (%s)\",\n \t\t gen_declaration (type, errbuf));\n     }\n   else\n     {\n-      error (\"Undefined type `id', please import <objc/objc.h>\");\n+      error (\"undefined type `id', please import <objc/objc.h>\");\n       return error_mark_node;\n     }\n \n@@ -1089,7 +1063,7 @@ lookup_and_install_protocols (protocols)\n \n       if (!p)\n \t{\n-\t  error (\"Cannot find protocol declaration for `%s'\",\n+\t  error (\"cannot find protocol declaration for `%s'\",\n \t\t IDENTIFIER_POINTER (ident));\n \t  if (prev)\n \t    TREE_CHAIN (prev) = TREE_CHAIN (proto);\n@@ -1322,7 +1296,7 @@ build_objc_string_object (strings)\n \n   if (lookup_interface (constant_string_id) == NULL_TREE)\n     {\n-      error (\"Cannot find interface declaration for `%s'\",\n+      error (\"cannot find interface declaration for `%s'\",\n \t     IDENTIFIER_POINTER (constant_string_id));\n       return error_mark_node;\n     }\n@@ -1342,7 +1316,7 @@ build_objc_string_object (strings)\n       setup_string_decl ();\n       if (string_class_decl == NULL_TREE)\n \t{\n-\t  error (\"Cannot find reference tag for class `%s'\",\n+\t  error (\"cannot find reference tag for class `%s'\",\n \t\t IDENTIFIER_POINTER (constant_string_id));\n \t  return error_mark_node;\n \t}\n@@ -2330,9 +2304,9 @@ objc_declare_alias (alias_ident, class_ident)\n      tree class_ident;\n {\n   if (is_class_name (class_ident) != class_ident)\n-    warning (\"Cannot find class `%s'\", IDENTIFIER_POINTER (class_ident));\n+    warning (\"cannot find class `%s'\", IDENTIFIER_POINTER (class_ident));\n   else if (is_class_name (alias_ident))\n-    warning (\"Class `%s' already exists\", IDENTIFIER_POINTER (alias_ident));\n+    warning (\"class `%s' already exists\", IDENTIFIER_POINTER (alias_ident));\n   else\n     alias_chain = tree_cons (class_ident, alias_ident, alias_chain);\n }\n@@ -2456,14 +2430,14 @@ build_ivar_chain (interface, copy)\n       if (!super_interface)\n         {\n \t  /* fatal did not work with 2 args...should fix */\n-\t  error (\"Cannot find interface declaration for `%s', superclass of `%s'\",\n+\t  error (\"cannot find interface declaration for `%s', superclass of `%s'\",\n \t\t IDENTIFIER_POINTER (super_name),\n \t\t IDENTIFIER_POINTER (my_name));\n \t  exit (FATAL_EXIT_CODE);\n         }\n \n       if (super_interface == interface)\n-\tfatal_error (\"Circular inheritance in interface declaration for `%s'\",\n+\tfatal_error (\"circular inheritance in interface declaration for `%s'\",\n \t\t     IDENTIFIER_POINTER (super_name));\n \n       interface = super_interface;\n@@ -5020,7 +4994,7 @@ finish_message_expr (receiver, sel_name, method_params)\n \n       if (!method_prototype)\n \t{\n-\t  warning (\"cannot find class (factory) method.\");\n+\t  warning (\"cannot find class (factory) method\");\n \t  warning (\"return type for `%s' defaults to id\",\n \t\t   IDENTIFIER_POINTER (sel_name));\n \t}\n@@ -5038,7 +5012,7 @@ finish_message_expr (receiver, sel_name, method_params)\n \t{\n           hash hsh;\n \n-\t  warning (\"method `%s' not implemented by protocol.\",\n+\t  warning (\"method `%s' not implemented by protocol\",\n \t\t   IDENTIFIER_POINTER (sel_name));\n \n           /* Try and find the method signature in the global pools.  */\n@@ -5064,7 +5038,7 @@ finish_message_expr (receiver, sel_name, method_params)\n       method_prototype = check_duplicates (hsh);\n       if (!method_prototype)\n \t{\n-\t  warning (\"cannot find method.\");\n+\t  warning (\"cannot find method\");\n \t  warning (\"return type for `%s' defaults to id\",\n \t\t   IDENTIFIER_POINTER (sel_name));\n \t}\n@@ -5238,7 +5212,7 @@ build_protocol_expr (protoname)\n \n   if (!p)\n     {\n-      error (\"Cannot find protocol declaration for `%s'\",\n+      error (\"cannot find protocol declaration for `%s'\",\n \t     IDENTIFIER_POINTER (protoname));\n       return error_mark_node;\n     }\n@@ -5544,13 +5518,13 @@ add_class_method (class, method)\n   else\n     {\n       if (TREE_CODE (class) == CLASS_IMPLEMENTATION_TYPE)\n-\terror (\"duplicate definition of class method `%s'.\",\n+\terror (\"duplicate definition of class method `%s'\",\n \t       IDENTIFIER_POINTER (METHOD_SEL_NAME (mth)));\n       else\n         {\n \t  /* Check types; if different, complain.  */\n \t  if (!comp_proto_with_proto (method, mth))\n-\t    error (\"duplicate declaration of class method `%s'.\",\n+\t    error (\"duplicate declaration of class method `%s'\",\n \t\t   IDENTIFIER_POINTER (METHOD_SEL_NAME (mth)));\n         }\n     }\n@@ -5586,13 +5560,13 @@ add_instance_method (class, method)\n   else\n     {\n       if (TREE_CODE (class) == CLASS_IMPLEMENTATION_TYPE)\n-\terror (\"duplicate definition of instance method `%s'.\",\n+\terror (\"duplicate definition of instance method `%s'\",\n \t       IDENTIFIER_POINTER (METHOD_SEL_NAME (mth)));\n       else\n         {\n \t  /* Check types; if different, complain.  */\n \t  if (!comp_proto_with_proto (method, mth))\n-\t    error (\"duplicate declaration of instance method `%s'.\",\n+\t    error (\"duplicate declaration of instance method `%s'\",\n \t\t   IDENTIFIER_POINTER (METHOD_SEL_NAME (mth)));\n         }\n     }\n@@ -5743,7 +5717,7 @@ is_public (expr, identifier)\n \t{\n \t  if (!lookup_interface (TYPE_NAME (basetype)))\n \t    {\n-\t      error (\"Cannot find interface declaration for `%s'\",\n+\t      error (\"cannot find interface declaration for `%s'\",\n \t\t     IDENTIFIER_POINTER (TYPE_NAME (basetype)));\n \t      return 0;\n \t    }\n@@ -6072,7 +6046,7 @@ start_class (code, class_name, super_name, protocol_list)\n \n       if (!(implementation_template = lookup_interface (class_name)))\n         {\n-\t  warning (\"Cannot find interface declaration for `%s'\",\n+\t  warning (\"cannot find interface declaration for `%s'\",\n \t\t   IDENTIFIER_POINTER (class_name));\n \t  add_class (implementation_template = objc_implementation_context);\n         }\n@@ -6121,7 +6095,7 @@ start_class (code, class_name, super_name, protocol_list)\n \n       if (!(class_category_is_assoc_with = lookup_interface (class_name)))\n \t{\n-\t  error (\"Cannot find interface declaration for `%s'\",\n+\t  error (\"cannot find interface declaration for `%s'\",\n \t\t IDENTIFIER_POINTER (class_name));\n \t  exit (FATAL_EXIT_CODE);\n \t}\n@@ -6157,7 +6131,7 @@ start_class (code, class_name, super_name, protocol_list)\n \n       if (!(implementation_template = lookup_interface (class_name)))\n         {\n-\t  error (\"Cannot find interface declaration for `%s'\",\n+\t  error (\"cannot find interface declaration for `%s'\",\n \t\t IDENTIFIER_POINTER (class_name));\n \t  exit (FATAL_EXIT_CODE);\n         }"}, {"sha": "0c4acdfc1846aae6101cb4673ad249b13e658763", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -426,7 +426,7 @@ compute_branch_probabilities ()\n \t\te->probability = (e->count * REG_BR_PROB_BASE + total / 2) / total;\n \t\tif (e->probability < 0 || e->probability > REG_BR_PROB_BASE)\n \t\t  {\n-\t\t    error (\"Corrupted profile info: prob for %d-%d thought to be %d\",\n+\t\t    error (\"corrupted profile info: prob for %d-%d thought to be %d\",\n \t\t\t   e->src->index, e->dest->index, e->probability);\n \t\t    e->probability = REG_BR_PROB_BASE / 2;\n \t\t  }"}, {"sha": "4f28a2ac6fced3a095ee536c87db2ce32bbc6563", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -674,7 +674,7 @@ check_asm_stack_operands (insn)\n       {\n \tif (reg_class_size[(int) recog_op_alt[i][alt].class] != 1)\n \t  {\n-\t    error_for_asm (insn, \"Output constraint %d must specify a single register\", i);\n+\t    error_for_asm (insn, \"output constraint %d must specify a single register\", i);\n \t    malformed_asm = 1;\n \t  }\n         else\n@@ -684,7 +684,7 @@ check_asm_stack_operands (insn)\n \t    for (j = 0; j < n_clobbers; j++)\n \t      if (REGNO (recog_data.operand[i]) == REGNO (clobber_reg[j]))\n \t\t{\n-\t\t  error_for_asm (insn, \"Output constraint %d cannot be specified together with \\\"%s\\\" clobber\",\n+\t\t  error_for_asm (insn, \"output constraint %d cannot be specified together with \\\"%s\\\" clobber\",\n \t\t\t\t i, reg_names [REGNO (clobber_reg[j])]);\n \t\t  malformed_asm = 1;\n \t\t  break;\n@@ -707,7 +707,7 @@ check_asm_stack_operands (insn)\n \n   if (i != LAST_STACK_REG + 1)\n     {\n-      error_for_asm (insn, \"Output regs must be grouped at top of stack\");\n+      error_for_asm (insn, \"output regs must be grouped at top of stack\");\n       malformed_asm = 1;\n     }\n \n@@ -744,7 +744,7 @@ check_asm_stack_operands (insn)\n   if (i != LAST_STACK_REG + 1)\n     {\n       error_for_asm (insn,\n-\t\t     \"Implicitly popped regs must be grouped at top of stack\");\n+\t\t     \"implicitly popped regs must be grouped at top of stack\");\n       malformed_asm = 1;\n     }\n \n@@ -763,7 +763,7 @@ check_asm_stack_operands (insn)\n \t  if (operands_match_p (recog_data.operand[j], recog_data.operand[i]))\n \t    {\n \t      error_for_asm (insn,\n-\t\t\t     \"Output operand %d must use `&' constraint\", j);\n+\t\t\t     \"output operand %d must use `&' constraint\", j);\n \t      malformed_asm = 1;\n \t    }\n       }"}, {"sha": "0b331d4533b94405b49a7da4b96452b44e68ef6a", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -3540,7 +3540,7 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n     {\n       /* No alternative works with reloads??  */\n       if (insn_code_number >= 0)\n-\tfatal_insn (\"Unable to generate reloads for:\", insn);\n+\tfatal_insn (\"unable to generate reloads for:\", insn);\n       error_for_asm (insn, \"inconsistent operand constraints in an `asm'\");\n       /* Avoid further trouble with this insn.  */\n       PATTERN (insn) = gen_rtx_USE (VOIDmode, const0_rtx);"}, {"sha": "fa17d53c80f437a13c910ee130ce8b38aa427769", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1888,13 +1888,13 @@ spill_failure (insn, class)\n {\n   static const char *const reg_class_names[] = REG_CLASS_NAMES;\n   if (asm_noperands (PATTERN (insn)) >= 0)\n-    error_for_asm (insn, \"Can't find a register in class `%s' while reloading `asm'\",\n+    error_for_asm (insn, \"can't find a register in class `%s' while reloading `asm'\",\n \t\t   reg_class_names[class]);\n   else\n     {\n-      error (\"Unable to find a register to spill in class `%s'\",\n+      error (\"unable to find a register to spill in class `%s'\",\n \t     reg_class_names[class]);\n-      fatal_insn (\"This is the insn:\", insn);\n+      fatal_insn (\"this is the insn:\", insn);\n     }\n }\n \f\n@@ -5036,7 +5036,7 @@ failed_reload (insn, r)\n {\n   if (asm_noperands (PATTERN (insn)) < 0)\n     /* It's the compiler's fault.  */\n-    fatal_insn (\"Could not find a spill register\", insn);\n+    fatal_insn (\"could not find a spill register\", insn);\n \n   /* It's the user's fault; the operand's mode and constraint\n      don't match.  Disable this reload so we don't crash in final.  */"}, {"sha": "031fa2b155312d427c550ffe90770961ae866a25", "filename": "gcc/rtl-error.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Frtl-error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Frtl-error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-error.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -136,9 +136,9 @@ _fatal_insn_not_found (insn, file, line, function)\n      const char *function;\n {\n   if (INSN_CODE (insn) < 0)\n-    _fatal_insn (\"Unrecognizable insn:\", insn, file, line, function);\n+    _fatal_insn (\"unrecognizable insn:\", insn, file, line, function);\n   else\n-    _fatal_insn (\"Insn does not satisfy its constraints:\",\n+    _fatal_insn (\"insn does not satisfy its constraints:\",\n \t\tinsn, file, line, function);\n }\n "}, {"sha": "6f19f84048cda3151b5710ba97eb86754292aeb2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1,3 +1,12 @@\n+2001-12-02  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* objc.dg/alias.m: Update.\n+\t* objc.dg/class-1.m: Update.\n+\t* objc.dg/const-str-1.m: Update.\n+\t* objc.dg/fwd-proto-1.m: Update.\n+\t* objc.dg/id-1.m: Update.\n+\t* objc.dg/super-class-1.m: Update.\n+\n 2001-11-29  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/memtemp100.C: Remove non-standard"}, {"sha": "a57d032eb377f3cf29251b5de318b5c41680e4e7", "filename": "gcc/testsuite/objc.dg/alias.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Falias.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Falias.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Falias.m?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1,12 +1,12 @@\n /* Test alias warnings.  */\n /* { dg-do compile } */\n \n-@compatibility_alias class1 class2; /* { dg-warning \"Cannot find class\" } */\n+@compatibility_alias class1 class2; /* { dg-warning \"annot find class\" } */\n \n @interface class3;\n @end\n \n @interface class4;\n @end\n \n-@compatibility_alias class4 class3;  /* { dg-warning \"Class\" \"already exists\" } */\n+@compatibility_alias class4 class3;  /* { dg-warning \"lass\" \"already exists\" } */"}, {"sha": "64304f590ec47bff8606e83394d4065a4e511905", "filename": "gcc/testsuite/objc.dg/class-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -17,4 +17,4 @@ @interface bar\n @implementation glob\n @end  /* { dg-error \"redeclared as different kind of symbol\" } */\n /* { dg-error \"previous declaration of\" \"\" { target *-*-* } 15 } */\n-/* { dg-warning \"Cannot find interface declaration\" \"\" { target *-*-* } 18 } */\n+/* { dg-warning \"annot find interface declaration\" \"\" { target *-*-* } 18 } */"}, {"sha": "6c6ae050cba0d2c43224dcd44d89d0d8799b8228", "filename": "gcc/testsuite/objc.dg/const-str-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-1.m?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -4,7 +4,7 @@\n \n int foo()\n {\n-  baz(@\"hiya\");  /* { dg-error \"Cannot find interface declaration\" } */\n+  baz(@\"hiya\");  /* { dg-error \"annot find interface declaration\" } */\n }\n \n @interface NXConstantString"}, {"sha": "3b21c513c52e6b66dff7597acd8838a8dae5b82d", "filename": "gcc/testsuite/objc.dg/fwd-proto-1.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Ffwd-proto-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Ffwd-proto-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ffwd-proto-1.m?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -10,12 +10,12 @@ @protocol Boo;\n \n @protocol Foo \n - (id <Bar>)someMethod;\n-- (id <Baz>)anotherMethod; /* { dg-error \"Cannot find protocol declaration\" } */\n+- (id <Baz>)anotherMethod; /* { dg-error \"annot find protocol declaration\" } */\n @end\n \n @protocol Bar <Boo>\n - (id <Foo>)someOtherMethod;\n-- (id <Baz>)anotherMethod; /* { dg-error \"Cannot find protocol declaration\" } */\n+- (id <Baz>)anotherMethod; /* { dg-error \"annot find protocol declaration\" } */\n - (id <Boo>)yetAnotherMethod;\n @end\n "}, {"sha": "abc17bc67cc80e11dce04d43cacfb735f5bda361", "filename": "gcc/testsuite/objc.dg/id-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fid-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fid-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fid-1.m?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -3,4 +3,4 @@\n \n typedef int id;\n \n-id b; /* { dg-warning \"Unexpected type for `id'\" } */\n+id b; /* { dg-warning \"nexpected type for `id'\" } */"}, {"sha": "9c8ab86d3a3046a3b0ce3f635ee1f079183e9a54", "filename": "gcc/testsuite/objc.dg/super-class-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-1.m?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -2,4 +2,4 @@\n /* { dg-do compile } */\n \n @interface class0 : supclass0\n-@end  /* { dg-error \"Cannot find interface declaration for .*, superclass\" } */\n+@end  /* { dg-error \"annot find interface declaration for .*, superclass\" } */"}, {"sha": "311ef95b7d02c220ba509cedd55dd34f7a7a58a7", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -1582,7 +1582,7 @@ read_integral_parameter (p, pname, defval)\n   if (*endp != 0)\n     {\n       if (pname != 0)\n-\terror (\"Invalid option `%s'\", pname);\n+\terror (\"invalid option `%s'\", pname);\n       return defval;\n     }\n \n@@ -1728,7 +1728,7 @@ static void\n crash_signal (signo)\n      int signo;\n {\n-  internal_error (\"Internal error: %s\", strsignal (signo));\n+  internal_error (\"internal error: %s\", strsignal (signo));\n }\n \n /* Strip off a legitimate source ending from the input string NAME of\n@@ -3887,7 +3887,7 @@ decode_f_option (arg)\n         diagnostic_prefixing_rule (global_dc)\n           = DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE;\n       else\n-\terror (\"Unrecognized option `%s'\", arg - 2);\n+\terror (\"unrecognized option `%s'\", arg - 2);\n     }\n   else if (!strcmp (arg, \"no-stack-limit\"))\n     stack_limit_rtx = NULL_RTX;\n@@ -4353,7 +4353,7 @@ set_target_switch (name)\n #endif\n \n   if (!valid_target_option)\n-    error (\"Invalid option `%s'\", name);\n+    error (\"invalid option `%s'\", name);\n }\n \f\n /* Print version information to FILE.\n@@ -4771,17 +4771,17 @@ parse_options_and_default_flags (argc, argv)\n \t    {\n \t      if (extra_warnings)\n \t\t{\n-\t\t  warning (\"Ignoring command line option '%s'\", argv[i]);\n+\t\t  warning (\"ignoring command line option '%s'\", argv[i]);\n \t\t  if (lang)\n \t\t    warning\n-\t\t      (\"(It is valid for %s but not the selected language)\",\n+\t\t      (\"(it is valid for %s but not the selected language)\",\n \t\t       lang);\n \t\t}\n \t    }\n \t  else if (argv[i][0] == '-' && argv[i][1] == 'g')\n \t    warning (\"`%s': unknown or unsupported -g option\", &argv[i][2]);\n \t  else\n-\t    error (\"Unrecognized option `%s'\", argv[i]);\n+\t    error (\"unrecognized option `%s'\", argv[i]);\n \n \t  i++;\n \t}"}, {"sha": "4598d615b56d3c9112f89152b66186dab524b5fe", "filename": "gcc/tradcif.y", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftradcif.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftradcif.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcif.y?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -274,7 +274,7 @@ parse_number (olen)\n   }\n \n   if (len != 0) {\n-    yyerror (\"Invalid number in #if expression\");\n+    yyerror (\"invalid number in #if expression\");\n     return ERROR;\n   }\n \n@@ -355,7 +355,7 @@ yylex ()\n     yylval.integer.unsignedp = 0;\n     c = *lexptr++;\n     if (c != '\\'') {\n-      yyerror (\"Invalid character constant in #if\");\n+      yyerror (\"invalid character constant in #if\");\n       return ERROR;\n     }\n     \n@@ -405,7 +405,7 @@ yylex ()\n   }\n   \n   if (!is_idstart (c)) {\n-    yyerror (\"Invalid token in expression\");\n+    yyerror (\"invalid token in expression\");\n     return ERROR;\n   }\n   "}, {"sha": "c3d98dfc16d9fc0710b93577e59a01c8421c3398", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -550,7 +550,7 @@ main (argc, argv)\n   for (i = 1; i < argc; i++) {\n     if (argv[i][0] != '-') {\n       if (out_fname != NULL)\n-\tfatal (\"Usage: %s [switches] input output\", argv[0]);\n+\tfatal (\"usage: %s [switches] input output\", argv[0]);\n       else if (in_fname != NULL)\n \tout_fname = argv[i];\n       else\n@@ -582,7 +582,7 @@ main (argc, argv)\n \tif (!strcmp (argv[i], \"-include\"))\n \t  {\n \t    if (i + 1 == argc)\n-\t      fatal (\"Filename missing after -i option\");\n+\t      fatal (\"filename missing after -i option\");\n \t    else\n \t      pend[i].type = PD_FILE, pend[i].arg = argv[i + 1], i++;\n \t  }\n@@ -598,9 +598,9 @@ main (argc, argv)\n \n       case 'o':\n \tif (out_fname != NULL)\n-\t  fatal (\"Output filename specified twice\");\n+\t  fatal (\"output filename specified twice\");\n \tif (i + 1 == argc)\n-\t  fatal (\"Filename missing after -o option\");\n+\t  fatal (\"filename missing after -o option\");\n \tout_fname = argv[++i];\n \tif (!strcmp (out_fname, \"-\"))\n \t  out_fname = \"\";\n@@ -659,7 +659,7 @@ main (argc, argv)\n \t    int quoted = argv[i][2] == 'Q';\n \n \t    if (*tgt == '\\0' && i + 1 == argc)\n-\t      fatal (\"Target missing after %s option\", argv[i]);\n+\t      fatal (\"target missing after %s option\", argv[i]);\n \t    else\n \t      {\n \t\tif (*tgt == '\\0')\n@@ -673,7 +673,7 @@ main (argc, argv)\n \t    if (*p)\n \t      deps_file = p;\n \t    else if (i + 1 == argc)\n-\t      fatal (\"Filename missing after %s option\", argv[i]);\n+\t      fatal (\"filename missing after %s option\", argv[i]);\n \t    else\n \t      deps_file = argv[++i];\n \t  }\n@@ -698,7 +698,7 @@ main (argc, argv)\n \t  if (argv[i][2] != 0)\n \t    p = argv[i] + 2;\n \t  else if (i + 1 == argc)\n-\t    fatal (\"Macro name missing after -%c option\", c);\n+\t    fatal (\"macro name missing after -%c option\", c);\n \t  else\n \t    p = argv[++i];\n \n@@ -749,7 +749,7 @@ main (argc, argv)\n \t    if (argv[i][1] == 'I' && argv[i][2] != 0)\n \t      dirtmp->fname = argv[i] + 2;\n \t    else if (i + 1 == argc)\n-\t      fatal (\"Directory name missing after -I option\");\n+\t      fatal (\"directory name missing after -I option\");\n \t    else\n \t      dirtmp->fname = argv[++i];\n \t    if (strlen (dirtmp->fname) > max_include_len)\n@@ -776,7 +776,7 @@ main (argc, argv)\n \t}\t/* else fall through into error */\n \n       default:\n-\tfatal (\"Invalid option `%s'\", argv[i]);\n+\tfatal (\"invalid option `%s'\", argv[i]);\n       }\n     }\n   }\n@@ -4743,7 +4743,7 @@ fancy_abort (line, func)\n      int line;\n      const char *func;\n {\n-  fatal (\"Internal error in %s, at tradcpp.c:%d\\n\\\n+  fatal (\"internal error in %s, at tradcpp.c:%d\\n\\\n Please submit a full bug report.\\n\\\n See %s for instructions.\", func, line, GCCBUGURL);\n }"}, {"sha": "39ce8d8842e95f3a7e08278d2b7ec8aea781c6a6", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -4686,7 +4686,7 @@ tree_check_failed (node, code, file, line, function)\n      int line;\n      const char *function;\n {\n-  internal_error (\"Tree check: expected %s, have %s in %s, at %s:%d\",\n+  internal_error (\"tree check: expected %s, have %s in %s, at %s:%d\",\n \t\t  tree_code_name[code], tree_code_name[TREE_CODE (node)],\n \t\t  function, trim_filename (file), line);\n }\n@@ -4703,7 +4703,7 @@ tree_class_check_failed (node, cl, file, line, function)\n      const char *function;\n {\n   internal_error\n-    (\"Tree check: expected class '%c', have '%c' (%s) in %s, at %s:%d\",\n+    (\"tree check: expected class '%c', have '%c' (%s) in %s, at %s:%d\",\n      cl, TREE_CODE_CLASS (TREE_CODE (node)),\n      tree_code_name[TREE_CODE (node)], function, trim_filename (file), line);\n }"}, {"sha": "aa6de129ec82dbf9f1e13d57e05d272df1a57f97", "filename": "gcc/varray.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -85,7 +85,7 @@ varray_check_failed (va, n, file, line, function)\n      int line;\n      const char *function;\n {\n-  internal_error (\"Virtual array %s[%lu]: element %lu out of bounds in %s, at %s:%d\",\n+  internal_error (\"virtual array %s[%lu]: element %lu out of bounds in %s, at %s:%d\",\n \t\t  va->name, (unsigned long) va->num_elements, (unsigned long) n,\n \t\t  function, trim_filename (file), line);\n }"}, {"sha": "af7ce98ab2397aa3e17c9ee96d56d2fb10da00b1", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f978f5f7eba451706f9d6a7b54ac8226ef591fb/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "patch": "@@ -167,7 +167,7 @@ xcoff_output_standard_types (syms)\n /* Print an error message for unrecognized stab codes.  */\n \n #define UNKNOWN_STAB(STR)\t\\\n-  internal_error (\"No sclass for %s stab (0x%x)\\n\", STR, stab)\n+  internal_error (\"no sclass for %s stab (0x%x)\\n\", STR, stab)\n \n /* Conversion routine from BSD stabs to AIX storage classes.  */\n "}]}