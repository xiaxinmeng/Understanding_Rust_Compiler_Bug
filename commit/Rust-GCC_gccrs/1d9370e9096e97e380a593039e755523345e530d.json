{"sha": "1d9370e9096e97e380a593039e755523345e530d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ5MzcwZTkwOTZlOTdlMzgwYTU5MzAzOWU3NTU1MjMzNDVlNTMwZA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T22:40:55Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T22:40:55Z"}, "message": "trans-array.c (set_loop_bounds): Separate the beginning of gfc_conv_loop_setup into a function of its own.\n\n\t* trans-array.c (set_loop_bounds): Separate the beginning of\n\tgfc_conv_loop_setup into a function of its own.\n\t(set_delta): Separate the end of gfc_conv_loop_setup into a function\n\tof its own.\n\t(gfc_conv_loop_setup): Call set_loop_bounds and set delta.\n\t(set_loop_bounds, set_delta, gfc_conv_loop_setup): Make loopspec a\n\tpointer to the specloop field from the loop struct.\n\nFrom-SVN: r180880", "tree": {"sha": "f73ff2e0f23b7d995b910b50c4f60d42beafe945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f73ff2e0f23b7d995b910b50c4f60d42beafe945"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d9370e9096e97e380a593039e755523345e530d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d9370e9096e97e380a593039e755523345e530d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d9370e9096e97e380a593039e755523345e530d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d9370e9096e97e380a593039e755523345e530d/comments", "author": null, "committer": null, "parents": [{"sha": "a9e88ec6fe9438c79b19601f9c20ef77bea4ef9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e88ec6fe9438c79b19601f9c20ef77bea4ef9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9e88ec6fe9438c79b19601f9c20ef77bea4ef9e"}], "stats": {"total": 70, "additions": 58, "deletions": 12}, "files": [{"sha": "0d0e730b9cba918369452fd531cae965fdb43b9f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d9370e9096e97e380a593039e755523345e530d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d9370e9096e97e380a593039e755523345e530d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1d9370e9096e97e380a593039e755523345e530d", "patch": "@@ -1,3 +1,13 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (set_loop_bounds): Separate the beginning of\n+\tgfc_conv_loop_setup into a function of its own.\n+\t(set_delta): Separate the end of gfc_conv_loop_setup into a function\n+\tof its own.\n+\t(gfc_conv_loop_setup): Call set_loop_bounds and set delta.\n+\t(set_loop_bounds, set_delta, gfc_conv_loop_setup): Make loopspec a\n+\tpointer to the specloop field from the loop struct.\n+\n 2011-11-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/50933"}, {"sha": "302f937989cdd2d95696dc414d7889dc723db14e", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 48, "deletions": 12, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d9370e9096e97e380a593039e755523345e530d/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d9370e9096e97e380a593039e755523345e530d/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=1d9370e9096e97e380a593039e755523345e530d", "patch": "@@ -3919,25 +3919,25 @@ gfc_conv_resolve_dependencies (gfc_loopinfo * loop, gfc_ss * dest,\n }\n \n \n-/* Initialize the scalarization loop.  Creates the loop variables.  Determines\n-   the range of the loop variables.  Creates a temporary if required.\n-   Calculates how to transform from loop variables to array indices for each\n-   expression.  Also generates code for scalar expressions which have been\n-   moved outside the loop.  */\n+/* Browse through each array's information from the scalarizer and set the loop\n+   bounds according to the \"best\" one (per dimension), i.e. the one which\n+   provides the most information (constant bounds, shape, etc).  */\n \n-void\n-gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n+static void\n+set_loop_bounds (gfc_loopinfo *loop)\n {\n   int n, dim, spec_dim;\n   gfc_array_info *info;\n   gfc_array_info *specinfo;\n-  gfc_ss *ss, *tmp_ss;\n+  gfc_ss *ss;\n   tree tmp;\n-  gfc_ss *loopspec[GFC_MAX_DIMENSIONS];\n+  gfc_ss **loopspec;\n   bool dynamic[GFC_MAX_DIMENSIONS];\n   mpz_t *cshape;\n   mpz_t i;\n \n+  loopspec = loop->specloop;\n+\n   mpz_init (i);\n   for (n = 0; n < loop->dimen; n++)\n     {\n@@ -4119,6 +4119,26 @@ gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n \t  loop->from[n] = gfc_index_zero_node;\n \t}\n     }\n+  mpz_clear (i);\n+}\n+\n+\n+static void set_delta (gfc_loopinfo *loop);\n+\n+\n+/* Initialize the scalarization loop.  Creates the loop variables.  Determines\n+   the range of the loop variables.  Creates a temporary if required.\n+   Also generates code for scalar expressions which have been\n+   moved outside the loop.  */\n+\n+void\n+gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n+{\n+  gfc_ss *tmp_ss;\n+  tree tmp;\n+  int n;\n+\n+  set_loop_bounds (loop);\n \n   /* Add all the scalar code that can be taken out of the loops.\n      This may include calculating the loop bounds, so do it before\n@@ -4153,15 +4173,31 @@ gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n     }\n \n   for (n = 0; n < loop->temp_dim; n++)\n-    loopspec[loop->order[n]] = NULL;\n-\n-  mpz_clear (i);\n+    loop->specloop[loop->order[n]] = NULL;\n \n   /* For array parameters we don't have loop variables, so don't calculate the\n      translations.  */\n   if (loop->array_parameter)\n     return;\n \n+  set_delta (loop);\n+}\n+\n+\n+/* Calculates how to transform from loop variables to array indices for each\n+   array: once loop bounds are chosen, sets the difference (DELTA field) between\n+   loop bounds and array reference bounds, for each array info.  */\n+\n+static void\n+set_delta (gfc_loopinfo *loop)\n+{\n+  gfc_ss *ss, **loopspec;\n+  gfc_array_info *info;\n+  tree tmp;\n+  int n, dim;\n+\n+  loopspec = loop->specloop;\n+\n   /* Calculate the translation from loop variables to array indices.  */\n   for (ss = loop->ss; ss != gfc_ss_terminator; ss = ss->loop_chain)\n     {"}]}