{"sha": "9fff64328d6e03611eb18cae23704cebf32d2c40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZmZjY0MzI4ZDZlMDM2MTFlYjE4Y2FlMjM3MDRjZWJmMzJkMmM0MA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2006-04-24T21:24:27Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2006-04-24T21:24:27Z"}, "message": "floatformat.c (floatformat_to_double): Fix (biased) exponent=0 case.\n\n\t* floatformat.c (floatformat_to_double): Fix (biased) exponent=0 case.\n\nFrom-SVN: r113228", "tree": {"sha": "681021159ce14c7e9c0707332cee969fb47da4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/681021159ce14c7e9c0707332cee969fb47da4e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fff64328d6e03611eb18cae23704cebf32d2c40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fff64328d6e03611eb18cae23704cebf32d2c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fff64328d6e03611eb18cae23704cebf32d2c40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fff64328d6e03611eb18cae23704cebf32d2c40/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e551ad2608228e879d774e51b935089e1bd2dae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e551ad2608228e879d774e51b935089e1bd2dae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e551ad2608228e879d774e51b935089e1bd2dae4"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "76baa3c3ac2dcb2194650e70c4af8650619f77ef", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fff64328d6e03611eb18cae23704cebf32d2c40/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fff64328d6e03611eb18cae23704cebf32d2c40/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=9fff64328d6e03611eb18cae23704cebf32d2c40", "patch": "@@ -1,3 +1,7 @@\n+2006-04-24  Julian Brown  <julian@codesourcery.com>\n+\n+\t* floatformat.c (floatformat_to_double): Fix (biased) exponent=0 case.\n+\n 2006-03-29  Jim Blandy  <jimb@codesourcery.com>\n \n  \t* pex-common.c (pex_input_file, pex_input_pipe): New functions."}, {"sha": "0bbb8ed98898037824f592cfdf5258f2c83f289b", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fff64328d6e03611eb18cae23704cebf32d2c40/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fff64328d6e03611eb18cae23704cebf32d2c40/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=9fff64328d6e03611eb18cae23704cebf32d2c40", "patch": "@@ -394,7 +394,7 @@ floatformat_to_double (const struct floatformat *fmt,\n \n       /* Handle denormalized numbers.  FIXME: What should we do for\n \t non-IEEE formats?  */\n-      if (exponent == 0 && mant != 0)\n+      if (special_exponent && exponent == 0 && mant != 0)\n \tdto += ldexp ((double)mant,\n \t\t      (- fmt->exp_bias\n \t\t       - mant_bits"}]}