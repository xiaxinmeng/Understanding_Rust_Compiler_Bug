{"sha": "e1dd825bad0511a59d68dd07e7efff1ac1897a00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFkZDgyNWJhZDA1MTFhNTlkNjhkZDA3ZTdlZmZmMWFjMTg5N2EwMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-05-21T22:08:20Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-05-21T22:08:20Z"}, "message": "rs6000: wz -> d+p7\n\n\n\t* config/rs6000/constraints.md (define_register_constraint \"wz\"):\n\tDelete.\n\t* config/rs6000/rs6000.h (enum r6000_reg_class_enum): Delete\n\tRS6000_CONSTRAINT_wz.\n\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Adjust.\n\t(rs6000_init_hard_regno_mode_ok): Adjust.\n\t* config/rs6000/rs6000.md: Replace \"wz\" constraint by \"d\" with \"p7\".\n\t* doc/md.texi (Machine Constraints): Adjust.\n\nFrom-SVN: r271488", "tree": {"sha": "eb8cd8c7753a8b69a66f426add9fc53d588f6610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb8cd8c7753a8b69a66f426add9fc53d588f6610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1dd825bad0511a59d68dd07e7efff1ac1897a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1dd825bad0511a59d68dd07e7efff1ac1897a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1dd825bad0511a59d68dd07e7efff1ac1897a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1dd825bad0511a59d68dd07e7efff1ac1897a00/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c972c90dc818c1ef69544591e66a16439e1942a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c972c90dc818c1ef69544591e66a16439e1942a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c972c90dc818c1ef69544591e66a16439e1942a3"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "592cecd529e07ec5696ae89bf8a63c0921d81ce3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1dd825bad0511a59d68dd07e7efff1ac1897a00", "patch": "@@ -1,3 +1,14 @@\n+2019-05-21  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/constraints.md (define_register_constraint \"wz\"):\n+\tDelete.\n+\t* config/rs6000/rs6000.h (enum r6000_reg_class_enum): Delete\n+\tRS6000_CONSTRAINT_wz.\n+\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Adjust.\n+\t(rs6000_init_hard_regno_mode_ok): Adjust.\n+\t* config/rs6000/rs6000.md: Replace \"wz\" constraint by \"d\" with \"p7\".\n+\t* doc/md.texi (Machine Constraints): Adjust.\n+\n 2019-05-21  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/constraints.md (define_register_constraint \"wl\"):"}, {"sha": "fd8be343f09be866c43d5b553459ce3cdf3afec5", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=e1dd825bad0511a59d68dd07e7efff1ac1897a00", "patch": "@@ -103,9 +103,6 @@\n (define_register_constraint \"wx\" \"rs6000_constraints[RS6000_CONSTRAINT_wx]\"\n   \"Floating point register if the STFIWX instruction is enabled or NO_REGS.\")\n \n-(define_register_constraint \"wz\" \"rs6000_constraints[RS6000_CONSTRAINT_wz]\"\n-  \"Floating point register if the LFIWZX instruction is enabled or NO_REGS.\")\n-\n (define_register_constraint \"wA\" \"rs6000_constraints[RS6000_CONSTRAINT_wA]\"\n   \"BASE_REGS if 64-bit instructions are enabled or NO_REGS.\")\n "}, {"sha": "97378c4139dc392a181460f08420748c6af913e8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e1dd825bad0511a59d68dd07e7efff1ac1897a00", "patch": "@@ -2521,7 +2521,6 @@ rs6000_debug_reg_global (void)\n \t   \"wv reg_class = %s\\n\"\n \t   \"ww reg_class = %s\\n\"\n \t   \"wx reg_class = %s\\n\"\n-\t   \"wz reg_class = %s\\n\"\n \t   \"wA reg_class = %s\\n\"\n \t   \"\\n\",\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_d]],\n@@ -2541,7 +2540,6 @@ rs6000_debug_reg_global (void)\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wv]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_ww]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wx]],\n-\t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wz]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wA]]);\n \n   nl = \"\\n\";\n@@ -3160,8 +3158,7 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \twt - VSX register for TImode in VSX registers.\n \twv - Altivec register for ISA 2.06 VSX DF/DI load/stores.\n \tww - Register class to do SF conversions in with VSX operations.\n-\twx - Float register if we can do 32-bit int stores.\n-\twz - Float register if we can do 32-bit unsigned int loads.  */\n+\twx - Float register if we can do 32-bit int stores.  */\n \n   if (TARGET_HARD_FLOAT)\n     {\n@@ -3202,9 +3199,6 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n   if (TARGET_STFIWX)\n     rs6000_constraints[RS6000_CONSTRAINT_wx] = FLOAT_REGS;\t/* DImode  */\n \n-  if (TARGET_LFIWZX)\n-    rs6000_constraints[RS6000_CONSTRAINT_wz] = FLOAT_REGS;\t/* DImode  */\n-\n   if (TARGET_FLOAT128_TYPE)\n     {\n       rs6000_constraints[RS6000_CONSTRAINT_wq] = VSX_REGS;\t/* KFmode  */"}, {"sha": "fb94901249dfefe52da26899c33a5ea588b44eb2", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=e1dd825bad0511a59d68dd07e7efff1ac1897a00", "patch": "@@ -1262,7 +1262,6 @@ enum r6000_reg_class_enum {\n   RS6000_CONSTRAINT_wv,\t\t/* Altivec register for double load/stores.  */\n   RS6000_CONSTRAINT_ww,\t\t/* FP or VSX register for vsx float ops.  */\n   RS6000_CONSTRAINT_wx,\t\t/* FPR register for STFIWX */\n-  RS6000_CONSTRAINT_wz,\t\t/* FPR register for LFIWZX */\n   RS6000_CONSTRAINT_wA,\t\t/* BASE_REGS if 64-bit.  */\n   RS6000_CONSTRAINT_MAX\n };"}, {"sha": "32c41f37127d9287a577dd67b67047612bcc0b82", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e1dd825bad0511a59d68dd07e7efff1ac1897a00", "patch": "@@ -834,7 +834,7 @@\n \n \n (define_insn \"zero_extendsi<mode>2\"\n-  [(set (match_operand:EXTSI 0 \"gpc_reg_operand\" \"=r,r,wz,wa,wi,r,wa\")\n+  [(set (match_operand:EXTSI 0 \"gpc_reg_operand\" \"=r,r,d,wa,wi,r,wa\")\n \t(zero_extend:EXTSI (match_operand:SI 1 \"reg_or_mem_operand\" \"m,r,Z,Z,r,wa,wa\")))]\n   \"\"\n   \"@\n@@ -846,7 +846,7 @@\n    mfvsrwz %0,%x1\n    xxextractuw %x0,%x1,4\"\n   [(set_attr \"type\" \"load,shift,fpload,fpload,mffgpr,mftgpr,vecexts\")\n-   (set_attr \"isa\" \"*,*,*,p8v,p8v,p8v,p9v\")])\n+   (set_attr \"isa\" \"*,*,p7,p8v,p8v,p8v,p9v\")])\n \n (define_insn_and_split \"*zero_extendsi<mode>2_dot\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n@@ -7349,7 +7349,7 @@\n ;;\tFMR          MR         MT%0       MF%1       NOP\n (define_insn \"movsd_hardfloat\"\n   [(set (match_operand:SD 0 \"nonimmediate_operand\"\n-\t \"=!r,       wz,        m,         Z,         ?d,        ?r,\n+\t \"=!r,       d,         m,         Z,         ?d,        ?r,\n \t  f,         !r,        *c*l,      !r,        *h\")\n \t(match_operand:SD 1 \"input_operand\"\n \t \"m,         Z,         r,         wx,        r,         d,\n@@ -7373,7 +7373,7 @@\n \t\"load,       fpload,    store,     fpstore,   mffgpr,    mftgpr,\n \t fpsimple,   *,         mtjmpr,    mfjmpr,    *\")\n    (set_attr \"isa\"\n-\t\"*,          *,         *,         *,         p8v,       p8v,\n+\t\"*,          p7,        *,         *,         p8v,       p8v,\n \t *,          *,         *,         *,         *\")])\n \n ;;\tMR           MT%0       MF%0       LWZ        STW        LI"}, {"sha": "db9c210edb87dbcf9fb102b41235bfca59c8c047", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1dd825bad0511a59d68dd07e7efff1ac1897a00/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=e1dd825bad0511a59d68dd07e7efff1ac1897a00", "patch": "@@ -3289,9 +3289,6 @@ FP or VSX register to perform float operations under @option{-mvsx} or NO_REGS.\n @item wx\n Floating point register if the STFIWX instruction is enabled or NO_REGS.\n \n-@item wz\n-Floating point register if the LFIWZX instruction is enabled or NO_REGS.\n-\n @item wA\n Address base register if 64-bit instructions are enabled or NO_REGS.\n "}]}