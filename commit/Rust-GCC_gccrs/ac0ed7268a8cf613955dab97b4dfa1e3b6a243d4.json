{"sha": "ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMwZWQ3MjY4YThjZjYxMzk1NWRhYjk3YjRkZmExZTNiNmEyNDNkNA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-07-04T13:30:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:30:32Z"}, "message": "sem_util.adb (Is_Object_Reference): An indexed or selected component whose prefix is an implicit dereference is an...\n\n2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Is_Object_Reference): An indexed or selected component\n\twhose prefix is an implicit dereference is an object reference. Removes\n\tspurious errors when compiling with -gnatc.\n\nFrom-SVN: r101592", "tree": {"sha": "6bed2c520beed9caa18834439f1264f2067763f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bed2c520beed9caa18834439f1264f2067763f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21ff92b4e3c0e302181754b240c3246cfda4aead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ff92b4e3c0e302181754b240c3246cfda4aead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ff92b4e3c0e302181754b240c3246cfda4aead"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "4d3577e8ea02cd4622b089bee297c1c7e800935f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ac0ed7268a8cf613955dab97b4dfa1e3b6a243d4", "patch": "@@ -4074,7 +4074,9 @@ package body Sem_Util is\n       else\n          case Nkind (N) is\n             when N_Indexed_Component | N_Slice =>\n-               return Is_Object_Reference (Prefix (N));\n+               return\n+                 Is_Object_Reference (Prefix (N))\n+                   or else Is_Access_Type (Etype (Prefix (N)));\n \n             --  In Ada95, a function call is a constant object\n \n@@ -4089,7 +4091,9 @@ package body Sem_Util is\n             when N_Selected_Component =>\n                return\n                  Is_Object_Reference (Selector_Name (N))\n-                   and then Is_Object_Reference (Prefix (N));\n+                   and then\n+                     (Is_Object_Reference (Prefix (N))\n+                        or else Is_Access_Type (Etype (Prefix (N))));\n \n             when N_Explicit_Dereference =>\n                return True;"}]}