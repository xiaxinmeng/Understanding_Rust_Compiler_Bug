{"sha": "5210f3d05f10ed390e20808f1eeeff473a448a7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxMGYzZDA1ZjEwZWQzOTBlMjA4MDhmMWVlZWZmNDczYTQ0OGE3ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-08-17T18:39:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-17T18:39:16Z"}, "message": "cplus-dem.c (do_type): Fix simple array handling.\n\n\t* cplus-dem.c (do_type): Fix simple array handling.  If we fail,\n\tstay failed.\n\nFrom-SVN: r21798", "tree": {"sha": "a703f61ad7474aa09c1d9eb9528b80799606575b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a703f61ad7474aa09c1d9eb9528b80799606575b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5210f3d05f10ed390e20808f1eeeff473a448a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5210f3d05f10ed390e20808f1eeeff473a448a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5210f3d05f10ed390e20808f1eeeff473a448a7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5210f3d05f10ed390e20808f1eeeff473a448a7e/comments", "author": null, "committer": null, "parents": [{"sha": "d12e8f597a8456fb3628807991d0996f23cfadb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12e8f597a8456fb3628807991d0996f23cfadb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12e8f597a8456fb3628807991d0996f23cfadb2"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "30a7920bd54bd6347cc2c7d15eeb15ee879beedd", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5210f3d05f10ed390e20808f1eeeff473a448a7e/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5210f3d05f10ed390e20808f1eeeff473a448a7e/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5210f3d05f10ed390e20808f1eeeff473a448a7e", "patch": "@@ -1,3 +1,8 @@\n+1998-08-17  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cplus-dem.c (do_type): Fix simple array handling.  If we fail,\n+\tstay failed.\n+\n Mon Aug 17 10:40:34 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cplus-dem.c: Include config.h if it exists.  Also, only"}, {"sha": "1f3dc529efa13762f1b0042e12eb7873b8283e0b", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5210f3d05f10ed390e20808f1eeeff473a448a7e/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5210f3d05f10ed390e20808f1eeeff473a448a7e/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=5210f3d05f10ed390e20808f1eeeff473a448a7e", "patch": "@@ -2491,10 +2491,15 @@ do_type (work, mangled, result)\n \tcase 'A':\n \t  {\n \t    ++(*mangled);\n-\t    string_prepend (&decl, \"(\");\n-\t    string_append (&decl, \")[\");\n-\t    success = demangle_template_value_parm (work, mangled, &decl,\n-\t\t\t\t\t\t    tk_integral);\n+\t    if (!STRING_EMPTY (&decl) && decl.b[0] == '*')\n+\t      {\n+\t\tstring_prepend (&decl, \"(\");\n+\t\tstring_append (&decl, \")\");\n+\t      }\n+\t    string_append (&decl, \"[\");\n+\t    if (**mangled != '_')\n+\t      success = demangle_template_value_parm (work, mangled, &decl,\n+\t\t\t\t\t\t      tk_integral);\n \t    if (**mangled == '_')\n \t      ++(*mangled);\n \t    string_append (&decl, \"]\");\n@@ -2651,7 +2656,7 @@ do_type (work, mangled, result)\n \t}\n     }\n \n-  switch (**mangled)\n+  if (success) switch (**mangled)\n     {\n       /* A qualified name, such as \"Outer::Inner\".  */\n     case 'Q':\n@@ -2665,7 +2670,7 @@ do_type (work, mangled, result)\n     case 'B':\n       (*mangled)++;\n       if (!get_count (mangled, &n) || n >= work -> numb)\n-          success = 0;\n+\tsuccess = 0;\n       else\n \tstring_append (result, work->btypevec[n]);\n       break;"}]}