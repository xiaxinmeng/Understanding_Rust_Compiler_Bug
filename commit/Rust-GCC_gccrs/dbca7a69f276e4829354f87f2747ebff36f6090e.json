{"sha": "dbca7a69f276e4829354f87f2747ebff36f6090e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJjYTdhNjlmMjc2ZTQ4MjkzNTRmODdmMjc0N2ViZmYzNmY2MDkwZQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2020-07-02T19:16:39Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2020-07-02T19:16:39Z"}, "message": "PR libstdc++/91807\n\n\tPR libstdc++/91807\n\t* include/std/variant\n\t(_Copy_assign_base::operator=(const _Copy_assign_base&):\n\tDo the move-assignment from a temporary so that the temporary\n\tis constructed with an explicit index.\n\t* testsuite/20_util/variant/91807.cc: New.", "tree": {"sha": "ae7042379d95635ca00deddb76f4786aed9ab7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7042379d95635ca00deddb76f4786aed9ab7a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbca7a69f276e4829354f87f2747ebff36f6090e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbca7a69f276e4829354f87f2747ebff36f6090e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbca7a69f276e4829354f87f2747ebff36f6090e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbca7a69f276e4829354f87f2747ebff36f6090e/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b88744905a46be44ffa3c57d46080f601ae832b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88744905a46be44ffa3c57d46080f601ae832b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88744905a46be44ffa3c57d46080f601ae832b8"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "eb3d677920505d5470eb6ccbe5d6b764fdd97c3b", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbca7a69f276e4829354f87f2747ebff36f6090e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbca7a69f276e4829354f87f2747ebff36f6090e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=dbca7a69f276e4829354f87f2747ebff36f6090e", "patch": "@@ -611,7 +611,8 @@ namespace __variant\n \t\t      this->_M_destructive_copy(__rhs_index, __rhs_mem);\n \t\t    else\n \t\t      __variant_cast<_Types...>(*this)\n-\t\t\t= variant<_Types...>(__rhs_mem);\n+\t\t\t= variant<_Types...>(std::in_place_index<__rhs_index>,\n+\t\t\t\t\t     __rhs_mem);\n \t\t  }\n \t      }\n \t    else"}, {"sha": "04bb5d7c8071e70c8dc127429b0f41916d10d89f", "filename": "libstdc++-v3/testsuite/20_util/variant/91807.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbca7a69f276e4829354f87f2747ebff36f6090e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2F91807.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbca7a69f276e4829354f87f2747ebff36f6090e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2F91807.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2F91807.cc?ref=dbca7a69f276e4829354f87f2747ebff36f6090e", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <variant>\n+\n+struct me_data {\n+  me_data() = default;\n+\n+  me_data(const me_data &) {};\n+  me_data(me_data &&) noexcept {};\n+  me_data& operator=(const me_data &) = default;\n+};\n+\n+int main() {\n+  std::variant<me_data, me_data> v1, v2;\n+\n+  v2 = v1;\n+}"}]}