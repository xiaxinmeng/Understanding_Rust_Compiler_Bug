{"sha": "8d4227c89bd724cba6995aa50f7c566d95b9ce51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0MjI3Yzg5YmQ3MjRjYmE2OTk1YWE1MGY3YzU2NmQ5NWI5Y2U1MQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2015-12-12T18:55:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2015-12-12T18:55:25Z"}, "message": "re PR fortran/68815 (Error/warning diagnostic: '%s' should be converted to %qs-like or %<%s%>-like string strings)\n\n2014-12-12  Tobias Burnus  <burnus@net-b.de>\n\ngcc/c-family/\n        PR fortran/68815\n        * c-format.c (gcc_gfc_char_table): Add 'q' flag to remaining\n        specifiers (%d, %i,%u and %c).\n\ngcc/fortran/\n        PR fortran/68815\n        * check.c (gfc_check_reshape): Replace %<%d%> by %qd.\n        * matchexp.c (gfc_match_defined_op_name): Use %qc.\n        * symbol.c (gfc_add_new_implicit_range,\n        gfc_merge_new_implicit): Ditto.\n\nFrom-SVN: r231584", "tree": {"sha": "a8269eca2cd38f798bda37b27f0adab5f1016008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8269eca2cd38f798bda37b27f0adab5f1016008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d4227c89bd724cba6995aa50f7c566d95b9ce51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4227c89bd724cba6995aa50f7c566d95b9ce51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d4227c89bd724cba6995aa50f7c566d95b9ce51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4227c89bd724cba6995aa50f7c566d95b9ce51/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68f7e79ea7c0451b5a890a6d193cf31a8795193e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f7e79ea7c0451b5a890a6d193cf31a8795193e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f7e79ea7c0451b5a890a6d193cf31a8795193e"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "0f557c77e61f9e182b390efadc732152f695816e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=8d4227c89bd724cba6995aa50f7c566d95b9ce51", "patch": "@@ -1,3 +1,9 @@\n+2014-12-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/68815\n+\t* c-format.c (gcc_gfc_char_table): Add 'q' flag to remaining\n+\tspecifiers (%d, %i,%u and %c).\n+\n 2015-12-10  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c.opt (Wmisleading-indentation): Add to -Wall for C and C++."}, {"sha": "de07b6cced56fb3cf9252fd758589ac6a4fdb2b8", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=8d4227c89bd724cba6995aa50f7c566d95b9ce51", "patch": "@@ -809,9 +809,9 @@ static const format_char_info gcc_cxxdiag_char_table[] =\n static const format_char_info gcc_gfc_char_table[] =\n {\n   /* C89 conversion specifiers.  */\n-  { \"di\",  0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T89_L,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"\", \"\", NULL },\n-  { \"u\",   0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"\", \"\", NULL },\n-  { \"c\",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"\", \"\", NULL },\n+  { \"di\",  0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T89_L,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\", \"\", NULL },\n+  { \"u\",   0, STD_C89, { T89_UI,  BADLEN,  BADLEN,  T89_UL,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\", \"\", NULL },\n+  { \"c\",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\", \"\", NULL },\n   { \"s\",   1, STD_C89, { T89_C,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\", \"cR\", NULL },\n \n   /* gfc conversion specifiers.  */"}, {"sha": "749d5223d03de007913473697628555d266edc60", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8d4227c89bd724cba6995aa50f7c566d95b9ce51", "patch": "@@ -1,3 +1,11 @@\n+2014-12-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/68815\n+\t* check.c (gfc_check_reshape): Replace %<%d%> by %qd.\n+\t* matchexp.c (gfc_match_defined_op_name): Use %qc.\n+\t* symbol.c (gfc_add_new_implicit_range,\n+\tgfc_merge_new_implicit): Ditto.\n+\n 2015-12-10  David Malcolm  <dmalcolm@redhat.com>\n \n \t* io.c (gfc_match_open): Fix indentation."}, {"sha": "3f1bdd315aee89ce880d7e3831b1168efd497d3a", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=8d4227c89bd724cba6995aa50f7c566d95b9ce51", "patch": "@@ -3863,7 +3863,7 @@ gfc_check_reshape (gfc_expr *source, gfc_expr *shape,\n \t\t{\n \t\t  gfc_error (\"%qs argument of %qs intrinsic at %L has \"\n \t\t\t     \"invalid permutation of dimensions (dimension \"\n-\t\t\t     \"%<%d%> duplicated)\",\n+\t\t\t     \"%qd duplicated)\",\n \t\t\t     gfc_current_intrinsic_arg[3]->name,\n \t\t\t     gfc_current_intrinsic, &e->where, dim);\n \t\t  return false;"}, {"sha": "c14ef59846736fbfe97cb1de99bc0539fb0a6363", "filename": "gcc/fortran/matchexp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2Fmatchexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2Fmatchexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatchexp.c?ref=8d4227c89bd724cba6995aa50f7c566d95b9ce51", "patch": "@@ -69,7 +69,7 @@ gfc_match_defined_op_name (char *result, int error_flag)\n   for (i = 0; name[i]; i++)\n     if (!ISALPHA (name[i]))\n       {\n-\tgfc_error (\"Bad character %<%c%> in OPERATOR name at %C\", name[i]);\n+\tgfc_error (\"Bad character %qc in OPERATOR name at %C\", name[i]);\n \treturn MATCH_ERROR;\n       }\n "}, {"sha": "678a2318c9af656c18b9f66eef885264b649fff6", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4227c89bd724cba6995aa50f7c566d95b9ce51/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=8d4227c89bd724cba6995aa50f7c566d95b9ce51", "patch": "@@ -165,7 +165,7 @@ gfc_add_new_implicit_range (int c1, int c2)\n     {\n       if (new_flag[i])\n \t{\n-\t  gfc_error (\"Letter %<%c%> already set in IMPLICIT statement at %C\",\n+\t  gfc_error (\"Letter %qc already set in IMPLICIT statement at %C\",\n \t\t     i + 'A');\n \t  return false;\n \t}\n@@ -197,7 +197,7 @@ gfc_merge_new_implicit (gfc_typespec *ts)\n \t{\n \t  if (gfc_current_ns->set_flag[i])\n \t    {\n-\t      gfc_error (\"Letter %c already has an IMPLICIT type at %C\",\n+\t      gfc_error (\"Letter %qc already has an IMPLICIT type at %C\",\n \t\t\t i + 'A');\n \t      return false;\n \t    }"}]}