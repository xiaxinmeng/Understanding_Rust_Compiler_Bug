{"sha": "4b0ab0d9588f6c63f7102e70de52684cdda49de8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIwYWIwZDk1ODhmNmM2M2Y3MTAyZTcwZGU1MjY4NGNkZGE0OWRlOA==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2019-10-28T15:01:24Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2019-10-28T15:01:24Z"}, "message": "re PR tree-optimization/92163 (ICE: Segmentation fault (in bitmap_set_bit))\n\n2019-10-28  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR tree-optimization/92163\n\t* tree-ssa-dse.c (delete_dead_or_redundant_assignment): New param\n\tneed_eh_cleanup with default value NULL. Gate on need_eh_cleanup\n\tbefore calling bitmap_set_bit.\n\t(dse_optimize_redundant_stores): Pass global need_eh_cleanup to\n\tdelete_dead_or_redundant_assignment.\n\t(dse_dom_walker::dse_optimize_stmt): Likewise.\n\t* tree-ssa-dse.h (delete_dead_or_redundant_assignment): Adjust prototype.\n\ntestsuite/\n\t* gcc.dg/tree-ssa/pr92163.c: New test.\n\nFrom-SVN: r277525", "tree": {"sha": "0b3bbb28c2906a9e3fcbde687afc7295729329b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b3bbb28c2906a9e3fcbde687afc7295729329b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b0ab0d9588f6c63f7102e70de52684cdda49de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b0ab0d9588f6c63f7102e70de52684cdda49de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b0ab0d9588f6c63f7102e70de52684cdda49de8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b0ab0d9588f6c63f7102e70de52684cdda49de8/comments", "author": null, "committer": null, "parents": [{"sha": "fa03d5763a91f5061152842c92fbb4e446a3b75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa03d5763a91f5061152842c92fbb4e446a3b75f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa03d5763a91f5061152842c92fbb4e446a3b75f"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "aa9c489b17636b8538fc840c67cc4fc9c41aa3bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b0ab0d9588f6c63f7102e70de52684cdda49de8", "patch": "@@ -1,3 +1,14 @@\n+2019-10-28  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/92163\n+\t* tree-ssa-dse.c (delete_dead_or_redundant_assignment): New param\n+\tneed_eh_cleanup with default value NULL. Gate on need_eh_cleanup\n+\tbefore calling bitmap_set_bit.\n+\t(dse_optimize_redundant_stores): Pass global need_eh_cleanup to\n+\tdelete_dead_or_redundant_assignment.\n+\t(dse_dom_walker::dse_optimize_stmt): Likewise.\n+\t* tree-ssa-dse.h (delete_dead_or_redundant_assignment): Adjust prototype.\n+\n 2019-10-28  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR middle-end/91272"}, {"sha": "b7658e03628a4808026e1c33961817debaab6009", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b0ab0d9588f6c63f7102e70de52684cdda49de8", "patch": "@@ -1,3 +1,8 @@\n+2019-10-28  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/92163\n+\t* gcc.dg/tree-ssa/pr92163.c: New test.\n+\n 2019-10-28  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR middle-end/91272"}, {"sha": "58f548fe76b521da2effa23f467d8b357cef2b57", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr92163.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr92163.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr92163.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr92163.c?ref=4b0ab0d9588f6c63f7102e70de52684cdda49de8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do \"compile\" } */\n+/* { dg-options \"-O2 -fexceptions -fnon-call-exceptions -fopenacc\" } */\n+\n+void\n+xr (int *k7)\n+{\n+  int qa;\n+\n+#pragma acc parallel\n+#pragma acc loop vector\n+  for (qa = 0; qa < 3; ++qa)\n+    if (qa % 2 != 0)\n+      k7[qa] = 0;\n+    else\n+      k7[qa] = 1;\n+}"}, {"sha": "21a15eef6906e58632a2a52d84cd9ac48b838210", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=4b0ab0d9588f6c63f7102e70de52684cdda49de8", "patch": "@@ -77,7 +77,6 @@ along with GCC; see the file COPYING3.  If not see\n    fact, they are the same transformation applied to different views of\n    the CFG.  */\n \n-void delete_dead_or_redundant_assignment (gimple_stmt_iterator *, const char *);\n static void delete_dead_or_redundant_call (gimple_stmt_iterator *, const char *);\n \n /* Bitmap of blocks that have had EH statements cleaned.  We should\n@@ -639,7 +638,8 @@ dse_optimize_redundant_stores (gimple *stmt)\n \t    {\n \t      gimple_stmt_iterator gsi = gsi_for_stmt (use_stmt);\n \t      if (is_gimple_assign (use_stmt))\n-\t\tdelete_dead_or_redundant_assignment (&gsi, \"redundant\");\n+\t\tdelete_dead_or_redundant_assignment (&gsi, \"redundant\",\n+\t\t\t\t\t\t     need_eh_cleanup);\n \t      else if (is_gimple_call (use_stmt))\n \t\tdelete_dead_or_redundant_call (&gsi, \"redundant\");\n \t      else\n@@ -900,7 +900,8 @@ delete_dead_or_redundant_call (gimple_stmt_iterator *gsi, const char *type)\n /* Delete a dead store at GSI, which is a gimple assignment. */\n \n void\n-delete_dead_or_redundant_assignment (gimple_stmt_iterator *gsi, const char *type)\n+delete_dead_or_redundant_assignment (gimple_stmt_iterator *gsi, const char *type,\n+\t\t\t\t     bitmap need_eh_cleanup)\n {\n   gimple *stmt = gsi_stmt (*gsi);\n   if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -915,7 +916,7 @@ delete_dead_or_redundant_assignment (gimple_stmt_iterator *gsi, const char *type\n \n   /* Remove the dead store.  */\n   basic_block bb = gimple_bb (stmt);\n-  if (gsi_remove (gsi, true))\n+  if (gsi_remove (gsi, true) && need_eh_cleanup)\n     bitmap_set_bit (need_eh_cleanup, bb->index);\n \n   /* And release any SSA_NAMEs set in this statement back to the\n@@ -1059,7 +1060,7 @@ dse_dom_walker::dse_optimize_stmt (gimple_stmt_iterator *gsi)\n \t  && !by_clobber_p)\n \treturn;\n \n-      delete_dead_or_redundant_assignment (gsi, \"dead\");\n+      delete_dead_or_redundant_assignment (gsi, \"dead\", need_eh_cleanup);\n     }\n }\n "}, {"sha": "2658f92b1bbef783aff024307c6d77222a2901ba", "filename": "gcc/tree-ssa-dse.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftree-ssa-dse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b0ab0d9588f6c63f7102e70de52684cdda49de8/gcc%2Ftree-ssa-dse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.h?ref=4b0ab0d9588f6c63f7102e70de52684cdda49de8", "patch": "@@ -31,6 +31,7 @@ enum dse_store_status\n dse_store_status dse_classify_store (ao_ref *, gimple *, bool, sbitmap,\n \t\t\t\t     bool * = NULL, tree = NULL);\n \n-void delete_dead_or_redundant_assignment (gimple_stmt_iterator *, const char *);\n+void delete_dead_or_redundant_assignment (gimple_stmt_iterator *, const char *,\n+\t\t\t\t\t  bitmap = NULL);\n \n #endif   /* GCC_TREE_SSA_DSE_H  */"}]}