{"sha": "dc570700beab4080040884690deb6016090b4fa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1NzA3MDBiZWFiNDA4MDA0MDg4NDY5MGRlYjYwMTYwOTBiNGZhOA==", "commit": {"author": {"name": "Nikhil Benesch", "email": "nikhil.benesch@gmail.com", "date": "2020-10-13T06:36:43Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-10-14T20:56:01Z"}, "message": "libgo: export NetBSD-specific types in mksysinfo.sh\n\nThe syscall package depends on many NetBSD-specific types on NetBSD.\nTeach mksysinfo.sh to export these types.\n\nThis alone is not sufficient to get the syscall package to compile on\nNetBSD, but it's a start.\n\nNote that the IfMsgHdr type is recapitalized to IfMsghdr, which requires\nchanges in the AIX port. The new capitalization is what's used by\nupstream in existing NetBSD-specific code and is more consistent with\nthe capitalization of other C structs with the \"hdr\" suffix.\n\nUpdates golang/go#38538.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/261739", "tree": {"sha": "0071ca0e6830bbe09ffaa032f217a587a5345dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0071ca0e6830bbe09ffaa032f217a587a5345dc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc570700beab4080040884690deb6016090b4fa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc570700beab4080040884690deb6016090b4fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc570700beab4080040884690deb6016090b4fa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc570700beab4080040884690deb6016090b4fa8/comments", "author": {"login": "benesch", "id": 882976, "node_id": "MDQ6VXNlcjg4Mjk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/882976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benesch", "html_url": "https://github.com/benesch", "followers_url": "https://api.github.com/users/benesch/followers", "following_url": "https://api.github.com/users/benesch/following{/other_user}", "gists_url": "https://api.github.com/users/benesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/benesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benesch/subscriptions", "organizations_url": "https://api.github.com/users/benesch/orgs", "repos_url": "https://api.github.com/users/benesch/repos", "events_url": "https://api.github.com/users/benesch/events{/privacy}", "received_events_url": "https://api.github.com/users/benesch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca56d576241c6783eb36eea526b42c4f3fbf697b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca56d576241c6783eb36eea526b42c4f3fbf697b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca56d576241c6783eb36eea526b42c4f3fbf697b"}], "stats": {"total": 212, "additions": 196, "deletions": 16}, "files": [{"sha": "e6eb8e5c3359cf0aaea5e0d3ee84d9a008ffa2fc", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -1,4 +1,4 @@\n-c5505c4e626fa4217911443b4db8b065855a0206\n+cc1f7d613f9b0666bbf8aac3dd208d5adfe88546\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "532640b22ee14d4406e4519955ba62f01a829691", "filename": "libgo/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -174,6 +174,9 @@\n /* Define to 1 if you have the <netpacket/packet.h> header file. */\n #undef HAVE_NETPACKET_PACKET_H\n \n+/* Define to 1 if you have the <net/bpf.h> header file. */\n+#undef HAVE_NET_BPF_H\n+\n /* Define to 1 if you have the <net/if_arp.h> header file. */\n #undef HAVE_NET_IF_ARP_H\n \n@@ -294,6 +297,9 @@\n /* Define to 1 if you have the <sys/syscall.h> header file. */\n #undef HAVE_SYS_SYSCALL_H\n \n+/* Define to 1 if you have the <sys/sysctl.h> header file. */\n+#undef HAVE_SYS_SYSCTL_H\n+\n /* Define to 1 if you have the <sys/sysinfo.h> header file. */\n #undef HAVE_SYS_SYSINFO_H\n "}, {"sha": "81331dd10ebb30a8222668fe826c7ba98aa73776", "filename": "libgo/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -15202,7 +15202,7 @@ $as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n   fi\n \n \n-for ac_header in port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h\n+for ac_header in port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/sysctl.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/bpf.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\""}, {"sha": "f87ab65e3bac9fd0939fe304e6a491829a18c563", "filename": "libgo/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -580,7 +580,7 @@ AC_C_BIGENDIAN\n \n GCC_CHECK_UNWIND_GETIPINFO\n \n-AC_CHECK_HEADERS(port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h)\n+AC_CHECK_HEADERS(port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/sysctl.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/bpf.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h)\n \n AC_CHECK_HEADERS([netinet/icmp6.h], [], [],\n [#include <netinet/in.h>"}, {"sha": "9ebb6520771e4bbd17edd0babf0890e9eb9b3e64", "filename": "libgo/go/runtime/os_netbsd.go", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fgo%2Fruntime%2Fos_netbsd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fgo%2Fruntime%2Fos_netbsd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fos_netbsd.go?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -33,13 +33,6 @@ func lwp_unpark(lwp int32, hint unsafe.Pointer) int32\n //extern sysctl\n func sysctl(*uint32, uint32, *byte, *uintptr, *byte, uintptr) int32\n \n-// From NetBSD's <sys/sysctl.h>\n-const (\n-\t_CTL_HW      = 6\n-\t_HW_NCPU     = 3\n-\t_HW_PAGESIZE = 7\n-)\n-\n func getncpu() int32 {\n \tmib := [2]uint32{_CTL_HW, _HW_NCPU}\n \tout := uint32(0)"}, {"sha": "607c97d26fe4a4ef85837f183073a85675b7d0e0", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 133, "deletions": 6, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -225,6 +225,22 @@ if ! grep '^const _AT_FDCWD = ' ${OUT} >/dev/null 2>&1; then\n   echo \"const _AT_FDCWD = -100\" >> ${OUT}\n fi\n \n+# sysctl constants.\n+grep '^const _CTL' gen-sysinfo.go |\n+  sed -e 's/^\\(const \\)_\\(CTL[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+  grep '^const _SYSCTL' gen-sysinfo.go |\n+  sed -e 's/^\\(const \\)_\\(SYSCTL[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+  grep '^const _NET_RT' gen-sysinfo.go |\n+  sed -e 's/^\\(const \\)_\\(NET_RT[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+\n+# The sysctlnode struct.\n+grep '^type _sysctlnode ' gen-sysinfo.go | \\\n+    sed -e 's/_sysctlnode/Sysctlnode/' \\\n+\t\t-e 's/sysctl_flags/Flags/' \\\n+    -e 's/sysctl_name/Name/' \\\n+    -e 's/sysctl_num/Num/' \\\n+\t\t>> ${OUT}\n+\n # sysconf constants.\n grep '^const __SC' gen-sysinfo.go |\n   sed -e 's/^\\(const \\)__\\(SC[^= ]*\\)\\(.*\\)$/\\1\\2 = __\\2/' >> ${OUT}\n@@ -533,6 +549,7 @@ fi | sed -e 's/type _dirent64/type Dirent/' \\\n          -e 's/d_name \\[0+1\\]/d_name [0+256]/' \\\n          -e 's/d_name/Name/' \\\n          -e 's/]int8/]byte/' \\\n+         -e 's/d_fileno/Fileno/' \\\n          -e 's/d_ino/Ino/' \\\n          -e 's/d_namlen/Namlen/' \\\n          -e 's/d_off/Off/' \\\n@@ -994,6 +1011,39 @@ grep '^type _rtgenmsg ' gen-sysinfo.go | \\\n       -e 's/rtgen_family/Family/' \\\n     >> ${OUT}\n \n+# The rt_msghdr struct.\n+grep '^type _rt_msghdr ' gen-sysinfo.go | \\\n+    sed -e 's/_rt_msghdr/RtMsghdr/g' \\\n+        -e 's/rtm_msglen/Msglen/' \\\n+        -e 's/rtm_version/Version/' \\\n+        -e 's/rtm_type/Type/' \\\n+        -e 's/rtm_index/Index/' \\\n+        -e 's/rtm_flags/Flags/' \\\n+        -e 's/rtm_addrs/Addrs/' \\\n+        -e 's/rtm_pid/Pid/' \\\n+        -e 's/rtm_seq/Seq/' \\\n+        -e 's/rtm_errno/Errno/' \\\n+        -e 's/rtm_use/Use/' \\\n+        -e 's/rtm_inits/Inits/' \\\n+        -e 's/rtm_rmx/Rmx/' \\\n+        -e 's/_rt_metrics/RtMetrics/' \\\n+      >> ${OUT}\n+\n+# The rt_metrics struct.\n+grep '^type _rt_metrics ' gen-sysinfo.go | \\\n+    sed -e 's/_rt_metrics/RtMetrics/g' \\\n+        -e 's/rmx_locks/Locks/' \\\n+        -e 's/rmx_mtu/Mtu/' \\\n+        -e 's/rmx_hopcount/Hopcount/' \\\n+        -e 's/rmx_recvpipe/Recvpipe/' \\\n+        -e 's/rmx_sendpipe/Sendpipe/' \\\n+        -e 's/rmx_ssthresh/Ssthresh/' \\\n+        -e 's/rmx_rtt/Rtt/' \\\n+        -e 's/rmx_rttvar/Rttvar/' \\\n+        -e 's/rmx_expire/Expire/' \\\n+        -e 's/rmx_pksent/Pksent/' \\\n+      >> ${OUT}\n+\n # The routing message flags.\n grep '^const _RT_' gen-sysinfo.go | \\\n     sed -e 's/^\\(const \\)_\\(RT_[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n@@ -1020,9 +1070,14 @@ grep '^type _ifinfomsg ' gen-sysinfo.go | \\\n       -e 's/ifi_change/Change/' \\\n     >> ${OUT}\n \n-# The if_msghdr struct.\n+# The if_msghdr struct. Upstream uses inconsistent capitalization for this type\n+# on AIX, so we do too.\n+ifmsghdr_name=IfMsghdr\n+if test \"${GOOS}\" = \"aix\"; then\n+    ifmsghdr_name=IfMsgHdr\n+fi\n grep '^type _if_msghdr ' gen-sysinfo.go | \\\n-    sed -e 's/_if_msghdr/IfMsgHdr/' \\\n+    sed -e \"s/_if_msghdr/${ifmsghdr_name}/\" \\\n \t\t-e 's/ifm_msglen/Msglen/' \\\n \t\t-e 's/ifm_version/Version/' \\\n \t\t-e 's/ifm_type/Type/' \\\n@@ -1032,6 +1087,17 @@ grep '^type _if_msghdr ' gen-sysinfo.go | \\\n \t\t-e 's/ifm_addrlen/Addrlen/' \\\n \t\t>> ${OUT}\n \n+# The if_announcemsghdr struct.\n+grep '^type _if_announcemsghdr ' gen-sysinfo.go | \\\n+    sed -e 's/_if_announcemsghdr/IfAnnounceMsghdr/g' \\\n+        -e 's/ifan_msglen/Msglen/' \\\n+        -e 's/ifan_version/Version/' \\\n+        -e 's/ifan_type/Type/' \\\n+        -e 's/ifan_index/Index/' \\\n+        -e 's/ifan_name/Name/' \\\n+        -e 's/ifan_what/What/' \\\n+      >> ${OUT}\n+\n # The interface information types and flags.\n grep '^const _IFA' gen-sysinfo.go | \\\n     sed -e 's/^\\(const \\)_\\(IFA[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n@@ -1061,13 +1127,73 @@ grep '^type _ifaddrmsg ' gen-sysinfo.go | \\\n       -e 's/ifa_index/Index/' \\\n     >> ${OUT}\n \n+# The ifa_msghdr struct.\n+grep '^type _ifa_msghdr ' gen-sysinfo.go | \\\n+    sed -e 's/_ifa_msghdr/IfaMsghdr/g' \\\n+        -e 's/ifam_msglen/Msglen/' \\\n+        -e 's/ifam_version/Version/' \\\n+        -e 's/ifam_type/Type/' \\\n+        -e 's/ifam_addrs/Addrs/' \\\n+        -e 's/ifam_flags/Flags/' \\\n+        -e 's/ifam_metric/Metric/' \\\n+        -e 's/ifam_index/Index/' \\\n+      >> ${OUT}\n+\n # The rtattr struct.\n grep '^type _rtattr ' gen-sysinfo.go | \\\n     sed -e 's/_rtattr/RtAttr/' \\\n       -e 's/rta_len/Len/' \\\n       -e 's/rta_type/Type/' \\\n     >> ${OUT}\n \n+# The bpf_version struct.\n+grep '^type _bpf_version ' gen-sysinfo.go | \\\n+    sed -e 's/_bpf_version/BpfVersion/g' \\\n+        -e 's/bv_major/Major/' \\\n+        -e 's/bv_minor/Minor/' \\\n+      >> ${OUT}\n+\n+# The bpf_stat struct.\n+grep '^type _bpf_stat ' gen-sysinfo.go | \\\n+    sed -e 's/_bpf_stat/BpfStat/g' \\\n+        -e 's/bs_recv/Recv/' \\\n+        -e 's/bs_drop/Drop/' \\\n+        -e 's/bs_capt/Capt/' \\\n+        -e 's/bs_padding/Padding/' \\\n+      >> ${OUT}\n+\n+# The bpf_insn struct.\n+grep '^type _bpf_insn ' gen-sysinfo.go | \\\n+    sed -e 's/_bpf_insn/BpfInsn/g' \\\n+        -e 's/code/Code/' \\\n+        -e 's/jt/Jt/' \\\n+        -e 's/jf/Jf/' \\\n+        -e 's/k/K/' \\\n+      >> ${OUT}\n+\n+# The bpf_program struct.\n+grep '^type _bpf_program ' gen-sysinfo.go | \\\n+    sed -e 's/_bpf_program/BpfProgram/g' \\\n+        -e 's/bf_len/Len/' \\\n+        -e 's/bf_insns/Insns/' \\\n+        -e 's/_bpf_insn/BpfInsn/' \\\n+      >> ${OUT}\n+\n+# The BPF ioctl constants.\n+grep '^const _BIOC' gen-sysinfo.go | \\\n+    grep -v '_val =' | \\\n+    sed -e 's/^\\(const \\)_\\(BIOC[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+for c in BIOCFLUSH BIOCGBLEN BIOCGDLT BIOCGETIF BIOCGHDRCMPLT BIOCGRTIMEOUT \\\n+         BIOCGSTATS BIOCIMMEDIATE BIOCPROMISC BIOCSBLEN BIOCSDLT BIOCSETF \\\n+         BIOCSETIF BIOCSHDRCMPLT BIOCSRTIMEOUT BIOCVERSION\n+do\n+  if ! grep \"^const ${c}\" ${OUT} >/dev/null 2>&1; then\n+    if grep \"^const _${c}_val\" ${OUT} >/dev/null 2>&1; then\n+      echo \"const ${c} = _${c}_val\" >> ${OUT}\n+    fi\n+  fi\n+done\n+\n # The in_pktinfo struct.\n grep '^type _in_pktinfo ' gen-sysinfo.go | \\\n     sed -e 's/_in_pktinfo/Inet4Pktinfo/' \\\n@@ -1344,10 +1470,11 @@ fi\n \n # Struct sizes.\n set cmsghdr Cmsghdr ip_mreq IPMreq ip_mreqn IPMreqn ipv6_mreq IPv6Mreq \\\n-    ifaddrmsg IfAddrmsg ifinfomsg IfInfomsg in_pktinfo Inet4Pktinfo \\\n-    in6_pktinfo Inet6Pktinfo inotify_event InotifyEvent linger Linger \\\n-    msghdr Msghdr nlattr NlAttr nlmsgerr NlMsgerr nlmsghdr NlMsghdr \\\n-    rtattr RtAttr rtgenmsg RtGenmsg rtmsg RtMsg rtnexthop RtNexthop \\\n+    ifaddrmsg IfAddrmsg ifa_msghdr IfaMsghdr ifinfomsg IfInfomsg \\\n+    if_msghdr IfMsghdr in_pktinfo Inet4Pktinfo in6_pktinfo Inet6Pktinfo \\\n+    inotify_event InotifyEvent linger Linger msghdr Msghdr nlattr NlAttr \\\n+    nlmsgerr NlMsgerr nlmsghdr NlMsghdr rtattr RtAttr rt_msghdr RtMsghdr \\\n+    rtgenmsg RtGenmsg rtmsg RtMsg rtnexthop RtNexthop \\\n     sock_filter SockFilter sock_fprog SockFprog ucred Ucred \\\n     icmp6_filter ICMPv6Filter ip6_mtuinfo IPv6MTUInfo\n while test $# != 0; do"}, {"sha": "ba84071a7bb2d49a44e71c789657730ce483cc69", "filename": "libgo/sysinfo.c", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fsysinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc570700beab4080040884690deb6016090b4fa8/libgo%2Fsysinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsysinfo.c?ref=dc570700beab4080040884690deb6016090b4fa8", "patch": "@@ -47,6 +47,9 @@\n #if defined(HAVE_SYS_SYSCALL_H)\n #include <sys/syscall.h>\n #endif\n+#if defined(HAVE_SYS_SYSCTL_H)\n+#include <sys/sysctl.h>\n+#endif\n #if defined(HAVE_SYS_EPOLL_H)\n #include <sys/epoll.h>\n #endif\n@@ -117,6 +120,9 @@\n #if defined(HAVE_LINUX_RTNETLINK_H)\n #include <linux/rtnetlink.h>\n #endif\n+#if defined(HAVE_NET_BPF_H)\n+#include <net/bpf.h>\n+#endif\n #if defined(HAVE_NET_IF_H)\n #include <net/if.h>\n #endif\n@@ -279,6 +285,54 @@ enum {\n #ifdef NLA_HDRLEN\n   NLA_HDRLEN_val = NLA_HDRLEN,\n #endif\n+#ifdef BIOCFLUSH\n+  BIOCFLUSH_val = BIOCFLUSH,\n+#endif\n+#ifdef BIOCGBLEN\n+  BIOCGBLEN_val = BIOCGBLEN,\n+#endif\n+#ifdef BIOCGDLT\n+  BIOCGDLT_val = BIOCGDLT,\n+#endif\n+#ifdef BIOCGETIF\n+  BIOCGETIF_val = BIOCGETIF,\n+#endif\n+#ifdef BIOCGHDRCMPLT\n+  BIOCGHDRCMPLT_val = BIOCGHDRCMPLT,\n+#endif\n+#ifdef BIOCGRTIMEOUT\n+  BIOCGRTIMEOUT_val = BIOCGRTIMEOUT,\n+#endif\n+#ifdef BIOCGSTATS\n+  BIOCGSTATS_val = BIOCGSTATS,\n+#endif\n+#ifdef BIOCIMMEDIATE\n+  BIOCIMMEDIATE_val = BIOCIMMEDIATE,\n+#endif\n+#ifdef BIOCPROMISC\n+  BIOCPROMISC_val = BIOCPROMISC,\n+#endif\n+#ifdef BIOCSBLEN\n+  BIOCSBLEN_val = BIOCSBLEN,\n+#endif\n+#ifdef BIOCSDLT\n+  BIOCSDLT_val = BIOCSDLT,\n+#endif\n+#ifdef BIOCSETF\n+  BIOCSETF_val = BIOCSETF,\n+#endif\n+#ifdef BIOCSETIF\n+  BIOCSETIF_val = BIOCSETIF,\n+#endif\n+#ifdef BIOCSHDRCMPLT\n+  BIOCSHDRCMPLT_val = BIOCSHDRCMPLT,\n+#endif\n+#ifdef BIOCSRTIMEOUT\n+  BIOCSRTIMEOUT_val = BIOCSRTIMEOUT,\n+#endif\n+#ifdef BIOCVERSION\n+  BIOCVERSION_val = BIOCVERSION,\n+#endif\n };\n \n // SIOCGIFMTU can't be added in the above enum as it might"}]}