{"sha": "3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FlOWViMjcwYWU3NWNlYjdhYTI5NzUyZWYzYTg1MjEwYjdhYjUyYw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2005-03-30T00:30:51Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-03-30T00:30:51Z"}, "message": "gfortran.h (option_t): Change d8, i8, r8 to flag_default_double, flag_default_integer, flag_default_real\n\n* gfortran.h (option_t): Change d8, i8, r8 to flag_default_double,\n  flag_default_integer, flag_default_real\n* invoke.texi: Update documentation\n* lang.opt: Remove d8, i8, r8 definitions; Add fdefault-double-8\n  fdefault-integer-8, and fdefault-real-8 definitions.\n* options.c (gfc_init_options): Set option defaults\n  (gfc_handle_option): Handle command line options.\n* trans-types.c (gfc_init_kinds): Use options.\n\nFrom-SVN: r97221", "tree": {"sha": "003a9d206b4993a10d1804380e5cc1a02e1d8501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/003a9d206b4993a10d1804380e5cc1a02e1d8501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/comments", "author": null, "committer": null, "parents": [{"sha": "15cc18411d3efef1544696e31833e93f79506cf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15cc18411d3efef1544696e31833e93f79506cf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15cc18411d3efef1544696e31833e93f79506cf4"}], "stats": {"total": 115, "additions": 67, "deletions": 48}, "files": [{"sha": "bdc5649096c6192639aba2dc7640ec023fe9befe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "patch": "@@ -1,3 +1,14 @@\n+2005-03-29  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* gfortran.h (option_t): Change d8, i8, r8 to flag_default_double,\n+\tflag_default_integer, flag_default_real\n+\t* invoke.texi: Update documentation\n+\t* lang.opt: Remove d8, i8, r8 definitions; Add fdefault-double-8   \n+\tfdefault-integer-8, and fdefault-real-8 definitions.\n+\t* options.c (gfc_init_options): Set option defaults\n+\t(gfc_handle_option): Handle command line options.\n+\t* trans-types.c (gfc_init_kinds): Use options.\n+\n 2005-03-29  Keith Besaw  <kbesaw@us.ibm.com>\n \n \t* f95-lang.c (builtin_function): Process the attrs parameter"}, {"sha": "60a3040b85f2a71307e6c74a11d53872456a23a5", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "patch": "@@ -1402,6 +1402,9 @@ typedef struct\n   int warn_surprising;\n   int warn_unused_labels;\n \n+  int flag_default_double;\n+  int flag_default_integer;\n+  int flag_default_real;\n   int flag_dollar_ok;\n   int flag_underscoring;\n   int flag_second_underscore;\n@@ -1413,9 +1416,7 @@ typedef struct\n   int flag_repack_arrays;\n \n   int q_kind;\n-  int r8;\n-  int i8;\n-  int d8;\n+\n   int warn_std;\n   int allow_std;\n   int warn_nonstd_intrinsics;"}, {"sha": "e5b93902a38c9850c19aba4d7e84c4580e0b0621", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "patch": "@@ -119,7 +119,7 @@ by type.  Explanations are in the following sections.\n -fdollar-ok  -fimplicit-none  -fmax-identifier-length @gol\n -std=@var{std}\n -ffixed-line-length-@var{n}  -ffixed-line-length-none @gol\n--i8  -r8  -d8}\n+-fdefault-double-8  -fdefault-integer-8  -fdefault-real-8 }\n \n @item Warning Options\n @xref{Warning Options,,Options to Request or Suppress Warnings}.\n@@ -183,6 +183,23 @@ Specify the layout used by the the source file. The free form layout\n was introduced in Fortran 90.  Fixed form was traditionally used in\n older Fortran programs.\n \n+@cindex option, -fdefault-double-8\n+@cindex -fdefault-double-8, option\n+@item -fdefault-double-8\n+Set the \"DOUBLE PRECISION\" type to an 8 byte wide.\n+\n+@cindex option, -fdefault-integer-8\n+@cindex -fdefault-integer-8, option\n+@item -fdefault-integer-8\n+Set the default integer and logical types to an 8 byte wide type.\n+Do nothing if this is already the default.\n+\n+@cindex option, -fdefault-real-8\n+@cindex -fdefault-real-8, option\n+@item -fdefault-real-8\n+Set the default real type to an 8 byte wide type.\n+Do nothing if this is already the default.\n+\n @cindex -fdollar-ok option\n @cindex options, -fdollar-ok\n @item -fdollar-ok\n@@ -233,23 +250,6 @@ Specify that no implicit typing is allowed, unless overridden by explicit\n Conform to the specified standard.  Allowed values for @var{std} are\n @samp{gnu}, @samp{f95} and @samp{f90}.\n \n-@cindex option, -i8\n-@cindex -i8, option\n-@cindex option, -r8\n-@cindex -r8, option\n-@cindex option, -d8\n-@cindex -d8, option\n-@item -i8\n-@item -r8\n-@item -d8\n-The @option{-i8} and @option{-r8} options set the default @code{INTEGER}\n-and @code{REAL} kinds to @code{KIND=8}.  The @option{-d8} option is\n-equivalent to specifying both @option{-i8} and @option{-r8}.\n-\n-When @option{-r8} is specified, the @code{DOUBLE PRECISION} kind is set\n-to @code{KIND=16} if the target supports a 16 byte floating point format.\n-If no such format exists, the @code{DOUBLE PRECISION} kind is unchanged.\n-\n @end table\n \n @node Warning Options"}, {"sha": "bde1d753b0739252a74c56b4a789978c86962884", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "patch": "@@ -69,9 +69,17 @@ Wunused-labels\n F95\n Warn when a label is unused\n \n-d8\n-F95 RejectNegative\n-Set the default real and integer kinds to double precision\n+fdefault-double-8\n+F95\n+Set the default double precision kind to an 8 byte wide type\n+\n+fdefault-integer-8\n+F95\n+Set the default integer kind to an 8 byte wide type\n+\n+fdefault-real-8\n+F95\n+Set the default real kind to an 8 byte wide type\n \n fdollar-ok\n F95\n@@ -133,18 +141,10 @@ frepack-arrays\n F95\n Copy array sections into a contiguous block on procedure entry\n \n-i8\n-F95\n-Set the default integer kind to double precision\n-\n qkind=\n F95 RejectNegative Joined UInteger\n -qkind=<n>\tSet the kind for a real with the 'q' exponent to 'n'\n \n-r8\n-F95\n-Set the default real kind to double precision\n-\n std=f95\n F95\n Conform to the ISO Fortran 95 standard."}, {"sha": "21fb0a83c522ca290eb95f63512bfc72ed757704", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "patch": "@@ -57,6 +57,9 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_option.warn_surprising = 0;\n   gfc_option.warn_unused_labels = 0;\n \n+  gfc_option.flag_default_double = 0;\n+  gfc_option.flag_default_integer = 0;\n+  gfc_option.flag_default_real = 0;\n   gfc_option.flag_dollar_ok = 0;\n   gfc_option.flag_underscoring = 1;\n   gfc_option.flag_second_underscore = 1;\n@@ -68,9 +71,6 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_option.flag_repack_arrays = 0;\n \n   gfc_option.q_kind = gfc_default_double_kind;\n-  gfc_option.i8 = 0;\n-  gfc_option.r8 = 0;\n-  gfc_option.d8 = 0;\n \n   flag_argument_noalias = 2;\n   flag_errno_math = 0;\n@@ -285,16 +285,16 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.q_kind = value;\n       break;\n \n-    case OPT_i8:\n-      gfc_option.i8 = value;\n+    case OPT_fdefault_integer_8:\n+      gfc_option.flag_default_integer = value;\n       break;\n \n-    case OPT_r8:\n-      gfc_option.r8 = value;\n+    case OPT_fdefault_real_8:\n+      gfc_option.flag_default_real = value;\n       break;\n \n-    case OPT_d8:\n-      gfc_option.d8 = value;\n+    case OPT_fdefault_double_8:\n+      gfc_option.flag_default_double = value;\n       break;\n \n     case OPT_I:"}, {"sha": "11f17ddee60bbd938031ff6847384db2ba2f111f", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=3ae9eb270ae75ceb7aa29752ef3a85210b7ab52c", "patch": "@@ -187,10 +187,10 @@ gfc_init_kinds (void)\n \n   /* Choose the default integer kind.  We choose 4 unless the user\n      directs us otherwise.  */\n-  if (gfc_option.i8)\n+  if (gfc_option.flag_default_integer)\n     {\n       if (!saw_i8)\n-\tfatal_error (\"integer kind=8 not available for -i8 option\");\n+\tfatal_error (\"integer kind=8 not available for -fdefault-integer-8 option\");\n       gfc_default_integer_kind = 8;\n     }\n   else if (saw_i4)\n@@ -199,20 +199,27 @@ gfc_init_kinds (void)\n     gfc_default_integer_kind = gfc_integer_kinds[i_index - 1].kind;\n \n   /* Choose the default real kind.  Again, we choose 4 when possible.  */\n-  if (gfc_option.r8)\n+  if (gfc_option.flag_default_real)\n     {\n       if (!saw_r8)\n-\tfatal_error (\"real kind=8 not available for -r8 option\");\n+\tfatal_error (\"real kind=8 not available for -fdefault-real-8 option\");\n       gfc_default_real_kind = 8;\n     }\n   else if (saw_r4)\n     gfc_default_real_kind = 4;\n   else\n     gfc_default_real_kind = gfc_real_kinds[0].kind;\n \n-  /* Choose the default double kind.  If -r8 is specified, we use kind=16,\n-     if it's available, otherwise we do not change anything.  */\n-  if (gfc_option.r8 && saw_r16)\n+  /* Choose the default double kind.  If -fdefault-real and -fdefault-double \n+     are specified, we use kind=8, if it's available.  If -fdefault-real is\n+     specified without -fdefault-double, we use kind=16, if it's available.\n+     Otherwise we do not change anything.  */\n+  if (gfc_option.flag_default_double && !gfc_option.flag_default_real)\n+    fatal_error (\"Use of -fdefault-double-8 requires -fdefault-real-8\");\n+\n+  if (gfc_option.flag_default_real && gfc_option.flag_default_double && saw_r8)\n+    gfc_default_double_kind = 8;\n+  else if (gfc_option.flag_default_real && saw_r16)\n     gfc_default_double_kind = 16;\n   else if (saw_r4 && saw_r8)\n     gfc_default_double_kind = 8;"}]}