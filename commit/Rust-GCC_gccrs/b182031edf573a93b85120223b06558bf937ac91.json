{"sha": "b182031edf573a93b85120223b06558bf937ac91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE4MjAzMWVkZjU3M2E5M2I4NTEyMDIyM2IwNjU1OGJmOTM3YWM5MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-11-05T20:04:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-11-05T20:04:27Z"}, "message": "haifa-sched.c (schedule_block): Don't crash if there's no next insn for an interblock movement.\n\n        * haifa-sched.c (schedule_block): Don't crash if there's no\n        next insn for an interblock movement.\n        (add_branch_dependences): Don't allow clobber insns to move either.\n\nFrom-SVN: r30422", "tree": {"sha": "cca09ee2dcae29ba49e71c6c39bcae4486a45889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cca09ee2dcae29ba49e71c6c39bcae4486a45889"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b182031edf573a93b85120223b06558bf937ac91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b182031edf573a93b85120223b06558bf937ac91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b182031edf573a93b85120223b06558bf937ac91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b182031edf573a93b85120223b06558bf937ac91/comments", "author": null, "committer": null, "parents": [{"sha": "3496699a4c51d522f46b68a7f136475af88555b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3496699a4c51d522f46b68a7f136475af88555b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3496699a4c51d522f46b68a7f136475af88555b9"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "cfcfceb648da6491e5bd0669a72f0c1c7fca1653", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b182031edf573a93b85120223b06558bf937ac91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b182031edf573a93b85120223b06558bf937ac91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b182031edf573a93b85120223b06558bf937ac91", "patch": "@@ -1,3 +1,9 @@\n+Fri Nov  5 12:04:02 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* haifa-sched.c (schedule_block): Don't crash if there's no\n+\tnext insn for an interblock movement.\n+\t(add_branch_dependences): Don't allow clobber insns to move either.\n+\n Fri Nov  5 10:18:11 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.c (split_xf): New."}, {"sha": "57160e17055c9050dc4488d5bdf5bfda1e9923be", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b182031edf573a93b85120223b06558bf937ac91/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b182031edf573a93b85120223b06558bf937ac91/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=b182031edf573a93b85120223b06558bf937ac91", "patch": "@@ -5876,7 +5876,6 @@ schedule_block (bb, rgn_n_insns)\n \t\t    || (insn_issue_delay (insn) <= 3\n \t\t\t&& check_live (insn, bb_src)\n \t\t\t&& is_exception_free (insn, bb_src, target_bb))))\n-\n \t      {\n \t\trtx next;\n \n@@ -5885,7 +5884,8 @@ schedule_block (bb, rgn_n_insns)\n \t\t   speculative insn, NEXT might otherwise be a note.  */\n \t\tnext = next_nonnote_insn (insn);\n \t\tif (INSN_DEP_COUNT (insn) == 0\n-\t\t    && (SCHED_GROUP_P (next) == 0\n+\t\t    && (! next\n+\t\t\t|| SCHED_GROUP_P (next) == 0\n \t\t\t|| GET_RTX_CLASS (GET_CODE (next)) != 'i'))\n \t\t  ready[n_ready++] = insn;\n \t      }\n@@ -6226,20 +6226,22 @@ add_branch_dependences (head, tail)\n \n   rtx insn, last;\n \n-  /* For all branches, calls, uses, and cc0 setters, force them to remain\n-     in order at the end of the block by adding dependencies and giving\n-     the last a high priority.  There may be notes present, and prev_head\n-     may also be a note.\n+  /* For all branches, calls, uses, clobbers, and cc0 setters, force them\n+     to remain in order at the end of the block by adding dependencies and\n+     giving the last a high priority.  There may be notes present, and\n+     prev_head may also be a note.\n \n      Branches must obviously remain at the end.  Calls should remain at the\n      end since moving them results in worse register allocation.  Uses remain\n      at the end to ensure proper register allocation.  cc0 setters remaim\n      at the end because they can't be moved away from their cc0 user.  */\n   insn = tail;\n   last = 0;\n-  while (GET_CODE (insn) == CALL_INSN || GET_CODE (insn) == JUMP_INSN\n+  while (GET_CODE (insn) == CALL_INSN\n+\t || GET_CODE (insn) == JUMP_INSN\n \t || (GET_CODE (insn) == INSN\n \t     && (GET_CODE (PATTERN (insn)) == USE\n+\t\t || GET_CODE (PATTERN (insn)) == CLOBBER\n #ifdef HAVE_cc0\n \t\t || sets_cc0_p (PATTERN (insn))\n #endif"}]}