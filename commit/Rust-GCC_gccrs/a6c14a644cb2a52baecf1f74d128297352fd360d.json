{"sha": "a6c14a644cb2a52baecf1f74d128297352fd360d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjMTRhNjQ0Y2IyYTUyYmFlY2YxZjc0ZDEyODI5NzM1MmZkMzYwZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-07-26T15:53:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-07-26T15:53:14Z"}, "message": "re PR inline-asm/11676 (operand to volatile asm incorrectly removed)\n\n        PR inline-asm/11676\n        * cse.c (count_reg_usage): Handle asm_operands properly.\n\nFrom-SVN: r69816", "tree": {"sha": "2004ca3e22c09d34da7b9b5d3effeba065873fd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2004ca3e22c09d34da7b9b5d3effeba065873fd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c14a644cb2a52baecf1f74d128297352fd360d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c14a644cb2a52baecf1f74d128297352fd360d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c14a644cb2a52baecf1f74d128297352fd360d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c14a644cb2a52baecf1f74d128297352fd360d/comments", "author": null, "committer": null, "parents": [{"sha": "cd65f08202a73d0f3cbe11b13e0e279ed2f25fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd65f08202a73d0f3cbe11b13e0e279ed2f25fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd65f08202a73d0f3cbe11b13e0e279ed2f25fbb"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "b2f70286a070cff47cb2121938750efa552012d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6c14a644cb2a52baecf1f74d128297352fd360d", "patch": "@@ -1,3 +1,8 @@\n+2003-07-26  Richard Henderson  <rth@redhat.com>\n+\n+\tPR inline-asm/11676\n+\t* cse.c (count_reg_usage): Handle asm_operands properly.\n+\n 2003-07-26  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.def (DEF_FALLBACK_BUILTIN): Delete."}, {"sha": "a4847a857b33af093ffa83707c5e51f4cbd6618e", "filename": "gcc/cse.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=a6c14a644cb2a52baecf1f74d128297352fd360d", "patch": "@@ -7384,6 +7384,16 @@ count_reg_usage (rtx x, int *counts, rtx dest, int incr)\n       count_reg_usage (XEXP (x, 1), counts, NULL_RTX, incr);\n       return;\n \n+    case ASM_OPERANDS:\n+      /* If the asm is volatile, then this insn cannot be deleted,\n+\t and so the inputs *must* be live.  */\n+      if (MEM_VOLATILE_P (x))\n+\tdest = NULL_RTX;\n+      /* Iterate over just the inputs, not the constraints as well.  */\n+      for (i = ASM_OPERANDS_INPUT_LENGTH (x) - 1; i >= 0; i--)\n+\tcount_reg_usage (ASM_OPERANDS_INPUT (x, i), counts, dest, incr);\n+      return;\n+\n     case INSN_LIST:\n       abort ();\n "}, {"sha": "a3f3962eb16d897074ca94a067bbd77fbc00440d", "filename": "gcc/testsuite/gcc.dg/asm-8.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-8.c?ref=a6c14a644cb2a52baecf1f74d128297352fd360d", "patch": "@@ -0,0 +1,9 @@\n+/* PR inline-asm/11676 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wall\" } */\n+\n+void foo(void)\n+{\n+  long x = 0;\n+  asm volatile (\"\" : \"=r\"(x) : \"r\"(x)); /* { dg-bogus \"uninitialized\" } */\n+}"}, {"sha": "aae0de845b30b540ce42d9925fb3d833c7371966", "filename": "gcc/testsuite/gcc.dg/i386-asm-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c14a644cb2a52baecf1f74d128297352fd360d/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-1.c?ref=a6c14a644cb2a52baecf1f74d128297352fd360d", "patch": "@@ -0,0 +1,24 @@\n+/* PR inline-asm/11676 */\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options \"-O2\" } */\n+\n+static int bar(int x) __asm__(\"bar\");\n+static int __attribute__((regparm(1), noinline, used))\n+bar(int x)\n+{\n+  if (x != 0)\n+    abort ();\n+}\n+\n+static int __attribute__((regparm(1), noinline))\n+foo(int x)\n+{\n+  x = 0;\n+  __asm__ __volatile__(\"call bar\" : \"=a\"(x) : \"a\"(x));\n+}\n+\n+int main()\n+{\n+  foo(1);\n+  return 0;\n+}"}]}