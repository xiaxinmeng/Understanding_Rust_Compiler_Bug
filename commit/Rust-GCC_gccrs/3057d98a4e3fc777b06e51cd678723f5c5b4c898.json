{"sha": "3057d98a4e3fc777b06e51cd678723f5c5b4c898", "node_id": "C_kwDOANBUbNoAKDMwNTdkOThhNGUzZmM3NzdiMDZlNTFjZDY3ODcyM2Y1YzViNGM4OTg", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-13T11:34:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-13T11:34:46Z"}, "message": "Merge #728\n\n728: Remove `AST::BlockExpr` lambda and add `get_statements` r=philberty a=wan-nyan-wan\n\nThis PR Fixes #724.\r\n\r\nThis patch removes lambda iterators in `AST::BlockExpr` and replace these with `get_statements`. These lambda iterators need to be removed they make working with the IR's more complex for static analysis. \n\nCo-authored-by: wan-nyan-wan <distributed.system.love@gmail.com>", "tree": {"sha": "cce411c133aa2df69d7083d4cf68edeb144bc9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cce411c133aa2df69d7083d4cf68edeb144bc9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3057d98a4e3fc777b06e51cd678723f5c5b4c898", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhZsRWCRBK7hj4Ov3rIwAATFQIAJSAyxbd0sp5ahAToqUvknqC\n3ZKng8zcv1S/5UO1vksqPDsL38hDBJdOi+h0DEcxoeLM3srxJSnBbQ7YsY0zchIF\nrK0XIZzTknHc3ZoJ5dHoSI15p/48ZCVJQnZo7R1yh6YAXz9l+1imC7eabvchalh8\nCNS927Z/XX0wAeSw/4yn8+RK9nQKYQ1XTo4HLevK2A2o3LxGYEMcVkd1oO+Rtan2\nmlbNfTQJlKqlR/LN1nPWWTxvpdIMvKJS/oub9DevrIoAxI3PdQ3uNTMgn+xsVV2w\n0fk8BUacaQ6VxH1cR9gbHUYdKkfqBLwznRh0v2hv6d2njZqq9c+MCNKFYlk2Nic=\n=FWy4\n-----END PGP SIGNATURE-----\n", "payload": "tree cce411c133aa2df69d7083d4cf68edeb144bc9f5\nparent 7a341772dcf51445af08071eeb0ed0ea93cd60a1\nparent 61db846ac9773bb2c5aecbab1ba10282869e3e9f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1634124886 +0000\ncommitter GitHub <noreply@github.com> 1634124886 +0000\n\nMerge #728\n\n728: Remove `AST::BlockExpr` lambda and add `get_statements` r=philberty a=wan-nyan-wan\n\nThis PR Fixes #724.\r\n\r\nThis patch removes lambda iterators in `AST::BlockExpr` and replace these with `get_statements`. These lambda iterators need to be removed they make working with the IR's more complex for static analysis. \n\nCo-authored-by: wan-nyan-wan <distributed.system.love@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3057d98a4e3fc777b06e51cd678723f5c5b4c898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3057d98a4e3fc777b06e51cd678723f5c5b4c898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3057d98a4e3fc777b06e51cd678723f5c5b4c898/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a341772dcf51445af08071eeb0ed0ea93cd60a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a341772dcf51445af08071eeb0ed0ea93cd60a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a341772dcf51445af08071eeb0ed0ea93cd60a1"}, {"sha": "61db846ac9773bb2c5aecbab1ba10282869e3e9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61db846ac9773bb2c5aecbab1ba10282869e3e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61db846ac9773bb2c5aecbab1ba10282869e3e9f"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "5cbc8de112e30bc7d580e38c2aa3608fac4e1592", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3057d98a4e3fc777b06e51cd678723f5c5b4c898/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3057d98a4e3fc777b06e51cd678723f5c5b4c898/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=3057d98a4e3fc777b06e51cd678723f5c5b4c898", "patch": "@@ -2438,15 +2438,6 @@ class BlockExpr : public ExprWithBlock\n   void mark_for_strip () override { marked_for_strip = true; }\n   bool is_marked_for_strip () const override { return marked_for_strip; }\n \n-  void iterate_stmts (std::function<bool (Stmt *)> cb)\n-  {\n-    for (auto it = statements.begin (); it != statements.end (); it++)\n-      {\n-\tif (!cb (it->get ()))\n-\t  return;\n-      }\n-  }\n-\n   size_t num_statements () const { return statements.size (); }\n \n   // TODO: this mutable getter seems really dodgy. Think up better way."}, {"sha": "3a675b7cef995e861a905a48f839ee0322996283", "filename": "gcc/rust/hir/rust-ast-lower.cc", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3057d98a4e3fc777b06e51cd678723f5c5b4c898/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3057d98a4e3fc777b06e51cd678723f5c5b4c898/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower.cc?ref=3057d98a4e3fc777b06e51cd678723f5c5b4c898", "patch": "@@ -64,16 +64,17 @@ ASTLoweringBlock::visit (AST::BlockExpr &expr)\n {\n   std::vector<std::unique_ptr<HIR::Stmt> > block_stmts;\n   bool block_did_terminate = false;\n-  expr.iterate_stmts ([&] (AST::Stmt *s) mutable -> bool {\n-    if (block_did_terminate)\n-      rust_warning_at (s->get_locus (), 0, \"unreachable statement\");\n-\n-    bool terminated = false;\n-    auto translated_stmt = ASTLoweringStmt::translate (s, &terminated);\n-    block_stmts.push_back (std::unique_ptr<HIR::Stmt> (translated_stmt));\n-    block_did_terminate |= terminated;\n-    return true;\n-  });\n+\n+  for (auto &s : expr.get_statements ())\n+    {\n+      if (block_did_terminate)\n+\trust_warning_at (s->get_locus (), 0, \"unreachable statement\");\n+\n+      bool terminated = false;\n+      auto translated_stmt = ASTLoweringStmt::translate (s.get (), &terminated);\n+      block_stmts.push_back (std::unique_ptr<HIR::Stmt> (translated_stmt));\n+      block_did_terminate |= terminated;\n+    }\n \n   if (expr.has_tail_expr () && block_did_terminate)\n     {"}, {"sha": "b2fe331bffaea3f4870506537ceb47a75ce717a9", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3057d98a4e3fc777b06e51cd678723f5c5b4c898/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3057d98a4e3fc777b06e51cd678723f5c5b4c898/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=3057d98a4e3fc777b06e51cd678723f5c5b4c898", "patch": "@@ -348,10 +348,8 @@ ResolveExpr::visit (AST::BlockExpr &expr)\n   resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n   resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n \n-  expr.iterate_stmts ([&] (AST::Stmt *s) mutable -> bool {\n-    ResolveStmt::go (s, s->get_node_id ());\n-    return true;\n-  });\n+  for (auto &s : expr.get_statements ())\n+    ResolveStmt::go (s.get (), s->get_node_id ());\n \n   if (expr.has_tail_expr ())\n     ResolveExpr::go (expr.get_tail_expr ().get (), expr.get_node_id ());"}]}