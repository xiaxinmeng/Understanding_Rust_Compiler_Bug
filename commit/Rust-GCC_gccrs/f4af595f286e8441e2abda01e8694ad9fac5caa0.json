{"sha": "f4af595f286e8441e2abda01e8694ad9fac5caa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhZjU5NWYyODZlODQ0MWUyYWJkYTAxZTg2OTRhZDlmYWM1Y2FhMA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-11T11:39:14Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-11T11:39:14Z"}, "message": "gcc/\n        * common/config/i386/i386-common.c\n\t(OPTION_MASK_ISA_AVX512VL_SET): Define.\n\t(OPTION_MASK_ISA_AVX512F_UNSET): Update.\n\t(ix86_handle_option): Handle OPT_mavx512vl.\n\t* config/i386/cpuid.h (bit_AVX512VL): Define.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect avx512vl,\n\tset -mavx512vl accordingly.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n\tOPTION_MASK_ISA_AVX512VL.\n\t* config/i386/i386.c (ix86_target_string): Handle -mavx512vl.\n\t(ix86_option_override_internal): Define PTA_AVX512VL, handle\n\tPTA_AVX512VL and OPTION_MASK_ISA_AVX512VL.\n\t(ix86_valid_target_attribute_inner_p): Handle OPT_mavx512vl.\n\t* config/i386/i386.h (TARGET_AVX512VL): Define.\n\t(TARGET_AVX512VL_P(x)): Ditto.\n\t* config/i386/i386.opt: Add mavx512vl.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r213813", "tree": {"sha": "5d0ce62f244a584c94bc95066634abf499bc7594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d0ce62f244a584c94bc95066634abf499bc7594"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4af595f286e8441e2abda01e8694ad9fac5caa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4af595f286e8441e2abda01e8694ad9fac5caa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4af595f286e8441e2abda01e8694ad9fac5caa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4af595f286e8441e2abda01e8694ad9fac5caa0/comments", "author": null, "committer": null, "parents": [{"sha": "d4759fc61be363dd5a4cf807298a315ce1e36c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4759fc61be363dd5a4cf807298a315ce1e36c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4759fc61be363dd5a4cf807298a315ce1e36c40"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "56089df9fd7e84b72679116e4a1cd9e9999980f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -1,3 +1,29 @@\n+2014-08-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+        * common/config/i386/i386-common.c\n+\t(OPTION_MASK_ISA_AVX512VL_SET): Define.\n+\t(OPTION_MASK_ISA_AVX512F_UNSET): Update.\n+\t(ix86_handle_option): Handle OPT_mavx512vl.\n+\t* config/i386/cpuid.h (bit_AVX512VL): Define.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect avx512vl,\n+\tset -mavx512vl accordingly.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n+\tOPTION_MASK_ISA_AVX512VL.\n+\t* config/i386/i386.c (ix86_target_string): Handle -mavx512vl.\n+\t(ix86_option_override_internal): Define PTA_AVX512VL, handle\n+\tPTA_AVX512VL and OPTION_MASK_ISA_AVX512VL.\n+\t(ix86_valid_target_attribute_inner_p): Handle OPT_mavx512vl.\n+\t* config/i386/i386.h (TARGET_AVX512VL): Define.\n+\t(TARGET_AVX512VL_P(x)): Ditto.\n+\t* config/i386/i386.opt: Add mavx512vl.\n+\n 2014-08-11  Felix Yang  <fei.yang0953@gmail.com>\n \n \tPR tree-optimization/62073"}, {"sha": "da47e644b43d055e9b9855428f6df31b16628e9a", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -69,6 +69,8 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512BW_SET \\\n   (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512F_SET)\n+#define OPTION_MASK_ISA_AVX512VL_SET \\\n+  (OPTION_MASK_ISA_AVX512VL | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_SET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_SET OPTION_MASK_ISA_RDSEED\n@@ -157,12 +159,14 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_AVX512F_UNSET \\\n   (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_AVX512CD_UNSET \\\n    | OPTION_MASK_ISA_AVX512PF_UNSET | OPTION_MASK_ISA_AVX512ER_UNSET \\\n-   | OPTION_MASK_ISA_AVX512DQ_UNSET | OPTION_MASK_ISA_AVX512BW_UNSET)\n+   | OPTION_MASK_ISA_AVX512DQ_UNSET | OPTION_MASK_ISA_AVX512BW_UNSET \\\n+   | OPTION_MASK_ISA_AVX512VL_UNSET)\n #define OPTION_MASK_ISA_AVX512CD_UNSET OPTION_MASK_ISA_AVX512CD\n #define OPTION_MASK_ISA_AVX512PF_UNSET OPTION_MASK_ISA_AVX512PF\n #define OPTION_MASK_ISA_AVX512ER_UNSET OPTION_MASK_ISA_AVX512ER\n #define OPTION_MASK_ISA_AVX512DQ_UNSET OPTION_MASK_ISA_AVX512DQ\n #define OPTION_MASK_ISA_AVX512BW_UNSET OPTION_MASK_ISA_AVX512BW\n+#define OPTION_MASK_ISA_AVX512VL_UNSET OPTION_MASK_ISA_AVX512VL\n #define OPTION_MASK_ISA_RTM_UNSET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_UNSET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_UNSET OPTION_MASK_ISA_RDSEED\n@@ -426,6 +430,19 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mavx512vl:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VL_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512VL_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AVX512VL_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512VL_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mfma:\n       if (value)\n \t{"}, {"sha": "a191bd4fd8df1185c5eef1503f3213bc85e7943b", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -82,6 +82,7 @@\n #define bit_AVX512CD\t(1 << 28)\n #define bit_SHA\t\t(1 << 29)\n #define bit_AVX512BW\t(1 << 30)\n+#define bit_AVX512VL\t(1 << 31)\n \n /* %ecx */\n #define bit_PREFETCHWT1\t  (1 << 0)"}, {"sha": "af3088e5b4b217a84de804efea9c7bcc862184f4", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -411,7 +411,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_avx512er = 0, has_avx512pf = 0, has_avx512cd = 0;\n   unsigned int has_avx512f = 0, has_sha = 0, has_prefetchwt1 = 0;\n   unsigned int has_clflushopt = 0, has_xsavec = 0, has_xsaves = 0;\n-  unsigned int has_avx512dq = 0, has_avx512bw = 0;\n+  unsigned int has_avx512dq = 0, has_avx512bw = 0, has_avx512vl = 0;\n \n   bool arch;\n \n@@ -492,6 +492,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_clflushopt = ebx & bit_CLFLUSHOPT;\n       has_avx512dq = ebx & bit_AVX512DQ;\n       has_avx512bw = ebx & bit_AVX512BW;\n+      has_avx512vl = ebx & bit_AVX512VL;\n \n       has_prefetchwt1 = ecx & bit_PREFETCHWT1;\n     }\n@@ -906,6 +907,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *xsaves = has_xsaves ? \" -mxsaves\" : \" -mno-xsaves\";\n       const char *avx512dq = has_avx512dq ? \" -mavx512dq\" : \" -mno-avx512dq\";\n       const char *avx512bw = has_avx512bw ? \" -mavx512bw\" : \" -mno-avx512bw\";\n+      const char *avx512vl = has_avx512vl ? \" -mavx512vl\" : \" -mno-avx512vl\";\n \n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n@@ -914,7 +916,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\thle, rdrnd, f16c, fsgsbase, rdseed, prfchw, adx,\n \t\t\tfxsr, xsave, xsaveopt, avx512f, avx512er,\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n-\t\t\txsavec, xsaves, avx512dq, avx512bw, NULL);\n+\t\t\txsavec, xsaves, avx512dq, avx512bw, avx512vl,\n+\t\t\tNULL);\n     }\n \n done:"}, {"sha": "a3858edb2407c3941c8875ce28ffff141395393c", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -349,6 +349,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX512DQ__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512BW)\n     def_or_undef (parse_in, \"__AVX512BW__\");\n+  if (isa_flag & OPTION_MASK_ISA_AVX512VL)\n+    def_or_undef (parse_in, \"__AVX512VL__\");\n   if (isa_flag & OPTION_MASK_ISA_FMA)\n     def_or_undef (parse_in, \"__FMA__\");\n   if (isa_flag & OPTION_MASK_ISA_RTM)"}, {"sha": "f12e1c4fbccca02ca4a88bbe215f05e88e11b4b5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -2594,6 +2594,7 @@ ix86_target_string (HOST_WIDE_INT isa, int flags, const char *arch,\n     { \"-mavx512pf\",\tOPTION_MASK_ISA_AVX512PF },\n     { \"-mavx512dq\",\tOPTION_MASK_ISA_AVX512DQ },\n     { \"-mavx512bw\",\tOPTION_MASK_ISA_AVX512BW },\n+    { \"-mavx512vl\",\tOPTION_MASK_ISA_AVX512VL },\n     { \"-msse4a\",\tOPTION_MASK_ISA_SSE4A },\n     { \"-msse4.2\",\tOPTION_MASK_ISA_SSE4_2 },\n     { \"-msse4.1\",\tOPTION_MASK_ISA_SSE4_1 },\n@@ -3126,6 +3127,7 @@ ix86_option_override_internal (bool main_args_p,\n #define PTA_XSAVES\t\t(HOST_WIDE_INT_1 << 49)\n #define PTA_AVX512DQ\t\t(HOST_WIDE_INT_1 << 50)\n #define PTA_AVX512BW\t\t(HOST_WIDE_INT_1 << 51)\n+#define PTA_AVX512VL\t\t(HOST_WIDE_INT_1 << 52)\n \n #define PTA_CORE2 \\\n   (PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3 \\\n@@ -3699,6 +3701,9 @@ ix86_option_override_internal (bool main_args_p,\n \tif (processor_alias_table[i].flags & PTA_AVX512BW\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512BW))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BW;\n+\tif (processor_alias_table[i].flags & PTA_AVX512VL\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512VL))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VL;\n \tif (processor_alias_table[i].flags & (PTA_PREFETCH_SSE | PTA_SSE))\n \t  x86_prefetch_sse = true;\n \n@@ -4557,6 +4562,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"avx512cd\",\tOPT_mavx512cd),\n     IX86_ATTR_ISA (\"avx512dq\",\tOPT_mavx512dq),\n     IX86_ATTR_ISA (\"avx512bw\",\tOPT_mavx512bw),\n+    IX86_ATTR_ISA (\"avx512vl\",\tOPT_mavx512vl),\n     IX86_ATTR_ISA (\"mmx\",\tOPT_mmmx),\n     IX86_ATTR_ISA (\"pclmul\",\tOPT_mpclmul),\n     IX86_ATTR_ISA (\"popcnt\",\tOPT_mpopcnt),"}, {"sha": "8677e6b8d8ef20fd4052087681d417ac84f66580", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -75,6 +75,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_AVX512DQ_P(x)\tTARGET_ISA_AVX512DQ_P(x)\n #define TARGET_AVX512BW\tTARGET_ISA_AVX512BW\n #define TARGET_AVX512BW_P(x)\tTARGET_ISA_AVX512BW_P(x)\n+#define TARGET_AVX512VL\tTARGET_ISA_AVX512VL\n+#define TARGET_AVX512VL_P(x)\tTARGET_ISA_AVX512VL_P(x)\n #define TARGET_FMA\tTARGET_ISA_FMA\n #define TARGET_FMA_P(x)\tTARGET_ISA_FMA_P(x)\n #define TARGET_SSE4A\tTARGET_ISA_SSE4A"}, {"sha": "9208b7660307dbeb5b04ca824cbda6fd93b6a0f7", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4af595f286e8441e2abda01e8694ad9fac5caa0/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=f4af595f286e8441e2abda01e8694ad9fac5caa0", "patch": "@@ -649,6 +649,10 @@ mavx512bw\n Target Report Mask(ISA_AVX512BW) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512BW built-in functions and code generation\n \n+mavx512vl\n+Target Report Mask(ISA_AVX512VL) Var(ix86_isa_flags) Save\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VL built-in functions and code generation\n+\n mfma\n Target Report Mask(ISA_FMA) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation"}]}