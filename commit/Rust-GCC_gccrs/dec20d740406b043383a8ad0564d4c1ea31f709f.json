{"sha": "dec20d740406b043383a8ad0564d4c1ea31f709f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjMjBkNzQwNDA2YjA0MzM4M2E4YWQwNTY0ZDRjMWVhMzFmNzA5Zg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2004-12-09T01:04:40Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-12-09T01:04:40Z"}, "message": "mips.c (mips_scalar_mode_supported_p): Rewrite to avoid call to default function.\n\n2004-12-08  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/mips.c (mips_scalar_mode_supported_p): Rewrite\n\tto avoid call to default function.\n\nFrom-SVN: r91925", "tree": {"sha": "50e5e1e0cdd515ed7e09e4dd0f3c2543d7e844fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50e5e1e0cdd515ed7e09e4dd0f3c2543d7e844fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dec20d740406b043383a8ad0564d4c1ea31f709f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec20d740406b043383a8ad0564d4c1ea31f709f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec20d740406b043383a8ad0564d4c1ea31f709f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec20d740406b043383a8ad0564d4c1ea31f709f/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e6b30d091dd1527367190a74afdacddcf0e4f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6b30d091dd1527367190a74afdacddcf0e4f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6b30d091dd1527367190a74afdacddcf0e4f9e"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "f9fa30f99a57a10f2394e55e83d8eed8bcdc717e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec20d740406b043383a8ad0564d4c1ea31f709f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec20d740406b043383a8ad0564d4c1ea31f709f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dec20d740406b043383a8ad0564d4c1ea31f709f", "patch": "@@ -1,3 +1,8 @@\n+2004-12-08  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_scalar_mode_supported_p): Rewrite\n+\tto avoid call to default function.\n+\n 2004-12-08  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR 17982"}, {"sha": "d3b5faa53c216fff0a7d4347121643553f8bc7b2", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec20d740406b043383a8ad0564d4c1ea31f709f/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec20d740406b043383a8ad0564d4c1ea31f709f/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=dec20d740406b043383a8ad0564d4c1ea31f709f", "patch": "@@ -7087,19 +7087,34 @@ mips_valid_pointer_mode (enum machine_mode mode)\n \n    then compiled with -mabi=64 and -mint64. We have no\n    32-bit type at that point and so the default case\n-   always fails.  Instead of special casing everything\n-   it's easier to accept SImode in this function and\n-   then punt to the default which will work for all\n-   of the cases where we deal with TARGET_64BIT, etc.  */\n+   always fails.  */\n+\n static bool\n mips_scalar_mode_supported_p (enum machine_mode mode)\n {\n-  /* We can always handle SImode.  */\n-  if (mode == SImode)\n-    return true;\n-  else\n-    return default_scalar_mode_supported_p (mode);\n+  switch (mode)\n+    {\n+    case QImode:\n+    case HImode:\n+    case SImode:\n+    case DImode:\n+      return true;\n+\n+      /* Handled via optabs.c.  */\n+    case TImode:\n+      return TARGET_64BIT;\n \n+    case SFmode:\n+    case DFmode:\n+      return true;\n+\n+      /* LONG_DOUBLE_TYPE_SIZE is 128 for TARGET_NEWABI only.  */\n+    case TFmode:\n+      return TARGET_NEWABI;\n+\n+    default:\n+      return false;\n+    }\n }\n \n "}]}