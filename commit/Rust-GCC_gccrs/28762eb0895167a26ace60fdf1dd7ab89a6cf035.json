{"sha": "28762eb0895167a26ace60fdf1dd7ab89a6cf035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3NjJlYjA4OTUxNjdhMjZhY2U2MGZkZjFkZDdhYjg5YTZjZjAzNQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-11-10T18:02:18Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-11-10T18:02:18Z"}, "message": "re PR fortran/33592 (FAIL: gfortran.dg/array_constructor_11.f90  -O1  execution test)\n\n\tPR fortran/33592\n\t* trans.c (gfc_call_realloc): Fix the logic and rename variables.\n\nFrom-SVN: r130072", "tree": {"sha": "5bf75dff63aadfa87b69ef159faf13cff8cc1bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf75dff63aadfa87b69ef159faf13cff8cc1bc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28762eb0895167a26ace60fdf1dd7ab89a6cf035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28762eb0895167a26ace60fdf1dd7ab89a6cf035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28762eb0895167a26ace60fdf1dd7ab89a6cf035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28762eb0895167a26ace60fdf1dd7ab89a6cf035/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2272b24c41fcf6948c636946d8caf17d752b4a99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2272b24c41fcf6948c636946d8caf17d752b4a99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2272b24c41fcf6948c636946d8caf17d752b4a99"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "8e28ef5b4831e1f758d2fd7546516dced6834bd6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28762eb0895167a26ace60fdf1dd7ab89a6cf035/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28762eb0895167a26ace60fdf1dd7ab89a6cf035/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=28762eb0895167a26ace60fdf1dd7ab89a6cf035", "patch": "@@ -1,3 +1,8 @@\n+2007-11-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33592\n+\t* trans.c (gfc_call_realloc): Fix the logic and rename variables.\n+\n 2007-11-08  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33739"}, {"sha": "1232272762cb2e412dec36495e97660cab048211", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28762eb0895167a26ace60fdf1dd7ab89a6cf035/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28762eb0895167a26ace60fdf1dd7ab89a6cf035/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=28762eb0895167a26ace60fdf1dd7ab89a6cf035", "patch": "@@ -829,19 +829,19 @@ internal_realloc (void *mem, size_t size)\n {\n   if (size < 0)\n     runtime_error (\"Attempt to allocate a negative amount of memory.\");\n-  mem = realloc (mem, size);\n-  if (!mem && size != 0)\n+  res = realloc (mem, size);\n+  if (!res && size != 0)\n     _gfortran_os_error (\"Out of memory\");\n \n   if (size == 0)\n     return NULL;\n \n-  return mem;\n+  return res;\n }  */\n tree\n gfc_call_realloc (stmtblock_t * block, tree mem, tree size)\n {\n-  tree msg, res, negative, zero, null_result, tmp;\n+  tree msg, res, negative, nonzero, zero, null_result, tmp;\n   tree type = TREE_TYPE (mem);\n \n   size = gfc_evaluate_now (size, block);\n@@ -868,10 +868,10 @@ gfc_call_realloc (stmtblock_t * block, tree mem, tree size)\n   gfc_add_modify_expr (block, res, fold_convert (type, tmp));\n   null_result = fold_build2 (EQ_EXPR, boolean_type_node, res,\n \t\t\t     build_int_cst (pvoid_type_node, 0));\n-  zero = fold_build2 (EQ_EXPR, boolean_type_node, size,\n-\t\t      build_int_cst (size_type_node, 0));\n+  nonzero = fold_build2 (NE_EXPR, boolean_type_node, size,\n+\t\t\t build_int_cst (size_type_node, 0));\n   null_result = fold_build2 (TRUTH_AND_EXPR, boolean_type_node, null_result,\n-\t\t\t     zero);\n+\t\t\t     nonzero);\n   msg = gfc_build_addr_expr (pchar_type_node,\n \t\t\t     gfc_build_cstring_const (\"Out of memory\"));\n   tmp = fold_build3 (COND_EXPR, void_type_node, null_result,\n@@ -881,6 +881,7 @@ gfc_call_realloc (stmtblock_t * block, tree mem, tree size)\n \n   /* if (size == 0) then the result is NULL.  */\n   tmp = fold_build2 (MODIFY_EXPR, type, res, build_int_cst (type, 0));\n+  zero = fold_build1 (TRUTH_NOT_EXPR, boolean_type_node, nonzero);\n   tmp = fold_build3 (COND_EXPR, void_type_node, zero, tmp,\n \t\t     build_empty_stmt ());\n   gfc_add_expr_to_block (block, tmp);"}]}