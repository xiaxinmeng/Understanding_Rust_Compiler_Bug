{"sha": "442eef68d2987242045a47371716cc38ddf8ec1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyZWVmNjhkMjk4NzI0MjA0NWE0NzM3MTcxNmNjMzhkZGY4ZWMxYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-09T15:15:46Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-09T15:15:46Z"}, "message": "* tree.h (tree_fits_shwi_p, tree_fits_uhwi_p): Unconditionally pure.\n\nFrom-SVN: r247800", "tree": {"sha": "b7e905c28478bcd07caa2fd65cdfd47e1246db7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e905c28478bcd07caa2fd65cdfd47e1246db7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442eef68d2987242045a47371716cc38ddf8ec1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442eef68d2987242045a47371716cc38ddf8ec1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442eef68d2987242045a47371716cc38ddf8ec1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442eef68d2987242045a47371716cc38ddf8ec1b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e91c2cac3486cc7c09c07c861d7938055598d211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91c2cac3486cc7c09c07c861d7938055598d211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e91c2cac3486cc7c09c07c861d7938055598d211"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "8a0544f5d6ea55eabd141d2d78141a7afb0726cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442eef68d2987242045a47371716cc38ddf8ec1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442eef68d2987242045a47371716cc38ddf8ec1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=442eef68d2987242045a47371716cc38ddf8ec1b", "patch": "@@ -1,5 +1,7 @@\n 2017-05-09  Nathan Sidwell  <nathan@acm.org>\n \n+\t* tree.h (tree_fits_shwi_p, tree_fits_uhwi_p): Unconditionally pure.\n+\n \t* ipa-devirt.c (default_hash_traits<type_pair>): Skip struct-scope\n \ttypedefs.\n "}, {"sha": "c6e883c489fc94b09b0e5c1f9f86a5dcfe05c6a8", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442eef68d2987242045a47371716cc38ddf8ec1b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442eef68d2987242045a47371716cc38ddf8ec1b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=442eef68d2987242045a47371716cc38ddf8ec1b", "patch": "@@ -4109,15 +4109,9 @@ extern int attribute_list_contained (const_tree, const_tree);\n extern int tree_int_cst_equal (const_tree, const_tree);\n \n extern bool tree_fits_shwi_p (const_tree)\n-#ifndef ENABLE_TREE_CHECKING\n-  ATTRIBUTE_PURE /* tree_fits_shwi_p is pure only when checking is disabled.  */\n-#endif\n-  ;\n+  ATTRIBUTE_PURE;\n extern bool tree_fits_uhwi_p (const_tree)\n-#ifndef ENABLE_TREE_CHECKING\n-  ATTRIBUTE_PURE /* tree_fits_uhwi_p is pure only when checking is disabled.  */\n-#endif\n-  ;\n+  ATTRIBUTE_PURE;\n extern HOST_WIDE_INT tree_to_shwi (const_tree);\n extern unsigned HOST_WIDE_INT tree_to_uhwi (const_tree);\n #if !defined ENABLE_TREE_CHECKING && (GCC_VERSION >= 4003)"}]}