{"sha": "a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkwZjliYjExMmViYzhlMjQzNDMyZWE3NzZhMzc0YzNhZGM4YjNjNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-06-01T20:28:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-01T20:28:38Z"}, "message": "re PR c++/15142 (Internal compiler error when passing a string where a char* is expecteted in a throw statement)\n\n        PR c++/15142\n        * call.c (call_builtin_trap): Remove type parm.\n        (convert_arg_to_ellipsis): Change a non-POD argument to integer type.\n        (build_x_va_arg): Dereference a null pointer for a non-POD argument.\n\nFrom-SVN: r82556", "tree": {"sha": "eca409bda5926b42008edec068db781250b76ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca409bda5926b42008edec068db781250b76ccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95c73b23dc40a6ba5a6f130d3f981aa36a7de1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c73b23dc40a6ba5a6f130d3f981aa36a7de1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95c73b23dc40a6ba5a6f130d3f981aa36a7de1e5"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "c5ea71e5cd6afe44c16f2a99f703ba20d1aadaa5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "patch": "@@ -1,3 +1,10 @@\n+2004-06-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/15142\n+\t* call.c (call_builtin_trap): Remove type parm.\n+\t(convert_arg_to_ellipsis): Change a non-POD argument to integer type.\n+\t(build_x_va_arg): Dereference a null pointer for a non-POD argument.\n+\n 2004-06-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/13092"}, {"sha": "d1e8298164beab2102e255d5262c2326d1970e88", "filename": "gcc/cp/call.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "patch": "@@ -182,7 +182,7 @@ static conversion *direct_reference_binding (tree, conversion *);\n static bool promoted_arithmetic_type_p (tree);\n static conversion *conditional_conversion (tree, tree);\n static char *name_as_c_string (tree, tree, bool *);\n-static tree call_builtin_trap (tree);\n+static tree call_builtin_trap (void);\n static tree prep_operand (tree);\n static void add_candidates (tree, tree, tree, bool, tree, tree,\n \t\t\t    int, struct z_candidate **);\n@@ -4325,18 +4325,15 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t\t      LOOKUP_NORMAL|LOOKUP_NO_CONVERSION);\n }\n \n-/* Build a call to __builtin_trap which can be used as an expression of\n-   type TYPE.  */\n+/* Build a call to __builtin_trap.  */\n \n static tree\n-call_builtin_trap (tree type)\n+call_builtin_trap (void)\n {\n   tree fn = implicit_built_in_decls[BUILT_IN_TRAP];\n \n   my_friendly_assert (fn != NULL, 20030927);\n   fn = build_call (fn, NULL_TREE);\n-  fn = build (COMPOUND_EXPR, type, fn, error_mark_node);\n-  fn = force_target_expr (type, fn);\n   return fn;\n }\n \n@@ -4379,7 +4376,9 @@ convert_arg_to_ellipsis (tree arg)\n       if (!skip_evaluation)\n \twarning (\"cannot pass objects of non-POD type `%#T' through `...'; \"\n \t         \"call will abort at runtime\", TREE_TYPE (arg));\n-      arg = call_builtin_trap (TREE_TYPE (arg));\n+      arg = call_builtin_trap ();\n+      arg = build (COMPOUND_EXPR, integer_type_node, arg,\n+\t\t   integer_zero_node);\n     }\n \n   return arg;\n@@ -4404,7 +4403,11 @@ build_x_va_arg (tree expr, tree type)\n       warning (\"cannot receive objects of non-POD type `%#T' through `...'; \\\n call will abort at runtime\",\n \t       type);\n-      return call_builtin_trap (type);\n+      expr = convert (build_pointer_type (type), null_node);\n+      expr = build (COMPOUND_EXPR, TREE_TYPE (expr),\n+\t\t    call_builtin_trap (), expr);\n+      expr = build_indirect_ref (expr, NULL);\n+      return expr;\n     }\n   \n   return build_va_arg (expr, type);"}, {"sha": "bdd3cd2311ba1a2a8f8096b306bc2beb12c932e8", "filename": "gcc/testsuite/g++.dg/overload/ellipsis1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fellipsis1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90f9bb112ebc8e243432ea776a374c3adc8b3c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fellipsis1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fellipsis1.C?ref=a90f9bb112ebc8e243432ea776a374c3adc8b3c7", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/15142\n+// Bug: We were aborting after giving a warning about passing a non-POD.\n+\n+// Suppress the warning about undefined behavior.\n+// { dg-options \"-w\" }\n+\n+struct B { \n+    B() throw() { } \n+    B(const B&) throw() { } \n+}; \n+ \n+struct X { \n+    B a; \n+    X& operator=(const X&); \n+}; \n+ \n+struct S { S(...); }; \n+ \n+void SillyFunc() { \n+  throw S(X()); \n+} "}]}