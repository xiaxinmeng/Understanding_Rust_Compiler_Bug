{"sha": "8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4YTVmN2M4ZTVjMGUwNWQzODI3MmYwOWJlZTFlYzQ0MmEzZDJjYw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2004-12-31T12:34:18Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2004-12-31T12:34:18Z"}, "message": "* testsuite/lib/libjava.exp (libjava_find_gij): Handle multilibs.\n\nFrom-SVN: r92758", "tree": {"sha": "2cd1a669893d1147dd4a674085c36e9c0c8af9c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd1a669893d1147dd4a674085c36e9c0c8af9c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc/comments", "author": null, "committer": null, "parents": [{"sha": "223947a954a6e1faebff4cbac7f19c7b6e4fa824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223947a954a6e1faebff4cbac7f19c7b6e4fa824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223947a954a6e1faebff4cbac7f19c7b6e4fa824"}], "stats": {"total": 616, "additions": 310, "deletions": 306}, "files": [{"sha": "0ea15994a068e09de1a93a6d77a3921b2d82dc0e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 307, "deletions": 304, "changes": 611, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc", "patch": "@@ -1,3 +1,7 @@\n+2004-12-31  Andreas Jaeger  <aj@suse.de>\n+\n+\t* testsuite/lib/libjava.exp (libjava_find_gij): Handle multilibs.\n+\n 2004-12-20  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natClassLoader.cc (_Jv_RegisterClassHookDefault):\n@@ -42,7 +46,7 @@\n \n \tPR libgcj/7305\n \t* configure.ac: Use TL_AC_GXX_INCLUDE_DIR.\n-\t* Makefile.am (install-data-local): Install headers into \n+\t* Makefile.am (install-data-local): Install headers into\n \t$(gxx_include_dir) rather than $(includedir).\n \t(AM_MAKEFLAGS): Pass down gxx_include_dir.\n \t* gcj/Makefile.am (gcjdir): Set to $(gxx_include_dir)/gcj.\n@@ -74,7 +78,7 @@\n 2004-12-01  Bryce McKinlay  <mckinlay@redhat.com>\n \n \tPR libgcj/18699\n-\t* testsuite/libjava.lang/PR18699.java, \n+\t* testsuite/libjava.lang/PR18699.java,\n \ttestsuite/libjava.lang/PR18699.out: New test.\n \n 2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n@@ -350,7 +354,7 @@\n \n 2004-11-30  Graydon Hoare  <graydon@redhat.com>\n \n-\t* javax/swing/plaf/basic/BasicTextUI.java: \n+\t* javax/swing/plaf/basic/BasicTextUI.java:\n \tListen to focus events, indicate focus via caret.\n \t* javax/swing/text/GapContent.java (getString): Return substring.\n \t* javax/swing/text/PlainDocument.java (reindex): New method.\n@@ -386,18 +390,18 @@\n \t(getComponentGraphics): Build new Graphics for each sub-paint.\n \t(getTransferHandler): New method.\n \t(setTransferHandler): New method.\n-\t* javax/swing/JDesktopPane.java \n+\t* javax/swing/JDesktopPane.java\n \t(setDragMode): Force LIVE_DRAG_MODE.\n \t* javax/swing/JMenuItem.java\n \t(menuSelectionChanged): Protect against null parent.\n \t* javax/swing/JTable.java (setDefaultRenderer): New method.\n \t* javax/swing/JTree.java: Get basic ctors and UI working.\n \t* javax/swing/JViewport.java (JViewport): Set scroll mode.\n-\t* javax/swing/RepaintManager.java \n+\t* javax/swing/RepaintManager.java\n \t(addDirtyRegion): Skip empty regions.\n \t* javax/swing/ScrollPaneLayout.java (minimumLayoutSize): Do not\n \tbound scrollpane minimum by central view minimum.\n-\t* javax/swing/ToolTipManager.java \n+\t* javax/swing/ToolTipManager.java\n \t(showTip): Guard against null component.\n \t* javax/swing/TransferHandler.java: Stub out.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n@@ -412,7 +416,7 @@\n \t* javax/swing/plaf/basic/BasicTextPaneUI.java: New file.\n \t* javax/swing/plaf/basic/BasicTextUI.java\n \t(modelChanged): Make resilient against nulls.\n-\t* javax/swing/plaf/basic/BasicTreeUI.java: \n+\t* javax/swing/plaf/basic/BasicTreeUI.java:\n \tAdd some simplistic config / painting functions.\n \t* javax/swing/plaf/basic/BasicViewportUI.java\n \t(paintSimple): Add new non-backingstore paint mode.\n@@ -547,7 +551,7 @@\n \t(init_dpi_conversion_factor): Correct prototype.\n \n 2004-11-30  Sven de Marothy  <sven@physto.se>\n-        \n+\n \t* java/awt/image/ConvolveOp.java: Added missing\n \tcopyright notice.\n \n@@ -662,7 +666,7 @@\n \n \t* java/awt/image/ColorModel.java (cloneColorModel): Fix line\n \twrap.  Use Boolean.valueOf.\n-\t\n+\n 2004-11-30  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n@@ -1430,7 +1434,7 @@\n \n 2004-11-30  Graydon Hoare  <graydon@redhat.com>\n \n-\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c \n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n \t(install_font_peer): Minor bug fixes to track cairo font semantics.\n \n 2004-11-30  Jerry Quinn  <jlquinn@optonline.net>\n@@ -1450,11 +1454,11 @@\n \t(gnu/java/awt/peer/gtk/GdkFontPeer.java)\n \t(gnu/java/awt/peer/ClasspathTextLayoutPeer.java): Add\n \t* Makefile.in: Regenerate.\n-\t* gnu/awt/xlib/XToolkit.java \n+\t* gnu/awt/xlib/XToolkit.java\n \t(getClasspathTextLayoutPeer): Add stub.\n-\t* gnu/java/awt/ClasspathToolkit.java \n+\t* gnu/java/awt/ClasspathToolkit.java\n \t(getClasspathTextLayoutPeer) Add.\n-\t* gnu/java/awt/peer/ClasspathFontPeer.java \n+\t* gnu/java/awt/peer/ClasspathFontPeer.java\n \t(copyStyleToAttrs)\n \t(copySizeToAttrs): Make public.\n \t* gnu/java/awt/peer/ClasspathTextLayoutPeer.java: New file.\n@@ -1463,7 +1467,7 @@\n \t* gnu/java/awt/peer/gtk/GdkFontMetrics.java: Rewrite.\n \t* gnu/java/awt/peer/gtk/GdkFontPeer.java: New file.\n \t* gnu/java/awt/peer/gtk/GdkGlyphVector.java: Adjust type names.\n-\t* gnu/java/awt/peer/gtk/GdkGraphics.java \n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n \t(getFontPeer): New function.\n \t(drawString): Pass font peer to native side.\n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n@@ -1494,7 +1498,7 @@\n \t(cairoDrawString)\n \t(getFontPeer): New functions.\n \t* gnu/java/awt/peer/gtk/GdkTextLayout.java: New file.\n-\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java \n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n \t(getFontMetrics): Get metrics via toolkit, to hit cache.\n \t* gnu/java/awt/peer/gtk/GtkTextAreaPeer.java: Use getFontMetrics.\n \t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java: Likewise.\n@@ -1508,9 +1512,9 @@\n \t(getFontPeer): Route through getClasspathFontPeer.\n \t* java/awt/Font.java (attrsToMap): Remove, adjust ctors.\n \t* java/awt/font/TextLayout.java: Implement in terms of peer.\n-\t* javax/swing/plaf/basic/BasicSliderUI.java \n+\t* javax/swing/plaf/basic/BasicSliderUI.java\n \t(paintThumb): Use polyline rather than polygon.\n-\t* javax/swing/plaf/basic/BasicGraphicsUtils.java: \n+\t* javax/swing/plaf/basic/BasicGraphicsUtils.java:\n \tUpdate comment but, alas, still do not switch to using TextLayouts.\n \t* javax/swing/text/Utilities.java (drawTabbedText):\n \tDraw text run-at-a-time, not char-at-a-time.\n@@ -1537,7 +1541,7 @@\n \t(getPeerFontMetrics)\n \t(cairoDrawGdkTextLayout)\n \t(cairoDrawGdkGlyphVector): New native methods.\n-\t(cairoDrawString): Rewrite, leaving layout-based version \n+\t(cairoDrawString): Rewrite, leaving layout-based version\n \tcommented out for the time being.\n \t* jni/gtk-peer/gtkpeer.h (graphics): Add fields for pango stuff.\n \n@@ -1576,7 +1580,7 @@\n \n \t* javax/swing/plaf/basic/BasicComboPopup.java:\n \tAdded javadocs for undocumented fields.\n-\t(show): scroll down to the selected item and \n+\t(show): scroll down to the selected item and\n \thighlight selected item.\n \t(startAutoScrolling): Implemented.\n \t(stopAutoScrolling): Implemented.\n@@ -1743,7 +1747,7 @@\n \t* java/awt/image/BandedSampleModel.java: Implement.\n \t* Makefile.am: Add java/awt/image/BandedSampleModel.java.\n \t* Makefile.in: Regenerated.\n-\t\n+\n 2004-11-30  Michael Koch  <konqueror@gmx.de>\n \n \t* java/awt/Window.java: Fixed whitespace difference with GNU\n@@ -1762,7 +1766,7 @@\n \n 2004-11-30  Andreas Tobler  <a.tobler@schweiz.ch>\n \n-\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c \n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n \t(init_dpi_conversion_factor): Apply the patch from main correctly.\n \t2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>\n \n@@ -1787,7 +1791,7 @@\n \t(NumberEditor): added serialization UID\n \t* javax/swing/text/html/HTML.java\n \t(UnknownTag): added serialization UID\n-\t\n+\n 2004-11-30  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* javax/swing/JInternalFrame.java\n@@ -1944,21 +1948,21 @@\n 2004-11-30  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/plaf/basic/BasicComboBoxUI.java:\n-\t(paintCurrentValue): Pass correct parameters to \n+\t(paintCurrentValue): Pass correct parameters to\n \tgetListCellRendererComponent().\n-\t(ListDataHandler.intervalRemoved): Implemented. \n+\t(ListDataHandler.intervalRemoved): Implemented.\n \t(PropertyChangeHandler.propertyChange): Handle changes in\n \tMODEL_CHANGED_PROPERTY of the JComboBox\n \t* javax/swing/plaf/basic/BasicComboPopup.java:\n-\t(BasicComboPopup): Moved code that configures popup to \n-\tconfigurePopup() and call it instead. \n+\t(BasicComboPopup): Moved code that configures popup to\n+\tconfigurePopup() and call it instead.\n \t(firePopupMenuWillBecomeVisible): Implemented.\n \t(firePopupMenuWillBecomeInvisible): Likewise.\n \t(firePopupMenuCanceled): Likewise.\n-\t(configureList): Set list's visibleRowCount same as \n+\t(configureList): Set list's visibleRowCount same as\n \tcomboBox's visibleRowCount.\n \t(configurePopup): Implemented.\n-\t(getPopupHeightForRowCount): Get item's from JComboBox's model and \n+\t(getPopupHeightForRowCount): Get item's from JComboBox's model and\n \tnot from model of the JList.\n \t(ListMouseMotionHandler.mouseMoved): Implemented.\n \t(PropertyChangeHandler.propertyChange): Handles change in the\n@@ -2285,11 +2289,11 @@\n \t(stateChanged): Only update the image and the track if\n \tthe values are not being adjusted.\n \t(updateChooser): Grab the new mouse point from the\n-\tspinner values. Update the image and track only if \n-\tthe values are not being adjusted. \n+\tspinner values. Update the image and track only if\n+\tthe values are not being adjusted.\n \t(getHSBValues): New method.\n \t* javax/swing/colorchooser/DefaultRGBChooserPanel.java:\n-\t(SliderHandler::stateChanged): Changed internalChange \n+\t(SliderHandler::stateChanged): Changed internalChange\n \tto updateChange. Set sliderChange.\n \t(SpinnerHandler::stateChanged): Ditto. Set spinnerChange.\n \t(spinnerChange): New variable.\n@@ -2416,7 +2420,7 @@\n \t(GdkGlyphVector_setChars): Replace assert() with if block when\n \tpango_itemize() returns null. PR AWT/17295.\n \t(GdkGlyphVector_allInkExtents): Likewise when vec->glyphitems is null.\n-\t\n+\n 2004-11-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* Makefile.am (gtk_c_source_files): Add\n@@ -2634,7 +2638,7 @@\n \t* configure.host: Define libgcj_ld_symbolic for Linux hosts.\n \t* Makefile.am (lib_*_la_LDFLAGS): Add LIBGCJ_LD_SYMBOLIC.\n \t* configure: Regenerate.\n-\t* Makefile.in: Regenerate.\t\n+\t* Makefile.in: Regenerate.\n \n 2004-11-15  Andrew Haley  <aph@redhat.com>\n \n@@ -2712,13 +2716,13 @@\n \n 2004-11-05  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* link.cc: Include VerifyError.h. \n+\t* link.cc: Include VerifyError.h.\n \t(_Jv_Linker::verify_type_assertions): New. Read and evaluate entries\n \tin the type assertion table.\n \t* include/execution.h (_Jv_CompiledEngine::do_verify): Use\n \tverify_type_assertions.\n \t* include/jvm.h (_Jv_Linker::verify_type_assertions): declare.\n-\t* java/lang/Class.h (JV_ASSERT_END_OF_TABLE, \n+\t* java/lang/Class.h (JV_ASSERT_END_OF_TABLE,\n \tJV_ASSERT_TYPES_COMPATIBLE, JV_ASSERT_IS_INSTANTIABLE): Declare\n \tassertion code values.\n \t(struct _Jv_TypeAssertion): Declare.\n@@ -2734,13 +2738,13 @@\n \t\"gnu.gcj.precompiled.db\" to \"gnu.gcj.precompiled.db.path\".\n \t* gnu/gcj/tools/gcj_dbtool/Main.java: moved here from\n \tjv_dbtool.java.\n-\t\n+\n 2004-11-05  Andrew Haley  <aph@redhat.com>\n \n \t* jv_dbtool.java (main): Allow the user to specify the size of the\n \tdatabase.  Display the capacity and the size.\n \t(usage): Show the new option.\n-\t\t\n+\n 2004-11-04  Tom Tromey  <tromey@redhat.com>\n \n \t* include/jvm.h (_Jv_Linker::set_vtable_entries): Updated.\n@@ -3215,7 +3219,7 @@\n 2004-08-05  Andrew Haley  <aph@redhat.com>\n \n \t* java/net/URLClassLoader.java (JarURLLoader.JarURLLoader): Look\n-\taside for \"GCJLIBS\" in directory where jarfiles are loaded.\t\n+\taside for \"GCJLIBS\" in directory where jarfiles are loaded.\n \t(JarURLLoader.getClass): New method.\n \t(JarURLLoader.toString):  New method.\n \t(FileResource.toString):  New method.\n@@ -3284,10 +3288,10 @@\n \tsuperclass.\n \t(_Jv_LayoutClass): Moved here; it was part of _Jv_PrepareClass in\n \tresolve.cc.\n-\t\n+\n \t* java/lang/VMSecurityManager.java: Check for the system class\n \tloader as well as loader != null.\n-\t\n+\n \t* java/lang/SecurityManager.java (checkPermission): Remove\n \tsecurity check.\n \t(checkRead): Likewise.\n@@ -3319,7 +3323,7 @@\n \t(depth): New field.\n \t* java/io/natObjectInputStream.cc (getCallersClassLoader): New\n \tmethod.\n-\t\n+\n \t(readObject): ENDBLOCKDATA is generated if the class has a write\n \tmethod, not if it has a read method.\n \n@@ -4105,7 +4109,7 @@\n 2004-10-27  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \tPR libgcj/18104\n-\t* Makefile.am (CLASSPATH_SEPARATOR): Use instead of a \n+\t* Makefile.am (CLASSPATH_SEPARATOR): Use instead of a\n \tcolon.\n \t* Makefile.in: Regenerate.\n \t* configure: Regenerate.\n@@ -4134,7 +4138,7 @@\n \t* darwin.cc: New file.\n \t* include/jvm.h (_Jv_RegisterClasses): Constify.\n \t(_Jv_RegisterClasses_Counted): New prototype.\n-\t* java/lang/Class.h: Include stddef.h.  \n+\t* java/lang/Class.h: Include stddef.h.\n \t(_Jv_RegisterClasses): Constify.\n \t(_Jv_RegisterClasses_Counted): New prototype.\n \t(Object): Make '_Jv_RegisterClasses_Counted' a friend.\n@@ -4565,7 +4569,7 @@\n \tPR java/18036:\n \t* gnu/gcj/runtime/natStackTrace.cc (fillInStackTrace): Reorganize\n \tand correct logic used to find interpreter.\n-\t\n+\n 2004-10-18  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* java/util/logging/LogManager.java\n@@ -4640,7 +4644,7 @@\n \tFixed copyrigth years.\n \t* java/net/JarURLConnection.java:\n \tFixed HTML in @author tags.\n-\t\n+\n \n 2004-10-18  Michael Koch  <konqueror@gmx.de>\n \n@@ -4841,8 +4845,8 @@\n \n \t* java/util/Calendar.java (set): Invalidate DST_OFFSET\n \tfield as a DST boundary may have been crossed.\n-\t* java/util/GregorianCalendar.java (add): Throw \n-\tIllegalArgumentException on attempt to add to DST_OFFSET or \n+\t* java/util/GregorianCalendar.java (add): Throw\n+\tIllegalArgumentException on attempt to add to DST_OFFSET or\n \tZONE_OFFSET fields. Update javadoc.\n \n 2004-10-09  Michael Koch  <konqueror@gmx.de>\n@@ -5608,7 +5612,7 @@\n \n \t* configure.host: Use -fno-use-divide-subroutine for mips*-*-linux*.\n \t* include/mips-signal.h: Added HANDLE_FPE support.\n-\t\n+\n 2004-08-31  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/plaf/basic/BasicTextAreaUI.java\n@@ -5657,7 +5661,7 @@\n \n 2004-08-31  Graydon Hoare  <graydon@redhat.com>\n \n-\t* javax/swing/JColorChooser.java: \n+\t* javax/swing/JColorChooser.java:\n \tMake a couple inner classes static, for jikes.\n \n 2004-08-31  Michael Koch  <konqueror@gmx.de>\n@@ -5686,7 +5690,7 @@\n \t* javax/swing/ButtonGroup.java: Run Jalopy.\n \t(setSelected): Reimplement.\n \t* javax/swing/DefaultButtonModel.java: Run Jalopy.\n-\t(changeState): Let ButtonGroup know that the button \n+\t(changeState): Let ButtonGroup know that the button\n \tis changing state.\n \t* javax/swing/JColorChooser.java: Implement.\n \t* javax/swing/JLabel.java: Run Jalopy.\n@@ -5749,12 +5753,12 @@\n \t* javax/swing/JList.java:\n \t(locationToIndex): New Method. Implemented.\n \t(indexToLocation): New Method.\n-\t* javax/swing/JPopupMenu.java: \n+\t* javax/swing/JPopupMenu.java:\n \t(visible): New field.\n \t(isVisible): Changed to use new field above.\n \t(setVisible): Likewise.\n \t* javax/swing/MutableComboBoxModel.java: Added javadocs.\n-\t* javax/swing/plaf/basic/BasicArrowButton.java: \n+\t* javax/swing/plaf/basic/BasicArrowButton.java:\n \t(shadow): Changed default color to Color.gray.\n \t* javax/swing/plaf/basic/BasicComboBoxUI.java: New File.\n \tUI delegate for JComboBox.\n@@ -5770,7 +5774,7 @@\n \tstyle.\n \t* javax/swing/plaf/basic/ComboPopup.java: Added javadocs and missing\n \tmethods signatures.\n-\t\n+\n 2004-08-31  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/text/AbstractDocument.java\n@@ -5794,7 +5798,7 @@\n \n 2004-08-31  Graydon Hoare  <graydon@redhat.com>\n \n-\t* java/awt/Component.java \n+\t* java/awt/Component.java\n \t(isFocusTraversable): Predicate on isLightweight()\n \t(setFocusable): Set isFocusTraversableOverridden.\n \t(requestFocus): Predicate peer dispatch on !isLightweight()\n@@ -5804,16 +5808,16 @@\n \t(dispatchEventImpl): Predicate on event mask.\n \t(LightweightDispatcher): Remove focus machinery.\n \t* java/awt/DefaultFocusTraversalPolicy.java\n-\t(accept): Expand predicate to include isFocusable(). \n+\t(accept): Expand predicate to include isFocusable().\n \t* java/awt/DefaultKeyboardFocusManager.java:\n \tGlobally change c.dispatchEvent(e) to redispatchEvent(c,e)\n \t* java/awt/KeyboardFocusManager.java\n \t(redispatchEvent): Synchronize on event to prevent feedback.\n \t* javax/swing/AbstractButton.java\n \t(ButtonFocusListener): Remove class.\n \t(init): Set focusPainted, focusable.\n-\t* javax/swing/ActionMap.java (get): Check parent for null. \n-\t* javax/swing/InputMap.java (get): Likewise. \n+\t* javax/swing/ActionMap.java (get): Check parent for null.\n+\t* javax/swing/InputMap.java (get): Likewise.\n \t* javax/swing/JComponent.java\n \t(inputMap_whenFocused): New InputMap.\n \t(inputMap_whenAncestorOfFocused): Likewise.\n@@ -5846,7 +5850,7 @@\n \t(uninstallKeyboardActions): Likewise.\n \t(paintFocus): Rewrite.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java\n-\t(Button.focus): New default, midPurple. \n+\t(Button.focus): New default, midPurple.\n \t* javax/swing/plaf/basic/BasicTextUI.java\n \t(kit): Make static.\n \t(installUI): Get doc from kit, load defaults.\n@@ -6183,11 +6187,11 @@\n \n 2004-08-31  Craig Black  <craig.black@aonix.com>\n \n-\t* gnu/java/awt/peer/gtk/GdkGraphics.java \n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n \t(drawImage): Add support for scaling pixmaps.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n \t(copyAndScalePixmap): New native method.\n- \n+\n 2004-08-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \tPR AWT/16121\n@@ -6280,7 +6284,7 @@\n 2004-08-31  Graydon Hoare  <graydon@redhat.com>\n \n \tPR SWING/16576\n-\t* javax/swing/JLayeredPane.java \n+\t* javax/swing/JLayeredPane.java\n \t(setLayer): Permit changing layer after addition.\n \t(setPosition): Permit over-length positions.\n \t(layerToRange): Compare intValue()s.\n@@ -6301,7 +6305,7 @@\n \tremoved from the Container.\n \t(handleEvent): Consume the MouseEvents.\n \t* javax/swing/RepaintManager.java:\n-\t(paintDirtyRegions): Do not add to list of \n+\t(paintDirtyRegions): Do not add to list of\n \tdamaged areas if the component has no root.\n \n 2004-08-31  Michael Koch  <konqueror@gmx.de>\n@@ -6347,7 +6351,7 @@\n \n 2004-08-31  Steven Augart  <augart@watson.ibm.com>\n \n-\t* jni/gtk-peer/gthread-jni.c (c-font-lock-extra-types): \n+\t* jni/gtk-peer/gthread-jni.c (c-font-lock-extra-types):\n \tAdded jfieldID, jmethodID.\n \n 2004-08-31  Mark Wielaard  <mark@klomp.org>\n@@ -6362,13 +6366,13 @@\n \n 2004-08-31  Steven Augart  <augart@watson.ibm.com>\n \n-\t* gnu/java/awt/peer/gtk/GtkMainThread.java (run): Pass the value of \n+\t* gnu/java/awt/peer/gtk/GtkMainThread.java (run): Pass the value of\n \tthe gnu.classpath.awt.gtk.portable.native.sync system property to C.\n \n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n \t(Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): New argument,\n \tportableNativeSync.  Delegate PORTABLE_NATIVE_SYNC work to\n-\tinit_glib_threads. \n+\tinit_glib_threads.\n \t(init_glib_threads): New function.\n \n 2004-08-31  Mark Wielaard  <mark@klomp.org>\n@@ -6387,7 +6391,7 @@\n \tImplemented missing functions for GTK2.\n \tAdded error handling.\n \tRenamed static functions out of the g_ namespace.\n-\tAdded TRACE_API_CALLS, EXPLAIN_TROUBLE, EXPLAIN_BROKEN, \n+\tAdded TRACE_API_CALLS, EXPLAIN_TROUBLE, EXPLAIN_BROKEN,\n \tEXPLAIN_BADLY_BROKEN, and DELETE_LOCAL_REFS options.\n \tRewrote global-reference code.\n \tEliminated cascading errors.\n@@ -6577,7 +6581,7 @@\n \t(create): Call new create method.\n \t(getArgs): Remove method.\n \t* gnu/java/awt/peer/gtk/GtkCheckboxPeer.java,\n-\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c \n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c\n \t(nativeCreate): Rename to create.\n \t(gtkSetLabel): Rename to gtkButtonSetLabel.\n \t(gtkToggleButtonSetActive): New method.\n@@ -6626,7 +6630,7 @@\n \t* gcj/Makefile.in: Regenerate\n \t* include/Makefile.in:\n \t* java/awt/Container.java:\n-\t(acquireComponentForMouseEvent): Respect \n+\t(acquireComponentForMouseEvent): Respect\n \tthe event mask when looking for candidate.\n \t* javax/swing/JComponent.java:\n \tRemove toolTip field.\n@@ -6923,7 +6927,7 @@\n \t* java/util/natTimeZone.cc (getSystemTimeZone): Renamed to\n \tgetDefaultTimeZoneId and rewritten.\n \t(getDefaultTimeZoneId): Rewritten in java.\n-\t\n+\n 2004-08-25  David Daney  <daney@avtrex.com>\n \n \t* Makefile.am (AM_GCJFLAGS):  Add LIBGCJ_JAVAFLAGS.\n@@ -6936,7 +6940,7 @@\n \t(jvmpi_notify_alloc): Don't check if jvmpi is enabled here.\n \t(_Jv_AllocObjectNoFinalizer): Use JVMPI_NOTIFY_ALLOC.\n \t(_Jv_AllocString): Likewise.\n-\t(_Jv_AllocPtrFreeObject): Likewise.\t\n+\t(_Jv_AllocPtrFreeObject): Likewise.\n \n 2004-08-23  Hans Boehm  <Hans.Boehm@hp.com>\n \n@@ -6970,7 +6974,7 @@\n \t    Michael Koch  <konqueror@gmx.de>\n \n \t* configure.in,\tMakefile.am: Ported to automake 1.9.\n-\t* Makefile.in, aclocal.m4, configure, gcj/Makefile.in, \n+\t* Makefile.in, aclocal.m4, configure, gcj/Makefile.in,\n \tinclude/Makefile.in, testsuite/Makefile.in, include/config.h.in:\n \tRegenerated.\n \n@@ -6995,7 +6999,7 @@\n \n 2004-08-18  David Daney  <ddaney@avtrex.com>\n \n-\t* java/lang/natPosixProcess.cc (waitForSignal): Use sigsuspend \n+\t* java/lang/natPosixProcess.cc (waitForSignal): Use sigsuspend\n \tinstead of sigwait.\n \n 2004-08-17  Michael Koch  <konqueror@gmx.de>\n@@ -7026,20 +7030,20 @@\n \n 2004-08-14  Andreas Tobler  <a.tobler@schweiz.ch>\n \n-\t* java/net/natInetAddressPosix.cc (lookup): Reflect rename of \n+\t* java/net/natInetAddressPosix.cc (lookup): Reflect rename of\n \tlocalhostAddress to loopbackAddress.\n \t* java/net/natInetAddressWin32.cc (lookup): Likewise.\n \n 2004-08-13  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* configure.in (GCINCS): Don't use \"boehm-cflags\". Instead, -I \n+\t* configure.in (GCINCS): Don't use \"boehm-cflags\". Instead, -I\n \tboehm-gc's include dirs.\n \t* configure: Rebuilt.\n \t* include/boehm-gc.h: Include gc_config.h.\n \n 2004-08-13  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* java/net/InetAddress.java (loopbackAddress): Renamed from \n+\t* java/net/InetAddress.java (loopbackAddress): Renamed from\n \tlocalhostAddress.\n \t(getByName): Return loopback address for null hostname, without\n \tsecurity check. Use lookup(), not getAllByName.\n@@ -7137,7 +7141,7 @@\n \n 2004-08-05  Andreas Tobler  <a.tobler@schweiz.ch>\n \n-\t* Makefile.am: Fix missing rename from x_nat_headers to \n+\t* Makefile.am: Fix missing rename from x_nat_headers to\n \txlib_nat_headers.\n \t* Makefile.in: Regenerated.\n \n@@ -7297,7 +7301,7 @@\n \tReduce sleep time.\n \t* testsuite/libjava.lang/Thread_HoldsLock.java: Modify to work around\n \tcompiler bug.\n-\t* testsuite/libjava.lang/Thread_Interrupt.java: Remove old email \n+\t* testsuite/libjava.lang/Thread_Interrupt.java: Remove old email\n \taddress. Reduce sleep times. Synchronize with target threads before\n \tattempting to interrupt them. Don't try to calibrate yeild count,\n \tinstead, always loop for a fixed time.\n@@ -7308,16 +7312,16 @@\n \t* testsuite/libjava.lang/Thread_Wait_Interrupt.java: Likewise.\n \t* testsuite/libjava.lang/pr179.java: Likewise.\n \t* testsuite/libjava.lang/Thread_Sleep.java: Likewise. Reduce sleep\n-\ttime. Remove upper bounds check on sleep time. \n+\ttime. Remove upper bounds check on sleep time.\n \n 2004-07-27  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* testsuite/libjava.lang/Thread_HoldsLock.java: New test case.\n-\t* testsuite/libjava.lang/Thread_HoldsLock.out: New.\t\n+\t* testsuite/libjava.lang/Thread_HoldsLock.out: New.\n \n 2004-07-27  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* java/io/File.java (toURI): Throw RuntimeException, not \n+\t* java/io/File.java (toURI): Throw RuntimeException, not\n \tInternalError.\n \t* java/lang/Runtime.java (exit): Qualify static sleep() call with\n \tclass name, not instance.\n@@ -7363,7 +7367,7 @@\n \t(getClassUID): Likewise.\n \t(findMethod): Likewise.\n \t* gnu/java/security/action/GetPropertyAction.java: New class.\n-\t* gnu/java/security/action/SetAccessibleAction.java: New class.\t\n+\t* gnu/java/security/action/SetAccessibleAction.java: New class.\n \n 2004-07-23  Bryce McKinlay  <mckinlay@redhat.com>\n \n@@ -7399,9 +7403,9 @@\n \tDefaultContentHandlerFactory.java.\n \t* Makefile.in: Rebuilt.\n \t* java/net/URLConnection.java (defaultFactory): New field.\n-\t(getContent): \n-\t(getContentHandler): Renamed from 'setContentHandler'. Try \n-\tdefaultFactory after user-set factory, if any. Search for content \n+\t(getContent):\n+\t(getContentHandler): Renamed from 'setContentHandler'. Try\n+\tdefaultFactory after user-set factory, if any. Search for content\n \thandler implementations in gnu.java.net.content, not gnu.gcj.content.\n \t* gnu/java/net/protocol/file/Connection.java (getHeaderField):\n \tImplemented.\n@@ -7417,7 +7421,7 @@\n \tDefault implementation.\n \t* gnu/java/awt/peer/gtk/GtkToolkit.java (createImageProducer): New.\n \tImplement using GdkPixbufDecoder.\n-\t\n+\n 2004-07-21  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/JTextArea.java\n@@ -7513,7 +7517,7 @@\n \t(filenameFilterCallback): New method.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n \t(create): Configure dialog to show hidden files.\n-\t(filenameFilterCallback): New function. \n+\t(filenameFilterCallback): New function.\n \t(nativeSetFilenameFilter): New function.\n \t(nativeSetDirectory): New function.\n \n@@ -7542,24 +7546,24 @@\n \n \t* javax/swing/DefaultDesktopManager.java:\n \t(findMinimum): Removed.\n-\t(resizeFrame): Trust the UI to pass valid \n+\t(resizeFrame): Trust the UI to pass valid\n \tbounds.\n \t* javax/swing/JOptionPane.java:\n \tImplemented showInternalXXXDialog methods.\n \t(startModal): New method.\n \t* javax/swing/plaf/basic/BasicInternalFrameUI.java:\n-\t(BorderListener::mouseDragged): Verify that the new \n+\t(BorderListener::mouseDragged): Verify that the new\n \tbounds are valid before passing them to the DesktopManager.\n \t(preferredLayoutSize): Delegate\n \tto getSize.\n \t(minimumLayoutSize): Ditto.\n \t(getSize): New method.\n-\t(GlassPaneDispatcher): Reimplemented by copying \n+\t(GlassPaneDispatcher): Reimplemented by copying\n \ta stripped down LightweightDispatcher from Container.\n \t(getMinimumSize): Call minimumLayoutSize.\n \t* javax/swing/plaf/basic/BasicOptionPaneUI.java:\n \tRan Jalopy.\n-\t(mousePressed): Add ability to properly close \n+\t(mousePressed): Add ability to properly close\n \tJInternalFrames.\n \t* javax/swing/plaf/basic/BasicToolBarUI.java:\n \t(DragWindow): Set owner for DragWindow.\n@@ -7613,7 +7617,7 @@\n \t* javax/swing/JPopupMenuUI.java: Fixed javadocs.\n \t(LABEL_CHANGED_PROPERTY): New property.\n \t(add): changed to use createActionComponent.\n-\t(createActionComponent): Implemented.\t\n+\t(createActionComponent): Implemented.\n \t(setLabel): Fire PropertyChangeEvent if label property\n \tchanges.\n \t* javax/swing/JRadioButtonMenuItem.java: Fixed javadocs.\n@@ -7637,15 +7641,15 @@\n \t* javax/swing/JToolBar.java:\n \t(layoutContainer): Use getComponents.\n \t* javax/swing/plaf/basic/BasicToolBarUI.java:\n-\t(DragWindow): Don't use SwingUtilities' \n+\t(DragWindow): Don't use SwingUtilities'\n \tgetOwnerFrame\n \t(ToolBarDialog): ditto.\n \n 2004-07-21  Kim Ho  <kho@redhat.com>\n \n \t* javax/swing/JRootPane.java:\n \tRan jalopy.\n-\t(layoutContainer): Set the glasspane's size to \n+\t(layoutContainer): Set the glasspane's size to\n \tbe the same as the content pane.\n \t(createGlassPane): Set opaque property to false.\n \n@@ -7827,26 +7831,26 @@\n \n 2004-07-21  Graydon Hoare  <graydon@redhat.com>\n \n-\t* gnu/java/awt/peer/gtk/GtkToolkit.java (bufferedImageOrError): \n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java (bufferedImageOrError):\n \tMake method non-static.\n \t* javax/swing/AbstractButton.java:\n \tRename fields to match property names where possible.\n \t(iconTextGap): New property.\n \t* javax/swing/JCheckBox.java: Match AbstractButton changes.\n \t(init) New method, call from after various constructors.\n-\t* javax/swing/JComponent.java (revalidate): \n+\t* javax/swing/JComponent.java (revalidate):\n \tInvalidate before queueing repair.\n \t* javax/swing/JList.java (getPreferredScrollableViewportSize):\n \tReimplement in terms of visibleRowCount property.\n \t* javax/swing/JMenuButton.java: Match AbstractButton changes.\n-\t* javax/swing/JScrollPane.java (createScrollListener): \n+\t* javax/swing/JScrollPane.java (createScrollListener):\n \tRemove tracing chatter.\n \t* javax/swing/JToggleButton.java: Match AbstractButton changes.\n-\t* javax/swing/RepaintManager.java (addInvalidComponent): \n+\t* javax/swing/RepaintManager.java (addInvalidComponent):\n \tDon't invalidate.\n \t* javax/swing/ScrollPaneLayout.java: Various corrections to layout\n \tcalculations.\n-\t* javax/swing/SwingUtilities.java (layoutCompoundLabel): \n+\t* javax/swing/SwingUtilities.java (layoutCompoundLabel):\n \tMimic sun behavior on top left/right positioning.\n \t* javax/swing/ViewportLayout.java (preferredLayoutSize):\n \tRemove mistaken use of preferredScrollableViewportSize here.\n@@ -7858,7 +7862,7 @@\n \tRemove tracing chatter, correct various minor calculations.\n \t(getCellBounds): Update layout state before calculating.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java (Button.Margin):\n-\tUse margin default similar to sun's.\t\n+\tUse margin default similar to sun's.\n \t* javax/swing/plaf/basic/BasicScrollBarUI.java (ArrowIcon):\n \t(createIncreaseIcon): Center icon, minimize margins.\n \t(createDecreaseIcon): Likewise.\n@@ -7873,7 +7877,7 @@\n \tSet clip before painting.\n \n 2004-07-21  Olga Rodimina <rodimina@redhat.com>\n-\t\n+\n \t* javax/swing/JMenuItem.java:\n \t(processMouseEvent): Reimplemented to deal with\n \tmouse drag events.\n@@ -7882,7 +7886,7 @@\n \t* javax/swing/MenuSelectionManager.java\n \t(componentForPoint): Implemented.\n \t(isComponentPartOfCurrentMenu): Made public.\n-\t(processMouseEvent): Reimplemented to deal with \n+\t(processMouseEvent): Reimplemented to deal with\n \tmouse drag events.\n \t(setSelectedPath): Corrected small mistake that caused\n \tpath to be set incorrectly.\n@@ -7893,16 +7897,16 @@\n \t(getPreferredSize): Call getPreferredMenuItemSize().\n \t(getPreferredItemSize): Moved code from getPreferredSize to here.\n \t(installListeners): Install MouseMotionListeners.\n-\t(MouseInputHandler): Pass mouse release event to MenuSelectionManager \n+\t(MouseInputHandler): Pass mouse release event to MenuSelectionManager\n \tif mouse wasn't released in the bounds of this menu item.\n \t(MenuDragMouseHandler): Implemented.\n \t* javax/swing/plaf/basic/BasicMenuUI.java:\n-\t(installListeners): Install MouseMotionListener and \n+\t(installListeners): Install MouseMotionListener and\n \tMenuDrageMouseListener.\n \t(MenuDragMouseHandler): Implemented.\n \t* javax/swing/plaf/basic/BasicPopupMenuUI.java:\n \t(uninstallListeners): Implemented.\n-\t\n+\n 2004-07-21  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/JCheckBox.java: Reformated.\n@@ -7932,7 +7936,7 @@\n 2004-07-21  Graydon Hoare  <graydon@redhat.com>\n \n \t* java/awt/image/BufferedImage.java (getSource): Remove tracing chatter.\n-\t* gnu/java/awt/peer/gtk/GtkToolkit.java \n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n \t(GtkErrorImage): New helper class.\n \t(bufferedImageOrError): New helper method.\n \t(createImage): Use it.\n@@ -7957,7 +7961,7 @@\n 2004-07-21  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/JMenu.java:\n-\t(setSelected): Display popup menu only if this menu \n+\t(setSelected): Display popup menu only if this menu\n \tis showing on the screen.\n \t* javax/swing/JPopupMenu.java:\n \t(processMouseEvent): Added comment.\n@@ -7972,7 +7976,7 @@\n \t* javax/swing/plaf/basic/BasicPopupMenuUI.java:\n \t(installUI): Correct setDefaultLightWeightPopupEnabled call.\n \t(popupMenuCanceled): Reimplemented.\n-\t(popupMenuWillBecomeVisible): Select first menu item by default \n+\t(popupMenuWillBecomeVisible): Select first menu item by default\n \twhen displaying free floating popup menus.\n \t(TopWindowListener): Reimplemented.\n \n@@ -7983,9 +7987,9 @@\n \n 2004-07-21  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* java/awt/Window.java: Reverted changes from my \n+\t* java/awt/Window.java: Reverted changes from my\n \tprevious patch for creating window without an owner.\n-\t* javax/swing/SwingUtilities.java: \n+\t* javax/swing/SwingUtilities.java:\n \t(SwingUtilities.OwnerFrame): made static.\n \t(OwnerFrame.setVisible): New method. Overridden with\n \tempty implementation.\n@@ -8032,16 +8036,16 @@\n \n 2004-07-21  Olga Rodimina  <rodimina@redhat.com>\n \n-\t*  javax/swing/AbstractButton.java: \n+\t*  javax/swing/AbstractButton.java:\n \t(configurePropertiesFromAction): Set action command\n-\tto button's text by default if action command is not \n+\tto button's text by default if action command is not\n \texplicitely specified.\n \t* javax/swing/JMenu.java: Remove unnecessary listener\n \tand methods relevant to it.\n \t(setSelected): Reimplemented.\n \t(menuSelectionChanged): Moved most part of implementation to\n \tsetSelected() and call it instead.\n-\t* javax/swing/JMenuItem.java: \n+\t* javax/swing/JMenuItem.java:\n \t(init): Comment out statement that sets paint_border to false.\n \t(configurePropertiesFromAction): Do not set accelerator\n \tfor JMenu.\n@@ -8052,21 +8056,21 @@\n \tinstead of GridBagConstraints.HORIZONTAL.\n \t(insert): Likewise.\n \t(createActionChangeListener): Implemented.\n-\t(setVisible): Correct location of HeavyWeightMenu and \n+\t(setVisible): Correct location of HeavyWeightMenu and\n \tdon't firePopupMenuCanceled().\n \t(menuSelectionChanged): Implemented.\n \t(ActionChangeListener): New Listener. Implemented.\n \t* javax/swing/plaf/basic/BasicMenuBarUI.java:\n \t(BasicMenuBarUI.ContainerHandler): Implemented.\n \t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n-\t(paintMenuItem): Uncommented out code that paints \n+\t(paintMenuItem): Uncommented out code that paints\n \ticon, now that icons are working properly.\n \t(PropertyChangeListener): Implemented.\n \t* javax/swing/plaf/basic/BasicPopupMenuUI.java:\n \tAdded javadocs.\n \t(topWindowListener): New field.\n \t(Constructor): initialize topWindowListener.\n-\t(BasicPopupMenuUI.TopWindowListener): Implemented.\t\n+\t(BasicPopupMenuUI.TopWindowListener): Implemented.\n \t(BasicPopupMenuUI.PopupMenuHandler): Implemented.\n \t(BasicPopupMenuUI.TopWindowListener): New ComponentListener.\n \tImplemented.\n@@ -8205,11 +8209,11 @@\n \n 2004-07-21  Graydon Hoare  <graydon@redhat.com>\n \n-\t* java/awt/image/BufferedImage.java \n+\t* java/awt/image/BufferedImage.java\n \t(getSource): Implement.\n-\t* javax/swing/ImageIcon.java \n+\t* javax/swing/ImageIcon.java\n \t(ImageIcon): Implement ctor.\n-\t* javax/swing/ScrollPaneLayout.java \n+\t* javax/swing/ScrollPaneLayout.java\n \t(preferredLayoutSize): Be more careful about nulls.\n \n 2004-07-21  Michael Koch  <konqueror@gmx.de>\n@@ -8407,16 +8411,16 @@\n \t* javax/swing/plaf/basic/BasicMenuUI.java:\n \t(MouseInputHandler.mouseEntered): Do not raise\n \tpopup menu if this menu is already selected.\n-\t(MouseInputHandler.mousePressed): Do not fire \n+\t(MouseInputHandler.mousePressed): Do not fire\n \tMenuEvents.\n-\t(MenuHandler): Implemented.\t\n+\t(MenuHandler): Implemented.\n \n 2004-07-21  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/JCheckBoxMenuItem.java: Added Javadoc.\n \t(getSelectedObjects): Implemented.\n \t* javax/swing/JRadioButtonMenuItem.java: Added Javadoc.\n-\t* javax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java: \n+\t* javax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java:\n \tAdded javadoc for few methods.\n \t(processMouseEvent): Made public.\n \t* javax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java\n@@ -8431,7 +8435,7 @@\n \t(getDisplayedMnemonicIndex): Change method signature\n \tby removing 'index' parameter.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n-\tAdded default for Menu.selectionBackground.\t\n+\tAdded default for Menu.selectionBackground.\n \t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n \t(paintMenuItem): Change background color of the selected\n \tmenu item.\n@@ -8440,9 +8444,9 @@\n \t(paintAccelerator): Paint accelerator differently\n \tif menu item is disabled.\n \t* javax/swing/plaf/basic/BasicMenuUI.java:\n-\t(installDefaults): Install defaults for \n+\t(installDefaults): Install defaults for\n \tselectionForeground and selectionBackground.\n-\t(uninstallDefaults): Uninstall defauls for \n+\t(uninstallDefaults): Uninstall defauls for\n \tselectionForeground and selectionBackground.\n \n 2004-07-21  Michael Koch  <konqueror@gmx.de>\n@@ -8478,10 +8482,10 @@\n \tto 'this' before firing it to button listeners.\n \t(fireActionPerformed): Likewise.\n \t(fireStateChanged): Likewise.\n-\t(createActionListener): Do not set source \n-\tof the event to AbstractButton.                                  \n+\t(createActionListener): Do not set source\n+\tof the event to AbstractButton.\n \t* javax/swing/plaf/basic/BasicMenuBarUI.java:\n-\t(ContainerHandler.componentAdded): Removed \n+\t(ContainerHandler.componentAdded): Removed\n \tprint out statement.\n \t(ContainerHandler.componentRemoved): Likewise.\n \n@@ -8747,7 +8751,7 @@\n \tcorrectly. Truncate extra zeros.\n \t(before): Compare getNanos() only if getTime() is equal.\n \t(after): Likewise.\n-\t\n+\n 2004-07-14  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* acinclude.m4: \"Inline\" LIBGCJ_CONFIGURE macro into...\n@@ -8791,16 +8795,16 @@\n \n 2004-07-14  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* configure.host (DIVIDESPEC) [s390*-*-*]: Set to \n+\t* configure.host (DIVIDESPEC) [s390*-*-*]: Set to\n \t-fno-use-divide-subroutine.\n \t* include/s390-signal.h: Include <ucontext.h> and <limits.h>.\n \t(HANDLE_FPE): Define.\n \t(SIGNAL_HANDLER): Change third argument to ucontext_t *.\n \t(struct old_s390_kernel_sigaction): Likewise for k_sa_handler.\n \t(HANDLE_DIVIDE_OVERFLOW): Define.\n \n-2004-07-14  Michael Koch  <konqueror@gmx.de> \n-\t    Matthias Klose  <doko@debian.org> \n+2004-07-14  Michael Koch  <konqueror@gmx.de>\n+\t    Matthias Klose  <doko@debian.org>\n \n \t* java/awt/im/InputContext.java: Initialize in, line.\n \n@@ -8817,14 +8821,14 @@\n \t(run): Lock compile_mutex before calling compile() if compilation is\n \trequired.\n \t* prims.cc (_Jv_CreateJavaVM): Call _Jv_InitInterpreter().\n-\t* include/java-interp.h (_Jv_InitInterpreter): Declare.\t\n+\t* include/java-interp.h (_Jv_InitInterpreter): Declare.\n \n 2004-07-12  Bryce McKinlay  <mckinlay@redhat.com>\n \n \tPR libgcj/15713\n \t* include/jvm.h (_Jv_value): New union type.\n-\t* gcj/field.h (_Jv_Field): Add new _addr union field variants \n-\t* interperet.cc (run): Use _Jv_value union type and *_addr _Jv_Field \n+\t* gcj/field.h (_Jv_Field): Add new _addr union field variants\n+\t* interperet.cc (run): Use _Jv_value union type and *_addr _Jv_Field\n \tunion members.\n \n 2004-07-12  Scott Gilbertson  <scottg@mantatest.com>\n@@ -8840,12 +8844,12 @@\n \t  (setHints): New method.\n \t  (setPixels): New method.\n \t  (setProperties): New method.\n-\t* gnu/gcj/xlib/GC.java (drawPoint): New native method. \n+\t* gnu/gcj/xlib/GC.java (drawPoint): New native method.\n \t* gnu/gcj/xlib/natGC.cc (drawPoint): New native method.\n \n 2004-07-11  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\tPR libgcj/16478\t\n+\tPR libgcj/16478\n \t* prims.cc (_Jv_CreateJavaVM): Fix comment.\n \t* gnu/gcj/runtime/FinalizerThread.java (init): New. Native.\n \t(finalizerReady): Now native.\n@@ -8894,7 +8898,7 @@\n \t(ctorArgTypes): New private static field. Singleton argument for\n \tcalendar class constructor lookup.\n \t(getInstance): Cache Locale->Calendar class mappings using HashMap.\n-\tOptimize by bypassing reflection instantiation for the \n+\tOptimize by bypassing reflection instantiation for the\n \tGregorianCalendar case.\n \n 2004-07-09  Bryce McKinlay  <mckinlay@redhat.com>\n@@ -8909,7 +8913,7 @@\n \t* java/text/DateFormatSymbols.java: Likewise.\n \t* java/text/DecimalFormatSymbols.java: Likewise.\n \t* java/text/NumberFormat.java: Likewise.\n-\t* java/awt/Window.java: Likewise.\t\n+\t* java/awt/Window.java: Likewise.\n \n 2004-07-09  Bryce McKinlay  <mckinlay@redhat.com>\n \n@@ -8922,16 +8926,16 @@\n \t(BundleKey): New private class. HashMap key for bundle cache lookup.\n \t(lookupKey): New. Singleton instance of BundleKey.\n \t(nullEntry): New. Cache entry to represent failed lookups.\n-\t(getBundle(String, Locale, ClassLoader)): Re-written to use new \n+\t(getBundle(String, Locale, ClassLoader)): Re-written to use new\n \tcaching strategy, no-allocation lookup, and new tryBundle methods.\n-\t(tryBundle(String, ClassLoader)): New. Load a locale-qualified bundle \n+\t(tryBundle(String, ClassLoader)): New. Load a locale-qualified bundle\n \tname using given classloader.\n-\t(tryBundle(String, Locale, ClassLoader, boolean): New. Qualify \n+\t(tryBundle(String, Locale, ClassLoader, boolean): New. Qualify\n \tbaseName for given Locale and attempt to load bundle.\n \n 2004-07-09  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* javax/swing/plaf/basic/BasicMenuUI.java (mousePressed): Remove \n+\t* javax/swing/plaf/basic/BasicMenuUI.java (mousePressed): Remove\n \tillegal protected method calls.\n \n 2004-07-09  Bryce McKinlay  <mckinlay@redhat.com>\n@@ -8951,7 +8955,7 @@\n \t* gnu/gcj/convert/UnicodeCharacterDatabase-3.0.0.html,\n \tgnu/gcj/convert/UnicodeData-3.0.0.txt:\n \tRemoved, these can directly be downloaded from www.unicode.org if\n-\tneeded. \n+\tneeded.\n \t* gnu/java/lang/CharData.java: Regenerated.\n \t* include/java-chartables.h: Regenerated.\n \t* Makefile.am (ordinary_java_source_files):\n@@ -9130,7 +9134,7 @@\n \t* java/util/Locale.java (hashcode): Made transient.\n \t(hashCode): No longer synchronized.\n \t(equals): Remove comment.\n-\t(writeObject): No longer synchronized. Implement using writeObject \n+\t(writeObject): No longer synchronized. Implement using writeObject\n \tcalls instead of tweaking hashCode field. Update doc.\n \t(readObject): Implement using readObject calls.\n \n@@ -9218,7 +9222,7 @@\n 2004-06-22  Bryce McKinlay  <mckinlay@redhat.com>\n \n \tPR libgcj/16134:\n-\t* gnu/gcj/convert/BytesToUnicode.java (getDecoder): Canonicalize \n+\t* gnu/gcj/convert/BytesToUnicode.java (getDecoder): Canonicalize\n \tencoding name before cache lookup. Thanks to Hannes Wallnoefer.\n \t* gnu/gcj/convert/UnicodeToBytes.java (getEncoder): Likewise.\n \n@@ -9284,11 +9288,11 @@\n \t* javax/swing/JPopupMenu.java:\n \t(JPopupMenu.Separator): Implemented.\n \t* javax/swing/MenuSelectionManager.java:\n-\t(processMouseEvent): Use java.awt.Component \n-\tfor event source instead of javax.swing.JComponent. \n+\t(processMouseEvent): Use java.awt.Component\n+\tfor event source instead of javax.swing.JComponent.\n \t* javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.java:\n \tNew File. Implemented.\n-\t\n+\n 2004-06-16  David Jee  <djee@redhat.com>\n \n \t* java/awt/GridBagLayout.java\n@@ -9298,15 +9302,15 @@\n 2004-04-16  Andrew Overholt  <overholt@redhat.com>\n \n \t* Makefile.am: Add new file.\n-\t* Makefile.in: Re-generate.     \n+\t* Makefile.in: Re-generate.\n \t* javax/swing/JToolBar.java\n \tPartially implemented.\n \t* javax/swing/plaf/basic/BasicToolBarUI.java\n \tNew file. Partially implemented.\n \n 2004-06-16  Graydon Hoare  <graydon@redhat.com>\n \n-\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java \n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n \t(setComposite): Accept AlphaComposite arguments.\n \t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java\n \t(createBufferedImage): Add new overloads.\n@@ -9472,23 +9476,23 @@\n \n \t* javax/swing/ImageIcon.java (ImageIcon): New constructor.\n \t* javax/swing/JFrame.java (defaultLookAndFeelDecorated): New property.\n-\t* javax/swing/JViewport.java \n+\t* javax/swing/JViewport.java\n \t(getExtentSize): Return size rather than preferred size.\n \t(toViewCoordinates): New methods.\n \t(getViewSize): Return size rather than preferred size.\n \t(setViewSize): Note view size as set.\n \t* javax/swing/ViewportLayout.java (layoutContainer): Reimplement.\n-\t* javax/swing/plaf/basic/BasicScrollBarUI.java \n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n \t(getPreferredSize): Don't redo layout.\n-\t* javax/swing/plaf/basic/BasicViewportUI.java \n+\t* javax/swing/plaf/basic/BasicViewportUI.java\n \t(paint): Translate image properly and eat exceptions.\n \n 2004-06-15  Kim Ho  <kho@redhat.com>\n \n \t* javax/swing/JTabbedPane.java\n \t(setComponent): Remove old component and\n \tadd new component.\n-\t(setSelectedIndex): Don't operate on the \n+\t(setSelectedIndex): Don't operate on the\n \tcomponents if they're null. Don't set index\n \ton the model if the index is the same.\n \t(insertTab): Don't add or hide the component\n@@ -9552,17 +9556,17 @@\n 2004-06-14  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/JPopupMenu.java:\n-\t(setVisible): Corrected location of a \n+\t(setVisible): Corrected location of a\n \theavyweight popup menu.\n \n 2004-06-14  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* javax/swing/MenuSelectionManager.java: \n+\t* javax/swing/MenuSelectionManager.java:\n \tRan through jalopy to fix formatting style.\n \n 2004-06-14  Olga Rodimina  <rodimina@redhat.com>\n-\t\n-\t* javax/swing/JLayeredPane.java: \n+\n+\t* javax/swing/JLayeredPane.java:\n \t(remove): Revalidate and repaint layered pane after\n \tthe component was removed.\n \tjavax/swing/JMenu.java:\n@@ -9697,31 +9701,31 @@\n \n 2004-06-10  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* javax/swing/JMenu.java: Fixed file name \n+\t* javax/swing/JMenu.java: Fixed file name\n \tin the file comment.\n \n 2004-06-10  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/JMenu.java: Added javadoc.\n-\t(JMenu): Added MenuChangeListener to listen to \n-\tChangeEvents occuring in menu's model. \n-\t(insert): Throw IllegalArgumentException if \n+\t(JMenu): Added MenuChangeListener to listen to\n+\tChangeEvents occuring in menu's model.\n+\t(insert): Throw IllegalArgumentException if\n \tindex is less than 0\n \t(setSelected): Reimplement.\n \t(setPopupMenuVisible): Call menu's model isEnabled()\n-\t(setDelay): Throw IllegalArgumentException if \n+\t(setDelay): Throw IllegalArgumentException if\n \tgiven amount of delay is less than 0.\n \t(createActionComponent): Implemented.\n \t(createActionChangeListener): Implemented.\n \t(addSeparator): Implemented.\n-\t(getItem): Throw IllegalArgumentException if index is \n+\t(getItem): Throw IllegalArgumentException if index is\n \tless than 0.\n \t(getItemCount): Implemented.\n \t(fireMenuSelected): Changed to use menuEvent.\n \t(fireMenuDeselected): Likewise.\n \t(fireMenuCanceled): Likewise.\n-\t(setAccelerator): Changed to throw an error if this \n-\tmethod is used. \n+\t(setAccelerator): Changed to throw an error if this\n+\tmethod is used.\n \t(doClick): Implemented.\n \t(JMenu.ActionChangedListener): New inner class to handle\n \tPropertyChangeEvents occuring in the actions associated with menu.\n@@ -9901,7 +9905,7 @@\n \t(paintMenuItem): Paint margin area of menu item.\n \t(MouseInputHandler.mouseEntered): Set selection in MenuSelectionManager.\n \t(MouseInputHandler.mouseReleased): Check if mouse was pressed inside\n-\tmenu item's bounds before clearing the selection. \t\n+\tmenu item's bounds before clearing the selection.\n \n 2004-06-09  David Jee  <djee@redhat.com>\n \n@@ -10316,7 +10320,7 @@\n \t* javax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java: Likewise.\n \n 2004-05-31  Olga Rodimina  <rodimina@redhat.com>\n-\t\n+\n \t* javax/swing/plaf/basic/BasicMenuUI.java:\n \t(MouseEntered): Do not call getPath() from MenuSelectionManager.\n \tCall getPath() from super class instead.\n@@ -10524,7 +10528,7 @@\n 2004-06-01  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/ObjectStreamField.java: Style and javadoc cleanup.\n-      \n+\n 2004-06-01  Mark Wielaard  <mark@klomp.org>\n \n \t* java/io/Writer.java (Writer(Object)): Fixed API doc.\n@@ -10693,7 +10697,7 @@\n \n 2004-05-21  Graydon Hoare  <graydon@redhat.com>\n \n-\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java \n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n \t(setClip): Minor correction to order of operations.\n \n \t* javax/swing/JScrollPane.java: Extend sketchy implementation.\n@@ -10705,7 +10709,7 @@\n \t* javax/swing/RepaintManager.java: Likewise.\n \n \t* javax/swing/JLayeredPane.java: Change validate() to revalidate().\n-\t* javax/swing/JList.java \n+\t* javax/swing/JList.java\n \t(setSelectedIndices):\n \t(getSelectedIndices):\n \t(getSelectedValues): New functions.\n@@ -10728,15 +10732,15 @@\n \t* javax/swing/plaf/basic/BasicSeparatorUI.java: Likewise.\n \t* javax/swing/plaf/basic/BasicSliderUI.java: Likewise.\n \t* javax/swing/plaf/basic/BasicTabbedPaneUI.java: Likewise.\n-\t* javax/swing/plaf/basic/BasicRootPaneUI.java: \n+\t* javax/swing/plaf/basic/BasicRootPaneUI.java:\n \tLikewise, and set background.\n-\t* javax/swing/plaf/basic/BasicListUI.java: \n+\t* javax/swing/plaf/basic/BasicListUI.java:\n \tLikewise, and improve a bit.\n-\t* javax/swing/plaf/basic/BasicScrollBarUI.java: \n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java:\n \tLikewise, and adjust calculations.\n \t* javax/swing/plaf/basic/BasicViewportUI.java:\n \tLikewise, and improve a bit.\n-\t* javax/swing/plaf/basic/BasicLookAndFeel.java \n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n \t(Button.margin): Shrink.\n \n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c:\n@@ -10757,11 +10761,11 @@\n \t(update): Implemented.\n \t* javax/swing/plaf/basic/BasicMenuUI.MouseInputHandler:\n \t(mouseEntered): Take insets of popup menu into account when\n-\tcalculating position of popup menu.\t\n- \t\n+\tcalculating position of popup menu.\n+\n 2004-05-18  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* Makefile.am: Added new file. \n+\t* Makefile.am: Added new file.\n \t* Makefile.in: Regenerate.\n \t* javax/swing/JMenuBar.java:\n \tStarted implementation.\n@@ -10818,21 +10822,21 @@\n \n \t* Makefile.am: Added new file.\n \t* Makefile.in: Regenerate.\n-\t* javax/swing/JMenu.java: Started \n+\t* javax/swing/JMenu.java: Started\n \timplementation.\n \t* javax/swing/JPopupMenu.java:\n \t(insert): If specified index is -1, then\n \tadd component at the end.\n \t(isPopupTrigger): Reimplemented.\n \t(JPopupMenu.LightWeightPopup): setBounds\n-\tof the lightWeightPopup before adding it \n+\tof the lightWeightPopup before adding it\n \tto the layeredPane.\n \t(javax/swing/plaf/basic/BasicIconFactory.java):\n \t(getMenuArrowIcon): Implemented.\n \t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n-\t(getPreferredSize): Add size of the arrow icon \n+\t(getPreferredSize): Add size of the arrow icon\n \tif this menu item is instance of JMenu.\n-\t(paintMenuItem): Paint arrow icon if this \n+\t(paintMenuItem): Paint arrow icon if this\n \tmenu item is a submenu.\n \t* javax/swing/plaf/basic/BasicMenuUI.java:\n \tNew File. UI Delegate for JMenu.\n@@ -10847,15 +10851,15 @@\n 2004-05-17  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/JRootPane.java\n-\t(JRootPane.RootLayout): Reimplemented to \n+\t(JRootPane.RootLayout): Reimplemented to\n \tset bounds of contentPane and menuBar.\n \t(setJMenuBar): Add menu bar to the layered pane.\n \t(createLayeredPane): Set layout of layeredPane\n \tto null.\n \t* javax/swing/JLayeredPane.java:\n \t(addImpl): Calculate index of the component in the\n-\tlayeredPane according to the specified position within \n-\tthe layer.\t\n+\tlayeredPane according to the specified position within\n+\tthe layer.\n \n 2004-05-17  David Jee  <djee@redhat.com>\n \n@@ -10981,7 +10985,7 @@\n 2004-05-06  Kim Ho  <kho@redhat.com>\n \n \t* javax/swing/Box.java:\n-\t(getAccessibleContext): Return an instance of the \n+\t(getAccessibleContext): Return an instance of the\n \tcorrect class.\n \n 2004-05-05  David Jee  <djee@redhat.com>\n@@ -11032,7 +11036,7 @@\n \t* javax/swing/event/SwingPropertyChangeSupport.java:\n \t(firePropertyChange): Fix early exit condition.\n \t* javax/swing/plaf/basic/BasicLabelUI.java:\n-\t(paint): Avoid painting text if it is null \n+\t(paint): Avoid painting text if it is null\n \tor empty.\n \t* javax/swing/plaf/basic/BasicOptionPaneUI.java:\n \tImplement.\n@@ -11053,10 +11057,10 @@\n \n \t* javax/swing/JApplet.java: Indicated that JApplet\n \timplements RootPaneContainer and made method of this\n-\tinterface public. \n+\tinterface public.\n \t* javax/swing/JFrame.java: Ditto.\n \t* javax/swing/JWindow.java: Ditto.\n-\t\n+\n 2004-04-29  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n@@ -11086,16 +11090,16 @@\n \t* javax/swing/plaf/basic/BasicMenuItemUI.java\n \t(doClick): Imlemented.\n \t* javax/swing/plaf/basic/BasicMenuItemUI.MouseInputHandler:\n-\tDon't handle mouse events here. Pass them to \n+\tDon't handle mouse events here. Pass them to\n \tMenuSelectionManager.\n-\t\n+\n 2004-04-26  Olga Rodimina  <rodimina@redhat.com>\n \tUsed correct version of jalopy configuration\n \tfile to fix style in the files below.\n \n 2004-04-26  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* javax/swing/JCheckBoxMenuItem.java: \n+\t* javax/swing/JCheckBoxMenuItem.java:\n \tFixed style and removed unnecessary comments.\n \t* javax/swing/JMenuItem.java: Ditto.\n \t* javax/swing/JRadioButtonMenuItem.java: Ditto.\n@@ -11177,7 +11181,7 @@\n 2004-04-21  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/MenuSelectionManager.java\n-\t(componentForPoint): Added new method. \n+\t(componentForPoint): Added new method.\n \t(defaultManager): New Method. Implemented.\n \t(getSelectedPath): Ditto.\n \t(isComponentPartOfCurrentMenu): Ditto.\n@@ -11188,7 +11192,7 @@\n \n 2004-04-19  Kim Ho  <kho@redhat.com>\n \n-\t* java/awt/Container.java: \n+\t* java/awt/Container.java:\n \t(remove): Set the component's parent to null.\n \t(getComponentAt): Implement.\n \t* javax/swing/JComponent.java:\n@@ -11206,7 +11210,7 @@\n \tAdded comments and ran through jalopy.\n \t(setBasicSplitPaneUI): Get reference to hidden divider\n \tand set up one touch buttons if necessary.\n-\t(setBorder): Fire propertyChangeEvent only if \n+\t(setBorder): Fire propertyChangeEvent only if\n \tborders are different.\n \t(getPreferredSize): Defer to layout manager.\n \t(propertyChange): Implement.\n@@ -11241,8 +11245,8 @@\n \n 2004-05-21  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\tLayout interfaces during preparation, not initialization. \n-\t* java/lang/natClass.cc (initializeClass): Move \n+\tLayout interfaces during preparation, not initialization.\n+\t* java/lang/natClass.cc (initializeClass): Move\n \t_Jv_LayoutInterfaceMethods call...\n \t* java/lang/natClassLoader.cc (_Jv_PrepareCompiledClass): to here.\n \n@@ -11552,8 +11556,8 @@\n \n 2004-05-06  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* defineclass.cc (_Jv_ClassReader::prepare_pool_entry): Use \n-\tverify_field_signature and verify_method_signature, not \n+\t* defineclass.cc (_Jv_ClassReader::prepare_pool_entry): Use\n+\tverify_field_signature and verify_method_signature, not\n \t_Jv_VerifyFieldSignature and _Jv_VerifyMethodSigntature.\n \t(_Jv_ClassReader::handleField): Likewise.\n \t(_Jv_ClassReader::handleMethod): Likewise.\n@@ -11821,14 +11825,14 @@\n \tgnu/java/text/AttributedFormatBuffer.java,\n \tgnu/java/text/StringFormatBuffer.java: New classes to implement\n \tattributed iterators in java.text.\n-\t* gnu/java/text/FormatCharacterIterator.java: Moved \n+\t* gnu/java/text/FormatCharacterIterator.java: Moved\n \tfrom java/text as it is an internal class.\n \t* java/text/FormatCharacterIterator.java: Removed.\n \t* java/text/Format.java:\n \tImport gnu.java.text.FormatCharacterIterator.\n \t* Makefile.am (java_source_files): Added new files.\n \t* Makefile.in: Regenerated.\n-\t\n+\n \n 2004-05-04  Mark Wielaard  <mark@klomp.org>\n \n@@ -11918,7 +11922,7 @@\n \tceil and floor.\n \n 2004-04-25  Ranjit Mathew  <rmathew@hotmail.com>\n-\t\n+\n \t* testsuite/libjava.jacks/jacks.exp (gcj_jacks_write): Explicitly\n \tlimit the maximum heap size to avoid unnecessary thrashing.\n \n@@ -12264,7 +12268,7 @@\n \n 2004-04-20  Ingo Proetel  <proetel@aicas.com>\n \n-\t* java/awt/event/MouseEvent.java (<init>): fixed field assignment \n+\t* java/awt/event/MouseEvent.java (<init>): fixed field assignment\n \n 2004-04-20  Jeroen Frijters  <jeroen@frijters.net>\n \n@@ -12514,7 +12518,7 @@\n \t(getWidth): simple default implementation\n \t* java/awt/Polygon.java (getBoundingBox): Use correct y-coordinate\n \tin Rectangle constructor.\n-\t* java/awt/image/Raster.java (toString): Added method. \n+\t* java/awt/image/Raster.java (toString): Added method.\n \t* java/awt/image/SampleModel.java (<init>): Added error cause\n \tinformation to thrown exception.\n \t* java/awt/image/SinglePixelPackedSampleModel.java (getDataElements):\n@@ -12615,8 +12619,8 @@\n \t* Makefile.in: Regenerated.\n \n 2004-04-19  Bryce McKinlay  <mckinlay@redhat.com>\n- \n-\t* gcj/cni.h (JvAllocObject): Remove these obsolete, \n+\n+\t* gcj/cni.h (JvAllocObject): Remove these obsolete,\n \tundocumented CNI calls.\n \t* include/java-interp.h (_Jv_InterpClass): No longer\n \textends java.lang.Class.\n@@ -12636,7 +12640,7 @@\n \t* java/lang/natVMClassLoader.cc (defineClass): Don't use\n \tJvAllocObject. Allocate klass->aux_info here for interpreted\n \tclass.\n-\t\n+\n 2004-04-17  Mark Wielaard  <mark@klomp.org>\n \n \t* javax/swing/JToggleButton.java (ToggleButtonModel):\n@@ -12664,20 +12668,20 @@\n \n \t* Makefile.am: Added new file.\n \t* Makefile.in: Regenerate.\n-\t* javax/swing/ImageIcon.java: \n-\t(ImageIcon(file)): set description of the icon \n+\t* javax/swing/ImageIcon.java:\n+\t(ImageIcon(file)): set description of the icon\n \tto the file name\n \t* javax/swing/JCheckBoxMenuItem.java:\n \tMostly Implemented. Work in progress.\n \t* javax/swing/JRadioButtonMenuItem.java:\n- \tReimplement constructors to use JToggleButtonModel.\n+\tReimplement constructors to use JToggleButtonModel.\n \t* javax/swing/plaf/basic/BasicIconFactory.java:\n \t(getCheckBoxMenuItemIcon): return check box\n \ticon.\n \t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n-\tpaint menu item selected only when it is armed and \n-\tpressed. \n- \n+\tpaint menu item selected only when it is armed and\n+\tpressed.\n+\n 2004-04-02  David Jee  <djee@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkMenuItemPeer.java\n@@ -12705,30 +12709,30 @@\n \t(getPreferredSize): Add size of checkIcon if it\n \texists.\n \t(installDefaults): Don't initialize checkIcon.\n-\tIt's value will be set in subclasses. \n-\t(uninstallDefaults): remove uninstallation of \n+\tIt's value will be set in subclasses.\n+\t(uninstallDefaults): remove uninstallation of\n \tcheckIcon.\n \t(paint): Moved code to paintMenuItem().\n \t(paintMenuItem): Implemented.\n \t* javax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java:\n \tUI delegate for JRadioButtonMenuItem.\n-\t\n+\n 2004-03-29  Olga Rodimina  <rodimina@redhat.com>\n \n \t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n \tCorrected position of the accelerator.\n \n 2004-03-29  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* Makefile.am: Added new file. \n+\t* Makefile.am: Added new file.\n \t* Makefile.in: Regenerate.\n-\t* javax/swing/JMenuItem.java: Partly \n+\t* javax/swing/JMenuItem.java: Partly\n \timplemented. Work in progress\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java:\n \tChanged default value of acceleratorDelimiter.\n \t* javax/swing/plaf/basic/BasicMenuItemUI.java:\n \tNew class. Partly implemented.\n-\t\t\n+\n 2004-03-26  Mark Wielaard  <mark@klomp.org>\n \n \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n@@ -12780,10 +12784,10 @@\n \n 2004-03-23  Graydon Hoare  <graydon@redhat.com>\n \n-\t* java/text/AttributedString.java \n+\t* java/text/AttributedString.java\n \t(addAttribute): Fix off-by-one.\n-\t(getIterator): Likewise.\t\n-\t* java/text/AttributedStringIterator.java \n+\t(getIterator): Likewise.\n+\t* java/text/AttributedStringIterator.java\n \t(getRunLimit): Correct logic.\n \t(getRunStart): Likewise.\n \t(getAttribute): Fix inequality.\n@@ -12862,7 +12866,7 @@\n \t* javax/swing/JComponent.java: Turn off double buffer by default.\n \t* javax/swing/plaf/basic/BasicViewportUI.java: Clear rects before painting.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n-\t(Java_gnu_java_awt_peer_gtk_GdkGraphics2D_gdkDrawDrawable): \n+\t(Java_gnu_java_awt_peer_gtk_GdkGraphics2D_gdkDrawDrawable):\n \tUse cairo to copy areas.\n \t(Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoClip):\n \tInitialize and set clip region.\n@@ -12880,24 +12884,24 @@\n \tHelper function that every drawImage method will\n \tuse.\n \t(drawRaster): Added new parameter, bgcolor. All\n-\ttransparent pixels are changed to bgcolor before \n+\ttransparent pixels are changed to bgcolor before\n \timage is drawn.\n \t(drawRenderedImage): Fixed to use changed drawRaster().\n-\t(drawImage(image,xform,obs): Fixed to use new helper function \n+\t(drawImage(image,xform,obs): Fixed to use new helper function\n \t(drawImage(image,op,x,y)): Ditto.\n \t(drawImage (img,x,y,observer)): Ditto.\n \t((PainterThread) bgcolor): New Field.\n-\t((PainterThread) (setPixels)): Changed all transparent pixels \n-\tto bgcolor.\t\n-\t(drawImage(img,x,y,width,height,bgcolor,observer)): \n-\tFixed FIXME - all the transparent pixels are \n-\tchanged to the specified bgcolor. \n-\t(drawImage(img, x, y, width, height, observer): Changed to \n+\t((PainterThread) (setPixels)): Changed all transparent pixels\n+\tto bgcolor.\n+\t(drawImage(img,x,y,width,height,bgcolor,observer)):\n+\tFixed FIXME - all the transparent pixels are\n+\tchanged to the specified bgcolor.\n+\t(drawImage(img, x, y, width, height, observer): Changed to\n \tuse function above.\n-\t(drawImage (img,dx1,dy1,dx2,dy2,sx1,sy1,sx2,sy2,bgcolor,observer)): \n+\t(drawImage (img,dx1,dy1,dx2,dy2,sx1,sy1,sx2,sy2,bgcolor,observer)):\n \tFixed FIXME- changed all transparent pixels to bgcolor.\n \t(drawImage (img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer)):\n-\tChanged to use function above. \n+\tChanged to use function above.\n \n 2004-03-14  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n@@ -12921,8 +12925,8 @@\n \t(_Jv_AllocObjectNoInitNoFinalizer): Likewise.\n \t(_Jv_AllocPtrFreeObject): Likewise.\n \t(_Jv_AllocString): Moved from natString.cc. Call collector interface\n-\tdirectly even in the JVMPI case.\t\n-\t* gcj/cni.h (JvAllocObject): Remove `size' argument from \n+\tdirectly even in the JVMPI case.\n+\t* gcj/cni.h (JvAllocObject): Remove `size' argument from\n \t_Jv_AllocObject calls.\n \t* gcj/javaprims.h: Update prototypes.\n \t* gnu/gcj/natCore.cc (_Jv_create_core): Use `new', not _Jv_AllocObject.\n@@ -12940,7 +12944,7 @@\n \t* testsuite/libjava.lang/InvokeInterface.out: New file.\n \n 2004-04-09  Ranjit Mathew  <rmathew@hotmail.com>\n-\t\n+\n \t* java/lang/VMThrowable.java (getStackTrace): Pass trace as-is to\n \tmodified lookup().\n \t* gnu/gcj/runtime/NameFinder.java (lookup): Change to take in a\n@@ -13075,7 +13079,7 @@\n \thappy.\n \n 2004-02-10  Randolph Chung  <tausq@debian.org>\n- \n+\n \t* configure.in: Build java for hppa target.\n \t* configure: Regenerate.\n \t* libjava/configure.host (hppa-*): Add target.\n@@ -13144,7 +13148,7 @@\n 2004-03-12  Graydon Hoare  <graydon@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: Clipping fixes.\n-\t* javax/swing/JComponent.java (paint): Use persistent double buffer. \n+\t* javax/swing/JComponent.java (paint): Use persistent double buffer.\n \t* javax/swing/JList.java (ListListener): Revalidate on changes.\n \t* javax/swing/JScrollPane.java: Reimplement.\n \t* javax/swing/JViewport.java: Reimplement.\n@@ -13201,7 +13205,7 @@\n \n 2004-03-09  Graydon Hoare  <graydon@redhat.com>\n \n-\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c: \n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c:\n \tFix double <-> fixed macros, reset font transform.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c:\n \tLikewise.\n@@ -13268,23 +13272,23 @@\n \t(setPaint): Changed implementation of Texture\n \tPaint to use AffineTransformOp.\n \t* java/awt/image/AffineTransformOp.java\n-\t(createCompatibleDestRaster): Throw RasterFormatException \n+\t(createCompatibleDestRaster): Throw RasterFormatException\n \tif resulting width or height of raster is 0.\n \n 2004-03-04  Olga Rodimina  <rodimina@redhat.com>\n \n \t* java/awt/image/AffineTransformOp.java:\n \tRemoved unnecessary field interpolationType.\n-\tFormatted some of the lines to be consistent with \n+\tFormatted some of the lines to be consistent with\n \tthe GNU style.\n-\t(AffineTransformOp): Create new RenderingHints \n+\t(AffineTransformOp): Create new RenderingHints\n \tcontaining specified interpolation type.\n \t(createCompatibleDestImage): Implemented.\n \t(createCompatibleDestRaster): Implemented.\n \t(filter): Implemented.\n \t(getBounds2D(BufferedImage)): Implemented.\n \t(getBounds2D(Raster)): Implemented.\n-\t(getInterpolationType): Get interpolation value from \n+\t(getInterpolationType): Get interpolation value from\n \trendering hints.\n \n 2004-03-04  David Jee  <djee@redhat.com>\n@@ -13356,21 +13360,21 @@\n \t(fill3DRect): Ditto.\n \t(clearRect): Ditto.\n \t(drawRaster): Ditto.\n-\t(drawImage) : Ditto. Update only in case of GtkOffScreenImage with \n+\t(drawImage) : Ditto. Update only in case of GtkOffScreenImage with\n \tno affine transformation.\n \t(drawGlyphVector): Ditto.\n \n 2004-02-26  Olga Rodimina <rodimina@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n-\t(isBufferedImageGraphics): New Helper function. \n-\tReturns true if this graphics2d can be used to draw \n+\t(isBufferedImageGraphics): New Helper function.\n+\tReturns true if this graphics2d can be used to draw\n \tinto buffered image and false otherwise.\n-\t(updateImagePixels): New Helper function. \n+\t(updateImagePixels): New Helper function.\n \tUpdates pixels in the BufferedImage.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n \t(getImagePixels): New function. Returns pixels\n-\tof the buffered image associated with \n+\tof the buffered image associated with\n \tthis Graphics2D.\n \n 2004-02-26  David Jee  <djee@redhat.com>\n@@ -13386,7 +13390,7 @@\n \n \t* Makefile.am: Add new files.\n \t* Makefile.in: Re-generate.\n-\t* javax/swing/JProgressBar.java: \n+\t* javax/swing/JProgressBar.java:\n \t(JProgressBar(int, int int)): Throw\n \tIllegalArgumentException if orientation is\n \tinvalid.\n@@ -13397,7 +13401,7 @@\n \t* javax/swing/JScrollBar.java: Implement.\n \t* javax/swing/JSeparator.java: Implement.\n \t* javax/swing/JSlider.java:\n-\t(JSlider(int, int, int, int)): Throw \n+\t(JSlider(int, int, int, int)): Throw\n \tIllegalArgumentException if orientation\n \tis invalid.\n \t(getChangeListeners): Fix method name.\n@@ -13410,7 +13414,7 @@\n \tImplement.\n \t* javax/swing/plaf/basic/BasicSeparatorUI.java:\n \tImplement.\n-\t* javax/swing/plaf/basic/BasicSliderUI.java: \n+\t* javax/swing/plaf/basic/BasicSliderUI.java:\n \t(propertyChange): If the model changes, change\n \tthe listeners accordingly.\n \n@@ -13458,7 +13462,7 @@\n \t(GdkGraphics2D): New Constructor. Constructs Graphics\n \tobject that can be used to draw into the Buffered Image.\n \t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java:\n-\t(GdkGraphicsEnvironment): Fixed to include public \n+\t(GdkGraphicsEnvironment): Fixed to include public\n \tkeyword.\n \t(createGraphics): Implemented.\n \t* gnu/java/awt/peer/gtk/GtkToolkit.java\n@@ -13467,7 +13471,7 @@\n \t(getLocalGraphicsEnvironment): Implemented.\n \t* java/awt/image/BufferedImage.java:\n \t(createGraphics): Implemented.\n-\t\t\n+\n 2004-02-24  David Jee  <djee@redhat.com>\n \n \t* java/awt/Component.java\n@@ -13477,17 +13481,17 @@\n \n 2004-02-23  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* Makefile.am: Added \n+\t* Makefile.am: Added\n \tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n \t* Makefile.in: Re-generated.\n \t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java:\n-\tNew Class. \n-\t\n+\tNew Class.\n+\n 2004-02-19  Kim Ho  <kho@redhat.com>\n \n \t* Makefile.am: Add BasicProgressBarUI\n \t* Makefile.in: Regenerate.\n-\t* javax/swing/JProgressBar.java: \n+\t* javax/swing/JProgressBar.java:\n \tRe-implement.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java\n \tAdd constants for JProgressBar.\n@@ -13518,7 +13522,7 @@\n \tmodifiers.\n \t* javax/swing/JLabel.java: Re-order\n \tmodifiers.\n-\t* javax/swing/JComponent.java: \n+\t* javax/swing/JComponent.java:\n \t(addPropertyChangeListener):\n \tImplement.\n \t(removePropertyChangeListener):\n@@ -13570,7 +13574,7 @@\n \n 2004-02-17  Kim Ho  <kho@redhat.com>\n \n-\t* javax/swing/JLabel.java: Changed \n+\t* javax/swing/JLabel.java: Changed\n \tproperty strings to constants.\n \t(DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY):\n \tNew property.\n@@ -13600,9 +13604,9 @@\n \n 2004-02-16  Graydon Hoare  <graydon@redhat.com>\n \n-\t* javax/swing/plaf/basic/BasicLabelUI.java \n+\t* javax/swing/plaf/basic/BasicLabelUI.java\n \t(getPreferredSize): Use layoutCL.\n-\t* javax/swing/plaf/basic/BasicGraphicsUtils.java \n+\t* javax/swing/plaf/basic/BasicGraphicsUtils.java\n \t(getPreferredButtonSize): Start with empty view rect, layout using\n \tcomponent's preferred alignment.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java: Add some Label and\n@@ -13626,13 +13630,13 @@\n 2004-02-16  Olga Rodimina  <rodimina@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java:\n-\t(setRenderingHint): Added implementation of \n+\t(setRenderingHint): Added implementation of\n \tInterpolation rendering hints.\n \t(setRenderingHints): Ditto.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n-\t(drawPixels): fixed to allow user to choose type \n+\t(drawPixels): fixed to allow user to choose type\n \tof filtering that should be used when displaying images.\n-\t(cairoSurfaceSetFilter): New method. Sets filter type for \n+\t(cairoSurfaceSetFilter): New method. Sets filter type for\n \tinterpolation of pixel values.\n \n 2004-02-16  David Jee  <djee@redhat.com>\n@@ -13655,7 +13659,7 @@\n \t(setModel): Remove null check to conform with Sun's.\n \t(setOrientation): Throw exception if not\n \tHORIZONTAL or VERTICAL.\n-\t(getInverted): Use private variable instead of \n+\t(getInverted): Use private variable instead of\n \tComponentOrientation.\n \t(setInverted): ditto.\n \t* javax/swing/plaf/basic/BasicSliderUI.java:\n@@ -13665,7 +13669,7 @@\n \t(getMinimumSize): Return preferred size.\n \t(getMaximumSize): ditto.\n \t(calculateFocusRect): Don't relocate rectangle.\n-\t(drawInverted): Return XOR of the slider's inversion and \n+\t(drawInverted): Return XOR of the slider's inversion and\n \tthe component's orientation.\n \t(paint): Update leftToRightCache\n \n@@ -13833,7 +13837,7 @@\n \t(getAllAttributesKey): Return only keys concerned\n \tby the current iterator.\n \t(getAttributes): Use strict inequality for\n-\tend_index. \n+\tend_index.\n \n 2004-03-11  Michael Koch  <konqueror@gmx.de>\n \n@@ -14093,7 +14097,7 @@\n \t* java/nio/IntViewBufferImpl.java:  Likewise.\n \t* java/nio/LongViewBufferImpl.java:  Likewise.\n \t* java/nio/ShortViewBufferImpl.java:  Likewise.\n-\t\n+\n \t* java/nio/ByteBuffer.java (endian):  Make non-private so other\n \tjava.nio classes can inherit it.\n \t(<init>):  Don't bother clearing array_offset.\n@@ -14152,9 +14156,9 @@\n \t* Makefile.in: Regenerate.\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: Initialize default hints.\n-\t* javax/swing/AbstractButton.java \n+\t* javax/swing/AbstractButton.java\n \t(AbstractButton): Initialize fields correctly in ctor.\n-\t* javax/swing/JCheckbox.java \n+\t* javax/swing/JCheckbox.java\n \t(JCheckBox): Override painting flags.\n \t* javax/swing/DefaultButtonModel.java: Conform to sun.\n \t* javax/swing/JComponent.java (paint): Fill with background color\n@@ -14166,11 +14170,11 @@\n \t(getUIClassID): Return \"ComponentUI\" not \"JComponent\"\n \t* javax/swing/JFrame.java: Remove some debugging chatter.\n \t(JFrame): Subscribe to window events.\n-\t* javax/swing/JRadioButton.java \n+\t* javax/swing/JRadioButton.java\n \t(JRadioButton): Override painting flags.\n-\t* javax/swing/JRootPane.java \n+\t* javax/swing/JRootPane.java\n \t(JRootPane): Set background from UIDefaults.\n-\t* javax/swing/JToggleButton.java \n+\t* javax/swing/JToggleButton.java\n \t(ToggleButtonModel): New inner class.\n \t(JToggleButton): Override layout alighment.\n \t* javax/swing/SwingUtilities.java:\n@@ -14179,7 +14183,7 @@\n \t(layoutCompoundLabel): Provide overridden form.\n \t(layoutCompoundLabel): Correct bugs.\n \t* javax/swing/UIDefaults.java: Correct comment.\n-\t* javax/swing/plaf/basic/BasicButtonUI.java: \n+\t* javax/swing/plaf/basic/BasicButtonUI.java:\n \tMove most logic into defaults, external listener.\n \t(paintIcon): Implement icon painting.\n \t(paint): Fix state painting to conform to changes in model.\n@@ -14189,14 +14193,14 @@\n \t* javax/swing/plaf/basic/BasicIconFactory.java:\n \t(DummyIcon): New class.\n \t(getMenuItemCheckIcon)\n-\t(getMenuItemArrowIcon) \n+\t(getMenuItemArrowIcon)\n \t(getMenuArrowIcon)\n \t(getCheckBoxMenuItemIcon)\n \t(getRadioButtonMenuItemIcon)\n \t(createEmptyFrameIcon): Return DummyIcons, not null.\n \t(getCheckBoxIcon): Implement an icon that looks like sun's.\n \t(getRadioButtonIcon): Implement an icon that looks like sun's.\n-\t* javax/swing/plaf/basic/BasicLookAndFeel.java \n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n \t(initComponentDefaults): Fix impossible values, add some missing.\n \t* javax/swing/plaf/basic/BasicPanelUI.java (gap): Remove field.\n \t* javax/swing/plaf/basic/BasicRadioButtonUI.java:\n@@ -14211,21 +14215,21 @@\n \t(Java_gnu_java_awt_peer_gtk_GdkGraphics_clearRect):\n \tImplement \"clearing\" as drawing, when on pixmap drawables.\n \n-\t* javax/swing/JButton.java (getUIClassID): \n+\t* javax/swing/JButton.java (getUIClassID):\n \t* javax/swing/JCheckBox.java (getUIClassID):\n \t* javax/swing/JEditorPane.java (getUIClassID):\n-\t* javax/swing/JLabel.java (getUIClassID): \n-\t* javax/swing/JList.java (getUIClassID): \n-\t* javax/swing/JOptionPane.java (getUIClassID): \n-\t* javax/swing/JPanel.java (getUIClassID): \n-\t* javax/swing/JPasswordField.java (uiClassID): \n-\t* javax/swing/JRadioButton.java (getUIClassID): \n-\t* javax/swing/JRootPane.java (getUIClassID): \n-\t* javax/swing/JScrollPane.java (getUIClassID): \n-\t* javax/swing/JTabbedPane.java (getUIClassID): \n-\t* javax/swing/JToggleButton.java (getUIClassID): \n-\t* javax/swing/JTree.java (getUIClassID): \n-\t* javax/swing/JViewport.java (getUIClassID): \n+\t* javax/swing/JLabel.java (getUIClassID):\n+\t* javax/swing/JList.java (getUIClassID):\n+\t* javax/swing/JOptionPane.java (getUIClassID):\n+\t* javax/swing/JPanel.java (getUIClassID):\n+\t* javax/swing/JPasswordField.java (uiClassID):\n+\t* javax/swing/JRadioButton.java (getUIClassID):\n+\t* javax/swing/JRootPane.java (getUIClassID):\n+\t* javax/swing/JScrollPane.java (getUIClassID):\n+\t* javax/swing/JTabbedPane.java (getUIClassID):\n+\t* javax/swing/JToggleButton.java (getUIClassID):\n+\t* javax/swing/JTree.java (getUIClassID):\n+\t* javax/swing/JViewport.java (getUIClassID):\n \t* javax/swing/text/JTextComponent.java (getUIClassID):\n \tReturn \"fooUI\" not \"Jfoo\"\n \n@@ -14478,12 +14482,12 @@\n \n \t* javax/swing/SwingUtilities.java: Many new functions.\n \t* java/awt/Container.java (LightweightDispatcher): Reimplement.\n-\t* javax/swing/basic/BasicGraphicsUtils.java \n+\t* javax/swing/basic/BasicGraphicsUtils.java\n \t(getPreferredButtonSize): Start layout from top-left corner.\n \n 2004-02-04  Olga Rodimina  <rodimina@redhat.com>\n \n-\t* java/awt/geom/AffineTransform.java: \n+\t* java/awt/geom/AffineTransform.java:\n \tCorrected comments on the field definitions for\n \tm11 and m10.\n \t(shear): Fixed few errors that caused shear\n@@ -14563,7 +14567,7 @@\n \n 2004-01-30  Mohan Embar  <gnustuff@thisiscool.com>\n \n-\t* gnu/java/net/PlainSocketImpl.java \n+\t* gnu/java/net/PlainSocketImpl.java\n \t(inChannelOperation): New field.\n \t(isInChannelOperation): New accessor.\n \t(setInChannelOperation): New modifier.\n@@ -14621,7 +14625,7 @@\n 2004-01-29  Scott Gilbertson  <scottg@mantatest.com>\n \n \t* gnu/java/awt/peer/ClasspathFontPeer.java (getTransform): Never\n-\treturn null. \n+\treturn null.\n \n 2004-01-29  Kim Ho  <kho@redhat.com>\n \n@@ -14910,7 +14914,7 @@\n 2004-01-23  Michael Koch  <konqueror@gmx.de>\n \n \t* java/lang/VMClassLoader.java: Reworked imports.\n-\t\n+\n 2004-01-23  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/AbstractAction.java: Reformated.\n@@ -15129,8 +15133,8 @@\n \tthrough the vbox's children to find layout.\n \n 2004-01-22  Graydon Hoare  <graydon@redhat.com>\n-\t\n-\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java: \n+\n+\t* gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java:\n \t* gnu/java/awt/peer/gtk/GdkGlyphVector.java:\n \tPredicate static initialization on GtkToolkit.useGraphics2D().\n \t* java/awt/Component.java (processPaintEvent): Consume event.\n@@ -15139,12 +15143,12 @@\n \t* javax/swing/JComponent.java (paint): Use double buffer.\n \t(listenerList): Enable member.\n \t* javax/swing/ToggleButtonModel.java: Remove incorrect constructor.\n-\t* javax/swing/JToggleButton.java \n+\t* javax/swing/JToggleButton.java\n \t(JToggleButton): Modify model constructor.\n-\t* javax/swing/SwingUtilities.java \n+\t* javax/swing/SwingUtilities.java\n \t(layoutCompoundLabel): Adjust arithmetic.\n \t* javax/swing/plaf/basic/BasicButtonUI.java: Reimplement, document.\n-\t* javax/swing/plaf/basic/BasicGraphicsUtils.java \n+\t* javax/swing/plaf/basic/BasicGraphicsUtils.java\n \t(getPreferredButtonSize): Include margins in calculation.\n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c\n \t(Java_gnu_java_awt_peer_gtk_GtkWindowPeer_connectSignals):\n@@ -15321,7 +15325,7 @@\n 2004-01-16  Olga Rodimina <rodimina@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java:\n-\t(doPolygon): set fill rule of polygon to \n+\t(doPolygon): set fill rule of polygon to\n \tWIND_EVEN_ODD by default.\n \n 2004-01-15  Olga Rodimina <rodimina@redhat.com>\n@@ -15344,7 +15348,7 @@\n 2004-01-14  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* configure.in: Add in AC_PREREQ(2.13)\n-\t* libltdl/configure.ac: Update to AC_PREREQ(2.57).  Delete \n+\t* libltdl/configure.ac: Update to AC_PREREQ(2.57).  Delete\n \tFIXME comment.\n \n 2004-01-14  Nathan Bryant  <nbryant@optonline.net>\n@@ -15419,10 +15423,10 @@\n \tUpdate postConfigureEvent signature.\n \n 2004-01-13  Fernando Nasser  <fnasser@redhat.com>\n- \n+\n \t* gnu/java/awt/peer/gtk/TestAWT.java (DialogWindow): Add WindowAdapter\n \tto handle Window \"Closing\" events.\n- \n+\n 2004-01-13  David Jee  <djee@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkContainerPeer.java\n@@ -15941,4 +15945,3 @@\n \n \t* java/util/Date.java (parse):  Fix a number of problems.\n \t(skipParens):  Remove no-longer-needed method.\n-"}, {"sha": "443259d712c032fa0c6af9afad88f4770ebc3b22", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=8c8a5f7c8e5c0e05d38272f09bee1ec442a3d2cc", "patch": "@@ -277,10 +277,11 @@ proc libjava_find_spec {} {\n proc libjava_find_gij {} {\n     global base_dir objdir\n \n-    if {! [file exists $objdir/../gij]} {\n+    set gijdir [lookfor_file [get_multilibs] libjava];\n+    if {! [file exists $gijdir/gij]} {\n \treturn \"\"\n     }\n-    return $objdir/../gij\n+    return $gijdir/gij\n }\n \n # Remove a bunch of files."}]}