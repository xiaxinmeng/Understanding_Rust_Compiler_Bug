{"sha": "eac69b8a008bd5426d3410d624aa9d88577fd69f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjNjliOGEwMDhiZDU0MjZkMzQxMGQ2MjRhYTlkODg1NzdmZDY5Zg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@merlin.codesourcery.com", "date": "2001-08-06T16:04:08Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-08-06T16:04:08Z"}, "message": "Don't allow template-id in using-declaration.\n\ncp/\n       Don't allow template-id in using-declaration.\n       * decl2.c (validate_nonmember_using_decl): Handle template-ids.\n       (do_class_using_decl): Likewise.\n\ntestsuite/\n       * g++.dg/other/using-declaration.C: New test.\n\nFrom-SVN: r44663", "tree": {"sha": "1993644e70dfb92ec05b33c858202615ffdf6f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1993644e70dfb92ec05b33c858202615ffdf6f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eac69b8a008bd5426d3410d624aa9d88577fd69f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac69b8a008bd5426d3410d624aa9d88577fd69f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eac69b8a008bd5426d3410d624aa9d88577fd69f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac69b8a008bd5426d3410d624aa9d88577fd69f/comments", "author": null, "committer": null, "parents": [{"sha": "4f2b1139461bb4ac0a310807cdf07358f20a4b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2b1139461bb4ac0a310807cdf07358f20a4b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2b1139461bb4ac0a310807cdf07358f20a4b0e"}], "stats": {"total": 98, "additions": 84, "deletions": 14}, "files": [{"sha": "470fd8211884ea488484ea796eb3cb120f90152a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eac69b8a008bd5426d3410d624aa9d88577fd69f", "patch": "@@ -1,3 +1,9 @@\n+2001-08-05  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\n+\tDon't allow template-id in using-declaration.\n+\t* decl2.c (validate_nonmember_using_decl): Handle template-ids.\n+\t(do_class_using_decl): Likewise.\n+\n 2001-08-04  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* cp/spew.c (read_token): No need to pop buffers."}, {"sha": "d35ab7195d28cbe8bc5e7f651e966c20a4fc157f", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 30, "deletions": 14, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=eac69b8a008bd5426d3410d624aa9d88577fd69f", "patch": "@@ -4913,19 +4913,29 @@ validate_nonmember_using_decl (decl, scope, name)\n       *scope = TREE_OPERAND (decl, 0);\n       *name = TREE_OPERAND (decl, 1);\n \n-      /* [namespace.udecl]\n-\n-\t A using-declaration for a class member shall be a\n-\t member-declaration.  */\n-      if (!processing_template_decl\n-          && TREE_CODE (*scope) != NAMESPACE_DECL)\n-\t{\n-\t  if (TYPE_P (*scope))\n-\t    cp_error (\"`%T' is not a namespace\", *scope);\n-\t  else\n-\t    cp_error (\"`%D' is not a namespace\", *scope);\n-\t  return NULL_TREE;\n-\t}\n+      if (!processing_template_decl)\n+        {\n+          /* [namespace.udecl]\n+             A using-declaration for a class member shall be a\n+             member-declaration.  */\n+          if(TREE_CODE (*scope) != NAMESPACE_DECL)\n+            {\n+              if (TYPE_P (*scope))\n+                cp_error (\"`%T' is not a namespace\", *scope);\n+              else\n+                cp_error (\"`%D' is not a namespace\", *scope);\n+              return NULL_TREE;\n+            }\n+          \n+          /* 7.3.3/5\n+             A using-declaration shall not name a template-id.  */\n+          if (TREE_CODE (*name) == TEMPLATE_ID_EXPR)\n+            {\n+              *name = TREE_OPERAND (*name, 0);\n+              cp_error (\"a using-declaration cannot specify a template-id.  Try `using %D'\", *name);\n+              return NULL_TREE;\n+            }\n+        }\n     }\n   else if (TREE_CODE (decl) == IDENTIFIER_NODE\n            || TREE_CODE (decl) == TYPE_DECL\n@@ -5129,7 +5139,13 @@ do_class_using_decl (decl)\n       cp_error (\"using-declaration for destructor\");\n       return NULL_TREE;\n     }\n-  if (TREE_CODE (name) == TYPE_DECL)\n+  else if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+    {\n+      name = TREE_OPERAND (name, 0);\n+      cp_error (\"a using-declaration cannot specify a template-id.  Try  `using %T::%D'\", TREE_OPERAND (decl, 0), name);\n+      return NULL_TREE;\n+    }\n+  if (TREE_CODE (name) == TYPE_DECL || TREE_CODE (name) == TEMPLATE_DECL)\n     name = DECL_NAME (name);\n \n   my_friendly_assert (TREE_CODE (name) == IDENTIFIER_NODE, 980716);"}, {"sha": "3b5930e8d4d6dba414dd7dac5d56512d4621cc14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eac69b8a008bd5426d3410d624aa9d88577fd69f", "patch": "@@ -1,3 +1,7 @@\n+2001-08-05  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\n+\t* g++.dg/other/using-declaration.C: New test.\n+\n 2001-08-05  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.dg/cpp/tr-sign.c: New testcase."}, {"sha": "aac334233360c152d1fb8b621df9823c1c3a03cf", "filename": "gcc/testsuite/g++.dg/other/using-declaration.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fusing-declaration.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac69b8a008bd5426d3410d624aa9d88577fd69f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fusing-declaration.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fusing-declaration.C?ref=eac69b8a008bd5426d3410d624aa9d88577fd69f", "patch": "@@ -0,0 +1,44 @@\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// Contributed by Gabriel Dos Reis <gdr@codesourcery.com>\n+\n+// { dg-do compile }\n+\n+namespace N\n+{\n+  template<int> void f() {}\n+}\n+\n+using N::f< 0 >;     // { dg-error \"using-declaration\" \"\" }\n+\n+struct  A {\n+  template <class T> void f(T);\n+  template <class T> struct X { };\n+}; \n+\n+struct B : A {\n+  using A::X;        // OK\n+  using A::f;        // OK\n+};\n+\n+struct C : A {\n+  using A::f<double>; // { dg-error \"using-declaration\" \"\" }\n+  using A::X<int>;    // { dg-error \"parse error\" \"\" }\n+};\n+"}]}