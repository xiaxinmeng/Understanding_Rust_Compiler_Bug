{"sha": "a141a5afe1176f2fa8bf7a7383223df55fdef623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0MWE1YWZlMTE3NmYyZmE4YmY3YTczODMyMjNkZjU1ZmRlZjYyMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-01-11T16:48:14Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-01-11T16:48:14Z"}, "message": "istream.cc (basic_istream<char>::ignore(streamsize), [...]): Revert 2005-01-05 change...\n\n2005-01-11  Paolo Carlini  <pcarlini@suse.de>\n\n\t* src/istream.cc (basic_istream<char>::ignore(streamsize),\n\tbasic_istream<char>::ignore(streamsize, int_type),\n\tbasic_istream<wchar_t>::ignore(streamsize),\n\tbasic_istream<wchar_t>::ignore(streamsize, int_type)): Revert\n\t2005-01-05 change: actually, the previous behavior is conforming\n\tand consistent with that of get(char_type*, streamsize, char_type),\n\talbeit slightly different from that of 3.3/3.4 in a corner case\n\tdue to the use of snextc.\n\t* include/bits/istream.tcc (ignore(streamsize), ignore(streamsize,\n\tint_type)): Likewise.\n\t* testsuite/27_io/basic_istream/ignore/char/4.cc: Remove.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/4.cc: Likewise.\n\nFrom-SVN: r93189", "tree": {"sha": "1c942ddec4a4c9fb5c671be6f9e3451e07a07c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c942ddec4a4c9fb5c671be6f9e3451e07a07c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a141a5afe1176f2fa8bf7a7383223df55fdef623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a141a5afe1176f2fa8bf7a7383223df55fdef623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a141a5afe1176f2fa8bf7a7383223df55fdef623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a141a5afe1176f2fa8bf7a7383223df55fdef623/comments", "author": null, "committer": null, "parents": [{"sha": "a969c1d23b142de977b07ce0d7a018fb4aab3893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a969c1d23b142de977b07ce0d7a018fb4aab3893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a969c1d23b142de977b07ce0d7a018fb4aab3893"}], "stats": {"total": 157, "additions": 24, "deletions": 133}, "files": [{"sha": "434f487d8ff2c230b7fa4cefd07c6783307854c0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a141a5afe1176f2fa8bf7a7383223df55fdef623/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a141a5afe1176f2fa8bf7a7383223df55fdef623/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a141a5afe1176f2fa8bf7a7383223df55fdef623", "patch": "@@ -1,3 +1,18 @@\n+2005-01-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* src/istream.cc (basic_istream<char>::ignore(streamsize),\n+\tbasic_istream<char>::ignore(streamsize, int_type),\n+\tbasic_istream<wchar_t>::ignore(streamsize),\n+\tbasic_istream<wchar_t>::ignore(streamsize, int_type)): Revert\n+\t2005-01-05 change: actually, the previous behavior is conforming\n+\tand consistent with that of get(char_type*, streamsize, char_type),\n+\talbeit slightly different from that of 3.3/3.4 in a corner case\n+\tdue to the use of snextc.\n+\t* include/bits/istream.tcc (ignore(streamsize), ignore(streamsize,\n+\tint_type)): Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/char/4.cc: Remove.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/4.cc: Likewise.\n+\n 2005-01-11  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits: Implement alignment_of and aligned_storage."}, {"sha": "1cb88cad114161f0bcede4687a18d4fcb54defc2", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a141a5afe1176f2fa8bf7a7383223df55fdef623/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a141a5afe1176f2fa8bf7a7383223df55fdef623/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=a141a5afe1176f2fa8bf7a7383223df55fdef623", "patch": "@@ -707,7 +707,7 @@ namespace std\n \t\t    break;\n \t\t}\n \n-\t      if (_M_gcount < __n)\n+\t      if (traits_type::eq_int_type(__c, __eof))\n                 __err |= ios_base::eofbit;\n             }\n           catch(...)\n@@ -755,11 +755,9 @@ namespace std\n \t\t    break;\n \t\t}\n \n-\t      if (_M_gcount == __n)\n-\t\t;\n-              else if (traits_type::eq_int_type(__c, __eof))\n+              if (traits_type::eq_int_type(__c, __eof))\n                 __err |= ios_base::eofbit;\n-\t      else\n+\t      else if (traits_type::eq_int_type(__c, __delim))\n \t\t{\n \t\t  ++_M_gcount;\n \t\t  __sb->sbumpc();"}, {"sha": "e3a364902836b4bc305fc82bf516fc1aa4f312be", "filename": "libstdc++-v3/src/istream.cc", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a141a5afe1176f2fa8bf7a7383223df55fdef623/libstdc%2B%2B-v3%2Fsrc%2Fistream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a141a5afe1176f2fa8bf7a7383223df55fdef623/libstdc%2B%2B-v3%2Fsrc%2Fistream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fistream.cc?ref=a141a5afe1176f2fa8bf7a7383223df55fdef623", "patch": "@@ -152,7 +152,7 @@ namespace std\n \t\t    break;\n \t\t}\n \n-\t      if (_M_gcount < __n)\n+\t      if (traits_type::eq_int_type(__c, __eof))\n \t\t__err |= ios_base::eofbit;\n \t    }\n \t  catch(...)\n@@ -217,11 +217,9 @@ namespace std\n \t\t    break;\n \t\t}\n \n-\t      if (_M_gcount == __n)\n-\t\t;\n-\t      else if (traits_type::eq_int_type(__c, __eof))\n+\t      if (traits_type::eq_int_type(__c, __eof))\n \t\t__err |= ios_base::eofbit;\n-\t      else\n+\t      else if (traits_type::eq_int_type(__c, __delim))\n \t\t{\n \t\t  ++_M_gcount;\n \t\t  __sb->sbumpc();\n@@ -432,7 +430,7 @@ namespace std\n \t\t    break;\n \t\t}\n \n-\t      if (_M_gcount < __n)\n+\t      if (traits_type::eq_int_type(__c, __eof))\n \t\t__err |= ios_base::eofbit;\n \t    }\n \t  catch(...)\n@@ -497,11 +495,9 @@ namespace std\n \t\t    break;\n \t\t}\n \n-\t      if (_M_gcount == __n)\n-\t\t;\n-\t      else if (traits_type::eq_int_type(__c, __eof))\n+\t      if (traits_type::eq_int_type(__c, __eof))\n \t\t__err |= ios_base::eofbit;\n-\t      else\n+\t      else if (traits_type::eq_int_type(__c, __delim))\n \t\t{\n \t\t  ++_M_gcount;\n \t\t  __sb->sbumpc();"}, {"sha": "474f6a9d04c8c8ab1d28bf5fc218083c7803fa4f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/4.cc", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a969c1d23b142de977b07ce0d7a018fb4aab3893/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a969c1d23b142de977b07ce0d7a018fb4aab3893/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F4.cc?ref=a969c1d23b142de977b07ce0d7a018fb4aab3893", "patch": "@@ -1,59 +0,0 @@\n-// 2005-01-05  Paolo Carlini  <pcarlini@suse.de>\n-\n-// Copyright (C) 2005 Free Software Foundation\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// 27.6.1.3 unformatted input functions\n-\n-#include <istream>\n-#include <sstream>\n-#include <testsuite_hooks.h>\n-\n-void\n-test01()\n-{\n-  using namespace std;\n-  bool test __attribute__((unused)) = true;\n-\n-  const string str_01(\"Gesang der junglinge\");\n-  ios_base::iostate state1, state2;\n-\n-  stringbuf isbuf_01(str_01, ios_base::in);\n-  istream is_01(&isbuf_01);\n-\n-  state1 = is_01.rdstate();\n-  VERIFY( state1 == ios_base::goodbit );\n-\n-  is_01.ignore(11, 'j');\n-  VERIFY( is_01.gcount() == 11 );\n-  state2 = is_01.rdstate();\n-  VERIFY( state2 == state1 );\n-  VERIFY( is_01.peek() == 'j' );\n-\n-  is_01.ignore(9);\n-  VERIFY( is_01.gcount() == 9 );\n-  state2 = is_01.rdstate();\n-  VERIFY( state2 == state1 );\n-}\n-\n-int \n-main()\n-{\n-  test01();\n-  return 0;\n-}"}, {"sha": "361811754ce18b75b01e62b6310e8435cebfca81", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/4.cc", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a969c1d23b142de977b07ce0d7a018fb4aab3893/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a969c1d23b142de977b07ce0d7a018fb4aab3893/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F4.cc?ref=a969c1d23b142de977b07ce0d7a018fb4aab3893", "patch": "@@ -1,59 +0,0 @@\n-// 2005-01-05  Paolo Carlini  <pcarlini@suse.de>\n-\n-// Copyright (C) 2005 Free Software Foundation\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// 27.6.1.3 unformatted input functions\n-\n-#include <istream>\n-#include <sstream>\n-#include <testsuite_hooks.h>\n-\n-void\n-test01()\n-{\n-  using namespace std;\n-  bool test __attribute__((unused)) = true;\n-\n-  const wstring str_01(L\"Gesang der junglinge\");\n-  ios_base::iostate state1, state2;\n-\n-  wstringbuf isbuf_01(str_01, ios_base::in);\n-  wistream is_01(&isbuf_01);\n-\n-  state1 = is_01.rdstate();\n-  VERIFY( state1 == ios_base::goodbit );\n-\n-  is_01.ignore(11, L'j');\n-  VERIFY( is_01.gcount() == 11 );\n-  state2 = is_01.rdstate();\n-  VERIFY( state2 == state1 );\n-  VERIFY( is_01.peek() == L'j' );\n-\n-  is_01.ignore(9);\n-  VERIFY( is_01.gcount() == 9 );\n-  state2 = is_01.rdstate();\n-  VERIFY( state2 == state1 );\n-}\n-\n-int \n-main()\n-{\n-  test01();\n-  return 0;\n-}"}]}