{"sha": "e445e4b4feb25facd3a61787c51c96eb3bda66f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ0NWU0YjRmZWIyNWZhY2QzYTYxNzg3YzUxYzk2ZWIzYmRhNjZmMQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-06-06T09:23:10Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-06-06T09:23:10Z"}, "message": "MSP430: Emulate 16-bit shifts with rotate insn when src operand is in memory\n\ngcc/ChangeLog\n\n2019-06-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/msp430/msp430.md (ashlhi3): Force shift src operand into a\n\tregister if it is in memory, so the shift can be emulated with a rotate\n\tinstruction.\n\t(ashrhi3): Likewise.\n\t(lshrhi3): Likewise.\n\ngcc/testsuite/ChangeLog\n\n2019-06-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* gcc.target/msp430/emulate-slli.c: New test.\n\t* gcc.target/msp430/emulate-srai.c: New test.\n\t* gcc.target/msp430/emulate-srli.c: New test.\n\nFrom-SVN: r271993", "tree": {"sha": "59ac87cf7b187839129cbec50601df38d59e507f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59ac87cf7b187839129cbec50601df38d59e507f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e445e4b4feb25facd3a61787c51c96eb3bda66f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e445e4b4feb25facd3a61787c51c96eb3bda66f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e445e4b4feb25facd3a61787c51c96eb3bda66f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e445e4b4feb25facd3a61787c51c96eb3bda66f1/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1b2f85f78589a2bece2f874a6021ed746209697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b2f85f78589a2bece2f874a6021ed746209697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b2f85f78589a2bece2f874a6021ed746209697"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "7ddc942bd7a32e6ed855fcf34524196d3a3798be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e445e4b4feb25facd3a61787c51c96eb3bda66f1", "patch": "@@ -1,3 +1,11 @@\n+2019-06-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.md (ashlhi3): Force shift src operand into a\n+\tregister if it is in memory, so the shift can be emulated with a rotate\n+\tinstruction.\n+\t(ashrhi3): Likewise.\n+\t(lshrhi3): Likewise.\n+\n 2019-06-06  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/87954"}, {"sha": "58c1f4edc9cf149ab9bf31c464994d24bba63ad1", "filename": "gcc/config/msp430/msp430.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.md?ref=e445e4b4feb25facd3a61787c51c96eb3bda66f1", "patch": "@@ -756,8 +756,9 @@\n \t\t   (match_operand:HI 2 \"general_operand\")))]\n   \"\"\n   {\n-    if (GET_CODE (operands[1]) == SUBREG\n-        && REG_P (XEXP (operands[1], 0)))\n+    if ((GET_CODE (operands[1]) == SUBREG\n+\t && REG_P (XEXP (operands[1], 0)))\n+\t|| MEM_P (operands[1]))\n       operands[1] = force_reg (HImode, operands[1]);\n     if (msp430x\n         && REG_P (operands[0])\n@@ -828,8 +829,9 @@\n \t\t     (match_operand:HI 2 \"general_operand\")))]\n   \"\"\n   {\n-    if (GET_CODE (operands[1]) == SUBREG\n-        && REG_P (XEXP (operands[1], 0)))\n+    if ((GET_CODE (operands[1]) == SUBREG\n+\t && REG_P (XEXP (operands[1], 0)))\n+\t|| MEM_P (operands[1]))\n       operands[1] = force_reg (HImode, operands[1]);\n     if (msp430x\n         && REG_P (operands[0])\n@@ -916,8 +918,9 @@\n \t\t     (match_operand:HI 2 \"general_operand\")))]\n   \"\"\n   {\n-    if (GET_CODE (operands[1]) == SUBREG\n-        && REG_P (XEXP (operands[1], 0)))\n+    if ((GET_CODE (operands[1]) == SUBREG\n+\t && REG_P (XEXP (operands[1], 0)))\n+\t|| MEM_P (operands[1]))\n       operands[1] = force_reg (HImode, operands[1]);\n     if (msp430x\n         && REG_P (operands[0])"}, {"sha": "c08d228b613cccd9a61b9b496a38dbb777138c2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e445e4b4feb25facd3a61787c51c96eb3bda66f1", "patch": "@@ -1,3 +1,9 @@\n+2019-06-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/emulate-slli.c: New test.\n+\t* gcc.target/msp430/emulate-srai.c: New test.\n+\t* gcc.target/msp430/emulate-srli.c: New test.\n+\n 2019-06-06  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/87954"}, {"sha": "0ed09d55d8c2f51f049faf6f3c8304cf9f2660b3", "filename": "gcc/testsuite/gcc.target/msp430/emulate-slli.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-slli.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-slli.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-slli.c?ref=e445e4b4feb25facd3a61787c51c96eb3bda66f1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+/* { dg-final { scan-assembler-not \"mspabi_slli\" } } */\n+/* { dg-final { scan-assembler \"rlax\" } } */\n+\n+/* Ensure that HImode shifts with source operand in memory are emulated with a\n+   rotate instructions.  */\n+\n+int a;\n+\n+void\n+foo (void)\n+{\n+  a = a << 4;\n+}"}, {"sha": "66291717a020bd7f54aff7645e6befdfad64506c", "filename": "gcc/testsuite/gcc.target/msp430/emulate-srai.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srai.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srai.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srai.c?ref=e445e4b4feb25facd3a61787c51c96eb3bda66f1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+/* { dg-final { scan-assembler-not \"mspabi_srai\" } } */\n+/* { dg-final { scan-assembler \"rrax\" } } */\n+\n+/* Ensure that HImode shifts with source operand in memory are emulated with a\n+   rotate instructions.  */\n+\n+int a;\n+\n+void\n+foo (void)\n+{\n+  a = a >> 4;\n+}"}, {"sha": "c10f30b2779366eaa1acaa806fe22ad0abbd9907", "filename": "gcc/testsuite/gcc.target/msp430/emulate-srli.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srli.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e445e4b4feb25facd3a61787c51c96eb3bda66f1/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srli.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Femulate-srli.c?ref=e445e4b4feb25facd3a61787c51c96eb3bda66f1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+/* { dg-final { scan-assembler-not \"mspabi_srli\" } } */\n+/* { dg-final { scan-assembler \"rrum\" } } */\n+\n+/* Ensure that HImode shifts with source operand in memory are emulated with a\n+   rotate instructions.  */\n+\n+unsigned int a;\n+\n+void\n+foo (void)\n+{\n+  a = a >> 4;\n+}"}]}