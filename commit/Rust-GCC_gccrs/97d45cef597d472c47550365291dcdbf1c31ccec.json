{"sha": "97d45cef597d472c47550365291dcdbf1c31ccec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdkNDVjZWY1OTdkNDcyYzQ3NTUwMzY1MjkxZGNkYmYxYzMxY2NlYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-06-01T12:09:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-06-01T12:09:16Z"}, "message": "re PR middle-end/43853 (FAIL: gcc.dg/lto/20090126-1 c_lto_20090126-1_0.o-c_lto_20090126-1_0.o)\n\n2010-06-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/43853\n\t* ipa-pure-const.c (get_function_state): Hand back varying state\n\tif we do not have one.\n\t(has_function_state): New function.\n\t(duplicate_node_data): Adjust.\n\t(remove_node_data): Likewise.\n\t(pure_const_write_summary): Likewise.\n\t(propagate): Likewise.  Fix typo.\n\nFrom-SVN: r160099", "tree": {"sha": "c297be68d5ea3a6f11285be55676f17deb42f50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c297be68d5ea3a6f11285be55676f17deb42f50b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97d45cef597d472c47550365291dcdbf1c31ccec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d45cef597d472c47550365291dcdbf1c31ccec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d45cef597d472c47550365291dcdbf1c31ccec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d45cef597d472c47550365291dcdbf1c31ccec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "e3563dee6819ce9d319f19ea4236b02386fe850f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d45cef597d472c47550365291dcdbf1c31ccec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d45cef597d472c47550365291dcdbf1c31ccec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97d45cef597d472c47550365291dcdbf1c31ccec", "patch": "@@ -1,3 +1,14 @@\n+2010-06-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/43853\n+\t* ipa-pure-const.c (get_function_state): Hand back varying state\n+\tif we do not have one.\n+\t(has_function_state): New function.\n+\t(duplicate_node_data): Adjust.\n+\t(remove_node_data): Likewise.\n+\t(pure_const_write_summary): Likewise.\n+\t(propagate): Likewise.  Fix typo.\n+\n 2010-06-01  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-cfg.c (verify_stmt): Do not skip could_throw test."}, {"sha": "3bea566b51070b433ea03590fcfee888062e95f1", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d45cef597d472c47550365291dcdbf1c31ccec/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d45cef597d472c47550365291dcdbf1c31ccec/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=97d45cef597d472c47550365291dcdbf1c31ccec", "patch": "@@ -186,14 +186,28 @@ finish_state (void)\n }\n \n \n+/* Return true if we have a function state for NODE.  */\n+\n+static inline bool\n+has_function_state (struct cgraph_node *node)\n+{\n+  if (!funct_state_vec\n+      || VEC_length (funct_state, funct_state_vec) <= (unsigned int)node->uid)\n+    return false;\n+  return VEC_index (funct_state, funct_state_vec, node->uid) != NULL;\n+}\n+\n /* Return the function state from NODE.  */\n \n static inline funct_state\n get_function_state (struct cgraph_node *node)\n {\n+  static struct funct_state_d varying\n+    = { IPA_NEITHER, IPA_NEITHER, true, true, true };\n   if (!funct_state_vec\n       || VEC_length (funct_state, funct_state_vec) <= (unsigned int)node->uid)\n-    return NULL;\n+    /* We might want to put correct previously_known state into varying.  */\n+    return &varying;\n   return VEC_index (funct_state, funct_state_vec, node->uid);\n }\n \n@@ -712,10 +726,10 @@ static void\n duplicate_node_data (struct cgraph_node *src, struct cgraph_node *dst,\n \t \t     void *data ATTRIBUTE_UNUSED)\n {\n-  if (get_function_state (src))\n+  if (has_function_state (src))\n     {\n       funct_state l = XNEW (struct funct_state_d);\n-      gcc_assert (!get_function_state (dst));\n+      gcc_assert (!has_function_state (dst));\n       memcpy (l, get_function_state (src), sizeof (*l));\n       set_function_state (dst, l);\n     }\n@@ -726,7 +740,7 @@ duplicate_node_data (struct cgraph_node *src, struct cgraph_node *dst,\n static void\n remove_node_data (struct cgraph_node *node, void *data ATTRIBUTE_UNUSED)\n {\n-  if (get_function_state (node))\n+  if (has_function_state (node))\n     {\n       free (get_function_state (node));\n       set_function_state (node, NULL);\n@@ -799,7 +813,7 @@ pure_const_write_summary (cgraph_node_set set,\n   for (csi = csi_start (set); !csi_end_p (csi); csi_next (&csi))\n     {\n       node = csi_node (csi);\n-      if (node->analyzed && get_function_state (node) != NULL)\n+      if (node->analyzed && has_function_state (node))\n \tcount++;\n     }\n \n@@ -809,7 +823,7 @@ pure_const_write_summary (cgraph_node_set set,\n   for (csi = csi_start (set); !csi_end_p (csi); csi_next (&csi))\n     {\n       node = csi_node (csi);\n-      if (node->analyzed && get_function_state (node) != NULL)\n+      if (node->analyzed && has_function_state (node))\n \t{\n \t  struct bitpack_d *bp;\n \t  funct_state fs;\n@@ -1041,8 +1055,8 @@ propagate (void)\n \t\t\t       pure_const_names[y_l->pure_const_state],\n \t\t\t       y_l->looping);\n \t\t    }\n-\t\t  else if (y_l->pure_const_state > ECF_PURE\n-\t\t\t   && cgraph_edge_cannot_lead_to_return (e))\n+\t\t  if (y_l->pure_const_state > ECF_PURE\n+\t\t      && cgraph_edge_cannot_lead_to_return (e))\n \t\t    {\n \t\t      if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t\t{\t\n@@ -1259,7 +1273,8 @@ propagate (void)\n \t  free (node->aux);\n \t  node->aux = NULL;\n \t}\n-      if (cgraph_function_body_availability (node) >= AVAIL_OVERWRITABLE)\n+      if (cgraph_function_body_availability (node) >= AVAIL_OVERWRITABLE\n+\t  && has_function_state (node))\n \tfree (get_function_state (node));\n     }\n "}]}