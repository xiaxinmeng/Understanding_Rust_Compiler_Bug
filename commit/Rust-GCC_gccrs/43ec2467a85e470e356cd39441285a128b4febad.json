{"sha": "43ec2467a85e470e356cd39441285a128b4febad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNlYzI0NjdhODVlNDcwZTM1NmNkMzk0NDEyODVhMTI4YjRmZWJhZA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-02-14T23:55:22Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-02-14T23:55:22Z"}, "message": "re PR tree-optimization/26209 (Specific code causes g++ 4.1.0 dominance ICE when compiled with -O3)\n\n\tPR tree-optimization/26209\n\t* tree-ssa-loop.c (pass_scev_cprop): Add TODO_cleanup_cfg.\n\t* tree-cfgcleanup.c (cleanup_control_flow): Remove dead\n\teh edges.\n\t* tree-cfg.c (replace_uses_by): Do not alter cfg.\n\nFrom-SVN: r110999", "tree": {"sha": "3c6b81a1f48e064bd66b687c972d0a714dd6b1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c6b81a1f48e064bd66b687c972d0a714dd6b1b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ec2467a85e470e356cd39441285a128b4febad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ec2467a85e470e356cd39441285a128b4febad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ec2467a85e470e356cd39441285a128b4febad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ec2467a85e470e356cd39441285a128b4febad/comments", "author": null, "committer": null, "parents": [{"sha": "0499513f3b8f457a62baed6473d7b26ee81edcb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0499513f3b8f457a62baed6473d7b26ee81edcb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0499513f3b8f457a62baed6473d7b26ee81edcb8"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "6312500c0ec3830709a8e99a3c290808e1d10270", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ec2467a85e470e356cd39441285a128b4febad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ec2467a85e470e356cd39441285a128b4febad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43ec2467a85e470e356cd39441285a128b4febad", "patch": "@@ -1,3 +1,11 @@\n+2006-02-14  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/26209\n+\t* tree-ssa-loop.c (pass_scev_cprop): Add TODO_cleanup_cfg.\n+\t* tree-cfgcleanup.c (cleanup_control_flow): Remove dead\n+\teh edges.\n+\t* tree-cfg.c (replace_uses_by): Do not alter cfg.\n+\n 2006-02-14  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/23670\n@@ -8,7 +16,7 @@\n \n 2006-02-14  Roger Sayle  <roger@eyesopen.com>\n \n-        * dojump.c (do_compare_rtx_and_jump): Also handle multi-word GTU\n+\t* dojump.c (do_compare_rtx_and_jump): Also handle multi-word GTU\n \tand GEU.\n \n 2006-02-14  Adam Nemet  <anemet@caviumnetworks.com>"}, {"sha": "60dacbd5fc8f9e0ff55acb3f6ff3c9ba4e8afd54", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ec2467a85e470e356cd39441285a128b4febad/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ec2467a85e470e356cd39441285a128b4febad/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=43ec2467a85e470e356cd39441285a128b4febad", "patch": "@@ -1347,10 +1347,7 @@ replace_uses_by (tree name, tree val)\n       if (TREE_CODE (rhs) == ADDR_EXPR)\n \trecompute_tree_invariant_for_addr_expr (rhs);\n \n-      /* If the statement could throw and now cannot, we need to prune cfg.  */\n-      if (maybe_clean_or_replace_eh_stmt (stmt, stmt))\n-\ttree_purge_dead_eh_edges (bb_for_stmt (stmt));\n-\n+      maybe_clean_or_replace_eh_stmt (stmt, stmt);\n       mark_new_vars_to_rename (stmt);\n     }\n "}, {"sha": "dc0380aefc207dd53a9a22f27b9db582e474dfa9", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ec2467a85e470e356cd39441285a128b4febad/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ec2467a85e470e356cd39441285a128b4febad/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=43ec2467a85e470e356cd39441285a128b4febad", "patch": "@@ -158,19 +158,24 @@ cleanup_control_flow (void)\n     {\n       bsi = bsi_last (bb);\n \n+      /* If the last statement of the block could throw and now cannot,\n+\t we need to prune cfg.  */\n+      tree_purge_dead_eh_edges (bb);\n+\n       if (bsi_end_p (bsi))\n \tcontinue;\n \n       stmt = bsi_stmt (bsi);\n+\n       if (TREE_CODE (stmt) == COND_EXPR\n \t  || TREE_CODE (stmt) == SWITCH_EXPR)\n \tretval |= cleanup_control_expr_graph (bb, bsi);\n-\n       /* If we had a computed goto which has a compile-time determinable\n \t destination, then we can eliminate the goto.  */\n-      if (TREE_CODE (stmt) == GOTO_EXPR\n-\t  && TREE_CODE (GOTO_DESTINATION (stmt)) == ADDR_EXPR\n-\t  && TREE_CODE (TREE_OPERAND (GOTO_DESTINATION (stmt), 0)) == LABEL_DECL)\n+      else if (TREE_CODE (stmt) == GOTO_EXPR\n+\t       && TREE_CODE (GOTO_DESTINATION (stmt)) == ADDR_EXPR\n+\t       && (TREE_CODE (TREE_OPERAND (GOTO_DESTINATION (stmt), 0))\n+\t\t   == LABEL_DECL))\n \t{\n \t  edge e;\n \t  tree label;\n@@ -214,7 +219,7 @@ cleanup_control_flow (void)\n \n       /* Check for indirect calls that have been turned into\n \t noreturn calls.  */\n-      if (noreturn_call_p (stmt) && remove_fallthru_edge (bb->succs))\n+      else if (noreturn_call_p (stmt) && remove_fallthru_edge (bb->succs))\n \t{\n \t  free_dominance_info (CDI_DOMINATORS);\n \t  retval = true;"}, {"sha": "e128c36808425b8d9e04acc57fe58682f9095132", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ec2467a85e470e356cd39441285a128b4febad/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ec2467a85e470e356cd39441285a128b4febad/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=43ec2467a85e470e356cd39441285a128b4febad", "patch": "@@ -302,7 +302,8 @@ struct tree_opt_pass pass_scev_cprop =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func | TODO_update_ssa_only_virtuals,\n+  TODO_dump_func | TODO_cleanup_cfg\n+    | TODO_update_ssa_only_virtuals,\n \t\t\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };"}]}