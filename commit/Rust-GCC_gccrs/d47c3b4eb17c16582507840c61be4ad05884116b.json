{"sha": "d47c3b4eb17c16582507840c61be4ad05884116b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3YzNiNGViMTdjMTY1ODI1MDc4NDBjNjFiZTRhZDA1ODg0MTE2Yg==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2008-08-10T04:54:37Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2008-08-10T04:54:37Z"}, "message": "re PR middle-end/36238 (ICE in reg_or_subregno, at jump.c:1730)\n\n2008-08-09  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR middle-end/36238\n        * reload1.c (gen_reload): Guard calls to get_secondary_mem\n        for memory subregs.\n\n2008-08-09  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR middle-end/36238\n        * gcc.c-torture/compile/pr36238.c: New testcase.\n\nFrom-SVN: r138924", "tree": {"sha": "c149bf8c75bc08c37cb16f001d258a57a1c07bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c149bf8c75bc08c37cb16f001d258a57a1c07bdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d47c3b4eb17c16582507840c61be4ad05884116b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47c3b4eb17c16582507840c61be4ad05884116b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47c3b4eb17c16582507840c61be4ad05884116b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47c3b4eb17c16582507840c61be4ad05884116b/comments", "author": null, "committer": null, "parents": [{"sha": "34c66dafcf2dd526e905e53d30828101fecf7eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c66dafcf2dd526e905e53d30828101fecf7eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c66dafcf2dd526e905e53d30828101fecf7eae"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "5451f9506066aaba7e86354e82b00f77ad9041a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d47c3b4eb17c16582507840c61be4ad05884116b", "patch": "@@ -1,3 +1,9 @@\n+2008-08-09  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/36238\n+\t* reload1.c (gen_reload): Guard calls to get_secondary_mem\n+\tfor memory subregs.\n+\n 2008-08-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/37055"}, {"sha": "3abd6b24e33b2b7a3754313eea5faae55673250f", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d47c3b4eb17c16582507840c61be4ad05884116b", "patch": "@@ -8009,9 +8009,11 @@ gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n \n #ifdef SECONDARY_MEMORY_NEEDED\n   /* If we need a memory location to do the move, do it that way.  */\n-  else if ((REG_P (in) || GET_CODE (in) == SUBREG)\n+  else if ((REG_P (in)\n+            || (GET_CODE (in) == SUBREG && REG_P (SUBREG_REG (in))))\n \t   && reg_or_subregno (in) < FIRST_PSEUDO_REGISTER\n-\t   && (REG_P (out) || GET_CODE (out) == SUBREG)\n+\t   && (REG_P (out)\n+\t       || (GET_CODE (out) == SUBREG && REG_P (SUBREG_REG (out))))\n \t   && reg_or_subregno (out) < FIRST_PSEUDO_REGISTER\n \t   && SECONDARY_MEMORY_NEEDED (REGNO_REG_CLASS (reg_or_subregno (in)),\n \t\t\t\t       REGNO_REG_CLASS (reg_or_subregno (out)),"}, {"sha": "c73e8bc9d5829a4619d8fc33ec91ee52100e3103", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d47c3b4eb17c16582507840c61be4ad05884116b", "patch": "@@ -1,3 +1,8 @@\n+2008-08-09  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/36238\n+\t* gcc.c-torture/compile/pr36238.c: New testcase.\n+\n 2008-08-09  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* lib/target-supports.exp (check_profiling_available): Return false"}, {"sha": "358e1ff5e28af5df6b4632e4632a2378dbf7f762", "filename": "gcc/testsuite/gcc.c-torture/compile/pr36238.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36238.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47c3b4eb17c16582507840c61be4ad05884116b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36238.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36238.c?ref=d47c3b4eb17c16582507840c61be4ad05884116b", "patch": "@@ -0,0 +1,27 @@\n+typedef signed char int8_t;\n+typedef int int32_t;\n+typedef unsigned short int uint16_t;\n+typedef unsigned int uint32_t;\n+int32_t g_19 = 0x67F5AEE0L;\n+uint16_t g_169 = 0x89E3L;\n+const volatile uint32_t g_258 = 0x63AFEBCAL;\n+int32_t func_11;\n+int32_t func_29;\n+int32_t\n+func_5 (int32_t p_6, int32_t p_8, uint16_t p_10)\n+{\n+  if (lshift_s_s (func_11, p_8))\n+    {\n+      int8_t l_18 = 0x6FL;\n+      if (l_18)\n+        for (p_6 = -14;; g_19 += 6)\n+          {\n+            int32_t l_283 = -1L;\n+            if (((0x45L / 1L) > 0x07414511L * 1L / 1L > func_29) / 1L)\n+              for (p_8 = 6;; p_8 -= 5)\n+                l_283 = 0xC90541F7L;\n+          }\n+    }\n+  else\n+    g_169 = g_258;\n+}"}]}