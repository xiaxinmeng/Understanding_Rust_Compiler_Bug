{"sha": "e1496917f1a8651786675c13c702de19518cf8e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE0OTY5MTdmMWE4NjUxNzg2Njc1YzEzYzcwMmRlMTk1MThjZjhlNA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-01-10T21:46:42Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-01-10T21:46:42Z"}, "message": "re PR middle-end/42393 ([graphite]  internal compiler error: in check_loop_closed_ssa_use)\n\nFix PR42393.\n\n2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/42393\n\t* graphite-clast-to-gimple.c: Fix formatting.\n\t* sese.c (defined_in_loop_p): Renamed name_defined_in_loop_p.\n\t(expr_defined_in_loop_p): New.\n\t(add_loop_exit_phis): Also handle full expressions: remove from\n\tthe rename_map the expressions defined in the loop that we're closing.\n\n\t* testsuite/gfortran.dg/graphite/pr42393-1.f90: New.\n\t* testsuite/gfortran.dg/graphite/pr42393.f90: Add new flags\n\t-fno-loop-block -fno-loop-interchange -fno-loop-strip-mine to also\n\tmake this testcase useful in the Graphite branch.\n\nFrom-SVN: r155795", "tree": {"sha": "0e6f539a020e4f9c2e0602ac03b56ada5e952081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e6f539a020e4f9c2e0602ac03b56ada5e952081"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1496917f1a8651786675c13c702de19518cf8e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1496917f1a8651786675c13c702de19518cf8e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1496917f1a8651786675c13c702de19518cf8e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1496917f1a8651786675c13c702de19518cf8e4/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dadcb84c8f3e312a42496ba959e9568673823b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadcb84c8f3e312a42496ba959e9568673823b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dadcb84c8f3e312a42496ba959e9568673823b34"}], "stats": {"total": 115, "additions": 92, "deletions": 23}, "files": [{"sha": "9ea58261e22f4a404f03c85c9bf1b52dd504fe38", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=e1496917f1a8651786675c13c702de19518cf8e4", "patch": "@@ -1,3 +1,17 @@\n+2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/42393\n+\t* graphite-clast-to-gimple.c: Fix formatting.\n+\t* sese.c (defined_in_loop_p): Renamed name_defined_in_loop_p.\n+\t(expr_defined_in_loop_p): New.\n+\t(add_loop_exit_phis): Also handle full expressions: remove from\n+\tthe rename_map the expressions defined in the loop that we're closing.\n+\n+\t* testsuite/gfortran.dg/graphite/pr42393-1.f90: New.\n+\t* testsuite/gfortran.dg/graphite/pr42393.f90: Add new flags\n+\t-fno-loop-block -fno-loop-interchange -fno-loop-strip-mine to also\n+\tmake this testcase useful in the Graphite branch.\n+\n 2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-scop-detection.c (exclude_component_ref): Removed."}, {"sha": "bbc77d21a48bfc29ed98003178bb0c80a5caa2c7", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=e1496917f1a8651786675c13c702de19518cf8e4", "patch": "@@ -812,10 +812,11 @@ graphite_create_new_loop_guard (sese region, edge entry_edge,\n    - PARAMS_INDEX connects the cloog parameters with the gimple parameters in\n      the sese region.  */\n static edge\n-translate_clast_for_loop (sese region, loop_p context_loop, struct clast_for *stmt, edge next_e,\n-\t\t     htab_t rename_map, VEC (tree, heap) **newivs,\n-\t\t     htab_t newivs_index, htab_t bb_pbb_mapping, int level,\n-\t\t     htab_t params_index)\n+translate_clast_for_loop (sese region, loop_p context_loop,\n+\t\t\t  struct clast_for *stmt, edge next_e,\n+\t\t\t  htab_t rename_map, VEC (tree, heap) **newivs,\n+\t\t\t  htab_t newivs_index, htab_t bb_pbb_mapping,\n+\t\t\t  int level, htab_t params_index)\n {\n   struct loop *loop = graphite_create_new_loop (region, next_e, stmt,\n  \t\t\t\t\t\tcontext_loop, newivs,\n@@ -858,8 +859,8 @@ translate_clast_for_loop (sese region, loop_p context_loop, struct clast_for *st\n    - PARAMS_INDEX connects the cloog parameters with the gimple parameters in\n      the sese region.  */\n static edge\n-translate_clast_for (sese region, loop_p context_loop, struct clast_for *stmt, edge next_e,\n-\t\t     htab_t rename_map, VEC (tree, heap) **newivs,\n+translate_clast_for (sese region, loop_p context_loop, struct clast_for *stmt,\n+\t\t     edge next_e, htab_t rename_map, VEC (tree, heap) **newivs,\n \t\t     htab_t newivs_index, htab_t bb_pbb_mapping, int level,\n \t\t     htab_t params_index)\n {\n@@ -875,7 +876,8 @@ translate_clast_for (sese region, loop_p context_loop, struct clast_for *stmt, e\n \t\t\t\t     eq_rename_map_elts, free);\n   htab_traverse (rename_map, copy_renames, before_guard);\n \n-  next_e = translate_clast_for_loop (region, context_loop, stmt, true_e, rename_map, newivs,\n+  next_e = translate_clast_for_loop (region, context_loop, stmt, true_e,\n+\t\t\t\t     rename_map, newivs,\n \t\t\t\t     newivs_index, bb_pbb_mapping, level,\n \t\t\t\t     params_index);\n "}, {"sha": "50ac698ec0f7cb6acf07988c958988b2d00459e7", "filename": "gcc/sese.c", "status": "modified", "additions": 44, "deletions": 15, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=e1496917f1a8651786675c13c702de19518cf8e4", "patch": "@@ -1037,13 +1037,41 @@ get_false_edge_from_guard_bb (basic_block bb)\n /* Returns true when NAME is defined in LOOP.  */\n \n static bool\n-defined_in_loop_p (tree name, loop_p loop)\n+name_defined_in_loop_p (tree name, loop_p loop)\n {\n   gimple stmt = SSA_NAME_DEF_STMT (name);\n \n   return (gimple_bb (stmt)->loop_father == loop);\n }\n \n+/* Returns true when EXPR contains SSA_NAMEs defined in LOOP.  */\n+\n+static bool\n+expr_defined_in_loop_p (tree expr, loop_p loop)\n+{\n+  switch (TREE_CODE_LENGTH (TREE_CODE (expr)))\n+    {\n+    case 3:\n+      return expr_defined_in_loop_p (TREE_OPERAND (expr, 0), loop)\n+\t|| expr_defined_in_loop_p (TREE_OPERAND (expr, 1), loop)\n+\t|| expr_defined_in_loop_p (TREE_OPERAND (expr, 2), loop);\n+\n+    case 2:\n+      return expr_defined_in_loop_p (TREE_OPERAND (expr, 0), loop)\n+\t|| expr_defined_in_loop_p (TREE_OPERAND (expr, 1), loop);\n+\n+    case 1:\n+      return expr_defined_in_loop_p (TREE_OPERAND (expr, 0), loop);\n+\n+    case 0:\n+      return TREE_CODE (expr) == SSA_NAME\n+\t&& name_defined_in_loop_p (expr, loop);\n+\n+    default:\n+      return false;\n+    }\n+}\n+\n /* Returns the gimple statement that uses NAME outside the loop it is\n    defined in, returns NULL if there is no such loop close phi node.\n    An invariant of the loop closed SSA form is that the only use of a\n@@ -1100,26 +1128,34 @@ add_loop_exit_phis (void **slot, void *data)\n   struct rename_map_elt_s *entry;\n   alep_p a;\n   loop_p loop;\n-  tree expr, new_name;\n+  tree expr, new_name, old_name;\n   bool def_in_loop_p, used_outside_p, need_close_phi_p;\n   gimple old_close_phi;\n \n-  if (!slot || !data)\n+  if (!slot || !*slot || !data)\n     return 1;\n \n   entry = (struct rename_map_elt_s *) *slot;\n   a = (alep_p) data;\n   loop = a->loop;\n-  expr = entry->expr;\n+  new_name = expr = entry->expr;\n+  old_name = entry->old_name;\n+\n+  def_in_loop_p = expr_defined_in_loop_p (expr, loop);\n+  if (!def_in_loop_p)\n+    return 1;\n+\n+  /* Remove the old rename from the map when the expression is defined\n+     in the loop that we're closing.  */\n+  free (*slot);\n+  *slot = NULL;\n \n   if (TREE_CODE (expr) != SSA_NAME)\n     return 1;\n \n-  new_name = expr;\n-  def_in_loop_p = defined_in_loop_p (new_name, loop);\n-  old_close_phi = alive_after_loop (entry->old_name);\n+  old_close_phi = alive_after_loop (old_name);\n   used_outside_p = (old_close_phi != NULL);\n-  need_close_phi_p = (def_in_loop_p && used_outside_p\n+  need_close_phi_p = (used_outside_p\n \t\t      && close_phi_not_yet_inserted_p (loop, new_name));\n \n   /* Insert a loop close phi node.  */\n@@ -1136,13 +1172,6 @@ add_loop_exit_phis (void **slot, void *data)\n \t\t\t\t\t new_res));\n     }\n \n-  /* Remove the old rename from the map.  */\n-  if (def_in_loop_p && *slot)\n-    {\n-      free (*slot);\n-      *slot = NULL;\n-    }\n-\n   return 1;\n }\n "}, {"sha": "fb62e20f45c8d4e7e92f3c4bf6ef10d503d06a65", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42393-1.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90?ref=e1496917f1a8651786675c13c702de19518cf8e4", "patch": "@@ -0,0 +1,24 @@\n+! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine\" }\n+\n+MODULE beta_gamma_psi\n+  INTEGER, PARAMETER :: dp=KIND(0.0D0)\n+CONTAINS\n+  FUNCTION basym () RESULT(fn_val)\n+    REAL(dp) :: b0(21), bsum, d(21)\n+    DO n = 2, num, 2\n+       DO i = n, np1\n+          b0(1) = 1\n+          DO m = 2, i\n+             mm1 = m - 1\n+             DO j = 1, mm1\n+                bsum = bsum + b0(j)\n+             END DO\n+             b0(m) = bsum\n+          END DO\n+          d(i) = -b0(i)\n+       END DO\n+       sum = sum + d(n)\n+    END DO\n+    fn_val = sum\n+  END FUNCTION basym\n+END MODULE beta_gamma_psi"}, {"sha": "1fc708ef9673c5d1bd97ced5737227eeb82e54b7", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42393.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1496917f1a8651786675c13c702de19518cf8e4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393.f90?ref=e1496917f1a8651786675c13c702de19518cf8e4", "patch": "@@ -1,4 +1,4 @@\n-! { dg-options \"-fgraphite-identity -O2\" }\n+! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine\" }\n \n MODULE beta_gamma_psi\n   INTEGER, PARAMETER :: dp=KIND(0.0D0)"}]}