{"sha": "74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRmYzJhMmJiMzliOGRjZjVkZWI4MWEyNDQwMWE5MWY2ZDdmNjQ3Zg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2018-02-28T20:00:03Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2018-02-28T20:00:03Z"}, "message": "config.gcc (powerpc-ibm-aix7.1.*): New stanza.\n\n* config.gcc (powerpc-ibm-aix7.1.*): New stanza.\n(powerpc-ibm-aix[789]*): Default to AIX 7.2.\n* config/rs6000/aix71.h (TARGET_DEFAULT): Revert to Power4 ISA.\n* config/rs6000/aix72.h: New file.\n\nFrom-SVN: r258082", "tree": {"sha": "3481a7f05d7cbd3a8fdbe851c8d78c915bf7a95a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3481a7f05d7cbd3a8fdbe851c8d78c915bf7a95a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99f6220a0ca812a6c2f3c766f25f83b8a68f3589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f6220a0ca812a6c2f3c766f25f83b8a68f3589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f6220a0ca812a6c2f3c766f25f83b8a68f3589"}], "stats": {"total": 256, "additions": 254, "deletions": 2}, "files": [{"sha": "7d9b0e14005b6a7622bb30506aa8fea9c20f21c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "patch": "@@ -1,3 +1,10 @@\n+2018-02-28  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config.gcc (powerpc-ibm-aix7.1.*): New stanza.\n+\t(powerpc-ibm-aix[789]*): Default to AIX 7.2.\n+\t* config/rs6000/aix71.h (TARGET_DEFAULT): Revert to Power4 ISA.\n+\t* config/rs6000/aix72.h: New file.\n+\n 2018-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimple-ssa-warn-restrict.c (maybe_diag_overlap): Use warning_n"}, {"sha": "2156c6bbbfd750cddd1f90b7292a92c14fbe2e10", "filename": "gcc/config.gcc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "patch": "@@ -2648,7 +2648,7 @@ rs6000-ibm-aix6.* | powerpc-ibm-aix6.*)\n \textra_headers=altivec.h\n \tdefault_use_cxa_atexit=yes\n \t;;\n-rs6000-ibm-aix[789].* | powerpc-ibm-aix[789].*)\n+rs6000-ibm-aix7.1.* | powerpc-ibm-aix7.1.*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix71.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n@@ -2658,6 +2658,16 @@ rs6000-ibm-aix[789].* | powerpc-ibm-aix[789].*)\n \textra_headers=\"altivec.h amo.h\"\n \tdefault_use_cxa_atexit=yes\n \t;;\n+rs6000-ibm-aix[789].* | powerpc-ibm-aix[789].*)\n+\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix72.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n+\ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n+\textra_options=\"${extra_options} rs6000/aix64.opt\"\n+\tuse_collect2=yes\n+\tthread_file='aix'\n+\tuse_gcc_stdint=wrap\n+\textra_headers=\"altivec.h amo.h\"\n+\tdefault_use_cxa_atexit=yes\n+\t;;\n rl78-*-elf*)\n \ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n \ttarget_has_targetm_common=no"}, {"sha": "8150552ebf38b4cbe6c3dc7c724c8bd158a85b35", "filename": "gcc/config/rs6000/aix71.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2Fconfig%2Frs6000%2Faix71.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2Fconfig%2Frs6000%2Faix71.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix71.h?ref=74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "patch": "@@ -132,7 +132,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef RS6000_CPU\n \n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT ISA_2_5_MASKS_EMBEDDED\n+#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT | MASK_MFCRF)\n \n #undef  PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_POWER7"}, {"sha": "a4c4e6d7e0d727a6baf56dbe20ae1a66c914ffc2", "filename": "gcc/config/rs6000/aix72.h", "status": "added", "additions": 235, "deletions": 0, "changes": 235, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2Fconfig%2Frs6000%2Faix72.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f/gcc%2Fconfig%2Frs6000%2Faix72.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix72.h?ref=74fc2a2bb39b8dcf5deb81a24401a91f6d7f647f", "patch": "@@ -0,0 +1,235 @@\n+/* Definitions of target machine for GNU compiler,\n+   for IBM RS/6000 POWER running AIX V7.2.\n+   Copyright (C) 2002-2017 Free Software Foundation, Inc.\n+   Contributed by David Edelsohn (edelsohn@gnu.org).\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to\n+   get control in TARGET_OPTION_OVERRIDE.  */\n+\n+#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_isa_flags |= OPTION_MASK_POWERPC64;\t\t\t\\\n+      warning (0, \"-maix64 requires PowerPC64 architecture remain enabled\"); \\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_SOFT_FLOAT && TARGET_LONG_DOUBLE_128)\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_long_double_type_size = 64;\t\t\t\t\\\n+      if (global_options_set.x_rs6000_long_double_type_size)\t\t\\\n+\twarning (0, \"soft-float and long-double-128 are incompatible\");\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_POWERPC64 && ! TARGET_64BIT)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported\"); \\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if ((rs6000_isa_flags_explicit\t\t\t\t\t\\\n+       & OPTION_MASK_MINIMAL_TOC) != 0)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (global_options_set.x_rs6000_current_cmodel\t\t\t\\\n+\t  && rs6000_current_cmodel != CMODEL_SMALL)\t\t\t\\\n+\terror (\"-mcmodel incompatible with other toc options\"); \t\\\n+      SET_CMODEL (CMODEL_SMALL);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (rs6000_current_cmodel != CMODEL_SMALL)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      TARGET_NO_FP_IN_TOC = 0;\t\t\t\t\t\t\\\n+      TARGET_NO_SUM_IN_TOC = 0;\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (rs6000_current_cmodel == CMODEL_MEDIUM)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_current_cmodel = CMODEL_LARGE;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \"-u %{maix64:-a64 %{!mcpu*:-mppc64}} %(asm_cpu)\"\n+\n+/* Common ASM definitions used by ASM_SPEC amongst the various targets for\n+   handling -mcpu=xxx switches.  There is a parallel list in driver-rs6000.c to\n+   provide the default assembler options if the user uses -mcpu=native, so if\n+   you make changes here, make them there also.  */\n+#undef ASM_CPU_SPEC\n+#define ASM_CPU_SPEC \\\n+\"%{!mcpu*: %{!maix64: \\\n+  %{mpowerpc64: -mppc64} \\\n+  %{maltivec: -m970} \\\n+  %{!maltivec: %{!mpowerpc64: %(asm_default)}}}} \\\n+%{mcpu=native: %(asm_cpu_native)} \\\n+%{mcpu=power3: -m620} \\\n+%{mcpu=power4: -mpwr4} \\\n+%{mcpu=power5: -mpwr5} \\\n+%{mcpu=power5+: -mpwr5x} \\\n+%{mcpu=power6: -mpwr6} \\\n+%{mcpu=power6x: -mpwr6} \\\n+%{mcpu=power7: -mpwr7} \\\n+%{mcpu=power8: -mpwr8} \\\n+%{mcpu=power9: -mpwr9} \\\n+%{mcpu=powerpc: -mppc} \\\n+%{mcpu=rs64a: -mppc} \\\n+%{mcpu=603: -m603} \\\n+%{mcpu=603e: -m603} \\\n+%{mcpu=604: -m604} \\\n+%{mcpu=604e: -m604} \\\n+%{mcpu=620: -m620} \\\n+%{mcpu=630: -m620} \\\n+%{mcpu=970: -m970} \\\n+%{mcpu=G5: -m970} \\\n+%{mvsx: %{!mcpu*: -mpwr7}} \\\n+-many\"\n+\n+#undef\tASM_DEFAULT_SPEC\n+#define ASM_DEFAULT_SPEC \"-mpwr4\"\n+\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()     \\\n+  do                                 \\\n+    {                                \\\n+      builtin_define (\"_AIX43\");     \\\n+      builtin_define (\"_AIX51\");     \\\n+      builtin_define (\"_AIX52\");     \\\n+      builtin_define (\"_AIX53\");     \\\n+      builtin_define (\"_AIX61\");     \\\n+      builtin_define (\"_AIX71\");     \\\n+      builtin_define (\"_AIX72\");     \\\n+      TARGET_OS_AIX_CPP_BUILTINS (); \\\n+    }                                \\\n+  while (0)\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\t\\\n+  %{ansi: -D_ANSI_C_SOURCE}\t\t\t\\\n+  %{maix64: -D__64BIT__}\t\t\t\\\n+  %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n+  %{pthread: -D_THREAD_SAFE}\"\n+\n+/* The GNU C++ standard library requires that these macros be \n+   defined.  Synchronize with libstdc++ os_defines.h.  */\n+#undef CPLUSPLUS_CPP_SPEC                       \n+#define CPLUSPLUS_CPP_SPEC\t\t\t\\\n+  \"-D_ALL_SOURCE -D__COMPATMATH__\t\t\\\n+   %{maix64: -D__64BIT__}\t\t\t\\\n+   %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n+   %{pthread: -D_THREAD_SAFE}\"\n+\n+#define RS6000_CPU(NAME, CPU, FLAGS)\n+#include \"rs6000-cpus.def\"\n+#undef RS6000_CPU\n+\n+#undef  TARGET_DEFAULT\n+#define TARGET_DEFAULT ISA_2_6_MASKS_EMBEDDED\n+\n+#undef  PROCESSOR_DEFAULT\n+#define PROCESSOR_DEFAULT PROCESSOR_POWER7\n+#undef  PROCESSOR_DEFAULT64\n+#define PROCESSOR_DEFAULT64 PROCESSOR_POWER7\n+\n+/* AIX 7.2 kernel and assembler have necessary support for Altivec and VSX.  */\n+#undef OS_MISSING_ALTIVEC\n+\n+/* Define this macro as a C expression for the initializer of an\n+   array of string to tell the driver program which options are\n+   defaults for this target and thus do not need to be handled\n+   specially when using `MULTILIB_OPTIONS'.\n+\n+   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n+   the target makefile fragment or if none of the options listed in\n+   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n+\n+#undef\tMULTILIB_DEFAULTS\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{pg:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n+   %{p:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n+   %{!maix64:%{!shared:%{g*:-lg}}}\\\n+   %{fprofile-arcs|fprofile-generate*|coverage:-lpthreads}\\\n+   %{mpe:-L%R/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n+   %{pthread:-lpthreads} -lc\"\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro}\\\n+   %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n+   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n+   %{mpe:-binitfini:poe_remote_main}\"\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{!shared:\\\n+   %{maix64:%{pg:gcrt0_64%O%s;:%{p:mcrt0_64%O%s;:crt0_64%O%s}};:\\\n+     %{pthread:%{pg:gcrt0_r%O%s;:%{p:mcrt0_r%O%s;:crt0_r%O%s}};:\\\n+       %{pg:gcrt0%O%s;:%{p:mcrt0%O%s;:crt0%O%s}}}}}\\\n+   %{shared:crtcxa_s%O%s;:crtcxa%O%s} crtdbase%O%s\"\n+\n+/* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n+\n+#undef PTRDIFF_TYPE\n+#define PTRDIFF_TYPE \"long int\"\n+\n+/* Type used for wchar_t, as a string used in a declaration.  */\n+#undef  WCHAR_TYPE\n+#define WCHAR_TYPE (!TARGET_64BIT ? \"short unsigned int\" : \"unsigned int\")\n+\n+/* Width of wchar_t in bits.  */\n+#undef  WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE (!TARGET_64BIT ? 16 : 32)\n+\n+/* AIX 4.2 and above provides initialization and finalization function\n+   support from linker command line.  */\n+#undef HAS_INIT_SECTION\n+#define HAS_INIT_SECTION\n+\n+#undef LD_INIT_SWITCH\n+#define LD_INIT_SWITCH \"-binitfini\"\n+\n+#ifndef _AIX52\n+extern long long int    atoll(const char *);  \n+#endif\n+\n+/* This target uses the aix64.opt file.  */\n+#define TARGET_USES_AIX64_OPT 1\n+\n+/* Large TOC Support */\n+#ifdef HAVE_LD_LARGE_TOC\n+#undef TARGET_CMODEL\n+#define TARGET_CMODEL rs6000_current_cmodel\n+#define SET_CMODEL(opt) rs6000_current_cmodel = opt\n+#else\n+#define SET_CMODEL(opt) do {} while (0)\n+#endif\n+\n+/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n+   but does not have crtbegin/end.  */\n+\n+#define TARGET_AIX_VERSION 72\n+\n+/* AIX 7.2 supports DWARF3 debugging, but XCOFF remains the default.  */\n+#define DWARF2_DEBUGGING_INFO 1\n+#define PREFERRED_DEBUGGING_TYPE XCOFF_DEBUG\n+#define DEBUG_INFO_SECTION\t\"0x10000\"\n+#define DEBUG_LINE_SECTION\t\"0x20000\"\n+#define DEBUG_PUBNAMES_SECTION\t\"0x30000\"\n+#define DEBUG_PUBTYPES_SECTION\t\"0x40000\"\n+#define DEBUG_ARANGES_SECTION\t\"0x50000\"\n+#define DEBUG_ABBREV_SECTION\t\"0x60000\"\n+#define DEBUG_STR_SECTION\t\"0x70000\"\n+#define DEBUG_RANGES_SECTION\t\"0x80000\"\n+#define DEBUG_LOC_SECTION\t\"0x90000\"\n+#define DEBUG_FRAME_SECTION\t\"0xA0000\"\n+#define DEBUG_MACINFO_SECTION\t\"0xB0000\"\n+#define DEBUG_MACRO_SECTION\t\"0xB0000\"\n+"}]}