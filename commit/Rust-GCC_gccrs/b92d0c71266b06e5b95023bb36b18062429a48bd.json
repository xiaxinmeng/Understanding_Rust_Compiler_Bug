{"sha": "b92d0c71266b06e5b95023bb36b18062429a48bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkyZDBjNzEyNjZiMDZlNWI5NTAyM2JiMzZiMTgwNjI0MjlhNDhiZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-06-17T07:20:21Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-06-17T07:20:21Z"}, "message": "sse-recip-vec.c: Add file, missing from my previous commit.\n\n\t* gcc.target/i386/sse-recip-vec.c: Add file, missing from my\n\tprevious commit.\n\nFrom-SVN: r125767", "tree": {"sha": "8e05008f87e3a4a7167e4827a102130c9670fd53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e05008f87e3a4a7167e4827a102130c9670fd53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b92d0c71266b06e5b95023bb36b18062429a48bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92d0c71266b06e5b95023bb36b18062429a48bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b92d0c71266b06e5b95023bb36b18062429a48bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92d0c71266b06e5b95023bb36b18062429a48bd/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e34d7b8a6de70db9c6a65610fd394c440ba5061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e34d7b8a6de70db9c6a65610fd394c440ba5061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e34d7b8a6de70db9c6a65610fd394c440ba5061"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "83864348f78f67b95c382aa133ffdf5a2dba1752", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b92d0c71266b06e5b95023bb36b18062429a48bd", "patch": "@@ -6,6 +6,7 @@\n \t* gcc.target/i386/recip-vec-divf.c: Ditto.\n \t* gcc.target/i386/recip-vec-sqrtf.c: Ditto.\n \t* gcc.target/i386/sse-recip.c: Ditto.\n+\t* gcc.target/i386/sse-recip-vec.c: Ditto.\n \n 2007-06-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n "}, {"sha": "3b6f5757a6bc4850a3c16b8312ba5d534035ed41", "filename": "gcc/testsuite/gcc.target/i386/recip-divf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-divf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-divf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-divf.c?ref=b92d0c71266b06e5b95023bb36b18062429a48bd", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ffast-math -msse2 -mfpmath=sse -mrecip\" } */\n+/* { dg-options \"-O2 -ffast-math -msse -mfpmath=sse -mrecip\" } */\n \n float t1(float a, float b)\n {"}, {"sha": "b6c298feba709d5167e8da62dd37f048a7f3955e", "filename": "gcc/testsuite/gcc.target/i386/recip-sqrtf.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-sqrtf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-sqrtf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-sqrtf.c?ref=b92d0c71266b06e5b95023bb36b18062429a48bd", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ffast-math -msse2 -mfpmath=sse -mrecip\" } */\n+/* { dg-options \"-O2 -ffast-math -msse -mfpmath=sse -mrecip\" } */\n \n extern float sqrtf (float);\n \n@@ -8,7 +8,7 @@ float t1(float a, float b)\n   return a/sqrtf(b);\n }\n \n-float t2(float x, float a, float b)\n+float t2(float a, float b)\n {\n   return sqrtf(a/b);\n }"}, {"sha": "e4af992d5bf20266695b937e7b0e8a4bde52a5e4", "filename": "gcc/testsuite/gcc.target/i386/recip-vec-divf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-vec-divf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-vec-divf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-vec-divf.c?ref=b92d0c71266b06e5b95023bb36b18062429a48bd", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ffast-math -ftree-vectorize -msse2 -mfpmath=sse -mrecip\" } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -msse -mfpmath=sse -mrecip\" } */\n \n float a[16];\n float b[16];"}, {"sha": "af444cf55dd78c61d0627d2300d4f0cb85a1ec40", "filename": "gcc/testsuite/gcc.target/i386/recip-vec-sqrtf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-vec-sqrtf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-vec-sqrtf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frecip-vec-sqrtf.c?ref=b92d0c71266b06e5b95023bb36b18062429a48bd", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ffast-math -ftree-vectorize -msse2 -mfpmath=sse -mrecip\" } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -msse -mfpmath=sse -mrecip\" } */\n \n float a[16];\n float b[16];"}, {"sha": "d142aa07db348f82b4841232c5b38119f682e791", "filename": "gcc/testsuite/gcc.target/i386/sse-recip-vec.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-recip-vec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d0c71266b06e5b95023bb36b18062429a48bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-recip-vec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-recip-vec.c?ref=b92d0c71266b06e5b95023bb36b18062429a48bd", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -msse -mfpmath=sse -mrecip\" } */\n+\n+#include \"../../gcc.dg/i386-cpuid.h\"\n+\n+extern float sqrtf (float);\n+extern void abort (void);\n+\n+#define N 8\n+\n+int __attribute__((noinline))\n+main1 ()\n+{\n+  float a[N] = { 0.f, 18.f, 108.f, 324.f, 720.f, 1944.f, 3087.f, 5832.f };\n+  float b[N] = { 1.f, 2.f, 3.f, 4.f, 5.f, 6.f, 7.f, 8.f };\n+  float r[N];\n+\n+  float rc[N] = { 0.f, 3.f, 6.f, 9.f, 12.f, 18.f, 21.f, 27.f };\n+\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      r[i] = sqrtf (a[i] / b[i]);\n+    }\n+\n+  /* check results:  */\n+  for (i = 0; i < N; i++)\n+    {\n+      if (r[i] != rc[i])\n+\tabort();\n+    }   \n+\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned long cpu_facilities;\n+\n+  cpu_facilities = i386_cpuid ();\n+\n+  if ((cpu_facilities & (bit_MMX | bit_SSE | bit_CMOV))\n+      != (bit_MMX | bit_SSE | bit_CMOV))\n+    /* If host has no vector support, pass.  */\n+    return 0;\n+\n+  main1 ();\n+  return 0;\n+}"}]}