{"sha": "1b50716d21794f2f69aa2939045fbf1489ff3c19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1MDcxNmQyMTc5NGYyZjY5YWEyOTM5MDQ1ZmJmMTQ4OWZmM2MxOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-05-29T15:35:06Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-05-29T15:35:06Z"}, "message": "cp-tree.h (CLASSTYPE_ALIGN_UNIT): New macro.\n\n\t* cp-tree.h (CLASSTYPE_ALIGN_UNIT): New macro.\n\t* class.c (layout_empty_base): Use CLASSTYPE_ALIGN_UNIT, not\n\tCLASSTYPE_ALIGN.\n\nFrom-SVN: r34252", "tree": {"sha": "8ea05c7ef60941f9c7766cb14cac7bd1799d0418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea05c7ef60941f9c7766cb14cac7bd1799d0418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b50716d21794f2f69aa2939045fbf1489ff3c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b50716d21794f2f69aa2939045fbf1489ff3c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b50716d21794f2f69aa2939045fbf1489ff3c19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b50716d21794f2f69aa2939045fbf1489ff3c19/comments", "author": null, "committer": null, "parents": [{"sha": "86c82654129e4b57713498ef3e5c88fc1bb2f1aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c82654129e4b57713498ef3e5c88fc1bb2f1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c82654129e4b57713498ef3e5c88fc1bb2f1aa"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "c1ef5fbd1164defa3da421ba497405fcc8058bea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b50716d21794f2f69aa2939045fbf1489ff3c19/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b50716d21794f2f69aa2939045fbf1489ff3c19/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1b50716d21794f2f69aa2939045fbf1489ff3c19", "patch": "@@ -1,3 +1,9 @@\n+2000-05-29  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (CLASSTYPE_ALIGN_UNIT): New macro.\n+\t* class.c (layout_empty_base): Use CLASSTYPE_ALIGN_UNIT, not\n+\tCLASSTYPE_ALIGN.\n+\n 2000-05-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* decl2.c (lang_decode_option): Use skip_leading_substring instead"}, {"sha": "be0a84a340b2d1dbc030b649d3c5043d9713c5a4", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b50716d21794f2f69aa2939045fbf1489ff3c19/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b50716d21794f2f69aa2939045fbf1489ff3c19/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=1b50716d21794f2f69aa2939045fbf1489ff3c19", "patch": "@@ -3723,7 +3723,7 @@ layout_empty_base (binfo, eoc, binfo_offsets)\n   \n   /* This routine should only be used for empty classes.  */\n   my_friendly_assert (is_empty_class (basetype), 20000321);\n-  alignment = ssize_int (CLASSTYPE_ALIGN (basetype));\n+  alignment = ssize_int (CLASSTYPE_ALIGN_UNIT (basetype));\n \n   /* This is an empty base class.  We first try to put it at offset\n      zero.  */"}, {"sha": "3c6fd9565817c46b31d844d6ffeb6aa044ab92f7", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b50716d21794f2f69aa2939045fbf1489ff3c19/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b50716d21794f2f69aa2939045fbf1489ff3c19/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1b50716d21794f2f69aa2939045fbf1489ff3c19", "patch": "@@ -1637,6 +1637,10 @@ struct lang_type\n #define CLASSTYPE_SIZE_UNIT(NODE) (TYPE_LANG_SPECIFIC(NODE)->size_unit)\n #define CLASSTYPE_ALIGN(NODE) (TYPE_LANG_SPECIFIC(NODE)->align)\n \n+/* The alignment of NODE, without its virtual bases, in bytes.  */\n+#define CLASSTYPE_ALIGN_UNIT(NODE) \\\n+  (CLASSTYPE_ALIGN (NODE) / BITS_PER_UNIT)\n+\n /* A cons list of virtual functions which cannot be inherited by\n    derived classes.  When deriving from this type, the derived\n    class must provide its own definition for each of these functions.  */"}]}