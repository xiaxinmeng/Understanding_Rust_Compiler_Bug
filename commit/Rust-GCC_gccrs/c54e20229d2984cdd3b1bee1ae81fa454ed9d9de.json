{"sha": "c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU0ZTIwMjI5ZDI5ODRjZGQzYjFiZWUxYWU4MWZhNDU0ZWQ5ZDlkZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-28T14:52:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-28T14:52:44Z"}, "message": "re PR middle-end/59330 (Crash in is_gimple_reg_type)\n\n2013-11-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/59330\n\t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Simplify\n\tand fix delayed marking of free calls not necessary.\n\n\t* gcc.dg/torture/pr59330.c: New testcase.\n\nFrom-SVN: r205486", "tree": {"sha": "fe2cf62fefd5928cc0053b5fa535f210ed4cbd19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe2cf62fefd5928cc0053b5fa535f210ed4cbd19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c6b087cc13517cbf9f52786e2727b6fc774d9da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6b087cc13517cbf9f52786e2727b6fc774d9da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6b087cc13517cbf9f52786e2727b6fc774d9da"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "cac4cc119751fa318db052143ce17b848c3f615f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "patch": "@@ -1,3 +1,9 @@\n+2013-11-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59330\n+\t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Simplify\n+\tand fix delayed marking of free calls not necessary.\n+\n 2013-11-28  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-ssa-propagate.c (valid_gimple_call_p): Pass TREE_TYPE to"}, {"sha": "32061521ff5abbb2682e7e8f7046ef181e7b6e46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "patch": "@@ -1,3 +1,8 @@\n+2013-11-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59330\n+\t* gcc.dg/torture/pr59330.c: New testcase.\n+\n 2013-11-28  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/59323"}, {"sha": "74b832ea3143c682d245be67f34ead99ff071ead", "filename": "gcc/testsuite/gcc.dg/torture/pr59330.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59330.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59330.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59330.c?ref=c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+\n+void free(void *ptr)\n+{\n+}\n+\n+void *foo(void)\n+{\n+  return 0;\n+}\n+\n+int main(void)\n+{\n+  void *p = foo();\n+  free(p);\n+  return 0;\n+}"}, {"sha": "e2177fed99c6fbf04b2a5f181092f5d889020bd2", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54e20229d2984cdd3b1bee1ae81fa454ed9d9de/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=c54e20229d2984cdd3b1bee1ae81fa454ed9d9de", "patch": "@@ -1191,26 +1191,18 @@ eliminate_unnecessary_stmts (void)\n \t  stats.total++;\n \n \t  /* We can mark a call to free as not necessary if the\n-\t     defining statement of its argument is an allocation\n-\t     function and that is not necessary itself.  */\n-\t  if (gimple_call_builtin_p (stmt, BUILT_IN_FREE))\n+\t     defining statement of its argument is not necessary\n+\t     (and thus is getting removed).  */\n+\t  if (gimple_plf (stmt, STMT_NECESSARY)\n+\t      && gimple_call_builtin_p (stmt, BUILT_IN_FREE))\n \t    {\n \t      tree ptr = gimple_call_arg (stmt, 0);\n-\t      tree callee2;\n-\t      gimple def_stmt;\n-\t      if (TREE_CODE (ptr) != SSA_NAME)\n-\t\tcontinue;\n-\t      def_stmt = SSA_NAME_DEF_STMT (ptr);\n-\t      if (!is_gimple_call (def_stmt)\n-\t\t  || gimple_plf (def_stmt, STMT_NECESSARY))\n-\t\tcontinue;\n-\t      callee2 = gimple_call_fndecl (def_stmt);\n-\t      if (callee2 == NULL_TREE\n-\t\t  || DECL_BUILT_IN_CLASS (callee2) != BUILT_IN_NORMAL\n-\t\t  || (DECL_FUNCTION_CODE (callee2) != BUILT_IN_MALLOC\n-\t\t      && DECL_FUNCTION_CODE (callee2) != BUILT_IN_CALLOC))\n-\t\tcontinue;\n-\t      gimple_set_plf (stmt, STMT_NECESSARY, false);\n+\t      if (TREE_CODE (ptr) == SSA_NAME)\n+\t\t{\n+\t\t  gimple def_stmt = SSA_NAME_DEF_STMT (ptr);\n+\t\t  if (!gimple_plf (def_stmt, STMT_NECESSARY))\n+\t\t    gimple_set_plf (stmt, STMT_NECESSARY, false);\n+\t\t}\n \t    }\n \n \t  /* If GSI is not necessary then remove it.  */"}]}