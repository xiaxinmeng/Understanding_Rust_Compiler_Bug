{"sha": "839984f40444f7ab73ab0d83c94d82577718b657", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5OTg0ZjQwNDQ0ZjdhYjczYWIwZDgzYzk0ZDgyNTc3NzE4YjY1Nw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2016-11-15T21:00:32Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2016-11-15T21:00:32Z"}, "message": "install.texi: Remove references to java/libjava.\n\n2016-11-15  Matthias Klose  <doko@ubuntu.com>\n\n        * doc/install.texi: Remove references to java/libjava.\n        * doc/invoke.texi: Likewise.\n        * doc/standards.texi: Likewise.\n\nFrom-SVN: r242456", "tree": {"sha": "ad4d26e47e42d86d5694d5e4a3a3a475b645fe50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4d26e47e42d86d5694d5e4a3a3a475b645fe50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/839984f40444f7ab73ab0d83c94d82577718b657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839984f40444f7ab73ab0d83c94d82577718b657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839984f40444f7ab73ab0d83c94d82577718b657", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839984f40444f7ab73ab0d83c94d82577718b657/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97a2feb66d8f018161c4d64adc7c1171045abcf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a2feb66d8f018161c4d64adc7c1171045abcf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a2feb66d8f018161c4d64adc7c1171045abcf6"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "554af23ae8595dc6373368fbdf4fe4d39dbc2455", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=839984f40444f7ab73ab0d83c94d82577718b657", "patch": "@@ -2,6 +2,8 @@\n \n \t* doc/install.texi: Remove references to java/libjava.\n \t* doc/sourcebuild.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/standards.texi: Likewise.\n \n 2016-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>"}, {"sha": "78e385e9cf08fc665694a2dbdb4ae46db8c6bb0f", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=839984f40444f7ab73ab0d83c94d82577718b657", "patch": "@@ -4021,7 +4021,7 @@ The assembler from GNU binutils 2.17 and earlier has a bug in the way\n it sorts relocations for REL targets (o32, o64, EABI).  This can cause\n bad code to be generated for simple C++ programs.  Also the linker\n from GNU binutils versions prior to 2.17 has a bug which causes the\n-runtime linker stubs in very large programs, like @file{libgcj.so}, to\n+runtime linker stubs in very large programs to\n be incorrectly generated.  GNU Binutils 2.18 and later (and snapshots\n made after Nov. 9, 2006) should be free from both of these problems.\n "}, {"sha": "dbb02bb7b2522beecca59fcf411dd4d519a145c2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=839984f40444f7ab73ab0d83c94d82577718b657", "patch": "@@ -1316,12 +1316,6 @@ traditional preprocessor).\n @item @var{file}.go\n Go source code.\n \n-@c FIXME: Descriptions of Java file types.\n-@c @var{file}.java\n-@c @var{file}.class\n-@c @var{file}.zip\n-@c @var{file}.jar\n-\n @item @var{file}.ads\n Ada source code file that contains a library unit declaration (a\n declaration of a package, subprogram, or generic, or a generic\n@@ -1370,7 +1364,6 @@ assembler  assembler-with-cpp\n ada\n f77  f77-cpp-input f95  f95-cpp-input\n go\n-java\n @end smallexample\n \n @item -x none\n@@ -3174,7 +3167,7 @@ accomplished via the comm page.\n @item -fobjc-exceptions\n @opindex fobjc-exceptions\n Enable syntactic support for structured exception handling in\n-Objective-C, similar to what is offered by C++ and Java.  This option\n+Objective-C, similar to what is offered by C++.  This option\n is required to use the Objective-C keywords @code{@@try},\n @code{@@throw}, @code{@@catch}, @code{@@finally} and\n @code{@@synchronized}.  This option is available with both the GNU\n@@ -10800,7 +10793,7 @@ Inserts a call to @code{__sanitizer_cov_trace_pc} into every basic block.\n @opindex fbounds-check\n For front ends that support it, generate additional code to check that\n indices used to access arrays are within the declared range.  This is\n-currently only supported by the Java and Fortran front ends, where\n+currently only supported by the Fortran front end, where\n this option defaults to true and false respectively.\n \n @item -fcheck-pointer-bounds\n@@ -11861,8 +11854,7 @@ results in @option{-ftrapv} being effective.\n This option instructs the compiler to assume that signed arithmetic\n overflow of addition, subtraction and multiplication wraps around\n using twos-complement representation.  This flag enables some optimizations\n-and disables others.  This option is enabled by default for the Java\n-front end, as required by the Java language specification.\n+and disables others.\n The options @option{-ftrapv} and @option{-fwrapv} override each other, so using\n @option{-ftrapv} @option{-fwrapv} on the command-line results in\n @option{-fwrapv} being effective.  Note that only active options override, so"}, {"sha": "8a42365031fe9b59f605763857a5237d83df24e7", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839984f40444f7ab73ab0d83c94d82577718b657/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=839984f40444f7ab73ab0d83c94d82577718b657", "patch": "@@ -315,6 +315,3 @@ conformance and compatibility of the Ada compiler.\n \n @xref{Standards,,Standards, gfortran, The GNU Fortran Compiler}, for details\n of standards supported by GNU Fortran.\n-\n-@xref{Compatibility,,Compatibility with the Java Platform, gcj, GNU gcj},\n-for details of compatibility between @command{gcj} and the Java Platform."}]}