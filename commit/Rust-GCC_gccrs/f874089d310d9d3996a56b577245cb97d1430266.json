{"sha": "f874089d310d9d3996a56b577245cb97d1430266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3NDA4OWQzMTBkOWQzOTk2YTU2YjU3NzI0NWNiOTdkMTQzMDI2Ng==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2019-02-04T08:55:00Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2019-02-04T08:55:00Z"}, "message": "contrib/dg-extract-results: Handle timeout warnings\n\n2019-02-04  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tcontrib/\n\t* dg-extract-results.py: Keep timeout warnings next to their\n\tmatching test.\n\t* dg-extract-results.sh: Likewise.\n\nFrom-SVN: r268511", "tree": {"sha": "acf9d79b8c3cbc4708a383d246225ef15e765ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acf9d79b8c3cbc4708a383d246225ef15e765ef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f874089d310d9d3996a56b577245cb97d1430266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f874089d310d9d3996a56b577245cb97d1430266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f874089d310d9d3996a56b577245cb97d1430266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f874089d310d9d3996a56b577245cb97d1430266/comments", "author": null, "committer": null, "parents": [{"sha": "c8df72c446639286815357b723f257264e6b6162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8df72c446639286815357b723f257264e6b6162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8df72c446639286815357b723f257264e6b6162"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "cd4eef3d507018b97bd0c5400e49058f45905e0f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f874089d310d9d3996a56b577245cb97d1430266/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f874089d310d9d3996a56b577245cb97d1430266/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=f874089d310d9d3996a56b577245cb97d1430266", "patch": "@@ -1,3 +1,10 @@\n+2019-02-04  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tcontrib/\n+\t* dg-extract-results.py: Keep timeout warnings next to their\n+\tmatching test.\n+\t* dg-extract-results.sh: Likewise.\n+\n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* update-copyright.py: Add Gerard Jungman as external author."}, {"sha": "ed62f73226f93a35a069edee7a4e9bc937bad8e7", "filename": "contrib/dg-extract-results.py", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f874089d310d9d3996a56b577245cb97d1430266/contrib%2Fdg-extract-results.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f874089d310d9d3996a56b577245cb97d1430266/contrib%2Fdg-extract-results.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.py?ref=f874089d310d9d3996a56b577245cb97d1430266", "patch": "@@ -239,6 +239,7 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n         harness = None\n         segment = None\n         final_using = 0\n+        has_warning = 0\n \n         # If this is the first run for this variation, add any text before\n         # the first harness to the header.\n@@ -292,8 +293,20 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n                 # Ugly hack to get the right order for gfortran.\n                 if name.startswith ('gfortran.dg/g77/'):\n                     name = 'h' + name\n-                key = (name, len (harness.results))\n-                harness.results.append ((key, line))\n+                # If we have a time out warning, make sure it appears\n+                # before the following testcase diagnostic: we insert\n+                # the testname before 'program' so that sort faces a\n+                # list of testhanes.\n+                if line.startswith ('WARNING: program timed out'):\n+                  has_warning = 1\n+                else:\n+                  if has_warning == 1:\n+                      key = (name, len (harness.results))\n+                      myline = 'WARNING: %s program timed out.\\n' % name\n+                      harness.results.append ((key, myline))\n+                      has_warning = 0\n+                  key = (name, len (harness.results))\n+                  harness.results.append ((key, line))\n                 if not first_key and sort_logs:\n                     first_key = key\n                 if line.startswith ('ERROR: (DejaGnu)'):"}, {"sha": "e9833c1159f8e7495a175ab7959593090c37abbe", "filename": "contrib/dg-extract-results.sh", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f874089d310d9d3996a56b577245cb97d1430266/contrib%2Fdg-extract-results.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f874089d310d9d3996a56b577245cb97d1430266/contrib%2Fdg-extract-results.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.sh?ref=f874089d310d9d3996a56b577245cb97d1430266", "patch": "@@ -298,6 +298,8 @@ BEGIN {\n   cnt=0\n   print_using=0\n   need_close=0\n+  has_timeout=0\n+  timeout_cnt=0\n }\n /^EXPFILE: / {\n   expfiles[expfileno] = \\$2\n@@ -329,16 +331,36 @@ BEGIN {\n   # Ugly hack for gfortran.dg/dg.exp\n   if (\"$TOOL\" == \"gfortran\" && testname ~ /^gfortran.dg\\/g77\\//)\n     testname=\"h\"testname\n+  if (\\$1 == \"WARNING:\" && \\$2 == \"program\" && \\$3 == \"timed\" && (\\$4 == \"out\" || \\$4 == \"out.\")) {\n+        has_timeout=1\n+        timeout_cnt=cnt\n+  } else {\n+  # Prepare timeout replacement message in case it's needed\n+    timeout_msg=\\$0\n+    sub(\\$1, \"WARNING:\", timeout_msg)\n+  }\n }\n /^$/ { if (\"$MODE\" == \"sum\") next }\n { if (variant == curvar && curfile) {\n     if (\"$MODE\" == \"sum\") {\n-      printf \"%s %08d|\", testname, cnt >> curfile\n-      cnt = cnt + 1\n+      # Do not print anything if the current line is a timeout\n+      if (has_timeout == 0) {\n+        # If the previous line was a timeout,\n+        # insert the full current message without keyword\n+        if (timeout_cnt != 0) {\n+          printf \"%s %08d|%s program timed out.\\n\", testname, timeout_cnt, timeout_msg >> curfile\n+          timeout_cnt = 0\n+        }\n+        printf \"%s %08d|\", testname, cnt >> curfile\n+        cnt = cnt + 1\n+        filewritten[curfile]=1\n+        need_close=1\n+        if (timeout_cnt == 0)\n+          print >> curfile\n+      }\n+\n+      has_timeout=0\n     }\n-    filewritten[curfile]=1\n-    need_close=1\n-    print >> curfile\n   } else\n     next\n }"}]}