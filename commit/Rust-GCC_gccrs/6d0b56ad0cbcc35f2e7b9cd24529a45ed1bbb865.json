{"sha": "6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwYjU2YWQwY2JjYzM1ZjJlN2I5Y2QyNDUyOWE0NWVkMWJiYjg2NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T10:03:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T10:03:31Z"}, "message": "[multiple changes]\n\n2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch3.adb (Build_CPP_Init_Procedure): Remove\n\tFlag_Decl. Do not analyze the declaration of the flag as it is\n\tnot part of the tree yet, instead add it to the freeze actions\n\tof the C++ type.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb (Apply_Scalar_Range_Check): Make sure we handle\n\tcase of OUT and IN OUT parameter correctly (where Source_Typ is\n\tset), we were missing one case where a check must be applied.\n\n2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch8.adb (Build_Class_Wide_Wrapper): Update the comment on\n\tthe generated code. Instead of hiding the renaming and using the\n\twrapper as the proper association, have the subprogram renaming\n\talias the wrapper.\n\t(Build_Spec): The entity of the wrapper is\n\tnow derived from the entity of the related primitive.\n\n2014-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* s-regpat.adb: s-regpat.adb (Parse): fix incorrect link when\n\tusing non-capturing groups.\n\n2014-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* inline.adb (Build_Body_To_Inline): Remove Unmodified and\n\trelated pragmas before copying the original body, to prevent\n\tspurious errors when the pragmas apply to formals that will not\n\tappear in the inlined body.\n\nFrom-SVN: r213554", "tree": {"sha": "8573ab03acf640bc3322d78ca3cb883e6c81a7b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8573ab03acf640bc3322d78ca3cb883e6c81a7b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/comments", "author": null, "committer": null, "parents": [{"sha": "ff7a5bcbdf9f3d0c219550cd0aa0ef248f7504eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7a5bcbdf9f3d0c219550cd0aa0ef248f7504eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7a5bcbdf9f3d0c219550cd0aa0ef248f7504eb"}], "stats": {"total": 110, "additions": 72, "deletions": 38}, "files": [{"sha": "960102e22e800aa8529ef09f6988222d79627ebd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "patch": "@@ -1,3 +1,37 @@\n+2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch3.adb (Build_CPP_Init_Procedure): Remove\n+\tFlag_Decl. Do not analyze the declaration of the flag as it is\n+\tnot part of the tree yet, instead add it to the freeze actions\n+\tof the C++ type.\n+\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb (Apply_Scalar_Range_Check): Make sure we handle\n+\tcase of OUT and IN OUT parameter correctly (where Source_Typ is\n+\tset), we were missing one case where a check must be applied.\n+\n+2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch8.adb (Build_Class_Wide_Wrapper): Update the comment on\n+\tthe generated code. Instead of hiding the renaming and using the\n+\twrapper as the proper association, have the subprogram renaming\n+\talias the wrapper.\n+\t(Build_Spec): The entity of the wrapper is\n+\tnow derived from the entity of the related primitive.\n+\n+2014-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* s-regpat.adb: s-regpat.adb (Parse): fix incorrect link when\n+\tusing non-capturing groups.\n+\n+2014-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* inline.adb (Build_Body_To_Inline): Remove Unmodified and\n+\trelated pragmas before copying the original body, to prevent\n+\tspurious errors when the pragmas apply to formals that will not\n+\tappear in the inlined body.\n+\n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_prag.adb, sem_ch7.adb, einfo.adb, sem_prag.adb, sem_util.adb,"}, {"sha": "05f4b7e476ae1e53a37fe4a4ec3e2fa98683782e", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "patch": "@@ -2971,11 +2971,18 @@ package body Checks is\n         and then Is_Discrete_Type (S_Typ) = Is_Discrete_Type (Target_Typ)\n         and then\n           (In_Subrange_Of (S_Typ, Target_Typ, Fixed_Int)\n+\n+             --  Also check if the expression itself is in the range of the\n+             --  target type if it is a known at compile time value. We skip\n+             --  this test if S_Typ is set since for OUT and IN OUT parameters\n+             --  the Expr itself is not relevant to the checking.\n+\n              or else\n-               Is_In_Range (Expr, Target_Typ,\n-                            Assume_Valid => True,\n-                            Fixed_Int    => Fixed_Int,\n-                            Int_Real     => Int_Real))\n+               (No (Source_Typ)\n+                  and then Is_In_Range (Expr, Target_Typ,\n+                                        Assume_Valid => True,\n+                                        Fixed_Int    => Fixed_Int,\n+                                        Int_Real     => Int_Real)))\n       then\n          return;\n "}, {"sha": "6eec78a4732c9502089711b7be910c49f5981403", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "patch": "@@ -2203,7 +2203,6 @@ package body Exp_Ch3 is\n          Body_Node         : Node_Id;\n          Body_Stmts        : List_Id;\n          Flag_Id           : Entity_Id;\n-         Flag_Decl         : Node_Id;\n          Handled_Stmt_Node : Node_Id;\n          Init_Tags_List    : List_Id;\n          Proc_Id           : Entity_Id;\n@@ -2235,19 +2234,16 @@ package body Exp_Ch3 is\n \n          Flag_Id := Make_Temporary (Loc, 'F');\n \n-         Flag_Decl :=\n+         Append_Freeze_Action (Rec_Type,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Flag_Id,\n              Object_Definition =>\n                New_Occurrence_Of (Standard_Boolean, Loc),\n              Expression =>\n-               New_Occurrence_Of (Standard_True, Loc));\n-\n-         Analyze (Flag_Decl);\n-         Append_Freeze_Action (Rec_Type, Flag_Decl);\n+               New_Occurrence_Of (Standard_True, Loc)));\n \n          Body_Stmts := New_List;\n-         Body_Node := New_Node (N_Subprogram_Body, Loc);\n+         Body_Node  := New_Node (N_Subprogram_Body, Loc);\n \n          Proc_Spec_Node := New_Node (N_Procedure_Specification, Loc);\n \n@@ -2262,7 +2258,7 @@ package body Exp_Ch3 is\n \n          Set_Parameter_Specifications (Proc_Spec_Node, New_List);\n          Set_Specification (Body_Node, Proc_Spec_Node);\n-         Set_Declarations (Body_Node, New_List);\n+         Set_Declarations  (Body_Node, New_List);\n \n          Init_Tags_List := Build_Inherit_CPP_Prims (Rec_Type);\n "}, {"sha": "380fa25939f31f094c95686c33c2983eeaddbef9", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "patch": "@@ -1168,6 +1168,10 @@ package body Inline is\n           Make_Defining_Identifier (Sloc (N), Name_uParent));\n       Set_Corresponding_Spec (Original_Body, Empty);\n \n+      --  Remove those pragmas that have no meaining in an inlined body.\n+\n+      Remove_Pragmas (Original_Body);\n+\n       Body_To_Analyze := Copy_Generic_Node (Original_Body, Empty, False);\n \n       --  Set return type of function, which is also global and does not need\n@@ -1190,7 +1194,6 @@ package body Inline is\n \n       Expander_Mode_Save_And_Set (False);\n       Full_Analysis := False;\n-      Remove_Pragmas (Body_To_Analyze);\n \n       Analyze (Body_To_Analyze);\n       Push_Scope (Defining_Entity (Body_To_Analyze));"}, {"sha": "d5ef0229e475fe49dc8b3292de4eaff628a1ba49", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "patch": "@@ -923,8 +923,7 @@ package body System.Regpat is\n \n             else\n                --  Need to keep looking after the closing parenthesis\n-\n-               null;\n+               Ender := Emit_Ptr;\n             end if;\n \n          else"}, {"sha": "655f38bf6f4002004f70afdfcd0622499c06e5f5", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "patch": "@@ -1845,12 +1845,12 @@ package body Sem_Ch8 is\n       --\n       --  The above is replaced the following wrapper/renaming combination:\n       --\n-      --    procedure Prim_Op (Param : Formal_Typ) is  --  wrapper\n+      --    procedure Wrapper (Param : Formal_Typ) is  --  wrapper\n       --    begin\n       --       Prim_Op (Param);                        --  primitive\n       --    end Wrapper;\n       --\n-      --    procedure Dummy (Param : Formal_Typ) renames Prim_Op;\n+      --    procedure Prim_Op (Param : Formal_Typ) renames Wrapper;\n       --\n       --  This transformation applies only if there is no explicit visible\n       --  class-wide operation at the point of the instantiation. Ren_Id is\n@@ -1977,7 +1977,8 @@ package body Sem_Ch8 is\n          function Build_Spec (Subp_Id : Entity_Id) return Node_Id is\n             Params  : constant List_Id   := Copy_Parameter_List (Subp_Id);\n             Spec_Id : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc, Chars (Subp_Id));\n+                        Make_Defining_Identifier (Loc,\n+                          Chars => New_External_Name (Chars (Subp_Id), 'R'));\n \n          begin\n             if Ekind (Formal_Spec) = E_Procedure then\n@@ -2290,12 +2291,10 @@ package body Sem_Ch8 is\n             return;\n          end if;\n \n-         --  Set the proper entity of the renamed generic formal subprogram,\n-         --  reset its overloaded status and mark the primitive as referenced\n-         --  now that resolution has finally taken place.\n+         --  At this point resolution has taken place and the name is no longer\n+         --  overloaded. Mark the primitive as referenced.\n \n-         Set_Entity        (Nam, Prim_Op);\n-         Set_Is_Overloaded (Nam, False);\n+         Set_Is_Overloaded (Name (N), False);\n          Set_Referenced    (Prim_Op);\n \n          --  Step 3: Create the declaration and the body of the wrapper, insert\n@@ -2304,6 +2303,15 @@ package body Sem_Ch8 is\n          Spec_Decl :=\n            Make_Subprogram_Declaration (Loc,\n              Specification => Build_Spec (Ren_Id));\n+         Insert_Before_And_Analyze (N, Spec_Decl);\n+\n+         --  If the operator carries an Eliminated pragma, indicate that the\n+         --  wrapper is also to be eliminated, to prevent spurious error when\n+         --  using gnatelim on programs that include box-initialization of\n+         --  equality operators.\n+\n+         Wrap_Id := Defining_Entity (Spec_Decl);\n+         Set_Is_Eliminated (Wrap_Id, Is_Eliminated (Prim_Op));\n \n          Body_Decl :=\n            Make_Subprogram_Body (Loc,\n@@ -2318,16 +2326,6 @@ package body Sem_Ch8 is\n                         Parameter_Specifications\n                           (Specification (Spec_Decl))))));\n \n-         Insert_Before_And_Analyze (N, Spec_Decl);\n-         Wrap_Id := Defining_Entity (Spec_Decl);\n-\n-         --  If the operator carries an Eliminated pragma, indicate that the\n-         --  wrapper is also to be eliminated, to prevent spurious error when\n-         --  using gnatelim on programs that include box-initialization of\n-         --  equality operators.\n-\n-         Set_Is_Eliminated (Wrap_Id, Is_Eliminated (Prim_Op));\n-\n          --  The generated body does not freeze and must be analyzed when the\n          --  class-wide wrapper is frozen. The body is only needed if expansion\n          --  is enabled.\n@@ -2336,12 +2334,9 @@ package body Sem_Ch8 is\n             Append_Freeze_Action (Wrap_Id, Body_Decl);\n          end if;\n \n-         --  Step 4: Once the proper actual type and primitive operation are\n-         --  known, hide the renaming declaration from visibility by giving it\n-         --  a dummy name.\n+         --  Step 4: The subprogram renaming aliases the wrapper\n \n-         Set_Defining_Unit_Name (Spec, Make_Temporary (Loc, 'R'));\n-         Ren_Id := Analyze_Subprogram_Specification (Spec);\n+         Rewrite (Nam, New_Occurrence_Of (Wrap_Id, Loc));\n       end Build_Class_Wide_Wrapper;\n \n       --------------------------"}]}