{"sha": "0801f419440c14f6772b28f763ad7d40f7f7a580", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgwMWY0MTk0NDBjMTRmNjc3MmIyOGY3NjNhZDdkNDBmN2Y3YTU4MA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-05-15T04:05:33Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-06-26T19:29:07Z"}, "message": "c++: Change the default dialect to C++17.\n\nSince GCC 9, C++17 support is no longer experimental.  It was too late\nto change the default C++ dialect to C++17 in GCC 10, but I think now\nit's time to pull the trigger (C++14 was made the default in GCC 6.1).\nWe're still missing two C++17 library features, but that shouldn't stop\nus.  See\n<https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017>\nand\n<https://gcc.gnu.org/projects/cxx-status.html#cxx17>\nfor the C++17 status.\n\nI won't list all C++17 features here, but just a few heads-up:\n\n- trigraphs were removed (hardly anyone cares, unless your keyboard is\n  missing the # key),\n- operator++(bool) was removed (so some tests now run in C++14 and down\n  only),\n- the keyword register was removed (some legacy code might trip on\n  this),\n- noexcept specification is now part of the type system and C++17 does\n  not allow dynamic exception specifications anymore (the empty throw\n  specification is still available, but it is deprecated),\n- the evaluation order rules are different in C++17,\n- static constexpr data members are now implicitly inline (which makes\n  them definitions),\n- C++17 requires guaranteed copy elision, meaning that a copy/move\n  constructor call might be elided completely.  That means that if\n  something relied on a constructor being instantiated via e.g. copying\n  a function parameter, it might now fail.\n\nI'll post an update for cxx-status.html and add a new caveat to changes.html\nonce this is in.\n\ngcc/ChangeLog:\n\t* doc/invoke.texi (C Dialect Options): Adjust -std default for C++.\n\t* doc/standards.texi (C Language): Correct the default dialect.\n\t(C++ Language): Update the default for C++ to gnu++17.\n\ngcc/c-family/ChangeLog:\n\t* c-opts.c (c_common_init_options): Default to gnu++17.\n\ngcc/testsuite/ChangeLog:\n\t* c-c++-common/torture/vector-subscript-3.c: In C++17, define away\n\tthe keyword register.\n\t* g++.dg/cpp1z/attributes-enum-1a.C: Only run pre-C++17.\n\t* g++.dg/cpp1z/fold7a.C: Likewise.\n\t* g++.dg/cpp1z/nontype3a.C: Likewise.\n\t* g++.dg/cpp1z/utf8-2a.C: Likewise.\n\t* g++.dg/parse/error11.C: Update expected diagnostics for C++17.\n\t* g++.dg/torture/pr34850.C: Add -Wno-attribute-warning.\n\t* g++.dg/torture/pr49394.C: In C++17, use noexcept(false).\n\t* g++.dg/torture/pr82154.C: Use -std=c++14.\n\t* lib/target-supports.exp: Set to C++17.\n\t* obj-c++.dg/try-catch-9.mm: Use -Wno-register.\n\nlibgomp/ChangeLog:\n\t* testsuite/libgomp.c++/atomic-3.C: Use -std=gnu++14.", "tree": {"sha": "2873383514dfeb12a5bfcb5eadcdca510c88aeec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2873383514dfeb12a5bfcb5eadcdca510c88aeec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0801f419440c14f6772b28f763ad7d40f7f7a580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0801f419440c14f6772b28f763ad7d40f7f7a580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0801f419440c14f6772b28f763ad7d40f7f7a580", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0801f419440c14f6772b28f763ad7d40f7f7a580/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fce12c0920c12492c878c0ca5f639f93b93f183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fce12c0920c12492c878c0ca5f639f93b93f183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fce12c0920c12492c878c0ca5f639f93b93f183"}], "stats": {"total": 57, "additions": 36, "deletions": 21}, "files": [{"sha": "9b6300f330fadce3fa6eed889e88adf188ad655e", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -256,9 +256,9 @@ c_common_init_options (unsigned int decoded_options_count,\n \t  }\n     }\n \n-  /* Set C++ standard to C++14 if not specified on the command line.  */\n+  /* Set C++ standard to C++17 if not specified on the command line.  */\n   if (c_dialect_cxx ())\n-    set_std_cxx14 (/*ISO*/false);\n+    set_std_cxx17 (/*ISO*/false);\n \n   global_dc->colorize_source_p = true;\n }"}, {"sha": "e21d8a5217b191129d339bca9748c4ff82f3c8c3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -2368,7 +2368,6 @@ The name @samp{c++1y} is deprecated.\n @item gnu++14\n @itemx gnu++1y\n GNU dialect of @option{-std=c++14}.\n-This is the default for C++ code.\n The name @samp{gnu++1y} is deprecated.\n \n @item c++17\n@@ -2379,6 +2378,7 @@ The name @samp{c++1z} is deprecated.\n @item gnu++17\n @itemx gnu++1z\n GNU dialect of @option{-std=c++17}.\n+This is the default for C++ code.\n The name @samp{gnu++1z} is deprecated.\n \n @item c++20"}, {"sha": "fc5016028ddd4e3c6428006e15bd27cfa1cbecf7", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -130,7 +130,7 @@ select an extended version of the C language explicitly with\n extensions).  \n \n The default, if no C language dialect options are given,\n-is @option{-std=gnu11}.  \n+is @option{-std=gnu17}.\n \n The ISO C standard defines (in clause 4) two classes of conforming\n implementation.  A @dfn{conforming hosted implementation} supports the\n@@ -246,7 +246,7 @@ select an extended version of the C++ language explicitly with\n @option{-std=gnu++17} (for C++17 with GNU extensions).  \n \n The default, if\n-no C++ language dialect options are given, is @option{-std=gnu++14}.\n+no C++ language dialect options are given, is @option{-std=gnu++17}.\n \n @section Objective-C and Objective-C++ Languages\n @cindex Objective-C"}, {"sha": "05d24f4901133ebeb94cdcde481583dee29f2e12", "filename": "gcc/testsuite/c-c++-common/torture/vector-subscript-3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fvector-subscript-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fvector-subscript-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fvector-subscript-3.c?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -10,6 +10,9 @@ struct vec_s {\n     vector short member;\n };\n \n+#if defined(__cplusplus) && __cplusplus >= 201703L\n+#define register /* nothing */\n+#endif\n \n int main () {\n   register short vector v0 = {1,2,3,4,5,6,7};"}, {"sha": "20f0b1d8876d60ee56de20da1faa1946c0f13fc8", "filename": "gcc/testsuite/g++.dg/cpp1z/attributes-enum-1a.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fattributes-enum-1a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fattributes-enum-1a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fattributes-enum-1a.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,4 +1,5 @@\n-// This macro should not be defined without -std=c++17.\n+// { dg-do compile { target c++14_down } }\n+// This macro should not be defined without c++17.\n \n #ifdef __cpp_enumerator_attributes\n #error __cpp_enumerator_attributes defined"}, {"sha": "8cca8792709dbc5c2cac123678faa9e02e4ef21a", "filename": "gcc/testsuite/g++.dg/cpp1z/fold7a.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold7a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold7a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold7a.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,4 +1,5 @@\n-// This macro should not be defined without -std=c++17.\n+// { dg-do compile { target c++14_down } }\n+// This macro should not be defined without c++17.\n \n #ifdef __cpp_fold_expressions\n #error __cpp_fold_expressions defined"}, {"sha": "b3ffe0379049dcb6a8474f5f0260831b1f070c61", "filename": "gcc/testsuite/g++.dg/cpp1z/nontype3a.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype3a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype3a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype3a.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,4 +1,5 @@\n-// This macro should not be defined without -std=c++17.\n+// { dg-do compile { target c++14_down } }\n+// This macro should not be defined without c++17.\n \n #ifdef __cpp_nontype_template_args\n #error __cpp_nontype_template_args defined"}, {"sha": "b2a99a990237d5a0b07659637be5b032e0195c18", "filename": "gcc/testsuite/g++.dg/cpp1z/utf8-2a.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Futf8-2a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Futf8-2a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Futf8-2a.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,4 +1,5 @@\n-// This macro should not be 201411 without -std=c++17.\n+// { dg-do compile { target c++14_down } }\n+// This macro should not be 201411 without c++17.\n \n #if __cpp_unicode_characters == 201411\n #error Wrong value for __cpp_unicode_characters"}, {"sha": "4baf97e531d3677db5978be3427512651acb284e", "filename": "gcc/testsuite/g++.dg/parse/error11.C", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-fshow-column\" }\"\n+// { dg-options \"-fshow-column\" }\n // Origin: Giovanni Bajo <giovannibajo at gcc dot gnu dot org>\n // Try to find out when the digraph '<:' is used as a mistake, and parse it\n //  correctly to avoid cascaded errors.\n@@ -50,12 +50,16 @@ void func(void)\n   //  the special error message.\n   Foo<: :B> k2;     // { dg-bogus \"cannot begin|alternate spelling\" \"smart error should not be triggered here\" }\n   Foo[:B> k1;       // { dg-bogus \"cannot begin|alternate spelling\" \"smart error should not be triggered here\" } \n-// { dg-error \"6:missing template arguments before\" \"template\" { target *-*-* } 51 }\n-// { dg-error \"9:expected primary-expression before ':' token\" \"primary\" { target *-*-* } 51 }\n-// { dg-error \"8:expected '\\]' before ':' token\" \"backslash\" { target *-*-* } 51 }\n-// { dg-error \"6:missing template arguments before\" \"template\" { target *-*-* } 52 }\n-// { dg-error \"7:expected primary-expression before ':' token\" \"primary\" { target *-*-* } 52 }\n-// { dg-error \"7:expected '\\]' before ':' token\" \"backslash\" { target *-*-* } 52 }\n+// { dg-error \"6:missing template arguments before\" \"template\" { target c++14_down } .-2 }\n+// { dg-error \"9:expected primary-expression before ':' token\" \"primary\" { target c++14_down } .-3 }\n+// { dg-error \"8:expected '\\]' before ':' token\" \"backslash\" { target c++14_down } .-4 }\n+// { dg-error \"6:missing template arguments before\" \"template\" { target c++14_down } .-4 }\n+// { dg-error \"7:expected primary-expression before ':' token\" \"primary\" { target c++14_down } .-5 }\n+// { dg-error \"7:expected '\\]' before ':' token\" \"backslash\" { target c++14_down } .-6 }\n+// { dg-error \"9:expected identifier\" \"\" { target c++17 } .-8 }\n+// { dg-error \"8:expected\" \"\" { target c++17 } .-9 }\n+// { dg-error \"7:expected identifier\" \"\" { target c++17 } .-9 }\n+// { dg-error \"7:expected\" \"\" { target c++17 } .-10 }\n //\n   int Foo[2];\n   Foo[::value] = 0;"}, {"sha": "59dd5dfde7d2f1fe0e94265db729a9a521f358d8", "filename": "gcc/testsuite/g++.dg/torture/pr34850.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n-/* { dg-options \"-ffat-lto-objects -Wno-return-type\" } */\n+/* { dg-options \"-ffat-lto-objects -Wno-return-type -Wno-attribute-warning\" } */\n \n typedef unsigned char uint8_t;\n typedef unsigned int uint32_t;"}, {"sha": "75901a5d668631e524854e84b54426c6044c9d57", "filename": "gcc/testsuite/g++.dg/torture/pr49394.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49394.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49394.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49394.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -7,6 +7,8 @@ struct Mutex\n   ~Mutex ()\n #if __cplusplus <= 201402L\n   throw(int)\t\t\t// { dg-warning \"deprecated\" \"\" { target { c++11 && { ! c++17 } } } }\n+#else\n+  noexcept(false)\n #endif\n   {\n     if (locked)"}, {"sha": "698340d8c65e7dd222edf110469dc0e042a9127c", "filename": "gcc/testsuite/g++.dg/torture/pr82154.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr82154.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr82154.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr82154.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,5 +1,6 @@\n // { dg-do compile }\n-// { dg-additional-options \"-Wno-deprecated\" }\n+// { dg-additional-options \"-std=c++14 -Wno-deprecated\" }\n+// C++17 does not allow dynamic exception specification.\n \n namespace a {\n int b;"}, {"sha": "4bdcaef11327c5180325c208dc052a5467bf1792", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -9089,7 +9089,7 @@ proc check_effective_target_c++ { } {\n  return 0\n }\n \n-set cxx_default \"c++14\"\n+set cxx_default \"c++17\"\n # Check whether the current active language standard supports the features\n # of C++11/C++14 by checking for the presence of one of the -std flags.\n # This assumes that the default for the compiler is $cxx_default, and that"}, {"sha": "b2dc61b9989fccc5ee52e13aed4f2d978e78e0d2", "filename": "gcc/testsuite/obj-c++.dg/try-catch-9.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-9.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-9.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-9.mm?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -6,7 +6,7 @@\n /* { dg-xfail-run-if \"PR23616\" { *-*-* } { \"-fgnu-runtime\" } { \"-fnext-runtime\" } } */\n /* { dg-xfail-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" \"-fgnu-runtime\" } { \"\" } } \n /* { dg-prune-output \".*internal compiler error.*\" } */\n-/* { dg-options \"-fobjc-exceptions -O2\" } */\n+/* { dg-options \"-fobjc-exceptions -O2 -Wno-register\" } */\n \n #include \"../objc-obj-c++-shared/TestsuiteObject.m\"\n #include <stdlib.h>"}, {"sha": "c02532d3206c4c29204277fb9c6c2324e320f65d", "filename": "libgomp/testsuite/libgomp.c++/atomic-3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0801f419440c14f6772b28f763ad7d40f7f7a580/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0801f419440c14f6772b28f763ad7d40f7f7a580/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-3.C?ref=0801f419440c14f6772b28f763ad7d40f7f7a580", "patch": "@@ -1,5 +1,6 @@\n // { dg-do run }\n-// { dg-options \"-Wno-deprecated\" }\n+// C++17 forbids ++ on bool.\n+// { dg-options \"-Wno-deprecated -std=gnu++14\" }\n \n extern \"C\" void abort (void);\n bool v, x1, x2, x3, x4, x5, x6;"}]}