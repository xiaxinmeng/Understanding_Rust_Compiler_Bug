{"sha": "0ba6a850b597236832140bf57bf6083b6fab93f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhNmE4NTBiNTk3MjM2ODMyMTQwYmY1N2JmNjA4M2I2ZmFiOTNmOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-17T15:49:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-17T17:03:46Z"}, "message": "libstdc++: Fix freestanding build PR 92376)\n\nIn a freestanding library we don't install the <pstl/pstl_config.h>\nheader, so don't try to include it unless it exists.\n\nExplicitly declare aligned alloc functions for freestanding, because\n<cstdlib> doesn't declare them.\n\n\tPR libstdc++/92376\n\t* include/bits/c++config: Only do PSTL config when the header is\n\tpresent, to fix freestanding.\n\t* libsupc++/new_opa.cc [!_GLIBCXX_HOSTED]: Declare allocation\n\tfunctions if they were detected by configure.", "tree": {"sha": "5f6a89250fe3f2047c80343a21ee9091b5778049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f6a89250fe3f2047c80343a21ee9091b5778049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ba6a850b597236832140bf57bf6083b6fab93f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba6a850b597236832140bf57bf6083b6fab93f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba6a850b597236832140bf57bf6083b6fab93f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba6a850b597236832140bf57bf6083b6fab93f9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c2e9f7a5d4b5db97f268ae247b3a82b1610a543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2e9f7a5d4b5db97f268ae247b3a82b1610a543", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2e9f7a5d4b5db97f268ae247b3a82b1610a543"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "f0d3b1c140f669fe0065f22725e0d6c3922b2e9f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba6a850b597236832140bf57bf6083b6fab93f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba6a850b597236832140bf57bf6083b6fab93f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0ba6a850b597236832140bf57bf6083b6fab93f9", "patch": "@@ -1,3 +1,11 @@\n+2020-01-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/92376\n+\t* include/bits/c++config: Only do PSTL config when the header is\n+\tpresent, to fix freestanding.\n+\t* libsupc++/new_opa.cc [!_GLIBCXX_HOSTED]: Declare allocation\n+\tfunctions if they were detected by configure.\n+\n 2020-01-16  Kai-Uwe Eckhardt  <kuehro@gmx.de>\n \t    Matthew Bauer  <mjbauer95@gmail.com>\n \t    Jonathan Wakely  <jwakely@redhat.com>"}, {"sha": "b1fad59d4b34723572c35a22c6868837d915b0f9", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba6a850b597236832140bf57bf6083b6fab93f9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba6a850b597236832140bf57bf6083b6fab93f9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=0ba6a850b597236832140bf57bf6083b6fab93f9", "patch": "@@ -666,6 +666,8 @@ namespace std\n // PSTL configuration\n \n #if __cplusplus >= 201703L\n+// This header is not installed for freestanding:\n+#if __has_include(<pstl/pstl_config.h>)\n // Preserved here so we have some idea which version of upstream we've pulled in\n // #define PSTL_VERSION 9000\n \n@@ -684,6 +686,7 @@ namespace std\n # define _PSTL_ASSERT_MSG(_Condition, _Message) __glibcxx_assert(_Condition)\n \n #include <pstl/pstl_config.h>\n+#endif // __has_include\n+#endif // C++17\n \n-#endif\n // End of prewritten config; the settings discovered at configure time follow."}, {"sha": "8fac193cc7efe90f233b7fd99beecf7a24d2879e", "filename": "libstdc++-v3/libsupc++/new_opa.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba6a850b597236832140bf57bf6083b6fab93f9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba6a850b597236832140bf57bf6083b6fab93f9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc?ref=0ba6a850b597236832140bf57bf6083b6fab93f9", "patch": "@@ -43,6 +43,21 @@ extern \"C\" void *memalign(std::size_t boundary, std::size_t size);\n using std::new_handler;\n using std::bad_alloc;\n \n+#if ! _GLIBCXX_HOSTED\n+extern \"C\"\n+{\n+# if _GLIBCXX_HAVE_ALIGNED_ALLOC\n+  void *aligned_alloc(size_t alignment, size_t size);\n+# elif _GLIBCXX_HAVE__ALIGNED_MALLOC\n+  void *_aligned_malloc(size_t size, size_t alignment);\n+# elif _GLIBCXX_HAVE_POSIX_MEMALIGN\n+  void *posix_memalign(void **, size_t alignment, size_t size);\n+# elif _GLIBCXX_HAVE_MEMALIGN\n+  void *memalign(size_t alignment, size_t size);\n+# endif\n+}\n+#endif\n+\n namespace __gnu_cxx {\n #if _GLIBCXX_HAVE_ALIGNED_ALLOC\n using ::aligned_alloc;"}]}