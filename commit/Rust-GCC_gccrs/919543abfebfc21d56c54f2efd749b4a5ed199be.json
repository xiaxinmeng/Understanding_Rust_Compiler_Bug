{"sha": "919543abfebfc21d56c54f2efd749b4a5ed199be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5NTQzYWJmZWJmYzIxZDU2YzU0ZjJlZmQ3NDliNGE1ZWQxOTliZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-12-06T21:38:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-12-06T21:38:03Z"}, "message": "tm.texi (DWARF_FRAME_REGISTERS): Add documentation.\n\n        * doc/tm.texi (DWARF_FRAME_REGISTERS): Add documentation.\n        (PRE_GCC3_DWARF_FRAME_REGISTERS): Same.\n\n        * unwind-dw2.c (__frame_state_for): Change DWARF_FRAME_REGISTERS\n        to PRE_GCC3_DWARF_FRAME_REGISTERS.\n        (frame_state): Same.\n        (PRE_GCC3_DWARF_FRAME_REGISTERS): Define if not already defined.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r47730", "tree": {"sha": "cd6dbf587957cb3511174505bc954073ae688089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6dbf587957cb3511174505bc954073ae688089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919543abfebfc21d56c54f2efd749b4a5ed199be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919543abfebfc21d56c54f2efd749b4a5ed199be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919543abfebfc21d56c54f2efd749b4a5ed199be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919543abfebfc21d56c54f2efd749b4a5ed199be/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d6a24bd514b4056553f49053d3c4b3862401207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d6a24bd514b4056553f49053d3c4b3862401207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d6a24bd514b4056553f49053d3c4b3862401207"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "167de28dd533f84465c73b7276bf53d818c90f04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919543abfebfc21d56c54f2efd749b4a5ed199be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919543abfebfc21d56c54f2efd749b4a5ed199be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=919543abfebfc21d56c54f2efd749b4a5ed199be", "patch": "@@ -1,3 +1,14 @@\n+2001-12-06  Aldy Hernandez  <aldyh@redhat.com>\n+            Richard Henderson  <rth@redhat.com>\n+\n+\t* doc/tm.texi (DWARF_FRAME_REGISTERS): Add documentation.\n+        (PRE_GCC3_DWARF_FRAME_REGISTERS): Same.\n+\n+        * unwind-dw2.c (__frame_state_for): Change DWARF_FRAME_REGISTERS\n+        to PRE_GCC3_DWARF_FRAME_REGISTERS.\n+        (frame_state): Same.\n+\t(PRE_GCC3_DWARF_FRAME_REGISTERS): Define if not already defined.\n+\n 2001-12-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* langhooks.c (lhd_staticp): Mark parameter with"}, {"sha": "0991bf0ba49844f468acbc311092cc1590a0a9f2", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919543abfebfc21d56c54f2efd749b4a5ed199be/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919543abfebfc21d56c54f2efd749b4a5ed199be/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=919543abfebfc21d56c54f2efd749b4a5ed199be", "patch": "@@ -3011,6 +3011,33 @@ macros and should be used to refer to those items.\n \n If the static chain is passed in a register, the two previous macros should\n be defined instead.\n+\n+@findex DWARF_FRAME_REGISTERS\n+@item DWARF_FRAME_REGISTERS\n+This macro specifies the maximum number of hard registers that can be\n+saved in a call frame.  This is used to size data structures used in\n+DWARF2 exception handling.\n+\n+Prior to GCC 3.0, this macro was needed in order to establish a stable\n+exception handling ABI in the face of adding new hard registers for ISA\n+extensions.  In GCC 3.0 and later, the EH ABI is insulated from changes\n+in the number of hard registers.  Nevertheless, this macro can still be\n+used to reduce the runtime memory requirements of the exception handling\n+routines, which can be substantial if the ISA contains a lot of\n+registers that are not call-saved.\n+\n+If this macro is not defined, it defaults to\n+@code{FIRST_PSEUDO_REGISTER}.\n+\n+@findex PRE_GCC3_DWARF_FRAME_REGISTERS\n+@item PRE_GCC3_DWARF_FRAME_REGISTERS\n+\n+This macro is similar to @code{DWARF_FRAME_REGISTERS}, but is provided\n+for backward compatibility in pre GCC 3.0 compiled code.\n+\n+If this macro is not defined, it defaults to\n+@code{DWARF_FRAME_REGISTERS}.\n+\n @end table\n \n @node Elimination"}, {"sha": "a5ac36830306354164d108afd54883e5d41bbb83", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919543abfebfc21d56c54f2efd749b4a5ed199be/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919543abfebfc21d56c54f2efd749b4a5ed199be/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=919543abfebfc21d56c54f2efd749b4a5ed199be", "patch": "@@ -42,6 +42,11 @@\n #define DWARF_FRAME_REGISTERS FIRST_PSEUDO_REGISTER\n #endif\n \n+/* Dwarf frame registers used for pre gcc 3.0 compiled glibc.  */\n+#ifndef PRE_GCC3_DWARF_FRAME_REGISTERS\n+#define PRE_GCC3_DWARF_FRAME_REGISTERS DWARF_FRAME_REGISTERS\n+#endif\n+\n /* This is the register and unwind state for a particular frame.  */\n struct _Unwind_Context\n {\n@@ -944,10 +949,10 @@ typedef struct frame_state\n   void *eh_ptr;\n   long cfa_offset;\n   long args_size;\n-  long reg_or_offset[DWARF_FRAME_REGISTERS+1];\n+  long reg_or_offset[PRE_GCC3_DWARF_FRAME_REGISTERS+1];\n   unsigned short cfa_reg;\n   unsigned short retaddr_column;\n-  char saved[DWARF_FRAME_REGISTERS+1];\n+  char saved[PRE_GCC3_DWARF_FRAME_REGISTERS+1];\n } frame_state;\n \n struct frame_state * __frame_state_for (void *, struct frame_state *);\n@@ -974,7 +979,7 @@ __frame_state_for (void *pc_target, struct frame_state *state_in)\n   if (fs.cfa_how == CFA_EXP)\n     return 0;\n \n-  for (reg = 0; reg < DWARF_FRAME_REGISTERS + 1; reg++)\n+  for (reg = 0; reg < PRE_GCC3_DWARF_FRAME_REGISTERS + 1; reg++)\n     {\n       state_in->saved[reg] = fs.regs.reg[reg].how;\n       switch (state_in->saved[reg])"}]}