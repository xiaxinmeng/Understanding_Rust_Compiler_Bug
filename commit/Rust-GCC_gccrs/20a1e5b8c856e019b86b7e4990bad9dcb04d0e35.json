{"sha": "20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBhMWU1YjhjODU2ZTAxOWI4NmI3ZTQ5OTBiYWQ5ZGNiMDRkMGUzNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-09-14T17:46:59Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-09-14T17:46:59Z"}, "message": "typeck.c (cp_build_unary_op): Diagnose incrementing boolean expressions.\n\n\t* typeck.c (cp_build_unary_op): Diagnose incrementing boolean\n\texpressions.  Tweak an error message.\n\n\t* c-c++-common/gomp/atomic-12.c: Use -Wno-deprecated.\n\t* c-c++-common/gomp/atomic-13.c: Likewise.\n\t* c-c++-common/gomp/atomic-14.c: Likewise.\n\t* g++.dg/cpp1y/lambda-init11.C: Remove invalid code.\n\t* g++.dg/cpp1z/bool-increment1.C: New test.\n\t* c-c++-common/pr60439.c: Add dg-warning.\n\t* g++.dg/expr/bitfield4.C: Likewise.\n\t* g++.dg/expr/bitfield5.C: Likewise.\n\t* g++.dg/expr/bitfield6.C: Likewise.\n\t* g++.dg/expr/bool1.C: Likewise.\n\t* g++.dg/expr/bool3.C: Likewise.\n\t* g++.dg/expr/lval3.C: Likewise.\n\t* g++.dg/expr/lval4.C: Likewise.\n\t* g++.old-deja/g++.jason/bool5.C: Likewise.\n\t* g++.dg/expr/bitfield3.C: Adjust dg-error.\n\t* g++.dg/other/error18.C: Likewise.\n\t* g++.dg/gomp/atomic-14.C: Likewise.\nlibgomp/\n\t* testsuite/libgomp.c++/atomic-3.C: Use -Wno-deprecated.\nlibstdc++-v3/\n\t* testsuite/23_containers/vector/debug/insert6_neg.cc: Use\n\t-Wno-deprecated.\n\nFrom-SVN: r240141", "tree": {"sha": "55c5f2b1653d82fbe2d3ac4ac243322ba2fdd242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55c5f2b1653d82fbe2d3ac4ac243322ba2fdd242"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f335184d24fa4ae7f1242e3a9bb675fab8e0b732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f335184d24fa4ae7f1242e3a9bb675fab8e0b732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f335184d24fa4ae7f1242e3a9bb675fab8e0b732"}], "stats": {"total": 118, "additions": 93, "deletions": 25}, "files": [{"sha": "001479c8b5e45fa6f62519b4e0c39f4d25a6722c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,3 +1,8 @@\n+2016-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* typeck.c (cp_build_unary_op): Diagnose incrementing boolean\n+\texpressions.  Tweak an error message.\n+\n 2016-09-14  Marek Polacek  <polacek@redhat.com>\n \n \t* cp-tree.h (cp_build_unary_op): Change nonconvert parameter type to"}, {"sha": "c53a85a16e0ef678e32ab48521aedfa68ecf798c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -6029,16 +6029,32 @@ cp_build_unary_op (enum tree_code code, tree xarg, bool noconvert,\n                              complain))\n \t  return error_mark_node;\n \n-\t/* Forbid using -- on `bool'.  */\n+\t/* Forbid using -- or ++ in C++17 on `bool'.  */\n \tif (TREE_CODE (declared_type) == BOOLEAN_TYPE)\n \t  {\n \t    if (code == POSTDECREMENT_EXPR || code == PREDECREMENT_EXPR)\n \t      {\n                 if (complain & tf_error)\n-                  error (\"invalid use of Boolean expression as operand \"\n-                         \"to %<operator--%>\");\n+\t\t  error (\"use of an operand of type %qT in %<operator--%> \"\n+\t\t\t \"is forbidden\", boolean_type_node);\n \t\treturn error_mark_node;\n \t      }\n+\t    else\n+\t      {\n+\t\tif (cxx_dialect >= cxx1z)\n+\t\t  {\n+\t\t    if (complain & tf_error)\n+\t\t      error (\"use of an operand of type %qT in \"\n+\t\t\t     \"%<operator++%> is forbidden in C++1z\",\n+\t\t\t     boolean_type_node);\n+\t\t    return error_mark_node;\n+\t\t  }\n+\t\t/* Otherwise, [depr.incr.bool] says this is deprecated.  */\n+\t\telse if (!in_system_header_at (input_location))\n+\t\t  warning (OPT_Wdeprecated, \"use of an operand of type %qT \"\n+\t\t\t   \"in %<operator++%> is deprecated\",\n+\t\t\t   boolean_type_node);\n+\t      }\n \t    val = boolean_increment (code, arg);\n \t  }\n \telse if (code == POSTINCREMENT_EXPR || code == POSTDECREMENT_EXPR)"}, {"sha": "dc55a3d8cd2121304590070655072133841c89f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,3 +1,23 @@\n+2016-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/gomp/atomic-12.c: Use -Wno-deprecated.\n+\t* c-c++-common/gomp/atomic-13.c: Likewise.\n+\t* c-c++-common/gomp/atomic-14.c: Likewise.\n+\t* g++.dg/cpp1y/lambda-init11.C: Remove invalid code.\n+\t* g++.dg/cpp1z/bool-increment1.C: New test.\n+\t* c-c++-common/pr60439.c: Add dg-warning.\n+\t* g++.dg/expr/bitfield4.C: Likewise.\n+\t* g++.dg/expr/bitfield5.C: Likewise.\n+\t* g++.dg/expr/bitfield6.C: Likewise.\n+\t* g++.dg/expr/bool1.C: Likewise.\n+\t* g++.dg/expr/bool3.C: Likewise.\n+\t* g++.dg/expr/lval3.C: Likewise.\n+\t* g++.dg/expr/lval4.C: Likewise.\n+\t* g++.old-deja/g++.jason/bool5.C: Likewise.\n+\t* g++.dg/expr/bitfield3.C: Adjust dg-error.\n+\t* g++.dg/other/error18.C: Likewise.\n+\t* g++.dg/gomp/atomic-14.C: Likewise.\n+\n 2016-09-14  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/77539"}, {"sha": "e9ca6503cfe2a29a81c42e371e71e739329d8d0f", "filename": "gcc/testsuite/c-c++-common/gomp/atomic-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-12.c?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/45423 */\n /* { dg-do compile } */\n-/* { dg-options \"-fopenmp -fdump-tree-gimple -g0\" } */\n+/* { dg-options \"-fopenmp -fdump-tree-gimple -g0 -Wno-deprecated\" } */\n /* atomicvar should never be referenced in between the barrier and\n    following #pragma omp atomic_load.  */\n /* { dg-final { scan-tree-dump-not \"barrier\\[^#\\]*atomicvar\" \"gimple\" } } */"}, {"sha": "7f4afcf63ad9b89a06648864bcdb35df91b72fba", "filename": "gcc/testsuite/c-c++-common/gomp/atomic-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-13.c?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/45423 */\n /* { dg-do compile } */\n-/* { dg-options \"-fopenmp -fdump-tree-gimple -g0 -O2\" } */\n+/* { dg-options \"-fopenmp -fdump-tree-gimple -g0 -O2 -Wno-deprecated\" } */\n /* atomicvar should never be referenced in between the barrier and\n    following #pragma omp atomic_load.  */\n /* { dg-final { scan-tree-dump-not \"barrier\\[^#\\]*atomicvar\" \"gimple\" } } */"}, {"sha": "7e2345387d48ef36901cec020bf8351858f60e73", "filename": "gcc/testsuite/c-c++-common/gomp/atomic-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-14.c?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/45423 */\n /* { dg-do compile } */\n-/* { dg-options \"-fopenmp\" } */\n+/* { dg-options \"-fopenmp -Wno-deprecated\" } */\n \n #ifdef __cplusplus\n bool *baz ();"}, {"sha": "71b397a1c7dae7d16aadb105918cdb48e346eda1", "filename": "gcc/testsuite/c-c++-common/pr60439.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60439.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60439.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60439.c?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -132,6 +132,7 @@ f6 (bool b)\n       break;\n     }\n   switch (b++) /* { dg-warning \"switch condition has\" } */\n+  /* { dg-warning \"is deprecated\" \"\" { target c++ } 134 } */\n     {\n     case 3:\n       break;"}, {"sha": "4d434cd9ca08913fc19bc9e5b3687f89ebe079b5", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init11.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init11.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -16,5 +16,4 @@ int main(){\n   foo(3.14f);\n   foo(0);\n   foo('a');\n-  foo(false);\n }"}, {"sha": "ae2dcf9f3917234e2eb49d650a1f8e7e6da69e91", "filename": "gcc/testsuite/g++.dg/cpp1z/bool-increment1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbool-increment1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbool-increment1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbool-increment1.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -0,0 +1,14 @@\n+// { dg-options -std=c++1z }\n+\n+int\n+fn (bool b)\n+{\n+  int r = 0;\n+\n+  r += b++; // { dg-error \"use of an operand of type .bool. in .operator\\\\+\\\\+. is forbidden in\" }\n+  r += ++b; // { dg-error \"use of an operand of type .bool. in .operator\\\\+\\\\+. is forbidden in\" }\n+  r += b--; // { dg-error \"use of an operand of type .bool. in .operator--. is forbidden\" }\n+  r += --b; // { dg-error \"use of an operand of type .bool. in .operator--. is forbidden\" }\n+\n+  return r;\n+}"}, {"sha": "3f30337c2dbb0d6d7e72d4db2d216fd4f5d4c28e", "filename": "gcc/testsuite/g++.dg/expr/bitfield3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield3.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -7,6 +7,6 @@ struct S {\n S s;\n \n void f() {\n-  s.x--; // { dg-error \"Boolean expression\" }\n-  --s.x; // { dg-error \"Boolean expression\" }\n+  s.x--; // { dg-error \"use of an operand of type .bool.\" }\n+  --s.x; // { dg-error \"use of an operand of type .bool.\" }\n }"}, {"sha": "7fae086b857e7695bdf846b4e3156d48583474cb", "filename": "gcc/testsuite/g++.dg/expr/bitfield4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield4.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -14,6 +14,6 @@ template <>\n void f(bool) {} \n \n int main() {\n-  f(s.x++);\n-  f(++s.x);\n+  f(s.x++); // { dg-warning \"deprecated\" }\n+  f(++s.x); // { dg-warning \"deprecated\" }\n }"}, {"sha": "0a37f9f166b8ebfcba1af719a7753089a85bc773", "filename": "gcc/testsuite/g++.dg/expr/bitfield5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield5.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -8,10 +8,10 @@ struct S {\n S s;\n \n int main() {\n-  s.x++;\n+  s.x++; // { dg-warning \"deprecated\" }\n   if (s.x != 1)\n     return 1;\n-  ++s.x;\n+  ++s.x; // { dg-warning \"deprecated\" }\n   if (s.x != 1)\n     return 2;\n }"}, {"sha": "8523866cd9ddbc057ddcaa0dc655d182d9567324", "filename": "gcc/testsuite/g++.dg/expr/bitfield6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield6.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -7,5 +7,5 @@ struct S {\n S s;\n \n void f() {\n-  ++s.x = false;\n+  ++s.x = false; // { dg-warning \"deprecated\" }\n }"}, {"sha": "503e8b40c8c48afc592c863273a9d6e19b7f636d", "filename": "gcc/testsuite/g++.dg/expr/bool1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -10,8 +10,8 @@ int main()\n   my_bool b = false;\n   int i;\n \n-  b++;\n-  b++;\n+  b++; // { dg-warning \"deprecated\" }\n+  b++; // { dg-warning \"deprecated\" }\n   i = b;\n   if (i != 1)\n     abort ();"}, {"sha": "1866ed47e9db5bfd7040f66cd4fd7bcdb0076728", "filename": "gcc/testsuite/g++.dg/expr/bool3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -10,8 +10,8 @@ int main()\n   my_bool b = false;\n   int i;\n \n-  b++;\n-  b++;\n+  b++; // { dg-warning \"deprecated\" }\n+  b++; // { dg-warning \"deprecated\" }\n   i = b;\n   if (i != 1)\n     abort ();"}, {"sha": "8e0aeade4b9a5c290c8fabcc38aa37126de7be41", "filename": "gcc/testsuite/g++.dg/expr/lval3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Flval3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Flval3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Flval3.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -4,6 +4,7 @@ f()\n {\n   bool i = 0;\n   i++ = 3; // { dg-error \"\" }\n+  // { dg-warning \"deprecated\" \"\" { target *-*-* } 6 }\n }\n \n "}, {"sha": "b903ec8c39ec9bcb81bc5ab99e760cabfd58af42", "filename": "gcc/testsuite/g++.dg/expr/lval4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Flval4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Flval4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Flval4.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -4,6 +4,7 @@ f()\n {\n   bool i = 0;\n   ++i = 3;\n+  // { dg-warning \"deprecated\" \"\" { target *-*-* } 6 }\n }\n \n "}, {"sha": "982f44fae923ead09d7225968721c011108c240f", "filename": "gcc/testsuite/g++.dg/gomp/atomic-14.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fatomic-14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fatomic-14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fatomic-14.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -8,12 +8,12 @@ int\n foo (void)\n {\n   #pragma omp atomic\n-    (*baz ())--;\t// { dg-error \"invalid use of Boolean\" }\n+    (*baz ())--;\t// { dg-error \"use of an operand of type .bool.\" }\n   #pragma omp atomic\n-    --(*baz ());\t// { dg-error \"invalid use of Boolean\" }\n+    --(*baz ());\t// { dg-error \"use of an operand of type .bool.\" }\n   #pragma omp atomic\n-    atomicvar--;\t// { dg-error \"invalid use of Boolean\" }\n+    atomicvar--;\t// { dg-error \"use of an operand of type .bool.\" }\n   #pragma omp atomic\n-    --atomicvar;\t// { dg-error \"invalid use of Boolean\" }\n+    --atomicvar;\t// { dg-error \"use of an operand of type .bool.\" }\n   return 0;\n }"}, {"sha": "05ddf116675cfef48a73092afbeda8837cec58de", "filename": "gcc/testsuite/g++.dg/other/error18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror18.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -7,5 +7,5 @@ struct A\n \n void f(A a)\n {\n-  a.b--; // { dg-error \"Boolean expression\" }\n+  a.b--; // { dg-error \"use of an operand of type .bool.\" }\n }"}, {"sha": "0a16ccb16acdd1609585ea80fa52352789faa0d3", "filename": "gcc/testsuite/g++.old-deja/g++.jason/bool5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool5.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -2,10 +2,10 @@\n int main ()\n {\n   bool b = false;\n-  int i = b++;\n+  int i = b++; // { dg-warning \"deprecated\" }\n   if (i != false || b != true)\n     return 1;\n-  i = b++;\n+  i = b++; // { dg-warning \"deprecated\" }\n   if (i != true || b != true)\n     return 1;\n }"}, {"sha": "e7749b2be4e2fdc2bc93ef711ab4f2d6e553f490", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,3 +1,7 @@\n+2016-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* testsuite/libgomp.c++/atomic-3.C: Use -Wno-deprecated.\n+\n 2016-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/71014"}, {"sha": "f957b2fece55798602dbcb2ad6a0b25184fe1077", "filename": "libgomp/testsuite/libgomp.c++/atomic-3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-3.C?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,4 +1,5 @@\n // { dg-do run }\n+// { dg-options \"-Wno-deprecated\" }\n \n extern \"C\" void abort (void);\n bool v, x1, x2, x3, x4, x5, x6;"}, {"sha": "cb6e964f69a910ce5160d6083d41c486ab38e896", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -1,3 +1,8 @@\n+2016-09-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* testsuite/23_containers/vector/debug/insert6_neg.cc: Use\n+\t-Wno-deprecated.\n+\n 2016-09-14  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc:"}, {"sha": "c939c2203fc0466735c8b11e2539afce0092d23d", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/insert6_neg.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert6_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a1e5b8c856e019b86b7e4990bad9dcb04d0e35/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert6_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert6_neg.cc?ref=20a1e5b8c856e019b86b7e4990bad9dcb04d0e35", "patch": "@@ -16,6 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n //\n // { dg-do run { xfail *-*-* } }\n+// { dg-options \"-Wno-deprecated\" }\n \n #include <vector>\n #include <debug/vector>"}]}