{"sha": "679124db5bc81cca40d33543916cd82981601f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc5MTI0ZGI1YmM4MWNjYTQwZDMzNTQzOTE2Y2Q4Mjk4MTYwMWYwNg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-03-10T09:38:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-17T14:32:12Z"}, "message": "[Ada] Fix handling of generic types in check for overlapping actuals\n\ngcc/ada/\n\n\t* sem_warn.adb (Warn_On_Overlapping_Actuals): Ignore formal of\n\tgeneric types, but keep examining other parameters.", "tree": {"sha": "db428558bd88437e3791c0f109fc9e31ebc5b5c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db428558bd88437e3791c0f109fc9e31ebc5b5c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/679124db5bc81cca40d33543916cd82981601f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679124db5bc81cca40d33543916cd82981601f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679124db5bc81cca40d33543916cd82981601f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679124db5bc81cca40d33543916cd82981601f06/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e50d50f0c236e9374cfe6a387b1ea24e5f490682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50d50f0c236e9374cfe6a387b1ea24e5f490682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50d50f0c236e9374cfe6a387b1ea24e5f490682"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "6db6d2ccfbed10a2be81441fd25ca985c7cb3e7d", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679124db5bc81cca40d33543916cd82981601f06/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679124db5bc81cca40d33543916cd82981601f06/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=679124db5bc81cca40d33543916cd82981601f06", "patch": "@@ -3741,17 +3741,20 @@ package body Sem_Warn is\n       Form1 := First_Formal (Subp);\n       Act1  := First_Actual (N);\n       while Present (Form1) and then Present (Act1) loop\n-         if Is_Generic_Type (Etype (Act1)) then\n-            return;\n-         end if;\n \n          Form2 := Next_Formal (Form1);\n          Act2  := Next_Actual (Act1);\n          while Present (Form2) and then Present (Act2) loop\n-            if Refer_Same_Object (Act1, Act2) then\n-               if Is_Generic_Type (Etype (Act2)) then\n-                  return;\n-               end if;\n+\n+            --  Ignore formals of generic types; they will be examined when\n+            --  instantiated.\n+\n+            if Is_Generic_Type (Etype (Form1))\n+              or else Is_Generic_Type (Etype (Form2))\n+            then\n+               null;\n+\n+            elsif Refer_Same_Object (Act1, Act2) then\n \n                --  Case 1: two writable elementary parameters that overlap\n "}]}