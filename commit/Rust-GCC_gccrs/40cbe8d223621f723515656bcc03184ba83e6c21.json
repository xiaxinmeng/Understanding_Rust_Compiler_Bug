{"sha": "40cbe8d223621f723515656bcc03184ba83e6c21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBjYmU4ZDIyMzYyMWY3MjM1MTU2NTZiY2MwMzE4NGJhODNlNmMyMQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2012-11-11T02:51:47Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2012-11-11T02:51:47Z"}, "message": "extend.texi: Copy-edit to use \"bit-field\" consistently instead of \"bitfield\" or \"bit field\".\n\n2012-11-10  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/extend.texi: Copy-edit to use \"bit-field\" consistently\n\tinstead of \"bitfield\" or \"bit field\".\n\nFrom-SVN: r193403", "tree": {"sha": "308dbeb66b5fe912330c696aad7128e9d200d6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/308dbeb66b5fe912330c696aad7128e9d200d6dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40cbe8d223621f723515656bcc03184ba83e6c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40cbe8d223621f723515656bcc03184ba83e6c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40cbe8d223621f723515656bcc03184ba83e6c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40cbe8d223621f723515656bcc03184ba83e6c21/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f46cb6350c780dfc3f15fd7b7aad42156acf517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f46cb6350c780dfc3f15fd7b7aad42156acf517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f46cb6350c780dfc3f15fd7b7aad42156acf517"}], "stats": {"total": 61, "additions": 33, "deletions": 28}, "files": [{"sha": "5a96bdd10dc3d6d4e8a6d675e618e051735b758d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40cbe8d223621f723515656bcc03184ba83e6c21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40cbe8d223621f723515656bcc03184ba83e6c21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40cbe8d223621f723515656bcc03184ba83e6c21", "patch": "@@ -1,3 +1,8 @@\n+2012-11-10  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/extend.texi: Copy-edit to use \"bit-field\" consistently\n+\tinstead of \"bitfield\" or \"bit field\".\n+\n 2012-11-10  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/extend.texi: Copy-edit to fix incorrect hyphenation phrases"}, {"sha": "65c85a5cc804393a8ff527c55b3185f0867c169a", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40cbe8d223621f723515656bcc03184ba83e6c21/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40cbe8d223621f723515656bcc03184ba83e6c21/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=40cbe8d223621f723515656bcc03184ba83e6c21", "patch": "@@ -5006,9 +5006,9 @@ Currently @option{-m[no-]ms-bitfields} is provided for the Microsoft Windows X86\n compilers to match the native Microsoft compiler.\n \n The Microsoft structure layout algorithm is fairly simple with the exception\n-of the bitfield packing:\n+of the bit-field packing:\n \n-The padding and alignment of members of structures and whether a bit field\n+The padding and alignment of members of structures and whether a bit-field\n can straddle a storage-unit boundary\n \n @enumerate\n@@ -5025,19 +5025,19 @@ Every object is allocated an offset so that:\n \n offset %  alignment-requirement == 0\n \n-@item Adjacent bit fields are packed into the same 1-, 2-, or 4-byte allocation\n-unit if the integral types are the same size and if the next bit field fits\n+@item Adjacent bit-fields are packed into the same 1-, 2-, or 4-byte allocation\n+unit if the integral types are the same size and if the next bit-field fits\n into the current allocation unit without crossing the boundary imposed by the\n-common alignment requirements of the bit fields.\n+common alignment requirements of the bit-fields.\n @end enumerate\n \n-Handling of zero-length bitfields:\n+Handling of zero-length bit-fields:\n \n-MSVC interprets zero-length bitfields in the following ways:\n+MSVC interprets zero-length bit-fields in the following ways:\n \n @enumerate\n-@item If a zero-length bitfield is inserted between two bitfields that\n-are normally coalesced, the bitfields are not coalesced.\n+@item If a zero-length bit-field is inserted between two bit-fields that\n+are normally coalesced, the bit-fields are not coalesced.\n \n For example:\n \n@@ -5050,12 +5050,12 @@ struct\n  @} t1;\n @end smallexample\n \n-The size of @code{t1} is 8 bytes with the zero-length bitfield.  If the\n-zero-length bitfield were removed, @code{t1}'s size would be 4 bytes.\n+The size of @code{t1} is 8 bytes with the zero-length bit-field.  If the\n+zero-length bit-field were removed, @code{t1}'s size would be 4 bytes.\n \n-@item If a zero-length bitfield is inserted after a bitfield, @code{foo}, and the\n-alignment of the zero-length bitfield is greater than the member that follows it,\n-@code{bar}, @code{bar} is aligned as the type of the zero-length bitfield.\n+@item If a zero-length bit-field is inserted after a bit-field, @code{foo}, and the\n+alignment of the zero-length bit-field is greater than the member that follows it,\n+@code{bar}, @code{bar} is aligned as the type of the zero-length bit-field.\n \n For example:\n \n@@ -5077,18 +5077,18 @@ struct\n \n For @code{t2}, @code{bar} is placed at offset 2, rather than offset 1.\n Accordingly, the size of @code{t2} is 4.  For @code{t3}, the zero-length\n-bitfield does not affect the alignment of @code{bar} or, as a result, the size\n+bit-field does not affect the alignment of @code{bar} or, as a result, the size\n of the structure.\n \n Taking this into account, it is important to note the following:\n \n @enumerate\n-@item If a zero-length bitfield follows a normal bitfield, the type of the\n-zero-length bitfield may affect the alignment of the structure as whole. For\n-example, @code{t2} has a size of 4 bytes, since the zero-length bitfield follows a\n-normal bitfield, and is of type short.\n+@item If a zero-length bit-field follows a normal bit-field, the type of the\n+zero-length bit-field may affect the alignment of the structure as whole. For\n+example, @code{t2} has a size of 4 bytes, since the zero-length bit-field follows a\n+normal bit-field, and is of type short.\n \n-@item Even if a zero-length bitfield is not followed by a normal bitfield, it may\n+@item Even if a zero-length bit-field is not followed by a normal bit-field, it may\n still affect the alignment of the structure:\n \n @smallexample\n@@ -5102,7 +5102,7 @@ struct\n Here, @code{t4} takes up 4 bytes.\n @end enumerate\n \n-@item Zero-length bitfields following non-bitfield members are ignored:\n+@item Zero-length bit-fields following non-bit-field members are ignored:\n \n @smallexample\n struct\n@@ -5266,7 +5266,7 @@ alignment.  See your linker documentation for further information.\n \n @item packed\n This attribute, attached to @code{struct} or @code{union} type\n-definition, specifies that each member (other than zero-width bitfields)\n+definition, specifies that each member (other than zero-width bit-fields)\n of the structure or union is placed to minimize the memory required.  When\n attached to an @code{enum} definition, it indicates that the smallest\n integral type should be used.\n@@ -5782,11 +5782,11 @@ If you need to read the volatile object after an assignment has\n occurred, you must use a separate expression with an intervening\n sequence point.\n \n-As bitfields are not individually addressable, volatile bitfields may\n-be implicitly read when written to, or when adjacent bitfields are\n-accessed.  Bitfield operations may be optimized such that adjacent\n-bitfields are only partially accessed, if they straddle a storage unit\n-boundary.  For these reasons it is unwise to use volatile bitfields to\n+As bit-fields are not individually addressable, volatile bit-fields may\n+be implicitly read when written to, or when adjacent bit-fields are\n+accessed.  Bit-field operations may be optimized such that adjacent\n+bit-fields are only partially accessed, if they straddle a storage unit\n+boundary.  For these reasons it is unwise to use volatile bit-fields to\n access hardware.\n \n @node Extended Asm\n@@ -14485,7 +14485,7 @@ always the C-language name.\n \n For compatibility with Microsoft Windows compilers, GCC supports a\n set of @code{#pragma} directives that change the maximum alignment of\n-members of structures (other than zero-width bitfields), unions, and\n+members of structures (other than zero-width bit-fields), unions, and\n classes subsequently defined. The @var{n} value below always is required\n to be a small power of two and specifies the new alignment in bytes.\n "}]}