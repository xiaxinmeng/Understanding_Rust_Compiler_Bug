{"sha": "b46684ac1b706031ff141d69d9ac0df3e3522320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ2Njg0YWMxYjcwNjAzMWZmMTQxZDY5ZDlhYzBkZjNlMzUyMjMyMA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2014-10-24T11:49:10Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-10-24T11:49:10Z"}, "message": "vabdl.c: New file.\n\n2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vabdl.c: New file.\n\nFrom-SVN: r216650", "tree": {"sha": "e4acb7b6287dc80456f9d2d4624391b0bc499ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4acb7b6287dc80456f9d2d4624391b0bc499ee4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b46684ac1b706031ff141d69d9ac0df3e3522320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46684ac1b706031ff141d69d9ac0df3e3522320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b46684ac1b706031ff141d69d9ac0df3e3522320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46684ac1b706031ff141d69d9ac0df3e3522320/comments", "author": null, "committer": null, "parents": [{"sha": "bafbb90b5c9af91558f169a73aa07f980e545beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafbb90b5c9af91558f169a73aa07f980e545beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bafbb90b5c9af91558f169a73aa07f980e545beb"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "fa7df74e34541a465a890f118507a72e59a5910c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46684ac1b706031ff141d69d9ac0df3e3522320/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46684ac1b706031ff141d69d9ac0df3e3522320/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b46684ac1b706031ff141d69d9ac0df3e3522320", "patch": "@@ -1,3 +1,7 @@\n+2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vabdl.c: New file.\n+\n 2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vabd.c: New file."}, {"sha": "28018ab0aed3eba3c46f4c0ac5c0043974bf1355", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vabdl.c", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46684ac1b706031ff141d69d9ac0df3e3522320/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvabdl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46684ac1b706031ff141d69d9ac0df3e3522320/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvabdl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvabdl.c?ref=b46684ac1b706031ff141d69d9ac0df3e3522320", "patch": "@@ -0,0 +1,109 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x11, 0x10, 0xf, 0xe,\n+\t\t\t\t\t0xd, 0xc, 0xb, 0xa };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x3, 0x2, 0x1, 0x0 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x18, 0x17 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xef, 0xf0, 0xf1, 0xf2,\n+\t\t\t\t\t 0xf3, 0xf4, 0xf5, 0xf6 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffe3, 0xffe4, 0xffe5, 0xffe6 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xffffffe8,\n+\t\t\t\t\t 0xffffffe9 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+#define TEST_MSG \"VABDL\"\n+void exec_vabdl (void)\n+{\n+  /* Basic test: v4=vabdl(v1,v2), then store the result.  */\n+#define TEST_VABDL(T1, T2, W, W2, N)\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    vabdl_##T2##W(VECT_VAR(vector1, T1, W, N),\t\t\t\t\\\n+\t\t  VECT_VAR(vector2, T1, W, N));\t\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+#define DECL_VABDL_VAR_LONG(VAR)\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, int, 64, 2);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 64, 2)\n+\n+#define DECL_VABDL_VAR_SHORT(VAR)\t\t\\\n+  DECL_VARIABLE(VAR, int, 8, 8);\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 8, 8);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 2)\n+\n+  DECL_VABDL_VAR_SHORT(vector1);\n+  DECL_VABDL_VAR_SHORT(vector2);\n+  DECL_VABDL_VAR_LONG(vector_res);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector1\" from \"buffer\".  */\n+  VLOAD(vector1, buffer, , int, s, 8, 8);\n+  VLOAD(vector1, buffer, , int, s, 16, 4);\n+  VLOAD(vector1, buffer, , int, s, 32, 2);\n+  VLOAD(vector1, buffer, , uint, u, 8, 8);\n+  VLOAD(vector1, buffer, , uint, u, 16, 4);\n+  VLOAD(vector1, buffer, , uint, u, 32, 2);\n+\n+  /* Choose init value arbitrarily.  */\n+  VDUP(vector2, , int, s, 8, 8, 1);\n+  VDUP(vector2, , int, s, 16, 4, -13);\n+  VDUP(vector2, , int, s, 32, 2, 8);\n+  VDUP(vector2, , uint, u, 8, 8, 1);\n+  VDUP(vector2, , uint, u, 16, 4, 13);\n+  VDUP(vector2, , uint, u, 32, 2, 8);\n+\n+  /* Execute the tests.  */\n+  TEST_VABDL(int, s, 8, 16, 8);\n+  TEST_VABDL(int, s, 16, 32, 4);\n+  TEST_VABDL(int, s, 32, 64, 2);\n+  TEST_VABDL(uint, u, 8, 16, 8);\n+  TEST_VABDL(uint, u, 16, 32, 4);\n+  TEST_VABDL(uint, u, 32, 64, 2);\n+\n+  CHECK_RESULTS (TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vabdl ();\n+  return 0;\n+}"}]}