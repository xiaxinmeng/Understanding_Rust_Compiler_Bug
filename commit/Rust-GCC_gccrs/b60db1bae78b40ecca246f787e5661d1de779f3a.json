{"sha": "b60db1bae78b40ecca246f787e5661d1de779f3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwZGIxYmFlNzhiNDBlY2NhMjQ2Zjc4N2U1NjYxZDFkZTc3OWYzYQ==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2008-04-21T20:15:38Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2008-04-21T20:15:38Z"}, "message": "sbitmap.c (sbitmap_range_empty_p): New function.\n\n2008-04-24  Kenneth Zadeck <zadeck@naturalbridge.com>\n\t* sbitmap.c (sbitmap_range_empty_p): New function.\n\t* sbitmap.h (sbitmap_range_empty_p): New function.\n\t* bitmap.h: Now includes obstack.h.\n\nFrom-SVN: r134529", "tree": {"sha": "60a502b3646568411cd11bb0bfb90478e6ddf309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60a502b3646568411cd11bb0bfb90478e6ddf309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60db1bae78b40ecca246f787e5661d1de779f3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60db1bae78b40ecca246f787e5661d1de779f3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60db1bae78b40ecca246f787e5661d1de779f3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60db1bae78b40ecca246f787e5661d1de779f3a/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d9d0028e5fd4e6a21df223aa500bda28a90a81a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9d0028e5fd4e6a21df223aa500bda28a90a81a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9d0028e5fd4e6a21df223aa500bda28a90a81a"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "8b6363a613fbcfd54a03f78177d0b84e9294e888", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b60db1bae78b40ecca246f787e5661d1de779f3a", "patch": "@@ -1,3 +1,9 @@\n+2008-04-24  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\t* sbitmap.c (sbitmap_range_empty_p): New function.\n+\t* sbitmap.h (sbitmap_range_empty_p): New function.\n+\t* bitmap.h: Now includes obstack.h.  \n+\n+\n 2008-04-24  Richard Sandiford  <rsandifo@nildram.co.uk>\n \t    Kenneth Zadeck <zadeck@naturalbridge.com>\n "}, {"sha": "2a3b0b4baf8c0651862e5fcb4d07cdd58264c5ec", "filename": "gcc/bitmap.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=b60db1bae78b40ecca246f787e5661d1de779f3a", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GCC_BITMAP_H\n #include \"hashtab.h\"\n #include \"statistics.h\"\n+#include \"obstack.h\"\n \n /* Fundamental storage type for bitmap.  */\n "}, {"sha": "cab4ec0e0ed4040716a56b33c8c5d664d9326139", "filename": "gcc/sbitmap.c", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2Fsbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2Fsbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.c?ref=b60db1bae78b40ecca246f787e5661d1de779f3a", "patch": "@@ -1,5 +1,5 @@\n /* Simple bitmaps.\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2006, 2007\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -273,6 +273,57 @@ sbitmap_empty_p (const_sbitmap bmap)\n   return true;\n }\n \n+/* Return false if any of the N bits are set in MAP starting at\n+   START.  */\n+\n+bool \n+sbitmap_range_empty_p (const_sbitmap bmap, unsigned int start, unsigned int n)\n+{\n+  unsigned int i = start / SBITMAP_ELT_BITS;\n+  SBITMAP_ELT_TYPE elm;\n+  unsigned int shift = start % SBITMAP_ELT_BITS;\n+\n+  gcc_assert (bmap->n_bits >= start + n);\n+\n+  elm = bmap->elms[i];\n+  elm = elm >> shift;\n+\n+  if (shift + n <= SBITMAP_ELT_BITS)\n+    {\n+      /* The bits are totally contained in a single element.  */\n+      if (shift + n < SBITMAP_ELT_BITS)\n+        elm &= ((1 << n) - 1);\n+      return (elm == 0);\n+    }\n+\n+  if (elm) \n+    return false;\n+\n+  n -= SBITMAP_ELT_BITS - shift;\n+  i++;\n+\n+  /* Deal with full elts.  */\n+  while (n >= SBITMAP_ELT_BITS)\n+    {\n+      if (bmap->elms[i])\n+\treturn false;\n+      i++;\n+      n -= SBITMAP_ELT_BITS;\n+    }\n+\n+  /* The leftover bits.  */\n+  if (n)\n+    {\n+      elm = bmap->elms[i];\n+      elm &= ((1 << n) - 1);\n+      return (elm == 0);\n+    }  \n+\n+  return true;\n+}\n+\n+\n+\n /* Zero all elements in a bitmap.  */\n \n void"}, {"sha": "7e2bc707677750baa8b1ea13a06ba1c6c83ddb5c", "filename": "gcc/sbitmap.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2Fsbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60db1bae78b40ecca246f787e5661d1de779f3a/gcc%2Fsbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.h?ref=b60db1bae78b40ecca246f787e5661d1de779f3a", "patch": "@@ -1,5 +1,5 @@\n /* Simple bitmaps.\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2006, 2007 \n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -219,6 +219,7 @@ extern void sbitmap_copy (sbitmap, const_sbitmap);\n extern void sbitmap_copy_n (sbitmap, const_sbitmap, unsigned int);\n extern int sbitmap_equal (const_sbitmap, const_sbitmap);\n extern bool sbitmap_empty_p (const_sbitmap);\n+extern bool sbitmap_range_empty_p (const_sbitmap, unsigned int, unsigned int);\n extern void sbitmap_zero (sbitmap);\n extern void sbitmap_ones (sbitmap);\n extern void sbitmap_vector_zero (sbitmap *, unsigned int);"}]}