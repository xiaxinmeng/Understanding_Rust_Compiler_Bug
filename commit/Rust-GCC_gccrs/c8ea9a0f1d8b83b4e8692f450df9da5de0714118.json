{"sha": "c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhlYTlhMGYxZDhiODNiNGU4NjkyZjQ1MGRmOWRhNWRlMDcxNDExOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-05-30T18:28:56Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-05-30T18:28:56Z"}, "message": "gengenrtl.c (type_from_format, [...]): Support 'B'.\n\n\t* gengenrtl.c (type_from_format, accessor_from_format): Support 'B'.\n\t* rtl.texi: Document 'B'\n\nFrom-SVN: r54062", "tree": {"sha": "9e1cdb7bb52fd56d7d73e3d3f91b644d3a435450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e1cdb7bb52fd56d7d73e3d3f91b644d3a435450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/comments", "author": null, "committer": null, "parents": [{"sha": "8abbd76ae107be43d0b8b8524c018761a95e0ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abbd76ae107be43d0b8b8524c018761a95e0ec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8abbd76ae107be43d0b8b8524c018761a95e0ec3"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "fbbe1f21fe30a3dd4535bf0f1f221731efdee0e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "patch": "@@ -1,3 +1,8 @@\n+Thu May 30 20:28:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gengenrtl.c (type_from_format, accessor_from_format): Support 'B'.\n+\t* rtl.texi: Document 'B'\n+\n 2002-05-30  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/m68k/netbsd-elf.h (LONG_DOUBLE_TYPE_SIZE): Compute"}, {"sha": "abeba3c26b8e02d6f7371dc7f39feb05d96f6d8e", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "patch": "@@ -243,6 +243,9 @@ core, @samp{V} is equivalent to @samp{E}, but when the object is read\n from an @samp{md} file, the vector value of this operand may be omitted.\n An omitted vector is effectively the same as a vector of no elements.\n \n+@item B\n+@samp{B} indicates a pointer to basic block strucure.\n+\n @item 0\n @samp{0} means a slot whose contents do not fit any normal category.\n @samp{0} slots are not printed at all in dumps, and are often used in"}, {"sha": "07de2170f4ab7f8d872f894e5c380af1564d6560", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ea9a0f1d8b83b4e8692f450df9da5de0714118/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=c8ea9a0f1d8b83b4e8692f450df9da5de0714118", "patch": "@@ -81,6 +81,8 @@ type_from_format (c)\n       return \"struct bitmap_head_def *\";  /* bitmap - typedef not available */\n     case 't':\n       return \"union tree_node *\";  /* tree - typedef not available */\n+    case 'B':\n+      return \"struct basic_block_def *\";  /* basic block - typedef not available */\n     default:\n       abort ();\n     }\n@@ -115,8 +117,8 @@ accessor_from_format (c)\n     case 't':\n       return \"XTREE\";\n \n-    default:\n-      abort ();\n+    case 'B':\n+      return \"XBBDEF\";\n     }\n }\n "}]}