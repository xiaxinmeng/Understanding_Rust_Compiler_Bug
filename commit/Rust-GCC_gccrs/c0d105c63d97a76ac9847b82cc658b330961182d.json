{"sha": "c0d105c63d97a76ac9847b82cc658b330961182d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBkMTA1YzYzZDk3YTc2YWM5ODQ3YjgyY2M2NThiMzMwOTYxMTgyZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-12-06T11:32:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-12-06T11:32:52Z"}, "message": "df-problems.c (df_rd_local_compute): Use bitmap_release.\n\n2018-12-06  Richard Biener  <rguenther@suse.de>\n\n\t* df-problems.c (df_rd_local_compute): Use bitmap_release.\n\t(df_live_free): Likewise.\n\t(df_md_local_compute): Likewise.\n\t(df_md_free): Release df_md_scratch bitmap.\n\t* loop-invariant.c (calculate_loop_reg_pressure): Use\n\tbitmap_release.\n\t* sched-deps.c (true_dependency_cache, output_dependency_cache,\n\tanti_dependency_cache, control_dependency_cache,\n\tspec_dependency_cache): Use bitmap instead of bitmap_head *.\n\t* sched-ebb.c (schedule_ebbs_init): Initialize non-GTY\n\tdont_calc_deps as bitmap allocated from obstack not GC.\n\t(schedule_ebbs_finish): Use bitmap_release.\n\t* sched-rgn.c (schedule_insns): Initialize non-GTY\n\tnot_in_df as bitmap allocated from obstack not GC.\n\tUse bitmap_release.\n\t* sel-sched.c (_forced_ebb_heads): Remove premature optimization.\n\t(sel_region_init): Allocate forced_ebb_heads.\n\t(sel_region_finish): Free forced_ebb_heads.\n\nFrom-SVN: r266851", "tree": {"sha": "bbd5798495f8197c79c8198fc04baab67c83d0bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbd5798495f8197c79c8198fc04baab67c83d0bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0d105c63d97a76ac9847b82cc658b330961182d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d105c63d97a76ac9847b82cc658b330961182d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0d105c63d97a76ac9847b82cc658b330961182d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d105c63d97a76ac9847b82cc658b330961182d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c252ef3cbf964ce6022e5431de7f264a929a100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c252ef3cbf964ce6022e5431de7f264a929a100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c252ef3cbf964ce6022e5431de7f264a929a100"}], "stats": {"total": 60, "additions": 39, "deletions": 21}, "files": [{"sha": "168929181dd95e83043c9d6c9212c8fcea64eb1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -1,3 +1,24 @@\n+2018-12-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* df-problems.c (df_rd_local_compute): Use bitmap_release.\n+\t(df_live_free): Likewise.\n+\t(df_md_local_compute): Likewise.\n+\t(df_md_free): Release df_md_scratch bitmap.\n+\t* loop-invariant.c (calculate_loop_reg_pressure): Use\n+\tbitmap_release.\n+\t* sched-deps.c (true_dependency_cache, output_dependency_cache,\n+\tanti_dependency_cache, control_dependency_cache,\n+\tspec_dependency_cache): Use bitmap instead of bitmap_head *.\n+\t* sched-ebb.c (schedule_ebbs_init): Initialize non-GTY\n+\tdont_calc_deps as bitmap allocated from obstack not GC.\n+\t(schedule_ebbs_finish): Use bitmap_release.\n+\t* sched-rgn.c (schedule_insns): Initialize non-GTY\n+\tnot_in_df as bitmap allocated from obstack not GC.\n+\tUse bitmap_release.\n+\t* sel-sched.c (_forced_ebb_heads): Remove premature optimization.\n+\t(sel_region_init): Allocate forced_ebb_heads.\n+\t(sel_region_finish): Free forced_ebb_heads.\n+\n 2018-12-06  Richard Biener  <rguenther@suse.de>\n \n \t* bitmap.c (bitmap_head::crashme): Define."}, {"sha": "ccab9a96bd74ab3b9d312e2d45cdfc80ebc3cc1a", "filename": "gcc/df-problems.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -419,8 +419,8 @@ df_rd_local_compute (bitmap all_blocks)\n \t}\n     }\n \n-  bitmap_clear (&seen_in_block);\n-  bitmap_clear (&seen_in_insn);\n+  bitmap_release (&seen_in_block);\n+  bitmap_release (&seen_in_insn);\n }\n \n \n@@ -1585,7 +1585,7 @@ df_live_free (void)\n       df_live->block_info_size = 0;\n       free (df_live->block_info);\n       df_live->block_info = NULL;\n-      bitmap_clear (&df_live_scratch);\n+      bitmap_release (&df_live_scratch);\n       bitmap_obstack_release (&problem_data->live_bitmaps);\n       free (problem_data);\n       df_live->problem_data = NULL;\n@@ -4533,7 +4533,7 @@ df_md_local_compute (bitmap all_blocks)\n       df_md_bb_local_compute (bb_index);\n     }\n \n-  bitmap_clear (&seen_in_insn);\n+  bitmap_release (&seen_in_insn);\n \n   frontiers = XNEWVEC (bitmap_head, last_basic_block_for_fn (cfun));\n   FOR_ALL_BB_FN (bb, cfun)\n@@ -4649,6 +4649,7 @@ df_md_free (void)\n   struct df_md_problem_data *problem_data\n     = (struct df_md_problem_data *) df_md->problem_data;\n \n+  bitmap_release (&df_md_scratch);\n   bitmap_obstack_release (&problem_data->md_bitmaps);\n   free (problem_data);\n   df_md->problem_data = NULL;"}, {"sha": "5bd6fc771eeb414840c9323a7db3c5c67d390ba9", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -2201,7 +2201,7 @@ calculate_loop_reg_pressure (void)\n \t    }\n \t}\n     }\n-  bitmap_clear (&curr_regs_live);\n+  bitmap_release (&curr_regs_live);\n   if (flag_ira_region == IRA_REGION_MIXED\n       || flag_ira_region == IRA_REGION_ALL)\n     FOR_EACH_LOOP (loop, 0)"}, {"sha": "dfdf5cc889522a6decccd5018398d1f1cb5327c9", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -461,11 +461,11 @@ static HARD_REG_SET implicit_reg_pending_uses;\n    has enough entries to represent a dependency on any other insn in\n    the insn chain.  All bitmap for true dependencies cache is\n    allocated then the rest two ones are also allocated.  */\n-static bitmap_head *true_dependency_cache = NULL;\n-static bitmap_head *output_dependency_cache = NULL;\n-static bitmap_head *anti_dependency_cache = NULL;\n-static bitmap_head *control_dependency_cache = NULL;\n-static bitmap_head *spec_dependency_cache = NULL;\n+static bitmap true_dependency_cache = NULL;\n+static bitmap output_dependency_cache = NULL;\n+static bitmap anti_dependency_cache = NULL;\n+static bitmap control_dependency_cache = NULL;\n+static bitmap spec_dependency_cache = NULL;\n static int cache_size;\n \n /* True if we should mark added dependencies as a non-register deps.  */"}, {"sha": "49ae2865419170e69c43ca3592ac48b27c243b36", "filename": "gcc/sched-ebb.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsched-ebb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsched-ebb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-ebb.c?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -588,15 +588,14 @@ schedule_ebbs_init (void)\n   compute_bb_for_insn ();\n \n   /* Initialize DONT_CALC_DEPS and ebb-{start, end} markers.  */\n-  bitmap_initialize (&dont_calc_deps, 0);\n-  bitmap_clear (&dont_calc_deps);\n+  bitmap_initialize (&dont_calc_deps, &bitmap_default_obstack);\n }\n \n /* Perform cleanups after scheduling using schedules_ebbs or schedule_ebb.  */\n void\n schedule_ebbs_finish (void)\n {\n-  bitmap_clear (&dont_calc_deps);\n+  bitmap_release (&dont_calc_deps);\n \n   /* Reposition the prologue and epilogue notes in case we moved the\n      prologue/epilogue insns.  */"}, {"sha": "ea8dd5c7b76512165df8ea46a1e7cf9213f1b9f4", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -3507,8 +3507,7 @@ schedule_insns (void)\n   haifa_sched_init ();\n   sched_rgn_init (reload_completed);\n \n-  bitmap_initialize (&not_in_df, 0);\n-  bitmap_clear (&not_in_df);\n+  bitmap_initialize (&not_in_df, &bitmap_default_obstack);\n \n   /* Schedule every region in the subroutine.  */\n   for (rgn = 0; rgn < nr_regions; rgn++)\n@@ -3517,7 +3516,7 @@ schedule_insns (void)\n \n   /* Clean up.  */\n   sched_rgn_finish ();\n-  bitmap_clear (&not_in_df);\n+  bitmap_release (&not_in_df);\n \n   haifa_sched_finish ();\n }"}, {"sha": "e57a8f2dceff2a1372c8a1370b733118f1e01a76", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d105c63d97a76ac9847b82cc658b330961182d/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=c0d105c63d97a76ac9847b82cc658b330961182d", "patch": "@@ -473,8 +473,7 @@ static int first_emitted_uid;\n \n /* Set of basic blocks that are forced to start new ebbs.  This is a subset\n    of all the ebb heads.  */\n-static bitmap_head _forced_ebb_heads;\n-bitmap_head *forced_ebb_heads = &_forced_ebb_heads;\n+bitmap forced_ebb_heads;\n \n /* Blocks that need to be rescheduled after pipelining.  */\n bitmap blocks_to_reschedule = NULL;\n@@ -6947,8 +6946,7 @@ sel_region_init (int rgn)\n   memset (reg_rename_tick, 0, sizeof reg_rename_tick);\n   reg_rename_this_tick = 0;\n \n-  bitmap_initialize (forced_ebb_heads, 0);\n-  bitmap_clear (forced_ebb_heads);\n+  forced_ebb_heads = BITMAP_ALLOC (NULL);\n \n   setup_nop_vinsn ();\n   current_copies = BITMAP_ALLOC (NULL);\n@@ -7290,7 +7288,7 @@ sel_region_finish (bool reset_sched_cycles_p)\n \n   sel_finish_global_and_expr ();\n \n-  bitmap_clear (forced_ebb_heads);\n+  BITMAP_FREE (forced_ebb_heads);\n \n   free_nop_vinsn ();\n "}]}