{"sha": "ae3115664af05ea853e101ea812148a12c5ed96b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzMTE1NjY0YWYwNWVhODUzZTEwMWVhODEyMTQ4YTEyYzVlZDk2Yg==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-02-22T06:17:46Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-02-22T06:17:46Z"}, "message": "re PR c/19999 (-Wfloat-equal does not warn for complex numbers)\n\ngcc/:\nPR c/19999\n* c-typeck.c (build_binary_op): Warn about floating point\ncomparisons if FLOAT_TYPE_P, not only for REAL_TYPE.\n\ngcc/cp/:\n* typeck.c (build_binary_op): Warn about floating point\ncomparisons if FLOAT_TYPE_P, not only for REAL_TYPE.\n\ngcc/testsuite/:\n* gcc.dg/Wfloat-equal-1.c: New.\n* g++.dg/warn/Wfloat-equal-1.C: New.\n\nFrom-SVN: r132540", "tree": {"sha": "3f5c89f2924defd243a7584af42364ce079bb2fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f5c89f2924defd243a7584af42364ce079bb2fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae3115664af05ea853e101ea812148a12c5ed96b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3115664af05ea853e101ea812148a12c5ed96b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3115664af05ea853e101ea812148a12c5ed96b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3115664af05ea853e101ea812148a12c5ed96b/comments", "author": null, "committer": null, "parents": [{"sha": "24219f12064acaa1575b66a9f498e8bc7b4894f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24219f12064acaa1575b66a9f498e8bc7b4894f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24219f12064acaa1575b66a9f498e8bc7b4894f9"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "a7253f95ff1bceceec16b45df5e8259b9faabaff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -1,3 +1,9 @@\n+2008-02-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR c/19999\n+\t* c-typeck.c (build_binary_op): Warn about floating point\n+\tcomparisons if FLOAT_TYPE_P, not only for REAL_TYPE.\n+\n 2008-02-21  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR target/34526"}, {"sha": "55b4b23a8321072d7796c003a0c4d52cecded76d", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -8138,7 +8138,7 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n \n     case EQ_EXPR:\n     case NE_EXPR:\n-      if (code0 == REAL_TYPE || code1 == REAL_TYPE)\n+      if (FLOAT_TYPE_P (type0) || FLOAT_TYPE_P (type1))\n \twarning (OPT_Wfloat_equal,\n \t\t \"comparing floating point with == or != is unsafe\");\n       /* Result of comparison is always int,"}, {"sha": "b300db04bff071c0b65aa0b3591d854095ecb244", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -1,3 +1,9 @@\n+2008-02-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR c/19999\n+\t* typeck.c (build_binary_op): Warn about floating point\n+\tcomparisons if FLOAT_TYPE_P, not only for REAL_TYPE.\n+\n 2008-02-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/34950"}, {"sha": "eef6914da567cc434de48bedb76acf20d4729b73", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -3359,7 +3359,7 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n \n     case EQ_EXPR:\n     case NE_EXPR:\n-      if (code0 == REAL_TYPE || code1 == REAL_TYPE)\n+      if (FLOAT_TYPE_P (type0) || FLOAT_TYPE_P (type1))\n \twarning (OPT_Wfloat_equal,\n \t\t \"comparing floating point with == or != is unsafe\");\n       if ((TREE_CODE (orig_op0) == STRING_CST && !integer_zerop (op1))"}, {"sha": "493effcce42b6870a89c63d85a258f11bf091485", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -1,3 +1,9 @@\n+2008-02-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR c/19999\n+\t* gcc.dg/Wfloat-equal-1.c: New.\n+\t* g++.dg/warn/Wfloat-equal-1.C: New.\n+\n 2008-02-21  Michael Matz  <matz@suse.de>\n \n \tPR target/35264"}, {"sha": "36b3fa53f3f66ff0e2ad3593694badc24c1f2be9", "filename": "gcc/testsuite/g++.dg/warn/Wfloat-equal-1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWfloat-equal-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWfloat-equal-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWfloat-equal-1.C?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/19999 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wfloat-equal\" } */\n+\n+double a, b;\n+_Complex double c, d;\n+int f(void) { return a == b; } /* { dg-warning \"comparing floating point\" } */\n+int g(void) { return c == d; } /* { dg-warning \"comparing floating point\" } */\n+int h(void) { return a != b; } /* { dg-warning \"comparing floating point\" } */\n+int i(void) { return c != d; } /* { dg-warning \"comparing floating point\" } */"}, {"sha": "36b3fa53f3f66ff0e2ad3593694badc24c1f2be9", "filename": "gcc/testsuite/gcc.dg/Wfloat-equal-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Ftestsuite%2Fgcc.dg%2FWfloat-equal-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3115664af05ea853e101ea812148a12c5ed96b/gcc%2Ftestsuite%2Fgcc.dg%2FWfloat-equal-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWfloat-equal-1.c?ref=ae3115664af05ea853e101ea812148a12c5ed96b", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/19999 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wfloat-equal\" } */\n+\n+double a, b;\n+_Complex double c, d;\n+int f(void) { return a == b; } /* { dg-warning \"comparing floating point\" } */\n+int g(void) { return c == d; } /* { dg-warning \"comparing floating point\" } */\n+int h(void) { return a != b; } /* { dg-warning \"comparing floating point\" } */\n+int i(void) { return c != d; } /* { dg-warning \"comparing floating point\" } */"}]}