{"sha": "00ef7059049de2761ed8c9db8839ce3566d09cb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBlZjcwNTkwNDlkZTI3NjFlZDhjOWRiODgzOWNlMzU2NmQwOWNiNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-19T20:10:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-19T20:10:37Z"}, "message": "re PR c++/51553 (brace initialization and conversion operators)\n\n\tPR c++/51553\n\t* call.c (add_function_candidate): Allow conversions for the copy\n\tparm in list-initialization unless the argument is an init-list.\n\nFrom-SVN: r182495", "tree": {"sha": "e44c01cd576e9d5ca4c9bd0aaa9ba03120617938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e44c01cd576e9d5ca4c9bd0aaa9ba03120617938"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00ef7059049de2761ed8c9db8839ce3566d09cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ef7059049de2761ed8c9db8839ce3566d09cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00ef7059049de2761ed8c9db8839ce3566d09cb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ef7059049de2761ed8c9db8839ce3566d09cb7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d58d6eb5eca0451638d50752f3cbcc40084c4116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58d6eb5eca0451638d50752f3cbcc40084c4116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58d6eb5eca0451638d50752f3cbcc40084c4116"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "e44008733203c023343b0e65ede42944e3eb30ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=00ef7059049de2761ed8c9db8839ce3566d09cb7", "patch": "@@ -1,3 +1,9 @@\n+2011-12-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51553\n+\t* call.c (add_function_candidate): Allow conversions for the copy\n+\tparm in list-initialization unless the argument is an init-list.\n+\n 2011-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/51619"}, {"sha": "3e6db511923f8f321440098fccd2e29fdb4d886d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=00ef7059049de2761ed8c9db8839ce3566d09cb7", "patch": "@@ -1964,8 +1964,10 @@ add_function_candidate (struct z_candidate **candidates,\n \t    {\n \t      lflags |= LOOKUP_COPY_PARM;\n \t      /* We allow user-defined conversions within init-lists, but\n-\t\t not for the copy constructor.  */\n-\t      if (flags & LOOKUP_NO_COPY_CTOR_CONVERSION)\n+\t\t don't list-initialize the copy parm, as that would mean\n+\t\t using two levels of braces for the same type.  */\n+\t      if ((flags & LOOKUP_NO_COPY_CTOR_CONVERSION)\n+\t\t  && BRACE_ENCLOSED_INITIALIZER_P (arg))\n \t\tlflags |= LOOKUP_NO_CONVERSION;\n \t    }\n \t  else"}, {"sha": "d08c3ad0831aec5ce57a5afd0c04a86f6a1c1027", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00ef7059049de2761ed8c9db8839ce3566d09cb7", "patch": "@@ -1,5 +1,8 @@\n 2011-12-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51553\n+\t* g++.dg/cpp0x/initlist64.C: New.\n+\n \tPR c++/51228\n \t* c-c++-common/transparent-union-1.c: New.\n "}, {"sha": "337e89b3568942c031aca1ef80356be1c17bec33", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist64.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ef7059049de2761ed8c9db8839ce3566d09cb7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist64.C?ref=00ef7059049de2761ed8c9db8839ce3566d09cb7", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/51553\n+// { dg-options -std=c++0x }\n+\n+struct X\n+{\n+  X();\n+};\n+\n+struct Y\n+{\n+  operator X() const;\n+};\n+\n+struct Z\n+{\n+  explicit operator X() const;\n+};\n+\n+X a = { Y() };\n+X aa = Y();\n+\n+X b{ Y() };\n+X bb(Y());\n+\n+X c = { Z() };  // { dg-error \"\" \"\" { xfail *-*-* } }\n+X cc = Z();\t// { dg-error \"\" }\n+\n+X d{ Z() };\n+X dd( Z() );"}]}