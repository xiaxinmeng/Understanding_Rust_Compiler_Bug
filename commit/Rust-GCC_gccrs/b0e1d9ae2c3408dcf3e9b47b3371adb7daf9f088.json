{"sha": "b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBlMWQ5YWUyYzM0MDhkY2YzZTliNDdiMzM3MWFkYjdkYWY5ZjA4OA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-02-17T15:33:54Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-02-17T15:33:54Z"}, "message": "2003-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/DatagramSocket.java\n\t(connect): Merged with classpath.\n\t(disconnect): Merged documentation with classpath.\n\t(receice): Merged documentation with classpath.\n\t(send): Merged documentation with classpath.\n\nFrom-SVN: r63000", "tree": {"sha": "1555d8bff7251181635d8992be9910bfa510ceb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1555d8bff7251181635d8992be9910bfa510ceb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088/comments", "author": null, "committer": null, "parents": [{"sha": "0701e74c80c96c0b6996c970b21f0f383345ff0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0701e74c80c96c0b6996c970b21f0f383345ff0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0701e74c80c96c0b6996c970b21f0f383345ff0e"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "18ae76856635ece6b3af42c6c48ab22bdb8af5e4", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088", "patch": "@@ -1,3 +1,11 @@\n+2003-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/DatagramSocket.java\n+\t(connect): Merged with classpath.\n+\t(disconnect): Merged documentation with classpath.\n+\t(receice): Merged documentation with classpath.\n+\t(send): Merged documentation with classpath.\n+\t\n 2003-02-17  Michael Koch  <konqueror@gmx.de>\n \n \t* java/awt/dnd/DragSourceContext.java"}, {"sha": "334083a6f354de146adbae6b3b60e25b5dcf6a49", "filename": "libjava/java/net/DatagramSocket.java", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocket.java?ref=b0e1d9ae2c3408dcf3e9b47b3371adb7daf9f088", "patch": "@@ -429,45 +429,49 @@ public void setReceiveBufferSize(int size) throws SocketException\n   }\n \n   /**\n-   * Connects the datagram socket to a specified address/port.\n-   *\n-   * @param address The address to connect to.\n-   * @param port The port to connect to.\n+   * This method connects this socket to the specified address and port.\n+   * When a datagram socket is connected, it will only send or receive\n+   * packets to and from the host to which it is connected. A multicast\n+   * socket that is connected may only send and not receive packets.\n+   * \n+   * @param address The address to connect this socket to.\n+   * @param port The port to connect this socket to.\n    *\n    * @exception SocketException If an error occurs.\n-   * @exception IllegalArgumentException If address is null\n-   * or the port number is illegal.\n+   * @exception IllegalArgumentException If address or port are invalid.\n    * @exception SecurityException If the caller is not allowed to send\n-   * datagrams to and receive datagrams from the address and port.\n+   * datagrams to or receive from this address and port.\n    *\n    * @since 1.2\n    */\n   public void connect(InetAddress address, int port)\n   {\n     if (address == null)\n-      throw new IllegalArgumentException (\"Address may not be null\");\n+      throw new IllegalArgumentException (\"Connect address may not be null\");\n \n     if ((port < 1) || (port > 65535))\n-      throw new IllegalArgumentException (\"Port number is illegal\");\n+      throw new IllegalArgumentException (\"Port number is illegal: \" + port);\n \n     SecurityManager sm = System.getSecurityManager();\n     if (sm != null)\n-      sm.checkAccept(address.getHostName (), port);\n+      sm.checkConnect(address.getHostName(), port);\n \n     try\n       {\n-    impl.connect (address, port);\n-    remoteAddress = address;\n-    remotePort = port;\n+        impl.connect (address, port);\n+        remoteAddress = address;\n+        remotePort = port;\n       }\n     catch (SocketException e)\n       {\n       }\n   }\n \n   /**\n-   * Disconnects the datagram socket.\n-   *\n+   * This method disconnects this socket from the address/port it was\n+   * conencted to.  If the socket was not connected in the first place,\n+   * this method does nothing.\n+   * \n    * @since 1.2\n    */\n   public void disconnect()\n@@ -476,8 +480,11 @@ public void disconnect()\n   }\n \n   /**\n-   * Receive a datagram packet.\n-   *\n+   * Reads a datagram packet from the socket.  Note that this method\n+   * will block until a packet is received from the network.  On return,\n+   * the passed in <code>DatagramPacket</code> is populated with the data\n+   * received and all the other information about the packet.\n+   * \n    * @param p The datagram packet to put the incoming data into.\n    * \n    * @exception IOException If an error occurs.\n@@ -511,7 +518,8 @@ public synchronized void receive(DatagramPacket p) throws IOException\n   }\n \n   /**\n-   * Sends a datagram packet.\n+   * Sends the specified packet.  The host and port to which the packet\n+   * are to be sent should be set inside the packet.\n    *\n    * @param p The datagram packet to send.\n    *"}]}