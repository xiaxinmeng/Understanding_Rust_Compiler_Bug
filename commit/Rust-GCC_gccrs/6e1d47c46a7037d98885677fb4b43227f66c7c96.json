{"sha": "6e1d47c46a7037d98885677fb4b43227f66c7c96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUxZDQ3YzQ2YTcwMzdkOTg4ODU2NzdmYjRiNDMyMjdmNjZjN2M5Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2013-02-12T00:39:38Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2013-02-12T00:39:38Z"}, "message": "Makefile.am (hashtable_c++0x.lo, [...]): Use -fimplicit-templates.\n\n2013-02-11  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* src/c++11/Makefile.am (hashtable_c++0x.lo, hashtable_c++0x.o):\n\tUse -fimplicit-templates.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++11/hashtable_c++0x.cc: Remove instantiation for\n\tstd::lower_bound template.\n\nFrom-SVN: r195966", "tree": {"sha": "767c647181b9eefba945e3e5a20f2016a254f9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/767c647181b9eefba945e3e5a20f2016a254f9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e1d47c46a7037d98885677fb4b43227f66c7c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1d47c46a7037d98885677fb4b43227f66c7c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1d47c46a7037d98885677fb4b43227f66c7c96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1d47c46a7037d98885677fb4b43227f66c7c96/comments", "author": null, "committer": null, "parents": [{"sha": "6e310c46bbf413a90816cc9afd76dff561921713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e310c46bbf413a90816cc9afd76dff561921713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e310c46bbf413a90816cc9afd76dff561921713"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "56dddcdff0d1ca8e4ade912b73d0dff4de979c4a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6e1d47c46a7037d98885677fb4b43227f66c7c96", "patch": "@@ -1,3 +1,11 @@\n+2013-02-11  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* src/c++11/Makefile.am (hashtable_c++0x.lo, hashtable_c++0x.o):\n+\tUse -fimplicit-templates.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++11/hashtable_c++0x.cc: Remove instantiation for\n+\tstd::lower_bound template.\n+\n 2013-02-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/c_std/cstdlib (at_quick_exit, quick_exit): Do not declare."}, {"sha": "e7b48acef4633a9f7c1813e38ae17f9ccc5675d8", "filename": "libstdc++-v3/src/c++11/Makefile.am", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am?ref=6e1d47c46a7037d98885677fb4b43227f66c7c96", "patch": "@@ -60,6 +60,13 @@ vpath % $(top_srcdir)/src/c++11\n \n libc__11convenience_la_SOURCES = $(sources)  $(inst_sources)\n \n+# Use special rules for the hashtable.cc file so that all\n+# the generated template functions are also instantiated. \n+hashtable_c++0x.lo: hashtable_c++0x.cc\n+\t$(LTCXXCOMPILE) -fimplicit-templates -c $<\n+hashtable_c++0x.o: hashtable_c++0x.cc\n+\t$(CXXCOMPILE) -fimplicit-templates -c $<\n+\n # AM_CXXFLAGS needs to be in each subdirectory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after"}, {"sha": "a410748a4b8acdf197d23e8a5a8360840fbaf9eb", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=6e1d47c46a7037d98885677fb4b43227f66c7c96", "patch": "@@ -627,6 +627,13 @@ uninstall-am:\n \n vpath % $(top_srcdir)/src/c++11\n \n+# Use special rules for the hashtable.cc file so that all\n+# the generated template functions are also instantiated. \n+hashtable_c++0x.lo: hashtable_c++0x.cc\n+\t$(LTCXXCOMPILE) -fimplicit-templates -c $<\n+hashtable_c++0x.o: hashtable_c++0x.cc\n+\t$(CXXCOMPILE) -fimplicit-templates -c $<\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "7617c58576b3b380b517e9e6786c2f44b7b056a9", "filename": "libstdc++-v3/src/c++11/hashtable_c++0x.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1d47c46a7037d98885677fb4b43227f66c7c96/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc?ref=6e1d47c46a7037d98885677fb4b43227f66c7c96", "patch": "@@ -94,11 +94,4 @@ namespace __detail\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace __detail\n-\n- // Instantiations.\n- template\n- const unsigned long*\n- lower_bound<const unsigned long*, size_t>(const unsigned long*,\n-\t\t\t\t\t   const unsigned long*,\n-\t\t\t\t\t   const size_t&);\n } // namespace std"}]}