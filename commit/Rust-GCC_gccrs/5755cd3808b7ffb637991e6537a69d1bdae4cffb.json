{"sha": "5755cd3808b7ffb637991e6537a69d1bdae4cffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NWNkMzgwOGI3ZmZiNjM3OTkxZTY1MzdhNjlkMWJkYWU0Y2ZmYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-08-08T16:56:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-08T16:56:51Z"}, "message": "alias.c (get_alias_set): Return a previously calculated alias set for a VAR_DECL.\n\n        * alias.c (get_alias_set): Return a previously calculated\n        alias set for a VAR_DECL.\n        * function.c (gen_mem_addressof): Calculate the alias set before\n        touching the RTL.\n\nFrom-SVN: r44720", "tree": {"sha": "aebee6fdf45e18a5266d6c228d8bc47d74e8f54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aebee6fdf45e18a5266d6c228d8bc47d74e8f54e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5755cd3808b7ffb637991e6537a69d1bdae4cffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5755cd3808b7ffb637991e6537a69d1bdae4cffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5755cd3808b7ffb637991e6537a69d1bdae4cffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5755cd3808b7ffb637991e6537a69d1bdae4cffb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f0138b6b2669803f26f9a19adce9da9c8eb9911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f0138b6b2669803f26f9a19adce9da9c8eb9911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f0138b6b2669803f26f9a19adce9da9c8eb9911"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "37852f3fbfbb2fe392863b0d6a56ad89de82d6b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5755cd3808b7ffb637991e6537a69d1bdae4cffb", "patch": "@@ -1,3 +1,10 @@\n+2001-08-08  Jason Merrill  <jason_merrill@redhat.com>\n+\n+\t* alias.c (get_alias_set): Return a previously calculated\n+\talias set for a VAR_DECL.\n+\t* function.c (gen_mem_addressof): Calculate the alias set before\n+\ttouching the RTL.\n+\n Wed Aug  8 18:44:37 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.def: Set hitrates according our experimental run."}, {"sha": "a79589f0dccf77a18707791079cc8280a2384d65", "filename": "gcc/alias.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=5755cd3808b7ffb637991e6537a69d1bdae4cffb", "patch": "@@ -526,6 +526,13 @@ get_alias_set (t)\n \t    return 0;\n \t}\n \n+      /* If we've already determined the alias set for this decl, just\n+\t return it.  This is necessary for C++ anonymous unions, whose\n+\t component variables don't look like union members (boo!).  */\n+      if (TREE_CODE (t) == VAR_DECL\n+\t  && DECL_RTL_SET_P (t) && GET_CODE (DECL_RTL (t)) == MEM)\n+\treturn MEM_ALIAS_SET (DECL_RTL (t));\n+\n       /* Give the language another chance to do something special.  */\n       if (orig_t != t\n \t  && (set = lang_get_alias_set (t)) != -1)"}, {"sha": "5a169c69f6b53ec3edc92a0230dbaf07d1dc7ded", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5755cd3808b7ffb637991e6537a69d1bdae4cffb", "patch": "@@ -2857,6 +2857,9 @@ gen_mem_addressof (reg, decl)\n   rtx r = gen_rtx_ADDRESSOF (Pmode, gen_reg_rtx (GET_MODE (reg)),\n \t\t\t     REGNO (reg), decl);\n \n+  /* Calculate this before we start messing with decl's RTL.  */\n+  HOST_WIDE_INT set = get_alias_set (decl);\n+\n   /* If the original REG was a user-variable, then so is the REG whose\n      address is being taken.  Likewise for unchanging.  */\n   REG_USERVAR_P (XEXP (r, 0)) = REG_USERVAR_P (reg);\n@@ -2874,7 +2877,7 @@ gen_mem_addressof (reg, decl)\n       PUT_MODE (reg, decl_mode);\n       MEM_VOLATILE_P (reg) = TREE_SIDE_EFFECTS (decl);\n       MEM_SET_IN_STRUCT_P (reg, AGGREGATE_TYPE_P (type));\n-      set_mem_alias_set (reg, get_alias_set (decl));\n+      set_mem_alias_set (reg, set);\n \n       if (TREE_USED (decl) || DECL_INITIAL (decl) != 0)\n \tfixup_var_refs (reg, GET_MODE (reg), TREE_UNSIGNED (type), 0);"}, {"sha": "b5ed92c1492689a372f61ac63bae36e758df1d89", "filename": "gcc/testsuite/g++.dg/opt/alias1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5755cd3808b7ffb637991e6537a69d1bdae4cffb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias1.C?ref=5755cd3808b7ffb637991e6537a69d1bdae4cffb", "patch": "@@ -1,5 +1,5 @@\n // Test that type punning using an anonymous union works with strict aliasing.\n-// { dg-do run { xfail *-*-* } }\n+// { dg-do run }\n // { dg-options \"-O2 -fstrict-aliasing\" }\n \n extern \"C\" void abort ();"}]}