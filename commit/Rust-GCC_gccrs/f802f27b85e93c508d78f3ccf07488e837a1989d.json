{"sha": "f802f27b85e93c508d78f3ccf07488e837a1989d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgwMmYyN2I4NWU5M2M1MDhkNzhmM2NjZjA3NDg4ZTgzN2ExOTg5ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-10-29T16:56:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-10-29T16:56:18Z"}, "message": "re PR rtl-optimization/46226 (asm goto may leave stack pointer invalid)\n\nPR rtl-opt/46226\n* stmt.c (expand_asm_operands): Call do_pending_stack_adjust\nfor asm goto.\n\nFrom-SVN: r166067", "tree": {"sha": "b95a38887ae8c25b78b1a385d92460f1cf6ecc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b95a38887ae8c25b78b1a385d92460f1cf6ecc59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f802f27b85e93c508d78f3ccf07488e837a1989d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f802f27b85e93c508d78f3ccf07488e837a1989d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f802f27b85e93c508d78f3ccf07488e837a1989d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f802f27b85e93c508d78f3ccf07488e837a1989d/comments", "author": null, "committer": null, "parents": [{"sha": "a9c64fcc1ec3485dae75ee8a4bc871298df7ea44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c64fcc1ec3485dae75ee8a4bc871298df7ea44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9c64fcc1ec3485dae75ee8a4bc871298df7ea44"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "dc6d2313cce54ad95707cc310cbc4115ee9fe967", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f802f27b85e93c508d78f3ccf07488e837a1989d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f802f27b85e93c508d78f3ccf07488e837a1989d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f802f27b85e93c508d78f3ccf07488e837a1989d", "patch": "@@ -1,3 +1,9 @@\n+2010-10-29  Richard Henderson  <rth@redhat.com>\n+\n+\tPR rtl-opt/46226\n+\t* stmt.c (expand_asm_operands): Call do_pending_stack_adjust\n+\tfor asm goto.\n+\n 2010-10-29  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.c (output_move_quad): Fix ICE for CPU"}, {"sha": "c8f56f5470b68dc30f5048a43f314905a44e4d5b", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f802f27b85e93c508d78f3ccf07488e837a1989d/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f802f27b85e93c508d78f3ccf07488e837a1989d/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=f802f27b85e93c508d78f3ccf07488e837a1989d", "patch": "@@ -776,6 +776,10 @@ expand_asm_operands (tree string, tree outputs, tree inputs,\n \n   /* Second pass evaluates arguments.  */\n \n+  /* Make sure stack is consistent for asm goto.  */\n+  if (nlabels > 0)\n+    do_pending_stack_adjust ();\n+\n   ninout = 0;\n   for (i = 0, tail = outputs; tail; tail = TREE_CHAIN (tail), i++)\n     {"}, {"sha": "9934a4fbc79944577c254d8f787cf25fe71e91eb", "filename": "gcc/testsuite/gcc.dg/pr46226.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f802f27b85e93c508d78f3ccf07488e837a1989d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46226.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f802f27b85e93c508d78f3ccf07488e837a1989d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46226.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46226.c?ref=f802f27b85e93c508d78f3ccf07488e837a1989d", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-options \"-Os -fomit-frame-pointer\" } */\n+/* { dg-options \"-Os -fomit-frame-pointer -mno-accumulate-outgoing-args -fno-asynchronous-unwind-tables\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+extern void abort(void);\n+\n+static void *p[2];\n+\n+void __attribute__((noinline))\n+g(int x, ...)\n+{\n+  asm volatile (\"\" : : \"g\"(x));\n+}\n+\n+void __attribute__((noinline))\n+f(int x)\n+{\n+  p[0] = __builtin_return_address (0);\n+  if (x == 0)\n+    g(0);\n+  g(1, 2, 3, 4, 5, 6, 7);\n+\n+  asm goto (\"jmp %l0\" : : : : label);\n+  abort ();\n+\n+ label:\n+  p[1] = __builtin_return_address (0);\n+}\n+\n+int main()\n+{\n+  f(1);\n+  if (p[0] != p[1])\n+    abort ();\n+  return 0;\n+}"}]}