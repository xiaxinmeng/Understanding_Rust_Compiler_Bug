{"sha": "22f549fddc1f228a1a11ead232517f3aad82b217", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJmNTQ5ZmRkYzFmMjI4YTFhMTFlYWQyMzI1MTdmM2FhZDgyYjIxNw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-01-15T17:10:02Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-01-15T17:10:02Z"}, "message": "re PR target/19388 (MAX_OFILE_ALIGNMENT on PA HP-UX)\n\n\tPR ada/19388\n\t* pa.c (pa_asm_output_aligned_common): Warn if specified alignment\n\texceeds maximum alignment for global common data.\n\t* pa64-hpux.h (MAX_OFILE_ALIGNMENT): Define to 32768.\n\t* som.h (MAX_OFILE_ALIGNMENT): Likewise.\n\nFrom-SVN: r93698", "tree": {"sha": "dae82cea5b7cd69c9b6ec574e0cc1740020753d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dae82cea5b7cd69c9b6ec574e0cc1740020753d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22f549fddc1f228a1a11ead232517f3aad82b217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f549fddc1f228a1a11ead232517f3aad82b217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22f549fddc1f228a1a11ead232517f3aad82b217", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f549fddc1f228a1a11ead232517f3aad82b217/comments", "author": null, "committer": null, "parents": [{"sha": "19e1af6e02b563c05de791e3550ae70c0d04a147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e1af6e02b563c05de791e3550ae70c0d04a147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19e1af6e02b563c05de791e3550ae70c0d04a147"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "25e38eebfa49ca689c311302ba632b95b7d8e83b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22f549fddc1f228a1a11ead232517f3aad82b217", "patch": "@@ -1,3 +1,11 @@\n+2005-01-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR ada/19388\n+\t* pa.c (pa_asm_output_aligned_common): Warn if specified alignment\n+\texceeds maximum alignment for global common data.\n+\t* pa64-hpux.h (MAX_OFILE_ALIGNMENT): Define to 32768.\n+\t* som.h (MAX_OFILE_ALIGNMENT): Likewise.\n+\n 2004-01-15  Roger Sayle  <roger@eyesopen.com>\n \n \t* tree-ssa-dom.c (extract_range_from_cond): Correct condition."}, {"sha": "58642d10f288e7bcceee0f4b1efaf87879a087d2", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=22f549fddc1f228a1a11ead232517f3aad82b217", "patch": "@@ -8253,6 +8253,17 @@ pa_asm_output_aligned_common (FILE *stream,\n \t\t\t      unsigned HOST_WIDE_INT size,\n \t\t\t      unsigned int align)\n {\n+  unsigned int max_common_align;\n+\n+  max_common_align = TARGET_64BIT ? 128 : (size >= 4096 ? 256 : 64);\n+  if (align > max_common_align)\n+    {\n+      warning (\"alignment (%u) for %s exceeds maximum alignment \"\n+\t       \"for global common data.  Using %u\",\n+\t       align / BITS_PER_UNIT, name, max_common_align / BITS_PER_UNIT);\n+      align = max_common_align;\n+    }\n+\n   bss_section ();\n \n   assemble_name (stream, name);"}, {"sha": "fac71bd7787b7d1e7f03609eabbf0e03a419be78", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=22f549fddc1f228a1a11ead232517f3aad82b217", "patch": "@@ -122,11 +122,10 @@ Boston, MA 02111-1307, USA.  */\n \n    The .align directive in the HP assembler allows alignments up to\n    4096 bytes.  However, the maximum alignment of a global common symbol\n-   is 16 bytes using HP ld.  For consistency, we use the same limit\n-   with GNU ld.  */\n+   is 16 bytes using HP ld.  Unfortunately, this macro doesn't provide\n+   a method to check for common symbols.  */\n #undef MAX_OFILE_ALIGNMENT\n-#define MAX_OFILE_ALIGNMENT                                             \\\n-  (TREE_PUBLIC (decl) && DECL_COMMON (decl) ? 128 : 32768)\n+#define MAX_OFILE_ALIGNMENT 32768\n \n /* Due to limitations in the target structure, it isn't currently possible\n    to dynamically switch between the GNU and HP assemblers.  */"}, {"sha": "2d2e93e58ea39497443a20b92eeaf753823ea7c5", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f549fddc1f228a1a11ead232517f3aad82b217/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=22f549fddc1f228a1a11ead232517f3aad82b217", "patch": "@@ -287,11 +287,9 @@ do {\t\t\t\t\t\t\\\n    The .align directive in the HP assembler allows alignments up to 4096\n    bytes.  However, the maximum alignment of a global common symbol is 8\n    bytes for objects smaller than the page size (4096 bytes).  For larger\n-   objects, the linker provides an alignment of 32 bytes.  */\n-#define MAX_OFILE_ALIGNMENT\t\t\t\t\t\t\\\n-  (TREE_PUBLIC (decl) && DECL_COMMON (decl)\t\t\t\t\\\n-   ? (host_integerp (DECL_SIZE_UNIT (decl), 1) >= 4096 ? 256 : 64)\t\\\n-   : 32768)\n+   objects, the linker provides an alignment of 32 bytes.  Unfortunately,\n+   this macro doesn't provide a mechanism to test for common symbols.  */\n+#define MAX_OFILE_ALIGNMENT 32768\n \n /* The SOM linker hardcodes paths into binaries.  As a result, dotdots\n    must be removed from library prefixes to prevent binaries from depending"}]}