{"sha": "8008dd1c93cf12b8f6d8a23612e988d606281fdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwOGRkMWM5M2NmMTJiOGY2ZDhhMjM2MTJlOTg4ZDYwNjI4MWZkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-23T14:10:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-23T14:10:36Z"}, "message": "common.opt (gcolumn-info): Enable by default.\n\n\t* common.opt (gcolumn-info): Enable by default.\n\t* doc/invoke.texi (gcolumn-info): Document new default.\n\n\t* lib/scanasm.exp (dg-function-on-line): Accept optional column info.\n\t* gcc.dg/debug/dwarf2/pr53948.c: Likewise.\n\t* g++.dg/debug/dwarf2/pr77363.C: Likewise.\n\t* gcc.dg/debug/dwarf2/asm-line1.c: Add -gno-column-info to dg-options.\n\t* gcc.dg/debug/dwarf2/discriminator.c: Likewise.\n\t* g++.dg/debug/dwarf2/typedef6.C: Likewise.\n\nFrom-SVN: r254010", "tree": {"sha": "3bae04563e1f8c1e1621d41164e915ae159d1285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bae04563e1f8c1e1621d41164e915ae159d1285"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8008dd1c93cf12b8f6d8a23612e988d606281fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8008dd1c93cf12b8f6d8a23612e988d606281fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8008dd1c93cf12b8f6d8a23612e988d606281fdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8008dd1c93cf12b8f6d8a23612e988d606281fdf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee76c2f9cb557a3023b7e56fde5c87c24757735b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee76c2f9cb557a3023b7e56fde5c87c24757735b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee76c2f9cb557a3023b7e56fde5c87c24757735b"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "5a458a27cd4e8a5dee359a21fb6f41fc84f45602", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,3 +1,8 @@\n+2017-10-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* common.opt (gcolumn-info): Enable by default.\n+\t* doc/invoke.texi (gcolumn-info): Document new default.\n+\n 2017-10-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82672"}, {"sha": "836f05b95a219d17614f35e8dad61b22fef7d748", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -2873,7 +2873,7 @@ Common Driver JoinedOrMissing Negative(gdwarf)\n Generate debug information in COFF format.\n \n gcolumn-info\n-Common Driver Var(debug_column_info,1) Init(0)\n+Common Driver Var(debug_column_info,1) Init(1)\n Record DW_AT_decl_column and DW_AT_call_column in DWARF.\n \n gdwarf"}, {"sha": "3a879566487e2d12ce4634364d877d38848c10de", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -7065,7 +7065,7 @@ Allow using extensions of later DWARF standard version than selected with\n @opindex gno-column-info\n Emit location column information into DWARF debugging information, rather\n than just file and line.\n-This option is disabled by default.\n+This option is enabled by default.\n \n @item -gz@r{[}=@var{type}@r{]}\n @opindex gz"}, {"sha": "3aadb9e8a8954cfc00ba1f3cd7867ee9ddbf640a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,3 +1,12 @@\n+2017-10-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lib/scanasm.exp (dg-function-on-line): Accept optional column info.\n+\t* gcc.dg/debug/dwarf2/pr53948.c: Likewise.\n+\t* g++.dg/debug/dwarf2/pr77363.C: Likewise.\n+\t* gcc.dg/debug/dwarf2/asm-line1.c: Add -gno-column-info to dg-options.\n+\t* gcc.dg/debug/dwarf2/discriminator.c: Likewise.\n+\t* g++.dg/debug/dwarf2/typedef6.C: Likewise.\n+\n 2017-10-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82672"}, {"sha": "cd06c360a9804548dbf7b8ac68cd3ae7378cd5fe", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr77363.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr77363.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr77363.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr77363.C?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,9 +1,9 @@\n // PR debug/77363\n // { dg-options \"-gdwarf-2 -dA -fno-merge-debug-strings\" }\n-// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type2\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_type\" } }\n-// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type3\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_type\" } }\n-// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type4\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_type\" } }\n-// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type5\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_type\" } }\n+// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type2\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*(\\[^\\n\\r\\]* DW_AT_decl_column\\[^\\n\\r\\]*\\[\\n\\r]*)?\\[^\\n\\r\\]* DW_AT_type\" } }\n+// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type3\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*(\\[^\\n\\r\\]* DW_AT_decl_column\\[^\\n\\r\\]*\\[\\n\\r]*)?\\[^\\n\\r\\]* DW_AT_type\" } }\n+// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type4\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*(\\[^\\n\\r\\]* DW_AT_decl_column\\[^\\n\\r\\]*\\[\\n\\r]*)?\\[^\\n\\r\\]* DW_AT_type\" } }\n+// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_typedef\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*type5\\[^\\n\\r\\]* DW_AT_name\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*(\\[^\\n\\r\\]* DW_AT_decl_column\\[^\\n\\r\\]*\\[\\n\\r]*)?\\[^\\n\\r\\]* DW_AT_type\" } }\n \n typedef unsigned short type1;\n typedef unsigned char type2;"}, {"sha": "654eba023da66b2cb127b5b1bce0036c2ac53386", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/typedef6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef6.C?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,5 +1,5 @@\n // Origin PR debug/\n-// { dg-options \"-gdwarf-2 -dA\" }\n+// { dg-options \"-gdwarf-2 -dA -gno-column-info\" }\n \n class C {\n public:"}, {"sha": "aebfcad6008873992058eb70939167b0b9edd30d", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/asm-line1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fasm-line1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fasm-line1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fasm-line1.c?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,6 +1,6 @@\n /* PR debug/50983 */\n /* { dg-do compile { target *-*-gnu* } } */\n-/* { dg-options \"-O0 -gdwarf\" } */\n+/* { dg-options \"-O0 -gdwarf -gno-column-info\" } */\n /* { dg-final { scan-assembler \"is_stmt 1\" } } */\n \n int i;"}, {"sha": "fa24de8d7d482735db38335f0dbaf5574299c9a7", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/discriminator.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fdiscriminator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fdiscriminator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fdiscriminator.c?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,7 +1,7 @@\n /* HAVE_AS_DWARF2_DEBUG_LINE macro needs to be defined to pass the unittest.\n    However, dg cannot access it, so we restrict to GNU targets.  */\n /* { dg-do compile { target *-*-gnu* } } */\n-/* { dg-options \"-O0 -gdwarf\" } */\n+/* { dg-options \"-O0 -gdwarf -gno-column-info\" } */\n /* { dg-final { scan-assembler \"loc \\[0-9] 11 \\[0-9]( is_stmt \\[0-9])?\\n\" } } */\n /* { dg-final { scan-assembler \"loc \\[0-9] 11 \\[0-9]( is_stmt \\[0-9])? discriminator 2\\n\" } } */\n /* { dg-final { scan-assembler \"loc \\[0-9] 11 \\[0-9]( is_stmt \\[0-9])? discriminator 1\\n\" } } */"}, {"sha": "4485e19c1cdc399bd7206ca79a86c586df499f77", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/pr53948.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr53948.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr53948.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr53948.c?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -1,7 +1,7 @@\n /* Test that we have line information for the line\n    with local variable initializations.  */\n /* { dg-options \"-O0 -gdwarf -dA\" } */\n-/* { dg-final { scan-assembler \".loc 1 8 0|\\[#/!\\]\\[ \\t\\]+line 8\" } } */\n+/* { dg-final { scan-assembler \".loc 1 8 \\[0-9\\]|\\[#/!\\]\\[ \\t\\]+line 8\" } } */\n \n \n int f (register int a, register int b) {"}, {"sha": "a66bb28253196410554405facefa8641d1020c1d", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008dd1c93cf12b8f6d8a23612e988d606281fdf/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=8008dd1c93cf12b8f6d8a23612e988d606281fdf", "patch": "@@ -484,16 +484,16 @@ proc dg-function-on-line { args } {\n     }\n \n     if { [istarget hppa*-*-*] } {\n-\tset pattern [format {\\t;[^:]+:%d\\n(\\t[^\\t]+\\n)+%s:\\n\\t.PROC} \\\n+\tset pattern [format {\\t;[^:]+:%d(:[0-9]+)?\\n(\\t[^\\t]+\\n)+%s:\\n\\t.PROC} \\\n                      $line $symbol]\n     } elseif { [istarget mips*-*-*] } {\n-\tset pattern [format {\\t\\.loc [0-9]+ %d 0( [^\\n]*)?\\n(\\t.cfi_startproc[^\\t]*\\n)*\\t\\.set\\t(no)?mips16\\n\\t(\\.set\\t(no)?micromips\\n\\t)?\\.ent\\t%s\\n\\t\\.type\\t%s, @function\\n%s:\\n} \\\n+\tset pattern [format {\\t\\.loc [0-9]+ %d [0-9]+( [^\\n]*)?\\n(\\t.cfi_startproc[^\\t]*\\n)*\\t\\.set\\t(no)?mips16\\n\\t(\\.set\\t(no)?micromips\\n\\t)?\\.ent\\t%s\\n\\t\\.type\\t%s, @function\\n%s:\\n} \\\n \t\t     $line $symbol $symbol $symbol]\n     } elseif { [istarget microblaze*-*-*] } {\n-        set pattern [format {:%d\\n\\$.*:\\n\\t\\.ent\\t%s\\n\\t\\.type\\t%s, @function\\n%s:\\n} \\\n+        set pattern [format {:%d(:[0-9]+)?\\n\\$.*:\\n\\t\\.ent\\t%s\\n\\t\\.type\\t%s, @function\\n%s:\\n} \\\n                      $line $symbol $symbol $symbol]\n     } else {\n-\tset pattern [format {%s:[^\\t]*(\\t.(fnstart|frame|mask|file)[^\\t]*)*\\t[^:]+:%d\\n} \\\n+\tset pattern [format {%s:[^\\t]*(\\t.(fnstart|frame|mask|file)[^\\t]*)*\\t[^:]+:%d(:[0-9]+)?\\n} \\\n                      $symbol $line]\n     }\n "}]}