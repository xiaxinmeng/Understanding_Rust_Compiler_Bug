{"sha": "33af070fac88691d3b7e5b8b081f0e89d286f7fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhZjA3MGZhYzg4NjkxZDNiN2U1YjhiMDgxZjBlODlkMjg2ZjdmZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-06-30T21:24:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-06-30T21:24:15Z"}, "message": "i386.md (*movti_rex64): Add \"!\" to \"r\" constraint of operand 0.\n\n\t* config/i386/i386.md (*movti_rex64): Add \"!\" to \"r\" constraint\n\tof operand 0.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/movti.c: New test.\n\nFrom-SVN: r137291", "tree": {"sha": "8970bfcbcb60382503cff62b5359a8e8e39147ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8970bfcbcb60382503cff62b5359a8e8e39147ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33af070fac88691d3b7e5b8b081f0e89d286f7fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33af070fac88691d3b7e5b8b081f0e89d286f7fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33af070fac88691d3b7e5b8b081f0e89d286f7fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33af070fac88691d3b7e5b8b081f0e89d286f7fe/comments", "author": null, "committer": null, "parents": [{"sha": "55b3fc29ab075faa616eb3188f102d0f7c4f55a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55b3fc29ab075faa616eb3188f102d0f7c4f55a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55b3fc29ab075faa616eb3188f102d0f7c4f55a9"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "aaf1d083447ad96ce20837a4c41db9d7e8aabda3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33af070fac88691d3b7e5b8b081f0e89d286f7fe", "patch": "@@ -1,3 +1,8 @@\n+2008-06-30 Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movti_rex64): Add \"!\" to \"r\" constraint\n+\tof operand 0.\n+\n 2008-06-30  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* ifcvt.c (cond_move_process_if_block): Free vectors on false\n@@ -19,16 +24,15 @@\n \n \t* config/i386/i386.c (contains_aligned_value_p): Return true\n \tfor __float128.\n-\t(ix86_function_arg_boundary): Return its natural boundary for\n+\t(ix86_function_arg_boundary): Return its natural boundary\n \tfor __float128.\n \t(return_in_memory_32): Don't check TDmode.\n \t(ix86_split_to_parts): Support splitting into 4 parts and\n \tsupport TFmode for 32bit target.\n \t(ix86_split_long_move): Support splitting into 4 parts.\n \t(bdesc_args): Enable IX86_BUILTIN_FABSQ and IX86_BUILTIN_COPYSIGNQ\n \tfor SSE2.\n-\t(ix86_init_mmx_sse_builtins): Move __float80 and __float128\n-\tto ...\n+\t(ix86_init_mmx_sse_builtins): Move __float80 and __float128 to ...\n \t(ix86_init_builtins): Here.\n \t(ix86_scalar_mode_supported_p): Always return true for TFmode.\n \t(ix86_c_mode_for_suffix): Always return TFmode and XFmode for\n@@ -51,9 +55,7 @@\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* global.c (compute_regsets): Set frame_pointer_needed here.\n-\n-\t* reload1.c (init_elim_table): Don't set frame_pointer_needed\n-\there.\n+\t* reload1.c (init_elim_table): Don't set frame_pointer_needed here.\n \n 2008-06-30  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n "}, {"sha": "c67cf467bc90ac522094a40e4e59e08cecd0f44d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=33af070fac88691d3b7e5b8b081f0e89d286f7fe", "patch": "@@ -2464,7 +2464,7 @@\n \t      (const_string \"TI\")))])\n \n (define_insn \"*movti_rex64\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=r,o,x,x,xm\")\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=!r,o,x,x,xm\")\n \t(match_operand:TI 1 \"general_operand\" \"riFo,riF,C,xm,x\"))]\n   \"TARGET_64BIT\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\""}, {"sha": "3a2c9a1b1e2ce7db12baf516d0da56549d2d4271", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33af070fac88691d3b7e5b8b081f0e89d286f7fe", "patch": "@@ -1,3 +1,7 @@\n+2008-06-30 Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/movti.c: New test.\n+\n 2008-06-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/36662"}, {"sha": "e306c1e3f01f3fbe29b4b846967306f16de0be97", "filename": "gcc/testsuite/gcc.target/i386/movti.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33af070fac88691d3b7e5b8b081f0e89d286f7fe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovti.c?ref=33af070fac88691d3b7e5b8b081f0e89d286f7fe", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target dfp } */\n+/* { dg-options \"-O -std=gnu99\" } */\n+\n+_Decimal128 test (void)\n+{\n+  return 1234123412341234.123412341234dl;\n+}\n+\n+/* { dg-final { scan-assembler-not \"movabs\" } } */"}]}