{"sha": "4d45d495663618e45f0a0baa481b74ee7a87a597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ0NWQ0OTU2NjM2MThlNDVmMGEwYmFhNDgxYjc0ZWU3YTg3YTU5Nw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-11-15T17:26:13Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-11-15T17:26:13Z"}, "message": "re PR fortran/37926 (Program gives wrong output (connected to char len))\n\n2008-11-15  Paul Thomas  <pault@gcc.gnu.org>\n\n        PR fortran/37926\n        * trans-expr.c (gfc_add_interface_mapping): Transfer the formal\n\targlist and the always_explicit attribute if the dummy arg is a\n\tprocedure.\n\n2008-11-15  Paul Thomas  <pault@gcc.gnu.org>\n\n        PR fortran/37926\n        * gfortran.dg/dummy_procedure_3.f90: New test.\n\nFrom-SVN: r141890", "tree": {"sha": "c67fa9c04b0ea7ae30aa619f3f2d9426ef7f41f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c67fa9c04b0ea7ae30aa619f3f2d9426ef7f41f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d45d495663618e45f0a0baa481b74ee7a87a597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d45d495663618e45f0a0baa481b74ee7a87a597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d45d495663618e45f0a0baa481b74ee7a87a597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d45d495663618e45f0a0baa481b74ee7a87a597/comments", "author": null, "committer": null, "parents": [{"sha": "6d8f280f7a76c5b008d0109762f7fb316fc86fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d8f280f7a76c5b008d0109762f7fb316fc86fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d8f280f7a76c5b008d0109762f7fb316fc86fd3"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "35466d421847fcd10b5dc31d0aa035e0a2fc5e34", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4d45d495663618e45f0a0baa481b74ee7a87a597", "patch": "@@ -1,3 +1,10 @@\n+2008-11-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+        PR fortran/37926\n+        * trans-expr.c (gfc_add_interface_mapping): Transfer the formal\n+\targlist and the always_explicit attribute if the dummy arg is a\n+\tprocedure.\n+\n 2008-11-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/37988"}, {"sha": "ff74928d63e13051fc4cb4b53f76af1e291be36d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=4d45d495663618e45f0a0baa481b74ee7a87a597", "patch": "@@ -1711,6 +1711,15 @@ gfc_add_interface_mapping (gfc_interface_mapping * mapping,\n   new_sym->attr.flavor = sym->attr.flavor;\n   new_sym->attr.function = sym->attr.function;\n \n+  /* Ensure that the interface is available and that\n+     descriptors are passed for array actual arguments.  */\n+  if (sym->attr.flavor == FL_PROCEDURE)\n+    {\n+      copy_formal_args (new_sym, expr->symtree->n.sym);\n+      new_sym->attr.always_explicit\n+\t    = expr->symtree->n.sym->attr.always_explicit;\n+    }\n+\n   /* Create a fake symtree for it.  */\n   root = NULL;\n   new_symtree = gfc_new_symtree (&root, sym->name);"}, {"sha": "78a345a1eb3ac877c6f1e31eb1e36dc222667ed1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d45d495663618e45f0a0baa481b74ee7a87a597", "patch": "@@ -1,3 +1,8 @@\n+2008-11-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+        PR fortran/37926\n+        * gfortran.dg/dummy_procedure_3.f90: New test.\n+\n 2008-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/38123"}, {"sha": "cde2f0166af1a9f5e8dbefb59cb01ea2582470a3", "filename": "gcc/testsuite/gfortran.dg/dummy_procedure_3.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d45d495663618e45f0a0baa481b74ee7a87a597/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_3.f90?ref=4d45d495663618e45f0a0baa481b74ee7a87a597", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+! PR37926 - the interface did not transfer the formal\n+! argument list for the call to 'asz' in the specification of 'p'.\n+!\n+! Contributed by Janus Weil  <janus@gcc.gnu.org>\n+!\n+module m\n+contains\n+  pure integer function mysize(a)\n+    integer,intent(in) :: a(:)\n+    mysize = size(a)\n+  end function\n+end module\n+\n+program prog\n+  use m\n+  implicit none\n+  character(3) :: str\n+  integer :: i(3) = (/1,2,3/)\n+  str = p(i,mysize)\n+  if (len(str) .ne. 3) call abort\n+  if (str .ne. \"BCD\") call abort\n+contains\n+  function p(y,asz)\n+    implicit none\n+    integer :: y(:)\n+    interface\n+      pure integer function asz(c)\n+        integer,intent(in) :: c(:)\n+      end function\n+    end interface\n+    character(asz(y)) p\n+    integer i\n+    do i=1,asz(y)\n+      p(i:i) = achar(iachar('A')+y(i))\n+    end do\n+  end function\n+end\n+! { dg-final { cleanup-modules \"m\" } }\n+"}]}