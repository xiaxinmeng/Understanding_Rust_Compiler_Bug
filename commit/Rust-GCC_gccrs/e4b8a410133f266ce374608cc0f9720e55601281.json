{"sha": "e4b8a410133f266ce374608cc0f9720e55601281", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiOGE0MTAxMzNmMjY2Y2UzNzQ2MDhjYzBmOTcyMGU1NTYwMTI4MQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-08-30T22:35:43Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-08-30T22:35:43Z"}, "message": "20140828-1.c: New testcase.\n\n2014-08-30  Andrew Pinski  <apinski@cavium.com>\n\n        * gcc.c-torture/execute/20140828-1.c: New testcase.\n\nFrom-SVN: r214760", "tree": {"sha": "5fb627ad78aa0a0c48487cf0b5425ce2f3a7d275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb627ad78aa0a0c48487cf0b5425ce2f3a7d275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4b8a410133f266ce374608cc0f9720e55601281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b8a410133f266ce374608cc0f9720e55601281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4b8a410133f266ce374608cc0f9720e55601281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b8a410133f266ce374608cc0f9720e55601281/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "695326ef6ecebf84282a5bab33b46d9bef04c948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695326ef6ecebf84282a5bab33b46d9bef04c948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695326ef6ecebf84282a5bab33b46d9bef04c948"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "3ce39a550157b92fe9a56663d30e18e16821455e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b8a410133f266ce374608cc0f9720e55601281/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b8a410133f266ce374608cc0f9720e55601281/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4b8a410133f266ce374608cc0f9720e55601281", "patch": "@@ -1,3 +1,7 @@\n+2014-08-30  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.c-torture/execute/20140828-1.c: New testcase.\n+\n 2014-08-29  DJ Delorie  <dj@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_size32plus):"}, {"sha": "5eeb8e01aed977b3232bf3df4cac3391f6ed60e3", "filename": "gcc/testsuite/gcc.c-torture/execute/20140828-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b8a410133f266ce374608cc0f9720e55601281/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20140828-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b8a410133f266ce374608cc0f9720e55601281/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20140828-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20140828-1.c?ref=e4b8a410133f266ce374608cc0f9720e55601281", "patch": "@@ -0,0 +1,22 @@\n+short *f(short *a, int b, int *d) __attribute__((noinline,noclone));\n+\n+short *f(short *a, int b, int *d)\n+{\n+  short c = *a;\n+  a++;\n+  c = b << c;\n+  *d = c;\n+  return a;\n+}\n+\n+int main(void)\n+{\n+  int d;\n+  short a[2];\n+  a[0] = 0;\n+  if (f(a, 1, &d) != &a[1])\n+    __builtin_abort ();\n+  if (d != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}