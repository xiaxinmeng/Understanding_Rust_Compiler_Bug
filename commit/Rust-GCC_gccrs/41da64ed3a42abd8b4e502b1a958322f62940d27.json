{"sha": "41da64ed3a42abd8b4e502b1a958322f62940d27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFkYTY0ZWQzYTQyYWJkOGI0ZTUwMmIxYTk1ODMyMmY2Mjk0MGQyNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-11T00:03:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-11T00:03:10Z"}, "message": "runtime: Fix chan code for big-endian strict-alignment systems\n\nFrom-SVN: r184115", "tree": {"sha": "9b9c08f320214694fa37fdd972b1d515e73dc55f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b9c08f320214694fa37fdd972b1d515e73dc55f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41da64ed3a42abd8b4e502b1a958322f62940d27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41da64ed3a42abd8b4e502b1a958322f62940d27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41da64ed3a42abd8b4e502b1a958322f62940d27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41da64ed3a42abd8b4e502b1a958322f62940d27/comments", "author": null, "committer": null, "parents": [{"sha": "c3b0c721e8e6f236f0609f2b753381369d0a0119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b0c721e8e6f236f0609f2b753381369d0a0119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b0c721e8e6f236f0609f2b753381369d0a0119"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "24be9500a8b9560ef338f7e6c92be8f2303cbb67", "filename": "libgo/runtime/chan.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41da64ed3a42abd8b4e502b1a958322f62940d27/libgo%2Fruntime%2Fchan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41da64ed3a42abd8b4e502b1a958322f62940d27/libgo%2Fruntime%2Fchan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fchan.c?ref=41da64ed3a42abd8b4e502b1a958322f62940d27", "patch": "@@ -409,11 +409,20 @@ runtime_chanrecv(ChanType *t, Hchan* c, byte *ep, bool *selected, bool *received\n void\n __go_send_small(ChanType *t, Hchan* c, uint64 val)\n {\n-\tbyte b[sizeof(uint64)];\n-\n-\truntime_memclr(b, sizeof(uint64));\n-\t__builtin_memcpy(b, &val, t->__element_type->__size);\n-\truntime_chansend(t, c, b, nil);\n+\tunion\n+\t{\n+\t\tbyte b[sizeof(uint64)];\n+\t\tuint64 v;\n+\t} u;\n+\tbyte *p;\n+\n+\tu.v = val;\n+#ifndef WORDS_BIGENDIAN\n+\tp = u.b;\n+#else\n+\tp = u.b + sizeof(uint64) - t->__element_type->__size;\n+#endif\n+\truntime_chansend(t, c, p, nil);\n }\n \n // The compiler generates a call to __go_send_big to send a value\n@@ -433,9 +442,15 @@ __go_receive_small(ChanType *t, Hchan* c)\n \t\tbyte b[sizeof(uint64)];\n \t\tuint64 v;\n \t} u;\n+\tbyte *p;\n \n \tu.v = 0;\n-\truntime_chanrecv(t, c, u.b, nil, nil);\n+#ifndef WORDS_BIGENDIAN\n+\tp = u.b;\n+#else\n+\tp = u.b + sizeof(uint64) - t->__element_type->__size;\n+#endif\n+\truntime_chanrecv(t, c, p, nil, nil);\n \treturn u.v;\n }\n \n@@ -654,8 +669,8 @@ newselect(int32 size, Select **selp)\n \n \tsel->tcase = size;\n \tsel->ncase = 0;\n-\tsel->pollorder = (void*)(sel->scase + size);\n-\tsel->lockorder = (void*)(sel->pollorder + size);\n+\tsel->lockorder = (void*)(sel->scase + size);\n+\tsel->pollorder = (void*)(sel->lockorder + size);\n \t*selp = sel;\n \n \tif(debug)"}]}