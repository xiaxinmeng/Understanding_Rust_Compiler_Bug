{"sha": "6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5Mzg0YzNjMGFiZTYxMWQ3ZDcwYmQ2ZTNkYzJiMDExYmI5ZTY5YQ==", "commit": {"author": {"name": "Benjamin Smedberg", "email": "benjamin@smedbergs.us", "date": "2006-08-23T14:04:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-08-23T14:04:24Z"}, "message": "re PR c++/28687 (dynamic_cast<void*> disallowed too rigorously with -fno-rtti)\n\n        PR c++/28687\n        * rtti.c (build_dynamic_cast, build_dynamic_cast_1):\n        Move -fno-rtti check to be more specific.\n\nFrom-SVN: r116350", "tree": {"sha": "8db35c6e896f3c47a77d77c5ef83c8f54ece5934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8db35c6e896f3c47a77d77c5ef83c8f54ece5934"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/comments", "author": {"login": "bsmedberg", "id": 1914477, "node_id": "MDQ6VXNlcjE5MTQ0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1914477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsmedberg", "html_url": "https://github.com/bsmedberg", "followers_url": "https://api.github.com/users/bsmedberg/followers", "following_url": "https://api.github.com/users/bsmedberg/following{/other_user}", "gists_url": "https://api.github.com/users/bsmedberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsmedberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsmedberg/subscriptions", "organizations_url": "https://api.github.com/users/bsmedberg/orgs", "repos_url": "https://api.github.com/users/bsmedberg/repos", "events_url": "https://api.github.com/users/bsmedberg/events{/privacy}", "received_events_url": "https://api.github.com/users/bsmedberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3467cfd98264600f249f6e4105df5c0d51804022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3467cfd98264600f249f6e4105df5c0d51804022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3467cfd98264600f249f6e4105df5c0d51804022"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "e2bc2dbb525df559f280bc19467f13c43589858e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "patch": "@@ -1,3 +1,9 @@\n+2006-08-11   Benjamin Smedberg <benjamin@smedbergs.us>\n+\n+\tPR c++/28687\n+\t* rtti.c (build_dynamic_cast, build_dynamic_cast_1):\n+\tMove -fno-rtti check to be more specific.\n+\n 2006-08-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/23372"}, {"sha": "b4cede48b06929fbeb09e84cd08c08d147f5b6ed", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "patch": "@@ -619,6 +619,13 @@ build_dynamic_cast_1 (tree type, tree expr)\n \t\t}\n \t    }\n \n+\t  /* Use of dynamic_cast when -fno-rtti is prohibited.  */\n+\t  if (!flag_rtti)\n+\t    {\n+\t      error (\"%<dynamic_cast%> not permitted with -fno-rtti\");\n+\t      return error_mark_node;\n+\t    }\n+\n \t  target_type = TYPE_MAIN_VARIANT (TREE_TYPE (type));\n \t  static_type = TYPE_MAIN_VARIANT (TREE_TYPE (exprtype));\n \t  td2 = get_tinfo_decl (target_type);\n@@ -704,13 +711,6 @@ build_dynamic_cast (tree type, tree expr)\n   if (type == error_mark_node || expr == error_mark_node)\n     return error_mark_node;\n \n-  /* Use of dynamic_cast when -fno-rtti is prohibited.  */\n-  if (!flag_rtti)\n-    {\n-      error (\"%<dynamic_cast%> not permitted with -fno-rtti\");\n-      return error_mark_node;\n-    }\n-\n   if (processing_template_decl)\n     {\n       expr = build_min (DYNAMIC_CAST_EXPR, type, expr);"}, {"sha": "d7f0826fca4f44736c98011334c7ede1551fe510", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "patch": "@@ -1569,7 +1569,9 @@ functions for use by the C++ runtime type identification features\n (@samp{dynamic_cast} and @samp{typeid}).  If you don't use those parts\n of the language, you can save some space by using this flag.  Note that\n exception handling uses the same information, but it will generate it as\n-needed.\n+needed. The @samp{dynamic_cast} operator can still be used for casts that\n+do not require runtime type information, i.e. casts to @code{void *} or to\n+unambiguous base classes.\n \n @item -fstats\n @opindex fstats"}, {"sha": "2b3915d179c1caf8105c3315c4ce71b73f081815", "filename": "gcc/testsuite/g++.dg/rtti/no-rtti-voidptr.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fno-rtti-voidptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fno-rtti-voidptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fno-rtti-voidptr.C?ref=6c9384c3c0abe611d7d70bd6e3dc2b011bb9e69a", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"-fno-rtti\" }\n+\n+// PR C++/28687\n+\n+struct A {\n+  virtual ~A() { }\n+};\n+\n+struct B : A {\n+};\n+\n+A* f()\n+{\n+  return new B();\n+}\n+\n+int main()\n+{\n+  void* b = dynamic_cast<void*>(f());\n+}"}]}