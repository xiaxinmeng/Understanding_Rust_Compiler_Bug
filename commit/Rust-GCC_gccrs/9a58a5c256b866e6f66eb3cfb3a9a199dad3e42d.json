{"sha": "9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1OGE1YzI1NmI4NjZlNmY2NmViM2NmYjNhOWExOTlkYWQzZTQyZA==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-09T11:13:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-09T11:13:07Z"}, "message": "Merge #555\n\n555: use rust_assert in dead code pass instead of rust_error_at r=dkm a=thomasyonug\n\nuse rust_assert in dead code pass instead of rust_error_at\r\n\r\nFixed #550 \n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>", "tree": {"sha": "cee39b24ae5945c22b580fed026bcf0a9c8a1144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cee39b24ae5945c22b580fed026bcf0a9c8a1144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg6C9DCRBK7hj4Ov3rIwAAV+IIAH6VZXDOxoAuz59aRY2MzlVF\nh381N/ZOXqKShlYJh45QbweDwGf5FahVQZKGUUlOUXB/5al9nINPNna/JaF/aDZQ\ntY7Cnf8j1sbRRYpeZpbob8Gl35pirwhGeZSRoy/PZMuGAJp3xisS9LcYrlDmORLx\nfhCRxYtxTOCjrhyb5xZwjmY1+8Q5+e+rpiids7Scm/TWNR/ljSwJ5gVaPznaSRGy\nFSz8BmfU6SXkIqd+Wa+sZsjNMpbRsoPP4KnVroSTnESfQdVKYoJc4JHGMx3ewsS8\nVPa2oGliUT7VcCU8WRbHqpIll869r8o946WX0qBZcQtUqbeAliKTnjAKwLKNnBE=\n=+hQC\n-----END PGP SIGNATURE-----\n", "payload": "tree cee39b24ae5945c22b580fed026bcf0a9c8a1144\nparent 3670b0ef05041b8a1defb755804ef36e029d20db\nparent 7dceca54802cea8d83a0e27ae34987e6b0fa1997\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625829187 +0000\ncommitter GitHub <noreply@github.com> 1625829187 +0000\n\nMerge #555\n\n555: use rust_assert in dead code pass instead of rust_error_at r=dkm a=thomasyonug\n\nuse rust_assert in dead code pass instead of rust_error_at\r\n\r\nFixed #550 \n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3670b0ef05041b8a1defb755804ef36e029d20db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3670b0ef05041b8a1defb755804ef36e029d20db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3670b0ef05041b8a1defb755804ef36e029d20db"}, {"sha": "7dceca54802cea8d83a0e27ae34987e6b0fa1997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dceca54802cea8d83a0e27ae34987e6b0fa1997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dceca54802cea8d83a0e27ae34987e6b0fa1997"}], "stats": {"total": 58, "additions": 22, "deletions": 36}, "files": [{"sha": "099f37e8a8c11e117c4f040fce41c81152b0c6a8", "filename": "gcc/rust/lint/rust-lint-marklive.cc", "status": "modified", "additions": 22, "deletions": 35, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.cc?ref=9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "patch": "@@ -113,8 +113,9 @@ MarkLive::visit (HIR::MethodCallExpr &expr)\n \n   // node back to HIR\n   HirId ref;\n-  node_id_to_hir_id (expr.get_mappings ().get_crate_num (), ref_node_id, ref,\n-\t\t     expr.get_locus ());\n+  bool ok = mappings->lookup_node_to_hir (expr.get_mappings ().get_crate_num (),\n+\t\t\t\t\t  ref_node_id, &ref);\n+  rust_assert (ok);\n   mark_hir_id (ref);\n }\n \n@@ -127,21 +128,18 @@ MarkLive::visit_path_segment (HIR::PathExprSegment seg)\n   if (resolver->lookup_resolved_name (ast_node_id, &ref_node_id))\n     {\n       Resolver::Definition def;\n-      if (!resolver->lookup_definition (ref_node_id, &def))\n-\t{\n-\t  rust_error_at (seg.get_locus (),\n-\t\t\t \"unknown reference for resolved name\");\n-\t  return false;\n-\t}\n+      bool ok = resolver->lookup_definition (ref_node_id, &def);\n+      rust_assert (ok);\n       ref_node_id = def.parent;\n     }\n   else if (!resolver->lookup_resolved_type (ast_node_id, &ref_node_id))\n     {\n       return false;\n     }\n   HirId ref;\n-  node_id_to_hir_id (seg.get_mappings ().get_crate_num (), ref_node_id, ref,\n-\t\t     seg.get_locus ());\n+  bool ok = mappings->lookup_node_to_hir (seg.get_mappings ().get_crate_num (),\n+\t\t\t\t\t  ref_node_id, &ref);\n+  rust_assert (ok);\n   mark_hir_id (ref);\n   return true;\n }\n@@ -160,7 +158,8 @@ MarkLive::visit (HIR::FieldAccessExpr &expr)\n       rust_error_at (expr.get_receiver_expr ()->get_locus_slow (),\n \t\t     \"unresolved type for receiver\");\n     }\n-  rust_assert (receiver->get_kind () == TyTy::TypeKind::ADT);\n+  bool ok = receiver->get_kind () == TyTy::TypeKind::ADT;\n+  rust_assert (ok);\n   TyTy::ADTType *adt = static_cast<TyTy::ADTType *> (receiver);\n \n   // get the field index\n@@ -195,8 +194,9 @@ MarkLive::visit (HIR::IdentifierExpr &expr)\n \n   // node back to HIR\n   HirId ref;\n-  node_id_to_hir_id (expr.get_mappings ().get_crate_num (), ref_node_id, ref,\n-\t\t     expr.get_locus ());\n+  bool ok = mappings->lookup_node_to_hir (expr.get_mappings ().get_crate_num (),\n+\t\t\t\t\t  ref_node_id, &ref);\n+  rust_assert (ok);\n   mark_hir_id (ref);\n }\n \n@@ -207,8 +207,10 @@ MarkLive::visit (HIR::TypeAlias &alias)\n   resolver->lookup_resolved_type (\n     alias.get_type_aliased ()->get_mappings ().get_nodeid (), &ast_node_id);\n   HirId hir_id;\n-  node_id_to_hir_id (alias.get_mappings ().get_crate_num (), ast_node_id,\n-\t\t     hir_id, alias.get_locus ());\n+  bool ok\n+    = mappings->lookup_node_to_hir (alias.get_mappings ().get_crate_num (),\n+\t\t\t\t    ast_node_id, &hir_id);\n+  rust_assert (ok);\n   mark_hir_id (hir_id);\n }\n \n@@ -231,29 +233,14 @@ MarkLive::find_ref_node_id (NodeId ast_node_id, NodeId &ref_node_id,\n       // these ref_node_ids will resolve to a pattern declaration but we are\n       // interested in the definition that this refers to get the parent id\n       Resolver::Definition def;\n-      if (!resolver->lookup_definition (ref_node_id, &def))\n-\t{\n-\t  rust_error_at (locus, \"unknown reference for resolved name\");\n-\t  return;\n-\t}\n+      bool ok = resolver->lookup_definition (ref_node_id, &def);\n+      rust_assert (ok);\n       ref_node_id = def.parent;\n     }\n-  else if (!resolver->lookup_resolved_type (ast_node_id, &ref_node_id))\n+  else\n     {\n-      rust_error_at (locus, \"Failed to lookup type reference for node: %s\",\n-\t\t     node_name.c_str ());\n-      return;\n-    }\n-}\n-\n-void\n-MarkLive::node_id_to_hir_id (CrateNum crateNum, NodeId ref_node_id, HirId &ref,\n-\t\t\t     Location locus)\n-{\n-  if (!mappings->lookup_node_to_hir (crateNum, ref_node_id, &ref))\n-    {\n-      rust_error_at (locus, \"reverse lookup failure\");\n-      return;\n+      bool ok = resolver->lookup_resolved_type (ast_node_id, &ref_node_id);\n+      rust_assert (ok);\n     }\n }\n "}, {"sha": "e6ca4aed185fbbeebbb3829aef833c10fdce1afc", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "patch": "@@ -269,7 +269,6 @@ class MarkLive : public MarkLiveBase\n   bool visit_path_segment (HIR::PathExprSegment);\n   void find_ref_node_id (NodeId ast_node_id, NodeId &ref_node_id,\n \t\t\t Location locus, const std::string &node_name);\n-  void node_id_to_hir_id (CrateNum, NodeId, HirId &, Location);\n };\n \n } // namespace Analysis"}]}