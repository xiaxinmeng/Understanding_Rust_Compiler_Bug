{"sha": "25fc6214e3705977d82cf1c6052f8f37891a92e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVmYzYyMTRlMzcwNTk3N2Q4MmNmMWM2MDUyZjhmMzc4OTFhOTJlNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-18T23:06:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-18T23:06:22Z"}, "message": "(add patterns): Don't use two addqw instructions when...\n\n(add patterns): Don't use two addqw instructions when adding small (8\n< N <= 16) integers to address registers on 68040.\n\nFrom-SVN: r12515", "tree": {"sha": "1398c4cc491a23065f3cdf33efd52638e698ec96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1398c4cc491a23065f3cdf33efd52638e698ec96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25fc6214e3705977d82cf1c6052f8f37891a92e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fc6214e3705977d82cf1c6052f8f37891a92e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25fc6214e3705977d82cf1c6052f8f37891a92e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fc6214e3705977d82cf1c6052f8f37891a92e5/comments", "author": null, "committer": null, "parents": [{"sha": "8b06b20a144ed8e5b3e518930a211ce7b70fa2fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b06b20a144ed8e5b3e518930a211ce7b70fa2fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b06b20a144ed8e5b3e518930a211ce7b70fa2fd"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "73051fd71015c79e61c314d75eae75be25e78b58", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc6214e3705977d82cf1c6052f8f37891a92e5/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc6214e3705977d82cf1c6052f8f37891a92e5/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=25fc6214e3705977d82cf1c6052f8f37891a92e5", "patch": "@@ -2249,10 +2249,11 @@\n \t\t  ? \\\"subq%.w %2,%0\\\"\n \t\t  : \\\"subq%.l %2,%0\\\");\n \t}\n-      /* On everything except the 68000 and 68060 it is faster to use \n-\t two addqw instructions to add a small integer (8 < N <= 16)\n-\t to an address register.  Likewise for subqw.*/\n-      if (TARGET_68020 && !TARGET_68060 && ADDRESS_REG_P (operands[0]))\n+      /* On the 68020 it is faster to use two addqw instructions to\n+\t add a small integer (8 < N <= 16) to an address register.\n+\t Likewise for subqw. */\n+      if (TARGET_68020 && !TARGET_68040 && !TARGET_68060 \n+          && ADDRESS_REG_P (operands[0]))\n \t{\n \t  if (INTVAL (operands[2]) > 8\n \t      && INTVAL (operands[2]) <= 16)\n@@ -2316,10 +2317,11 @@\n \t\t\t         - INTVAL (operands[2]));\n \t  return \\\"subq%.w %2,%0\\\";\n \t}\n-      /* On everything except the 68000 and 68060 it is faster to use \n-\t two addqw instructions to add a small integer (8 < N <= 16)\n-\t to an address register.  Likewise for subqw. */\n-      if (TARGET_68020 && !TARGET_68060 && ADDRESS_REG_P (operands[0]))\n+      /* On the 68020 it is faster to use two addqw instructions to\n+\t add a small integer (8 < N <= 16) to an address register.  \n+\t Likewise for subqw. */\n+      if (TARGET_68020 && !TARGET_68040 && !TARGET_68060 \n+          && ADDRESS_REG_P (operands[0]))\n \t{\n \t  if (INTVAL (operands[2]) > 8\n \t      && INTVAL (operands[2]) <= 16)\n@@ -2376,10 +2378,11 @@\n \t\t\t         - INTVAL (operands[1]));\n \t  return \\\"subq%.w %1,%0\\\";\n \t}\n-      /* On everything except the 68000 and 68060 it is faster to use \n-\t two addqw instructions to add a small integer (8 < N <= 16)\n-\t to an address register.  Likewise for subqw. */\n-      if (TARGET_68020 && !TARGET_68060 && ADDRESS_REG_P (operands[0]))\n+      /* On the 68020 it is faster to use two addqw instructions to\n+\t add a small integer (8 < N <= 16) to an address register. \n+\t Likewise for subqw. */\n+      if (TARGET_68020 && !TARGET_68040 && !TARGET_68060 \n+          && ADDRESS_REG_P (operands[0]))\n \t{\n \t  if (INTVAL (operands[1]) > 8\n \t      && INTVAL (operands[1]) <= 16)\n@@ -2430,10 +2433,11 @@\n \t\t\t         - INTVAL (operands[1]));\n \t  return \\\"subq%.w %1,%0\\\";\n \t}\n-      /* On everything except the 68000 and 68060 it is faster to use \n-\t two addqw instructions to add a small integer (8 < N <= 16)\n-\t to an address register.  Likewise for subqw. */\n-      if (TARGET_68020 && !TARGET_68060 && ADDRESS_REG_P (operands[0])) \n+      /* On the 68020 it is faster to use two addqw instructions to\n+\t add a small integer (8 < N <= 16) to an address register.\n+\t Likewise for subqw. */\n+      if (TARGET_68020 && !TARGET_68040 && !TARGET_68060 \n+          && ADDRESS_REG_P (operands[0])) \n \t{\n \t  if (INTVAL (operands[1]) > 8\n \t      && INTVAL (operands[1]) <= 16)"}]}