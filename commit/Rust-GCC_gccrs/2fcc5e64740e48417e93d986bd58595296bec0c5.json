{"sha": "2fcc5e64740e48417e93d986bd58595296bec0c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZjYzVlNjQ3NDBlNDg0MTdlOTNkOTg2YmQ1ODU5NTI5NmJlYzBjNQ==", "commit": {"author": {"name": "Ed Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2011-11-04T16:16:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-04T16:16:09Z"}, "message": "re PR c++/50941 ([C++0x] user-defined string literals provide incorrect length for wchar_t, char16_t, and char32_t)\n\n\tPR c++/50941\n\t* parser.c (cp_parser_userdef_string_literal): Fix string length.\n\nFrom-SVN: r180961", "tree": {"sha": "57771229eb2fcfa0d5cd79ba055b358a7593cf85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57771229eb2fcfa0d5cd79ba055b358a7593cf85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fcc5e64740e48417e93d986bd58595296bec0c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcc5e64740e48417e93d986bd58595296bec0c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fcc5e64740e48417e93d986bd58595296bec0c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcc5e64740e48417e93d986bd58595296bec0c5/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6d185a56cbc3859f71b282287acc293026c9308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d185a56cbc3859f71b282287acc293026c9308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d185a56cbc3859f71b282287acc293026c9308"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "01d2f91a3b682bd754a99ce2ec89eb31d2831a86", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2fcc5e64740e48417e93d986bd58595296bec0c5", "patch": "@@ -1,3 +1,8 @@\n+2011-11-04  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR c++/50941\n+\t* parser.c (cp_parser_userdef_string_literal): Fix string length.\n+\n 2011-11-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48370"}, {"sha": "811b2faf32e0f0f0dafeb06c987c4e98b8fecd3f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2fcc5e64740e48417e93d986bd58595296bec0c5", "patch": "@@ -3681,8 +3681,8 @@ cp_parser_userdef_string_literal (cp_token *token)\n   suffix_id = USERDEF_LITERAL_SUFFIX_ID (literal);\n   name = cp_literal_operator_id (IDENTIFIER_POINTER (suffix_id));\n   value = USERDEF_LITERAL_VALUE (literal);\n-  len = TREE_STRING_LENGTH (value) - 1;\n-\n+  len = TREE_STRING_LENGTH (value)\n+\t/ TREE_INT_CST_LOW (TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (value)))) - 1;\n   /* Build up a call to the user-defined operator  */\n   /* Lookup the name we got back from the id-expression.  */\n   vec = make_tree_vector ();"}, {"sha": "02f400e6571b31081335857b9dcb769c2508714d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2fcc5e64740e48417e93d986bd58595296bec0c5", "patch": "@@ -1,3 +1,8 @@\n+2011-11-04  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR c++/50941\n+\t* g++.dg/cpp0x/udlit-strint-length.C: New.\n+\n 2011-11-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48370"}, {"sha": "86903e8355a431f2fff0d30dbdd3e6d8016897d1", "filename": "gcc/testsuite/g++.dg/cpp0x/udlit-string-length.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-string-length.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc5e64740e48417e93d986bd58595296bec0c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-string-length.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-string-length.C?ref=2fcc5e64740e48417e93d986bd58595296bec0c5", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=c++0x\" }\n+// PR c++/50941\n+\n+typedef decltype(sizeof(0)) size_type;\n+\n+constexpr size_type\n+operator\"\" _len(const char*, size_type len)\n+{\n+  return len;\n+}\n+\n+constexpr size_type\n+operator\"\" _len(const wchar_t*, size_type len)\n+{\n+  return len;\n+}\n+\n+constexpr size_type\n+operator\"\" _len(const char16_t*, size_type len)\n+{\n+  return len;\n+}\n+\n+constexpr size_type\n+operator\"\" _len(const char32_t*, size_type len)\n+{\n+  return len;\n+}\n+\n+static_assert(  \"\"_len == 0, \"Ouch\");\n+static_assert(u8\"\"_len == 0, \"Ouch\");\n+static_assert( L\"\"_len == 0, \"Ouch\");\n+static_assert( u\"\"_len == 0, \"Ouch\");\n+static_assert( U\"\"_len == 0, \"Ouch\");\n+\n+static_assert(  \"1\"_len == 1, \"Ouch\");\n+static_assert(u8\"1\"_len == 1, \"Ouch\");\n+static_assert( L\"1\"_len == 1, \"Ouch\");\n+static_assert( u\"1\"_len == 1, \"Ouch\");\n+static_assert( U\"1\"_len == 1, \"Ouch\");\n+\n+static_assert(  \"123\"_len == 3, \"Ouch\");\n+static_assert(u8\"123\"_len == 3, \"Ouch\");\n+static_assert( L\"123\"_len == 3, \"Ouch\");\n+static_assert( u\"123\"_len == 3, \"Ouch\");\n+static_assert( U\"123\"_len == 3, \"Ouch\");"}]}