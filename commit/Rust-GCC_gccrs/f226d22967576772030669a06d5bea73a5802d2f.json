{"sha": "f226d22967576772030669a06d5bea73a5802d2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIyNmQyMjk2NzU3Njc3MjAzMDY2OWEwNmQ1YmVhNzNhNTgwMmQyZg==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2015-05-14T17:43:28Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2015-05-14T17:43:28Z"}, "message": "i386.md (sibcall_memory): Check that register with callee address is not also used as one of the arguments...\n\n\t* config/i386/i386.md (sibcall_memory): Check that register with\n\tcallee address is not also used as one of the arguments, instead\n\tof checking that it is not live after the sibcall.\n\t(sibcall_pop_memory): Ditto.\n\t(sibcall_value_memory): Ditto.\n\t(sibcall_value_pop_memory): Ditto. \ntestsuite:\n\t* gcc.target/i386/sibcall-7.c: New test.\n\t* gcc.target/i386/sibcall-8.c: New test.\n\nFrom-SVN: r223201", "tree": {"sha": "b0c12b8e68653fc976b3e4811c08b59a36b232d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0c12b8e68653fc976b3e4811c08b59a36b232d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f226d22967576772030669a06d5bea73a5802d2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f226d22967576772030669a06d5bea73a5802d2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f226d22967576772030669a06d5bea73a5802d2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f226d22967576772030669a06d5bea73a5802d2f/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aea417d748969d87d4973a34e055f40ce4a1d739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea417d748969d87d4973a34e055f40ce4a1d739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aea417d748969d87d4973a34e055f40ce4a1d739"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "97aa0ebe3416c4a9d729ebf9b2e7c7f059f73e2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f226d22967576772030669a06d5bea73a5802d2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f226d22967576772030669a06d5bea73a5802d2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f226d22967576772030669a06d5bea73a5802d2f", "patch": "@@ -1,3 +1,12 @@\n+2015-05-14  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* config/i386/i386.md (sibcall_memory): Check that register with\n+\tcallee address is not also used as one of the arguments, instead\n+\tof checking that it is not live after the sibcall.\n+\t(sibcall_pop_memory): Ditto.\n+\t(sibcall_value_memory): Ditto.\n+\t(sibcall_value_pop_memory): Ditto. \n+\n 2015-05-14  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* generic-match-head.c (types_match): Handle non-types."}, {"sha": "aefca43c450af389336b5ae31f6481b58fcdc79e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f226d22967576772030669a06d5bea73a5802d2f", "patch": "@@ -11680,7 +11680,8 @@\n    (call (mem:QI (match_dup 0))\n \t (match_operand 3))]\n   \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (1))\n-   && peep2_reg_dead_p (2, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n   [(parallel [(call (mem:QI (match_dup 1))\n \t\t    (match_dup 3))\n \t      (unspec [(const_int 0)] UNSPEC_PEEPSIB)])])\n@@ -11692,7 +11693,8 @@\n    (call (mem:QI (match_dup 0))\n \t (match_operand 3))]\n   \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (2))\n-   && peep2_reg_dead_p (3, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (parallel [(call (mem:QI (match_dup 1))\n \t\t    (match_dup 3))\n@@ -11751,7 +11753,8 @@\n \t\t   (plus:SI (reg:SI SP_REG)\n \t\t\t    (match_operand:SI 4 \"immediate_operand\")))])]\n   \"!TARGET_64BIT && SIBLING_CALL_P (peep2_next_insn (1))\n-   && peep2_reg_dead_p (2, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n   [(parallel [(call (mem:QI (match_dup 1))\n \t\t    (match_dup 3))\n \t      (set (reg:SI SP_REG)\n@@ -11769,7 +11772,8 @@\n \t\t   (plus:SI (reg:SI SP_REG)\n \t\t\t    (match_operand:SI 4 \"immediate_operand\")))])]\n   \"!TARGET_64BIT && SIBLING_CALL_P (peep2_next_insn (2))\n-   && peep2_reg_dead_p (3, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (parallel [(call (mem:QI (match_dup 1))\n \t\t    (match_dup 3))\n@@ -11845,7 +11849,8 @@\n    (call (mem:QI (match_dup 0))\n \t\t (match_operand 3)))]\n   \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (1))\n-   && peep2_reg_dead_p (2, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n   [(parallel [(set (match_dup 2)\n \t\t   (call (mem:QI (match_dup 1))\n \t\t\t (match_dup 3)))\n@@ -11859,7 +11864,8 @@\n \t(call (mem:QI (match_dup 0))\n \t      (match_operand 3)))]\n   \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (2))\n-   && peep2_reg_dead_p (3, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (parallel [(set (match_dup 2)\n \t\t   (call (mem:QI (match_dup 1))\n@@ -11924,7 +11930,8 @@\n \t\t   (plus:SI (reg:SI SP_REG)\n \t\t\t    (match_operand:SI 4 \"immediate_operand\")))])]\n   \"!TARGET_64BIT && SIBLING_CALL_P (peep2_next_insn (1))\n-   && peep2_reg_dead_p (2, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n   [(parallel [(set (match_dup 2)\n \t\t   (call (mem:QI (match_dup 1))\n \t\t\t (match_dup 3)))\n@@ -11944,7 +11951,8 @@\n \t\t   (plus:SI (reg:SI SP_REG)\n \t\t\t    (match_operand:SI 4 \"immediate_operand\")))])]\n   \"!TARGET_64BIT && SIBLING_CALL_P (peep2_next_insn (2))\n-   && peep2_reg_dead_p (3, operands[0])\"\n+   && !reg_mentioned_p (operands[0],\n+\t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (parallel [(set (match_dup 2)\n \t\t   (call (mem:QI (match_dup 1))"}, {"sha": "2d48683d6f17539fd2b1bdd2c77d193ccebc5d9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f226d22967576772030669a06d5bea73a5802d2f", "patch": "@@ -1,3 +1,8 @@\n+2015-05-14  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* gcc.target/i386/sibcall-7.c: New test.\n+\t* gcc.target/i386/sibcall-8.c: New test.\n+\n 2015-05-14  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/abs_1.c (abs64): Update test for new abs expansion.\n@@ -97,7 +102,7 @@\n \tPR tree-optimization/37021\n \t* gcc.target/i386/vect-addsub.c: New testcase.\n \n-2015-05-11  Alexander Monakov  <amonakov@ispras.ru>\n+2015-05-12  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* gcc.target/i386/pr65753.c: Use -O2 instead of -O.\n "}, {"sha": "6effb8f825607737fb16b3bb965aa01c6a5d2e50", "filename": "gcc/testsuite/gcc.target/i386/sibcall-7.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsibcall-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsibcall-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsibcall-7.c?ref=f226d22967576772030669a06d5bea73a5802d2f", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target { ! x32 } } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"mov\" } } */\n+\n+int foo()\n+{\n+  int (**bar)(void);\n+  asm(\"\":\"=a\"(bar));\n+  return (*bar)();\n+}"}, {"sha": "3ab3809036dd0a66cd4474125d77acb193014ff8", "filename": "gcc/testsuite/gcc.target/i386/sibcall-8.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsibcall-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f226d22967576772030669a06d5bea73a5802d2f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsibcall-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsibcall-8.c?ref=f226d22967576772030669a06d5bea73a5802d2f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+static int __attribute__((regparm(1)))\n+bar(void *arg)\n+{\n+  return arg != bar;\n+}\n+\n+static int __attribute__((noinline,noclone,regparm(1)))\n+foo(int (__attribute__((regparm(1))) **bar)(void*))\n+{\n+  return (*bar)(*bar);\n+}\n+\n+int main()\n+{\n+  int (__attribute__((regparm(1))) *p)(void*) = bar;\n+  if (foo(&p))\n+    abort();\n+  return 0;\n+}"}]}