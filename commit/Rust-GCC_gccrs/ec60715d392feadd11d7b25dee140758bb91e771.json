{"sha": "ec60715d392feadd11d7b25dee140758bb91e771", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM2MDcxNWQzOTJmZWFkZDExZDdiMjVkZWUxNDA3NThiYjkxZTc3MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-04-17T17:57:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-04-17T17:57:02Z"}, "message": "dg-extract-results.sh: Only handle WARNING: program timed out lines specially in \"$MODE\" == \"sum\".\n\n\t* dg-extract-results.sh: Only handle WARNING: program timed out\n\tlines specially in \"$MODE\" == \"sum\".  Restore previous behavior\n\tfor \"$MODE\" != \"sum\".  Clear has_timeout and timeout_cnt if in\n\ta different variant or curfile is empty.\n\t* dg-extract-results.py: Fix a typo.\n\nFrom-SVN: r270415", "tree": {"sha": "5191986cb2130ced928155e94e977f6d9d71b3fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5191986cb2130ced928155e94e977f6d9d71b3fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec60715d392feadd11d7b25dee140758bb91e771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec60715d392feadd11d7b25dee140758bb91e771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec60715d392feadd11d7b25dee140758bb91e771", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec60715d392feadd11d7b25dee140758bb91e771/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0764a0d275c79d8a81332818e7ff6c6aa6b3a312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0764a0d275c79d8a81332818e7ff6c6aa6b3a312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0764a0d275c79d8a81332818e7ff6c6aa6b3a312"}], "stats": {"total": 61, "additions": 38, "deletions": 23}, "files": [{"sha": "b1fc60fcbeecec704c5f26bc0f49d16c54be7645", "filename": "contrib/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec60715d392feadd11d7b25dee140758bb91e771/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec60715d392feadd11d7b25dee140758bb91e771/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ec60715d392feadd11d7b25dee140758bb91e771", "patch": "@@ -1,3 +1,11 @@\n+2019-04-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dg-extract-results.sh: Only handle WARNING: program timed out\n+\tlines specially in \"$MODE\" == \"sum\".  Restore previous behavior\n+\tfor \"$MODE\" != \"sum\".  Clear has_timeout and timeout_cnt if in\n+\ta different variant or curfile is empty.\n+\t* dg-extract-results.py: Fix a typo.\n+\n 2019-04-05  Martin Liska  <mliska@suse.cz>\n \n \tPR translation/89936"}, {"sha": "4e113a8dd6bbbc7e2d48c2d7d2c475bebad37e9c", "filename": "contrib/dg-extract-results.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec60715d392feadd11d7b25dee140758bb91e771/contrib%2Fdg-extract-results.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec60715d392feadd11d7b25dee140758bb91e771/contrib%2Fdg-extract-results.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.py?ref=ec60715d392feadd11d7b25dee140758bb91e771", "patch": "@@ -296,7 +296,7 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n                 # If we have a time out warning, make sure it appears\n                 # before the following testcase diagnostic: we insert\n                 # the testname before 'program' so that sort faces a\n-                # list of testhanes.\n+                # list of testnames.\n                 if line.startswith ('WARNING: program timed out'):\n                   has_warning = 1\n                 else:"}, {"sha": "97ac222b54a62c9fcd22a862fd491b8f760cbd7f", "filename": "contrib/dg-extract-results.sh", "status": "modified", "additions": 29, "deletions": 22, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec60715d392feadd11d7b25dee140758bb91e771/contrib%2Fdg-extract-results.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec60715d392feadd11d7b25dee140758bb91e771/contrib%2Fdg-extract-results.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.sh?ref=ec60715d392feadd11d7b25dee140758bb91e771", "patch": "@@ -331,39 +331,46 @@ BEGIN {\n   # Ugly hack for gfortran.dg/dg.exp\n   if (\"$TOOL\" == \"gfortran\" && testname ~ /^gfortran.dg\\/g77\\//)\n     testname=\"h\"testname\n-  if (\\$1 == \"WARNING:\" && \\$2 == \"program\" && \\$3 == \"timed\" && (\\$4 == \"out\" || \\$4 == \"out.\")) {\n-        has_timeout=1\n-        timeout_cnt=cnt\n-  } else {\n-  # Prepare timeout replacement message in case it's needed\n-    timeout_msg=\\$0\n-    sub(\\$1, \"WARNING:\", timeout_msg)\n+  if (\"$MODE\" == \"sum\") {\n+    if (\\$0 ~ /^WARNING: program timed out/) {\n+      has_timeout=1\n+      timeout_cnt=cnt+1\n+    } else {\n+      # Prepare timeout replacement message in case it's needed\n+      timeout_msg=\\$0\n+      sub(\\$1, \"WARNING:\", timeout_msg)\n+    }\n   }\n }\n /^$/ { if (\"$MODE\" == \"sum\") next }\n { if (variant == curvar && curfile) {\n     if (\"$MODE\" == \"sum\") {\n       # Do not print anything if the current line is a timeout\n       if (has_timeout == 0) {\n-        # If the previous line was a timeout,\n-        # insert the full current message without keyword\n-        if (timeout_cnt != 0) {\n-          printf \"%s %08d|%s program timed out.\\n\", testname, timeout_cnt, timeout_msg >> curfile\n-          timeout_cnt = 0\n-          cnt = cnt + 1\n-        }\n-        printf \"%s %08d|\", testname, cnt >> curfile\n-        cnt = cnt + 1\n-        filewritten[curfile]=1\n-        need_close=1\n-        if (timeout_cnt == 0)\n-          print >> curfile\n+\t# If the previous line was a timeout,\n+\t# insert the full current message without keyword\n+\tif (timeout_cnt != 0) {\n+\t  printf \"%s %08d|%s program timed out.\\n\", testname, timeout_cnt-1, timeout_msg >> curfile\n+\t  timeout_cnt = 0\n+\t  cnt = cnt + 1\n+\t}\n+\tprintf \"%s %08d|\", testname, cnt >> curfile\n+\tcnt = cnt + 1\n+\tfilewritten[curfile]=1\n+\tneed_close=1\n+\tprint >> curfile\n       }\n-\n       has_timeout=0\n+    } else {\n+      filewritten[curfile]=1\n+      need_close=1\n+      print >> curfile\n     }\n-  } else\n+  } else {\n+    has_timeout=0\n+    timeout_cnt=0\n     next\n+  }\n }\n END {\n   n=1"}]}