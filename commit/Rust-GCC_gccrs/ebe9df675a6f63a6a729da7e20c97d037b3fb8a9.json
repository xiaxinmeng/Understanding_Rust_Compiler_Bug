{"sha": "ebe9df675a6f63a6a729da7e20c97d037b3fb8a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJlOWRmNjc1YTZmNjNhNmE3MjlkYTdlMjBjOTdkMDM3YjNmYjhhOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "r.sandiford@uk.ibm.com", "date": "2014-05-06T17:46:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-06T17:46:05Z"}, "message": "boehm.c (mark_reference_fields): Don't update the mask when setting pointer_after_end.\n\ngcc/java/\n\t* boehm.c (mark_reference_fields): Don't update the mask when\n\tsetting pointer_after_end.\n\nFrom-SVN: r210119", "tree": {"sha": "22999cc24aa4db16e18630f8acc4e25f4649b867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22999cc24aa4db16e18630f8acc4e25f4649b867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9/comments", "author": null, "committer": null, "parents": [{"sha": "aa3a12d66e691508961992aaba0d13914c274afe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3a12d66e691508961992aaba0d13914c274afe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa3a12d66e691508961992aaba0d13914c274afe"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "1c357fe25a5cdb12c65d50dfd3c4d9344e5d0522", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ebe9df675a6f63a6a729da7e20c97d037b3fb8a9", "patch": "@@ -1,3 +1,8 @@\n+2014-05-06  Richard Sandiford  <r.sandiford@uk.ibm.com>\n+\n+\t* boehm.c (mark_reference_fields): Don't update the mask when\n+\tsetting pointer_after_end.\n+\n 2014-05-06  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \t    Mike Stump  <mikestump@comcast.net>\n \t    Richard Sandiford  <rdsandiford@googlemail.com>"}, {"sha": "10b6d64bbe9ff64eb4bfed4cc27692f694083362", "filename": "gcc/java/boehm.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9/gcc%2Fjava%2Fboehm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe9df675a6f63a6a729da7e20c97d037b3fb8a9/gcc%2Fjava%2Fboehm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fboehm.c?ref=ebe9df675a6f63a6a729da7e20c97d037b3fb8a9", "patch": "@@ -101,17 +101,17 @@ mark_reference_fields (tree field,\n \n \t  *last_set_index = count;\n \t     \n-\t  /* First word in object corresponds to most significant byte of \n-\t     bitmap. \n-\t     \n-\t     In the case of a multiple-word record, we set pointer \n-\t     bits for all words in the record. This is conservative, but the \n-\t     size_words != 1 case is impossible in regular java code. */\n-\t  for (i = 0; i < size_words; ++i)\n-\t    *mask = wi::set_bit (*mask, ubit - count - i - 1);\n-\n \t  if (count >= ubit - 2)\n \t    *pointer_after_end = 1;\n+\t  else\n+\t    /* First word in object corresponds to most significant byte of \n+\t       bitmap. \n+\t     \n+\t       In the case of a multiple-word record, we set pointer \n+\t       bits for all words in the record. This is conservative, but the \n+\t       size_words != 1 case is impossible in regular java code. */\n+\t    for (i = 0; i < size_words; ++i)\n+\t      *mask = wi::set_bit (*mask, ubit - count - i - 1);\n \n \t  /* If we saw a non-reference field earlier, then we can't\n \t     use the count representation.  We keep track of that in"}]}