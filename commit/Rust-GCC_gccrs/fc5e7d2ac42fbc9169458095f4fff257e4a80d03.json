{"sha": "fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1ZTdkMmFjNDJmYmM5MTY5NDU4MDk1ZjRmZmYyNTdlNGE4MGQwMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-29T10:39:46Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-29T10:39:46Z"}, "message": "Fix ICE seen in tree-ssa-dce.c for new/delete pair.\n\n2019-07-29  Martin Liska  <mliska@suse.cz>\n\n\t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Do not\n\tremove LHS of operator new call.  It's handled latter.\n2019-07-29  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/cpp1y/new1.C (test_unused): Add new case that causes\n\tICE.\n\nFrom-SVN: r273875", "tree": {"sha": "227a9d03abbe1c957aabd341678253f32a2db636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/227a9d03abbe1c957aabd341678253f32a2db636"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c2f6fae598f997003b73ab93bb85cb33471f389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2f6fae598f997003b73ab93bb85cb33471f389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2f6fae598f997003b73ab93bb85cb33471f389"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "6ef0bd5fd6697c902247dd57cad534723d8f10de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "patch": "@@ -1,3 +1,8 @@\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Do not\n+\tremove LHS of operator new call.  It's handled latter.\n+\n 2019-07-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91267"}, {"sha": "e387992448766b0772712dea80b3203c0bdc3169", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "patch": "@@ -1,3 +1,8 @@\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/cpp1y/new1.C (test_unused): Add new case that causes\n+\tICE.\n+\n 2019-07-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91267"}, {"sha": "5e4f1bf6b0ba40db1a927fb2e154e314319f1643", "filename": "gcc/testsuite/g++.dg/cpp1y/new1.C", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C?ref=fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "patch": "@@ -61,5 +61,13 @@ new_array_load() {\n   delete [] x;\n }\n \n+void\n+test_unused() {\n+  volatile double d = 0.0;\n+  double *p = new double ();\n+  d += 1.0;\n+  delete p;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"Deleting : operator delete\" 5 \"cddce1\"} } */\n /* { dg-final { scan-tree-dump-times \"Deleting : _\\\\d+ = operator new\" 7 \"cddce1\"} } */"}, {"sha": "763b76f0e5325519ff98a1b4036d39c9272ea569", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5e7d2ac42fbc9169458095f4fff257e4a80d03/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=fc5e7d2ac42fbc9169458095f4fff257e4a80d03", "patch": "@@ -1364,12 +1364,13 @@ eliminate_unnecessary_stmts (void)\n \t\t     did not mark as necessary, it will confuse the\n \t\t     special logic we apply to malloc/free pair removal.  */\n \t\t  && (!(call = gimple_call_fndecl (stmt))\n-\t\t      || DECL_BUILT_IN_CLASS (call) != BUILT_IN_NORMAL\n-\t\t      || (DECL_FUNCTION_CODE (call) != BUILT_IN_ALIGNED_ALLOC\n-\t\t\t  && DECL_FUNCTION_CODE (call) != BUILT_IN_MALLOC\n-\t\t\t  && DECL_FUNCTION_CODE (call) != BUILT_IN_CALLOC\n-\t\t\t  && !ALLOCA_FUNCTION_CODE_P\n-\t\t\t      (DECL_FUNCTION_CODE (call)))))\n+\t\t      || ((DECL_BUILT_IN_CLASS (call) != BUILT_IN_NORMAL\n+\t\t\t   || (DECL_FUNCTION_CODE (call) != BUILT_IN_ALIGNED_ALLOC\n+\t\t\t       && DECL_FUNCTION_CODE (call) != BUILT_IN_MALLOC\n+\t\t\t       && DECL_FUNCTION_CODE (call) != BUILT_IN_CALLOC\n+\t\t\t       && !ALLOCA_FUNCTION_CODE_P\n+\t\t\t       (DECL_FUNCTION_CODE (call))))\n+\t\t\t  && !DECL_IS_REPLACEABLE_OPERATOR_NEW_P (call))))\n \t\t{\n \t\t  something_changed = true;\n \t\t  if (dump_file && (dump_flags & TDF_DETAILS))"}]}