{"sha": "e288a46ccc3f824c1fde7a34d92a265659a05ee5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI4OGE0NmNjYzNmODI0YzFmZGU3YTM0ZDkyYTI2NTY1OWEwNWVlNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-06-26T18:50:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-06-26T18:50:24Z"}, "message": "invoke.texi (-fsemantic-interposition): Document.\n\n\n\t* doc/invoke.texi (-fsemantic-interposition): Document.\n\t* common.opt (fsemantic-interposition): New flag.\n\t* varasm.c (decl_replaceable_p): Use it.\n\t* gcc.dg/tree-ssa/interposition.c: New testcase.\n\nFrom-SVN: r212049", "tree": {"sha": "6629c6fbf16d67b6b1ae6de297c37f51a25cd8d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6629c6fbf16d67b6b1ae6de297c37f51a25cd8d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e288a46ccc3f824c1fde7a34d92a265659a05ee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e288a46ccc3f824c1fde7a34d92a265659a05ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e288a46ccc3f824c1fde7a34d92a265659a05ee5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e288a46ccc3f824c1fde7a34d92a265659a05ee5/comments", "author": null, "committer": null, "parents": [{"sha": "6a7424669d61d9697fcce29813f70578211af4fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7424669d61d9697fcce29813f70578211af4fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7424669d61d9697fcce29813f70578211af4fd"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "2fecad45baab562cc0754770b85baf05d2be84cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e288a46ccc3f824c1fde7a34d92a265659a05ee5", "patch": "@@ -1,3 +1,9 @@\n+2014-06-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* doc/invoke.texi (-fsemantic-interposition): Document.\n+\t* common.opt (fsemantic-interposition): New flag.\n+\t* varasm.c (decl_replaceable_p): Use it.\n+\n 2014-06-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/61542"}, {"sha": "d515dca5ff5a4533f363542c4e50756c1c1333f3", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e288a46ccc3f824c1fde7a34d92a265659a05ee5", "patch": "@@ -1855,6 +1855,10 @@ fsel-sched-reschedule-pipelined\n Common Report Var(flag_sel_sched_reschedule_pipelined) Init(0) Optimization\n Reschedule pipelined regions without pipelining\n \n+fsemantic-interposition\n+Common Report Var(flag_semantic_interposition) Init(1)\n+Allow interposing function (or variables) by ones with different semantics (or initializer) respectively by dynamic linker\n+\n ; sched_stalled_insns means that insns can be moved prematurely from the queue\n ; of stalled insns into the ready list.\n fsched-stalled-insns"}, {"sha": "4df5f8113b5358bbfbd0008b2e9f8e8ce4bef635", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e288a46ccc3f824c1fde7a34d92a265659a05ee5", "patch": "@@ -411,6 +411,7 @@ Objective-C and Objective-C++ Dialects}.\n -fschedule-insns -fschedule-insns2 -fsection-anchors @gol\n -fselective-scheduling -fselective-scheduling2 @gol\n -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops @gol\n+-fsemantic-interposition @gol\n -fshrink-wrap -fsignaling-nans -fsingle-precision-constant @gol\n -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-phiopt -fstack-protector @gol\n -fstack-protector-all -fstack-protector-strong -fstrict-aliasing @gol\n@@ -7738,6 +7739,22 @@ This option has no effect unless one of @option{-fselective-scheduling} or\n When pipelining loops during selective scheduling, also pipeline outer loops.\n This option has no effect unless @option{-fsel-sched-pipelining} is turned on.\n \n+@item -fsemantic-interposition\n+@opindex fsemantic-interposition\n+Some object formats, like ELF, allow interposing of symbols by dynamic linker.\n+This means that for symbols exported from the DSO compiler can not perform\n+inter-procedural propagation, inlining and other optimizations in anticipation\n+that the function or variable in question may change. While this feature is\n+useful, for example, to rewrite memory allocation functions by a debugging\n+implementation, it is expensive in the terms of code quality.\n+With @option{-fno-semantic-inteposition} compiler assumest that if interposition\n+happens for functions the overwritting function will have\n+precisely same semantics (and side effects). Similarly if interposition happens\n+for variables, the constructor of the variable will be the same. The flag\n+has no effect for functions explicitly declared inline, where\n+interposition changing semantic is never allowed and for symbols explicitly\n+declared weak.\n+\n @item -fshrink-wrap\n @opindex fshrink-wrap\n Emit function prologues only before parts of the function that need it,"}, {"sha": "3d0c9ae61430ca6a11e3d8a245eda3409e094215", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e288a46ccc3f824c1fde7a34d92a265659a05ee5", "patch": "@@ -1,3 +1,7 @@\n+2014-06-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/tree-ssa/interposition.c: New testcase.\n+\n 2014-06-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/56633"}, {"sha": "8c89150fc709aba3f9b29038d5b0306995cbb3f8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/interposition.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finterposition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finterposition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finterposition.c?ref=e288a46ccc3f824c1fde7a34d92a265659a05ee5", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-semantic-interposition -fdump-tree-optimized -fPIC\" } */\n+int t(void)\n+{\n+  return 1;\n+}\n+int q(void)\n+{\n+  return t();\n+}\n+/* { dg-final { scan-tree-dump-times \"return 1\" 2 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "aea5a255060202c6d4799df273be83e553dc95fd", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e288a46ccc3f824c1fde7a34d92a265659a05ee5/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e288a46ccc3f824c1fde7a34d92a265659a05ee5", "patch": "@@ -6830,6 +6830,9 @@ decl_replaceable_p (tree decl)\n   gcc_assert (DECL_P (decl));\n   if (!TREE_PUBLIC (decl) || DECL_COMDAT (decl))\n     return false;\n+  if (!flag_semantic_interposition\n+      && !DECL_WEAK (decl))\n+    return false;\n   return !decl_binds_to_current_def_p (decl);\n }\n "}]}