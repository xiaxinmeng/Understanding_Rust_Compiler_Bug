{"sha": "1d801f212f02cc2f62cfae39ce23589f645828df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ4MDFmMjEyZjAyY2MyZjYyY2ZhZTM5Y2UyMzU4OWY2NDU4MjhkZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T16:05:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T16:05:30Z"}, "message": "[multiple changes]\n\n2011-08-01  Yannick Moy  <moy@adacore.com>\n\n\t* par-ch4.adb (P_Name): issue a syntax error in SPARK mode on character\n\tliteral or operator symbol which is prefixed\n\t* sem_attr.adb (Analyze_Access_Attribute): issue an error in formal\n\tmode on access attributes.\n\t* sem_ch4.adb (Analyze_Concatenation_Operand): new procedure to check\n\tthat concatenation operands are properly restricted in formal mode\n\t(Analyze_Concatenation, Analyze_Concatenation_Rest): call new procedure\n\tAnalyze_Concatenation_Operand. Issue an error in formal mode if the\n\tresult of the concatenation has a type different from String.\n\t(Analyze_Conditional_Expression, Analyze_Explicit_Dereference,\n\tAnalyze_Quantified_Expression, Analyze_Slice,\n\tAnalyze_Null): issue an error in formal mode on unsupported constructs\n\t* sem_ch5.adb\n\t(Analyze_Block_Statement): only issue error on source block statement\n\t* sem_util.ads, sem_util.adb (Last_Source_Node_In_Sequence): new\n\tfunction which returns the last node in a list of nodes for which\n\tComes_From_Source returns True, if any\n\t* sem_ch6.adb (Check_Missing_Return): minor refactoring to use\n\tLast_Source_Node_In_Sequence\n\t* sem_ch8.adb (Analyze_Exception_Renaming, Analyze_Generic_Renaming,\n\tAnalyze_Object_Renaming, Analyze_Use_Package): issue an error in formal\n\tmode on unsupported constructs\n\t* sem_ch9.adb Do not return after issuing error in formal mode, as the\n\trest of the actions may be needed later on since the error is marked as\n\tnot serious.\n\t* sinfo.ads: Typos in comments.\n\n2011-08-01  Pascal Obry  <obry@adacore.com>\n\n\t* projects.texi: Minor editing.\n\nFrom-SVN: r177057", "tree": {"sha": "45e7af071813462b1f48c5c2fad29bd211f1f0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45e7af071813462b1f48c5c2fad29bd211f1f0f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d801f212f02cc2f62cfae39ce23589f645828df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d801f212f02cc2f62cfae39ce23589f645828df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d801f212f02cc2f62cfae39ce23589f645828df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d801f212f02cc2f62cfae39ce23589f645828df/comments", "author": null, "committer": null, "parents": [{"sha": "53beff22220d9c1dd48c022f81e61e74a3084c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53beff22220d9c1dd48c022f81e61e74a3084c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53beff22220d9c1dd48c022f81e61e74a3084c34"}], "stats": {"total": 289, "additions": 249, "deletions": 40}, "files": [{"sha": "f044856f4e3dbae910a6de3bc5f857fd827c5827", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -1,3 +1,36 @@\n+2011-08-01  Yannick Moy  <moy@adacore.com>\n+\n+\t* par-ch4.adb (P_Name): issue a syntax error in SPARK mode on character\n+\tliteral or operator symbol which is prefixed\n+\t* sem_attr.adb (Analyze_Access_Attribute): issue an error in formal\n+\tmode on access attributes.\n+\t* sem_ch4.adb (Analyze_Concatenation_Operand): new procedure to check\n+\tthat concatenation operands are properly restricted in formal mode\n+\t(Analyze_Concatenation, Analyze_Concatenation_Rest): call new procedure\n+\tAnalyze_Concatenation_Operand. Issue an error in formal mode if the\n+\tresult of the concatenation has a type different from String.\n+\t(Analyze_Conditional_Expression, Analyze_Explicit_Dereference,\n+\tAnalyze_Quantified_Expression, Analyze_Slice,\n+\tAnalyze_Null): issue an error in formal mode on unsupported constructs\n+\t* sem_ch5.adb\n+\t(Analyze_Block_Statement): only issue error on source block statement\n+\t* sem_util.ads, sem_util.adb (Last_Source_Node_In_Sequence): new\n+\tfunction which returns the last node in a list of nodes for which\n+\tComes_From_Source returns True, if any\n+\t* sem_ch6.adb (Check_Missing_Return): minor refactoring to use\n+\tLast_Source_Node_In_Sequence\n+\t* sem_ch8.adb (Analyze_Exception_Renaming, Analyze_Generic_Renaming,\n+\tAnalyze_Object_Renaming, Analyze_Use_Package): issue an error in formal\n+\tmode on unsupported constructs\n+\t* sem_ch9.adb Do not return after issuing error in formal mode, as the\n+\trest of the actions may be needed later on since the error is marked as\n+\tnot serious.\n+\t* sinfo.ads: Typos in comments.\n+\n+2011-08-01  Pascal Obry  <obry@adacore.com>\n+\n+\t* projects.texi: Minor editing.\n+\n 2011-08-01  Yannick Moy  <moy@adacore.com>\n \n \t* err_vars.ads (Error_Msg_Lang, Error_Msg_Langlen): new variables for"}, {"sha": "338ee6415937835ad72b60e0823149c097b59609", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -209,8 +209,21 @@ package body Ch4 is\n          --  designator.\n \n          if Token not in Token_Class_Desig then\n+\n+            --  Selector name cannot be a character literal in SPARK\n+\n+            if SPARK_Mode and then Token = Tok_Char_Literal then\n+               Error_Msg_SC (\"|~~character literal cannot be prefixed\");\n+            end if;\n+\n             goto Scan_Name_Extension_Dot;\n          else\n+            --  Selector name cannot be an operator symbol in SPARK\n+\n+            if SPARK_Mode and then Token = Tok_Operator_Symbol then\n+               Error_Msg_SC (\"|~~operator symbol cannot be prefixed\");\n+            end if;\n+\n             Prefix_Node := Name_Node;\n             Name_Node := New_Node (N_Selected_Component, Prev_Token_Ptr);\n             Set_Prefix (Name_Node, Prefix_Node);"}, {"sha": "788445914fa72ea02d7d759e69f7a4383b1ec2a7", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -736,9 +736,10 @@ Notice the three steps described earlier:\n The default output of GPRbuild's execution is kept reasonably simple and easy\n to understand. In particular, some of the less frequently used commands are not\n shown, and some parameters are abbreviated. So it is not possible to rerun the\n-effect of the gprbuild command by cut-and-pasting its output. GPRbuild's option\n-@code{-v} provides a much more verbose output which includes, among other\n-information, more complete compilation, post-compilation and link commands.\n+effect of the @command{gprbuild} command by cut-and-pasting its output.\n+GPRbuild's option @code{-v} provides a much more verbose output which includes,\n+among other information, more complete compilation, post-compilation and link\n+commands.\n \n @c ---------------------------------------------\n @node Executable File Names\n@@ -1112,19 +1113,30 @@ the search stops:\n @itemize @bullet\n @item First, the file is searched relative to the directory that contains the\n   current project file.\n+\n @item\n @cindex @code{ADA_PROJECT_PATH}\n @cindex @code{GPR_PROJECT_PATH}\n   Then it is searched relative to all the directories specified in the\n   ^environment variables^logical names^ @b{GPR_PROJECT_PATH} and\n   @b{ADA_PROJECT_PATH} (in that order) if they exist. The former is\n   recommended, the latter is kept for backward compatibility.\n+\n @item Finally, it is searched relative to the default project directories.\n-  Such directories depends on the tool used. For @command{gnatmake}, there is\n-  one default project directory: @file{<prefix>/lib/gnat/}. In our example,\n-  @file{gtkada.gpr} is found in the predefined directory if it was installed at\n-  the same root as GNAT.\n+  Such directories depends on the tool used. The different locations searched\n+  in the specified order are:\n+\n+  @itemize @bullet\n+  @item @file{<prefix>/<target>/lib/gnat}\n+  (for @command{gprbuild} only and if option @option{--target} is specified)\n+  @item @file{<prefix>/share/gpr/}\n+  (for @command{gnatmake} and @command{gprbuild})\n+  @item @file{<prefix>/lib/gnat/}\n+  (for @command{gnatmake} and @command{gprbuild})\n+  @end itemize\n \n+  In our example, @file{gtkada.gpr} is found in the predefined directory if\n+  it was installed at the same root as GNAT.\n @end itemize\n \n @noindent"}, {"sha": "f2556a7f2a4f1f8d7d5ea4e88dfedc437a33d7d5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -565,6 +565,14 @@ package body Sem_Attr is\n       --  Start of processing for Analyze_Access_Attribute\n \n       begin\n+         --  Access attribute is not allowed in SPARK or ALFA\n+\n+         if Formal_Verification_Mode and then Comes_From_Source (N) then\n+            Error_Attr_P (\"|~~% attribute is not allowed\");\n+         end if;\n+\n+         --  Proceed with analysis\n+\n          Check_E0;\n \n          if Nkind (P) = N_Character_Literal then"}, {"sha": "23913612169dddb7992e518f113b43af32aaf092", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -67,6 +67,11 @@ package body Sem_Ch4 is\n    -- Local Subprograms --\n    -----------------------\n \n+   procedure Analyze_Concatenation_Operand (N : Node_Id);\n+   --  Checks that concatenation operands are properly restricted in SPARK or\n+   --  ALFA: each operand must be either a string literal, a static character\n+   --  expression, or another concatenation.\n+\n    procedure Analyze_Concatenation_Rest (N : Node_Id);\n    --  Does the \"rest\" of the work of Analyze_Concatenation, after the left\n    --  operand has been analyzed. See Analyze_Concatenation for details.\n@@ -369,6 +374,14 @@ package body Sem_Ch4 is\n       C        : Node_Id;\n \n    begin\n+      --  Allocator is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~allocator is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       --  Deal with allocator restrictions\n \n       --  In accordance with H.4(7), the No_Allocators restriction only applies\n@@ -1344,6 +1357,7 @@ package body Sem_Ch4 is\n       --  First analyze L ...\n \n       Analyze_Expression (L);\n+      Analyze_Concatenation_Operand (L);\n \n       --  ... then walk NN back up until we reach N (where we started), calling\n       --  Analyze_Concatenation_Rest along the way.\n@@ -1353,8 +1367,45 @@ package body Sem_Ch4 is\n          exit when NN = N;\n          NN := Parent (NN);\n       end loop;\n+\n+      if Formal_Verification_Mode\n+        and then Etype (N) /= Standard_String\n+      then\n+         Error_Msg_F (\"|~~result of concatenation should have type String\", N);\n+      end if;\n    end Analyze_Concatenation;\n \n+   -----------------------------------\n+   -- Analyze_Concatenation_Operand --\n+   -----------------------------------\n+\n+   --  Concatenation is restricted in SPARK or ALFA: each operand must be\n+   --  either a string literal, a static character expression, or another\n+   --  concatenation. N cannot be a concatenation here as Analyze_Concatenation\n+   --  and Analyze_Concatenation_Rest call Analyze_Concatenation_Operand\n+   --  separately on each final operand, past concatenation operations.\n+\n+   procedure Analyze_Concatenation_Operand (N : Node_Id) is\n+   begin\n+      if Formal_Verification_Mode then\n+         if Is_Character_Type (Etype (N)) then\n+            if not Is_Static_Expression (N) then\n+               Error_Msg_F (\"|~~character operand for concatenation should be \"\n+                            & \"static\", N);\n+            end if;\n+         elsif Is_String_Type (Etype (N)) then\n+            if Nkind (N) /= N_String_Literal then\n+               Error_Msg_F (\"|~~string operand for concatenation should be \"\n+                            & \"a literal\", N);\n+            end if;\n+\n+         --  Do not issue error on an operand that is neither a character nor\n+         --  a string, as the error is issued in Analyze_Concatenation_Rest.\n+\n+         end if;\n+      end if;\n+   end Analyze_Concatenation_Operand;\n+\n    --------------------------------\n    -- Analyze_Concatenation_Rest --\n    --------------------------------\n@@ -1373,6 +1424,7 @@ package body Sem_Ch4 is\n \n    begin\n       Analyze_Expression (R);\n+      Analyze_Concatenation_Operand (R);\n \n       --  If the entity is present, the node appears in an instance, and\n       --  denotes a predefined concatenation operation. The resulting type is\n@@ -1467,6 +1519,14 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n+      --  Conditional expression is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~conditional expression is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Else_Expr := Next (Then_Expr);\n \n       if Comes_From_Source (N) then\n@@ -1665,6 +1725,14 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Explicit_Dereference\n \n    begin\n+      --  Explicit dereference is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~explicit dereference is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Analyze (P);\n       Set_Etype (N, Any_Type);\n \n@@ -2542,6 +2610,14 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Null (N : Node_Id) is\n    begin\n+      --  Null is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~null is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Set_Etype (N, Any_Access);\n    end Analyze_Null;\n \n@@ -3226,6 +3302,14 @@ package body Sem_Ch4 is\n       Iterator : Node_Id;\n \n    begin\n+      --  Quantified expression is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~quantified expression is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Set_Etype  (Ent,  Standard_Void_Type);\n       Set_Parent (Ent, N);\n \n@@ -4252,6 +4336,14 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Slice\n \n    begin\n+      --  Slice is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~slice is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Analyze (P);\n       Analyze (D);\n "}, {"sha": "1673e5365ca7db8e5a8d06f65b519cd3460fe041", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -808,7 +808,9 @@ package body Sem_Ch5 is\n    begin\n       --  Block statement is not allowed in SPARK or ALFA\n \n-      if Formal_Verification_Mode then\n+      if Formal_Verification_Mode\n+        and then Comes_From_Source (N)\n+      then\n          Error_Msg_F (\"|~~block statement is not allowed\", N);\n       end if;\n "}, {"sha": "992222198d7f2fad7cce99e4facca93172b49933", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -1851,25 +1851,17 @@ package body Sem_Ch6 is\n \n             if Formal_Verification_Mode then\n                declare\n-                  Stat : Node_Id := Last (Statements (HSS));\n+                  Stat : constant Node_Id :=\n+                           Last_Source_Node_In_Sequence (Statements (HSS));\n                begin\n-                  while Present (Stat) loop\n-                     if Comes_From_Source (Stat) then\n-                        if not Nkind_In (Nkind (Stat),\n-                                         N_Simple_Return_Statement,\n-                                         N_Extended_Return_Statement)\n-                        then\n-                           Error_Msg_F (\"|~~last statement in function \"\n-                                        & \"should be RETURN\", N);\n-                        end if;\n-                        exit;\n-                     end if;\n-\n-                     --  Reach before the generated statements at the end of\n-                     --  the function.\n-\n-                     Stat := Prev (Stat);\n-                  end loop;\n+                  if Present (Stat)\n+                    and then not Nkind_In (Nkind (Stat),\n+                                           N_Simple_Return_Statement,\n+                                           N_Extended_Return_Statement)\n+                  then\n+                     Error_Msg_F (\"|~~last statement in function should \"\n+                                  & \"be RETURN\", Stat);\n+                  end if;\n                end;\n \n             elsif Return_Present (Id) then"}, {"sha": "11a31481aa2731fcac861a18e571c371f44b644d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -455,7 +455,7 @@ package body Sem_Ch8 is\n    --  private with on E.\n \n    procedure Find_Expanded_Name (N : Node_Id);\n-   --  The input is a selected component is known to be expanded name. Verify\n+   --  The input is a selected component known to be an expanded name. Verify\n    --  legality of selector given the scope denoted by prefix, and change node\n    --  N into a expanded name with a properly set Entity field.\n \n@@ -526,6 +526,14 @@ package body Sem_Ch8 is\n       Nam : constant Node_Id := Name (N);\n \n    begin\n+      --  Exception renaming is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~exception renaming is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Enter_Name (Id);\n       Analyze (Nam);\n \n@@ -617,6 +625,14 @@ package body Sem_Ch8 is\n       Inst  : Boolean   := False; -- prevent junk warning\n \n    begin\n+      --  Generic renaming is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~generic renaming is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       if Name (N) = Error then\n          return;\n       end if;\n@@ -707,6 +723,14 @@ package body Sem_Ch8 is\n    --  Start of processing for Analyze_Object_Renaming\n \n    begin\n+      --  Object renaming is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~object renaming is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       if Nam = Error then\n          return;\n       end if;\n@@ -2540,6 +2564,15 @@ package body Sem_Ch8 is\n    --  Start of processing for Analyze_Use_Package\n \n    begin\n+      --  Use package is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Error_Msg_F (\"|~~use clause is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Set_Hidden_By_Use_Clause (N, No_Elist);\n \n       --  Use clause is not allowed in a spec of a predefined package\n@@ -5468,6 +5501,18 @@ package body Sem_Ch8 is\n       elsif Is_Entity_Name (P) then\n          P_Name := Entity (P);\n \n+         --  Selector name is restricted in SPARK\n+\n+         if SPARK_Mode then\n+            if Is_Subprogram (P_Name) then\n+               Error_Msg_F\n+                 (\"|~~prefix of expanded name cannot be a subprogram\", P);\n+            elsif Ekind (P_Name) = E_Loop then\n+               Error_Msg_F\n+                 (\"|~~prefix of expanded name cannot be a loop statement\", P);\n+            end if;\n+         end if;\n+\n          --  The prefix may denote an enclosing type which is the completion\n          --  of an incomplete type declaration.\n "}, {"sha": "0fb1ae6f3424d2402ab9c7856f55e27d292ce230", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -104,7 +104,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~abort statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -182,7 +181,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~accept statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -421,7 +419,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~select statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -475,7 +472,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~select statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -580,7 +576,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~delay statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -606,7 +601,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~delay statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -901,7 +895,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~entry call is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -1360,7 +1353,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~requeue statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -1642,7 +1634,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~select statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis\n@@ -2179,7 +2170,6 @@ package body Sem_Ch9 is\n \n       if Formal_Verification_Mode then\n          Error_Msg_F (\"|~~select statement is not allowed\", N);\n-         return;\n       end if;\n \n       --  Proceed with analysis"}, {"sha": "e93a2997091c7667d1529879170038e1e4b46c2f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -7981,6 +7981,24 @@ package body Sem_Util is\n       end case;\n    end Known_To_Be_Assigned;\n \n+   ----------------------------------\n+   -- Last_Source_Node_In_Sequence --\n+   ----------------------------------\n+\n+   function Last_Source_Node_In_Sequence (List : List_Id) return Node_Id is\n+      N : Node_Id := Last (List);\n+   begin\n+      while Present (N) loop\n+         exit when Comes_From_Source (N);\n+\n+         --  Reach before the generated statements at the end of the function\n+\n+         N := Prev (N);\n+      end loop;\n+\n+      return N;\n+   end Last_Source_Node_In_Sequence;\n+\n    -------------------\n    -- May_Be_Lvalue --\n    -------------------"}, {"sha": "29594393d2f3ec930c1be804367ffa835c1364d9", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -927,6 +927,10 @@ package Sem_Util is\n    --  direction. Cases which may possibly be assignments but are not known to\n    --  be may return True from May_Be_Lvalue, but False from this function.\n \n+   function Last_Source_Node_In_Sequence (List : List_Id) return Node_Id;\n+   --  Returns the last node in List for which Comes_From_Source returns True,\n+   --  if any, or Empty otherwise.\n+\n    function Make_Simple_Return_Statement\n      (Sloc       : Source_Ptr;\n       Expression : Node_Id := Empty) return Node_Id"}, {"sha": "fb8f203f7ecf235ba378702bfbcdf3d2411125c3", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d801f212f02cc2f62cfae39ce23589f645828df/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=1d801f212f02cc2f62cfae39ce23589f645828df", "patch": "@@ -6939,7 +6939,7 @@ package Sinfo is\n \n       --  This node is created by the analyzer/expander to handle some\n       --  expansion cases, notably short circuit forms where there are\n-      --  actions associated with the right hand operand.\n+      --  actions associated with the right-hand side operand.\n \n       --  The N_Expression_With_Actions node represents an expression with\n       --  an associated set of actions (which are executable statements and\n@@ -6953,8 +6953,8 @@ package Sinfo is\n       --  executing all the actions.\n \n       --  Note: if the actions contain declarations, then these declarations\n-      --  maybe referenced with in the expression. It is thus appropriate for\n-      --  the back end to create a scope that encompasses the construct (any\n+      --  may be referenced within the expression. It is thus appropriate for\n+      --  the back-end to create a scope that encompasses the construct (any\n       --  declarations within the actions will definitely not be referenced\n       --  once elaboration of the construct is completed).\n "}]}