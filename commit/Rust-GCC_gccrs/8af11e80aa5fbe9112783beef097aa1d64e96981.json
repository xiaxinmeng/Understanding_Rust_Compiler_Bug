{"sha": "8af11e80aa5fbe9112783beef097aa1d64e96981", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFmMTFlODBhYTVmYmU5MTEyNzgzYmVlZjA5N2FhMWQ2NGU5Njk4MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-10-11T17:38:29Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-10-11T17:38:29Z"}, "message": "varasm.c (notice_global_symbol): Fix handling of variables; avoid re-computing of variable.\n\n\n\t* varasm.c (notice_global_symbol):  Fix handling of variables; avoid\n\tre-computing of variable.\n\nFrom-SVN: r72343", "tree": {"sha": "3b744ee75319df0d768020fed1cc0144a2856fb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b744ee75319df0d768020fed1cc0144a2856fb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8af11e80aa5fbe9112783beef097aa1d64e96981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af11e80aa5fbe9112783beef097aa1d64e96981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8af11e80aa5fbe9112783beef097aa1d64e96981", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af11e80aa5fbe9112783beef097aa1d64e96981/comments", "author": null, "committer": null, "parents": [{"sha": "a28e846b41b95044bbb09408ec8de8a7e5400c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a28e846b41b95044bbb09408ec8de8a7e5400c63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a28e846b41b95044bbb09408ec8de8a7e5400c63"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "33f366c4b38b50229c886090ff88524de1c9eef1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af11e80aa5fbe9112783beef097aa1d64e96981/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af11e80aa5fbe9112783beef097aa1d64e96981/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8af11e80aa5fbe9112783beef097aa1d64e96981", "patch": "@@ -1,3 +1,8 @@\n+Sat Oct 11 12:24:23 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* varasm.c (notice_global_symbol):  Fix handling of variables; avoid\n+\tre-computing of variable.\n+\n 2003-10-11  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_return_in_memory): Rename from"}, {"sha": "561dc4ace229efd97b636f3d2ee963d5938c71c4", "filename": "gcc/varasm.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af11e80aa5fbe9112783beef097aa1d64e96981/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af11e80aa5fbe9112783beef097aa1d64e96981/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8af11e80aa5fbe9112783beef097aa1d64e96981", "patch": "@@ -1041,13 +1041,24 @@ default_ctor_section_asm_out_constructor (rtx symbol,\n void\n notice_global_symbol (tree decl)\n {\n-  if ((!first_global_object_name || !weak_global_object_name)\n-      && TREE_PUBLIC (decl) && !DECL_COMMON (decl)\n-      && !DECL_EXTERNAL (decl)\n-      && (TREE_CODE (decl) == FUNCTION_DECL\n-\t  || (TREE_CODE (decl) == VAR_DECL\n-\t      && (DECL_INITIAL (decl) != 0\n-\t\t  && DECL_INITIAL (decl) != error_mark_node))))\n+  const char **type = &first_global_object_name;\n+\n+  if (first_global_object_name\n+      || !TREE_PUBLIC (decl) || DECL_EXTERNAL (decl)\n+      || !DECL_NAME (decl)\n+      || (TREE_CODE (decl) != FUNCTION_DECL\n+\t  && (TREE_CODE (decl) != VAR_DECL\n+\t      || (DECL_COMMON (decl)\n+\t\t  && (DECL_INITIAL (decl) == 0\n+\t\t      || DECL_INITIAL (decl) == error_mark_node)))))\n+    return;\n+\n+  /* We win when global object is found, but it is usefull to know about weak\n+     symbol as well so we can produce nicer unique names.  */\n+  if (DECL_WEAK (decl) || DECL_ONE_ONLY (decl))\n+    type = &weak_global_object_name;\n+\n+  if (!*type)\n     {\n       const char *p;\n       char *name;\n@@ -1056,10 +1067,7 @@ notice_global_symbol (tree decl)\n       p = (* targetm.strip_name_encoding) (XSTR (XEXP (decl_rtl, 0), 0));\n       name = xstrdup (p);\n \n-      if (! DECL_WEAK (decl) && ! DECL_ONE_ONLY (decl))\n-\tfirst_global_object_name = name;\n-      else\n-\tweak_global_object_name = name;\n+      *type = name;\n     }\n }\n "}]}