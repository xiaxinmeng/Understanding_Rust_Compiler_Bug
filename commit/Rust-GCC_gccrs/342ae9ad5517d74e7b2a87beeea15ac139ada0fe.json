{"sha": "342ae9ad5517d74e7b2a87beeea15ac139ada0fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyYWU5YWQ1NTE3ZDc0ZTdiMmE4N2JlZWVhMTVhYzEzOWFkYTBmZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-11-18T11:51:20Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-11-18T11:51:20Z"}, "message": "Improve -dbg-cnt error message and support :0.\n\n2019-11-18  Martin Liska  <mliska@suse.cz>\n\n\t* dbgcnt.c (dbg_cnt_set_limit_by_name): Provide error\n\tmessage for an unknown counter.\n\t(dbg_cnt_process_single_pair): Support 0 as minimum value.\n\t(dbg_cnt_process_opt): Remove unreachable code.\n\nFrom-SVN: r278396", "tree": {"sha": "356b61ed54aaa43b0215a5e75dbd4ba3f7556d77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356b61ed54aaa43b0215a5e75dbd4ba3f7556d77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/342ae9ad5517d74e7b2a87beeea15ac139ada0fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342ae9ad5517d74e7b2a87beeea15ac139ada0fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342ae9ad5517d74e7b2a87beeea15ac139ada0fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342ae9ad5517d74e7b2a87beeea15ac139ada0fe/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "446096148ca9775cb56f9ee924fa283babcd0b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446096148ca9775cb56f9ee924fa283babcd0b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/446096148ca9775cb56f9ee924fa283babcd0b76"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "846506b2088fdcae3dc1751223c95707569b07cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342ae9ad5517d74e7b2a87beeea15ac139ada0fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342ae9ad5517d74e7b2a87beeea15ac139ada0fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=342ae9ad5517d74e7b2a87beeea15ac139ada0fe", "patch": "@@ -1,3 +1,10 @@\n+2019-11-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* dbgcnt.c (dbg_cnt_set_limit_by_name): Provide error\n+\tmessage for an unknown counter.\n+\t(dbg_cnt_process_single_pair): Support 0 as minimum value.\n+\t(dbg_cnt_process_opt): Remove unreachable code.\n+\n 2019-11-18  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/92529"}, {"sha": "f58ef8fd00e1c1a064f1afb897dda10c82f84b3a", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342ae9ad5517d74e7b2a87beeea15ac139ada0fe/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342ae9ad5517d74e7b2a87beeea15ac139ada0fe/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=342ae9ad5517d74e7b2a87beeea15ac139ada0fe", "patch": "@@ -150,7 +150,11 @@ dbg_cnt_set_limit_by_name (const char *name, unsigned int low,\n       break;\n \n   if (i < 0)\n-    return false;\n+    {\n+      error (\"cannot find a valid counter name %qs of %<-fdbg-cnt=%> option\",\n+\t     name);\n+      return false;\n+    }\n \n   return dbg_cnt_set_limit_by_index ((enum debug_counter) i, name, low, high);\n }\n@@ -172,8 +176,9 @@ dbg_cnt_process_single_pair (char *name, char *str)\n \n   if (value2 == NULL)\n     {\n-      low = 1;\n       high = strtol (value1, NULL, 10);\n+      /* Let's allow 0:0.  */\n+      low = high == 0 ? 0 : 1;\n     }\n   else\n     {\n@@ -209,15 +214,6 @@ dbg_cnt_process_opt (const char *arg)\n \t}\n       start += strlen (tokens[i]) + 1;\n     }\n-\n-   if (i != tokens.length ())\n-     {\n-       char *buffer = XALLOCAVEC (char, start + 2);\n-       sprintf (buffer, \"%*c\", start + 1, '^');\n-       error (\"cannot find a valid counter:value pair:\");\n-       error (\"%<-fdbg-cnt=%s%>\", arg);\n-       error (\"           %s\", buffer);\n-     }\n }\n \n /* Print name, limit and count of all counters.   */"}]}