{"sha": "70c3959a8af920616878e587e64dbd01620b87db", "node_id": "C_kwDOANBUbNoAKDcwYzM5NTlhOGFmOTIwNjE2ODc4ZTU4N2U2NGRiZDAxNjIwYjg3ZGI", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2022-06-17T18:39:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:13Z"}, "message": "[Ada] Vxworks7* - Makefile.rtl rtp vs rtp-smp cleanup - remove unused files\n\nOnly smp runtimes are built for vxworks7*, even though the -smp suffix\nis removed during install. This change removes unused system packages\nfor rtp runtimes.\n\ngcc/ada/\n\n\t* libgnat/system-vxworks7-ppc-rtp.ads: Remove\n\t* libgnat/system-vxworks7-x86-rtp.ads: Likewise.", "tree": {"sha": "df90b757fc62ec80544d4ea52e5e89a24853be51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df90b757fc62ec80544d4ea52e5e89a24853be51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70c3959a8af920616878e587e64dbd01620b87db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c3959a8af920616878e587e64dbd01620b87db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c3959a8af920616878e587e64dbd01620b87db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c3959a8af920616878e587e64dbd01620b87db/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fc09105aa018aec5645e7b2e8d00bef9e2e620e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc09105aa018aec5645e7b2e8d00bef9e2e620e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc09105aa018aec5645e7b2e8d00bef9e2e620e"}], "stats": {"total": 327, "additions": 0, "deletions": 327}, "files": [{"sha": "457e641df51c5aed5643569e215d0a3751a19cb2", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-rtp.ads", "status": "removed", "additions": 0, "deletions": 164, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc09105aa018aec5645e7b2e8d00bef9e2e620e/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc09105aa018aec5645e7b2e8d00bef9e2e620e/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads?ref=4fc09105aa018aec5645e7b2e8d00bef9e2e620e", "patch": "@@ -1,164 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                          (VxWorks 7.x PPC RTP)                           --\n---                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the VxWorks version of this package for RTPs\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int             : constant := -2 ** (Standard'Max_Integer_Size - 1);\n-   Max_Int             : constant :=  2 ** (Standard'Max_Integer_Size - 1) - 1;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Standard'Max_Integer_Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := Standard'Max_Integer_Size - 1;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 60.0;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := Standard'Word_Size;\n-   Memory_Size  : constant := 2 ** Word_Size;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  Ada priorities are mapped to VxWorks priorities using the following\n-   --  transformation: 255 - Ada Priority\n-\n-   --  Ada priorities are used as follows:\n-\n-   --  256        is reserved for the VxWorks kernel\n-   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n-   --  247        is a catchall default \"interrupt\" priority for signals,\n-   --             allowing higher priority than normal tasks, but lower than\n-   --             hardware priority levels.  Protected Object ceilings can\n-   --             override these values.\n-   --  246        is used by the Interrupt_Manager task\n-\n-   Max_Priority           : constant Positive := 245;\n-   Max_Interrupt_Priority : constant Positive := 255;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 255;\n-   subtype Priority           is Any_Priority range   0 .. 245;\n-   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n-\n-   Default_Priority : constant Priority := 122;\n-\n-private\n-\n-   pragma Linker_Options (\"--specs=vxworks-ppc-link.spec\");\n-   --  Setup proper set of -L's for this configuration\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-   Executable_Extension : constant String := \".vxe\";\n-\n-end System;"}, {"sha": "7ef6764cb1b4ca165645c10e2ba505ebe7f6a278", "filename": "gcc/ada/libgnat/system-vxworks7-x86-rtp.ads", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc09105aa018aec5645e7b2e8d00bef9e2e620e/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc09105aa018aec5645e7b2e8d00bef9e2e620e/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp.ads?ref=4fc09105aa018aec5645e7b2e8d00bef9e2e620e", "patch": "@@ -1,163 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                    (VxWorks 7 Version x86 for RTPs)                      --\n---                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int             : constant := -2 ** (Standard'Max_Integer_Size - 1);\n-   Max_Int             : constant :=  2 ** (Standard'Max_Integer_Size - 1) - 1;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Standard'Max_Integer_Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := Standard'Max_Integer_Size - 1;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 60.0;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := Standard'Word_Size;\n-   Memory_Size  : constant := 2 ** Word_Size;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  Ada priorities are mapped to VxWorks priorities using the following\n-   --  transformation: 255 - Ada Priority\n-\n-   --  Ada priorities are used as follows:\n-\n-   --  256        is reserved for the VxWorks kernel\n-   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n-   --  247        is a catchall default \"interrupt\" priority for signals,\n-   --             allowing higher priority than normal tasks, but lower than\n-   --             hardware priority levels.  Protected Object ceilings can\n-   --             override these values.\n-   --  246        is used by the Interrupt_Manager task\n-\n-   Max_Priority           : constant Positive := 245;\n-   Max_Interrupt_Priority : constant Positive := 255;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 255;\n-   subtype Priority           is Any_Priority range   0 .. 245;\n-   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n-\n-   Default_Priority : constant Priority := 122;\n-\n-private\n-\n-   pragma Linker_Options (\"--specs=vxworks-x86-link.spec\");\n-   --  Setup proper set of -L's for this configuration\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-   Executable_Extension : constant String := \".vxe\";\n-\n-end System;"}]}