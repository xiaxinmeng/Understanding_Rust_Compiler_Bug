{"sha": "31e63dd6c2b4753d035496b9145e34b7b7d168c0", "node_id": "C_kwDOANBUbNoAKDMxZTYzZGQ2YzJiNDc1M2QwMzU0OTZiOTE0NWUzNGI3YjdkMTY4YzA", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-06-27T15:12:41Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-06-27T15:12:41Z"}, "message": "remove decl mutability context which is unused", "tree": {"sha": "bc3f8703fa047d8bb01b48b0007efb4594b0719b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3f8703fa047d8bb01b48b0007efb4594b0719b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31e63dd6c2b4753d035496b9145e34b7b7d168c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e63dd6c2b4753d035496b9145e34b7b7d168c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e63dd6c2b4753d035496b9145e34b7b7d168c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e63dd6c2b4753d035496b9145e34b7b7d168c0/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f2c41a3ebea5905c91dc5cccbb55fb3ba36c537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2c41a3ebea5905c91dc5cccbb55fb3ba36c537", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2c41a3ebea5905c91dc5cccbb55fb3ba36c537"}], "stats": {"total": 43, "additions": 0, "deletions": 43}, "files": [{"sha": "7b0c31b2edcc2f4bdd327b93090cb0d66a0ed59c", "filename": "gcc/rust/resolve/rust-ast-resolve-item.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -176,10 +176,6 @@ ResolveTraitItems::visit (AST::TraitItemConst &constant)\n \n   if (constant.has_expr ())\n     ResolveExpr::go (constant.get_expr ().get (), path, cpath);\n-\n-  // the mutability checker needs to verify for immutable decls the number\n-  // of assignments are <1. This marks an implicit assignment\n-  resolver->mark_decl_mutability (constant.get_node_id (), false);\n }\n \n ResolveItem::ResolveItem (const CanonicalPath &prefix,\n@@ -500,10 +496,6 @@ ResolveItem::visit (AST::ConstantItem &constant)\n \n   ResolveType::go (constant.get_type ().get (), constant.get_node_id ());\n   ResolveExpr::go (constant.get_expr ().get (), path, cpath);\n-\n-  // the mutability checker needs to verify for immutable decls the number\n-  // of assignments are <1. This marks an implicit assignment\n-  resolver->mark_decl_mutability (constant.get_node_id (), false);\n }\n \n void"}, {"sha": "9386d36d25eb69f078a5f8219c997ef1d278f471", "filename": "gcc/rust/resolve/rust-ast-resolve-pattern.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.cc?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -86,9 +86,6 @@ PatternDeclaration::visit (AST::StructPattern &pattern)\n \t      CanonicalPath::new_seg (ident.get_node_id (),\n \t\t\t\t      ident.get_identifier ()),\n \t      ident.get_node_id (), ident.get_locus ());\n-\n-\t    resolver->mark_decl_mutability (ident.get_node_id (),\n-\t\t\t\t\t    ident.is_mut ());\n \t  }\n \t  break;\n \t}"}, {"sha": "fcbb23fdf088ff5eb1be18bd16fb7c175be4ac0a", "filename": "gcc/rust/resolve/rust-ast-resolve-pattern.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.h?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -68,18 +68,13 @@ class PatternDeclaration : public ResolverBase\n     resolver->get_name_scope ().insert (\n       CanonicalPath::new_seg (pattern.get_node_id (), pattern.get_ident ()),\n       pattern.get_node_id (), pattern.get_locus ());\n-\n-    resolver->mark_decl_mutability (pattern.get_node_id (),\n-\t\t\t\t    pattern.get_is_mut ());\n   }\n \n   void visit (AST::WildcardPattern &pattern) override\n   {\n     resolver->get_name_scope ().insert (\n       CanonicalPath::new_seg (pattern.get_node_id (), \"_\"),\n       pattern.get_node_id (), pattern.get_locus ());\n-\n-    resolver->mark_decl_mutability (pattern.get_node_id (), false);\n   }\n \n   // cases in a match expression"}, {"sha": "95c25a5ad7707310093253f3009487194fe1210a", "filename": "gcc/rust/resolve/rust-ast-resolve-stmt.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-stmt.h?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -72,10 +72,6 @@ class ResolveStmt : public ResolverBase\n \n     ResolveType::go (constant.get_type ().get (), constant.get_node_id ());\n     ResolveExpr::go (constant.get_expr ().get (), prefix, canonical_prefix);\n-\n-    // the mutability checker needs to verify for immutable decls the number\n-    // of assignments are <1. This marks an implicit assignment\n-    resolver->mark_decl_mutability (constant.get_node_id (), false);\n   }\n \n   void visit (AST::LetStmt &stmt) override"}, {"sha": "c495786f6f877c2c3b6a73e740bc528616ce7bc6", "filename": "gcc/rust/resolve/rust-ast-resolve-toplevel.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -275,8 +275,6 @@ class ResolveTopLevel : public ResolverBase\n \trust_error_at (r, \"redefined multiple times\");\n       });\n \n-    resolver->mark_decl_mutability (var.get_node_id (), var.is_mutable ());\n-\n     NodeId current_module = resolver->peek_current_module_scope ();\n     mappings->insert_module_child_item (current_module, decl);\n     mappings->insert_canonical_path (mappings->get_current_crate (),"}, {"sha": "a788914da0dec70b82a66be983be287af8b54e29", "filename": "gcc/rust/resolve/rust-name-resolver.cc", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-name-resolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-name-resolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-name-resolver.cc?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -482,20 +482,5 @@ Resolver::lookup_resolved_macro (NodeId refId, NodeId *defId)\n   return true;\n }\n \n-void\n-Resolver::mark_decl_mutability (NodeId id, bool mut)\n-{\n-  rust_assert (decl_mutability.find (id) == decl_mutability.end ());\n-  decl_mutability[id] = mut;\n-}\n-\n-bool\n-Resolver::decl_is_mutable (NodeId id) const\n-{\n-  auto it = decl_mutability.find (id);\n-  rust_assert (it != decl_mutability.end ());\n-  return it->second;\n-}\n-\n } // namespace Resolver\n } // namespace Rust"}, {"sha": "e9f7c621a47df16f91ef1e91379ab20e67435f16", "filename": "gcc/rust/resolve/rust-name-resolver.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-name-resolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e63dd6c2b4753d035496b9145e34b7b7d168c0/gcc%2Frust%2Fresolve%2Frust-name-resolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-name-resolver.h?ref=31e63dd6c2b4753d035496b9145e34b7b7d168c0", "patch": "@@ -124,9 +124,6 @@ class Resolver\n   void insert_resolved_macro (NodeId refId, NodeId defId);\n   bool lookup_resolved_macro (NodeId refId, NodeId *defId);\n \n-  void mark_decl_mutability (NodeId id, bool mut);\n-  bool decl_is_mutable (NodeId id) const;\n-\n   // proxy for scoping\n   Scope &get_name_scope () { return name_scope; }\n   Scope &get_type_scope () { return type_scope; }\n@@ -203,9 +200,6 @@ class Resolver\n   std::map<NodeId, NodeId> resolved_labels;\n   std::map<NodeId, NodeId> resolved_macros;\n \n-  // map of resolved names mutability flag\n-  std::map<NodeId, bool> decl_mutability;\n-\n   // keep track of the current module scope ids\n   std::vector<NodeId> current_module_stack;\n };"}]}