{"sha": "2074d80a607e13d3e18b550ae66e7c3be5135d4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA3NGQ4MGE2MDdlMTNkM2UxOGI1NTBhZTY2ZTdjM2JlNTEzNWQ0YQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2016-04-21T15:29:29Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2016-04-21T15:29:29Z"}, "message": "AVX-512. PR target/70728. Use separate constraint for AVX-512BW\n\n\nPR target/70728\ngcc/\n\t* gcc/config/i386/sse.md (define_insn \"<shift_insn><mode>3<mask_name>\"):\n\tExtract AVX-512BW constraint from AVX.\ngcc/testsuite/\n\t* gcc.target/i386/pr70728.c: New test.\n\nFrom-SVN: r235344", "tree": {"sha": "5d02a29c9ae2927f03c4007bad4cfd4612d1ab7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d02a29c9ae2927f03c4007bad4cfd4612d1ab7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2074d80a607e13d3e18b550ae66e7c3be5135d4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2074d80a607e13d3e18b550ae66e7c3be5135d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2074d80a607e13d3e18b550ae66e7c3be5135d4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2074d80a607e13d3e18b550ae66e7c3be5135d4a/comments", "author": null, "committer": null, "parents": [{"sha": "0ba94d02f01cc05d21ede49eddbf62167d07d3c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba94d02f01cc05d21ede49eddbf62167d07d3c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba94d02f01cc05d21ede49eddbf62167d07d3c3"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "b9ee9d568a30c6e23e2022969e4ae071845b0f3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2074d80a607e13d3e18b550ae66e7c3be5135d4a", "patch": "@@ -1,3 +1,9 @@\n+2016-04-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/70728\n+\t* gcc/config/i386/sse.md (define_insn \"<shift_insn><mode>3<mask_name>\"):\n+\tExtract AVX-512BW constraint from AVX.\n+\n 2016-04-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70725"}, {"sha": "48a7abb08f2aa8fd67ccf457999f467f5e6e6c24", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2074d80a607e13d3e18b550ae66e7c3be5135d4a", "patch": "@@ -10138,22 +10138,23 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<shift_insn><mode>3<mask_name>\"\n-  [(set (match_operand:VI48_AVX2 0 \"register_operand\" \"=x,v\")\n+  [(set (match_operand:VI48_AVX2 0 \"register_operand\" \"=x,x,v\")\n \t(any_lshift:VI48_AVX2\n-\t  (match_operand:VI48_AVX2 1 \"register_operand\" \"0,v\")\n-\t  (match_operand:SI 2 \"nonmemory_operand\" \"xN,vN\")))]\n+\t  (match_operand:VI48_AVX2 1 \"register_operand\" \"0,x,v\")\n+\t  (match_operand:SI 2 \"nonmemory_operand\" \"xN,xN,vN\")))]\n   \"TARGET_SSE2 && <mask_mode512bit_condition>\"\n   \"@\n    p<vshift><ssemodesuffix>\\t{%2, %0|%0, %2}\n-   vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n+   vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\n+   vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"  \n+  [(set_attr \"isa\" \"noavx,avx,avx512bw\")\n    (set_attr \"type\" \"sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n        (const_string \"1\")\n        (const_string \"0\")))\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix_data16\" \"1,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<shift_insn><mode>3<mask_name>\""}, {"sha": "c881c000dcff47a945a57c365cfe36966a7d61e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2074d80a607e13d3e18b550ae66e7c3be5135d4a", "patch": "@@ -1,3 +1,8 @@\n+2016-04-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/70728\n+\t* gcc.target/i386/pr70728.c: New test.\n+\n 2016-04-21  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/70747"}, {"sha": "89c140dde200be2a9dc6bff1998f9c7db7739151", "filename": "gcc/testsuite/gcc.target/i386/pr70728.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70728.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2074d80a607e13d3e18b550ae66e7c3be5135d4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70728.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70728.c?ref=2074d80a607e13d3e18b550ae66e7c3be5135d4a", "patch": "@@ -0,0 +1,30 @@\n+/* PR target/70728 */\n+/* { dg-do compile } */\n+/* { dg-options \"-S -Ofast -march=knl\" } */\n+\n+short a = -15726;\n+int b = (int)-7003557328690506537LL;\n+short c[5][5][3][6];\n+char d[2][5][3][2][4];\n+void fn1() {\n+  for (int e = 0; e < 3; e = e + 1)\n+    for (int f = 0; f < 2; f = f + 1)\n+      for (int g = 0; g < 4; g = g + 1)\n+        for (int h = 0; h < 3; h = h + 1)\n+          for (int i = 0; i < 2; i = i + 1)\n+            for (int j = 0; j < 4; j = j + 1)\n+              d[f][g][h][i][j] =\n+                  7 << (1236110361944357083 >> a + 15728) - 309027590486089270 >>\n+                  (c[e][f][h][j] + 2147483647 << ~b - 7003557328690506536) -\n+                      2147480981;\n+}\n+int main() {\n+  for (int k = 0; k < 5; ++k)\n+    for (int l = 0; l < 5; ++l)\n+      for (int m = 0; m < 3; ++m)\n+        for (int n = 0; n < 4; ++n)\n+          c[k][l][m][n] = -2639;\n+  fn1();\n+}\n+\n+/* { dg-final { scan-assembler-not \"sll\\[ \\\\t\\]+\\[^\\n\\]*%\\.mm(?:1\\[6-9\\]|\\[2-3\\]\\[0-9\\])\" } } */"}]}