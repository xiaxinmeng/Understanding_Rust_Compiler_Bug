{"sha": "27835a8a5c5105350bd88cdb8eaa391638622264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc4MzVhOGE1YzUxMDUzNTBiZDg4Y2RiOGVhYTM5MTYzODYyMjI2NA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-11-03T21:16:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-11-03T21:16:36Z"}, "message": "Set use_avx256_p if 256bit AVX register is used in vector move.\n\ngcc/\n\n2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/46295\n\t* config/i386/i386.c (ix86_expand_vector_move): Set use_avx256_p\n\tif 256bit AVX register is used.\n\ngcc/testsuite/\n\n2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/46295\n\t* gcc.target/i386/pr46295.c: New.\n\nFrom-SVN: r166277", "tree": {"sha": "1f335722cb977dc011454ea6940a31930e4d369f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f335722cb977dc011454ea6940a31930e4d369f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27835a8a5c5105350bd88cdb8eaa391638622264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27835a8a5c5105350bd88cdb8eaa391638622264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27835a8a5c5105350bd88cdb8eaa391638622264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27835a8a5c5105350bd88cdb8eaa391638622264/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "576e00858c8b8d6d9477fd44e8b210ab25b6de69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576e00858c8b8d6d9477fd44e8b210ab25b6de69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576e00858c8b8d6d9477fd44e8b210ab25b6de69"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "87d9bc4248252f60e7b97632190dda4eac5a96a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27835a8a5c5105350bd88cdb8eaa391638622264", "patch": "@@ -1,3 +1,9 @@\n+2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/46295\n+\t* config/i386/i386.c (ix86_expand_vector_move): Set use_avx256_p\n+\tif 256bit AVX register is used.\n+\n 2010-11-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_minmax): Add support to use"}, {"sha": "3558899c5893ada736e54363a3964a12b81991da", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=27835a8a5c5105350bd88cdb8eaa391638622264", "patch": "@@ -15144,6 +15144,9 @@ ix86_expand_vector_move (enum machine_mode mode, rtx operands[])\n   rtx op0 = operands[0], op1 = operands[1];\n   unsigned int align = GET_MODE_ALIGNMENT (mode);\n \n+  if (use_avx256_p (mode, NULL_TREE))\n+    cfun->machine->use_avx256_p = true;\n+\n   /* Force constants other than zero into memory.  We do not know how\n      the instructions used to build constants modify the upper 64 bits\n      of the register, once we have that information we may be able"}, {"sha": "a602ecf6339741f3ef043490f0fdc7b627c68ad9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27835a8a5c5105350bd88cdb8eaa391638622264", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/46295\n+\t* gcc.target/i386/pr46295.c: New.\n+\n 2010-11-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/vsx-sfminmax.c: New test for using double"}, {"sha": "219f34e8fe9071ab6eba2be5b3ea14a0f7d82189", "filename": "gcc/testsuite/gcc.target/i386/pr46295.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46295.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27835a8a5c5105350bd88cdb8eaa391638622264/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46295.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46295.c?ref=27835a8a5c5105350bd88cdb8eaa391638622264", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx -mtune=generic -dp\" } */\n+\n+typedef double EXPRESS[5];\n+void Parse_Rel_Factor (EXPRESS Express,int *Terms);\n+void Parse_Vector ()\n+{\n+   EXPRESS Express;\n+   int Terms;\n+   for (Terms = 0; Terms < 5; Terms++)\n+     Express[Terms] = 0.0;\n+   Parse_Rel_Factor(Express,&Terms);\n+}\n+\n+/* { dg-final { scan-assembler-times \"avx_vzeroupper\" 1 } } */"}]}