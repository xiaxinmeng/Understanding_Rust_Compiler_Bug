{"sha": "3599ecb6a0145a428def5314d2d67d2e5a88f3c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5OWVjYjZhMDE0NWE0MjhkZWY1MzE0ZDJkNjdkMmU1YTg4ZjNjNA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-02-19T18:06:06Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-02-19T18:06:06Z"}, "message": "PR c/97172 - ICE: tree code 'ssa_name' is not supported in LTO streams\n\ngcc/ChangeLog:\n\n\tPR c/97172\n\t* attribs.c (init_attr_rdwr_indices): Guard vblist use.\n\t(attr_access::free_lang_data): Remove a spurious test.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/97172\n\t* gcc.dg/pr97172.c: Add test cases.", "tree": {"sha": "903e8efceefbc24211e6628b6e70b19fc970a41b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/903e8efceefbc24211e6628b6e70b19fc970a41b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3599ecb6a0145a428def5314d2d67d2e5a88f3c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3599ecb6a0145a428def5314d2d67d2e5a88f3c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3599ecb6a0145a428def5314d2d67d2e5a88f3c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3599ecb6a0145a428def5314d2d67d2e5a88f3c4/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfe83ae38e871a2e4205ce63fd9d3247dff412bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe83ae38e871a2e4205ce63fd9d3247dff412bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe83ae38e871a2e4205ce63fd9d3247dff412bd"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "60933d20810d9aeb43686ca2d74e2aad59638cee", "filename": "gcc/attribs.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3599ecb6a0145a428def5314d2d67d2e5a88f3c4/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3599ecb6a0145a428def5314d2d67d2e5a88f3c4/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=3599ecb6a0145a428def5314d2d67d2e5a88f3c4", "patch": "@@ -2124,7 +2124,7 @@ init_attr_rdwr_indices (rdwr_map *rwm, tree attrs)\n \t\t  if (*m == '$')\n \t\t    {\n \t\t      ++m;\n-\t\t      if (!acc.size)\n+\t\t      if (!acc.size && vblist)\n \t\t\t{\n \t\t\t  /* Extract the list of VLA bounds for the current\n \t\t\t     parameter, store it in ACC.SIZE, and advance\n@@ -2252,10 +2252,6 @@ attr_access::free_lang_data (tree attrs)\n       if (!vblist)\n \tcontinue;\n \n-      vblist = TREE_VALUE (vblist);\n-      if (!vblist)\n-\tcontinue;\n-\n       for (vblist = TREE_VALUE (vblist); vblist; vblist = TREE_CHAIN (vblist))\n \t{\n \t  tree *pvbnd = &TREE_VALUE (vblist);"}, {"sha": "8ae6342db7f9efd756c85eeb9068dfc81915039c", "filename": "gcc/testsuite/gcc.dg/pr97172.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3599ecb6a0145a428def5314d2d67d2e5a88f3c4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97172.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3599ecb6a0145a428def5314d2d67d2e5a88f3c4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97172.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97172.c?ref=3599ecb6a0145a428def5314d2d67d2e5a88f3c4", "patch": "@@ -30,21 +30,52 @@ void fnp1_np1_np1 (int a[n + 1][n + 1][n + 1]);\n \n void gn (int a[n]) { fn (a); }\n void gnp1 (int a[n + 1]) { fnp1 (a); }\n+void gnd2p1 (int a[n / 2 + 1]) { fnp1 (a); }\n \n void gx_n (int a[][n]) { fx_n (a); }\n void gx_np1 (int a[][n + 1]) { fx_np1 (a); }\n+void gx_nd2p1 (int a[][n / 2 + 1]) { fx_np1 (a); }\n \n void g2_n (int a[2][n]) { f2_n (a); }\n void g2_np1 (int a[2][n + 1]) { f2_np1 (a); }\n+void g2_nd2p1 (int a[2][n / 2 + 1]) { f2_np1 (a); }\n \n void gn_3 (int a[n][3]) { fn_3 (a); }\n void gnp1_3 (int a[n + 1][3]) { fnp1_3 (a); }\n+void gnd2p1_3 (int a[n / 2 + 1][3]) { fnp1_3 (a); }\n \n void gn_n (int a[n][n]) { fn_n (a); }\n void gn_np1 (int a[n][n + 1]) { fn_np1 (a); }\n void gnp1_np1 (int a[n + 1][n + 1]) { fnp1_np1 (a); }\n+void gnd2p1_nd2p1 (int a[n / 2 + 1][n / 2 + 1]) { fnp1_np1 (a); }\n \n void gn_n_n (int a[n][n][n]) { fn_n_n (a); }\n void gn_n_np1 (int a[n][n][n + 1]) { fn_n_np1 (a); }\n void gn_np1_np1 (int a[n][n + 1][n + 1]) { fn_np1_np1 (a); }\n void gnp1_np1_np1 (int a[n + 1][n + 1][n + 1]) { fnp1_np1_np1 (a); }\n+void gnd2p1_nd2p1_nd2p1 (int a[n / 2 + 1][n / 2 + 1][n / 2 + 1])\n+{ fnp1_np1_np1 (a); }\n+\n+\n+void fna3_1 (int n,\n+\t     int a[n / 2 + 1],\n+\t     int b[n / 2 + 1],\n+\t     int c[n / 2 + 1]);\n+\n+void gna3_1 (int n,\n+\t     int a[n / 2 + 1],\n+\t     int b[n / 2 + 1],\n+\t     int c[n / 2 + 1]) { fna3_1 (n, a, b, c); }\n+\n+void fna3_2_3_4 (int n,\n+\t\t int a[n / 2 + 1][n / 2 + 2],\n+\t\t int b[n / 2 + 1][n / 2 + 2][n / 2 + 3],\n+\t\t int c[n / 2 + 1][n / 2 + 2][n / 2 + 3][n / 2 + 4]);\n+\n+void gna3_2_3_4 (int n,\n+\t\t int a[n / 2 + 1][n / 2 + 2],\n+\t\t int b[n / 2 + 1][n / 2 + 2][n / 2 + 3],\n+\t\t int c[n / 2 + 1][n / 2 + 2][n / 2 + 3][n / 2 + 4])\n+{\n+  fna3_2_3_4 (n, a, b, c);\n+}"}]}