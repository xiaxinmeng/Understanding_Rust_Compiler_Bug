{"sha": "4f64abad80d072773ac390c9a93470dd57da4c31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY2NGFiYWQ4MGQwNzI3NzNhYzM5MGM5YTkzNDcwZGQ1N2RhNGMzMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T09:54:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T09:54:58Z"}, "message": "[multiple changes]\n\n2009-04-10  Robert Dewar  <dewar@adacore.com>\n\n\t* make.adb: Add comment.\n\tMinor reformatting\n\n2009-04-10  Nicolas Setton  <setton@adacore.com>\n\n\t* s-osprim-darwin.adb: New file.\n\n\t* s-osinte-darwin.adb, s-osinte-darwin.ads: Fix binding to timespec.\n\n2009-04-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads: Add comment clarifying alignment requirement for Fd_Set\n\nFrom-SVN: r145880", "tree": {"sha": "ca016515e2c39953802eccef1154942b0439e346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca016515e2c39953802eccef1154942b0439e346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f64abad80d072773ac390c9a93470dd57da4c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f64abad80d072773ac390c9a93470dd57da4c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f64abad80d072773ac390c9a93470dd57da4c31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f64abad80d072773ac390c9a93470dd57da4c31/comments", "author": null, "committer": null, "parents": [{"sha": "4dadda8fb0ca2ba78608c3e86afcb2d12d5f7f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dadda8fb0ca2ba78608c3e86afcb2d12d5f7f25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dadda8fb0ca2ba78608c3e86afcb2d12d5f7f25"}], "stats": {"total": 198, "additions": 194, "deletions": 4}, "files": [{"sha": "c8a1785e3b0d4d3e2f8aab05530881cb17e1b112", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4f64abad80d072773ac390c9a93470dd57da4c31", "patch": "@@ -1,3 +1,18 @@\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* make.adb: Add comment.\n+\tMinor reformatting\n+\n+2009-04-10  Nicolas Setton  <setton@adacore.com>\n+\n+\t* s-osprim-darwin.adb: New file.\n+\n+\t* s-osinte-darwin.adb, s-osinte-darwin.ads: Fix binding to timespec.\n+\n+2009-04-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads: Add comment clarifying alignment requirement for Fd_Set\n+\n 2009-04-09  Nick Clifton  <nickc@redhat.com>\n \n \t* adadecode.h: Change copyright header to refer to version"}, {"sha": "b730065cc69f4f3968a3433903c320dc2c3b19df", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=4f64abad80d072773ac390c9a93470dd57da4c31", "patch": "@@ -1096,6 +1096,9 @@ private\n    type Fd_Set is\n      new System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_fd_set);\n    for Fd_Set'Alignment use Interfaces.C.long'Alignment;\n+   --  Set conservative alignment so that our Fd_Sets are always adequately\n+   --  aligned for the underlying data type (which is implementation defined\n+   --  and may be an array of C long integers).\n \n    type Fd_Set_Access is access all Fd_Set;\n    pragma Convention (C, Fd_Set_Access);"}, {"sha": "ca1b98041a1329d9be58d8ab7aa44fe0ad4da35a", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=4f64abad80d072773ac390c9a93470dd57da4c31", "patch": "@@ -6451,6 +6451,13 @@ package body Make is\n                      then\n                         Skip := True;\n \n+                     --  Here we capture and duplicate the linker argument. We\n+                     --  need to do the duplication since the arguments will\n+                     --  get normalized. Not doing so will result in calling\n+                     --  normalized two times for the same set of arguments if\n+                     --  gnatmake is passed multiple mains. This can result in\n+                     --  the wrong argument being passed to the linker.\n+\n                      else\n                         Last_Arg := Last_Arg + 1;\n                         Args (Last_Arg) :="}, {"sha": "904e910e762cbf1b820fa60906988dd8af183e9b", "filename": "gcc/ada/s-osinte-darwin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fs-osinte-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fs-osinte-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.adb?ref=4f64abad80d072773ac390c9a93470dd57da4c31", "patch": "@@ -85,7 +85,7 @@ package body System.OS_Interface is\n       end if;\n \n       return timespec'(tv_sec => S,\n-        tv_nsec => int32_t (Long_Long_Integer (F * 10#1#E9)));\n+        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n    ----------------"}, {"sha": "f8c67117c79e9db3df2dce295b1be863aa0c1f56", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=4f64abad80d072773ac390c9a93470dd57da4c31", "patch": "@@ -517,7 +517,7 @@ private\n \n    type timespec is record\n       tv_sec  : time_t;\n-      tv_nsec : int32_t;\n+      tv_nsec : long;\n    end record;\n    pragma Convention (C, timespec);\n \n@@ -565,8 +565,6 @@ private\n    --\n    type pthread_t is new System.Address;\n \n-   type pthread_lock_t is new long;\n-\n    type pthread_attr_t is record\n       sig    : long;\n       opaque : padding (1 .. System.OS_Constants.PTHREAD_ATTR_SIZE);"}, {"sha": "2425cf6e6d0e7a6652d0fefa07d4061e74e61633", "filename": "gcc/ada/s-osprim-darwin.adb", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fs-osprim-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64abad80d072773ac390c9a93470dd57da4c31/gcc%2Fada%2Fs-osprim-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-darwin.adb?ref=4f64abad80d072773ac390c9a93470dd57da4c31", "patch": "@@ -0,0 +1,167 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n+--                                                                          --\n+--                  S Y S T E M . O S _ P R I M I T I V E S                 --\n+--                                                                          --\n+--                                  B o d y                                 --\n+--                                                                          --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This version is for darwin\n+\n+package body System.OS_Primitives is\n+\n+   --  ??? These definitions are duplicated from System.OS_Interface\n+   --  because we don't want to depend on any package. Consider removing\n+   --  these declarations in System.OS_Interface and move these ones in\n+   --  the spec.\n+\n+   type struct_timezone is record\n+      tz_minuteswest  : Integer;\n+      tz_dsttime   : Integer;\n+   end record;\n+   pragma Convention (C, struct_timezone);\n+   type struct_timezone_ptr is access all struct_timezone;\n+\n+   type time_t is new Long_Integer;\n+\n+   type struct_timeval is record\n+      tv_sec       : time_t;\n+      tv_usec      : Integer;\n+   end record;\n+   pragma Convention (C, struct_timeval);\n+\n+   function gettimeofday\n+     (tv : not null access struct_timeval;\n+      tz : struct_timezone_ptr) return Integer;\n+   pragma Import (C, gettimeofday, \"gettimeofday\");\n+\n+   type timespec is record\n+      tv_sec  : time_t;\n+      tv_nsec : Long_Integer;\n+   end record;\n+   pragma Convention (C, timespec);\n+\n+   function nanosleep (rqtp, rmtp : not null access timespec) return Integer;\n+   pragma Import (C, nanosleep, \"nanosleep\");\n+\n+   -----------\n+   -- Clock --\n+   -----------\n+\n+   function Clock return Duration is\n+      TV     : aliased struct_timeval;\n+\n+      Result : Integer;\n+      pragma Unreferenced (Result);\n+\n+   begin\n+      Result := gettimeofday (TV'Access, null);\n+      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n+   end Clock;\n+\n+   ---------------------\n+   -- Monotonic_Clock --\n+   ---------------------\n+\n+   function Monotonic_Clock return Duration renames Clock;\n+\n+   -----------------\n+   -- To_Timespec --\n+   -----------------\n+\n+   function To_Timespec (D : Duration) return timespec;\n+\n+   function To_Timespec (D : Duration) return timespec is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return\n+        timespec'(tv_sec  => S,\n+                  tv_nsec => Long_Integer (Long_Long_Integer (F * 10#1#E9)));\n+   end To_Timespec;\n+\n+   -----------------\n+   -- Timed_Delay --\n+   -----------------\n+\n+   procedure Timed_Delay\n+     (Time : Duration;\n+      Mode : Integer)\n+   is\n+      Request    : aliased timespec;\n+      Remaind    : aliased timespec;\n+      Rel_Time   : Duration;\n+      Abs_Time   : Duration;\n+      Base_Time  : constant Duration := Clock;\n+      Check_Time : Duration := Base_Time;\n+\n+      Result : Integer;\n+      pragma Unreferenced (Result);\n+\n+   begin\n+      if Mode = Relative then\n+         Rel_Time := Time;\n+         Abs_Time := Time + Check_Time;\n+      else\n+         Rel_Time := Time - Check_Time;\n+         Abs_Time := Time;\n+      end if;\n+\n+      if Rel_Time > 0.0 then\n+         loop\n+            Request := To_Timespec (Rel_Time);\n+            Result := nanosleep (Request'Access, Remaind'Access);\n+            Check_Time := Clock;\n+\n+            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n+\n+            Rel_Time := Abs_Time - Check_Time;\n+         end loop;\n+      end if;\n+   end Timed_Delay;\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize is\n+   begin\n+      null;\n+   end Initialize;\n+\n+end System.OS_Primitives;"}]}