{"sha": "2473f28d79c480192aba783a08de8b0285c08213", "node_id": "C_kwDOANBUbNoAKDI0NzNmMjhkNzljNDgwMTkyYWJhNzgzYTA4ZGU4YjAyODVjMDgyMTM", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-11-16T02:58:17Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-21T10:10:35Z"}, "message": "ada: Adjust recent change for returns involving function calls\n\ngcc/ada/\n\n\t* gcc-interface/decl.cc (gnat_to_gnu_entity) <E_Constant>: Revert\n\tlatest change.\n\t* gcc-interface/trans.cc (gnat_to_gnu) <N_Object_Declaration>:\n\tTweak latest change.", "tree": {"sha": "3ab3e312c54782f72ac38e0fb6e578c2cc80440b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ab3e312c54782f72ac38e0fb6e578c2cc80440b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2473f28d79c480192aba783a08de8b0285c08213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2473f28d79c480192aba783a08de8b0285c08213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2473f28d79c480192aba783a08de8b0285c08213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2473f28d79c480192aba783a08de8b0285c08213/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a186dd158decad693bd18c95962a9ea61022166c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a186dd158decad693bd18c95962a9ea61022166c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a186dd158decad693bd18c95962a9ea61022166c"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "c383f9b218a921e52354ecee181c18995c8bcd3f", "filename": "gcc/ada/gcc-interface/decl.cc", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473f28d79c480192aba783a08de8b0285c08213/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473f28d79c480192aba783a08de8b0285c08213/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.cc?ref=2473f28d79c480192aba783a08de8b0285c08213", "patch": "@@ -637,17 +637,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n       break;\n \n     case E_Constant:\n-      /* If this is a constant related to a return in a function returning by\n-\t invisible reference without expression, get the return object.  */\n-      if (Is_Related_To_Func_Return (gnat_entity)\n-\t  && current_function_decl\n-\t  && TREE_ADDRESSABLE (TREE_TYPE (current_function_decl))\n-\t  && !gnu_expr)\n-\t{\n-\t  gnu_decl = DECL_RESULT (current_function_decl);\n-\t  break;\n-\t}\n-\n       /* Ignore constant definitions already marked with the error node.  See\n \t the N_Object_Declaration case of gnat_to_gnu for the rationale.  */\n       if (definition"}, {"sha": "1cd621a9377a33c28a38dfc6f7e4a7ebcb768a54", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473f28d79c480192aba783a08de8b0285c08213/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473f28d79c480192aba783a08de8b0285c08213/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=2473f28d79c480192aba783a08de8b0285c08213", "patch": "@@ -6482,9 +6482,10 @@ gnat_to_gnu (Node_Id gnat_node)\n \n \t then elide the temporary by forwarding the return object to Func:\n \n+\t   result_type *Rnn = (result_type *) <retval>;\n \t   *<retval> = Func (); [return slot optimization]\n \t   [...]\n-\t   return <retval>;\n+\t   return Rnn;\n \n \t That's necessary if the result type needs finalization because the\n \t temporary would never be adjusted as Expand_Simple_Function_Return\n@@ -6496,8 +6497,12 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  && current_function_decl\n \t  && TREE_ADDRESSABLE (TREE_TYPE (current_function_decl)))\n \t{\n-\t  gnu_result = gnat_to_gnu_entity (gnat_temp, NULL_TREE, true);\n-\t  gnu_result = build_unary_op (INDIRECT_REF, NULL_TREE, gnu_result);\n+\t  gnat_to_gnu_entity (gnat_temp,\n+\t\t\t      DECL_RESULT (current_function_decl),\n+\t\t\t      true);\n+\t  gnu_result\n+\t    = build_unary_op (INDIRECT_REF, NULL_TREE,\n+\t\t\t      DECL_RESULT (current_function_decl));\n \t  gnu_result\n \t    = Call_to_gnu (Prefix (Expression (gnat_node)),\n \t\t\t   &gnu_result_type, gnu_result,"}]}