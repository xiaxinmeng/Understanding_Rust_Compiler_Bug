{"sha": "92002f50bdb0358ddacacddd2fb8713489df6dd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIwMDJmNTBiZGIwMzU4ZGRhY2FjZGRkMmZiODcxMzQ4OWRmNmRkNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-11-06T23:22:05Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2004-11-06T23:22:05Z"}, "message": "URLClassLoader.java (URLClassLoader): Now package-private.\n\n\t* java/net/URLClassLoader.java (URLClassLoader): Now\n\tpackage-private.\n\t* java/nio/charset/CoderResult.java (CoderResult): Now\n\tpackage-private.\n\t(get): Likewise.\n\t(Cache): Likewise.  Don't synchronize on `this'.\n\t* java/rmi/server/RMIClassLoader.java (MyClassLoader): Now\n\tpackage-private.\n\t* java/util/TimeZone.java (timezones): Now package-private.\n\nFrom-SVN: r90203", "tree": {"sha": "9a0fa8e97e9f83cfdb351e4722e437af907915d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a0fa8e97e9f83cfdb351e4722e437af907915d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92002f50bdb0358ddacacddd2fb8713489df6dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92002f50bdb0358ddacacddd2fb8713489df6dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92002f50bdb0358ddacacddd2fb8713489df6dd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92002f50bdb0358ddacacddd2fb8713489df6dd6/comments", "author": null, "committer": null, "parents": [{"sha": "96859aa4707f4f338d6cd0ceaa47b867e34dd2ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96859aa4707f4f338d6cd0ceaa47b867e34dd2ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96859aa4707f4f338d6cd0ceaa47b867e34dd2ef"}], "stats": {"total": 46, "additions": 28, "deletions": 18}, "files": [{"sha": "3e2c5f2613a3047927f8da1851f00ebd4094e322", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=92002f50bdb0358ddacacddd2fb8713489df6dd6", "patch": "@@ -1,3 +1,15 @@\n+2004-11-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/net/URLClassLoader.java (URLClassLoader): Now\n+\tpackage-private.\n+\t* java/nio/charset/CoderResult.java (CoderResult): Now\n+\tpackage-private.\n+\t(get): Likewise.\n+\t(Cache): Likewise.  Don't synchronize on `this'.\n+\t* java/rmi/server/RMIClassLoader.java (MyClassLoader): Now\n+\tpackage-private.\n+\t* java/util/TimeZone.java (timezones): Now package-private.\n+\n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n \n \t* java/security/Permissions.java (perms): Now package-private."}, {"sha": "c3238e5ccafde583dd6cf607990a7050877d1310", "filename": "libjava/java/net/URLClassLoader.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=92002f50bdb0358ddacacddd2fb8713489df6dd6", "patch": "@@ -1,5 +1,5 @@\n /* URLClassLoader.java --  ClassLoader that loads classes from one or more URLs\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -661,8 +661,9 @@ public URLClassLoader(URL[] urls, ClassLoader parent)\n     addURLs(urls);\n   }\n \n+  // Package-private to avoid a trampoline constructor.\n   /**\n-   * Private constructor used by the static\n+   * Package-private constructor used by the static\n    * <code>newInstance(URL[])</code> method.  Creates an\n    * <code>URLClassLoader</code> with the given parent but without any\n    * <code>URL</code>s yet. This is used to bypass the normal security\n@@ -674,8 +675,7 @@ public URLClassLoader(URL[] urls, ClassLoader parent)\n    *\n    * @param securityContext the security context of the unprivileged code.\n    */\n-  private URLClassLoader(ClassLoader parent,\n-                         AccessControlContext securityContext)\n+  URLClassLoader(ClassLoader parent, AccessControlContext securityContext)\n   {\n     super(parent);\n     this.factory = null;"}, {"sha": "782418342b9a437eb3e930376755c1bf8fd5a406", "filename": "libjava/java/nio/charset/CoderResult.java", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Fnio%2Fcharset%2FCoderResult.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Fnio%2Fcharset%2FCoderResult.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fcharset%2FCoderResult.java?ref=92002f50bdb0358ddacacddd2fb8713489df6dd6", "patch": "@@ -1,5 +1,5 @@\n /* CoderResult.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -82,7 +82,8 @@ protected CoderResult make (int length)\n   private final int type;\n   private final int length;\n \n-  private CoderResult (int type, int length)\n+  // Package-private to avoid a trampoline constructor.\n+  CoderResult (int type, int length)\n   {\n     this.type = type;\n     this.length = length;\n@@ -157,19 +158,14 @@ public static CoderResult unmappableForLength (int length)\n   {\n     private final HashMap cache;\n \n-    private Cache ()\n+    // Package-private to avoid a trampoline constructor.\n+    Cache ()\n     {\n-      // If we didn't synchronize on this, then cache would be initialized\n-      // without holding a lock.  Undefined behavior would occur if the\n-      // first thread to call get(int) was not the same as the one that\n-      // called the constructor.\n-      synchronized (this)\n-        {\n-          cache = new HashMap ();\n-        }\n+      cache = new HashMap ();\n     }\n \n-    private synchronized CoderResult get (int length)\n+    // Package-private to avoid a trampoline.\n+    synchronized CoderResult get (int length)\n     {\n       if (length <= 0)\n         throw new IllegalArgumentException (\"Non-positive length\");"}, {"sha": "006bc4539f8227f3127c8f4746f314f55ed36078", "filename": "libjava/java/rmi/server/RMIClassLoader.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java?ref=92002f50bdb0358ddacacddd2fb8713489df6dd6", "patch": "@@ -57,7 +57,8 @@\n {\n   private static class MyClassLoader extends URLClassLoader\n   {\n-    private MyClassLoader (URL[] urls, ClassLoader parent, String annotation)\n+    // Package-private to avoid a trampoline constructor.\n+    MyClassLoader (URL[] urls, ClassLoader parent, String annotation)\n     {\n       super (urls, parent);\n       this.annotation = annotation;"}, {"sha": "39cdcd3e239d1e1e988e15ce55aeb28bfa9229c1", "filename": "libjava/java/util/TimeZone.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Futil%2FTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92002f50bdb0358ddacacddd2fb8713489df6dd6/libjava%2Fjava%2Futil%2FTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FTimeZone.java?ref=92002f50bdb0358ddacacddd2fb8713489df6dd6", "patch": "@@ -134,7 +134,8 @@ public Object run()\n   /* initialize this static field lazily to overhead if\n    * it is not needed: \n    */\n-  private static synchronized HashMap timezones()\n+  // Package-private to avoid a trampoline.\n+  static synchronized HashMap timezones()\n   {\n     if (timezones0 == null) \n       {"}]}