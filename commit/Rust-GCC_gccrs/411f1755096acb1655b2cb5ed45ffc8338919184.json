{"sha": "411f1755096acb1655b2cb5ed45ffc8338919184", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExZjE3NTUwOTZhY2IxNjU1YjJjYjVlZDQ1ZmZjODMzODkxOTE4NA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2013-11-04T14:39:12Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-11-04T14:39:12Z"}, "message": "vsx.md (*vsx_le_perm_store_<mode> for VSX_D): Replace the define_insn_and_split with a define_insn and two define_splits...\n\n2013-11-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/vsx.md (*vsx_le_perm_store_<mode> for VSX_D):\n\tReplace the define_insn_and_split with a define_insn and two\n\tdefine_splits, with the split after reload re-permuting the source\n\tregister to its original value.\n\t(*vsx_le_perm_store_<mode> for VSX_W): Likewise.\n\t(*vsx_le_perm_store_v8hi): Likewise.\n\t(*vsx_le_perm_store_v16qi): Likewise.\n\nFrom-SVN: r204350", "tree": {"sha": "60f3d10228627c7a17bbf4735814427bfa1e2c54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60f3d10228627c7a17bbf4735814427bfa1e2c54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/411f1755096acb1655b2cb5ed45ffc8338919184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411f1755096acb1655b2cb5ed45ffc8338919184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411f1755096acb1655b2cb5ed45ffc8338919184", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411f1755096acb1655b2cb5ed45ffc8338919184/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c778e59815b583a4dac4438260f70535e7c8164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c778e59815b583a4dac4438260f70535e7c8164", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c778e59815b583a4dac4438260f70535e7c8164"}], "stats": {"total": 187, "additions": 159, "deletions": 28}, "files": [{"sha": "34451e17449562e8f076604d1e99aebc363db894", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411f1755096acb1655b2cb5ed45ffc8338919184/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411f1755096acb1655b2cb5ed45ffc8338919184/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=411f1755096acb1655b2cb5ed45ffc8338919184", "patch": "@@ -1,3 +1,13 @@\n+2013-11-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/vsx.md (*vsx_le_perm_store_<mode> for VSX_D):\n+\tReplace the define_insn_and_split with a define_insn and two\n+\tdefine_splits, with the split after reload re-permuting the source\n+\tregister to its original value.\n+\t(*vsx_le_perm_store_<mode> for VSX_W): Likewise.\n+\t(*vsx_le_perm_store_v8hi): Likewise.\n+\t(*vsx_le_perm_store_v16qi): Likewise.\n+\n 2013-11-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/vector.md (vec_pack_trunc_v2df):  Adjust for"}, {"sha": "8a51afb3c8677e2b11d237d5e1702254b5134eb4", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 149, "deletions": 28, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411f1755096acb1655b2cb5ed45ffc8338919184/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411f1755096acb1655b2cb5ed45ffc8338919184/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=411f1755096acb1655b2cb5ed45ffc8338919184", "patch": "@@ -333,12 +333,18 @@\n   [(set_attr \"type\" \"vecload\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn_and_split \"*vsx_le_perm_store_<mode>\"\n+(define_insn \"*vsx_le_perm_store_<mode>\"\n   [(set (match_operand:VSX_D 0 \"memory_operand\" \"=Z\")\n         (match_operand:VSX_D 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n-  \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n+  [(set_attr \"type\" \"vecstore\")\n+   (set_attr \"length\" \"12\")])\n+\n+(define_split\n+  [(set (match_operand:VSX_D 0 \"memory_operand\" \"\")\n+        (match_operand:VSX_D 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && !reload_completed\"\n   [(set (match_dup 2)\n         (vec_select:<MODE>\n           (match_dup 1)\n@@ -347,21 +353,43 @@\n         (vec_select:<MODE>\n           (match_dup 2)\n           (parallel [(const_int 1) (const_int 0)])))]\n-  \"\n {\n   operands[2] = can_create_pseudo_p () ? gen_reg_rtx_and_attrs (operands[1]) \n                                        : operands[1];\n-}\n-  \"\n-  [(set_attr \"type\" \"vecstore\")\n-   (set_attr \"length\" \"8\")])\n+})\n+\n+;; The post-reload split requires that we re-permute the source\n+;; register in case it is still live.\n+(define_split\n+  [(set (match_operand:VSX_D 0 \"memory_operand\" \"\")\n+        (match_operand:VSX_D 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && reload_completed\"\n+  [(set (match_dup 1)\n+        (vec_select:<MODE>\n+          (match_dup 1)\n+          (parallel [(const_int 1) (const_int 0)])))\n+   (set (match_dup 0)\n+        (vec_select:<MODE>\n+          (match_dup 1)\n+          (parallel [(const_int 1) (const_int 0)])))\n+   (set (match_dup 1)\n+        (vec_select:<MODE>\n+          (match_dup 1)\n+          (parallel [(const_int 1) (const_int 0)])))]\n+  \"\")\n \n-(define_insn_and_split \"*vsx_le_perm_store_<mode>\"\n+(define_insn \"*vsx_le_perm_store_<mode>\"\n   [(set (match_operand:VSX_W 0 \"memory_operand\" \"=Z\")\n         (match_operand:VSX_W 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n-  \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n+  [(set_attr \"type\" \"vecstore\")\n+   (set_attr \"length\" \"12\")])\n+\n+(define_split\n+  [(set (match_operand:VSX_W 0 \"memory_operand\" \"\")\n+        (match_operand:VSX_W 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && !reload_completed\"\n   [(set (match_dup 2)\n         (vec_select:<MODE>\n           (match_dup 1)\n@@ -372,21 +400,46 @@\n           (match_dup 2)\n           (parallel [(const_int 2) (const_int 3)\n \t             (const_int 0) (const_int 1)])))]\n-  \"\n {\n   operands[2] = can_create_pseudo_p () ? gen_reg_rtx_and_attrs (operands[1]) \n                                        : operands[1];\n-}\n-  \"\n-  [(set_attr \"type\" \"vecstore\")\n-   (set_attr \"length\" \"8\")])\n+})\n \n-(define_insn_and_split \"*vsx_le_perm_store_v8hi\"\n+;; The post-reload split requires that we re-permute the source\n+;; register in case it is still live.\n+(define_split\n+  [(set (match_operand:VSX_W 0 \"memory_operand\" \"\")\n+        (match_operand:VSX_W 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && reload_completed\"\n+  [(set (match_dup 1)\n+        (vec_select:<MODE>\n+          (match_dup 1)\n+          (parallel [(const_int 2) (const_int 3)\n+\t             (const_int 0) (const_int 1)])))\n+   (set (match_dup 0)\n+        (vec_select:<MODE>\n+          (match_dup 1)\n+          (parallel [(const_int 2) (const_int 3)\n+\t             (const_int 0) (const_int 1)])))\n+   (set (match_dup 1)\n+        (vec_select:<MODE>\n+          (match_dup 1)\n+          (parallel [(const_int 2) (const_int 3)\n+\t             (const_int 0) (const_int 1)])))]\n+  \"\")\n+\n+(define_insn \"*vsx_le_perm_store_v8hi\"\n   [(set (match_operand:V8HI 0 \"memory_operand\" \"=Z\")\n         (match_operand:V8HI 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n-  \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n+  [(set_attr \"type\" \"vecstore\")\n+   (set_attr \"length\" \"12\")])\n+\n+(define_split\n+  [(set (match_operand:V8HI 0 \"memory_operand\" \"\")\n+        (match_operand:V8HI 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && !reload_completed\"\n   [(set (match_dup 2)\n         (vec_select:V8HI\n           (match_dup 1)\n@@ -401,21 +454,52 @@\n                      (const_int 6) (const_int 7)\n                      (const_int 0) (const_int 1)\n                      (const_int 2) (const_int 3)])))]\n-  \"\n {\n   operands[2] = can_create_pseudo_p () ? gen_reg_rtx_and_attrs (operands[1]) \n                                        : operands[1];\n-}\n-  \"\n-  [(set_attr \"type\" \"vecstore\")\n-   (set_attr \"length\" \"8\")])\n+})\n \n-(define_insn_and_split \"*vsx_le_perm_store_v16qi\"\n+;; The post-reload split requires that we re-permute the source\n+;; register in case it is still live.\n+(define_split\n+  [(set (match_operand:V8HI 0 \"memory_operand\" \"\")\n+        (match_operand:V8HI 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && reload_completed\"\n+  [(set (match_dup 1)\n+        (vec_select:V8HI\n+          (match_dup 1)\n+          (parallel [(const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)\n+                     (const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)])))\n+   (set (match_dup 0)\n+        (vec_select:V8HI\n+          (match_dup 1)\n+          (parallel [(const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)\n+                     (const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)])))\n+   (set (match_dup 1)\n+        (vec_select:V8HI\n+          (match_dup 1)\n+          (parallel [(const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)\n+                     (const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)])))]\n+  \"\")\n+\n+(define_insn \"*vsx_le_perm_store_v16qi\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"=Z\")\n         (match_operand:V16QI 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n-  \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n+  [(set_attr \"type\" \"vecstore\")\n+   (set_attr \"length\" \"12\")])\n+\n+(define_split\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"\")\n+        (match_operand:V16QI 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && !reload_completed\"\n   [(set (match_dup 2)\n         (vec_select:V16QI\n           (match_dup 1)\n@@ -438,14 +522,51 @@\n                      (const_int 2) (const_int 3)\n                      (const_int 4) (const_int 5)\n                      (const_int 6) (const_int 7)])))]\n-  \"\n {\n   operands[2] = can_create_pseudo_p () ? gen_reg_rtx_and_attrs (operands[1]) \n                                        : operands[1];\n-}\n-  \"\n-  [(set_attr \"type\" \"vecstore\")\n-   (set_attr \"length\" \"8\")])\n+})\n+\n+;; The post-reload split requires that we re-permute the source\n+;; register in case it is still live.\n+(define_split\n+  [(set (match_operand:V16QI 0 \"memory_operand\" \"\")\n+        (match_operand:V16QI 1 \"vsx_register_operand\" \"\"))]\n+  \"!BYTES_BIG_ENDIAN && TARGET_VSX && reload_completed\"\n+  [(set (match_dup 1)\n+        (vec_select:V16QI\n+          (match_dup 1)\n+          (parallel [(const_int 8) (const_int 9)\n+                     (const_int 10) (const_int 11)\n+                     (const_int 12) (const_int 13)\n+                     (const_int 14) (const_int 15)\n+                     (const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)\n+                     (const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)])))\n+   (set (match_dup 0)\n+        (vec_select:V16QI\n+          (match_dup 1)\n+          (parallel [(const_int 8) (const_int 9)\n+                     (const_int 10) (const_int 11)\n+                     (const_int 12) (const_int 13)\n+                     (const_int 14) (const_int 15)\n+                     (const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)\n+                     (const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)])))\n+   (set (match_dup 1)\n+        (vec_select:V16QI\n+          (match_dup 1)\n+          (parallel [(const_int 8) (const_int 9)\n+                     (const_int 10) (const_int 11)\n+                     (const_int 12) (const_int 13)\n+                     (const_int 14) (const_int 15)\n+                     (const_int 0) (const_int 1)\n+                     (const_int 2) (const_int 3)\n+                     (const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)])))]\n+  \"\")\n \n \n (define_insn \"*vsx_mov<mode>\""}]}