{"sha": "1bcb4c4faa4bd6b1c917c75b100d618faf9e628c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJjYjRjNGZhYTRiZDZiMWM5MTdjNzViMTAwZDYxOGZhZjllNjI4Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-02T07:37:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-02T07:37:10Z"}, "message": "[LRA] Don't make eliminable registers live (PR91957)\n\nOne effect of https://gcc.gnu.org/ml/gcc-patches/2019-09/msg00802.html\nwas to strengthen the sanity check in lra_assigns so that it checks\nwhether reg_renumber is consistent with the whole conflict set.\nThis duly tripped on csky for a pseudo that had been allocated\nto the eliminated frame pointer.  (csky doesn't have a separate\nhard frame pointer.)\n\nlra-lives uses:\n\n/* Set of hard regs (except eliminable ones) currently live.  */\nstatic HARD_REG_SET hard_regs_live;\n\nto track the set of live directly-referenced hard registers, and it\ncorrectly implements the exclusion when setting up the initial set:\n\n  hard_regs_live &= ~eliminable_regset;\n\nBut later calls to make_hard_regno_live and make_hard_regno_dead\nwould process eliminable registers like other registers, recording\nconflicts for them and potentially making them live.  (Note that\nafter r266086, make_hard_regno_dead adds conflicts for registers\nthat are already marked dead.)  I think this would have had the\neffect of pessimising targets without a separate hard frame pointer.\n\n2019-10-02  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR middle-end/91957\n\t* lra-lives.c (make_hard_regno_dead): Don't record conflicts for\n\teliminable registers.\n\t(make_hard_regno_live): Likewise, and don't make them live.\n\nFrom-SVN: r276440", "tree": {"sha": "d29b20b9358a62cfb213ea3187e21dd34668432f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d29b20b9358a62cfb213ea3187e21dd34668432f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4626a7b3ed64eac59c7905c5d2f997ffd1bedb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4626a7b3ed64eac59c7905c5d2f997ffd1bedb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4626a7b3ed64eac59c7905c5d2f997ffd1bedb2"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "69f5d7153c9f623c54a984e863e15f1038225981", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bcb4c4faa4bd6b1c917c75b100d618faf9e628c", "patch": "@@ -1,3 +1,10 @@\n+2019-10-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/91957\n+\t* lra-lives.c (make_hard_regno_dead): Don't record conflicts for\n+\teliminable registers.\n+\t(make_hard_regno_live): Likewise, and don't make them live.\n+\n 2019-10-01  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-show-locus.c (layout::print_gap_in_line_numbering):"}, {"sha": "1d1525ca2e541c105cbe2ee0254d6e3d1043c04b", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcb4c4faa4bd6b1c917c75b100d618faf9e628c/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=1bcb4c4faa4bd6b1c917c75b100d618faf9e628c", "patch": "@@ -281,7 +281,8 @@ static void\n make_hard_regno_live (int regno)\n {\n   lra_assert (HARD_REGISTER_NUM_P (regno));\n-  if (TEST_HARD_REG_BIT (hard_regs_live, regno))\n+  if (TEST_HARD_REG_BIT (hard_regs_live, regno)\n+      || TEST_HARD_REG_BIT (eliminable_regset, regno))\n     return;\n   SET_HARD_REG_BIT (hard_regs_live, regno);\n   sparseset_set_bit (start_living, regno);\n@@ -295,6 +296,9 @@ make_hard_regno_live (int regno)\n static void\n make_hard_regno_dead (int regno)\n {\n+  if (TEST_HARD_REG_BIT (eliminable_regset, regno))\n+    return;\n+\n   lra_assert (HARD_REGISTER_NUM_P (regno));\n   unsigned int i;\n   EXECUTE_IF_SET_IN_SPARSESET (pseudos_live, i)"}]}