{"sha": "1cb1de7ead03894075ea7392879654d3d968f044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNiMWRlN2VhZDAzODk0MDc1ZWE3MzkyODc5NjU0ZDNkOTY4ZjA0NA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-07-28T04:13:58Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-07-28T04:13:58Z"}, "message": "user.cfg.in, [...]: Change GLIBCPP to GLIBCXX (and explain as needed).\n\n2003-07-28  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/doxygen/user.cfg.in, docs/html/abi.txt, docs/html/debug.html,\n\tdocs/html/test.html, docs/html/17_intro/headers_cc.txt,\n\tdocs/html/17_intro/howto.html, docs/html/ext/howto.html:  Change\n\tGLIBCPP to GLIBCXX (and explain as needed).\n\nFrom-SVN: r69879", "tree": {"sha": "ac0b2c8a8a9b6759a3761f93b2aff51292d26593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac0b2c8a8a9b6759a3761f93b2aff51292d26593"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cb1de7ead03894075ea7392879654d3d968f044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb1de7ead03894075ea7392879654d3d968f044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb1de7ead03894075ea7392879654d3d968f044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb1de7ead03894075ea7392879654d3d968f044/comments", "author": null, "committer": null, "parents": [{"sha": "6dfe0fc9ae4f8cdbe052b786e0f64db176908144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfe0fc9ae4f8cdbe052b786e0f64db176908144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dfe0fc9ae4f8cdbe052b786e0f64db176908144"}], "stats": {"total": 47, "additions": 28, "deletions": 19}, "files": [{"sha": "e64b45fcf3005e27e4569aa363722bb74a91e479", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -1,3 +1,10 @@\n+2003-07-28  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/doxygen/user.cfg.in, docs/html/abi.txt, docs/html/debug.html,\n+\tdocs/html/test.html, docs/html/17_intro/headers_cc.txt,\n+\tdocs/html/17_intro/howto.html, docs/html/ext/howto.html:  Change\n+\tGLIBCPP to GLIBCXX (and explain as needed).\n+\n 2003-07-28  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* README:  Update."}, {"sha": "9911490e84c3a440a71366e94192e4b24c7b3d4d", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -869,13 +869,13 @@ INCLUDE_FILE_PATTERNS  =\n ### The class_requires macros are kludges because SKIP_FUNCTION_MACROS is\n ### completely broken, and the presence of the macros confuses the parser.\n \n-PREDEFINED             = _GLIBCPP_DEPRECATED              \\\n-                         _GLIBCPP_USE_WCHAR_T             \\\n-                         _GLIBCPP_USE_LONG_LONG           \\\n-                         __glibcpp_class_requires=\"//\"    \\\n-                         __glibcpp_class_requires2=\"//\"   \\\n-                         __glibcpp_class_requires3=\"//\"   \\\n-                         __glibcpp_class_requires4=\"//\"\n+PREDEFINED             = _GLIBCXX_DEPRECATED              \\\n+                         _GLIBCXX_USE_WCHAR_T             \\\n+                         _GLIBCXX_USE_LONG_LONG           \\\n+                         __glibcxx_class_requires=\"//\"    \\\n+                         __glibcxx_class_requires2=\"//\"   \\\n+                         __glibcxx_class_requires3=\"//\"   \\\n+                         __glibcxx_class_requires4=\"//\"\n \n # If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then \n # this tag can be used to specify a list of macro names that should be expanded."}, {"sha": "667f2fe235b551ca7d550047847bee60d81968d0", "filename": "libstdc++-v3/docs/html/17_intro/headers_cc.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -75,7 +75,7 @@\n \n // \"C\" headers that might not work if wchar_t support is disabled.\n #include <bits/c++config.h>\n-#if _GLIBCPP_USE_WCHAR_T\n+#if _GLIBCXX_USE_WCHAR_T\n   #include <cwchar>\n   #include <cwctype>\n #endif"}, {"sha": "d1fc584679dfb517ea1540ec5602f8ca07273ee4", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -291,7 +291,8 @@ <h2><a name=\"6\">Preprocessor macros controlling the library</a></h2>\n       <a href=\"../configopts.html\">the configuration step</a>, with the\n       various --enable/--disable choices being translated to #define/#undef).\n    </p>\n-   <p>All library macros begin with <code>_GLIBCPP_</code>.  The fact that\n+   <p>All library macros begin with <code>_GLIBCPP_</code> in earlier\n+      versions, and <code>_GLIBCXX_</code> in later versions.  The fact that\n       these symbols start with a leading underscore should give you a clue\n       that (by default) they aren't meant to be changed by the user.  :-)\n    </p>\n@@ -310,9 +311,10 @@ <h2><a name=\"6\">Preprocessor macros controlling the library</a></h2>\n       The default state of the symbol is listed.  &quot;Configurable&quot;\n       (or &quot;Not configurable&quot;) means that the symbol is initially\n       chosen (or not) based on --enable/--disable options at configure time.\n+      For 3.1 through 3.3, the prefixes are <code>_GLIBCPP_</code>.\n    </p>\n     <dl>\n-    <dt><code>_GLIBCPP_DEPRECATED</code></dt>\n+    <dt><code>_GLIBCXX_DEPRECATED</code></dt>\n     <dd>Undefined by default.  Not configurable.  Turning this on enables\n         older ARM-style iostreams code, and other anachronisms.  This may be\n         useful in updating old C++ programs which no longer meet the\n@@ -331,7 +333,7 @@ <h2><a name=\"6\">Preprocessor macros controlling the library</a></h2>\n         you might try undefining this macro.\n     </dd>\n     -->\n-    <dt><code>_GLIBCPP_CONCEPT_CHECKS</code></dt>\n+    <dt><code>_GLIBCXX_CONCEPT_CHECKS</code></dt>\n     <dd>Undefined by default.  Configurable.  When defined, performs\n         compile-time checking on certain template instantiations to detect\n         violations of the requirements of the standard.  This is described"}, {"sha": "430108885f9dd988018f2707c25b7507fa7dfada", "filename": "libstdc++-v3/docs/html/abi.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -108,8 +108,8 @@ I. What is an ABI? What's covered? What's not?\n     gcc-3.2.x: 102\n \n \n-  - Incremental bumping of a library pre-defined macro,\n-    __GLIBCPP__. This macro is defined as the date the library was\n+  - Incremental bumping of a library pre-defined macro, __GLIBCPP__ or\n+    __GLIBCXX__.  This macro is defined as the date the library was\n     released, in compressed ISO date format, as an unsigned long.\n \n     This macro is defined in the file \"c++config\" in the\n@@ -130,7 +130,7 @@ I. What is an ABI? What's covered? What's not?\n   - Incremental bumping of a library pre-defined macro,\n     _GLIBCPP_VERSION. This macro is defined as the released version of\n     the library, as a string literal. This is only implemented in\n-    gcc-3.1.0 releases and higher.\n+    gcc-3.1.0 releases and higher, and changed to _GLIBCXX_VERSION in 3.4.\n \n     This macro is defined in the file \"c++config\" in the\n     \"libstdc++-v3/include/bits\" directory and is generated\n@@ -200,7 +200,7 @@ I. What is an ABI? What's covered? What's not?\n   --enable-symvers. \n \n   In particular, libstdc++-v3/acinclude.m4 has a macro called\n-  GLIBCPP_ENABLE_SYMVERS that defaults to yes (or the argument passed\n+  GLIBCXX_ENABLE_SYMVERS that defaults to yes (or the argument passed\n   in via --enable-symvers=foo). At that point, the macro attempts to\n   make sure that all the requirement for symbol versioning are in\n   place. For more information, please consult acinclude.m4. "}, {"sha": "dcd035ca04f81d79b08898bf11d476a4989dc1a3", "filename": "libstdc++-v3/docs/html/debug.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -105,7 +105,7 @@ <h3 class=\"left\"><a name=\"mem\">Tips for memory leak hunting</a></h3>\n    there are different kinds of allocation schemes that can be used by\n    <code> std::allocator </code>. For implementation details, see this\n    <a href=\"ext/howto.html#3\"> document</a> and look specifically for\n-   <code>GLIBCPP_FORCE_NEW</code>. \n+   <code>GLIBCXX_FORCE_NEW</code>. \n </p>\n \n <p>In a nutshell, the default allocator used by <code>\n@@ -120,7 +120,7 @@ <h3 class=\"left\"><a name=\"mem\">Tips for memory leak hunting</a></h3>\n    C++ tools: the first that can do this is valgrind 1.0.4, but later\n    versions should work at least as well. Second of all, use a\n    completely unoptimized build to avoid confusing valgrind. Third,\n-   use GLIBCPP_FORCE_NEW to keep extraneous pool allocation noise from\n+   use GLIBCXX_FORCE_NEW to keep extraneous pool allocation noise from\n    cluttering debug information. \n </p>\n "}, {"sha": "83cb50c365eff61d3ac00f3298d7396194f746df", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -414,7 +414,7 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n    <p>\n       If a DR is not listed here, we may simply not have gotten to it yet;\n       feel free to submit a patch.  Search the include/bits and src\n-      directories for appearances of _GLIBCPP_RESOLVE_LIB_DEFECTS for\n+      directories for appearances of _GLIBCXX_RESOLVE_LIB_DEFECTS for\n       examples of style.  Note that we usually do not make changes to the code\n       until an issue has reached <a href=\"lwg-active.html#DR\">DR</a> status.\n    </p>"}, {"sha": "a4140beeb87d8f63891366a97e9d9dd9faa806ea", "filename": "libstdc++-v3/docs/html/test.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1de7ead03894075ea7392879654d3d968f044/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html?ref=1cb1de7ead03894075ea7392879654d3d968f044", "patch": "@@ -451,7 +451,7 @@ <h2><a name=\"check\">Options for running the tests</a></h2>\n      <em>testsuite_wchar_t </em>\n      <p> This file indicates that the host system can run the wchar_t\n      tests, and corresponds to the macro definition <code>\n-     _GLIBCPP_USE_WCHAR_T</code> in the file c++config.h.\n+     _GLIBCXX_USE_WCHAR_T</code> in the file c++config.h.\n      </p>\n      </li>\n     </ul>"}]}