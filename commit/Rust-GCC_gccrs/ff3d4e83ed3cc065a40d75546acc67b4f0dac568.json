{"sha": "ff3d4e83ed3cc065a40d75546acc67b4f0dac568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYzZDRlODNlZDNjYzA2NWE0MGQ3NTU0NmFjYzY3YjRmMGRhYzU2OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-04-12T09:00:27Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-04-12T09:00:27Z"}, "message": "Makefile.in (stage1-start, [...]): Move $(SPECS) to specs in stage dir.\n\n* Makefile.in (stage1-start, stage2-start, stage3-start,\nstage4-start): Move $(SPECS) to specs in stage dir.\n(unstage1 unstage2 unstage3 unstage4): Move specs in stage dir\nback as $(SPECS).\n\nFrom-SVN: r65504", "tree": {"sha": "02f3604b0d9258cf86b12a2ada7679a0b0c9e7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f3604b0d9258cf86b12a2ada7679a0b0c9e7d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff3d4e83ed3cc065a40d75546acc67b4f0dac568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3d4e83ed3cc065a40d75546acc67b4f0dac568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff3d4e83ed3cc065a40d75546acc67b4f0dac568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3d4e83ed3cc065a40d75546acc67b4f0dac568/comments", "author": null, "committer": null, "parents": [{"sha": "9e6ccb985d19dd23786c673dc7f8372e41cceea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6ccb985d19dd23786c673dc7f8372e41cceea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6ccb985d19dd23786c673dc7f8372e41cceea5"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "ccc62c3e516e279f05abe8800e764319bb873db5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3d4e83ed3cc065a40d75546acc67b4f0dac568/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3d4e83ed3cc065a40d75546acc67b4f0dac568/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff3d4e83ed3cc065a40d75546acc67b4f0dac568", "patch": "@@ -1,3 +1,10 @@\n+2003-04-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Makefile.in (stage1-start, stage2-start, stage3-start,\n+\tstage4-start): Move $(SPECS) to specs in stage dir.\n+\t(unstage1 unstage2 unstage3 unstage4): Move specs in stage dir\n+\tback as $(SPECS).\n+\n 2003-04-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* mklibgcc.in (libgcc-stage-start): Move into the stage directory"}, {"sha": "672e0445afb88815209278d9a011f667bc9d53d5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3d4e83ed3cc065a40d75546acc67b4f0dac568/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3d4e83ed3cc065a40d75546acc67b4f0dac568/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ff3d4e83ed3cc065a40d75546acc67b4f0dac568", "patch": "@@ -3545,6 +3545,7 @@ unstage1 unstage2 unstage3 unstage4:\n \trm -f $$stage/ld$(exeext); \\\n \trm -f $$stage/collect-ld$(exeext); \\\n \tif test -d $$stage; then \\\n+\t  mv $$stage/specs $(SPECS) 2>/dev/null || :; \\\n \t  mv $$stage/* . 2>/dev/null; \\\n \t  for i in `cd $$stage; echo *` ; do \\\n \t    if test -d $$stage/$$i; then \\\n@@ -3678,6 +3679,8 @@ stage1-start:\n \t do \\\n \t   if [ -d stage1/$$dir ] ; then true ; else mkdir stage1/$$dir ; fi ; \\\n \t done\n+# If SPECS is overridden, make sure it is `installed' as specs.\n+\t-mv $(SPECS) stage1/specs\n \t-mv $(STAGESTUFF) stage1\n \t-mv intl/*$(objext) stage1/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n@@ -3710,6 +3713,8 @@ stage2-start:\n \t do \\\n \t   if [ -d stage2/$$dir ] ; then true ; else mkdir stage2/$$dir ; fi ; \\\n \t done\n+# If SPECS is overridden, make sure it is `installed' as specs.\n+\t-mv $(SPECS) stage2/specs\n \t-mv $(STAGESTUFF) stage2\n \t-mv intl/*$(objext) stage2/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n@@ -3738,6 +3743,8 @@ stage3-start:\n \t do \\\n \t   if [ -d stage3/$$dir ] ; then true ; else mkdir stage3/$$dir ; fi ; \\\n \t done\n+# If SPECS is overridden, make sure it is `installed' as specs.\n+\t-mv $(SPECS) stage3/specs\n \t-mv $(STAGESTUFF) stage3\n \t-mv intl/*$(objext) stage3/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n@@ -3766,6 +3773,8 @@ stage4-start:\n \t do \\\n \t   if [ -d stage4/$$dir ] ; then true ; else mkdir stage4/$$dir ; fi ; \\\n \t done\n+# If SPECS is overridden, make sure it is `installed' as specs.\n+\t-mv $(SPECS) stage4/specs\n \t-mv $(STAGESTUFF) stage4\n \t-mv intl/*$(objext) stage4/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage"}]}