{"sha": "c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjMWQxMjMwNjkwNmE2MWYzYzBmOWY1OTU2NzIzYTFkMGY0MDdkZA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2003-01-28T22:17:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-01-28T22:17:21Z"}, "message": "m68k.md (tablejump+2): Don't sign extend an address register.\n\n        * config/m68k/m68k.md (tablejump+2): Don't sign extend an address\n        register.\n        * config/m68k/apollo68.h (ASM_RETURN_CASE_JUMP): Likewise.\n        * config/m68k/coff.h (ASM_RETURN_CASE_JUMP): Likewise.\n        * config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Likewise.\n        * config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Likewise.\n        * config/m68k/mot3300.h (ASM_RETURN_CASE_JUMP): Likewise.\n        * config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Likewise.\n        * config/m68k/pbb.h (ASM_RETURN_CASE_JUMP): Likewise.\n\nFrom-SVN: r62030", "tree": {"sha": "a87256b3d8466749e82908bcca67d8f54182767d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a87256b3d8466749e82908bcca67d8f54182767d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d09ef27d4170193aaf12c291b18b8160f2b9bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d09ef27d4170193aaf12c291b18b8160f2b9bb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d09ef27d4170193aaf12c291b18b8160f2b9bb2"}], "stats": {"total": 167, "additions": 117, "deletions": 50}, "files": [{"sha": "8082fcde6a2eca88c7dc4ba9067cfc965b30b0df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -1,3 +1,15 @@\n+2003-01-28  Andreas Schwab  <schwab@suse.de>\n+\n+        * config/m68k/m68k.md (tablejump+2): Don't sign extend an address\n+        register.\n+        * config/m68k/apollo68.h (ASM_RETURN_CASE_JUMP): Likewise.\n+        * config/m68k/coff.h (ASM_RETURN_CASE_JUMP): Likewise.\n+        * config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Likewise.\n+        * config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Likewise.\n+        * config/m68k/mot3300.h (ASM_RETURN_CASE_JUMP): Likewise.\n+        * config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Likewise.\n+        * config/m68k/pbb.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\n 2003-01-28  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* combine.c (nonzero_bits): Fix check for negative divide operands."}, {"sha": "13cb4ae5c5576dbcbabcab13fc35431ab1f8443d", "filename": "gcc/config/m68k/coff.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcoff.h?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    m68k series COFF object files and debugging, version.\n-   Copyright (C) 1994, 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -55,12 +55,17 @@ Boston, MA 02111-1307, USA.  */\n /* config/m68k.md has an explicit reference to the program counter,\n    prefix this by the register prefix.  */\n \n-#define ASM_RETURN_CASE_JUMP \t\t\t\\\n-  do {\t\t\t\t\t\t\\\n-    if (TARGET_5200)\t\t\t\t\\\n-      return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n-    else\t\t\t\t\t\\\n-      return \"jmp %%pc@(2,%0:w)\";\t\t\\\n+#define ASM_RETURN_CASE_JUMP\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_5200)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (ADDRESS_REG_P (operands[0]))\t\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)\n \n /* Here are the new register names.  */"}, {"sha": "7693af1815a2448ac8c8e561e663ca044390a2da", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -194,12 +194,17 @@ Boston, MA 02111-1307, USA.  */\n \n /* Use the default action for outputting the case label.  */\n #undef ASM_OUTPUT_CASE_LABEL\n-#define ASM_RETURN_CASE_JUMP\t\t\t\\\n-  do {\t\t\t\t\t\t\\\n-    if (TARGET_5200)\t\t\t\t\\\n-      return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n-    else\t\t\t\t\t\\\n-      return \"jmp %%pc@(2,%0:w)\";\t\t\\\n+#define ASM_RETURN_CASE_JUMP\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_5200)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (ADDRESS_REG_P (operands[0]))\t\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)\n \n /* This is how to output an assembler line that says to advance the"}, {"sha": "2812cd57c86d107fa67af6caaa434d9b5e359909", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for GNU compiler, Motorola 68000 Version\n-;;  Copyright (C) 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001\n+;;  Copyright (C) 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002\n ;;  Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC.\n@@ -6973,17 +6973,33 @@\n #ifdef SGS\n #ifdef ASM_OUTPUT_CASE_LABEL\n   if (TARGET_5200) \n-    return \\\"ext%.l %0\\;jmp 6(%%pc,%0.l)\\\";\n+    {\n+      if (ADDRESS_REG_P (operands[0]))\n+\treturn \\\"jmp 6(%%pc,%0.l)\\\";\n+      else\n+\treturn \\\"ext%.l %0\\;jmp 6(%%pc,%0.l)\\\";\n+    }\n   else\n     return \\\"jmp 6(%%pc,%0.w)\\\";\n #else\n   if (TARGET_5200)\n     {\n+      if (ADDRESS_REG_P (operands[0]))\n+\t{\n+#ifdef CRDS\n+\t  return \\\"jmp 2(pc,%0.l)\\\";\n+#else\n+\t  return \\\"jmp 2(%%pc,%0.l)\\\";\n+#endif  /* end !CRDS */\n+\t}\n+      else\n+\t{\n #ifdef CRDS\n-      return \\\"ext%.l %0\\;jmp 2(pc,%0.l)\\\";\n+\t  return \\\"ext%.l %0\\;jmp 2(pc,%0.l)\\\";\n #else\n-      return \\\"extl %0\\;jmp 2(%%pc,%0.l)\\\";\n+\t  return \\\"extl %0\\;jmp 2(%%pc,%0.l)\\\";\n #endif  /* end !CRDS */\n+\t}\n     }\n   else\n     {\n@@ -6997,11 +7013,22 @@\n #else /* not SGS */\n   if (TARGET_5200)\n     {\n+      if (ADDRESS_REG_P (operands[0]))\n+\t{\n #ifdef MOTOROLA\n-      return \\\"ext%.l %0\\;jmp (2,pc,%0.l)\\\";\n+\t  return \\\"jmp (2,pc,%0.l)\\\";\n #else\n-      return \\\"extl %0\\;jmp pc@(2,%0:l)\\\";\n+\t  return \\\"jmp pc@(2,%0:l)\\\";\n #endif\n+\t}\n+      else\n+\t{\n+#ifdef MOTOROLA\n+\t  return \\\"ext%.l %0\\;jmp (2,pc,%0.l)\\\";\n+#else\n+\t  return \\\"extl %0\\;jmp pc@(2,%0:l)\\\";\n+#endif\n+\t}\n     }\n   else\n     {"}, {"sha": "e5145c9d70cdd129c71c919b8715b6f364dbe298", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -1,7 +1,7 @@\n /* m68kelf support, derived from m68kv4.h */\n \n /* Target definitions for GNU compiler for mc680x0 running System V.4\n-   Copyright (C) 1991, 1993, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 2000, 2002 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com) and Fred Fish (fnf@cygnus.com).\n \n@@ -73,12 +73,17 @@ Boston, MA 02111-1307, USA.  */\n /* config/m68k.md has an explicit reference to the program counter,\n    prefix this by the register prefix.  */\n \n-#define ASM_RETURN_CASE_JUMP \t\t\t\\\n-  do {\t\t\t\t\t\t\\\n-    if (TARGET_5200)\t\t\t\t\\\n-      return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n-    else\t\t\t\t\t\\\n-      return \"jmp %%pc@(2,%0:w)\";\t\t\\\n+#define ASM_RETURN_CASE_JUMP\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_5200)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (ADDRESS_REG_P (operands[0]))\t\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)\n \n /* How to refer to registers in assembler output."}, {"sha": "abdf1dddad8efc1fb6977ce8b2dd61c5a08edd4e", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    SysV68 Motorola 3300 Delta Series.\n-   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002\n    Free Software Foundation, Inc.\n    Contributed by Abramo and Roberto Bagnara (bagnara@dipisa.di.unipi.it)\n    based on Alex Crain's 3B1 definitions.\n@@ -423,12 +423,17 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_CASE_FETCH(file, labelno, regname)\\\n \tasm_fprintf (file, \"12(%Rpc,%s.\", regname)\n \n-#define ASM_RETURN_CASE_JUMP \\\n-  do {\t\t\t\t\t\t\\\n-    if (TARGET_5200)\t\t\t\t\\\n-      return \"ext%.l %0\\n\\tjmp 8(%%pc,%0.l)\";\t\\\n-    else\t\t\t\t\t\\\n-      return \"jmp 8(%%pc,%0.w)\";\t\t\\\n+#define ASM_RETURN_CASE_JUMP\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_5200)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (ADDRESS_REG_P (operands[0]))\t\t\\\n+\t  return \"jmp 8(%%pc,%0.l)\";\t\t\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  return \"ext%.l %0\\n\\tjmp 8(%%pc,%0.l)\";\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      return \"jmp 8(%%pc,%0.w)\";\t\t\t\\\n   } while (0)\n \t     \n #else /* USE_GAS */"}, {"sha": "7061501305222acef1b0807bbaf92a187d607159", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -11,7 +11,7 @@ This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 1, or (at your option)\n+the Free Software Foundation; either version 2, or (at your option)\n any later version.\n \n GNU CC is distributed in the hope that it will be useful,\n@@ -217,15 +217,18 @@ while (0)\n \n /* Use the default action for outputting the case label.  */\n #undef ASM_OUTPUT_CASE_LABEL\n-#define ASM_RETURN_CASE_JUMP\t\t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_5200)\t\t\t\t\t\t\t\\\n-      return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      return \"jmp %%pc@(2,%0:w)\";\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n+#define ASM_RETURN_CASE_JUMP\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_5200)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (ADDRESS_REG_P (operands[0]))\t\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n+  } while (0)\n \n \n /* This is how to output an assembler line that says to advance the"}, {"sha": "68c8d09ead591ea36880f745840fe693c45cefc9", "filename": "gcc/config/m68k/pbb.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fpbb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c1d12306906a61f3c0f9f5956723a1d0f407dd/gcc%2Fconfig%2Fm68k%2Fpbb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fpbb.h?ref=c1c1d12306906a61f3c0f9f5956723a1d0f407dd", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Citicorp/TTI Unicom PBB version (using GAS with a %-register prefix)\n-   Copyright (C) 1987, 1988, 1990, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1990, 1996, 1997, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -109,12 +109,17 @@ Boston, MA 02111-1307, USA.  */\n       && ! find_equiv_reg (0, get_last_insn (), 0, 0, 0, 8, Pmode))\t\\\n       asm_fprintf (FILE, \"\\tmovl %Rd0,%Ra0\\n\"); } \n \n-#define ASM_RETURN_CASE_JUMP \\\n-  do {\t\t\t\t\t\t\\\n-    if (TARGET_5200)\t\t\t\t\\\n-      return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n-    else\t\t\t\t\t\\\n-      return \"jmp %%pc@(2,%0:w)\";\t\t\\\n+#define ASM_RETURN_CASE_JUMP\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_5200)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (ADDRESS_REG_P (operands[0]))\t\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)\n \n /* Although the gas we use can create .ctor and .dtor sections from N_SETT"}]}