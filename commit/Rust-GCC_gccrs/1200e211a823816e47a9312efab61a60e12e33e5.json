{"sha": "1200e211a823816e47a9312efab61a60e12e33e5", "node_id": "C_kwDOANBUbNoAKDEyMDBlMjExYTgyMzgxNmU0N2E5MzEyZWZhYjYxYTYwZTEyZTMzZTU", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@foss.st.com", "date": "2021-11-10T16:58:08Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@foss.st.com", "date": "2021-11-10T16:58:50Z"}, "message": "arm: Initialize vector costing fields\n\nThe movi, dup and extract costing fields were recently added to struct\nvector_cost_table, but there initialization is missing for the arm\n(aarch32) specific descriptions.\n\nAlthough the arm port does not use these fields (only aarch64 does),\nthis is causing warnings during the build, and even build failures\nwhen using gcc-4.8.5 as host compiler:\n\n/gccsrc/gcc/config/arm/arm.c:1194:1: error: uninitialized const member 'vector_cost_table::movi'\n };\n  ^\n/gccsrc/gcc/config/arm/arm.c:1194:1: warning: missing initializer for member 'vector_cost_table::movi' [-Wmissing-field-initializers]\n/gccsrc/gcc/config/arm/arm.c:1194:1: error: uninitialized const member 'vector_cost_table::dup'\n/gccsrc/gcc/config/arm/arm.c:1194:1: warning: missing initializer for member 'vector_cost_table::dup' [-Wmissing-field-initializers]\n/gccsrc/gcc/config/arm/arm.c:1194:1: error: uninitialized const member 'vector_cost_table::extract'\n/gccsrc/gcc/config/arm/arm.c:1194:1: warning: missing initializer for member 'vector_cost_table::extract' [-Wmissing-field-initializers]\n\nThis patch uses the same initialization values as in aarch64 for\nconsistency:\n+    COSTS_N_INSNS (1),  /* movi.  */\n+    COSTS_N_INSNS (2),  /* dup.  */\n+    COSTS_N_INSNS (2)   /* extract.  */\n\n2021-11-10  Christophe Lyon  <christophe.lyon@foss.st.com>\n\n\tgcc/\n\t* config/arm/arm.c (cortexa9_extra_costs, cortexa8_extra_costs,\n\tcortexa5_extra_costs, cortexa7_extra_costs,\n\tcortexa12_extra_costs, cortexa15_extra_costs, v7m_extra_costs):\n\tInitialize movi, dup and extract costing fields.", "tree": {"sha": "af4f1f3568f467becb3705790bc93d8efd386317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af4f1f3568f467becb3705790bc93d8efd386317"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1200e211a823816e47a9312efab61a60e12e33e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1200e211a823816e47a9312efab61a60e12e33e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1200e211a823816e47a9312efab61a60e12e33e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1200e211a823816e47a9312efab61a60e12e33e5/comments", "author": null, "committer": null, "parents": [{"sha": "b0c83d59f44bf677c8d74acae228acf32719acb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c83d59f44bf677c8d74acae228acf32719acb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c83d59f44bf677c8d74acae228acf32719acb3"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "a5b403eb3e4944d45eb753ed457f6b9fa3bf42a8", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1200e211a823816e47a9312efab61a60e12e33e5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1200e211a823816e47a9312efab61a60e12e33e5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1200e211a823816e47a9312efab61a60e12e33e5", "patch": "@@ -1189,7 +1189,10 @@ const struct cpu_cost_table cortexa9_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n \n@@ -1293,7 +1296,10 @@ const struct cpu_cost_table cortexa8_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n \n@@ -1398,7 +1404,10 @@ const struct cpu_cost_table cortexa5_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n \n@@ -1504,7 +1513,10 @@ const struct cpu_cost_table cortexa7_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n \n@@ -1608,7 +1620,10 @@ const struct cpu_cost_table cortexa12_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n \n@@ -1712,7 +1727,10 @@ const struct cpu_cost_table cortexa15_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n \n@@ -1816,7 +1834,10 @@ const struct cpu_cost_table v7m_extra_costs =\n   /* Vector */\n   {\n     COSTS_N_INSNS (1),\t/* alu.  */\n-    COSTS_N_INSNS (4)\t/* mult.  */\n+    COSTS_N_INSNS (4),\t/* mult.  */\n+    COSTS_N_INSNS (1),\t/* movi.  */\n+    COSTS_N_INSNS (2),\t/* dup.  */\n+    COSTS_N_INSNS (2)\t/* extract.  */\n   }\n };\n "}]}