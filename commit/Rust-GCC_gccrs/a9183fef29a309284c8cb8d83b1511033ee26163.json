{"sha": "a9183fef29a309284c8cb8d83b1511033ee26163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkxODNmZWYyOWEzMDkyODRjOGNiOGQ4M2IxNTExMDMzZWUyNjE2Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-09-03T09:01:14Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-09-03T09:01:14Z"}, "message": "typeck.c (build_indirect_ref): Reject dereference of pointer to void.\n\n\t* typeck.c (build_indirect_ref): Reject dereference of pointer to\n\tvoid.\n\nFrom-SVN: r29081", "tree": {"sha": "6aafe1223fb7cfb65da5fa77884c408857957486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aafe1223fb7cfb65da5fa77884c408857957486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9183fef29a309284c8cb8d83b1511033ee26163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9183fef29a309284c8cb8d83b1511033ee26163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9183fef29a309284c8cb8d83b1511033ee26163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9183fef29a309284c8cb8d83b1511033ee26163/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c5f3e15b070348e7e4ae9151a79419472a19bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5f3e15b070348e7e4ae9151a79419472a19bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5f3e15b070348e7e4ae9151a79419472a19bf4"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "c3904bffea8ba37e0ff2bd97183d3bed5ca3d85b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9183fef29a309284c8cb8d83b1511033ee26163/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9183fef29a309284c8cb8d83b1511033ee26163/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a9183fef29a309284c8cb8d83b1511033ee26163", "patch": "@@ -1,3 +1,8 @@\n+1999-09-03  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* typeck.c (build_indirect_ref): Reject dereference of pointer to\n+\tvoid.\n+\n 1999-09-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (cp_function): Move here, from decl.c."}, {"sha": "b86d82db3b799477d178a88f1d21aa2f3d45443d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9183fef29a309284c8cb8d83b1511033ee26163/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9183fef29a309284c8cb8d83b1511033ee26163/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a9183fef29a309284c8cb8d83b1511033ee26163", "patch": "@@ -2460,7 +2460,14 @@ build_indirect_ref (ptr, errorstring)\n \t types.  */\n       tree t = canonical_type_variant (TREE_TYPE (type));\n \n-      if (TREE_CODE (pointer) == ADDR_EXPR\n+      if (same_type_p (TYPE_MAIN_VARIANT (t), void_type_node))\n+        {\n+          /* A pointer to incomplete type (other than cv void) can be\n+             dereferenced [expr.unary.op]/1  */\n+          cp_error (\"`%T' is not a pointer-to-object type\", type);\n+          return error_mark_node;\n+        }\n+      else if (TREE_CODE (pointer) == ADDR_EXPR\n \t  && !flag_volatile\n \t  && same_type_p (t, TREE_TYPE (TREE_OPERAND (pointer, 0))))\n \t/* The POINTER was something like `&x'.  We simplify `*&x' to"}]}