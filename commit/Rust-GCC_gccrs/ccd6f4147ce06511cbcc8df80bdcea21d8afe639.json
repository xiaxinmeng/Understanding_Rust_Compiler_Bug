{"sha": "ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkNmY0MTQ3Y2UwNjUxMWNiY2M4ZGY4MGJkY2VhMjFkOGFmZTYzOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T12:45:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T12:45:14Z"}, "message": "[multiple changes]\n\n2015-05-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch12.adb, prj.ads, makeutl.ads, sem_ch6.adb, prj-nmsc.adb,\n\tprj-conf.adb, sem_disp.adb: Minor reformatting.\n\n2015-05-22  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb (Parse_Cmd_Line): For native gnatclean, check\n\tfor switch -P and, if found and gprclean is available, invoke\n\tsilently gprclean.\n\t* make.adb (Initialize): For native gnatmake, check for switch -P\n\tand, if found and gprbuild is available, invoke silently gprbuild.\n\n2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch13.adb (Validate_Unchecked_Conversions): Also issue\n\tspecific warning for discrete types when the source is larger\n\tthan the target.\n\nFrom-SVN: r223555", "tree": {"sha": "b16b5d2a728ab8a0162f8e588476afbd69f54938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b16b5d2a728ab8a0162f8e588476afbd69f54938"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/comments", "author": null, "committer": null, "parents": [{"sha": "167b47d9da9a82c0c8f426f1853a961f10322be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167b47d9da9a82c0c8f426f1853a961f10322be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167b47d9da9a82c0c8f426f1853a961f10322be0"}], "stats": {"total": 188, "additions": 159, "deletions": 29}, "files": [{"sha": "bb5f5e73202d982ff5a79ed7628cecd68b1f0bb5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -1,3 +1,22 @@\n+2015-05-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch12.adb, prj.ads, makeutl.ads, sem_ch6.adb, prj-nmsc.adb,\n+\tprj-conf.adb, sem_disp.adb: Minor reformatting.\n+\n+2015-05-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Parse_Cmd_Line): For native gnatclean, check\n+\tfor switch -P and, if found and gprclean is available, invoke\n+\tsilently gprclean.\n+\t* make.adb (Initialize): For native gnatmake, check for switch -P\n+\tand, if found and gprbuild is available, invoke silently gprbuild.\n+\n+2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch13.adb (Validate_Unchecked_Conversions): Also issue\n+\tspecific warning for discrete types when the source is larger\n+\tthan the target.\n+\n 2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* einfo.ads, einfo.adb (Incomplete_Actuals): New attribute of"}, {"sha": "e410c3ba88ae9b5bf33f0c1e3628dec0d23d5ada", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1629,6 +1629,55 @@ package body Clean is\n \n       Check_Version_And_Help (\"GNATCLEAN\", \"2003\");\n \n+      --  First, for native gnatclean, check for switch -P and, if found and\n+      --  gprclean is available, silently invoke gprclean.\n+\n+      Find_Program_Name;\n+\n+      if Name_Buffer (1 .. Name_Len) = \"gnatclean\" then\n+         declare\n+            Call_Gprclean : Boolean := False;\n+\n+         begin\n+            for J in 1 .. Argument_Count loop\n+               declare\n+                  Arg : constant String := Argument (J);\n+               begin\n+                  if Arg'Length >= 2\n+                    and then Arg (Arg'First .. Arg'First + 1) = \"-P\"\n+                  then\n+                     Call_Gprclean := True;\n+                     exit;\n+                  end if;\n+               end;\n+            end loop;\n+\n+            if Call_Gprclean then\n+               declare\n+                  Gprclean : String_Access :=\n+                               Locate_Exec_On_Path (Exec_Name => \"gprclean\");\n+                  Args     : Argument_List (1 .. Argument_Count);\n+                  Success  : Boolean;\n+\n+               begin\n+                  if Gprclean /= null then\n+                     for J in 1 .. Argument_Count loop\n+                        Args (J) := new String'(Argument (J));\n+                     end loop;\n+\n+                     Spawn (Gprclean.all, Args, Success);\n+\n+                     Free (Gprclean);\n+\n+                     if Success then\n+                        Exit_Program (E_Success);\n+                     end if;\n+                  end if;\n+               end;\n+            end if;\n+         end;\n+      end if;\n+\n       Index := 1;\n       while Index <= Last loop\n          declare\n@@ -1687,10 +1736,10 @@ package body Clean is\n                            Bad_Argument;\n                         end if;\n \n-                     when 'c'    =>\n+                     when 'c' =>\n                         Compile_Only := True;\n \n-                     when 'D'    =>\n+                     when 'D' =>\n                         if Object_Directory_Path /= null then\n                            Fail (\"duplicate -D switch\");\n "}, {"sha": "d3324e70c79c7d1bc6039f472255dedd5aad6922", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 50, "deletions": 1, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -6442,6 +6442,55 @@ package body Make is\n       --  Scan again the switch and arguments, now that we are sure that they\n       --  do not include --version or --help.\n \n+      --  First, for native gnatmake, check for switch -P and, if found and\n+      --  gprbuild is available, silently invoke gprbuild.\n+\n+      Find_Program_Name;\n+\n+      if Name_Buffer (1 .. Name_Len) = \"gnatmake\" then\n+         declare\n+            Call_Gprbuild : Boolean := False;\n+\n+         begin\n+            for J in 1 .. Argument_Count loop\n+               declare\n+                  Arg : constant String := Argument (J);\n+               begin\n+                  if Arg'Length >= 2\n+                    and then Arg (Arg'First .. Arg'First + 1) = \"-P\"\n+                  then\n+                     Call_Gprbuild := True;\n+                     exit;\n+                  end if;\n+               end;\n+            end loop;\n+\n+            if Call_Gprbuild then\n+               declare\n+                  Gprbuild : String_Access :=\n+                               Locate_Exec_On_Path (Exec_Name => \"gprbuild\");\n+                  Args     : Argument_List (1 .. Argument_Count);\n+                  Success  : Boolean;\n+\n+               begin\n+                  if Gprbuild /= null then\n+                     for J in 1 .. Argument_Count loop\n+                        Args (J) := new String'(Argument (J));\n+                     end loop;\n+\n+                     Spawn (Gprbuild.all, Args, Success);\n+\n+                     Free (Gprbuild);\n+\n+                     if Success then\n+                        Exit_Program (E_Success);\n+                     end if;\n+                  end if;\n+               end;\n+            end if;\n+         end;\n+      end if;\n+\n       Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n          Scan_Make_Arg (Env, Argument (Next_Arg), And_Save => True);\n       end loop Scan_Args;"}, {"sha": "e012e9426ba5ddabd62f5ea695c997b291dbc680", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -74,7 +74,7 @@ package Makeutl is\n    Root_Dir_Option : constant String := \"--root-dir\";\n    --  The root directory under which all artifacts (objects, library, ali)\n    --  directory are to be found for the current compilation. This directory\n-   --  will be use to relocate artifacts based on this directory. If this\n+   --  will be used to relocate artifacts based on this directory. If this\n    --  option is not specificed the default value is the directory of the\n    --  main project.\n "}, {"sha": "e48b7fba016800f94f03b220de6df5e27ec0dfde", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -973,7 +973,7 @@ package body Prj.Conf is\n                Add_Str_To_Name_Buffer (Build_Tree_Dir.all);\n \n                if Get_Name_String (Conf_Project.Directory.Display_Name)'Length\n-                 < Root_Dir'Length\n+                                                         < Root_Dir'Length\n                then\n                   Raise_Invalid_Config\n                     (\"cannot relocate deeper than object directory\");\n@@ -994,8 +994,8 @@ package body Prj.Conf is\n             else\n                if Build_Tree_Dir /= null then\n                   if Get_Name_String\n-                    (Conf_Project.Directory.Display_Name)'Length\n-                    < Root_Dir'Length\n+                    (Conf_Project.Directory.Display_Name)'Length <\n+                                                          Root_Dir'Length\n                   then\n                      Raise_Invalid_Config\n                        (\"cannot relocate deeper than object directory\");"}, {"sha": "c7a5d3c92c8e35707372c77798e754990999bd5a", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -5589,8 +5589,8 @@ package body Prj.Nmsc is\n             end if;\n          end if;\n \n-      elsif not No_Sources and then\n-        (Subdirs /= null or else Build_Tree_Dir /= null)\n+      elsif not No_Sources\n+        and then (Subdirs /= null or else Build_Tree_Dir /= null)\n       then\n          Name_Len := 1;\n          Name_Buffer (1) := '.';\n@@ -6232,6 +6232,7 @@ package body Prj.Nmsc is\n \n       else\n          if Build_Tree_Dir /= null and then Create /= \"\" then\n+\n             --  Issue a warning that we cannot relocate absolute obj dir\n \n             Err_Vars.Error_Msg_File_1 := Name;"}, {"sha": "4af4f3cfb886fca90def1cfe8c67d9c122cff838", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -68,7 +68,7 @@ package Prj is\n    Root_Dir : String_Ptr := null;\n    --  When using out-of-tree build we need to keep information about the root\n    --  directory of artifacts to properly relocate them. Note that the root\n-   --  directory is not necessary the directory of the main project.\n+   --  directory is not necessarily the directory of the main project.\n \n    type Library_Support is (None, Static_Only, Full);\n    --  Support for Library Project File."}, {"sha": "f38ff5fa7c1fcdf57f4a024141aa98f62603a420", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -830,6 +830,7 @@ package body Sem_Ch12 is\n    --  later, when the expected types are known, but names have to be captured\n    --  before installing parents of generics, that are not visible for the\n    --  actuals themselves.\n+   --\n    --  If Inst is present, it is the entity of the package instance. This\n    --  entity is marked as having a limited_view actual when some actual is\n    --  a limited view. This is used to place the instance body properly..\n@@ -3601,7 +3602,8 @@ package body Sem_Ch12 is\n       Generate_Definition (Act_Decl_Id);\n       Set_Ekind (Act_Decl_Id, E_Package);\n \n-      --  Initialize list of incomplete actuals before analysis.\n+      --  Initialize list of incomplete actuals before analysis\n+\n       Set_Incomplete_Actuals (Act_Decl_Id, New_Elmt_List);\n \n       Preanalyze_Actuals (N, Act_Decl_Id);\n@@ -8883,17 +8885,19 @@ package body Sem_Ch12 is\n             --  the instance body.\n \n             declare\n-               Elmt    : Elmt_Id;\n-               F_T     : Node_Id;\n-               Typ     : Entity_Id;\n+               Elmt : Elmt_Id;\n+               F_T  : Node_Id;\n+               Typ  : Entity_Id;\n \n             begin\n                Elmt := First_Elmt (Incomplete_Actuals (Act_Id));\n                while Present (Elmt) loop\n                   Typ := Node (Elmt);\n+\n                   if From_Limited_With (Typ) then\n                      Typ := Non_Limited_View (Typ);\n                   end if;\n+\n                   Ensure_Freeze_Node (Typ);\n                   F_T := Freeze_Node (Typ);\n \n@@ -13356,7 +13360,7 @@ package body Sem_Ch12 is\n                Analyze (Act);\n \n                if Is_Entity_Name (Act)\n-                 and then  Is_Type (Entity (Act))\n+                 and then Is_Type (Entity (Act))\n                  and then From_Limited_With (Entity (Act))\n                then\n                   Append_Elmt (Entity (Act), Incomplete_Actuals (Inst));"}, {"sha": "7f951bcb7297d9065b48f65af139ab1b4c21c2b2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -13483,9 +13483,22 @@ package body Sem_Ch13 is\n                         end if;\n \n                      else pragma Assert (Source_Siz > Target_Siz);\n-                        Error_Msg\n-                          (\"\\?z?^ trailing bits of source will be ignored!\",\n-                           Eloc);\n+                        if Is_Discrete_Type (Source) then\n+                           if Bytes_Big_Endian then\n+                              Error_Msg\n+                                (\"\\?z?^ low order bits of source will be \"\n+                                 & \"ignored!\", Eloc);\n+                           else\n+                              Error_Msg\n+                                (\"\\?z?^ high order bits of source will be \"\n+                                 & \"ignored!\", Eloc);\n+                           end if;\n+\n+                        else\n+                           Error_Msg\n+                             (\"\\?z?^ trailing bits of source will be \"\n+                              & \"ignored!\", Eloc);\n+                        end if;\n                      end if;\n                   end if;\n                end if;"}, {"sha": "fba28c362cea8a78fd2f593f1d92b91f82af1df3", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -2831,9 +2831,7 @@ package body Sem_Ch6 is\n          procedure Detect_And_Exchange (Id : Entity_Id) is\n             Typ : constant Entity_Id := Etype (Id);\n          begin\n-            if From_Limited_With (Typ)\n-              and then Has_Non_Limited_View (Typ)\n-            then\n+            if From_Limited_With (Typ) and then Has_Non_Limited_View (Typ) then\n                Set_Etype (Id, Non_Limited_View (Typ));\n             end if;\n          end Detect_And_Exchange;"}, {"sha": "55e5dcd8686f0b69a63445bc1cfce70fb2522e18", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd6f4147ce06511cbcc8df80bdcea21d8afe639/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=ccd6f4147ce06511cbcc8df80bdcea21d8afe639", "patch": "@@ -818,15 +818,13 @@ package body Sem_Disp is\n                   --  (the only current case of a tag-indeterminate attribute\n                   --  is the stream Input attribute).\n \n-                  elsif\n-                    Nkind (Original_Node (Actual)) = N_Attribute_Reference\n+                  elsif Nkind (Original_Node (Actual)) = N_Attribute_Reference\n                   then\n                      Func := Empty;\n \n                   --  Ditto if it is an explicit dereference.\n \n-                  elsif\n-                    Nkind (Original_Node (Actual)) = N_Explicit_Dereference\n+                  elsif Nkind (Original_Node (Actual)) = N_Explicit_Dereference\n                   then\n                      Func := Empty;\n \n@@ -835,9 +833,8 @@ package body Sem_Disp is\n \n                   else\n                      Func :=\n-                       Entity (Name\n-                         (Original_Node\n-                           (Expression (Original_Node (Actual)))));\n+                       Entity (Name (Original_Node\n+                                       (Expression (Original_Node (Actual)))));\n                   end if;\n \n                   if Present (Func) and then Is_Abstract_Subprogram (Func) then"}]}