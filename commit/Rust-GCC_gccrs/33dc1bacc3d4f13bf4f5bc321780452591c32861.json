{"sha": "33dc1bacc3d4f13bf4f5bc321780452591c32861", "node_id": "C_kwDOANBUbNoAKDMzZGMxYmFjYzNkNGYxM2JmNGY1YmMzMjE3ODA0NTI1OTFjMzI4NjE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-07T08:50:21Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-07T08:51:14Z"}, "message": "Mitigate clang warnings:\n\ngcc/range-op.cc:1752:16: warning: 'wi_fold' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\ngcc/range-op.cc:1757:16: warning: 'wi_op_overflows' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\ngcc/range-op.cc:1759:16: warning: 'op1_range' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\ngcc/range-op.cc:1763:16: warning: 'op2_range' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\ngcc/range-op.cc:1928:16: warning: 'wi_fold' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\ngcc/range-op.cc:1933:16: warning: 'wi_op_overflows' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\n\ngcc/ChangeLog:\n\n\t* range-op.cc: Add final override keywords.", "tree": {"sha": "772c34453bd13bd163959d7497fcb921389b3298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/772c34453bd13bd163959d7497fcb921389b3298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33dc1bacc3d4f13bf4f5bc321780452591c32861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33dc1bacc3d4f13bf4f5bc321780452591c32861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33dc1bacc3d4f13bf4f5bc321780452591c32861", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33dc1bacc3d4f13bf4f5bc321780452591c32861/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c053335c7329ecd6c37f395b479994bc187d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c053335c7329ecd6c37f395b479994bc187d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c053335c7329ecd6c37f395b479994bc187d3a"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "5e94c3d2282ed8e1dfd9f1706d94367abd034535", "filename": "gcc/range-op.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33dc1bacc3d4f13bf4f5bc321780452591c32861/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33dc1bacc3d4f13bf4f5bc321780452591c32861/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=33dc1bacc3d4f13bf4f5bc321780452591c32861", "patch": "@@ -1753,17 +1753,18 @@ class operator_mult : public cross_product_operator\n \t\t        const wide_int &lh_lb,\n \t\t        const wide_int &lh_ub,\n \t\t        const wide_int &rh_lb,\n-\t\t        const wide_int &rh_ub) const;\n+\t\t\tconst wide_int &rh_ub) const final override;\n   virtual bool wi_op_overflows (wide_int &res, tree type,\n-\t\t\t\tconst wide_int &w0, const wide_int &w1) const;\n+\t\t\t\tconst wide_int &w0, const wide_int &w1)\n+    const final override;\n   virtual bool op1_range (irange &r, tree type,\n \t\t\t  const irange &lhs,\n \t\t\t  const irange &op2,\n-\t\t\t  relation_trio) const;\n+\t\t\t  relation_trio) const final override;\n   virtual bool op2_range (irange &r, tree type,\n \t\t\t  const irange &lhs,\n \t\t\t  const irange &op1,\n-\t\t\t  relation_trio) const;\n+\t\t\t  relation_trio) const final override;\n } op_mult;\n \n bool\n@@ -1929,9 +1930,10 @@ class operator_div : public cross_product_operator\n \t\t        const wide_int &lh_lb,\n \t\t        const wide_int &lh_ub,\n \t\t        const wide_int &rh_lb,\n-\t\t        const wide_int &rh_ub) const;\n+\t\t\tconst wide_int &rh_ub) const final override;\n   virtual bool wi_op_overflows (wide_int &res, tree type,\n-\t\t\t\tconst wide_int &, const wide_int &) const;\n+\t\t\t\tconst wide_int &, const wide_int &)\n+    const final override;\n   virtual bool fold_range (irange &r, tree type,\n \t\t\t   const irange &lh, const irange &rh,\n \t\t\t   relation_trio trio) const final override;"}]}