{"sha": "35a6c8736ad32b6c47af367c3ce08bb61281eccc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVhNmM4NzM2YWQzMmI2YzQ3YWYzNjdjM2NlMDhiYjYxMjgxZWNjYw==", "commit": {"author": {"name": "Jeroen Frijters", "email": "jeroen@sumatra.nl", "date": "2003-07-19T15:47:56Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-07-19T15:47:56Z"}, "message": "URLClassLoader.java (addURL): Moved implementation to private addURLImpl() to avoid calling addURL from the...\n\n2003-07-19  Jeroen Frijters <jeroen@sumatra.nl>\n\n\t* java/net/URLClassLoader.java (addURL): Moved implementation to\n\tprivate addURLImpl() to avoid calling addURL from the constructor.\n\t(addURLImpl): Contains the code that was previously in addURL.\n\t(addURLs): Call addURLImpl(), not addURL().\n\nFrom-SVN: r69591", "tree": {"sha": "7f896d9cf996acf8b20cd46f74bc4781e0b2f668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f896d9cf996acf8b20cd46f74bc4781e0b2f668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35a6c8736ad32b6c47af367c3ce08bb61281eccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a6c8736ad32b6c47af367c3ce08bb61281eccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a6c8736ad32b6c47af367c3ce08bb61281eccc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a6c8736ad32b6c47af367c3ce08bb61281eccc/comments", "author": null, "committer": null, "parents": [{"sha": "01482e6dedf200137f9a7aa57d3c585bbc81b1c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01482e6dedf200137f9a7aa57d3c585bbc81b1c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01482e6dedf200137f9a7aa57d3c585bbc81b1c9"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "e7c86ed7ff23360e2b58175070b3d6d07bfd0d72", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a6c8736ad32b6c47af367c3ce08bb61281eccc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a6c8736ad32b6c47af367c3ce08bb61281eccc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=35a6c8736ad32b6c47af367c3ce08bb61281eccc", "patch": "@@ -1,3 +1,10 @@\n+2003-07-19  Jeroen Frijters <jeroen@sumatra.nl>\n+\n+\t* java/net/URLClassLoader.java (addURL): Moved implementation to\n+\tprivate addURLImpl() to avoid calling addURL from the constructor.\n+\t(addURLImpl): Contains the code that was previously in addURL.\n+\t(addURLs): Call addURLImpl(), not addURL().\n+\n 2003-07-18  Graydon Hoare  <graydon@redhat.com>\n \n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c: "}, {"sha": "9a468bf71af33f46f221db19fdeb943c50cbf014", "filename": "libjava/java/net/URLClassLoader.java", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a6c8736ad32b6c47af367c3ce08bb61281eccc/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a6c8736ad32b6c47af367c3ce08bb61281eccc/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=35a6c8736ad32b6c47af367c3ce08bb61281eccc", "patch": "@@ -311,6 +311,9 @@ Resource getResource(String name)\n       if (jarfile == null)\n \treturn null;\n \n+      if (name.startsWith(\"/\"))\n+        name = name.substring(1);\n+\n       JarEntry je = jarfile.getJarEntry(name);\n       if(je != null)\n \treturn new JarURLResource(this, name, je);\n@@ -653,6 +656,11 @@ public URLClassLoader(URL[] urls,\n    * @param newUrl the location to add\n    */\n   protected void addURL(URL newUrl)\n+  {\n+    addURLImpl(newUrl);\n+  }\n+\n+  private void addURLImpl(URL newUrl)\n   {\n     synchronized(urlloaders)\n       {\n@@ -690,7 +698,7 @@ private void addURLs(URL[] newUrls)\n   {\n     for (int i = 0; i < newUrls.length; i++)\n     {\n-      addURL(newUrls[i]);\n+      addURLImpl(newUrls[i]);\n     }\n   }\n "}]}