{"sha": "36b88526410cfbf2fcbd0150dde6c1128ff466df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZiODg1MjY0MTBjZmJmMmZjYmQwMTUwZGRlNmMxMTI4ZmY0NjZkZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-12-16T18:13:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-12-16T18:13:09Z"}, "message": "Add assertion to _Rb_tree::erase to check for end iterators\n\n\t* include/bits/stl_tree.h (_Rb_tree::_M_erase_aux(const_iterator)):\n\tAdd assertion for undefined argument.\n\t(_Rb_tree::_M_erase_aux(const_iterator, const_iterator)): Call\n\t_M_erase_aux directly instead of through erase.\n\t(_Rb_tree::_M_erase_aux(const Key&)): Likewise.\n\t* testsuite/23_containers/map/modifiers/erase/end_neg.cc: New test.\n\nFrom-SVN: r243757", "tree": {"sha": "ad952f44408dcfb8fd78bb52459f06152bcae867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad952f44408dcfb8fd78bb52459f06152bcae867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36b88526410cfbf2fcbd0150dde6c1128ff466df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b88526410cfbf2fcbd0150dde6c1128ff466df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b88526410cfbf2fcbd0150dde6c1128ff466df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b88526410cfbf2fcbd0150dde6c1128ff466df/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "680153bd1eefcdd31809fedd9a937bff03853dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680153bd1eefcdd31809fedd9a937bff03853dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/680153bd1eefcdd31809fedd9a937bff03853dcf"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "0cf14b550ae7b5a8030a8d094cab7e4581edc404", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b88526410cfbf2fcbd0150dde6c1128ff466df/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b88526410cfbf2fcbd0150dde6c1128ff466df/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=36b88526410cfbf2fcbd0150dde6c1128ff466df", "patch": "@@ -1,3 +1,12 @@\n+2016-12-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_tree.h (_Rb_tree::_M_erase_aux(const_iterator)):\n+\tAdd assertion for undefined argument.\n+\t(_Rb_tree::_M_erase_aux(const_iterator, const_iterator)): Call\n+\t_M_erase_aux directly instead of through erase.\n+\t(_Rb_tree::_M_erase_aux(const Key&)): Likewise.\n+\t* testsuite/23_containers/map/modifiers/erase/end_neg.cc: New test.\n+\n 2016-12-16  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tImplement LWG 2769, Redundant const in the return type of"}, {"sha": "735fadac75b6fa9dd01d4b6ec6c0b7f18d92fc90", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b88526410cfbf2fcbd0150dde6c1128ff466df/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b88526410cfbf2fcbd0150dde6c1128ff466df/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=36b88526410cfbf2fcbd0150dde6c1128ff466df", "patch": "@@ -1104,6 +1104,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       iterator\n       erase(const_iterator __position)\n       {\n+\t__glibcxx_assert(__position != end());\n \tconst_iterator __result = __position;\n \t++__result;\n \t_M_erase_aux(__position);\n@@ -1115,6 +1116,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       iterator\n       erase(iterator __position)\n       {\n+\t__glibcxx_assert(__position != end());\n \titerator __result = __position;\n \t++__result;\n \t_M_erase_aux(__position);\n@@ -1123,11 +1125,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #else\n       void\n       erase(iterator __position)\n-      { _M_erase_aux(__position); }\n+      {\n+\t__glibcxx_assert(__position != end());\n+\t_M_erase_aux(__position);\n+      }\n \n       void\n       erase(const_iterator __position)\n-      { _M_erase_aux(__position); }\n+      {\n+\t__glibcxx_assert(__position != end());\n+\t_M_erase_aux(__position);\n+      }\n #endif\n       size_type\n       erase(const key_type& __x);\n@@ -2477,7 +2485,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tclear();\n       else\n \twhile (__first != __last)\n-\t  erase(__first++);\n+\t  _M_erase_aux(__first++);\n     }\n \n   template<typename _Key, typename _Val, typename _KeyOfValue,\n@@ -2488,7 +2496,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       pair<iterator, iterator> __p = equal_range(__x);\n       const size_type __old_size = size();\n-      erase(__p.first, __p.second);\n+      _M_erase_aux(__p.first, __p.second);\n       return __old_size - size();\n     }\n "}, {"sha": "f01a99b8e12bc27e7059ff252c6f90b773b84440", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/erase/end_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b88526410cfbf2fcbd0150dde6c1128ff466df/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ferase%2Fend_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b88526410cfbf2fcbd0150dde6c1128ff466df/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ferase%2Fend_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ferase%2Fend_neg.cc?ref=36b88526410cfbf2fcbd0150dde6c1128ff466df", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-D_GLIBCXX_ASSERTIONS\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <map>\n+\n+void\n+test01()\n+{\n+  std::map<int, int> m;\n+  m[0];\n+  m.erase(m.end());\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}