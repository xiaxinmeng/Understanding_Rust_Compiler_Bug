{"sha": "071ef254a8a9ad947e72b37cd4aa695b57e5b031", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcxZWYyNTRhOGE5YWQ5NDdlNzJiMzdjZDRhYTY5NWI1N2U1YjAzMQ==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2019-11-14T16:08:19Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2019-11-14T16:08:19Z"}, "message": "Housekeeping on TARGET_OS_CPP_BUILTINS for arm-vxworks\n\n2019-11-14  Jerome Lambourg  <lambourg@adacore.com>\n\n        * config/arm/vxworks.h (TARGET_OS_CPP_BUILTINS): Use\n        _VX_CPU instead of CPU and handle arm_arch8.\n\nFrom-SVN: r278252", "tree": {"sha": "6cf1f35a87272272b79ce3525dfd6d19a221b146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cf1f35a87272272b79ce3525dfd6d19a221b146"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/071ef254a8a9ad947e72b37cd4aa695b57e5b031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/071ef254a8a9ad947e72b37cd4aa695b57e5b031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/071ef254a8a9ad947e72b37cd4aa695b57e5b031", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/071ef254a8a9ad947e72b37cd4aa695b57e5b031/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3004f893b43d48ca72ef1fe676d0930bb49a4f36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3004f893b43d48ca72ef1fe676d0930bb49a4f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3004f893b43d48ca72ef1fe676d0930bb49a4f36"}], "stats": {"total": 77, "additions": 42, "deletions": 35}, "files": [{"sha": "ddba96a92785055abdae5b38ff9bcd53cad2a9c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/071ef254a8a9ad947e72b37cd4aa695b57e5b031/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/071ef254a8a9ad947e72b37cd4aa695b57e5b031/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=071ef254a8a9ad947e72b37cd4aa695b57e5b031", "patch": "@@ -1,3 +1,8 @@\n+2019-11-14  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* config/arm/vxworks.h (TARGET_OS_CPP_BUILTINS): Use\n+\t_VX_CPU instead of CPU and handle arm_arch8.\n+\n 2019-11-14  Doug Rupp  <rupp@adacore.com>\n \t    Olivier Hainque  <hainque@adacore.com>\n \t    Jerome Lambourg  <lambourg@adacore.com>"}, {"sha": "f03b19a1fbd6660e6dacf4f934851a6eada606a4", "filename": "gcc/config/arm/vxworks.h", "status": "modified", "additions": 37, "deletions": 35, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/071ef254a8a9ad947e72b37cd4aa695b57e5b031/gcc%2Fconfig%2Farm%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/071ef254a8a9ad947e72b37cd4aa695b57e5b031/gcc%2Fconfig%2Farm%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxworks.h?ref=071ef254a8a9ad947e72b37cd4aa695b57e5b031", "patch": "@@ -35,42 +35,44 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n #undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do {\t\t\t\t\t\t\\\n-    if (TARGET_BIG_END)\t\t\t\t\\\n-      builtin_define (\"ARMEB\");\t\t\t\\\n-    else\t\t\t\t\t\\\n-      builtin_define (\"ARMEL\");\t\t\t\\\n-\t\t\t\t\t\t\\\n-    if (arm_arch_xscale)\t\t\t\\\n-      builtin_define (\"CPU=XSCALE\");\t\t\\\n-    else if (arm_arch7)\t\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-\tif (!arm_arch_notm)\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH7M\");\t\\\n-\telse if (TARGET_THUMB)\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH7_T2\");\t\\\n-\telse\t\t\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH7\");\t\\\n-      }\t\t\t\t\t\t\\\n-    else if (arm_arch6)\t\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-\tif (TARGET_THUMB)\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH6_T\");\t\\\n-\telse\t\t\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH6\");\t\\\n-      }\t\t\t\t\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    if (TARGET_BIG_END)\t\t\t\t\t\\\n+      builtin_define (\"ARMEB\");\t\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      builtin_define (\"ARMEL\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+    if (arm_arch_xscale)\t\t\t\t\\\n+      builtin_define (\"_VX_CPU=XSCALE\");\t\t\\\n+    if (arm_arch8)\t\t\t\t\t\\\n+      builtin_define (\"_VX_CPU=ARMARCH8A\");\t\t\\\n+    else if (arm_arch7)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (!arm_arch_notm)\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH7M\");\t\t\\\n+\telse if (TARGET_THUMB)\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH7_T2\");\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH7\");\t\t\\\n+      }\t\t\t\t\t\t\t\\\n+    else if (arm_arch6)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (TARGET_THUMB)\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH6_T\");\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH6\");\t\t\\\n+      }\t\t\t\t\t\t\t\\\n     else if (arm_arch5t)\t\t\t\t\\\n-\tbuiltin_define (\"CPU=ARMARCH5_T\");\t\\\n-    else if (arm_arch4)\t\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-\tif (TARGET_THUMB)\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH4_T\");\t\\\n-\telse\t\t\t\t\t\\\n-\t  builtin_define (\"CPU=ARMARCH4\");\t\\\n-      }\t\t\t\t\t\t\\\n-    VXWORKS_OS_CPP_BUILTINS ();\t\t\t\\\n-    MAYBE_TARGET_BPABI_CPP_BUILTINS ();\t\t\\\n+\tbuiltin_define (\"_VX_CPU=ARMARCH5_T\");\t\t\\\n+    else if (arm_arch4)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (TARGET_THUMB)\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH4_T\");\t\\\n+\telse\t\t\t\t\t\t\\\n+\t  builtin_define (\"_VX_CPU=ARMARCH4\");\t\t\\\n+      }\t\t\t\t\t\t\t\\\n+    VXWORKS_OS_CPP_BUILTINS ();\t\t\t\t\\\n+    MAYBE_TARGET_BPABI_CPP_BUILTINS ();\t\t\t\\\n   } while (0)\n \n #undef SUBTARGET_OVERRIDE_OPTIONS"}]}