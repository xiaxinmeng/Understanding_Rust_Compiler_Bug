{"sha": "243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "node_id": "C_kwDOANBUbNoAKDI0M2VmMGRmZTcxM2E5ZmM4ZDRkODBmZWI0ODhhNThiMjYzOWYzOWY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-21T19:25:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-21T19:25:01Z"}, "message": "Merge #1139\n\n1139: hir: improve doc attribute handling r=philberty a=liushuyu\n\n- hir: improve doc attribute handling\r\n\r\nAddresses #1140\n\nCo-authored-by: liushuyu <liushuyu011@gmail.com>", "tree": {"sha": "a953c56241d278ff5306ff7258245337818ee657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a953c56241d278ff5306ff7258245337818ee657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiYa+NCRBK7hj4Ov3rIwAAPZAIAJCdfxRULSYIn/ZjYQnnSf/7\npyIOS05pgeH8U9ieqkgJQ4/npN7E+F6PDxNYgIZrBsExo14eZb1pBYXqe/0vAYwS\nwUZUwYInWCvKoiOeXDBR4vqQt+OT1WZKQzWpUGT5H00PIdZmyVnwceD9C0OgIVxF\n81Af/HBi2p2/FHlESorN/9or1Y4BYibIlpV3HYlaG2/pPxa7TP2tEV1fmEmKSypA\nO0Yb7yPbVpAHVDU1LjkVsVOQqoxpdiPbhbjsUwmoO4Rd7yPhGCNmfrq8i7IY5CJN\nnrVzxh1hqqZqWhx//Rgfel7UV20Qdo/P91vR7coD4fh47j/w7cwDjfwzLevscn0=\n=yrCT\n-----END PGP SIGNATURE-----\n", "payload": "tree a953c56241d278ff5306ff7258245337818ee657\nparent cb42c3674a5a9ab77cb0c1216a1b776c323037e2\nparent a1c34b478fee1c1415b65624ad647cf3b93c9090\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1650569101 +0000\ncommitter GitHub <noreply@github.com> 1650569101 +0000\n\nMerge #1139\n\n1139: hir: improve doc attribute handling r=philberty a=liushuyu\n\n- hir: improve doc attribute handling\r\n\r\nAddresses #1140\n\nCo-authored-by: liushuyu <liushuyu011@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb42c3674a5a9ab77cb0c1216a1b776c323037e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb42c3674a5a9ab77cb0c1216a1b776c323037e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb42c3674a5a9ab77cb0c1216a1b776c323037e2"}, {"sha": "a1c34b478fee1c1415b65624ad647cf3b93c9090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c34b478fee1c1415b65624ad647cf3b93c9090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c34b478fee1c1415b65624ad647cf3b93c9090"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "e4b3e1e6562806ad6becfe9f9aaf679a4caf91b2", "filename": "gcc/rust/hir/rust-ast-lower-base.cc", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Frust%2Fhir%2Frust-ast-lower-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Frust%2Fhir%2Frust-ast-lower-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-base.cc?ref=243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "patch": "@@ -839,7 +839,11 @@ ASTLoweringBase::handle_outer_attributes (const HIR::Item &item)\n \t\t\t  && attr.get_attr_input ().get_attr_input_type ()\n \t\t\t       == AST::AttrInput::AttrInputType::LITERAL;\n \n-      if (is_lang_item)\n+      bool is_doc_item = str_path.compare (\"doc\") == 0;\n+\n+      if (is_doc_item)\n+\thandle_doc_item_attribute (item, attr);\n+      else if (is_lang_item)\n \thandle_lang_item_attribute (item, attr);\n       else if (!attribute_handled_in_another_pass (str_path))\n \t{\n@@ -849,6 +853,27 @@ ASTLoweringBase::handle_outer_attributes (const HIR::Item &item)\n     }\n }\n \n+void\n+ASTLoweringBase::handle_doc_item_attribute (const HIR::Item &item,\n+\t\t\t\t\t    const AST::Attribute &attr)\n+{\n+  auto simple_doc_comment = attr.has_attr_input ()\n+\t\t\t    && attr.get_attr_input ().get_attr_input_type ()\n+\t\t\t\t == AST::AttrInput::AttrInputType::LITERAL;\n+  if (simple_doc_comment)\n+    return;\n+\n+  const AST::AttrInput &input = attr.get_attr_input ();\n+  bool is_token_tree\n+    = input.get_attr_input_type () == AST::AttrInput::AttrInputType::TOKEN_TREE;\n+  rust_assert (is_token_tree);\n+  const auto &option = static_cast<const AST::DelimTokenTree &> (input);\n+  AST::AttrInputMetaItemContainer *meta_item = option.parse_to_meta_item ();\n+\n+  // TODO: add actual and complete checks for the doc attributes\n+  rust_assert (meta_item);\n+}\n+\n void\n ASTLoweringBase::handle_lang_item_attribute (const HIR::Item &item,\n \t\t\t\t\t     const AST::Attribute &attr)"}, {"sha": "0041a8f732c61701acfdc1f37d46ff647a8af4d1", "filename": "gcc/rust/hir/rust-ast-lower-base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Frust%2Fhir%2Frust-ast-lower-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Frust%2Fhir%2Frust-ast-lower-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-base.h?ref=243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "patch": "@@ -268,6 +268,9 @@ class ASTLoweringBase : public AST::ASTVisitor\n   void handle_lang_item_attribute (const HIR::Item &item,\n \t\t\t\t   const AST::Attribute &attr);\n \n+  void handle_doc_item_attribute (const HIR::Item &item,\n+\t\t\t\t  const AST::Attribute &attr);\n+\n   bool is_known_attribute (const std::string &attribute_path) const;\n \n   bool"}, {"sha": "b1211fe792c9842d47ed8cc0a9dddf4a300a0652", "filename": "gcc/rust/util/rust-attributes.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Frust%2Futil%2Frust-attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Frust%2Futil%2Frust-attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-attributes.cc?ref=243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "patch": "@@ -21,11 +21,12 @@\n namespace Rust {\n namespace Analysis {\n \n-// https://doc.rust-lang.org/stable/nightly-rustc/src/rustc_feature/builtin_attrs.rs.html#256\n+// https://doc.rust-lang.org/stable/nightly-rustc/src/rustc_feature/builtin_attrs.rs.html#248\n static const BuiltinAttrDefinition __definitions[]\n-  = {{\"inline\", CODE_GENERATION}, {\"cfg\", EXPANSION},\n-     {\"cfg_attr\", EXPANSION},\t  {\"allow\", STATIC_ANALYSIS},\n-     {\"lang\", HIR_LOWERING},\t  {\"must_use\", STATIC_ANALYSIS}};\n+  = {{\"inline\", CODE_GENERATION},  {\"cfg\", EXPANSION},\n+     {\"cfg_attr\", EXPANSION},\t   {\"allow\", STATIC_ANALYSIS},\n+     {\"doc\", HIR_LOWERING},\t   {\"lang\", HIR_LOWERING},\n+     {\"must_use\", STATIC_ANALYSIS}};\n \n BuiltinAttributeMappings *\n BuiltinAttributeMappings::get ()"}, {"sha": "f99e41524aef0025689dc9479e7d92e743106cef", "filename": "gcc/testsuite/rust/compile/torture/doc_comment.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fdoc_comment.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243ef0dfe713a9fc8d4d80feb488a58b2639f39f/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fdoc_comment.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fdoc_comment.rs?ref=243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "patch": "@@ -0,0 +1,16 @@\n+/// doc comment 1\n+/// doc comment 2\n+/// `blah blah` markdown\n+pub struct TestStruct {}\n+\n+#[doc(hidden)]\n+pub struct DocAttribute {}\n+\n+#[doc(a,b)]\n+pub struct UnkAttribute {}\n+\n+fn main() {\n+    let _ = TestStruct {};\n+    let _ = DocAttribute {};\n+    let _ = UnkAttribute {};\n+}"}]}