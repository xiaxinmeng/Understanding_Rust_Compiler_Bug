{"sha": "583ac69ceb5c573aa3fd016f209f222b8ad704cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgzYWM2OWNlYjVjNTczYWEzZmQwMTZmMjA5ZjIyMmI4YWQ3MDRjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-01-20T16:40:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-20T16:40:36Z"}, "message": "re PR debug/47283 (ICE in refs_may_alias_p_1, at tree-ssa-alias.c)\n\n\tPR debug/47283\n\t* cfgexpand.c (expand_debug_expr): Instead of generating\n\t(mem (debug_implicit_ptr)) for MEM_REFs use COMPONENT_REF\n\tetc. handling.\n\n\t* g++.dg/debug/pr47283.C: New test.\n\nFrom-SVN: r169057", "tree": {"sha": "0b38a75908809e609122b64e553250403bfc82e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b38a75908809e609122b64e553250403bfc82e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/583ac69ceb5c573aa3fd016f209f222b8ad704cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583ac69ceb5c573aa3fd016f209f222b8ad704cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/583ac69ceb5c573aa3fd016f209f222b8ad704cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583ac69ceb5c573aa3fd016f209f222b8ad704cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55429b8eb7922b9f016b93591f1dd8cf98546446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55429b8eb7922b9f016b93591f1dd8cf98546446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55429b8eb7922b9f016b93591f1dd8cf98546446"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "af3cd28f8377d2f17f3cd984b802dbe849080157", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=583ac69ceb5c573aa3fd016f209f222b8ad704cb", "patch": "@@ -1,3 +1,10 @@\n+2011-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/47283\n+\t* cfgexpand.c (expand_debug_expr): Instead of generating\n+\t(mem (debug_implicit_ptr)) for MEM_REFs use COMPONENT_REF\n+\tetc. handling.\n+\n 2011-01-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47370"}, {"sha": "aeb23610565f7d60615c17efa4c2f08080aa91e1", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=583ac69ceb5c573aa3fd016f209f222b8ad704cb", "patch": "@@ -2567,6 +2567,13 @@ expand_debug_expr (tree exp)\n \n       if (TREE_CODE (exp) == MEM_REF)\n \t{\n+\t  if (GET_CODE (op0) == DEBUG_IMPLICIT_PTR\n+\t      || (GET_CODE (op0) == PLUS\n+\t\t  && GET_CODE (XEXP (op0, 0)) == DEBUG_IMPLICIT_PTR))\n+\t    /* (mem (debug_implicit_ptr)) might confuse aliasing.\n+\t       Instead just use get_inner_reference.  */\n+\t    goto component_ref;\n+\n \t  op1 = expand_debug_expr (TREE_OPERAND (exp, 1));\n \t  if (!op1 || !CONST_INT_P (op1))\n \t    return NULL;\n@@ -2605,6 +2612,7 @@ expand_debug_expr (tree exp)\n \n       return op0;\n \n+    component_ref:\n     case ARRAY_REF:\n     case ARRAY_RANGE_REF:\n     case COMPONENT_REF:"}, {"sha": "cba5291348b68fbf5f877b6b802f7521988c531d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=583ac69ceb5c573aa3fd016f209f222b8ad704cb", "patch": "@@ -1,5 +1,8 @@\n 2011-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/47283\n+\t* g++.dg/debug/pr47283.C: New test.\n+\n \tPR testsuite/47371\n \t* gcc.target/i386/headmerge-1.c: Tighten up scan-assembler regex.\n \t* gcc.target/i386/headmerge-2.c: Likewise."}, {"sha": "dadbeff3deb278879324de079947b66b08dc4e47", "filename": "gcc/testsuite/g++.dg/debug/pr47283.C", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr47283.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ac69ceb5c573aa3fd016f209f222b8ad704cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr47283.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr47283.C?ref=583ac69ceb5c573aa3fd016f209f222b8ad704cb", "patch": "@@ -0,0 +1,58 @@\n+// PR debug/47283\n+// { dg-do compile }\n+\n+template <typename T> inline const T &\n+f1 (const T &a, const T &b)\n+{\n+  if (a < b)\n+    return b;\n+  return a;\n+};\n+\n+struct A\n+{\n+  A (int w, int h) { a1 = w; }\n+  A f2 (const A &) const;\n+  int a1, a2;\n+};\n+\n+inline A\n+A::f2 (const A &x) const\n+{\n+  return A (f1 (a1, x.a1), f1 (a2, x.a2));\n+};\n+\n+struct B\n+{\n+  A f3 () const;\n+  void f4 (const A &) { b2 = 5 + b1; }\n+  int b1, b2;\n+};\n+\n+struct C\n+{\n+};\n+\n+struct D\n+{\n+  virtual C f5 (const C &) const;\n+};\n+\n+struct E\n+{\n+  C f6 () const;\n+  int f7 () const;\n+  virtual B f8 (const C &) const;\n+  A f9 () const;\n+  virtual void f10 ();\n+  struct F { D *h; } *d;\n+};\n+\n+void\n+E::f10 ()\n+{\n+  const C c = d->h->f5 (f6 ());\n+  B b = f8 (c);\n+  b.f4 (b.f3 ().f2 (f9 ()));\n+  f7 ();\n+}"}]}