{"sha": "843adf8844d4ec43d13dd05f7269cabc7058c027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzYWRmODg0NGQ0ZWM0M2QxM2RkMDVmNzI2OWNhYmM3MDU4YzAyNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-06-25T17:06:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-06-25T17:06:02Z"}, "message": "gcc/\n\t* hash-traits.h (pointer_hash::mark_deleted, pointer_hash::mark_empty)\n\t(pointer_hash::is_deleted, pointer_hash::is_empty): New functions.\n\nFrom-SVN: r224956", "tree": {"sha": "f18fea62ef786d794c92fcf1f2b414c159a14a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f18fea62ef786d794c92fcf1f2b414c159a14a02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/843adf8844d4ec43d13dd05f7269cabc7058c027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843adf8844d4ec43d13dd05f7269cabc7058c027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/843adf8844d4ec43d13dd05f7269cabc7058c027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843adf8844d4ec43d13dd05f7269cabc7058c027/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ac6389bc1c0729233a88c1ce146a21aa6a3e2ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac6389bc1c0729233a88c1ce146a21aa6a3e2ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ac6389bc1c0729233a88c1ce146a21aa6a3e2ce"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "a9220e64619ed1e0c497d2d2265e5ca83a94b7a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843adf8844d4ec43d13dd05f7269cabc7058c027/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843adf8844d4ec43d13dd05f7269cabc7058c027/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=843adf8844d4ec43d13dd05f7269cabc7058c027", "patch": "@@ -1,3 +1,8 @@\n+2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hash-traits.h (pointer_hash::mark_deleted, pointer_hash::mark_empty)\n+\t(pointer_hash::is_deleted, pointer_hash::is_empty): New functions.\n+\n 2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hash-traits.h (ggc_hasher::remove): Take a reference parameter."}, {"sha": "65ed32c89715260f7ba4ee773b1dc7ec77cb9a97", "filename": "gcc/hash-traits.h", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843adf8844d4ec43d13dd05f7269cabc7058c027/gcc%2Fhash-traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843adf8844d4ec43d13dd05f7269cabc7058c027/gcc%2Fhash-traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-traits.h?ref=843adf8844d4ec43d13dd05f7269cabc7058c027", "patch": "@@ -66,9 +66,12 @@ struct pointer_hash : typed_noop_remove <Type>\n   typedef Type *compare_type;\n \n   static inline hashval_t hash (const value_type &);\n-\n   static inline bool equal (const value_type &existing,\n \t\t\t    const compare_type &candidate);\n+  static inline void mark_deleted (Type *&);\n+  static inline void mark_empty (Type *&);\n+  static inline bool is_deleted (Type *);\n+  static inline bool is_empty (Type *);\n };\n \n template <typename Type>\n@@ -88,6 +91,34 @@ pointer_hash <Type>::equal (const value_type &existing,\n   return existing == candidate;\n }\n \n+template <typename Type>\n+inline void\n+pointer_hash <Type>::mark_deleted (Type *&e)\n+{\n+  e = reinterpret_cast<Type *> (1);\n+}\n+\n+template <typename Type>\n+inline void\n+pointer_hash <Type>::mark_empty (Type *&e)\n+{\n+  e = NULL;\n+}\n+\n+template <typename Type>\n+inline bool\n+pointer_hash <Type>::is_deleted (Type *e)\n+{\n+  return e == reinterpret_cast<Type *> (1);\n+}\n+\n+template <typename Type>\n+inline bool\n+pointer_hash <Type>::is_empty (Type *e)\n+{\n+  return e == NULL;\n+}\n+\n /* Hasher for entry in gc memory.  */\n \n template<typename T>"}]}