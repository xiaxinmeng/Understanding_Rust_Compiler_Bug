{"sha": "28e5c45bd519aa363cba1eec4d215b173c360cab", "node_id": "C_kwDOANBUbNoAKDI4ZTVjNDViZDUxOWFhMzYzY2JhMWVlYzRkMjE1YjE3M2MzNjBjYWI", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-10-28T20:15:53Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-14T13:46:50Z"}, "message": "ada: Adjust locations in aspects on generic formal subprograms\n\nWhen instantiating a generic that has formal subprogram parameter with\ncontracts, e.g.:\n\n  generic\n    with procedure P with Pre => ..., Post => ...;\n  ...\n\nwe create a wrapper that executes Pre/Post contracts before/after\ncalling the actual subprogram. Errors emitted for these contracts\nwill now have locations of the instance and not just of the generic.\n\ngcc/ada/\n\n\t* sem_ch12.adb (Build_Subprogram_Wrappers): Adjust slocs of the\n\tcopied aspects, just like we do in Build_Class_Wide_Expression for\n\tinherited class-wide contracts.", "tree": {"sha": "23ce86eb6735013dac0b15649618bbdc77424718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23ce86eb6735013dac0b15649618bbdc77424718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e5c45bd519aa363cba1eec4d215b173c360cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e5c45bd519aa363cba1eec4d215b173c360cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e5c45bd519aa363cba1eec4d215b173c360cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e5c45bd519aa363cba1eec4d215b173c360cab/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35f29cfe9f6e48dc570d4cd61b906c3cbb2e227a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f29cfe9f6e48dc570d4cd61b906c3cbb2e227a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f29cfe9f6e48dc570d4cd61b906c3cbb2e227a"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "72c2eef70617262b5666c87dda50d7bd435f52be", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e5c45bd519aa363cba1eec4d215b173c360cab/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e5c45bd519aa363cba1eec4d215b173c360cab/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=28e5c45bd519aa363cba1eec4d215b173c360cab", "patch": "@@ -1203,12 +1203,31 @@ package body Sem_Ch12 is\n       -------------------------------\n \n       procedure Build_Subprogram_Wrappers is\n+         function Adjust_Aspect_Sloc (N : Node_Id) return Traverse_Result;\n+         --  Adjust sloc so that errors located at N will be reported with\n+         --  information about the instance and not just about the generic.\n+\n+         ------------------------\n+         -- Adjust_Aspect_Sloc --\n+         ------------------------\n+\n+         function Adjust_Aspect_Sloc (N : Node_Id) return Traverse_Result is\n+         begin\n+            Adjust_Instantiation_Sloc (N, S_Adjustment);\n+            return OK;\n+         end Adjust_Aspect_Sloc;\n+\n+         procedure Adjust_Aspect_Slocs is new\n+           Traverse_Proc (Adjust_Aspect_Sloc);\n+\n          Formal : constant Entity_Id :=\n            Defining_Unit_Name (Specification (Analyzed_Formal));\n          Aspect_Spec : Node_Id;\n          Decl_Node   : Node_Id;\n          Actual_Name : Node_Id;\n \n+      --  Start of processing for Build_Subprogram_Wrappers\n+\n       begin\n          --  Create declaration for wrapper subprogram\n          --  The actual can be overloaded, in which case it will be\n@@ -1247,6 +1266,7 @@ package body Sem_Ch12 is\n \n          Aspect_Spec := First (Aspect_Specifications (Decl_Node));\n          while Present (Aspect_Spec) loop\n+            Adjust_Aspect_Slocs (Aspect_Spec);\n             Set_Analyzed (Aspect_Spec, False);\n             Next (Aspect_Spec);\n          end loop;"}]}