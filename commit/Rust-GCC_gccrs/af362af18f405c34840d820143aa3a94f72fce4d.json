{"sha": "af362af18f405c34840d820143aa3a94f72fce4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYzNjJhZjE4ZjQwNWMzNDg0MGQ4MjAxNDNhYTNhOTRmNzJmY2U0ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-12-10T20:00:58Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-01-05T16:06:41Z"}, "message": "c++: ICE with deferred noexcept when deducing targs [PR82099]\n\nIn this test we ICE in type_throw_all_p because it got a deferred\nnoexcept which it shouldn't.  Here's the story:\n\nIn noexcept61.C, we call bar, so we perform overload resolution.  When\nadding the (only) candidate, we need to deduce template arguments, so\ncall fn_type_unification as usually.  That deduces U to\n\n  void (*) (int &, int &)\n\nwhich is correct, but its noexcept-spec is deferred_noexcept.  Then\nwe call add_function_candidate (bar), wherein we try to create an\nimplicit conversion sequence for every argument.  Since baz<int> is\nof unknown type, we instantiate_type it; it is a TEMPLATE_ID_EXPR\nso that calls resolve_address_of_overloaded_function.  But we crash\nthere, because target_type contains the deferred_noexcept.\n\nSo we need to maybe_instantiate_noexcept before we can compare types.\nresolve_overloaded_unification seemed like the appropriate spot, now\nfn_type_unification produces the function type with its noexcept-spec\ninstantiated.  This shouldn't go against CWG 1330 because here we\nreally need to instantiate the noexcept-spec.\n\nThis also fixes class-deduction76.C, a dg-ice test I recently added,\ntherefore this fix also fixes c++/90799, yay.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/82099\n\t* pt.c (resolve_overloaded_unification): Call\n\tmaybe_instantiate_noexcept after instantiating the function\n\tdecl.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/82099\n\t* g++.dg/cpp1z/class-deduction76.C: Remove dg-ice.\n\t* g++.dg/cpp0x/noexcept61.C: New test.", "tree": {"sha": "8305ce49ab76c5dffda8338f190b617161d4cdda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8305ce49ab76c5dffda8338f190b617161d4cdda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af362af18f405c34840d820143aa3a94f72fce4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af362af18f405c34840d820143aa3a94f72fce4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af362af18f405c34840d820143aa3a94f72fce4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af362af18f405c34840d820143aa3a94f72fce4d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27aad521570cbc1050ba957c0ee47aed18033dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27aad521570cbc1050ba957c0ee47aed18033dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27aad521570cbc1050ba957c0ee47aed18033dc1"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "0d061adc2ed214e4c46468fc71a563d24c34b860", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af362af18f405c34840d820143aa3a94f72fce4d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af362af18f405c34840d820143aa3a94f72fce4d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=af362af18f405c34840d820143aa3a94f72fce4d", "patch": "@@ -22373,6 +22373,9 @@ resolve_overloaded_unification (tree tparms,\n \t\t  --function_depth;\n \t\t}\n \n+\t      if (flag_noexcept_type)\n+\t\tmaybe_instantiate_noexcept (fn, tf_none);\n+\n \t      elem = TREE_TYPE (fn);\n \t      if (try_one_overload (tparms, targs, tempargs, parm,\n \t\t\t\t    elem, strict, sub_strict, addr_p, explain_p)"}, {"sha": "653cd7e66808a124d10e4e9281e2e7b7948edcca", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept61.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af362af18f405c34840d820143aa3a94f72fce4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af362af18f405c34840d820143aa3a94f72fce4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept61.C?ref=af362af18f405c34840d820143aa3a94f72fce4d", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/82099\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T, typename U>\n+void bar (T &x, T &y, U u)\n+{\n+  u (x, y);\n+}\n+\n+template <typename T>\n+void baz (T &x, T &y) noexcept (noexcept (x == y));\n+\n+void\n+foo (int x, int y)\n+{\n+  bar (x, y, baz<int>);\n+}"}, {"sha": "a131a386baa7d6ba7afb0878f36fd23f4cebc0a3", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction76.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af362af18f405c34840d820143aa3a94f72fce4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction76.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af362af18f405c34840d820143aa3a94f72fce4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction76.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction76.C?ref=af362af18f405c34840d820143aa3a94f72fce4d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/90799\n // { dg-do compile { target c++17 } }\n-// { dg-ice \"unify\" }\n \n template<class T>\n void foo() noexcept(T::value);"}]}