{"sha": "33724a9fb2d8f62576e56d51b9182bf7a2a939f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3MjRhOWZiMmQ4ZjYyNTc2ZTU2ZDUxYjkxODJiZjdhMmE5MzlmMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-06T22:06:21Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-06T22:06:21Z"}, "message": "(output_move_double): Special code for pushing from an address that uses the sp.\n\n(output_move_double): Special code for\npushing from an address that uses the sp.  Use PUSHOP for pushes,\nnot POPOP.\n\nFrom-SVN: r5647", "tree": {"sha": "e70e3222a110079afd6989d692bef548e156e13f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e70e3222a110079afd6989d692bef548e156e13f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33724a9fb2d8f62576e56d51b9182bf7a2a939f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33724a9fb2d8f62576e56d51b9182bf7a2a939f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33724a9fb2d8f62576e56d51b9182bf7a2a939f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33724a9fb2d8f62576e56d51b9182bf7a2a939f2/comments", "author": null, "committer": null, "parents": [{"sha": "ac7d29191de09ad944ab33023d4eb6852403c70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac7d29191de09ad944ab33023d4eb6852403c70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac7d29191de09ad944ab33023d4eb6852403c70c"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "2abe4044577e11f448d529bab560b80b06033bb6", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33724a9fb2d8f62576e56d51b9182bf7a2a939f2/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33724a9fb2d8f62576e56d51b9182bf7a2a939f2/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=33724a9fb2d8f62576e56d51b9182bf7a2a939f2", "patch": "@@ -244,7 +244,7 @@ char *\n output_move_double (operands)\n      rtx *operands;\n {\n-  enum anon1 { REGOP, OFFSOP, POPOP, CNSTOP, RNDOP } optype0, optype1;\n+  enum anon1 { REGOP, OFFSOP, PUSHOP, CNSTOP, RNDOP } optype0, optype1;\n   rtx latehalf[2];\n \n   /* First classify both operands.  */\n@@ -254,7 +254,7 @@ output_move_double (operands)\n   else if (offsettable_memref_p (operands[0]))\n     optype0 = OFFSOP;\n   else if (GET_CODE (XEXP (operands[0], 0)) == PRE_DEC)\n-    optype0 = POPOP;\n+    optype0 = PUSHOP;\n   else\n     optype0 = RNDOP;\n \n@@ -266,7 +266,7 @@ output_move_double (operands)\n   else if (offsettable_memref_p (operands[1]))\n     optype1 = OFFSOP;\n   else if (GET_CODE (XEXP (operands[1], 0)) == PRE_DEC)\n-    optype1 = POPOP;\n+    optype1 = PUSHOP;\n   else\n     optype1 = RNDOP;\n \n@@ -307,10 +307,18 @@ output_move_double (operands)\n   else\n     latehalf[1] = operands[1];\n \n+  /* If insn is effectively movd N(sp),tos then we will do the\n+     high word first.  We should use the adjusted operand 1 (which is N+4(sp))\n+     for the low word as well, to compensate for the first decrement of sp.\n+     Given this, it doesn't matter which half we do \"first\".  */\n+  if (optype0 == PUSHOP\n+      && REGNO (XEXP (XEXP (operands[0], 0), 0)) == STACK_POINTER_REGNUM\n+      && reg_overlap_mentioned_p (stack_pointer_rtx, operands[1]))\n+    operands[1] = latehalf[1];\n+\n   /* If one or both operands autodecrementing,\n      do the two words, high-numbered first.  */\n-\n-  if (optype0 == POPOP || optype1 == POPOP)\n+  else if (optype0 == PUSHOP || optype1 == PUSHOP)\n     {\n       output_asm_insn (singlemove_string (latehalf), latehalf);\n       return singlemove_string (operands);"}]}