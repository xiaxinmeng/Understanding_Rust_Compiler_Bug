{"sha": "2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxZWQxZTNlNWZkOGRiYjdiNGU4N2ExNmQ5YmU2NDU3M2FmNTZlZg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-02-16T22:30:35Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-02-16T22:30:35Z"}, "message": "* pa/t-pa, pa/t-pro, pa/som.h: Revert last patch.\n\nFrom-SVN: r49811", "tree": {"sha": "7ae13465fa903658004327ca8700bf948b79d09e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ae13465fa903658004327ca8700bf948b79d09e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/comments", "author": null, "committer": null, "parents": [{"sha": "604c75b22cadf457a34b3aeed9e677398405ff0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604c75b22cadf457a34b3aeed9e677398405ff0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/604c75b22cadf457a34b3aeed9e677398405ff0d"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "144e6c9cebe0efd2e474a7f0729d1ffa0559bd9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "patch": "@@ -1,3 +1,7 @@\n+2002-02-16  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa/t-pa, pa/t-pro, som.h: Revert last patch.\n+\n 2002-02-16  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa/t-pa (LIB2FUNCS_EXTRA): Don't build lib2funcs.asm."}, {"sha": "5604f54a4354b6fd4a242c954f5e92d23ead1ffc", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "patch": "@@ -351,6 +351,22 @@ readonly_data ()\t\t\t\t\t\t\t\\\n \n #define ASM_FILE_END(FILE) output_deferred_plabels (FILE)\n \n+/* We want __gcc_plt_call to appear in every program built by\n+   gcc, so we make a reference to it out of __main.\n+   We use the asm statement to fool the optimizer into not\n+   removing the dead (but important) initialization of\n+   REFERENCE.  */\n+\n+#define DO_GLOBAL_DTORS_BODY\t\t\t\\\n+do {\t\t\t\t\t\t\\\n+  extern void __gcc_plt_call ();\t\t\\\n+  void (*reference)() = &__gcc_plt_call;\t\\\n+  func_ptr *p;\t\t\t\t\t\\\n+  __asm__ (\"\" : : \"r\" (reference));\t\t\\\n+  for (p = __DTOR_LIST__ + 1; *p; )\t\t\\\n+    (*p++) ();\t\t\t\t\t\\\n+} while (0)\n+\n /* The .align directive in the HP assembler allows up to a 32 alignment.  */\n #define MAX_OFILE_ALIGNMENT 32768\n "}, {"sha": "863e8432015385ac24bc4cf152dc0a5980fbd363", "filename": "gcc/config/pa/t-pa", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2Fconfig%2Fpa%2Ft-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2Fconfig%2Fpa%2Ft-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa?ref=2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "patch": "@@ -1,5 +1,9 @@\n T_ADAFLAGS=-mdisable-indexing\n-LIB2FUNCS_EXTRA=quadlib.c\n+LIB2FUNCS_EXTRA=lib2funcs.asm quadlib.c\n+\n+lib2funcs.asm: $(srcdir)/config/pa/lib2funcs.asm\n+\trm -f lib2funcs.asm\n+\tcp $(srcdir)/config/pa/lib2funcs.asm .\n \n quadlib.c: $(srcdir)/config/pa/quadlib.c\n \trm -f quadlib.c"}, {"sha": "a47d72f98c9a5166ed1d07cf6fbc0fbf5e061261", "filename": "gcc/config/pa/t-pro", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2Fconfig%2Fpa%2Ft-pro", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef/gcc%2Fconfig%2Fpa%2Ft-pro", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pro?ref=2e1ed1e3e5fd8dbb7b4e87a16d9be64573af56ef", "patch": "@@ -1,5 +1,7 @@\n T_ADAFLAGS=-mdisable-indexing\n \n+LIB2FUNCS_EXTRA=lib2funcs.asm \n+\n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries.\n FPBIT = fp-bit.c\n@@ -11,3 +13,7 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+lib2funcs.asm: $(srcdir)/config/pa/lib2funcs.asm\n+\trm -f lib2funcs.asm\n+\tcp $(srcdir)/config/pa/lib2funcs.asm ."}]}