{"sha": "507df939403988c14389eb006304dee8975b2250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3ZGY5Mzk0MDM5ODhjMTQzODllYjAwNjMwNGRlZTg5NzViMjI1MA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@rabi.columbia.edu", "date": "1999-04-06T09:54:30Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-04-06T09:54:30Z"}, "message": "cppinit.c (install_predefs): Delete function.\n\n1999-04-06 12:51 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n\t* cppinit.c (install_predefs): Delete function.\n\t(cpp_start_read): Don't call install_predefs.\n\t(cpp_handle_option): Remove case 'u' and all refs to\n\topts->inhibit_predefs.\n\t(print_help): Don't mention -undef.\n\t(initialize_builtins): Define __HAVE_BUILTIN_SETJMP__, to\n\tmatch cccp.\n\t* cpplib.h (struct cpp_options): Remove inhibit_predefs\n\tmember.\n\t* cccp.c (predefs): Delete variable.\n\t(main): Remove case 'u' in argument parse loop,\n\t'inhibit_predefs' variable, and the code block that would\n\tprocess CPP_PREDEFINES.\n\t(initialize_builtins): Don't define __OBJC__, the driver will\n\tdo that.\n\t* gcc.c (default_compilers): Remove -undef from all specs that\n\tinvoke a C preprocessor.\n\t* ch/lang-specs.h: Likewise.\n\t* cp/lang-specs.h: Likewise.\n\t* f/lang-specs.h: Likewise.\n\t* objc/lang-specs.h: Likewise.\n\nFrom-SVN: r26212", "tree": {"sha": "e311b1aae3a8eba00538f1d3bc047ebff6363bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e311b1aae3a8eba00538f1d3bc047ebff6363bcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/507df939403988c14389eb006304dee8975b2250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507df939403988c14389eb006304dee8975b2250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507df939403988c14389eb006304dee8975b2250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507df939403988c14389eb006304dee8975b2250/comments", "author": null, "committer": null, "parents": [{"sha": "0793b35eaa6f702533a6748071eccce3209fe280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0793b35eaa6f702533a6748071eccce3209fe280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0793b35eaa6f702533a6748071eccce3209fe280"}], "stats": {"total": 261, "additions": 42, "deletions": 219}, "files": [{"sha": "20fd4a2f9d38e51fa1145f9880d7d4aecb2a87ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -1,3 +1,29 @@\n+1999-04-06 12:51 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n+\n+\t* cppinit.c (install_predefs): Delete function.\n+\t(cpp_start_read): Don't call install_predefs.\n+\t(cpp_handle_option): Remove case 'u' and all refs to\n+\topts->inhibit_predefs.\n+\t(print_help): Don't mention -undef.\n+\t(initialize_builtins): Define __HAVE_BUILTIN_SETJMP__, to\n+\tmatch cccp.\n+\t* cpplib.h (struct cpp_options): Remove inhibit_predefs\n+\tmember.\n+\n+\t* cccp.c (predefs): Delete variable.\n+\t(main): Remove case 'u' in argument parse loop,\n+\t'inhibit_predefs' variable, and the code block that would\n+\tprocess CPP_PREDEFINES.\n+\t(initialize_builtins): Don't define __OBJC__, the driver will\n+\tdo that.\n+\n+\t* gcc.c (default_compilers): Remove -undef from all specs that\n+\tinvoke a C preprocessor.\n+\t* ch/lang-specs.h: Likewise.\n+\t* cp/lang-specs.h: Likewise.\n+\t* f/lang-specs.h: Likewise.\n+\t* objc/lang-specs.h: Likewise.\n+\n Mon Apr  5 11:55:31 1999  Donn Terry (donn@interix.com)\n \n \t* Makefile.in (SUBDIR_FLAGS_TO_PASS): Fix misapplied patch."}, {"sha": "9cbd82d17b74b2f128ed208a65b3d3c5fb976462", "filename": "gcc/cccp.c", "status": "modified", "additions": 0, "deletions": 146, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -658,13 +658,6 @@ static HASHNODE *hashtab[HASHSIZE];\n #define HASHSTEP(old, c) ((old << 2) + c)\n #define MAKE_POS(v) (v & 0x7fffffff) /* make number positive */\n \n-/* Symbols to predefine.  */\n-\n-#ifdef CPP_PREDEFINES\n-static char *predefs = CPP_PREDEFINES;\n-#else\n-static char *predefs = \"\";\n-#endif\n \f\n /* We let tm.h override the types used here, to handle trivial differences\n    such as the choice of unsigned int or long unsigned int for size_t.\n@@ -1210,7 +1203,6 @@ main (argc, argv)\n      This is preparation for supporting more than one option for making\n      an assertion.  */\n   char **pend_assertion_options;\n-  int inhibit_predefs = 0;\n   int no_standard_includes = 0;\n   int no_standard_cplusplus_includes = 0;\n   int missing_newline = 0;\n@@ -1659,7 +1651,6 @@ main (argc, argv)\n \t       on the command line.  That way we can get rid of any\n \t       that were passed automatically in from GCC.  */\n \t    int j;\n-\t    inhibit_predefs = 1;\n \t    for (j = 0; j < i; j++)\n \t      pend_defs[j] = pend_assertions[j] = 0;\n \t  } else {\n@@ -1727,12 +1718,6 @@ main (argc, argv)\n \t  remap = 1;\n \tbreak;\n \n-      case 'u':\n-\t/* Sun compiler passes undocumented switch \"-undef\".\n-\t   Let's assume it means to inhibit the predefined symbols.  */\n-\tinhibit_predefs = 1;\n-\tbreak;\n-\n       case '\\0': /* JF handle '-' as file name meaning stdin or stdout */\n \tif (in_fname == NULL) {\n \t  in_fname = \"\";\n@@ -1783,135 +1768,6 @@ main (argc, argv)\n      and option processing.  */\n   initialize_builtins (fp, &outbuf);\n \n-  /* Do standard #defines and assertions\n-     that identify system and machine type.  */\n-\n-  if (!inhibit_predefs) {\n-    char *p = (char *) alloca (strlen (predefs) + 1);\n-\n-#ifdef VMS\n-    struct dsc$descriptor_s lcl_name;\n-    struct item_list {\n-      unsigned short length;  /* input length */\n-      unsigned short code;    /* item code */   \n-      unsigned long dptr;     /* data ptr */\n-      unsigned long lptr;     /* output length ptr */\n-    };\n-\n-    unsigned long syi_length;\n-    char syi_data[16];\n-\n-    struct item_list items[] = {\n-      { 16, SYI$_VERSION, 0, 0 },\n-      { 0, 0, 0, 0 }\n-    };\n-\n-    items[0].dptr = (unsigned long)syi_data;\n-    items[0].lptr = (unsigned long)(&syi_length);\n-\n-    if (SYS$GETSYIW (0, 0, 0, items, NULL, NULL, NULL, NULL) == SS$_NORMAL)\n-      {\n-\tunsigned long vms_version_value;\n-\tchar *vers;\n-\n-\tvers = syi_data;\n-\tvms_version_value = 0;\n-\n-\tif (*vers == 'V')\n-\t  vers++;\n-\tif (ISDIGIT (*vers))\n-\t  {\n-\t    vms_version_value = (*vers - '0') * 10000000;\n-\t  }\n-\tvers++;\n-\tif (*vers == '.')\n-\t  {\n-\t    vers++;\n-\t    if (ISDIGIT (*vers))\n-\t      {\n-\t\tvms_version_value += (*vers - '0') * 100000;\n-\t      }\n-\t  }\n-\n-\tif (vms_version_value > 0)\n-\t  {\n-\t    char versbuf[32];\n-\n-\t    sprintf (versbuf, \"__VMS_VER=%08ld\", vms_version_value);\n-\t    if (debug_output)\n-\t      output_line_directive (fp, &outbuf, 0, same_file);\n-\t    make_definition (versbuf);\n-\t  }\n-      }\n-#endif\n-\n-    strcpy (p, predefs);\n-    while (*p) {\n-      char *q;\n-      while (*p == ' ' || *p == '\\t')\n-\tp++;\n-      /* Handle -D options.  */ \n-      if (p[0] == '-' && p[1] == 'D') {\n-\tq = &p[2];\n-\twhile (*p && *p != ' ' && *p != '\\t')\n-\t  p++;\n-\tif (*p != 0)\n-\t  *p++= 0;\n-\tif (debug_output)\n-\t  output_line_directive (fp, &outbuf, 0, same_file);\n-\tmake_definition (q);\n-\twhile (*p == ' ' || *p == '\\t')\n-\t  p++;\n-      } else if (p[0] == '-' && p[1] == 'A') {\n-\t/* Handle -A options (assertions).  */ \n-\tchar *assertion;\n-\tchar *past_name;\n-\tchar *value;\n-\tchar *past_value;\n-\tchar *termination;\n-\tint save_char;\n-\n-\tassertion = &p[2];\n-\tpast_name = assertion;\n-\t/* Locate end of name.  */\n-\twhile (*past_name && *past_name != ' '\n-\t       && *past_name != '\\t' && *past_name != '(')\n-\t  past_name++;\n-\t/* Locate `(' at start of value.  */\n-\tvalue = past_name;\n-\twhile (*value && (*value == ' ' || *value == '\\t'))\n-\t  value++;\n-\tif (*value++ != '(')\n-\t  abort ();\n-\twhile (*value && (*value == ' ' || *value == '\\t'))\n-\t  value++;\n-\tpast_value = value;\n-\t/* Locate end of value.  */\n-\twhile (*past_value && *past_value != ' '\n-\t       && *past_value != '\\t' && *past_value != ')')\n-\t  past_value++;\n-\ttermination = past_value;\n-\twhile (*termination && (*termination == ' ' || *termination == '\\t'))\n-\t  termination++;\n-\tif (*termination++ != ')')\n-\t  abort ();\n-\tif (*termination && *termination != ' ' && *termination != '\\t')\n-\t  abort ();\n-\t/* Temporarily null-terminate the value.  */\n-\tsave_char = *termination;\n-\t*termination = '\\0';\n-\t/* Install the assertion.  */\n-\tmake_assertion (\"-A\", assertion);\n-\t*termination = (char) save_char;\n-\tp = termination;\n-\twhile (*p == ' ' || *p == '\\t')\n-\t  p++;\n-      } else {\n-\tabort ();\n-      }\n-    }\n-  }\n-\n   /* Now handle the command line options.  */\n \n   /* Do -U's, -D's and -A's in the order they were seen.  */\n@@ -10217,8 +10073,6 @@ initialize_builtins (inp, outp)\n     install ((U_CHAR *) \"__STDC__\", -1, T_CONST, \"1\", -1);\n     install ((U_CHAR *) \"__STDC_VERSION__\", -1, T_CONST, \"199409L\", -1);\n   }\n-  if (objc)\n-    install ((U_CHAR *) \"__OBJC__\", -1, T_CONST, \"1\", -1);\n /*  This is supplied using a -D by the compiler driver\n     so that it is present only when truly compiling with GNU C.  */\n /*  install ((U_CHAR *) \"__GNUC__\", -1, T_CONST, \"2\", -1);  */"}, {"sha": "a8c0213314c4b3211a5f0e730dc38b80ef5fe188", "filename": "gcc/ch/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fch%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fch%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flang-specs.h?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n   {\"@chill\",\n      {\"cpp -lang-chill %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU CHILL does not support -C without using -E}}\\\n-        -undef -D__GNUCHILL__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__GNUCHILL__=%v1 -D__GNUC_MINOR__=%v2\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:-D__OPTIMIZE__} %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional} %{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\"}, {"sha": "910be7fab77f8e6b586dfb120627d5f45ead455c", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -33,7 +33,7 @@ Boston, MA 02111-1307, USA.  */\n      \"%{E|M|MM:cpp -lang-c++ %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C++ does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-\t-undef -D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus -D__GNUC_MINOR__=%v2\\\n+\t-D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -D__STRICT_ANSI__} %{!undef:%{!ansi:%p} %P}\\\n \t%{!fno-exceptions:-D__EXCEPTIONS}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} %{trigraphs}\\\n@@ -43,7 +43,7 @@ Boston, MA 02111-1307, USA.  */\n       %{!E:%{!M:%{!MM:cc1plus %i %1 %2\\\n                             -lang-c++ %{nostdinc*} %{C} %{A*} %{I*} %{P} %I\\\n                             %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-                            -undef -D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus\\\n+                            -D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus\\\n                             -D__GNUC_MINOR__=%v2\\\n                             %{ansi:-trigraphs -D__STRICT_ANSI__} %{!undef:%{!ansi:%p} %P}\\\n                             %{!fno-exceptions:-D__EXCEPTIONS}\\\n@@ -64,7 +64,7 @@ Boston, MA 02111-1307, USA.  */\n    {\"cpp -lang-c++ %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C++ does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-\t-undef -D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus -D__GNUC_MINOR__=%v2\\\n+\t-D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -D__STRICT_ANSI__} %{!undef:%{!ansi:%p} %P}\\\n \t%{!fno-exceptions:-D__EXCEPTIONS}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} %{trigraphs}\\"}, {"sha": "0c151434fdaaed709e73def4bf299d87af8e7550", "filename": "gcc/cppinit.c", "status": "modified", "additions": 1, "deletions": 57, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -204,10 +204,6 @@ static void append_include_chain\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t struct cpp_pending *,\n \t\t\t\t\t\t char *, int));\n \n-#ifdef CPP_PREDEFINES\n-static void install_predefs\t\tPARAMS ((cpp_reader *));\n-#endif\n-\n /* Last argument to append_include_chain: chain to use */\n enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };\n \n@@ -627,6 +623,7 @@ initialize_builtins (pfile)\n   cpp_install (pfile, NAME(\"__WCHAR_TYPE__\"),\t  T_CONST, WCHAR_TYPE, -1);\n   cpp_install (pfile, NAME(\"__USER_LABEL_PREFIX__\"), T_CONST, user_label_prefix, -1);\n   cpp_install (pfile, NAME(\"__REGISTER_PREFIX__\"),  T_CONST, REGISTER_PREFIX, -1);\n+  cpp_install (pfile, NAME(\"__HAVE_BUILTIN_SETJMP__\"), T_CONST, \"1\", -1);\n   if (!CPP_TRADITIONAL (pfile))\n     {\n       cpp_install (pfile, NAME(\"__STDC__\"),\t  T_STDC,  0, -1);\n@@ -657,44 +654,6 @@ initialize_builtins (pfile)\n     }\n }\n \n-/* Subroutine of cpp_start_read.  Installs the predefined macros\n-   and assertions found in CPP_PREDEFINES.\n-\n-   CPP_PREDEFINES is a string of -D and -A options separated by\n-   whitespace, like this:\n-   \"-D__unix__ -D__sparc__ -Asystem(unix) -Amachine(sparc)\" */\n-#ifdef CPP_PREDEFINES\n-static void\n-install_predefs (pfile)\n-     cpp_reader *pfile;\n-{\n-  char *p = (char *) alloca (strlen (CPP_PREDEFINES) + 1);\n-  char *q;\n-  strcpy (p, CPP_PREDEFINES);\n-\n-  while (*p)\n-    {\n-      while (*p == ' ' || *p == '\\t') p++;\n-      if (*p != '-')\n-\tabort();\n-      p = q = p + 2;\n-\n-      while (*p && *p != ' ' && *p != '\\t') p++;\n-      if (*p != 0)\n-\t*p++= 0;\n-      if (CPP_OPTIONS (pfile)->debug_output)\n-\toutput_line_command (pfile, 0, same_file);\n-\n-      if (q[-1] == 'D')\n-\tcpp_define (pfile, q);\n-      else if (q[-1] == 'A')\n-\tcpp_assert (pfile, q);\n-      else\n-\tabort ();\n-    }\n-}\n-#endif\n-\n /* Another subroutine of cpp_start_read.  This one sets up to do\n    dependency-file output. */\n static void\n@@ -850,13 +809,6 @@ cpp_start_read (pfile, fname)\n      and option processing.  */\n   initialize_builtins (pfile);\n \n-#ifdef CPP_PREDEFINES\n-  /* Do standard #defines and assertions\n-     that identify system and machine type.  */\n-  if (!opts->inhibit_predefs)\n-    install_predefs (pfile);\n-#endif\n-\n   /* Do -U's, -D's and -A's in the order they were seen.  */\n   p = opts->pending->define_head;\n   while (p)\n@@ -1621,8 +1573,6 @@ cpp_handle_option (pfile, argc, argv)\n \t      opts->pending->assert_tail = NULL;\n \t      opts->pending->define_head = NULL;\n \t      opts->pending->define_tail = NULL;\n-\t      \n-\t      opts->inhibit_predefs = 1;\n \t    }\n \t}\n \tbreak;\n@@ -1682,11 +1632,6 @@ cpp_handle_option (pfile, argc, argv)\n \t  opts->remap = 1;\n \tbreak;\n       \n-      case 'u':\n-\tif (!strcmp (argv[i], \"-undef\"))\n-\t  opts->inhibit_predefs = 1;\n-\tbreak;\n-      \n       case '\\0': /* JF handle '-' as file name meaning stdin or stdout */\n \tif (opts->in_fname == NULL)\n \t  opts->in_fname = \"\";\n@@ -1789,7 +1734,6 @@ Switches:\\n\\\n   -D<macro>=<val>           Define a <macro> with <val> as its value\\n\\\n   -A<question> (<answer>)   Assert the <answer> to <question>\\n\\\n   -U<macro>                 Undefine <macro> \\n\\\n-  -u or -undef              Do not predefine any macros\\n\\\n   -v                        Display the version number\\n\\\n   -H                        Print the name of header files as they are used\\n\\\n   -C                        Do not discard comments\\n\\"}, {"sha": "ccf8f929642de3be0dfd46525b1079095be4cc57", "filename": "gcc/cpplib.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -453,7 +453,6 @@ struct cpp_options {\n   char *include_prefix;\n   int include_prefix_len;\n \n-  char inhibit_predefs;\n   char no_standard_includes;\n   char no_standard_cplusplus_includes;\n "}, {"sha": "5f2031c8861c4506fbee76bbb799fd33be976c5d", "filename": "gcc/f/lang-specs.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Ff%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Ff%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-specs.h?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -38,7 +38,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    {\"cpp -lang-c %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-\t-undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+\t-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -$ -D__STRICT_ANSI__}\\\n \t%{!undef:%P} -D_LANGUAGE_FORTRAN %{trigraphs} \\\n \t%c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} -traditional\\\n@@ -88,7 +88,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    {\"cpp -lang-c %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I \\\n       %{C:%{!E:%eGNU C does not support -C without using -E}} \\\n       %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} \\\n-      -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 \\\n+      -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 \\\n       %{ansi:-trigraphs -$ -D__STRICT_ANSI__} \\\n       %{!undef:%P} -D_LANGUAGE_FORTRAN %{trigraphs} \\\n       %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} -traditional \\"}, {"sha": "dc321422488e08216fb21b64eb64cbc360c0f25c", "filename": "gcc/gcc.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -592,7 +592,7 @@ static struct compiler default_compilers[] =\n \t%{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi|std=*:%{!std=gnu*:-trigraphs -D__STRICT_ANSI__}}\\\n \t%{!undef:%{!ansi:%{!std=*:%p}%{std=gnu*:%p}} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -606,7 +606,7 @@ static struct compiler default_compilers[] =\n                   %{std*} %{nostdinc*} %{A*} %{I*} %I\\\n                   %{!Q:-quiet} -dumpbase %b.c %{d*} %{m*} %{a*}\\\n                   %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-                  -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+                  -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t\t  %{ansi|std=*:%{!std=gnu*:-trigraphs -D__STRICT_ANSI__}}\\\n \t\t  %{!undef:%{!ansi:%{!std=*:%p}%{std=gnu*:%p}} %P} %{trigraphs}\\\n                   %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -629,7 +629,7 @@ static struct compiler default_compilers[] =\n \t%{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi|std=*:%{!std=gnu*:-trigraphs -D__STRICT_ANSI__}}\\\n \t%{!undef:%{!ansi:%{!std=*:%p}%{std=gnu*:%p}} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -657,7 +657,7 @@ static struct compiler default_compilers[] =\n \t%{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi|std=*:%{!std=gnu*:-trigraphs -D__STRICT_ANSI__}}\\\n \t%{!undef:%{!ansi:%{!std=*:%p}%{std=gnu*:%p}} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -674,7 +674,7 @@ static struct compiler default_compilers[] =\n     cpp %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{std=*:%{!std=gnu*:-trigraphs -D__STRICT_ANSI__}}\\\n \t%{!undef:%{!std=*:%p}%{std=gnu*:%p} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -705,7 +705,7 @@ static struct compiler default_compilers[] =\n    {\"cpp -lang-asm %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} %{trigraphs}\\\n-        -undef -$ %{!undef:%p %P} -D__ASSEMBLER__ \\\n+        -$ %{!undef:%p %P} -D__ASSEMBLER__ \\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n \t%{ffast-math:-D__FAST_MATH__}\\\n         %{traditional} %{ftraditional:-traditional}\\"}, {"sha": "b9e187005f10b513ec4136a16e9a1e4b7cc5fda5", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507df939403988c14389eb006304dee8975b2250/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507df939403988c14389eb006304dee8975b2250/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=507df939403988c14389eb006304dee8975b2250", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n    {\"%{E|M|MM:cpp -lang-objc %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -undef -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n     \"%{!M:%{!MM:%{!E:cc1obj %i %1 \\\n \t\t   %{nostdinc*} %{A*} %{I*} %{P} %I\\\n                    %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-\t\t   -undef -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+\t\t   -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t\t   %{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n \t\t   %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n \t\t   %{ffast-math:-D__FAST_MATH__}\\\n@@ -58,7 +58,7 @@ Boston, MA 02111-1307, USA.  */\n    {\"cpp -lang-objc %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -undef -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t %{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\"}]}