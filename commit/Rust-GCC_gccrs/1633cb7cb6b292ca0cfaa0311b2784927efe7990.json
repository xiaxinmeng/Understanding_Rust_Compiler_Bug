{"sha": "1633cb7cb6b292ca0cfaa0311b2784927efe7990", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzM2NiN2NiNmIyOTJjYTBjZmFhMDMxMWIyNzg0OTI3ZWZlNzk5MA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-05-05T11:08:23Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-05-05T11:08:23Z"}, "message": "re PR libfortran/26985 (incorrect matmul result)\n\n\tPR libfortran/26985\n\n\t* m4/matmul.m4: Correct the condition for the memset call,\n\tand remove the unneeded call to size0.\n\t* generated/matmul_r4.c: Regenerate.\n\t* generated/matmul_r8.c: Regenerate.\n\t* generated/matmul_r10.c: Regenerate.\n\t* generated/matmul_r16.c: Regenerate.\n\t* generated/matmul_c4.c: Regenerate.\n\t* generated/matmul_c8.c: Regenerate.\n\t* generated/matmul_c10.c: Regenerate.\n\t* generated/matmul_c16.c: Regenerate.\n\t* generated/matmul_i4.c: Regenerate.\n\t* generated/matmul_i8.c: Regenerate.\n\t* generated/matmul_i16.c: Regenerate.\n\n\t* gfortran.dg/matmul_2.f90: New test.\n\nFrom-SVN: r113552", "tree": {"sha": "0f2a433855ba9689b3899ab64e40e7f90de20310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f2a433855ba9689b3899ab64e40e7f90de20310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1633cb7cb6b292ca0cfaa0311b2784927efe7990", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1633cb7cb6b292ca0cfaa0311b2784927efe7990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1633cb7cb6b292ca0cfaa0311b2784927efe7990", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1633cb7cb6b292ca0cfaa0311b2784927efe7990/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b5d3f3f419ba55d63b378e6730f6cb932aee549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5d3f3f419ba55d63b378e6730f6cb932aee549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5d3f3f419ba55d63b378e6730f6cb932aee549"}], "stats": {"total": 92, "additions": 67, "deletions": 25}, "files": [{"sha": "277f767a38a64102989e0e4a84be824fd2c70f3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -1,3 +1,8 @@\n+2006-05-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26985\n+\t* gfortran.dg/matmul_2.f90: New test.\n+\t\n 2005-05-05  Laurent GUERBY  <laurent@guerby.net>\n \n \t* ada/acats/run_all.sh: Use sync when main not found."}, {"sha": "fb678afb896f5884837267948058be9f4c3147ea", "filename": "gcc/testsuite/gfortran.dg/matmul_2.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_2.f90?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -0,0 +1,21 @@\n+!{ dg-do run }\n+! PR libfortran/26985\n+program matmul_2\n+  implicit none\n+  integer :: a(2,9), b(9,7), c(2,7)\n+  integer :: i, j\n+\n+  a = 1\n+  b = 2\n+  c = 1789789\n+  c(:,1:7:2) = matmul(a,b(:,1:7:2))\n+\n+  if (c(1,1) /= 18 .or. c(2,1) /= 18 .or. &\n+      c(1,2) /= 1789789 .or. c(2,2) /= 1789789 .or. &\n+      c(1,3) /= 18 .or. c(2,3) /= 18 .or. &\n+      c(1,4) /= 1789789 .or. c(2,4) /= 1789789 .or. &\n+      c(1,5) /= 18 .or. c(2,5) /= 18 .or. &\n+      c(1,6) /= 1789789 .or. c(2,6) /= 1789789 .or. &\n+      c(1,7) /= 18 .or. c(2,7) /= 18) call abort\n+      \n+end program matmul_2"}, {"sha": "cb8c0fd1c282af48fd32bc8e9dc905dd6b1e6ba1", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -1,7 +1,23 @@\n+2006-05-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26985\n+\t* m4/matmul.m4: Correct the condition for the memset call,\n+\tand remove the unneeded call to size0.\n+\t* generated/matmul_r4.c: Regenerate.\n+\t* generated/matmul_r8.c: Regenerate.\n+\t* generated/matmul_r10.c: Regenerate.\n+\t* generated/matmul_r16.c: Regenerate.\n+\t* generated/matmul_c4.c: Regenerate.\n+\t* generated/matmul_c8.c: Regenerate.\n+\t* generated/matmul_c10.c: Regenerate.\n+\t* generated/matmul_c16.c: Regenerate.\n+\t* generated/matmul_i4.c: Regenerate.\n+\t* generated/matmul_i8.c: Regenerate.\n+\t* generated/matmul_i16.c: Regenerate.\n+\n 2006-04-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/27360\n-\t\n \t* io/list_read.c (read_logical):  Free line_buffer and free saved.\n \n 2006-04-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>"}, {"sha": "93032f81404727bc0309c00e3a6b3701c810b1b6", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n       const GFC_COMPLEX_10 * restrict abase_n;\n       GFC_COMPLEX_10 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_COMPLEX_10) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_COMPLEX_10) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "03ad0f7df27d35633122f4d065844a0437b55447", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n       const GFC_COMPLEX_16 * restrict abase_n;\n       GFC_COMPLEX_16 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_COMPLEX_16) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_COMPLEX_16) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "84c94cd586fda0c2085cc988163c898941d41c02", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n       const GFC_COMPLEX_4 * restrict abase_n;\n       GFC_COMPLEX_4 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_COMPLEX_4) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_COMPLEX_4) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "f491ea058d7df6a93732a4a99ba61282ebca1237", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n       const GFC_COMPLEX_8 * restrict abase_n;\n       GFC_COMPLEX_8 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_COMPLEX_8) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_COMPLEX_8) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "50d87bb8b0fcc2e2dbfa03045eb977006198edc1", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n       const GFC_INTEGER_16 * restrict abase_n;\n       GFC_INTEGER_16 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_INTEGER_16) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_INTEGER_16) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "12ac630a549190e0a5197ee4483b480ee9cf37a1", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n       const GFC_INTEGER_4 * restrict abase_n;\n       GFC_INTEGER_4 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_INTEGER_4) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_INTEGER_4) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "82b22292632ed7667c87aea688027420e3ca632f", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n       const GFC_INTEGER_8 * restrict abase_n;\n       GFC_INTEGER_8 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_INTEGER_8) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_INTEGER_8) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "73e1e32763085660cacf2be28a08f439919b540b", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n       const GFC_REAL_10 * restrict abase_n;\n       GFC_REAL_10 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_REAL_10) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_REAL_10) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "099c6bf855ed39bf3321917a89d13a1244a7dd70", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n       const GFC_REAL_16 * restrict abase_n;\n       GFC_REAL_16 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_REAL_16) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_REAL_16) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "ca6a4a4360cab9f98b177c9f6e624c3cd4a401ae", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n       const GFC_REAL_4 * restrict abase_n;\n       GFC_REAL_4 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_REAL_4) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_REAL_4) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "1844cdc3da8a0a4163c21efc725fbb1033e5b608", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -193,8 +193,8 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n       const GFC_REAL_8 * restrict abase_n;\n       GFC_REAL_8 bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (GFC_REAL_8) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (GFC_REAL_8) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}, {"sha": "526303c9f3940b6e63c9ef1689985fcd12ff09ba", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1633cb7cb6b292ca0cfaa0311b2784927efe7990/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=1633cb7cb6b292ca0cfaa0311b2784927efe7990", "patch": "@@ -195,8 +195,8 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n       const rtype_name * restrict abase_n;\n       rtype_name bbase_yn;\n \n-      if (rystride == ycount)\n-\tmemset (dest, 0, (sizeof (rtype_name) * size0((array_t *) retarray)));\n+      if (rystride == xcount)\n+\tmemset (dest, 0, (sizeof (rtype_name) * xcount * ycount));\n       else\n \t{\n \t  for (y = 0; y < ycount; y++)"}]}