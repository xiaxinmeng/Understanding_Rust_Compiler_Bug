{"sha": "eda0cd9827081b8c628a2a162321342ebc76eba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRhMGNkOTgyNzA4MWI4YzYyOGEyYTE2MjMyMTM0MmViYzc2ZWJhOQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-12-06T14:05:58Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-12-06T14:05:58Z"}, "message": "typeck.c (build_binary_op): Issue warning if either operand of a comparison operator is a string literal...\n\n\n\t* typeck.c (build_binary_op): Issue warning if either operand of a\n\tcomparison operator is a string literal, except for testing equality\n\tor inequality against NULL.\n\n\t* g++.dg/warn/Wstring-literal-comparison-1.C: New test case.\n\t* g++.dg/warn/Wstring-literal-comparison-2.C: Likewise.\n\t* g++.dg/warn/Wstring-literal-comparison-3.C: Likewise.\n\t* g++.dg/warn/Wstring-literal-comparison-4.C: Likewise.\n\nFrom-SVN: r108120", "tree": {"sha": "c85b88f8c548c77130388b41db29f251d86d0a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c85b88f8c548c77130388b41db29f251d86d0a69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eda0cd9827081b8c628a2a162321342ebc76eba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda0cd9827081b8c628a2a162321342ebc76eba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda0cd9827081b8c628a2a162321342ebc76eba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda0cd9827081b8c628a2a162321342ebc76eba9/comments", "author": null, "committer": null, "parents": [{"sha": "9116d529f6d79990fc5b7315f9f905f9d2ec6fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9116d529f6d79990fc5b7315f9f905f9d2ec6fb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9116d529f6d79990fc5b7315f9f905f9d2ec6fb7"}], "stats": {"total": 138, "additions": 138, "deletions": 0}, "files": [{"sha": "d133d8b144aedc359b4759c592f60a85008ec603", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -1,3 +1,9 @@\n+2005-12-06  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* typeck.c (build_binary_op): Issue warning if either operand of a\n+\tcomparison operator is a string literal, except for testing equality\n+\tor inequality against NULL.\n+\n 2005-12-06  Roger Sayle  <roger@eyesopen.com>\n \n \tPR c++/25263"}, {"sha": "0cae93807107e1bbf884ea410db976951e7f664b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -3089,6 +3089,10 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n     case NE_EXPR:\n       if (warn_float_equal && (code0 == REAL_TYPE || code1 == REAL_TYPE))\n \twarning (0, \"comparing floating point with == or != is unsafe\");\n+      if ((TREE_CODE (orig_op0) == STRING_CST && !integer_zerop (op1))\n+\t  || (TREE_CODE (orig_op1) == STRING_CST && !integer_zerop (op0)))\n+\twarning (OPT_Wstring_literal_comparison,\n+\t\t \"comparison with string literal\");\n \n       build_type = boolean_type_node;\n       if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE\n@@ -3194,6 +3198,11 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n     case GE_EXPR:\n     case LT_EXPR:\n     case GT_EXPR:\n+      if (TREE_CODE (orig_op0) == STRING_CST\n+\t  || TREE_CODE (orig_op1) == STRING_CST)\n+\twarning (OPT_Wstring_literal_comparison,\n+\t\t \"comparison with string literal\");\n+\n       build_type = boolean_type_node;\n       if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE)\n \t   && (code1 == INTEGER_TYPE || code1 == REAL_TYPE))"}, {"sha": "35f45eacce1e11f0816389999bc180e1ee226aec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -1,3 +1,10 @@\n+2005-12-06  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* g++.dg/warn/Wstring-literal-comparison-1.C: New test case.\n+\t* g++.dg/warn/Wstring-literal-comparison-2.C: Likewise.\n+\t* g++.dg/warn/Wstring-literal-comparison-3.C: Likewise.\n+\t* g++.dg/warn/Wstring-literal-comparison-4.C: Likewise.\n+\n 2005-12-06  Roger Sayle  <roger@eyesopen.com>\n \n \tPR c++/25263"}, {"sha": "c5dea463b51d05ad60f0b79dec8eaf6f525c7a18", "filename": "gcc/testsuite/g++.dg/warn/Wstring-literal-comparison-1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-1.C?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -0,0 +1,29 @@\n+/* PR c/7776 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wstring-literal-comparison\" } */\n+\n+int test1(char *ptr)\n+{\n+  return ptr == \"foo\";  /* { dg-warning \"comparison with string\" } */\n+}\n+\n+int test2()\n+{\n+  return \"foo\" != (const char*)0;\n+}\n+\n+int test3()\n+{\n+  return \"foo\" == (const char*)0;\n+}\n+\n+int test4()\n+{\n+  return (const char*)0 != \"foo\";\n+}\n+\n+int test5()\n+{\n+  return (const char*)0 == \"foo\";\n+}\n+"}, {"sha": "3eb91eeca492aeb66aa3e9a7bdd374c37b9b61a6", "filename": "gcc/testsuite/g++.dg/warn/Wstring-literal-comparison-2.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-2.C?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -0,0 +1,29 @@\n+/* PR c/7776 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+int test1(char *ptr)\n+{\n+  return ptr == \"foo\";  /* { dg-warning \"comparison with string\" } */\n+}\n+\n+int test2()\n+{\n+  return \"foo\" != (const char*)0;\n+}\n+\n+int test3()\n+{\n+  return \"foo\" == (const char*)0;\n+}\n+\n+int test4()\n+{\n+  return (const char*)0 != \"foo\";\n+}\n+\n+int test5()\n+{\n+  return (const char*)0 == \"foo\";\n+}\n+"}, {"sha": "f700a51a87b89ecbf3c417ffb5659c08d8a9c408", "filename": "gcc/testsuite/g++.dg/warn/Wstring-literal-comparison-3.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-3.C?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -0,0 +1,29 @@\n+/* PR c/7776 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int test1(char *ptr)\n+{\n+  return ptr == \"foo\";\n+}\n+\n+int test2()\n+{\n+  return \"foo\" != (const char*)0;\n+}\n+\n+int test3()\n+{\n+  return \"foo\" == (const char*)0;\n+}\n+\n+int test4()\n+{\n+  return (const char*)0 != \"foo\";\n+}\n+\n+int test5()\n+{\n+  return (const char*)0 == \"foo\";\n+}\n+"}, {"sha": "27f25f3ca98241aefa58f2c2577e44e299e1d895", "filename": "gcc/testsuite/g++.dg/warn/Wstring-literal-comparison-4.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda0cd9827081b8c628a2a162321342ebc76eba9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstring-literal-comparison-4.C?ref=eda0cd9827081b8c628a2a162321342ebc76eba9", "patch": "@@ -0,0 +1,29 @@\n+/* PR c/7776 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall -Wno-string-literal-comparison\" } */\n+\n+int test1(char *ptr)\n+{\n+  return ptr == \"foo\";\n+}\n+\n+int test2()\n+{\n+  return \"foo\" != (const char*)0;\n+}\n+\n+int test3()\n+{\n+  return \"foo\" == (const char*)0;\n+}\n+\n+int test4()\n+{\n+  return (const char*)0 != \"foo\";\n+}\n+\n+int test5()\n+{\n+  return (const char*)0 == \"foo\";\n+}\n+"}]}