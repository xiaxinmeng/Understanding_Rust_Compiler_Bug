{"sha": "3713f2e213602fdc5119c3b9ece371330ceeac30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcxM2YyZTIxMzYwMmZkYzUxMTljM2I5ZWNlMzcxMzMwY2VlYWMzMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-12T14:21:10Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-12T14:21:10Z"}, "message": "Come up with Deprecated option flag.\n\n2018-06-12  Martin Liska  <mliska@suse.cz>\n\n\t* doc/options.texi: Document Deprecated option flag.\n2018-06-12  Martin Liska  <mliska@suse.cz>\n\n\t* config/i386/i386.opt: Make MPX-related options as Deprecated.\n\t* opt-functions.awk: Handle Deprecated flag.\n\t* opts-common.c (decode_cmdline_option): Handle cl_deprecated\n        and report error.\n\t(read_cmdline_option): Report warning for a deprecated option.\n\t* opts.h (struct cl_option): Add new field cl_deprecated.\n\t(CL_ERR_DEPRECATED): New.\n2018-06-12  Martin Liska  <mliska@suse.cz>\n\n\t* c.opt: Make MPX-related options as Deprecated.\n2018-06-12  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/opt/mpx.C: New test.\n\t* gcc.target/i386/mpx.c: New test.\n\nFrom-SVN: r261497", "tree": {"sha": "592c42292c6ead5672c1bc6944f10d30928368ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/592c42292c6ead5672c1bc6944f10d30928368ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3713f2e213602fdc5119c3b9ece371330ceeac30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3713f2e213602fdc5119c3b9ece371330ceeac30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3713f2e213602fdc5119c3b9ece371330ceeac30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3713f2e213602fdc5119c3b9ece371330ceeac30/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09d69286160a4027dc5c8fc27bff0113f698b25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d69286160a4027dc5c8fc27bff0113f698b25f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d69286160a4027dc5c8fc27bff0113f698b25f"}], "stats": {"total": 95, "additions": 72, "deletions": 23}, "files": [{"sha": "0fb4ea82c50a72d82248344b0f1540692ed8f05c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -1,3 +1,17 @@\n+2018-06-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/i386/i386.opt: Make MPX-related options as Deprecated.\n+\t* opt-functions.awk: Handle Deprecated flag.\n+\t* opts-common.c (decode_cmdline_option): Handle cl_deprecated\n+        and report error.\n+\t(read_cmdline_option): Report warning for a deprecated option.\n+\t* opts.h (struct cl_option): Add new field cl_deprecated.\n+\t(CL_ERR_DEPRECATED): New.\n+\n+2018-06-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/options.texi: Document Deprecated option flag.\n+\n 2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc-arch.h (arc_extras): New enum."}, {"sha": "9ef0a12eb6afc542f122ec119df13739701ab53d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -1,3 +1,7 @@\n+2018-06-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* c.opt: Make MPX-related options as Deprecated.\n+\n 2018-06-08  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-pretty-print.c (c_pretty_printer::statement): Use TDF_NONE"}, {"sha": "b4aefd8d5f636c6de2209e94cea8dd6ad89fbd6b", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -409,7 +409,7 @@ C ObjC C++ ObjC++ Var(warn_char_subscripts) Warning LangEnabledBy(C ObjC C++ Obj\n Warn about subscripts whose type is \\\"char\\\".\n \n Wchkp\n-C ObjC C++ ObjC++ Var(warn_chkp) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+C ObjC C++ ObjC++ Var(warn_chkp) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n Wclobbered\n@@ -1259,86 +1259,86 @@ C ObjC C++ ObjC++\n Where shorter, use canonicalized paths to systems headers.\n \n fcheck-pointer-bounds\n-C ObjC C++ ObjC++ LTO Report Var(flag_check_pointer_bounds)\n+C ObjC C++ ObjC++ LTO Report Var(flag_check_pointer_bounds) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-check-incomplete-type\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_incomplete_type) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_incomplete_type) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-zero-input-bounds-for-main\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_input_bounds_for_main) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_input_bounds_for_main) Init(0) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-first-field-has-own-bounds\n-C ObjC C++ ObjC++ LTO RejectNegative Report Var(flag_chkp_first_field_has_own_bounds)\n+C ObjC C++ ObjC++ LTO RejectNegative Report Var(flag_chkp_first_field_has_own_bounds) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-narrow-bounds\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_narrow_bounds) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_narrow_bounds) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-narrow-to-innermost-array\n-C ObjC C++ ObjC++ LTO RejectNegative Report Var(flag_chkp_narrow_to_innermost_arrray)\n+C ObjC C++ ObjC++ LTO RejectNegative Report Var(flag_chkp_narrow_to_innermost_arrray) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-flexible-struct-trailing-arrays\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_flexible_struct_trailing_arrays)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_flexible_struct_trailing_arrays) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-optimize\n C ObjC C++ ObjC++ LTO Report Var(flag_chkp_optimize) Init(-1)\n \n fchkp-use-fast-string-functions\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_fast_string_functions) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_fast_string_functions) Init(0) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-use-nochk-string-functions\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_nochk_string_functions) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_nochk_string_functions) Init(0) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-use-static-bounds\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_static_bounds) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_static_bounds) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-use-static-const-bounds\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_static_const_bounds) Init(-1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_static_const_bounds) Init(-1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-treat-zero-dynamic-size-as-infinite\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_dynamic_size_as_infinite) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_dynamic_size_as_infinite) Init(0) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-check-read\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_check_read) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_check_read) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-check-write\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_check_write) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_check_write) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-store-bounds\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_store_bounds) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_store_bounds) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-instrument-calls\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_instrument_calls) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_instrument_calls) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-instrument-marked-only\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_instrument_marked_only) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_instrument_marked_only) Init(0) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fchkp-use-wrappers\n-C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_wrappers) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_wrappers) Init(1) Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n static-libmpx\n-Driver\n+Driver Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n static-libmpxwrappers\n-Driver\n+Driver Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n fcilkplus Undocumented"}, {"sha": "a34d4acf1a26e9d4bb1974f2d7d061979a660eeb", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -951,7 +951,7 @@ Target Report Mask(ISA_RTM) Var(ix86_isa_flags) Save\n Support RTM built-in functions and code generation.\n \n mmpx\n-Target Report\n+Target Report Deprecated\n Deprecated in GCC 9.  This switch has no effect.\n \n mmwaitx"}, {"sha": "80f1bd38bc6d3136095819316d53318426b9bdc7", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -280,6 +280,10 @@ The state of this option should be stored in variable @var{var}\n (actually a macro for @code{global_options.x_@var{var}}).\n The way that the state is stored depends on the type of option:\n \n+@item Deprecated\n+The option is deprecated and every usage of such option will\n+result in a warning.\n+\n @itemize @bullet\n @item\n If the option uses the @code{Mask} or @code{InverseMask} properties,"}, {"sha": "2c371e5a23aff06d4b219d4151e0bc749217dc3b", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -136,7 +136,8 @@ function switch_bit_fields (flags)\n \t  flag_init(\"UInteger\", flags) \\\n \t  flag_init(\"Host_Wide_Int\", hwi) \\\n \t  flag_init(\"ToLower\", flags) \\\n-\t  flag_init(\"Report\", flags)\n+\t  flag_init(\"Report\", flags) \\\n+\t  flag_init(\"Deprecated\", flags)\n \n \tsub(\", $\", \"\", result)\n \treturn result"}, {"sha": "004da73e614bb477106c4159751db8088b288d28", "filename": "gcc/opts-common.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -667,6 +667,10 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n   if (!option_ok_for_language (option, lang_mask))\n     errors |= CL_ERR_WRONG_LANG;\n \n+  /* Mark all deprecated options.  */\n+  if (option->cl_deprecated)\n+    errors |= CL_ERR_DEPRECATED;\n+\n   /* Convert the argument to lowercase if appropriate.  */\n   if (arg && option->cl_tolower)\n     {\n@@ -1250,6 +1254,12 @@ read_cmdline_option (struct gcc_options *opts,\n       return;\n     }\n \n+  if (decoded->errors & CL_ERR_DEPRECATED)\n+    {\n+      warning_at (loc, 0, \"deprecated command line option %qs\", opt);\n+      return;\n+    }\n+\n   gcc_assert (!decoded->errors);\n \n   if (!handle_option (opts, opts_set, decoded, lang_mask, DK_UNSPECIFIED,"}, {"sha": "3c4065eae92b483b9ac2675de5189c6ea384879f", "filename": "gcc/opts.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -100,6 +100,8 @@ struct cl_option\n   BOOL_BITFIELD cl_tolower : 1;\n   /* Report argument with -fverbose-asm  */\n   BOOL_BITFIELD cl_report : 1;\n+  /* Deprecated option  */\n+  BOOL_BITFIELD cl_deprecated: 1;\n   /* Offset of field for this option in struct gcc_options, or\n      (unsigned short) -1 if none.  */\n   unsigned short flag_var_offset;\n@@ -209,6 +211,7 @@ extern const unsigned int cl_enums_count;\n #define CL_ERR_NEGATIVE\t\t(1 << 6) /* Negative form of option\n \t\t\t\t\t    not permitted (together\n \t\t\t\t\t    with OPT_SPECIAL_unknown).  */\n+#define CL_ERR_DEPRECATED\t(1 << 7) /* Deprecated option.  */\n \n /* Structure describing the result of decoding an option.  */\n "}, {"sha": "1155851416eb7a7f25be6991cf47f355d2da5c37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -1,3 +1,8 @@\n+2018-06-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/opt/mpx.C: New test.\n+\t* gcc.target/i386/mpx.c: New test.\n+\n 2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* gcc.target/arc/builtin_simdarc.c: Update test."}, {"sha": "6ae0cef879044a5e2c18b321c11ff07b33fed01d", "filename": "gcc/testsuite/g++.dg/opt/mpx.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmpx.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmpx.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmpx.C?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -0,0 +1,5 @@\n+// { dg-do compile }\n+// { dg-options \"-fcheck-pointer-bounds -fchkp-first-field-has-own-bounds\" }\n+\n+// { dg-warning \"deprecated command line option .-fcheck-pointer-bounds.\" \"\" { target *-*-* } 0 }\n+// { dg-warning \"deprecated command line option .-fchkp-first-field-has-own-bounds.\" \"\" { target *-*-* } 0 }"}, {"sha": "f152ae94ecbf5a4945e268ab13f06c1ae2d38cb5", "filename": "gcc/testsuite/gcc.target/i386/mpx.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3713f2e213602fdc5119c3b9ece371330ceeac30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx.c?ref=3713f2e213602fdc5119c3b9ece371330ceeac30", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+// { dg-options \"-mmpx\" }\n+// { dg-warning \"deprecated command line option .-mmpx.\" \"\" { target *-*-* } 0 }"}]}