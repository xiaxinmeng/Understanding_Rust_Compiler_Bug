{"sha": "3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg5MGMyOGFjNWJkMDNiYTMzNGEyMGZiZjk1MThhMzdkY2RiZmU1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-12T07:09:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-12T07:34:16Z"}, "message": "c++: Fix up parsing of attributes for using-directive\n\nAs I've said earlier and added xfails in gen-attrs-76.C test,\nhttps://eel.is/c++draft/namespace.udir#nt:using-directive\nhas attribute-specifier-seq[opt] at the start, not at the end before ;\nas gcc is expecting.\nIMHO we should continue parsing at the end the GNU attributes\nbecause using namespace N __attribute__((strong));, while not supported\nanymore, used to be supported in the past, but my code searches for\nusing namespace N [[gnu::strong]]; didn't reveal anything at all.\n\n2021-08-12  Jakub Jelinek  <jakub@redhat.com>\n\n\t* parser.c (cp_parser_block_declaration): Call\n\tcp_parser_using_directive for C++11 attributes followed by\n\tusing namespace tokens.\n\t(cp_parser_using_directive): Parse C++11 attributes at the start\n\tof the directive rather than at the end, only parse GNU attributes\n\tat the end.\n\n\t* g++.dg/lookup/strong-using.C: Add test using [[gnu::strong]]\n\tas well.\n\t* g++.dg/lookup/strong-using2.C: Likewise.\n\t* g++.dg/cpp0x/gen-attrs-58.C: Move alignas(int) before\n\tusing namespace.\n\t* g++.dg/cpp0x/gen-attrs-59.C: Move alignas(X) before\n\tusing namespace, add tests for alignas before semicolon.\n\t* g++.dg/cpp0x/gen-attrs-76.C: Remove xfails.  Add test for\n\tC++11 attributes on using directive before semicolon.", "tree": {"sha": "c0a6bd0d91ec9e3b4e1890f30ab3f67cea95a467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0a6bd0d91ec9e3b4e1890f30ab3f67cea95a467"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bdf17de1d0ad7a75d3474e672a3a2110919862f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bdf17de1d0ad7a75d3474e672a3a2110919862f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bdf17de1d0ad7a75d3474e672a3a2110919862f"}], "stats": {"total": 67, "additions": 58, "deletions": 9}, "files": [{"sha": "ec885d774f2f80cbd681056951e407cd5d667bcc", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "patch": "@@ -14853,6 +14853,7 @@ cp_parser_block_declaration (cp_parser *parser,\n   /* Peek at the next token to figure out which kind of declaration is\n      present.  */\n   cp_token *token1 = cp_lexer_peek_token (parser->lexer);\n+  size_t attr_idx;\n \n   /* If the next keyword is `asm', we have an asm-definition.  */\n   if (token1->keyword == RID_ASM)\n@@ -14906,6 +14907,18 @@ cp_parser_block_declaration (cp_parser *parser,\n   /* If the next token is `static_assert' we have a static assertion.  */\n   else if (token1->keyword == RID_STATIC_ASSERT)\n     cp_parser_static_assert (parser, /*member_p=*/false);\n+  /* If the next tokens after attributes is `using namespace', then we have\n+     a using-directive.  */\n+  else if ((attr_idx = cp_parser_skip_std_attribute_spec_seq (parser, 1)) != 1\n+\t   && cp_lexer_nth_token_is_keyword (parser->lexer, attr_idx,\n+\t\t\t\t\t     RID_USING)\n+\t   && cp_lexer_nth_token_is_keyword (parser->lexer, attr_idx + 1,\n+\t\t\t\t\t     RID_NAMESPACE))\n+    {\n+      if (statement_p)\n+\tcp_parser_commit_to_tentative_parse (parser);\n+      cp_parser_using_directive (parser);\n+    }\n   /* Anything else must be a simple-declaration.  */\n   else\n     cp_parser_simple_declaration (parser, !statement_p,\n@@ -21609,14 +21622,21 @@ cp_parser_alias_declaration (cp_parser* parser)\n /* Parse a using-directive.\n \n    using-directive:\n-     using namespace :: [opt] nested-name-specifier [opt]\n-       namespace-name ;  */\n+     attribute-specifier-seq [opt] using namespace :: [opt]\n+       nested-name-specifier [opt] namespace-name ;  */\n \n static void\n cp_parser_using_directive (cp_parser* parser)\n {\n   tree namespace_decl;\n-  tree attribs;\n+  tree attribs = cp_parser_std_attribute_spec_seq (parser);\n+  if (cp_lexer_next_token_is (parser->lexer, CPP_SEMICOLON))\n+    {\n+      /* Error during attribute parsing that resulted in skipping\n+\t to next semicolon.  */\n+      cp_parser_require (parser, CPP_SEMICOLON, RT_SEMICOLON);\n+      return;\n+    }\n \n   /* Look for the `using' keyword.  */\n   cp_parser_require_keyword (parser, RID_USING, RT_USING);\n@@ -21633,8 +21653,9 @@ cp_parser_using_directive (cp_parser* parser)\n   /* Get the namespace being used.  */\n   namespace_decl = cp_parser_namespace_name (parser);\n   cp_warn_deprecated_use_scopes (namespace_decl);\n-  /* And any specified attributes.  */\n-  attribs = cp_parser_attributes_opt (parser);\n+  /* And any specified GNU attributes.  */\n+  if (cp_next_tokens_can_be_gnu_attribute_p (parser))\n+    attribs = chainon (attribs, cp_parser_gnu_attributes_opt (parser));\n \n   /* Update the symbol table.  */\n   finish_using_directive (namespace_decl, attribs);"}, {"sha": "dc01722062a81c7b3fba68a39def43865043350f", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-58.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-58.C?ref=3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "patch": "@@ -2,4 +2,4 @@\n // { dg-do compile { target c++11 } }\n \n namespace N { int i; }\n-using namespace N alignas(int); // { dg-warning \"ignored\" }\n+alignas(int) using namespace N; // { dg-warning \"ignored\" }"}, {"sha": "9776dc33745c3e76e9e74c19969ddd10af45852f", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-59.C", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-59.C?ref=3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "patch": "@@ -2,4 +2,11 @@\n // { dg-do compile { target c++11 } }\n \n namespace N {}\n-using namespace N alignas(X); // { dg-error \"declared\" }\n+alignas(X) using namespace N; // { dg-error \"declared\" }\n+namespace O {}\n+using namespace O alignas(X); // { dg-error \"expected\" }\n+// { dg-error \"declared\" \"\" { target *-*-* } .-1 }\n+// { dg-warning \"attribute ignored\" \"\" { target *-*-* } .-2 }\n+namespace P {}\n+using namespace P alignas(int); // { dg-error \"expected\" }\n+// { dg-warning \"attribute ignored\" \"\" { target *-*-* } .-1 }"}, {"sha": "72cd4b33e935d38ce5e3f3aeb59cab7abe7a1795", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-76.C", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-76.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-76.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-76.C?ref=3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "patch": "@@ -3,6 +3,7 @@\n \n namespace N {}\n namespace O { typedef int T; };\n+namespace P {}\n \n void\n foo ()\n@@ -11,7 +12,8 @@ foo ()\n   [[]] __extension__ asm (\"\");\t\t\t// { dg-error \"expected\" }\n   __extension__ [[]] asm (\"\");\t\t\t// { dg-error \"expected\" }\n   [[]] namespace M = ::N;\t\t\t// { dg-error \"expected\" }\n-  [[]] using namespace N;\t\t\t// { dg-bogus \"expected\" \"\" { xfail *-*-* } }\n+  [[]] using namespace N;\t\t\t// { dg-bogus \"expected\" }\n+  using namespace P [[]];\t\t\t// { dg-error \"expected\" }\n   [[]] using O::T;\t\t\t\t// { dg-error \"expected\" }\n   [[]] __label__ foo;\t\t\t\t// { dg-error \"expected\" }\n   [[]] static_assert (true, \"\");\t\t// { dg-error \"expected\" }\n@@ -24,7 +26,8 @@ bar ()\n   [[gnu::unused]] __extension__ asm (\"\");\t// { dg-error \"expected\" }\n   __extension__ [[gnu::unused]] asm (\"\");\t// { dg-error \"expected\" }\n   [[gnu::unused]] namespace M = ::N;\t\t// { dg-error \"expected\" }\n-  [[gnu::unused]] using namespace N;\t\t// { dg-bogus \"expected\" \"\" { xfail *-*-* } }\n+  [[gnu::unused]] using namespace N;\t\t// { dg-bogus \"expected\" }\n+  using namespace P [[gnu::unused]];\t\t// { dg-error \"expected\" }\n   [[gnu::unused]] using O::T;\t\t\t// { dg-error \"expected\" }\n   [[gnu::unused]] __label__ foo;\t\t// { dg-error \"expected\" }\n   [[gnu::unused]] static_assert (true, \"\");\t// { dg-error \"expected\" }"}, {"sha": "2bd821ea219e9b46cba261dfcfda5ab5f0affeb7", "filename": "gcc/testsuite/g++.dg/lookup/strong-using.C", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using.C?ref=3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "patch": "@@ -8,3 +8,12 @@ namespace A\n \n   using namespace B __attribute__ ((strong)); // { dg-warning \"no longer supported\" \"\" }\n }\n+\n+namespace C\n+{\n+  namespace D // { dg-message \"inline namespace\" }\n+  {\n+  }\n+\n+  [[gnu::strong]] using namespace D; // { dg-warning \"no longer supported\" \"\" }\n+}"}, {"sha": "989827cacd35bde4f947b78fb36bf0acd3859ddf", "filename": "gcc/testsuite/g++.dg/lookup/strong-using2.C", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using2.C?ref=3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "patch": "@@ -9,3 +9,12 @@ namespace A\n \n   using namespace B __attribute__ ((strong)); // { dg-bogus \"no longer supported\" }\n }\n+\n+namespace C\n+{\n+  namespace D // { dg-bogus \"inline namespace\" }\n+  {\n+  }\n+\n+  [[gnu::strong]] using namespace D; // { dg-bogus \"no longer supported\" }\n+}"}]}