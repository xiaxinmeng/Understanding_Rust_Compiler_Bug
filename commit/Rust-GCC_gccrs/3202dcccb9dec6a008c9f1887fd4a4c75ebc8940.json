{"sha": "3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwMmRjY2NiOWRlYzZhMDA4YzlmMTg4N2ZkNGE0Yzc1ZWJjODk0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-12-15T20:10:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-12-15T20:10:45Z"}, "message": "re PR rtl-optimization/64316 (ICE in simplify_const_unary_operation after r218503)\n\n\tPR rtl-optimization/64316\n\t* simplify-rtx.c (simplify_relational_operation_1): For\n\t(eq/ne (and x y) x) and (eq/ne (and x y) y) optimizations use\n\tCONST0_RTX instead of const0_rtx.\n\n\t* gcc.dg/pr64316.c: New test.\n\nFrom-SVN: r218762", "tree": {"sha": "efca2aa0c015aa9739b165ce358816d2fd54c6e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efca2aa0c015aa9739b165ce358816d2fd54c6e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8c1674416836c4b4573172b541992ddd12df713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c1674416836c4b4573172b541992ddd12df713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c1674416836c4b4573172b541992ddd12df713"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "07aa48c4ba5dc11dd382e1f3510d46edbb5ec4b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "patch": "@@ -1,3 +1,10 @@\n+2014-12-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/64316\n+\t* simplify-rtx.c (simplify_relational_operation_1): For\n+\t(eq/ne (and x y) x) and (eq/ne (and x y) y) optimizations use\n+\tCONST0_RTX instead of const0_rtx.\n+\n 2014-12-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/62642"}, {"sha": "277288a512c593b76ab9d67f91661cc209ddc7cc", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "patch": "@@ -4561,7 +4561,8 @@ simplify_relational_operation_1 (enum rtx_code code, machine_mode mode,\n       rtx not_y = simplify_gen_unary (NOT, cmp_mode, XEXP (op0, 1), cmp_mode);\n       rtx lhs = simplify_gen_binary (AND, cmp_mode, not_y, XEXP (op0, 0));\n \n-      return simplify_gen_relational (code, mode, cmp_mode, lhs, const0_rtx);\n+      return simplify_gen_relational (code, mode, cmp_mode, lhs,\n+\t\t\t\t      CONST0_RTX (cmp_mode));\n     }\n \n   /* Likewise for (eq/ne (and x y) y).  */\n@@ -4573,7 +4574,8 @@ simplify_relational_operation_1 (enum rtx_code code, machine_mode mode,\n       rtx not_x = simplify_gen_unary (NOT, cmp_mode, XEXP (op0, 0), cmp_mode);\n       rtx lhs = simplify_gen_binary (AND, cmp_mode, not_x, XEXP (op0, 1));\n \n-      return simplify_gen_relational (code, mode, cmp_mode, lhs, const0_rtx);\n+      return simplify_gen_relational (code, mode, cmp_mode, lhs,\n+\t\t\t\t      CONST0_RTX (cmp_mode));\n     }\n \n   /* (eq/ne (bswap x) C1) simplifies to (eq/ne x C2) with C2 swapped.  */"}, {"sha": "2299c78e4279d08b17cd0449d4962641bd676e34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "patch": "@@ -1,5 +1,8 @@\n 2014-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/64316\n+\t* gcc.dg/pr64316.c: New test.\n+\n \tPR rtl-optimization/63804\n \t* gcc.dg/pr63804.c: New test.\n "}, {"sha": "f478aa611785fe154d19f43c4f7624f1bb471ea8", "filename": "gcc/testsuite/gcc.dg/pr64316.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64316.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64316.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64316.c?ref=3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "patch": "@@ -0,0 +1,42 @@\n+/* PR rtl-optimization/64316 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-additional-options \"-mavx2\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+struct S\n+{\n+  unsigned int s;\n+  unsigned long w[];\n+};\n+\n+struct S **s;\n+\n+int\n+foo (struct S *x, struct S *y, struct S *z)\n+{\n+  unsigned int i;\n+  unsigned long *a, *b, *c;\n+  int r = 0;\n+  for (a = x->w, b = y->w, c = z->w, i = 0; i < x->s; i++, a++)\n+    {\n+      unsigned long d = *b++ & *c++;\n+      if (*a != d)\n+\t{\n+\t  r = 1;\n+\t  *a = d;\n+\t}\n+    }\n+  return r;\n+}\n+\n+void\n+bar (int x)\n+{\n+  int p = x - 1;\n+  do\n+    {\n+      foo (s[x], s[x], s[p]);\n+      p--;\n+    }\n+  while (p > 0);\n+}"}]}