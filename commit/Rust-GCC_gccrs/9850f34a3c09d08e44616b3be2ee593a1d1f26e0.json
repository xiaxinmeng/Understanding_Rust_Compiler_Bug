{"sha": "9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1MGYzNGEzYzA5ZDA4ZTQ0NjE2YjNiZTJlZTU5M2ExZDFmMjZlMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2004-05-02T07:48:53Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2004-05-02T07:48:53Z"}, "message": "configure.ac (FLEX, BISON): Only use tools from the build tree if build equals host.\n\n* configure.ac (FLEX, BISON): Only use tools from the build tree\nif build equals host.\n* configure: Rebuilt.\n\nFrom-SVN: r81406", "tree": {"sha": "af036adf42f561c0088ecc7bee94f7449d2a590f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af036adf42f561c0088ecc7bee94f7449d2a590f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/comments", "author": null, "committer": null, "parents": [{"sha": "764678d17d7e22a3b5d087b3f3e1d9a518df9a22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764678d17d7e22a3b5d087b3f3e1d9a518df9a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/764678d17d7e22a3b5d087b3f3e1d9a518df9a22"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "81302ea71e7aa22ced9331f2ad5c74bae1a4259d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "patch": "@@ -1,5 +1,9 @@\n 2004-05-02  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* configure.ac (FLEX, BISON): Only use tools from the build tree\n+\tif build equals host.\n+\t* configure: Rebuilt.\n+\n \t* config/frv/frv-protos.h (frv_expand_epilogue,\n \tfrv_expand_fdpic_call): Add bool argument.\n \t* config/frv/frv.c (frv_function_ok_for_sibcall): New."}, {"sha": "38c2591d4db45a69b85998f1bcd43db914521afc", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "patch": "@@ -1017,7 +1017,7 @@ esac\n     else\n       echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n     fi\n-    cd \"$ac_popdir\"\n+    cd $ac_popdir\n   done\n fi\n \n@@ -5326,7 +5326,7 @@ echo \"${ECHO_T}no\" >&6\n fi\n \n # How about lex?\n-if test -f $srcdir/../flex/skel.c; then\n+if test x${build} = x${host} && test -f $srcdir/../flex/skel.c; then\n   FLEX='$(objdir)/../flex/flex'\n else\n   # Extract the first word of \"flex\", so it can be a program name with args.\n@@ -5369,7 +5369,7 @@ fi\n \n # Bison?\n # The -L switch is so bison can find its skeleton file.\n-if test -f $srcdir/../bison/bison.simple; then\n+if test x${build} = x${host} && test -f $srcdir/../bison/bison.simple; then\n   BISON='$(objdir)/../bison/bison -L $(srcdir)/../bison/'\n else\n   # Extract the first word of \"bison\", so it can be a program name with args."}, {"sha": "799f3ef14003b850be3b494bc8e257d64077eb86", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9850f34a3c09d08e44616b3be2ee593a1d1f26e0/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=9850f34a3c09d08e44616b3be2ee593a1d1f26e0", "patch": "@@ -760,15 +760,15 @@ fi\n # How about lex?\n dnl Don't use AC_PROG_LEX; we insist on flex.\n dnl LEXLIB is not useful in gcc.\n-if test -f $srcdir/../flex/skel.c; then\n+if test x${build} = x${host} && test -f $srcdir/../flex/skel.c; then\n   FLEX='$(objdir)/../flex/flex'\n else\n   AC_CHECK_PROG(FLEX, flex, flex, ${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing flex)\n fi\n \n # Bison?\n # The -L switch is so bison can find its skeleton file.\n-if test -f $srcdir/../bison/bison.simple; then\n+if test x${build} = x${host} && test -f $srcdir/../bison/bison.simple; then\n   BISON='$(objdir)/../bison/bison -L $(srcdir)/../bison/'\n else\n   AC_CHECK_PROG(BISON, bison, bison, ${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing bison)"}]}