{"sha": "7063212f9a3b6db6ae912451963cc184ceff94ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2MzIxMmY5YTNiNmRiNmFlOTEyNDUxOTYzY2MxODRjZWZmOTRlYQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-12-19T09:47:46Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-12-19T09:47:46Z"}, "message": "PR c++/51477 - ICE with invalid NSDMI\n\ngcc/cp/\n\n\tPR c++/51477\n\t* search.c (lookup_member): Get out early on invalid base type.\n\ngcc/testsuite/\n\n\tPR c++/51477\n\t* g++.dg/cpp0x/nsdmi6.C: New test.\n\nFrom-SVN: r182474", "tree": {"sha": "5e2a7c47def5178095642d1ba43b9feecc07a2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e2a7c47def5178095642d1ba43b9feecc07a2c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7063212f9a3b6db6ae912451963cc184ceff94ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7063212f9a3b6db6ae912451963cc184ceff94ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7063212f9a3b6db6ae912451963cc184ceff94ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7063212f9a3b6db6ae912451963cc184ceff94ea/comments", "author": null, "committer": null, "parents": [{"sha": "fac665b24a55893660c3c7e60fb92037181e8f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac665b24a55893660c3c7e60fb92037181e8f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac665b24a55893660c3c7e60fb92037181e8f0c"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "640bf9a909225255d98cc02c647b8e80871995f4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7063212f9a3b6db6ae912451963cc184ceff94ea", "patch": "@@ -1,3 +1,8 @@\n+2011-12-19  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/51477\n+\t* search.c (lookup_member): Get out early on invalid base type.\n+\n 2011-12-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51489"}, {"sha": "0ceb5bc14f8d16abc0d3f820a047619cfeb305bf", "filename": "gcc/cp/search.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=7063212f9a3b6db6ae912451963cc184ceff94ea", "patch": "@@ -1171,7 +1171,9 @@ lookup_member (tree xbasetype, tree name, int protect, bool want_type,\n \n   const char *errstr = 0;\n \n-  if (name == error_mark_node)\n+  if (name == error_mark_node\n+      || xbasetype == NULL_TREE\n+      || xbasetype == error_mark_node)\n     return NULL_TREE;\n \n   gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE);"}, {"sha": "a8c71f2d0a974323dd2f39e72e23625af320ae03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7063212f9a3b6db6ae912451963cc184ceff94ea", "patch": "@@ -1,3 +1,8 @@\n+2011-12-19  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/51477\n+\t* g++.dg/cpp0x/nsdmi6.C: New test.\n+\n 2011-12-19  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray_poly_3.f90: New."}, {"sha": "bb455e778e4c2f1b1294033a5f70f095582603c2", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi6.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7063212f9a3b6db6ae912451963cc184ceff94ea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi6.C?ref=7063212f9a3b6db6ae912451963cc184ceff94ea", "patch": "@@ -0,0 +1,8 @@\n+// Origin PR c++/51477\n+// { dg-options \"-std=c++11\" }\n+\n+struct A\n+{\n+    typedef int int T; // { dg-error \"two or more data types in declaration\" }\n+    struct T x[1] = { 0 }; // { dg-error \"invalid|forward\" }\n+};"}]}