{"sha": "078b5aab3875630d6b09cac4ea4408ef9ba04a00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc4YjVhYWIzODc1NjMwZDZiMDljYWM0ZWE0NDA4ZWY5YmEwNGEwMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-04T13:40:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-04T13:40:54Z"}, "message": "re PR tree-optimization/77399 (Poor code generation for vector casts and loads)\n\n2016-10-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77399\n\t* tree-ssa-forwprop.c (simplify_vector_constructor): Properly\n\tverify the target can convert.\n\n\t* gcc.dg/tree-ssa/forwprop-35.c: Adjust.\n\nFrom-SVN: r240744", "tree": {"sha": "6da5e3efce3d661a41278d83f6d0ec832011bd12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da5e3efce3d661a41278d83f6d0ec832011bd12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/078b5aab3875630d6b09cac4ea4408ef9ba04a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078b5aab3875630d6b09cac4ea4408ef9ba04a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078b5aab3875630d6b09cac4ea4408ef9ba04a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078b5aab3875630d6b09cac4ea4408ef9ba04a00/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b5688997f2bfc90fa512f0bb2d010bf8d7a85b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b5688997f2bfc90fa512f0bb2d010bf8d7a85b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b5688997f2bfc90fa512f0bb2d010bf8d7a85b6"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "e91ec1b349e8c929b1a31e490a4d842cd1264761", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=078b5aab3875630d6b09cac4ea4408ef9ba04a00", "patch": "@@ -1,3 +1,9 @@\n+2016-10-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77399\n+\t* tree-ssa-forwprop.c (simplify_vector_constructor): Properly\n+\tverify the target can convert.\n+\n 2016-10-04  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77833"}, {"sha": "c6b9d87c5abaffdd5daab537b5c0f9b6a7859bcd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=078b5aab3875630d6b09cac4ea4408ef9ba04a00", "patch": "@@ -1,3 +1,8 @@\n+2016-10-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77399\n+\t* gcc.dg/tree-ssa/forwprop-35.c: Adjust.\n+\n 2016-10-04  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77833"}, {"sha": "79053a285d125906a96086b0525688f08399f158", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-35.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-35.c?ref=078b5aab3875630d6b09cac4ea4408ef9ba04a00", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-cddce1\" } */\n+/* { dg-additional-options \"-msse2\" { target { i?86-*-* x86_64-*-* } } } */\n \n typedef int v4si __attribute__((vector_size(16)));\n typedef float v4sf __attribute__((vector_size(16)));\n@@ -14,5 +15,5 @@ v4sf vec_cast_perm(v4si f)\n   return (v4sf){f[1], f[1], f[2], f[3]};\n }\n \n-/* { dg-final { scan-tree-dump-times \"VEC_PERM_EXPR\" 1 \"cddce1\" } } */\n-/* { dg-final { scan-tree-dump-times \"\\\\\\(v4sf\\\\\\) \" 2 \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-times \"VEC_PERM_EXPR\" 1 \"cddce1\" { target { i?86-*-* x86_64-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"\\\\\\(v4sf\\\\\\) \" 2 \"cddce1\" { target { i?86-*-* x86_64-*-* } } } } */"}, {"sha": "ed11b32fbfe8fa36831ca016ae1e2ba58e65f9c8", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078b5aab3875630d6b09cac4ea4408ef9ba04a00/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=078b5aab3875630d6b09cac4ea4408ef9ba04a00", "patch": "@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"builtins.h\"\n #include \"tree-cfgcleanup.h\"\n #include \"cfganal.h\"\n+#include \"optabs-tree.h\"\n \n /* This pass propagates the RHS of assignment statements into use\n    sites of the LHS of the assignment.  It's basically a specialized\n@@ -2037,6 +2038,13 @@ simplify_vector_constructor (gimple_stmt_iterator *gsi)\n \t  != TYPE_VECTOR_SUBPARTS (TREE_TYPE (orig))))\n     return false;\n \n+  tree tem;\n+  if (conv_code != ERROR_MARK\n+      && (! supportable_convert_operation (conv_code, type, TREE_TYPE (orig),\n+\t\t\t\t\t   &tem, &conv_code)\n+\t  || conv_code == CALL_EXPR))\n+    return false;\n+\n   if (maybe_ident)\n     {\n       if (conv_code == ERROR_MARK)"}]}