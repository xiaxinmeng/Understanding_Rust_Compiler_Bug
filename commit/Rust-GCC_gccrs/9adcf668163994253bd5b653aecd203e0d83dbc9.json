{"sha": "9adcf668163994253bd5b653aecd203e0d83dbc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkY2Y2NjgxNjM5OTQyNTNiZDViNjUzYWVjZDIwM2UwZDgzZGJjOQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-11-19T22:33:36Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-11-19T22:33:36Z"}, "message": "re PR sanitizer/63939 (Massive asan failures (356) on darwin)\n\n\tPR sanitizer/63939\n\t* c-c++-common/asan/global-overflow-1.c: Allow extra spaces after\n\tstack pointer address, to fit darwin output when symbolizer is not\n\tpresent.\n\t* c-c++-common/asan/heap-overflow-1.c: Likewise.\n\t* c-c++-common/asan/memcmp-1.c: Likewise.\n\t* c-c++-common/asan/misalign-1.c: Likewise.\n\t* c-c++-common/asan/misalign-2.c: Likewise.\n\t* c-c++-common/asan/null-deref-1.c: Likewise.\n\t* c-c++-common/asan/stack-overflow-1.c: Likewise.\n\t* c-c++-common/asan/strlen-overflow-1.c: Likewise.\n\t* c-c++-common/asan/strncpy-overflow-1.c: Likewise.\n\t* c-c++-common/asan/use-after-free-1.c: Likewise.\n\t* g++.dg/asan/deep-stack-uaf-1.C: Likewise.\n\t* g++.dg/asan/deep-tail-call-1.C: Likewise.\n\t* g++.dg/asan/large-func-test-1.C: Likewise.\n\nFrom-SVN: r217817", "tree": {"sha": "a0c09b989f1ffcb2b978ffbe3191cfe7136c95b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0c09b989f1ffcb2b978ffbe3191cfe7136c95b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9adcf668163994253bd5b653aecd203e0d83dbc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9adcf668163994253bd5b653aecd203e0d83dbc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9adcf668163994253bd5b653aecd203e0d83dbc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9adcf668163994253bd5b653aecd203e0d83dbc9/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c59493a0f1a2088b0f93af3c680cc124189dd0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c59493a0f1a2088b0f93af3c680cc124189dd0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c59493a0f1a2088b0f93af3c680cc124189dd0b"}], "stats": {"total": 87, "additions": 53, "deletions": 34}, "files": [{"sha": "52d2919937cdcead6dc729b29d1599e8e11a62bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -1,3 +1,22 @@\n+2014-11-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR sanitizer/63939\n+\t* c-c++-common/asan/global-overflow-1.c: Allow extra spaces after\n+\tstack pointer address, to fit darwin output when symbolizer is not\n+\tpresent.\n+\t* c-c++-common/asan/heap-overflow-1.c: Likewise.\n+\t* c-c++-common/asan/memcmp-1.c: Likewise.\n+\t* c-c++-common/asan/misalign-1.c: Likewise.\n+\t* c-c++-common/asan/misalign-2.c: Likewise.\n+\t* c-c++-common/asan/null-deref-1.c: Likewise.\n+\t* c-c++-common/asan/stack-overflow-1.c: Likewise.\n+\t* c-c++-common/asan/strlen-overflow-1.c: Likewise.\n+\t* c-c++-common/asan/strncpy-overflow-1.c: Likewise.\n+\t* c-c++-common/asan/use-after-free-1.c: Likewise.\n+\t* g++.dg/asan/deep-stack-uaf-1.C: Likewise.\n+\t* g++.dg/asan/deep-tail-call-1.C: Likewise.\n+\t* g++.dg/asan/large-func-test-1.C: Likewise.\n+\n 2014-11-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR sanitizer/63939"}, {"sha": "8dd75df10bf2cca19e5d1b87b2a75d47605334ba", "filename": "gcc/testsuite/c-c++-common/asan/global-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -23,6 +23,6 @@ int main() {\n }\n \n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*global-overflow-1.c:20|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r).*\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*global-overflow-1.c:20|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r).*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ is located 0 bytes to the right of global variable\" } */\n /* { dg-output \".*YYY\\[^\\n\\r]* of size 10\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "0377a6cf468c83a9c44d31a68632df76a0d08910", "filename": "gcc/testsuite/c-c++-common/asan/heap-overflow-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -24,8 +24,8 @@ int main(int argc, char **argv) {\n }\n \n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:21|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*heap-overflow-1.c:21|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 0 bytes to the right of 10-byte region\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:19|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*heap-overflow-1.c:19|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "c582e3d0cb358bb3acd82406f6413d96e9d88cc2", "filename": "gcc/testsuite/c-c++-common/asan/memcmp-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -16,5 +16,5 @@ main ()\n }\n \n /* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)memcmp |\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)memcmp |\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "f1cca1665cc3ef8ff065c1e06e39bed8ce124efe", "filename": "gcc/testsuite/c-c++-common/asan/misalign-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmisalign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmisalign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmisalign-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -39,5 +39,5 @@ main ()\n /* { dg-output \"ERROR: AddressSanitizer:\\[^\\n\\r]*on address\\[^\\n\\r]*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ at pc 0x\\[0-9a-f\\]+ bp 0x\\[0-9a-f\\]+ sp 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*READ of size 4 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*foo(\\[^\\n\\r]*misalign-1.c:1\\[01]|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*misalign-1.c:3\\[45]|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*foo(\\[^\\n\\r]*misalign-1.c:1\\[01]|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*misalign-1.c:3\\[45]|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "9f400b4c1f26fb641682c570556ab9584bc99e04", "filename": "gcc/testsuite/c-c++-common/asan/misalign-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmisalign-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmisalign-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmisalign-2.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -39,5 +39,5 @@ main ()\n /* { dg-output \"ERROR: AddressSanitizer:\\[^\\n\\r]*on address\\[^\\n\\r]*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ at pc 0x\\[0-9a-f\\]+ bp 0x\\[0-9a-f\\]+ sp 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*READ of size 4 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*baz(\\[^\\n\\r]*misalign-2.c:2\\[23]|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*misalign-2.c:3\\[45]|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*baz(\\[^\\n\\r]*misalign-2.c:2\\[23]|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*misalign-2.c:3\\[45]|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "45d35ac2de3589675571114a7de3dd00848ab230", "filename": "gcc/testsuite/c-c++-common/asan/null-deref-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -18,5 +18,5 @@ int main()\n \n /* { dg-output \"ERROR: AddressSanitizer:? SEGV on unknown address\\[^\\n\\r]*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ \\[^\\n\\r]*pc 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*    #0 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*NullDeref\\[^\\n\\r]* (\\[^\\n\\r]*null-deref-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*null-deref-1.c:15|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*    #0 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*NullDeref\\[^\\n\\r]* (\\[^\\n\\r]*null-deref-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*null-deref-1.c:15|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "34d6aab48e61ebdc48ac4b4381412caf674af419", "filename": "gcc/testsuite/c-c++-common/asan/stack-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstack-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstack-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstack-overflow-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -18,6 +18,6 @@ int main() {\n }\n \n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*stack-overflow-1.c:16|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*stack-overflow-1.c:16|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*Address 0x\\[0-9a-f\\]+ is located in stack of thread T0.*(\\n|\\r\\n|\\r)\" */\n /* { dg-output \"\\[^\\n\\r]*in main.*stack-overflow-1.c.*(\\n|\\r\\n|\\r)\" */"}, {"sha": "86a79fd5d06453497438d9541130966b54854a0e", "filename": "gcc/testsuite/c-c++-common/asan/strlen-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrlen-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrlen-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrlen-overflow-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -20,5 +20,5 @@ int main () {\n }\n \n /* { dg-output \"READ of size 2 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*strlen-overflow-1.c:19|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*strlen-overflow-1.c:19|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 0 bytes to the right of global variable\" } */"}, {"sha": "45759ae8e9562b725c33d82000d688fd8dfc41d7", "filename": "gcc/testsuite/c-c++-common/asan/strncpy-overflow-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrncpy-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrncpy-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrncpy-overflow-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -13,9 +13,9 @@ int main(int argc, char **argv) {\n }\n \n /* { dg-output \"WRITE of size \\[0-9\\]* at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)strncpy|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*strncpy-overflow-1.c:11|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)strncpy|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*strncpy-overflow-1.c:11|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 0 bytes to the right of 9-byte region\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*strncpy-overflow-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*strncpy-overflow-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "75d8f9faa2d8b2a290a5ae7d9869218873746ac2", "filename": "gcc/testsuite/c-c++-common/asan/use-after-free-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-free-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-free-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-free-1.c?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -12,11 +12,11 @@ int main() {\n /* { dg-output \"ERROR: AddressSanitizer:? heap-use-after-free on address\\[^\\n\\r]*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ at pc 0x\\[0-9a-f\\]+ bp 0x\\[0-9a-f\\]+ sp 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*READ of size 1 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*use-after-free-1.c:9|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*use-after-free-1.c:9|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 5 bytes inside of 10-byte region .0x\\[0-9a-f\\]+,0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*freed by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)free|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*use-after-free-1.c:8|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)free|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*use-after-free-1.c:8|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*previously allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*use-after-free-1.c:7|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*use-after-free-1.c:7|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "4ae91f7ea52ef493db8a7641672909ce467452be", "filename": "gcc/testsuite/g++.dg/asan/deep-stack-uaf-1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fdeep-stack-uaf-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fdeep-stack-uaf-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fdeep-stack-uaf-1.C?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -34,6 +34,6 @@ int main() {\n }\n \n // { dg-output \"ERROR: AddressSanitizer:? heap-use-after-free on address.*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #37 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*DeepFree\\[^\\n\\r]*36|\\[(\\]).*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #99 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*DeepFree\\[^\\n\\r]*98|\\[(\\]).*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #116 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*DeepFree\\[^\\n\\r]*115|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #37 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*DeepFree\\[^\\n\\r]*36|\\[(\\]).*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #99 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*DeepFree\\[^\\n\\r]*98|\\[(\\]).*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #116 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*DeepFree\\[^\\n\\r]*115|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }"}, {"sha": "a7cdb9fd61391b7950bcbe0d6402b365ece5e01d", "filename": "gcc/testsuite/g++.dg/asan/deep-tail-call-1.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fdeep-tail-call-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fdeep-tail-call-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fdeep-tail-call-1.C?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -15,8 +15,8 @@ int main() {\n }\n \n // { dg-output \"AddressSanitizer:? global-buffer-overflow.*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #0 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*call4\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #1 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*call3\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #2 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*call2\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #3 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*call1\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #4 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*main\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*call4\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #1 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*call3\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #2 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*call2\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #3 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*call1\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #4 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*main\\[^\\n\\r]*|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }"}, {"sha": "0c1b6ce0c616d7505fa21fb05913fdf32ce942d4", "filename": "gcc/testsuite/g++.dg/asan/large-func-test-1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Flarge-func-test-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adcf668163994253bd5b653aecd203e0d83dbc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Flarge-func-test-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Flarge-func-test-1.C?ref=9adcf668163994253bd5b653aecd203e0d83dbc9", "patch": "@@ -38,8 +38,8 @@ int main() {\n // { dg-output \"ERROR: AddressSanitizer:? heap-buffer-overflow on address\\[^\\n\\r]*\" }\n // { dg-output \"0x\\[0-9a-f\\]+ at pc 0x\\[0-9a-f\\]+ bp 0x\\[0-9a-f\\]+ sp 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*READ of size 4 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #0 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*LargeFunction\\[^\\n\\r]*(large-func-test-1.C:18|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in \\[^\\n\\r]*LargeFunction\\[^\\n\\r]*(large-func-test-1.C:18|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 44 bytes to the right of 400-byte region.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #0( 0x\\[0-9a-f\\]+ (in _*(interceptor_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"    #1|) 0x\\[0-9a-f\\]+ (in (operator new|(wrap|)_*_Zn\\[aw\\]\\[mj\\])|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #0( 0x\\[0-9a-f\\]+ +(in _*(interceptor_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"    #1|) 0x\\[0-9a-f\\]+ +(in (operator new|(wrap|)_*_Zn\\[aw\\]\\[mj\\])|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }"}]}