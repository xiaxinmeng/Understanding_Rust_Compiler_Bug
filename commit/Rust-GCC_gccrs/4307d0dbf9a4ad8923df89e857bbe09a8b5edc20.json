{"sha": "4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwN2QwZGJmOWE0YWQ4OTIzZGY4OWU4NTdiYmUwOWE4YjVlZGMyMA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-06-19T14:10:02Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-06-19T14:10:02Z"}, "message": "posix-threads.h (_Jv_ThreadDebugSuspend): Declare.\n\n        * include/posix-threads.h (_Jv_ThreadDebugSuspend): Declare.\n        (_Jv_ThreadDebugResume): Declare.\n        (_Jv_ThreadDebugSuspendCount): Declare.\n        * posix-threads.cc (_Jv_ThreadDebugSuspend): New function.\n        (_Jv_ThreadDebugSuspendCount): New function.\n        (_Jv_ThreadDebugResume): New function.\n\n        * include/win32-threads.h (_Jv_ThreadDebugSuspend): Declare.\n        (_Jv_ThreadDebugResume): Declare.\n        (_Jv_ThreadDebugSuspendCount): Declare.\n        * win32-threads.cc (_Jv_ThreadDebugSuspend): New function.\n        (_Jv_ThreadDebugSuspendCount): New function.\n        (_Jv_ThreadDebugResume): New function.\n\nFrom-SVN: r114769", "tree": {"sha": "cba1686875bb38c64a587e119f6080157e135309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cba1686875bb38c64a587e119f6080157e135309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e665d18088d627471f61fd2917f98ff17fccf4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e665d18088d627471f61fd2917f98ff17fccf4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e665d18088d627471f61fd2917f98ff17fccf4b"}], "stats": {"total": 86, "additions": 82, "deletions": 4}, "files": [{"sha": "e67b5f888784b4f7053f15846963fe5aa3e16c35", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "patch": "@@ -1,3 +1,20 @@\n+2006-06-19  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/posix-threads.h (_Jv_ThreadDebugSuspend): Declare.\n+\t(_Jv_ThreadDebugResume): Declare.\n+\t(_Jv_ThreadDebugSuspendCount): Declare.\n+\t* posix-threads.cc (_Jv_ThreadDebugSuspend): New function.\n+\t(_Jv_ThreadDebugSuspendCount): New function.\n+\t(_Jv_ThreadDebugResume): New function.\n+\n+\t* include/win32-threads.h (_Jv_ThreadDebugSuspend): Declare.\n+\t(_Jv_ThreadDebugResume): Declare.\n+\t(_Jv_ThreadDebugSuspendCount): Declare.\n+\t* win32-threads.cc (_Jv_ThreadDebugSuspend): New function.\n+\t(_Jv_ThreadDebugSuspendCount): New function.\n+\t(_Jv_ThreadDebugResume): New function.\n+\t\n+\n 2006-06-16  Andrew Haley  <aph@redhat.com>\n \n \t* java/lang/natClassLoader.cc (_Jv_NewClassFromInitializer): Don't"}, {"sha": "fe648b79c0c8568eac3c09c784bd836d2c3428e7", "filename": "libjava/include/posix-threads.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Finclude%2Fposix-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Finclude%2Fposix-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix-threads.h?ref=4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "patch": "@@ -1,7 +1,7 @@\n // -*- c++ -*-\n // posix-threads.h - Defines for using POSIX threads.\n \n-/* Copyright (C) 1998, 1999, 2001, 2003  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2001, 2003, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -366,4 +366,18 @@ void _Jv_ThreadWait (void);\n \n void _Jv_ThreadInterrupt (_Jv_Thread_t *data);\n \n+// Increases a thread's suspend count. If the thread's previous\n+// suspend count was zero, i.e., it is not suspended, this function\n+// will suspend the thread. This function may be used to suspend\n+// any thread from any other thread (or suspend itself).\n+void _Jv_ThreadDebugSuspend (_Jv_Thread_t* data);\n+\n+// Decreases a thread's suspend count. If the thread's new thread\n+// count is zero, the thread is resumed. This function may be used\n+// by any thread to resume any other thread.\n+void _Jv_ThreadDebugResume (_Jv_Thread_t* data);\n+\n+// Get the suspend count for a thread\n+jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data);\n+\n #endif /* __JV_POSIX_THREADS__ */"}, {"sha": "4089b223ddbe05f5cb8e119acca7f5fb70176aad", "filename": "libjava/include/win32-threads.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Finclude%2Fwin32-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Finclude%2Fwin32-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32-threads.h?ref=4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "patch": "@@ -1,7 +1,7 @@\n // -*- c++ -*-\n // win32-threads.h - Defines for using Win32 threads.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006 Free Software\n    Foundation\n \n    This file is part of libgcj.\n@@ -184,6 +184,20 @@ void _Jv_ThreadInterrupt (_Jv_Thread_t *data);\n // See java/lang/natWin32Process.cc (waitFor) for an example.\n HANDLE _Jv_Win32GetInterruptEvent (void);\n \n+// Increases a thread's suspend count. If the thread's previous\n+// suspend count was zero, i.e., it is not suspended, this function\n+// will suspend the thread. This function may be used to suspend\n+// any thread from any other thread (or suspend itself).\n+void _Jv_ThreadDebugSuspend (_Jv_Thread_t* data);\n+\n+// Decreases a thread's suspend count. If the thread's new thread\n+// count is zero, the thread is resumed. This function may be used\n+// by any thread to resume any other thread.\n+void _Jv_ThreadDebugResume (_Jv_Thread_t* data);\n+\n+// Get the suspend count for a thread\n+jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data);\n+\n // Remove defines from <windows.h> that conflict with various things in libgcj code\n \n #undef TRUE"}, {"sha": "305b51a50d11a5aa1aa493353d5ec84de97b32b4", "filename": "libjava/posix-threads.cc", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Fposix-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Fposix-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fposix-threads.cc?ref=4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "patch": "@@ -1,6 +1,6 @@\n // posix-threads.cc - interface between libjava and POSIX threads.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2004  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2004, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -505,6 +505,22 @@ _Jv_ThreadWait (void)\n   pthread_mutex_unlock (&daemon_mutex);\n }\n \n+void\n+_Jv_ThreadDebugSuspend (_Jv_Thread_t* data)\n+{\n+}\n+\n+void\n+_Jv_ThreadDebugResume (_Jv_Thread_t* data)\n+{\n+}\n+\n+jint\n+_Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data)\n+{\n+  return -1;\n+}\n+\n #if defined(SLOW_PTHREAD_SELF)\n \n #include \"sysdep/locks.h\""}, {"sha": "92b569eef0143677c1d6b636c16174972a0fc25d", "filename": "libjava/win32-threads.cc", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Fwin32-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4307d0dbf9a4ad8923df89e857bbe09a8b5edc20/libjava%2Fwin32-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32-threads.cc?ref=4307d0dbf9a4ad8923df89e857bbe09a8b5edc20", "patch": "@@ -1,6 +1,6 @@\n // win32-threads.cc - interface between libjava and Win32 threads.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006 Free Software\n    Foundation, Inc.\n \n    This file is part of libgcj.\n@@ -419,3 +419,20 @@ _Jv_ThreadInterrupt (_Jv_Thread_t *data)\n   SetEvent (data->interrupt_event);\n   LeaveCriticalSection (&data->interrupt_mutex);\n }\n+\n+void\n+_Jv_ThreadDebugSuspend (_Jv_Thread_t* data)\n+{\n+}\n+\n+void\n+_Jv_ThreadDebugResume (_Jv_Thread_t* data)\n+{\n+}\n+\n+jint\n+_Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data)\n+{\n+  return -1;\n+}\n+"}]}