{"sha": "047811579f09048ed538674fd5251b35e5a92025", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3ODExNTc5ZjA5MDQ4ZWQ1Mzg2NzRmZDUyNTFiMzVlNWE5MjAyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-24T08:33:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-24T08:33:17Z"}, "message": "cgraphunit: Avoid code generation differences based on -w/TREE_NO_WARNING [PR94277]\n\nThe following testcase FAILs with -fcompare-debug, but not because -g vs.\n-g0 would make a difference, but because the second compilation is done with\n-w in order not to emit warnings twice and -w seems to affect the *.gkd dump\ncontent.\nThis is because TREE_NO_WARNING flag, or warn_unused_function does affect\nnot just whether a warning/pedwarn is printed, but also whether we set\nTREE_PUBLIC on such decls.\nThe following patch makes sure we set it regardless of anything warning\nrelated (TREE_NO_WARNING or warn_unused_function).\n\n2020-03-24  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/94277\n\t* cgraphunit.c (check_global_declaration): For DECL_EXTERNAL and\n\tnon-TREE_PUBLIC non-DECL_ARTIFICIAL FUNCTION_DECLs, set TREE_PUBLIC\n\tregardless of whether TREE_NO_WARNING is set on it or whether\n\twarn_unused_function is true or not.\n\n\t* gcc.dg/pr94277.c: New test.", "tree": {"sha": "bac35c8aefea3535b343e6c82f465d2772a46401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac35c8aefea3535b343e6c82f465d2772a46401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/047811579f09048ed538674fd5251b35e5a92025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047811579f09048ed538674fd5251b35e5a92025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047811579f09048ed538674fd5251b35e5a92025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047811579f09048ed538674fd5251b35e5a92025/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75c24a08d697d6442fe6c26142f0559f803af977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c24a08d697d6442fe6c26142f0559f803af977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c24a08d697d6442fe6c26142f0559f803af977"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "a45d7ba876b40ad60b7cab54231f23f10cf1b767", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047811579f09048ed538674fd5251b35e5a92025/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047811579f09048ed538674fd5251b35e5a92025/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=047811579f09048ed538674fd5251b35e5a92025", "patch": "@@ -1,3 +1,11 @@\n+2020-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/94277\n+\t* cgraphunit.c (check_global_declaration): For DECL_EXTERNAL and\n+\tnon-TREE_PUBLIC non-DECL_ARTIFICIAL FUNCTION_DECLs, set TREE_PUBLIC\n+\tregardless of whether TREE_NO_WARNING is set on it or whether\n+\twarn_unused_function is true or not.\n+\n 2020-03-23  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/90275"}, {"sha": "3415660440e8bdcb20756941f01f6918437f4b45", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047811579f09048ed538674fd5251b35e5a92025/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047811579f09048ed538674fd5251b35e5a92025/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=047811579f09048ed538674fd5251b35e5a92025", "patch": "@@ -1068,15 +1068,15 @@ check_global_declaration (symtab_node *snode)\n       && DECL_INITIAL (decl) == 0\n       && DECL_EXTERNAL (decl)\n       && ! DECL_ARTIFICIAL (decl)\n-      && ! TREE_NO_WARNING (decl)\n-      && ! TREE_PUBLIC (decl)\n-      && (warn_unused_function\n-\t  || snode->referred_to_p (/*include_self=*/false)))\n+      && ! TREE_PUBLIC (decl))\n     {\n-      if (snode->referred_to_p (/*include_self=*/false))\n+      if (TREE_NO_WARNING (decl))\n+\t;\n+      else if (snode->referred_to_p (/*include_self=*/false))\n \tpedwarn (input_location, 0, \"%q+F used but never defined\", decl);\n       else\n-\twarning (OPT_Wunused_function, \"%q+F declared %<static%> but never defined\", decl);\n+\twarning (OPT_Wunused_function, \"%q+F declared %<static%> but never \"\n+\t\t\t\t       \"defined\", decl);\n       /* This symbol is effectively an \"extern\" declaration now.  */\n       TREE_PUBLIC (decl) = 1;\n     }"}, {"sha": "13e609015801127d4b5c37289954f51dcad54829", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047811579f09048ed538674fd5251b35e5a92025/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047811579f09048ed538674fd5251b35e5a92025/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=047811579f09048ed538674fd5251b35e5a92025", "patch": "@@ -1,3 +1,8 @@\n+2020-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/94277\n+\t* gcc.dg/pr94277.c: New test.\n+\n 2020-03-23  Jeff Law  <law@redhat.com>\n \n \tPR target/94144"}, {"sha": "dfe38e401a9857017cec436c595ef0d436b4fe94", "filename": "gcc/testsuite/gcc.dg/pr94277.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047811579f09048ed538674fd5251b35e5a92025/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94277.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047811579f09048ed538674fd5251b35e5a92025/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94277.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94277.c?ref=047811579f09048ed538674fd5251b35e5a92025", "patch": "@@ -0,0 +1,11 @@\n+/* PR debug/94277 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fcompare-debug\" } */\n+\n+static void foo (void);\t/* { dg-warning \"used but never defined\" } */\n+\n+void\n+bar (void)\n+{\n+  foo ();\n+}"}]}