{"sha": "e6524a510041359e35f0a5b6acdfb43cadce7568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1MjRhNTEwMDQxMzU5ZTM1ZjBhNWI2YWNkZmI0M2NhZGNlNzU2OA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-10-29T15:24:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-10-29T15:24:38Z"}, "message": "re PR fortran/41777 (Wrong-code with POINTER-returning GENERIC function)\n\n2009-10-29  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41777\n        * trans-expr.c\n        * (gfc_conv_procedure_call,gfc_conv_expr_reference):\n        Use for generic EXPR_FUNCTION the attributes of the specific\n        function.\n\n2009-10-29  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41777\n        gfortran.dg/associated_target_3.f90: New testcase.\n\nFrom-SVN: r153706", "tree": {"sha": "c9e83336694092c16def5c20c43e8d5a89489f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9e83336694092c16def5c20c43e8d5a89489f2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6524a510041359e35f0a5b6acdfb43cadce7568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6524a510041359e35f0a5b6acdfb43cadce7568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6524a510041359e35f0a5b6acdfb43cadce7568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6524a510041359e35f0a5b6acdfb43cadce7568/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb44440252221f3791b513782a492e3a3292c2a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb44440252221f3791b513782a492e3a3292c2a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb44440252221f3791b513782a492e3a3292c2a4"}], "stats": {"total": 74, "additions": 62, "deletions": 12}, "files": [{"sha": "323bd431709e4b61e15d41e83d6d5060da080399", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e6524a510041359e35f0a5b6acdfb43cadce7568", "patch": "@@ -1,3 +1,10 @@\n+2009-10-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41777\n+\t* trans-expr.c (gfc_conv_procedure_call,gfc_conv_expr_reference):\n+\tUse for generic EXPR_FUNCTION the attributes of the specific\n+\tfunction.\n+\n 2009-10-29  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/41860"}, {"sha": "9b6f8ea0a4f4ec98896f2db7b91b4ac6aae994f3", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=e6524a510041359e35f0a5b6acdfb43cadce7568", "patch": "@@ -599,10 +599,8 @@ gfc_check_associated (gfc_expr *pointer, gfc_expr *target)\n \n   where = &pointer->where;\n \n-  if (pointer->expr_type == EXPR_VARIABLE)\n-    attr1 = gfc_variable_attr (pointer, NULL);\n-  else if (pointer->expr_type == EXPR_FUNCTION)\n-    attr1 = pointer->symtree->n.sym->attr;\n+  if (pointer->expr_type == EXPR_VARIABLE || pointer->expr_type == EXPR_FUNCTION)\n+    attr1 = gfc_expr_attr (pointer);\n   else if (pointer->expr_type == EXPR_NULL)\n     goto null_arg;\n   else\n@@ -624,10 +622,8 @@ gfc_check_associated (gfc_expr *pointer, gfc_expr *target)\n   if (target->expr_type == EXPR_NULL)\n     goto null_arg;\n \n-  if (target->expr_type == EXPR_VARIABLE)\n-    attr2 = gfc_variable_attr (target, NULL);\n-  else if (target->expr_type == EXPR_FUNCTION)\n-    attr2 = target->symtree->n.sym->attr;\n+  if (target->expr_type == EXPR_VARIABLE || target->expr_type == EXPR_FUNCTION)\n+    attr2 = gfc_expr_attr (target);\n   else\n     {\n       gfc_error (\"'%s' argument of '%s' intrinsic at %L must be a pointer \""}, {"sha": "7eddbd4e28a4531c00d8a72493a216241868a921", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=e6524a510041359e35f0a5b6acdfb43cadce7568", "patch": "@@ -2870,8 +2870,11 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t\t   through arg->name.  */\n \t\tconv_arglist_function (&parmse, arg->expr, arg->name);\n \t      else if ((e->expr_type == EXPR_FUNCTION)\n-\t\t\t  && e->symtree->n.sym->attr.pointer\n-\t\t\t  && fsym && fsym->attr.target)\n+\t\t\t&& ((e->value.function.esym\n+\t\t\t     && e->value.function.esym->result->attr.pointer)\n+\t\t\t    || (!e->value.function.esym\n+\t\t\t\t&& e->symtree->n.sym->attr.pointer))\n+\t\t\t&& fsym && fsym->attr.target)\n \t\t{\n \t\t  gfc_conv_expr (&parmse, e);\n \t\t  parmse.expr = gfc_build_addr_expr (NULL_TREE, parmse.expr);\n@@ -4368,8 +4371,12 @@ gfc_conv_expr_reference (gfc_se * se, gfc_expr * expr)\n     }\n \n   if (expr->expr_type == EXPR_FUNCTION\n-\t&& expr->symtree->n.sym->attr.pointer\n-\t&& !expr->symtree->n.sym->attr.dimension)\n+      && ((expr->value.function.esym\n+\t   && expr->value.function.esym->result->attr.pointer\n+\t   && !expr->value.function.esym->result->attr.dimension)\n+\t  || (!expr->value.function.esym\n+\t      && expr->symtree->n.sym->attr.pointer\n+\t      && !expr->symtree->n.sym->attr.dimension)))\n     {\n       se->want_pointer = 1;\n       gfc_conv_expr (se, expr);"}, {"sha": "1255e8f87e13b4a10478149598493dbb5c109d16", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6524a510041359e35f0a5b6acdfb43cadce7568", "patch": "@@ -1,3 +1,8 @@\n+2009-10-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41777\n+\tgfortran.dg/associated_target_3.f90: New testcase.\n+\n 2009-10-29  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* gfortran.dg/lto/pr41764_0.f: New."}, {"sha": "e6a1d0f0adbd4daa1cae1122c957d3b8eb294278", "filename": "gcc/testsuite/gfortran.dg/associated_target_3.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6524a510041359e35f0a5b6acdfb43cadce7568/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_3.f90?ref=e6524a510041359e35f0a5b6acdfb43cadce7568", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+!\n+! PR fortran/41777\n+!\n+module m\n+type t2\n+ integer :: i\n+end type t2\n+interface f\n+ module procedure f2\n+end interface f\n+contains\n+function f2(a)\n+  type(t2), pointer :: f2,a\n+  f2 => a\n+end function f2\n+end module m\n+\n+use m\n+implicit none\n+type(t2), pointer :: a\n+allocate(a)\n+if (.not. associated(a,f(a))) call abort()\n+call cmpPtr(a,f2(a))\n+call cmpPtr(a,f(a))\n+deallocate(a)\n+contains\n+  subroutine cmpPtr(a,b)\n+    type(t2), pointer :: a,b\n+!    print *, associated(a,b)\n+    if (.not. associated (a, b)) call abort()\n+  end subroutine cmpPtr\n+end\n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}