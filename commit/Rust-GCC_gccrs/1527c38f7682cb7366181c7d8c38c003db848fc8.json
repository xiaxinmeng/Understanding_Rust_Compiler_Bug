{"sha": "1527c38f7682cb7366181c7d8c38c003db848fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyN2MzOGY3NjgyY2I3MzY2MTgxYzdkOGMzOGMwMDNkYjg0OGZjOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-30T01:18:27Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-30T01:18:27Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1350", "tree": {"sha": "ce64d44b1ecf5e68327ef8852e64996526c7e8bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce64d44b1ecf5e68327ef8852e64996526c7e8bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1527c38f7682cb7366181c7d8c38c003db848fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1527c38f7682cb7366181c7d8c38c003db848fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1527c38f7682cb7366181c7d8c38c003db848fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1527c38f7682cb7366181c7d8c38c003db848fc8/comments", "author": null, "committer": null, "parents": [{"sha": "bf1e8c4ddced2188ae3239ac62573d73eccbd634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1e8c4ddced2188ae3239ac62573d73eccbd634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1e8c4ddced2188ae3239ac62573d73eccbd634"}], "stats": {"total": 27, "additions": 6, "deletions": 21}, "files": [{"sha": "3dafea79e38cc964a3f370f8f8ad48ee3fdb5a01", "filename": "gcc/dbxout.c", "status": "modified", "additions": 6, "deletions": 21, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1527c38f7682cb7366181c7d8c38c003db848fc8/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1527c38f7682cb7366181c7d8c38c003db848fc8/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=1527c38f7682cb7366181c7d8c38c003db848fc8", "patch": "@@ -688,7 +688,7 @@ dbxout_type_methods (type)\n      label names.  For now, disable output of dbx info for them.  */\n   {\n     char *ptr = IDENTIFIER_POINTER (type_encoding);\n-    /* Avoid strchr or index since those names aren't universal.  */\n+    /* This should use index.  (mrs) */\n     while (*ptr && *ptr != '<') ptr++;\n     if (*ptr != 0)\n       {\n@@ -1501,7 +1501,7 @@ dbxout_symbol (decl, local)\n \t  /* else it is something we handle like a normal variable.  */\n \t}\n \n-      DECL_RTL (decl) = eliminate_regs (DECL_RTL (decl));\n+      DECL_RTL (decl) = eliminate_regs (DECL_RTL (decl), 0, 0);\n #ifdef LEAF_REG_REMAP\n       if (leaf_function)\n \tleaf_renumber_regs_insn (DECL_RTL (decl));\n@@ -1517,9 +1517,7 @@ dbxout_symbol (decl, local)\n \t{\n \t  regno = REGNO (DECL_RTL (decl));\n \t  if (regno >= FIRST_PSEUDO_REGISTER)\n-\t    regno = reg_renumber[REGNO (DECL_RTL (decl))];\n-\t  if (regno < 0)\n-\t    break;\n+\t    return;\n \t}\n       else if (GET_CODE (DECL_RTL (decl)) == SUBREG)\n \t{\n@@ -1534,10 +1532,10 @@ dbxout_symbol (decl, local)\n \t    {\n \t      regno = REGNO (value);\n \t      if (regno >= FIRST_PSEUDO_REGISTER)\n-\t\tregno = reg_renumber[REGNO (value)];\n-\t      if (regno >= 0)\n-\t\tregno += offset;\n+\t\treturn;\n+\t      regno += offset;\n \t    }\n+\t  alter_subreg (DECL_RTL (decl));\n \t}\n \n       /* The kind-of-variable letter depends on where\n@@ -1589,19 +1587,6 @@ dbxout_symbol (decl, local)\n \t  current_sym_code = N_RSYM;\n \t  current_sym_value = DBX_REGISTER_NUMBER (regno);\n \t}\n-      else if (GET_CODE (DECL_RTL (decl)) == SUBREG)\n-\t{\n-\t  rtx value = DECL_RTL (decl);\n-\t  int offset = 0;\n-\t  while (GET_CODE (value) == SUBREG)\n-\t    {\n-\t      offset += SUBREG_WORD (value);\n-\t      value = SUBREG_REG (value);\n-\t    }\n-\t  letter = 'r';\n-\t  current_sym_code = N_RSYM;\n-\t  current_sym_value = DBX_REGISTER_NUMBER (REGNO (value) + offset);\n-\t}\n       else if (GET_CODE (DECL_RTL (decl)) == MEM\n \t       && (GET_CODE (XEXP (DECL_RTL (decl), 0)) == MEM\n \t\t   || (GET_CODE (XEXP (DECL_RTL (decl), 0)) == REG"}]}