{"sha": "a0df14998e226b604a1b4799f602a02090dbdbac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkZjE0OTk4ZTIyNmI2MDRhMWI0Nzk5ZjYwMmEwMjA5MGRiZGJhYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-10-16T11:59:39Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-10-16T11:59:39Z"}, "message": "Add selftests for bitmap_set_range.\n\n2017-10-16  Martin Liska  <mliska@suse.cz>\n\n\t* sbitmap.c (bitmap_bit_in_range_p_checking): New function.\n\t(test_set_range): Likewise.\n\t(test_range_functions): Rename to ...\n\t(test_bit_in_range): ... this.\n\t(sbitmap_c_tests): Add new test.\n\nFrom-SVN: r253785", "tree": {"sha": "cd4337fe1c8120f2a28bfd1a1f352c705acf21fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd4337fe1c8120f2a28bfd1a1f352c705acf21fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0df14998e226b604a1b4799f602a02090dbdbac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0df14998e226b604a1b4799f602a02090dbdbac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0df14998e226b604a1b4799f602a02090dbdbac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0df14998e226b604a1b4799f602a02090dbdbac/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1274f08639511172419f11c86be6c953f0c826a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1274f08639511172419f11c86be6c953f0c826a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1274f08639511172419f11c86be6c953f0c826a7"}], "stats": {"total": 68, "additions": 65, "deletions": 3}, "files": [{"sha": "3a85f8c9579fe5194601d8129a1fd6d3addc9bd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0df14998e226b604a1b4799f602a02090dbdbac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0df14998e226b604a1b4799f602a02090dbdbac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0df14998e226b604a1b4799f602a02090dbdbac", "patch": "@@ -1,3 +1,11 @@\n+2017-10-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* sbitmap.c (bitmap_bit_in_range_p_checking): New function.\n+\t(test_set_range): Likewise.\n+\t(test_range_functions): Rename to ...\n+\t(test_bit_in_range): ... this.\n+\t(sbitmap_c_tests): Add new test.\n+\n 2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/aarch64/arm_neon.h (vdot_u32, vdotq_u32, vdot_s32, vdotq_s32): New."}, {"sha": "fdcf5393e53160d2ba958872ac00f386bdeccfd1", "filename": "gcc/sbitmap.c", "status": "modified", "additions": 57, "deletions": 3, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0df14998e226b604a1b4799f602a02090dbdbac/gcc%2Fsbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0df14998e226b604a1b4799f602a02090dbdbac/gcc%2Fsbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.c?ref=a0df14998e226b604a1b4799f602a02090dbdbac", "patch": "@@ -823,11 +823,64 @@ namespace selftest {\n \n /* Selftests for sbitmaps.  */\n \n+/* Checking function that uses both bitmap_bit_in_range_p and\n+   loop of bitmap_bit_p and verifies consistent results.  */\n \n-/* Verify range functions for sbitmap.  */\n+static bool\n+bitmap_bit_in_range_p_checking (sbitmap s, unsigned int start,\n+\t\t\t\tunsigned end)\n+{\n+  bool r1 = bitmap_bit_in_range_p (s, start, end);\n+  bool r2 = false;\n+\n+  for (unsigned int i = start; i <= end; i++)\n+    if (bitmap_bit_p (s, i))\n+      {\n+\tr2 = true;\n+\tbreak;\n+      }\n+\n+  ASSERT_EQ (r1, r2);\n+  return r1;\n+}\n+\n+/* Verify bitmap_set_range functions for sbitmap.  */\n+\n+static void\n+test_set_range ()\n+{\n+  sbitmap s = sbitmap_alloc (16);\n+  bitmap_clear (s);\n+\n+  bitmap_set_range (s, 0, 1);\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 0, 0));\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 1, 15));\n+  bitmap_set_range (s, 15, 1);\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 1, 14));\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 15, 15));\n+\n+  s = sbitmap_alloc (1024);\n+  bitmap_clear (s);\n+  bitmap_set_range (s, 512, 1);\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 0, 511));\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 513, 1023));\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 512, 512));\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 508, 512));\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 508, 513));\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 508, 511));\n+\n+  bitmap_clear (s);\n+  bitmap_set_range (s, 512, 64);\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 0, 511));\n+  ASSERT_FALSE (bitmap_bit_in_range_p_checking (s, 512 + 64, 1023));\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 512, 512));\n+  ASSERT_TRUE (bitmap_bit_in_range_p_checking (s, 512 + 63, 512 + 63));\n+}\n+\n+/* Verify bitmap_bit_in_range_p functions for sbitmap.  */\n \n static void\n-test_range_functions ()\n+test_bit_in_range ()\n {\n   sbitmap s = sbitmap_alloc (1024);\n   bitmap_clear (s);\n@@ -900,7 +953,8 @@ test_range_functions ()\n void\n sbitmap_c_tests ()\n {\n-  test_range_functions ();\n+  test_set_range ();\n+  test_bit_in_range ();\n }\n \n } // namespace selftest"}]}