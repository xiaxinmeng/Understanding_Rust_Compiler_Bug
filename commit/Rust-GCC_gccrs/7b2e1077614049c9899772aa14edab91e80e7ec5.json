{"sha": "7b2e1077614049c9899772aa14edab91e80e7ec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IyZTEwNzc2MTQwNDljOTg5OTc3MmFhMTRlZGFiOTFlODBlN2VjNQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-04-10T03:40:00Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-04-10T03:40:00Z"}, "message": "mips.h (ASM_OUTPUT_ALIGNED_DECL_COMMON): Add additional information to .comm directive.\n\n2002-04-09  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/mips.h (ASM_OUTPUT_ALIGNED_DECL_COMMON): Add additional\n\tinformation to .comm directive.\n\nFrom-SVN: r52109", "tree": {"sha": "0ec004e3c4961b9c4fda3c7a8bc66bd90915255f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ec004e3c4961b9c4fda3c7a8bc66bd90915255f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b2e1077614049c9899772aa14edab91e80e7ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b2e1077614049c9899772aa14edab91e80e7ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b2e1077614049c9899772aa14edab91e80e7ec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b2e1077614049c9899772aa14edab91e80e7ec5/comments", "author": null, "committer": null, "parents": [{"sha": "ef98ad7b6c7497649c066ec2be0a44f340038dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef98ad7b6c7497649c066ec2be0a44f340038dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef98ad7b6c7497649c066ec2be0a44f340038dda"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "fb618b47dfba657398b53e01e137cc04f1dc5132", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b2e1077614049c9899772aa14edab91e80e7ec5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b2e1077614049c9899772aa14edab91e80e7ec5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b2e1077614049c9899772aa14edab91e80e7ec5", "patch": "@@ -1,3 +1,8 @@\n+2002-04-09  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/mips.h (ASM_OUTPUT_ALIGNED_DECL_COMMON): Add additional\n+\tinformation to .comm directive.\n+\n 2002-04-09  Richard Henderson  <rth@redhat.com>\n \n \tPR c/5078\n@@ -886,7 +891,7 @@ Sun Mar 31 14:43:24 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* gcc.c (LIBGCC_SPEC): Folded %L and duplicate %G here...\n \t(LINK_COMMAND_SPEC): ... from here.\n-\t(init_gcc_specs): Duplicate it here too, omitting \n+\t(init_gcc_specs): Duplicate it here too, omitting\n \tshared_name in the second copy.\n \t(init_spec): Test for duplicate\n \t* config/i386/djgpp.h (LINK_COMMAND_SPEC): Remove `%L %G'.\n@@ -926,7 +931,7 @@ Sun Mar 31 14:43:24 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* dwarf2out.c (dwarf2out_define): Remove start_source_file call,\n \tCPP will start the file for us.\n- \n+\n 2002-03-30  Richard Henderson  <rth@redhat.com>\n \n \tPR target/5446\n@@ -1296,7 +1301,7 @@ objc:\n \t* gcc-common.c (lang_mark_false_label_stack): Remove.\n \t* ggc.h (lang_mark_false_label_stack): Similarly.\n \n-2002-03-26  Vladimir Makarov  <vmakarov@redhat.com> \n+2002-03-26  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* pa/pa-pro-end.h (CPP_PREDEFINES): Add -D__pro__.\n \n@@ -1380,7 +1385,7 @@ objc:\n \t* stmt.c (expand_end_case_type): When warn_switch_enum /\n \t-Wswitch-enum, perform switch checks.\n \tFix PR c/5044.\n-\t\n+\n 2002-03-26  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (reload_mulsi3, reload_mulsi_compare0, reload_muladdsi)\n@@ -1406,7 +1411,7 @@ objc:\n 2002-03-26  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* config/s390/s390.c (s390_emit_epilogue): Change epilogue\n-\tcode to not restoring global registers. \n+\tcode to not restoring global registers.\n \n 2002-03-26  Neil Booth  <neil@daikokuya.demon.co.uk>\n "}, {"sha": "6db24f4dd3ecd6f33becaea77ae7d1860cdfa45f", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b2e1077614049c9899772aa14edab91e80e7ec5/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b2e1077614049c9899772aa14edab91e80e7ec5/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=7b2e1077614049c9899772aa14edab91e80e7ec5", "patch": "@@ -2311,7 +2311,7 @@ extern enum reg_class mips_char_to_class[256];\n    memory and loading that memory location into a register of CLASS2.\n \n    Do not define this macro if its value would always be zero.  */\n-\n+#if 0\n #define SECONDARY_MEMORY_NEEDED(CLASS1, CLASS2, MODE)\t\t\t\\\n   ((!TARGET_DEBUG_H_MODE\t\t\t\t\t\t\\\n     && GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\\\n@@ -2320,7 +2320,7 @@ extern enum reg_class mips_char_to_class[256];\n    || (TARGET_FLOAT64 && !TARGET_64BIT && (MODE) == DFmode\t\t\\\n        && ((GR_REG_CLASS_P (CLASS1) && CLASS2 == FP_REGS)\t\t\\\n \t   || (GR_REG_CLASS_P (CLASS2) && CLASS1 == FP_REGS))))\n-\n+#endif\n /* The HI and LO registers can only be reloaded via the general\n    registers.  Condition code registers can only be loaded to the\n    general registers, and from the floating point registers.  */\n@@ -4485,8 +4485,11 @@ while (0)\n \t    (SIZE));\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n-      mips_declare_object (STREAM, NAME, \"\\n\\t.comm\\t\", \",%u\\n\",\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tmips_declare_object (STREAM, NAME, \"\\n\\t.comm\\t\", \",%u\",\t\\\n \t  (SIZE));\t\t\t\t\t\t\t\\\n+\tfprintf ((STREAM), \"%u\\n\", ((unsigned)(ALIGN) / BITS_PER_UNIT));\\\n+      }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n "}]}