{"sha": "c1f5148401fd1afdc30a3b6d34257186376b98a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFmNTE0ODQwMWZkMWFmZGMzMGEzYjZkMzQyNTcxODYzNzZiOThhNg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-18T12:09:18Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-18T12:09:18Z"}, "message": "re PR target/49541 (TLS support partially broken in 64-bit mode)\n\n\tPR target/49541\n\t* testsuite/lib/libgomp.exp (libgomp_init): Don't add -lgomp to\n\tldflags.\n\nFrom-SVN: r176393", "tree": {"sha": "9f281d7feb82ada563f179cfa8a42ab0ce3a3c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f281d7feb82ada563f179cfa8a42ab0ce3a3c7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1f5148401fd1afdc30a3b6d34257186376b98a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f5148401fd1afdc30a3b6d34257186376b98a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1f5148401fd1afdc30a3b6d34257186376b98a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f5148401fd1afdc30a3b6d34257186376b98a6/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eac8f5bd080b92a2228d000248e38e6f21001898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac8f5bd080b92a2228d000248e38e6f21001898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eac8f5bd080b92a2228d000248e38e6f21001898"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9225401fb3563a375c2896ae886f3f1d82178146", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1f5148401fd1afdc30a3b6d34257186376b98a6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1f5148401fd1afdc30a3b6d34257186376b98a6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=c1f5148401fd1afdc30a3b6d34257186376b98a6", "patch": "@@ -1,3 +1,9 @@\n+2011-07-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/49541\n+\t* testsuite/lib/libgomp.exp (libgomp_init): Don't add -lgomp to\n+\tldflags.\n+\n 2011-07-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/linux/wait.h (do_spin): New inline, largely copied"}, {"sha": "976543dab17cb8720637b263820f5e6f57f280d3", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1f5148401fd1afdc30a3b6d34257186376b98a6/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1f5148401fd1afdc30a3b6d34257186376b98a6/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=c1f5148401fd1afdc30a3b6d34257186376b98a6", "patch": "@@ -137,7 +137,6 @@ proc libgomp_init { args } {\n         lappend ALWAYS_CFLAGS \"ldflags=-L${blddir}/.libs\"\n     }\n     lappend ALWAYS_CFLAGS \"additional_flags=-I${srcdir}/..\"\n-    lappend ALWAYS_CFLAGS \"ldflags=-lgomp\"\n \n     # We use atomic operations in the testcases to validate results.\n     if { ([istarget i?86-*-*] || [istarget x86_64-*-*])"}]}