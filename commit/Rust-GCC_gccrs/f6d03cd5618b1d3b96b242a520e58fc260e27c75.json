{"sha": "f6d03cd5618b1d3b96b242a520e58fc260e27c75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkMDNjZDU2MThiMWQzYjk2YjI0MmE1MjBlNThmYzI2MGUyN2M3NQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-07-16T12:07:17Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-07-16T12:07:17Z"}, "message": "mul-subnormal-single-1.x: Add tic6x-*-* case.\n\n\t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.x: Add tic6x-*-*\n\tcase.\n\t* gcc.c-torture/execute/ieee/20000320-1.x: Likewise.\n\t* gcc.c-torture/execute/ieee/hugeval.x: Likewise.\n\t* gcc.c-torture/execute/ieee/mzero2.c: Comment out the divide tests for\n\tC67X.\n\t* gcc.c-torture/execute/ieee/pr29302.x: New file.\n\t* gcc.dg/torture/type-generic-1.c: Add -DUNSAFE for tic6x-*-*.\n\t* gcc.dg/torture/builtin-math-7.c: Add a comment.\n\nFrom-SVN: r176353", "tree": {"sha": "cde965165a0ce5328508b3dd26d80adee62bd982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde965165a0ce5328508b3dd26d80adee62bd982"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6d03cd5618b1d3b96b242a520e58fc260e27c75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d03cd5618b1d3b96b242a520e58fc260e27c75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d03cd5618b1d3b96b242a520e58fc260e27c75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d03cd5618b1d3b96b242a520e58fc260e27c75/comments", "author": null, "committer": null, "parents": [{"sha": "a4a2c37d8bc42ecc746527a964ceeda2c1d6d688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a2c37d8bc42ecc746527a964ceeda2c1d6d688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4a2c37d8bc42ecc746527a964ceeda2c1d6d688"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "cdc2f2d5fbc7a4469b499e6c781eca6db88810e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -1,3 +1,15 @@\n+2011-07-16  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.x: Add tic6x-*-*\n+\tcase.\n+\t* gcc.c-torture/execute/ieee/20000320-1.x: Likewise.\n+\t* gcc.c-torture/execute/ieee/hugeval.x: Likewise.\n+\t* gcc.c-torture/execute/ieee/mzero2.c: Comment out the divide tests for\n+\tC67X.\n+\t* gcc.c-torture/execute/ieee/pr29302.x: New file.\n+\t* gcc.dg/torture/type-generic-1.c: Add -DUNSAFE for tic6x-*-*.\n+\t* gcc.dg/torture/builtin-math-7.c: Add a comment.\n+\n 2011-07-15  Jason Merrill  <jason@redhat.com>\n \n \tPR testsuite/49741"}, {"sha": "e05e854846eb4b49fe425de347aa2ca11eea3ac0", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/20000320-1.x", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2F20000320-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2F20000320-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2F20000320-1.x?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -7,4 +7,9 @@ if [istarget \"avr-*-*\"] {\n     # AVR doubles are floats\n     return 1\n }\n+if { [istarget \"tic6x-*-*\"] && [check_effective_target_ti_c67x] } {\n+    # C6X floating point hardware turns denormals to zero in FP conversions.\n+    set torture_execute_xfail \"tic6x-*-*\"\n+    return 1\n+}\n return 0"}, {"sha": "c66de1c0648d796a705e994985220bab4b9f3ce3", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/hugeval.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fhugeval.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fhugeval.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fhugeval.x?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -19,5 +19,11 @@ if {[istarget \"*-*-vxworks*\"]} {\n     }\n }\n \n+if { [istarget \"tic6x-*-*\"] && [check_effective_target_ti_c67x] } {\n+    # C6X uses -freciprocal-math by default.\n+    set torture_execute_xfail \"$target_triplet\"\n+    return 1\n+}\n+\n return 0\n "}, {"sha": "418526599d53542404ea01beb9c787fc64a9e78e", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.x", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.x?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -13,4 +13,9 @@ if [istarget \"spu-*-*\"] {\n     # support subnormals.\n     return 1\n }\n+if { [istarget \"tic6x-*-*\"] && [check_effective_target_ti_c67x] } {\n+    # C6X floating point hardware turns denormals to zero in multiplications.\n+    set torture_execute_xfail \"tic6x-*-*\"\n+    return 1\n+}\n return 0"}, {"sha": "00c8efe9136c7d987530661f6b5155677b461227", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/mzero2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmzero2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmzero2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmzero2.c?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -44,6 +44,8 @@ main ()\n   expect (+1.00 * nzero, nzero);\n   expect (-1.00 * nzero, pzero);\n \n+#ifndef _TMS320C6700\n+  /* C6X floating point division is implemented using reciprocals.  */\n   expect (pzero / pzero, nan);\n   expect (pzero / nzero, nan);\n   expect (nzero / pzero, nan);\n@@ -53,6 +55,7 @@ main ()\n   expect (-1.00 / pzero, ninf);\n   expect (+1.00 / nzero, ninf);\n   expect (-1.00 / nzero, pinf);\n+#endif\n \n   exit (0);\n }"}, {"sha": "1922b14d83e89aa244e9e6c2fca63f48cbe1f5e1", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/pr29302-1.x", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr29302-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr29302-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr29302-1.x?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -0,0 +1,12 @@\n+if { [istarget \"tic6x-*-*\"] && [check_effective_target_ti_c67x] } {\n+    # C6X uses -freciprocal-math by default.\n+    set torture_execute_xfail \"tic6x-*-*\"\n+    return 1\n+}\n+return 0\n+if { [istarget \"tic6x-*-*\"] && [check_effective_target_ti_c67x] } {\n+    # C6X uses -freciprocal-math by default.\n+    set torture_execute_xfail \"tic6x-*-*\"\n+    return 1\n+}\n+return 0"}, {"sha": "064e28641a7de7d63aa3934de61b6181a7fc4124", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -5,6 +5,7 @@\n    Origin: Kaveh R. Ghazi,  August 13, 2009.  */\n \n /* { dg-do run } */\n+/* C6X fails due to -freciprocal-math default.  */\n /* { dg-skip-if \"\" { tic6x-*-* } \"*\" \"\" } */\n /* { dg-add-options ieee } */\n /* { dg-require-effective-target large_double } */"}, {"sha": "f6949cff136c7934d303234f8f96c5f29724b994", "filename": "gcc/testsuite/gcc.dg/torture/type-generic-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftype-generic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d03cd5618b1d3b96b242a520e58fc260e27c75/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftype-generic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftype-generic-1.c?ref=f6d03cd5618b1d3b96b242a520e58fc260e27c75", "patch": "@@ -3,6 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-skip-if \"No Inf/NaN support\" { spu-*-* } } */\n+/* { dg-options \"-DUNSAFE\" { target tic6x*-*-* } } */\n /* { dg-add-options ieee } */\n \n #include \"../tg-tests.h\""}]}