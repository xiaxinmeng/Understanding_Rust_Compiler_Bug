{"sha": "cb7738452f613d5f10acc3e816c48be679c67087", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I3NzM4NDUyZjYxM2Q1ZjEwYWNjM2U4MTZjNDhiZTY3OWM2NzA4Nw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-03-02T00:42:28Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-03-02T00:42:28Z"}, "message": "cpphash.h (struct cpp_reader): Add print_version field.\n\n\t* cpphash.h (struct cpp_reader): Add print_version field.\n\t* cppinit.c (cpp_handle_option): For -v, -version, and --version,\n\tjust set print_version and other flags as appropriate.\n\t(cpp_post_options): Print version here if print_version is set.\n\n\t* toplev.c (exit_after_options): New flag.\n\t(independent_decode_option): Don't exit here; just set\n\texit_after_options.\n\t(main): Exit after calling lang_hooks.post_options if\n\texit_after_options is true.\n\n\t* cppinit.c (append_include_chain): Drop never-used case QUOTE.\n\t(merge_include_chains): Adjust comment to match code.\n\nFrom-SVN: r40171", "tree": {"sha": "4ecc2785da359d98a20a15c593a6295bd53281e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ecc2785da359d98a20a15c593a6295bd53281e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb7738452f613d5f10acc3e816c48be679c67087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7738452f613d5f10acc3e816c48be679c67087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7738452f613d5f10acc3e816c48be679c67087", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7738452f613d5f10acc3e816c48be679c67087/comments", "author": null, "committer": null, "parents": [{"sha": "71b7be38c3f1d50ca004b3aa1c21e206d595c67f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b7be38c3f1d50ca004b3aa1c21e206d595c67f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b7be38c3f1d50ca004b3aa1c21e206d595c67f"}], "stats": {"total": 63, "additions": 47, "deletions": 16}, "files": [{"sha": "c55e13a13d7fc3feaa0dea18209e75a9fdb9ad33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb7738452f613d5f10acc3e816c48be679c67087", "patch": "@@ -1,3 +1,19 @@\n+2001-03-01  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* cpphash.h (struct cpp_reader): Add print_version field.\n+\t* cppinit.c (cpp_handle_option): For -v, -version, and --version,\n+\tjust set print_version and other flags as appropriate.\n+\t(cpp_post_options): Print version here if print_version is set.\n+\n+\t* toplev.c (exit_after_options): New flag.\n+\t(independent_decode_option): Don't exit here; just set\n+\texit_after_options.\n+\t(main): Exit after calling lang_hooks.post_options if\n+\texit_after_options is true.\n+\n+\t* cppinit.c (append_include_chain): Drop never-used case QUOTE.\n+\t(merge_include_chains): Adjust comment to match code.\n+\n 2001-03-01  Zack Weinberg  <zackw@stanford.edu>\n \n \t* stringpool.c (set_identifier): New function."}, {"sha": "14df2da9b20c5b150eb95e12c1104a37063ec0fc", "filename": "gcc/cpphash.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=cb7738452f613d5f10acc3e816c48be679c67087", "patch": "@@ -343,6 +343,10 @@ struct cpp_reader\n \n   /* True if we are skipping a failed conditional group.  */\n   unsigned char skipping;\n+\n+  /* Whether to print our version number.  Done this way so\n+     we don't get it twice for -v -version.  */\n+  unsigned char print_version;\n };\n \n /* Character classes.  Based on the more primitive macros in safe-ctype.h."}, {"sha": "e6ae245f823715222735e01a391dae90c7796ea5", "filename": "gcc/cppinit.c", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=cb7738452f613d5f10acc3e816c48be679c67087", "patch": "@@ -117,8 +117,9 @@ static void new_pending_directive\tPARAMS ((struct cpp_pending *,\n static void output_deps\t\t\tPARAMS ((cpp_reader *));\n static int parse_option\t\t\tPARAMS ((const char *));\n \n-/* Fourth argument to append_include_chain: chain to use.  */\n-enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };\n+/* Fourth argument to append_include_chain: chain to use.\n+   Note it's never asked to append to the quote chain.  */\n+enum { BRACKET = 0, SYSTEM, AFTER };\n \n /* If we have designated initializers (GCC >2.7) these tables can be\n    initialized, constant data.  Otherwise, they have to be filled in at\n@@ -250,7 +251,6 @@ append_include_chain (pfile, dir, path, cxx_aware)\n \n   switch (path)\n     {\n-    case QUOTE:\t\tAPPEND (pend, quote, new); break;\n     case BRACKET:\tAPPEND (pend, brack, new); break;\n     case SYSTEM:\tAPPEND (pend, systm, new); break;\n     case AFTER:\t\tAPPEND (pend, after, new); break;\n@@ -338,7 +338,7 @@ merge_include_chains (pfile)\n   /* This is a bit tricky.  First we drop dupes from the quote-include\n      list.  Then we drop dupes from the bracket-include list.\n      Finally, if qtail and brack are the same directory, we cut out\n-     brack.\n+     brack and move brack up to point to qtail.\n \n      We can't just merge the lists and then uniquify them because\n      then we may lose directories from the <> search path that should\n@@ -1316,18 +1316,14 @@ cpp_handle_option (pfile, argc, argv)\n \t     verbose and -version.  Historical reasons, don't ask.  */\n \tcase OPT__version:\n \t  CPP_OPTION (pfile, help_only) = 1;\n-\t  goto version;\n+\t  pfile->print_version = 1;\n+\t  break;\n \tcase OPT_v:\n \t  CPP_OPTION (pfile, verbose) = 1;\n-\t  goto version;\n-\n+\t  pfile->print_version = 1;\n+\t  break;\n \tcase OPT_version:\n-\tversion:\n-\t  fprintf (stderr, _(\"GNU CPP version %s (cpplib)\"), version_string);\n-#ifdef TARGET_VERSION\n-\t  TARGET_VERSION;\n-#endif\n-\t  fputc ('\\n', stderr);\n+\t  pfile->print_version = 1;\n \t  break;\n \n \tcase OPT_C:\n@@ -1684,6 +1680,15 @@ void\n cpp_post_options (pfile)\n      cpp_reader *pfile;\n {\n+  if (pfile->print_version)\n+    {\n+      fprintf (stderr, _(\"GNU CPP version %s (cpplib)\"), version_string);\n+#ifdef TARGET_VERSION\n+      TARGET_VERSION;\n+#endif\n+      fputc ('\\n', stderr);\n+    }\n+\n   /* Canonicalize in_fname and out_fname.  We guarantee they are not\n      NULL, and that the empty string represents stdin / stdout.  */\n   if (CPP_OPTION (pfile, in_fname) == NULL"}, {"sha": "fdd839021bc8e2a2b5fb9cec040305a5e8fdc141", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7738452f613d5f10acc3e816c48be679c67087/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=cb7738452f613d5f10acc3e816c48be679c67087", "patch": "@@ -391,6 +391,9 @@ int errorcount = 0;\n int warningcount = 0;\n int sorrycount = 0;\n \n+/* Nonzero if we should exit after parsing options.  */\n+static int exit_after_options = 0;\n+\n /* The FUNCTION_DECL for the function currently being compiled,\n    or 0 if between functions.  */\n tree current_function_decl;\n@@ -4368,19 +4371,19 @@ independent_decode_option (argc, argv)\n   if (!strcmp (arg, \"-help\"))\n     {\n       display_help ();\n-      exit (0);\n+      exit_after_options = 1;\n     }\n \n   if (!strcmp (arg, \"-target-help\"))\n     {\n       display_target_options ();\n-      exit (0);\n+      exit_after_options = 1;\n     }\n \n   if (!strcmp (arg, \"-version\"))\n     {\n       print_version (stderr, \"\");\n-      exit (0);\n+      exit_after_options = 1;\n     }\n \n   /* Handle '--param <name>=<value>'.  */\n@@ -4830,6 +4833,9 @@ main (argc, argv)\n   if (lang_hooks.post_options)\n     (*lang_hooks.post_options) ();\n \n+  if (exit_after_options)\n+    exit (0);\n+\n   /* Reflect any language-specific diagnostic option setting.  */\n   reshape_diagnostic_buffer ();\n "}]}