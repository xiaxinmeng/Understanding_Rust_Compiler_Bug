{"sha": "b29afcf8333b8e5f82fe1f970682f503a3e6923d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI5YWZjZjgzMzNiOGU1ZjgyZmUxZjk3MDY4MmY1MDNhM2U2OTIzZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-03-25T00:18:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-25T00:18:10Z"}, "message": "recog.c (peephole2_optimize): Split blocks when EH insns are generated in the middle of a block.\n\n        * recog.c (peephole2_optimize): Split blocks when EH insns are\n        generated in the middle of a block.  Do global life update if\n        zapped EH edges.\n\nFrom-SVN: r51285", "tree": {"sha": "2d19caeef716238a672a769d0702fa34dd850bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d19caeef716238a672a769d0702fa34dd850bc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b29afcf8333b8e5f82fe1f970682f503a3e6923d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29afcf8333b8e5f82fe1f970682f503a3e6923d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29afcf8333b8e5f82fe1f970682f503a3e6923d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29afcf8333b8e5f82fe1f970682f503a3e6923d/comments", "author": null, "committer": null, "parents": [{"sha": "47e87a9314ef8ccff3930075c1ccecb6a1aec1ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e87a9314ef8ccff3930075c1ccecb6a1aec1ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e87a9314ef8ccff3930075c1ccecb6a1aec1ae"}], "stats": {"total": 70, "additions": 57, "deletions": 13}, "files": [{"sha": "cb4a988bec023faed2af056a4e3e378e75cc0b25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b29afcf8333b8e5f82fe1f970682f503a3e6923d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b29afcf8333b8e5f82fe1f970682f503a3e6923d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b29afcf8333b8e5f82fe1f970682f503a3e6923d", "patch": "@@ -1,3 +1,9 @@\n+2002-03-24  Richard Henderson  <rth@redhat.com>\n+\n+\t* recog.c (peephole2_optimize): Split blocks when EH insns are \n+\tgenerated in the middle of a block.  Do global life update if\n+\tzapped EH edges.\n+\n 2002-03-24  Richard Henderson  <rth@redhat.com>\n \n \t* mips.c (mips_function_value): Only promote_mode for non-libcalls."}, {"sha": "769c267efedd5c52ea947c502083d5a4ee195309", "filename": "gcc/recog.c", "status": "modified", "additions": 51, "deletions": 13, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b29afcf8333b8e5f82fe1f970682f503a3e6923d/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b29afcf8333b8e5f82fe1f970682f503a3e6923d/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=b29afcf8333b8e5f82fe1f970682f503a3e6923d", "patch": "@@ -3000,8 +3000,9 @@ peephole2_optimize (dump_file)\n   int i, b;\n #ifdef HAVE_conditional_execution\n   sbitmap blocks;\n-  int changed;\n+  bool changed;\n #endif\n+  bool do_cleanup_cfg = false;\n \n   /* Initialize the regsets we're going to use.  */\n   for (i = 0; i < MAX_INSNS_PER_PEEP2 + 1; ++i)\n@@ -3011,7 +3012,7 @@ peephole2_optimize (dump_file)\n #ifdef HAVE_conditional_execution\n   blocks = sbitmap_alloc (n_basic_blocks);\n   sbitmap_zero (blocks);\n-  changed = 0;\n+  changed = false;\n #else\n   count_or_remove_death_notes (NULL, 1);\n #endif\n@@ -3137,20 +3138,46 @@ peephole2_optimize (dump_file)\n \t\t\t\t\t\tREG_EH_REGION, NULL_RTX)))\n \t\t    {\n \t\t      rtx x;\n+\t\t      edge eh_edge;\n+\n+\t\t      for (eh_edge = bb->succ; eh_edge\n+\t\t\t   ; eh_edge = eh_edge->succ_next)\n+\t\t\tif (eh_edge->flags & EDGE_EH)\n+\t\t\t  break;\n+\n \t\t      for (x = NEXT_INSN (peep2_insn_data[i].insn);\n \t\t\t   x != NEXT_INSN (try); x = NEXT_INSN (x))\n \t\t\tif (GET_CODE (x) == CALL_INSN\n \t\t\t    || (flag_non_call_exceptions\n \t\t\t\t&& may_trap_p (PATTERN (x))))\n-\t\t\t  REG_NOTES (x)\n-\t\t\t    = gen_rtx_EXPR_LIST (REG_EH_REGION,\n-\t\t\t\t\t\t XEXP (note, 0),\n-\t\t\t\t\t\t REG_NOTES (x));\n+\t\t\t  {\n+\t\t\t    REG_NOTES (x)\n+\t\t\t      = gen_rtx_EXPR_LIST (REG_EH_REGION,\n+\t\t\t\t\t\t   XEXP (note, 0),\n+\t\t\t\t\t\t   REG_NOTES (x));\n+\n+\t\t\t    if (x != bb->end && eh_edge)\n+\t\t\t      {\n+\t\t\t\tedge nfte = split_block (bb, x);\n+\t\t\t\tedge nehe = make_edge (nfte->src, eh_edge->dest,\n+\t\t\t\t\t\t       eh_edge->flags);\n+\t\t\t\tnehe->probability = eh_edge->probability;\n+\t\t\t\tnfte->probability\n+\t\t\t\t  = REG_BR_PROB_BASE - nehe->probability;\n+\n+\t\t\t        do_cleanup_cfg |= purge_dead_edges (nfte->dest);\n+#ifdef HAVE_conditional_execution\n+\t\t\t\tSET_BIT (blocks, nfte->dest->index);\n+\t\t\t\tchanged = true;\n+#endif\n+\t\t\t\tbb = nfte->src;\n+\t\t\t      }\n+\t\t\t  }\n+\n+\t\t      /* Converting possibly trapping insn to non-trapping is\n+\t\t\t possible.  Zap dummy outgoing edges.  */\n+\t\t      do_cleanup_cfg |= purge_dead_edges (bb);\n \t\t    }\n-\t\t  /* Converting possibly trapping insn to non-trapping is\n-\t\t     possible.  Zap dummy outgoing edges.  */\n-\t\t  if (try == bb->end)\n-\t\t    purge_dead_edges (bb);\n \n #ifdef HAVE_conditional_execution\n \t\t  /* With conditional execution, we cannot back up the\n@@ -3159,7 +3186,7 @@ peephole2_optimize (dump_file)\n \t\t     So record that we've made a modification to this\n \t\t     block and update life information at the end.  */\n \t\t  SET_BIT (blocks, b);\n-\t\t  changed = 1;\n+\t\t  changed = true;\n \n \t\t  for (i = 0; i < MAX_INSNS_PER_PEEP2 + 1; ++i)\n \t\t    peep2_insn_data[i].insn = NULL_RTX;\n@@ -3205,9 +3232,20 @@ peephole2_optimize (dump_file)\n     FREE_REG_SET (peep2_insn_data[i].live_before);\n   FREE_REG_SET (live);\n \n+  /* If we eliminated EH edges, we may be able to merge blocks.  Further,\n+     we've changed global life since exception handlers are no longer\n+     reachable.  */\n+  if (do_cleanup_cfg)\n+    {\n+      cleanup_cfg (0);\n+      update_life_info (0, UPDATE_LIFE_GLOBAL_RM_NOTES, PROP_DEATH_NOTES);\n+    }\n #ifdef HAVE_conditional_execution\n-  count_or_remove_death_notes (blocks, 1);\n-  update_life_info (blocks, UPDATE_LIFE_LOCAL, PROP_DEATH_NOTES);\n+  else\n+    {\n+      count_or_remove_death_notes (blocks, 1);\n+      update_life_info (blocks, UPDATE_LIFE_LOCAL, PROP_DEATH_NOTES);\n+    }\n   sbitmap_free (blocks);\n #endif\n }"}]}