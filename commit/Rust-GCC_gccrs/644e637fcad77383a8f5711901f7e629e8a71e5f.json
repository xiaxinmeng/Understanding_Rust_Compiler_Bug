{"sha": "644e637fcad77383a8f5711901f7e629e8a71e5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ0ZTYzN2ZjYWQ3NzM4M2E4ZjU3MTE5MDFmN2U2MjllOGE3MWU1Zg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-01-05T14:55:27Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-01-05T14:55:27Z"}, "message": "re PR lto/47162 (LTO is broken)\n\nFix PR lto/47162.\n\n2011-01-05  Martin Jambor  <mjambor@suse.cz>\n\n\tPR lto/47162\n\t* lto-cgraph.c (output_cgraph_opt_summary_p): Also check for thunk\n\tdeltas on streamed outgoing edges.\n\t(output_node_opt_summary): Output info for outgoing edges only when\n\tthe node is in new parameter set.\n\t(output_cgraph_opt_summary): New parameter set, passed to the two\n\taforementioned functions.  Update its forward declaration and its\n\tcallee too.\n\nFrom-SVN: r168515", "tree": {"sha": "931cb4aa88c60a118294f0aa4726fb0a40cbccd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931cb4aa88c60a118294f0aa4726fb0a40cbccd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/644e637fcad77383a8f5711901f7e629e8a71e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644e637fcad77383a8f5711901f7e629e8a71e5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/644e637fcad77383a8f5711901f7e629e8a71e5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644e637fcad77383a8f5711901f7e629e8a71e5f/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7bd111573699079b760f18e81439cd7dc5268cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd111573699079b760f18e81439cd7dc5268cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd111573699079b760f18e81439cd7dc5268cca"}], "stats": {"total": 64, "additions": 47, "deletions": 17}, "files": [{"sha": "7b7e7ada06aa4544449230ebee8c571411bb6e88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644e637fcad77383a8f5711901f7e629e8a71e5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644e637fcad77383a8f5711901f7e629e8a71e5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=644e637fcad77383a8f5711901f7e629e8a71e5f", "patch": "@@ -1,3 +1,14 @@\n+2011-01-05  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR lto/47162\n+\t* lto-cgraph.c (output_cgraph_opt_summary_p): Also check for thunk\n+\tdeltas on streamed outgoing edges.\n+\t(output_node_opt_summary): Output info for outgoing edges only when\n+\tthe node is in new parameter set.\n+\t(output_cgraph_opt_summary): New parameter set, passed to the two\n+\taforementioned functions.  Update its forward declaration and its\n+\tcallee too.\n+\n 2011-01-05  Tom Tromey  <tromey@redhat.com>\n \n \t* c-parser.c (c_parser_omp_atomic): Pass location of assignment"}, {"sha": "6ca7abc052ff711a7a74656481695ec46b11d03c", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 36, "deletions": 17, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644e637fcad77383a8f5711901f7e629e8a71e5f/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644e637fcad77383a8f5711901f7e629e8a71e5f/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=644e637fcad77383a8f5711901f7e629e8a71e5f", "patch": "@@ -46,7 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gcov-io.h\"\n \n static void output_varpool (cgraph_node_set, varpool_node_set);\n-static void output_cgraph_opt_summary (void);\n+static void output_cgraph_opt_summary (cgraph_node_set set);\n static void input_cgraph_opt_summary (VEC (cgraph_node_ptr, heap) * nodes);\n \n \n@@ -861,7 +861,7 @@ output_cgraph (cgraph_node_set set, varpool_node_set vset)\n   static bool asm_nodes_output = false;\n \n   if (flag_wpa)\n-    output_cgraph_opt_summary ();\n+    output_cgraph_opt_summary (set);\n \n   ob = lto_create_simple_output_block (LTO_section_cgraph);\n \n@@ -1596,13 +1596,26 @@ input_cgraph (void)\n /* True when we need optimization summary for NODE.  */\n \n static int\n-output_cgraph_opt_summary_p (struct cgraph_node *node)\n+output_cgraph_opt_summary_p (struct cgraph_node *node, cgraph_node_set set)\n {\n-  if (!node->clone_of)\n-    return false;\n-  return (node->clone.tree_map\n-          || node->clone.args_to_skip\n-          || node->clone.combined_args_to_skip);\n+  struct cgraph_edge *e;\n+\n+  if (cgraph_node_in_set_p (node, set))\n+    {\n+      for (e = node->callees; e; e = e->next_callee)\n+\tif (e->indirect_info\n+\t    && e->indirect_info->thunk_delta != 0)\n+\t  return true;\n+\n+      for (e = node->indirect_calls; e; e = e->next_callee)\n+\tif (e->indirect_info->thunk_delta != 0)\n+\t  return true;\n+    }\n+\n+  return (node->clone_of\n+\t  && (node->clone.tree_map\n+\t      || node->clone.args_to_skip\n+\t      || node->clone.combined_args_to_skip));\n }\n \n /* Output optimization summary for EDGE to OB.  */\n@@ -1621,7 +1634,8 @@ output_edge_opt_summary (struct output_block *ob,\n \n static void\n output_node_opt_summary (struct output_block *ob,\n-\t\t\t struct cgraph_node *node)\n+\t\t\t struct cgraph_node *node,\n+\t\t\t cgraph_node_set set)\n {\n   unsigned int index;\n   bitmap_iterator bi;\n@@ -1659,17 +1673,21 @@ output_node_opt_summary (struct output_block *ob,\n       bp_pack_value (&bp, map->ref_p, 1);\n       lto_output_bitpack (&bp);\n     }\n-  for (e = node->callees; e; e = e->next_callee)\n-    output_edge_opt_summary (ob, e);\n-  for (e = node->indirect_calls; e; e = e->next_callee)\n-    output_edge_opt_summary (ob, e);\n+\n+  if (cgraph_node_in_set_p (node, set))\n+    {\n+      for (e = node->callees; e; e = e->next_callee)\n+\toutput_edge_opt_summary (ob, e);\n+      for (e = node->indirect_calls; e; e = e->next_callee)\n+\toutput_edge_opt_summary (ob, e);\n+    }\n }\n \n /* Output optimization summaries stored in callgraph.\n    At the moment it is the clone info structure.  */\n \n static void\n-output_cgraph_opt_summary (void)\n+output_cgraph_opt_summary (cgraph_node_set set)\n {\n   struct cgraph_node *node;\n   int i, n_nodes;\n@@ -1681,16 +1699,17 @@ output_cgraph_opt_summary (void)\n   encoder = ob->decl_state->cgraph_node_encoder;\n   n_nodes = lto_cgraph_encoder_size (encoder);\n   for (i = 0; i < n_nodes; i++)\n-    if (output_cgraph_opt_summary_p (lto_cgraph_encoder_deref (encoder, i)))\n+    if (output_cgraph_opt_summary_p (lto_cgraph_encoder_deref (encoder, i),\n+\t\t\t\t     set))\n       count++;\n   lto_output_uleb128_stream (ob->main_stream, count);\n   for (i = 0; i < n_nodes; i++)\n     {\n       node = lto_cgraph_encoder_deref (encoder, i);\n-      if (output_cgraph_opt_summary_p (node))\n+      if (output_cgraph_opt_summary_p (node, set))\n \t{\n \t  lto_output_uleb128_stream (ob->main_stream, i);\n-\t  output_node_opt_summary (ob, node);\n+\t  output_node_opt_summary (ob, node, set);\n \t}\n     }\n   produce_asm (ob, NULL);"}]}