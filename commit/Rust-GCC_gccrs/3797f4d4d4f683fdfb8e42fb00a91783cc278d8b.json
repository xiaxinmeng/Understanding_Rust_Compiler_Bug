{"sha": "3797f4d4d4f683fdfb8e42fb00a91783cc278d8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc5N2Y0ZDRkNGY2ODNmZGZiOGU0MmZiMDBhOTE3ODNjYzI3OGQ4Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-06T12:46:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-06T12:46:56Z"}, "message": "Add define_split to simplify \"(unsigned) x > 0xffffff\".\n\nFrom-SVN: r6988", "tree": {"sha": "5c48788707657670038dc495486d477084a1c0a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c48788707657670038dc495486d477084a1c0a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3797f4d4d4f683fdfb8e42fb00a91783cc278d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3797f4d4d4f683fdfb8e42fb00a91783cc278d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3797f4d4d4f683fdfb8e42fb00a91783cc278d8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3797f4d4d4f683fdfb8e42fb00a91783cc278d8b/comments", "author": null, "committer": null, "parents": [{"sha": "bc97bfd8041c6ce923a73d5f7d2a80c36ddffc9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc97bfd8041c6ce923a73d5f7d2a80c36ddffc9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc97bfd8041c6ce923a73d5f7d2a80c36ddffc9a"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "7f2999f9c684375b08cfb794411826818a03ee0a", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3797f4d4d4f683fdfb8e42fb00a91783cc278d8b/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3797f4d4d4f683fdfb8e42fb00a91783cc278d8b/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=3797f4d4d4f683fdfb8e42fb00a91783cc278d8b", "patch": "@@ -2232,6 +2232,30 @@\n   operands[6] = gen_rtx (GET_CODE (operands[1]), VOIDmode,\n \t\t\t operands[4], const0_rtx);\n }\")\n+\n+;; We can convert such things as \"a > 0xffff\" to \"t = a & 0xffff; t != 0\".\n+;; This eliminates one, and sometimes two, insns when the AND can be done\n+;; with a ZAP.\n+(define_split\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(match_operator 1 \"comparison_operator\"\n+\t\t\t[(match_operand:DI 2 \"register_operand\" \"\")\n+\t\t\t (match_operand:DI 3 \"const_int_operand\" \"\")]))\n+   (clobber (match_operand:DI 4 \"register_operand\" \"\"))]\n+  \"exact_log2 (INTVAL (operands[3]) + 1) >= 0\n+   && (GET_CODE (operands[1]) == GTU\n+       || GET_CODE (operands[1]) == LEU\n+       || ((GET_CODE (operands[1]) == GT || GET_CODE (operands[1]) == LE)\n+\t   && extended_count (operands[2], DImode, 1) > 0))\"\n+  [(set (match_dup 4) (and:DI (match_dup 2) (match_dup 3)))\n+   (set (match_dup 0) (match_dup 5))]\n+  \"\n+{\n+  operands[5] = gen_rtx (((GET_CODE (operands[1]) == GTU\n+\t\t\t   || GET_CODE (operands[1]) == GE)\n+\t\t\t  ? NE : LE),\n+\t\t\t DImode, operands[4], const0_rtx);\n+}\")\n \f\n ;; Here are the CALL and unconditional branch insns.\n "}]}