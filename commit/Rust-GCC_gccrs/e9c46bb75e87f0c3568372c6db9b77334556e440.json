{"sha": "e9c46bb75e87f0c3568372c6db9b77334556e440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTljNDZiYjc1ZTg3ZjBjMzU2ODM3MmM2ZGI5Yjc3MzM0NTU2ZTQ0MA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-12-17T17:08:57Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-12-17T17:08:57Z"}, "message": "basic_file.h (__basic_file::fd): New function.\n\n2001-12-17  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* include/bits/basic_file.h (__basic_file::fd):  New function.\n\t* config/io/basic_file_stdio.h (__basic_file::fd):  Define.\n\t* include/bits/std_fstream.h (basic_filebuf::fd):  New function.\n\t* include/bits/fstream.tcc (basic_filebuf::fd):  Define.\n\t* testsuite/27_io/filebuf_members.cc (test_02):  New test.\n\nFrom-SVN: r48107", "tree": {"sha": "dfd9745118478bcc874bfe70aa5163f66d3cda4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd9745118478bcc874bfe70aa5163f66d3cda4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9c46bb75e87f0c3568372c6db9b77334556e440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c46bb75e87f0c3568372c6db9b77334556e440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c46bb75e87f0c3568372c6db9b77334556e440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c46bb75e87f0c3568372c6db9b77334556e440/comments", "author": null, "committer": null, "parents": [{"sha": "af19c653a851925b4398d91a28a88cd21cc73cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af19c653a851925b4398d91a28a88cd21cc73cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af19c653a851925b4398d91a28a88cd21cc73cca"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "8ef11b77c83df6a7041414462130c13511687e0a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e9c46bb75e87f0c3568372c6db9b77334556e440", "patch": "@@ -1,3 +1,11 @@\n+2001-12-17  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* include/bits/basic_file.h (__basic_file::fd):  New function.\n+\t* config/io/basic_file_stdio.h (__basic_file::fd):  Define.\n+\t* include/bits/std_fstream.h (basic_filebuf::fd):  New function.\n+\t* include/bits/fstream.tcc (basic_filebuf::fd):  Define.\n+\t* testsuite/27_io/filebuf_members.cc (test_02):  New test.\n+\n 2001-12-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* po/Makefile.am (.po.mo): Use POSIXLY_CORRECT argument ordering."}, {"sha": "b83085240d6f41fa45c4156286552ee9653466d4", "filename": "libstdc++-v3/config/io/basic_file_stdio.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h?ref=e9c46bb75e87f0c3568372c6db9b77334556e440", "patch": "@@ -133,6 +133,10 @@ namespace std\n     bool \n     __basic_file<_CharT>::is_open() { return _M_cfile != 0; }\n   \n+  template<typename _CharT>\n+    int \n+    __basic_file<_CharT>::fd() { return fileno(_M_cfile) ; }\n+  \n   template<typename _CharT>\n     __basic_file<_CharT>* \n     __basic_file<_CharT>::close()"}, {"sha": "9c0c1d364419442f12d87050a02b4c8db89d4939", "filename": "libstdc++-v3/include/bits/basic_file.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_file.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_file.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_file.h?ref=e9c46bb75e87f0c3568372c6db9b77334556e440", "patch": "@@ -168,6 +168,9 @@ namespace std\n       bool \n       is_open();\n \n+      int \n+      fd();\n+\n       // NB: Must match FILE specific jump table starting here--this\n       // means all virtual functions starting with the dtor must match,\n       // slot by slot. For glibc-based dystems, this means the _IO_FILE"}, {"sha": "7f90f2a383e2df0fd611fb001099d16434d889f0", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=e9c46bb75e87f0c3568372c6db9b77334556e440", "patch": "@@ -138,6 +138,14 @@ namespace std\n \t}\n     }\n \n+  template<typename _CharT, typename _Traits>\n+    int\n+    basic_filebuf<_CharT, _Traits>::\n+    fd()\n+    {\n+      return _M_file->fd();\n+    }\n+\n   template<typename _CharT, typename _Traits>\n     typename basic_filebuf<_CharT, _Traits>::__filebuf_type* \n     basic_filebuf<_CharT, _Traits>::"}, {"sha": "1a651b725e39338f38e7c64ca6f74e773c597f06", "filename": "libstdc++-v3/include/bits/std_fstream.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_fstream.h?ref=e9c46bb75e87f0c3568372c6db9b77334556e440", "patch": "@@ -97,6 +97,10 @@ namespace std\n       basic_filebuf(__c_file_type* __f, ios_base::openmode __mode, \n \t\t    int_type __s = static_cast<int_type>(BUFSIZ));\n  \n+      // Non-standard member:\n+      int\n+      fd();\n+\n       virtual \n       ~basic_filebuf() \n       { "}, {"sha": "d955ef7ed1f1eea1205d4350e6225ee3e1cba865", "filename": "libstdc++-v3/testsuite/27_io/filebuf_members.cc", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c46bb75e87f0c3568372c6db9b77334556e440/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc?ref=e9c46bb75e87f0c3568372c6db9b77334556e440", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -24,17 +24,16 @@\n // the non-portable functionality in the libstdc++-v3 IO library\n \n #include <fstream>\n-#include <cassert>\n #include <unistd.h>\n #include <fcntl.h>\n #include <testsuite_hooks.h>\n \n // verify that std::filebuf doesn't close files that it didn't open\n // when using the following std::filebuf ctor:\n //\n-//      std::filebuf(int __fd,\n-//                   const char* __unused,\n-//                   ios_base::openmode __mode);\n+//      std::filebuf(__c_file_type*  __f,\n+//                   ios_base::openmode __mode,\n+//                   int_type  __s);\n //\n // thanks to \"George T. Talbot\" <george@moberg.com> for uncovering\n // this bug/situation. \n@@ -78,10 +77,30 @@ test_01()\n   return test;\n }\n \n+int\n+test_02()\n+{\n+  int first_fd = ::open(name_01, O_RDONLY);\n+  VERIFY( first_fd != -1 );\n+  FILE* first_file = ::fdopen(first_fd, \"r\");\n+  VERIFY( first_file != NULL );\n+  std::filebuf fb (first_file, std::ios_base::in);\n+\n+  int second_fd = fb.fd();\n+\n+  bool test = first_fd == second_fd;\n+\n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+\n+  return test;\n+}\n \n int\n main()\n {\n   test_01();\n+  test_02();\n   return 0;\n }"}]}