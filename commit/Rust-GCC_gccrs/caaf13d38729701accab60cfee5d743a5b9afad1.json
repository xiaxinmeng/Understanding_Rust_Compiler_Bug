{"sha": "caaf13d38729701accab60cfee5d743a5b9afad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FhZjEzZDM4NzI5NzAxYWNjYWI2MGNmZWU1ZDc0M2E1YjlhZmFkMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2011-01-22T04:09:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2011-01-22T04:09:44Z"}, "message": "re PR tree-optimization/47053 (ICE: verify_flow_info failed: BB 2 can not throw but has an EH edge with -O -fnon-call-exceptions)\n\n\n\tPR tree-optimization/47053\n\t* tree-ssa-dse.c (need_eh_cleanup): New bitmap.\n\t(dse_optimize_stmt): Set the appropriate bit in NEED_EH_CLEANUP when\n\tstatements are deleted.\n\t(tree_ssa_dse): Allocate & free NEED_EH_CLEANUP.  If NEED_EH_CLEANUP\n\tis nonempty, then purge dead edges and cleanup the CFG.\n\n\tPR tree-optimization/47053\n\t* g++.dg/pr47053.C: New test.\n\nFrom-SVN: r169123", "tree": {"sha": "e26bd30b7702ab14267fea3bce44ce25dab21466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26bd30b7702ab14267fea3bce44ce25dab21466"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caaf13d38729701accab60cfee5d743a5b9afad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caaf13d38729701accab60cfee5d743a5b9afad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caaf13d38729701accab60cfee5d743a5b9afad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caaf13d38729701accab60cfee5d743a5b9afad1/comments", "author": null, "committer": null, "parents": [{"sha": "47ba04ab544664fefe22f0e49e2307647bc33af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47ba04ab544664fefe22f0e49e2307647bc33af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47ba04ab544664fefe22f0e49e2307647bc33af5"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "9aba03d6861ac3719dcf1a83468aa5047bee0795", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caaf13d38729701accab60cfee5d743a5b9afad1", "patch": "@@ -1,3 +1,12 @@\n+2011-01-21  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/47053\n+\t* tree-ssa-dse.c (need_eh_cleanup): New bitmap.\n+\t(dse_optimize_stmt): Set the appropriate bit in NEED_EH_CLEANUP when\n+\tstatements are deleted.\n+\t(tree_ssa_dse): Allocate & free NEED_EH_CLEANUP.  If NEED_EH_CLEANUP\n+\tis nonempty, then purge dead edges and cleanup the CFG.\n+\n 2011-01-21  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/47402"}, {"sha": "1c980ac73991126888f8207cb5b5aaaecd813141", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=caaf13d38729701accab60cfee5d743a5b9afad1", "patch": "@@ -1,3 +1,8 @@\n+2011-01-21  Jeff Law <law@redhat.com>\n+\n+\tPR tree-optimization/47053\n+\t* g++.dg/pr47053.C: New test.\n+\t\n 2011-01-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/47041"}, {"sha": "186e3a7ad10e858f66a2505e0313b5071e82bc85", "filename": "gcc/testsuite/g++.dg/pr47053.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr47053.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr47053.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr47053.C?ref=caaf13d38729701accab60cfee5d743a5b9afad1", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fnon-call-exceptions\" } */\n+struct A\n+{\n+  int i;\n+  virtual ~A ()\n+  {}\n+};\n+\n+struct B : virtual A\n+{};\n+\n+struct C : public B\n+{\n+  C ();\n+  ~C (){}\n+};\n+\n+void foo ()\n+{\n+  C c;\n+}"}, {"sha": "26a438d12b278a4c69da231a6157f9f3fff4a47f", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caaf13d38729701accab60cfee5d743a5b9afad1/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=caaf13d38729701accab60cfee5d743a5b9afad1", "patch": "@@ -83,6 +83,10 @@ struct dse_block_local_data\n   bitmap stores;\n };\n \n+/* Bitmap of blocks that have had EH statements cleaned.  We should\n+   remove their dead edges eventually.  */\n+static bitmap need_eh_cleanup;\n+\n static bool gate_dse (void);\n static unsigned int tree_ssa_dse (void);\n static void dse_initialize_block_local_data (struct dom_walk_data *,\n@@ -335,6 +339,8 @@ dse_optimize_stmt (struct dse_global_data *dse_gd,\n \t  /* Then we need to fix the operand of the consuming stmt.  */\n \t  unlink_stmt_vdef (stmt);\n \n+\t  bitmap_set_bit (need_eh_cleanup, gimple_bb (stmt)->index);\n+\n \t  /* Remove the dead store.  */\n \t  gsi_remove (&gsi, true);\n \n@@ -401,6 +407,8 @@ tree_ssa_dse (void)\n   struct dom_walk_data walk_data;\n   struct dse_global_data dse_gd;\n \n+  need_eh_cleanup = BITMAP_ALLOC (NULL);\n+\n   renumber_gimple_stmt_uids ();\n \n   /* We might consider making this a property of each pass so that it\n@@ -435,6 +443,16 @@ tree_ssa_dse (void)\n   /* Release the main bitmap.  */\n   BITMAP_FREE (dse_gd.stores);\n \n+  /* Removal of stores may make some EH edges dead.  Purge such edges from\n+     the CFG as needed.  */\n+  if (!bitmap_empty_p (need_eh_cleanup))\n+    {\n+      gimple_purge_all_dead_eh_edges (need_eh_cleanup);\n+      cleanup_tree_cfg ();\n+    }\n+\n+  BITMAP_FREE (need_eh_cleanup);\n+    \n   /* For now, just wipe the post-dominator information.  */\n   free_dominance_info (CDI_POST_DOMINATORS);\n   return 0;"}]}