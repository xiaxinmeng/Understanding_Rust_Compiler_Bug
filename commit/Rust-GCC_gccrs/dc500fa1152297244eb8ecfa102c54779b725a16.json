{"sha": "dc500fa1152297244eb8ecfa102c54779b725a16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1MDBmYTExNTIyOTcyNDRlYjhlY2ZhMTAyYzU0Nzc5YjcyNWExNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T00:54:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T00:54:36Z"}, "message": "(expand_expr, case PLACEHOLDER_EXPR): Refine which object is picked.\n\nFrom-SVN: r13718", "tree": {"sha": "b90953c712ca9f250676af9462c5c9bc516773ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b90953c712ca9f250676af9462c5c9bc516773ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc500fa1152297244eb8ecfa102c54779b725a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc500fa1152297244eb8ecfa102c54779b725a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc500fa1152297244eb8ecfa102c54779b725a16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc500fa1152297244eb8ecfa102c54779b725a16/comments", "author": null, "committer": null, "parents": [{"sha": "ab16257805b6614e1ad674b29965a9faca5511bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab16257805b6614e1ad674b29965a9faca5511bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab16257805b6614e1ad674b29965a9faca5511bd"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "5e5cb1091a6fe29ded0c6e8250c65db6f260714b", "filename": "gcc/expr.c", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc500fa1152297244eb8ecfa102c54779b725a16/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc500fa1152297244eb8ecfa102c54779b725a16/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=dc500fa1152297244eb8ecfa102c54779b725a16", "patch": "@@ -5100,22 +5100,33 @@ expand_expr (exp, target, tmode, modifier)\n \t further information, see tree.def.  */\n       if (placeholder_list)\n \t{\n-\t  tree object;\n+\t  tree need_type = TYPE_MAIN_VARIANT (type);\n+\t  tree object = 0;\n \t  tree old_list = placeholder_list;\n+\t  tree elt;\n \n-\t  for (object = TREE_PURPOSE (placeholder_list);\n-\t       (TYPE_MAIN_VARIANT (TREE_TYPE (object))\n-\t\t!= TYPE_MAIN_VARIANT (type))\n-\t       && (TREE_CODE_CLASS (TREE_CODE (object)) == 'r'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (object)) == '1'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (object)) == '2'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (object)) == 'e');\n-\t       object = TREE_OPERAND (object, 0))\n-\t    ;\n-\n-\t  if (object != 0\n-\t      && (TYPE_MAIN_VARIANT (TREE_TYPE (object))\n-\t\t  == TYPE_MAIN_VARIANT (type)))\n+\t  /* See if the object is the type that we want.  Then see if\n+\t     the operand of any reference is the type we want.  */\n+\t  if ((TYPE_MAIN_VARIANT (TREE_TYPE (TREE_PURPOSE (placeholder_list)))\n+\t       == need_type))\n+\t    object = TREE_PURPOSE (placeholder_list);\n+\n+\t  /* Find the innermost reference that is of the type we want.    */\n+\t  for (elt = TREE_PURPOSE (placeholder_list);\n+\t       elt != 0\n+\t       && (TREE_CODE_CLASS (TREE_CODE (elt)) == 'r'\n+\t\t   || TREE_CODE_CLASS (TREE_CODE (elt)) == '1'\n+\t\t   || TREE_CODE_CLASS (TREE_CODE (elt)) == '2'\n+\t\t   || TREE_CODE_CLASS (TREE_CODE (elt)) == 'e');\n+\t       elt = ((TREE_CODE (elt) == COMPOUND_EXPR\n+\t\t       || TREE_CODE (elt) == COND_EXPR)\n+\t\t      ? TREE_OPERAND (elt, 1) : TREE_OPERAND (elt, 0)))\n+\t    if (TREE_CODE_CLASS (TREE_CODE (elt)) == 'r'\n+\t\t&& (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_OPERAND (elt, 0)))\n+\t\t    == need_type))\n+\t      object = TREE_OPERAND (elt, 0);\n+\n+\t  if (object != 0)\n \t    {\n \t      /* Expand this object skipping the list entries before\n \t\t it was found in case it is also a PLACEHOLDER_EXPR."}]}