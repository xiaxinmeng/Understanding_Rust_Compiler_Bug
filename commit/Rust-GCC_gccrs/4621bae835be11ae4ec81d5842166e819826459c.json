{"sha": "4621bae835be11ae4ec81d5842166e819826459c", "node_id": "C_kwDOANBUbNoAKDQ2MjFiYWU4MzViZTExYWU0ZWM4MWQ1ODQyMTY2ZTgxOTgyNjQ1OWM", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2022-07-07T11:55:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-13T10:01:17Z"}, "message": "[Ada] Clarify hardening command-line options that require explicit choices\n\nPrefixes -fzero-call-used-regs and -fstrub could be mistaken for full\ncommand-line options with the references to them in the GNAT RM.  Make\nit clearer that they require explicit choices.\n\ngcc/ada/\n\n\t* doc/gnat_rm/security_hardening_features.rst: Clarify the need\n\tfor choices after -fzero-call-used-regs and -fstrub.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "6d3cee303c0447ff772598b98006cf12da2056c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d3cee303c0447ff772598b98006cf12da2056c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4621bae835be11ae4ec81d5842166e819826459c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4621bae835be11ae4ec81d5842166e819826459c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4621bae835be11ae4ec81d5842166e819826459c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4621bae835be11ae4ec81d5842166e819826459c/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e3030ea9ae79880850c821887c9aa06a76ac21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3030ea9ae79880850c821887c9aa06a76ac21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3030ea9ae79880850c821887c9aa06a76ac21b"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "f5fdc8e46b47e2ae914f26a9ac5b9e2daccb70b1", "filename": "gcc/ada/doc/gnat_rm/security_hardening_features.rst", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4621bae835be11ae4ec81d5842166e819826459c/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4621bae835be11ae4ec81d5842166e819826459c/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst?ref=4621bae835be11ae4ec81d5842166e819826459c", "patch": "@@ -18,9 +18,10 @@ Register Scrubbing\n GNAT can generate code to zero-out hardware registers before returning\n from a subprogram.\n \n-It can be enabled with the :switch:`-fzero-call-used-regs` command-line\n-option, to affect all subprograms in a compilation, and with a\n-:samp:`Machine_Attribute` pragma, to affect only specific subprograms.\n+It can be enabled with the :switch:`-fzero-call-used-regs={choice}`\n+command-line option, to affect all subprograms in a compilation, and\n+with a :samp:`Machine_Attribute` pragma, to affect only specific\n+subprograms.\n \n .. code-block:: ada\n \n@@ -73,11 +74,11 @@ or a variable.)\n      --  scrubbing of the stack space used by that subprogram.\n \n \n-There are also :switch:`-fstrub` command-line options to control\n-default settings.  For usage and more details on the command-line\n-option, on the ``strub`` attribute, and their use with other\n-programming languages, see :title:`Using the GNU Compiler Collection\n-(GCC)`.\n+There are also :switch:`-fstrub={choice}` command-line options to\n+control default settings.  For usage and more details on the\n+command-line options, on the ``strub`` attribute, and their use with\n+other programming languages, see :title:`Using the GNU Compiler\n+Collection (GCC)`.\n \n Note that Ada secondary stacks are not scrubbed.  The restriction\n ``No_Secondary_Stack`` avoids their use, and thus their accidental"}, {"sha": "1ffc1464c4fe874f751a2b68335bb66e58f4a602", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4621bae835be11ae4ec81d5842166e819826459c/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4621bae835be11ae4ec81d5842166e819826459c/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4621bae835be11ae4ec81d5842166e819826459c", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Jun 24, 2022\n+GNAT Reference Manual , Jul 11, 2022\n \n AdaCore\n \n@@ -28922,9 +28922,10 @@ change.\n GNAT can generate code to zero-out hardware registers before returning\n from a subprogram.\n \n-It can be enabled with the @code{-fzero-call-used-regs} command-line\n-option, to affect all subprograms in a compilation, and with a\n-@code{Machine_Attribute} pragma, to affect only specific subprograms.\n+It can be enabled with the @code{-fzero-call-used-regs=@emph{choice}}\n+command-line option, to affect all subprograms in a compilation, and\n+with a @code{Machine_Attribute} pragma, to affect only specific\n+subprograms.\n \n @example\n procedure Foo;\n@@ -28975,10 +28976,10 @@ pragma Machine_Attribute (Var, \"strub\");\n --  scrubbing of the stack space used by that subprogram.\n @end example\n \n-There are also @code{-fstrub} command-line options to control\n-default settings.  For usage and more details on the command-line\n-option, on the @code{strub} attribute, and their use with other\n-programming languages, see @cite{Using the GNU Compiler Collection (GCC)}.\n+There are also @code{-fstrub=@emph{choice}} command-line options to\n+control default settings.  For usage and more details on the\n+command-line options, on the @code{strub} attribute, and their use with\n+other programming languages, see @cite{Using the GNU Compiler Collection (GCC)}.\n \n Note that Ada secondary stacks are not scrubbed.  The restriction\n @code{No_Secondary_Stack} avoids their use, and thus their accidental"}]}