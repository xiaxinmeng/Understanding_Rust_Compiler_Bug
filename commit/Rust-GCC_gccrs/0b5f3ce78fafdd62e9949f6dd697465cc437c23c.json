{"sha": "0b5f3ce78fafdd62e9949f6dd697465cc437c23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI1ZjNjZTc4ZmFmZGQ2MmU5OTQ5ZjZkZDY5NzQ2NWNjNDM3YzIzYw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-09-19T16:27:57Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2011-09-19T16:27:57Z"}, "message": "Patch for 50341\n\nCo-Authored-By: Michael Meissner <meissner@linux.vnet.ibm.com>\n\nFrom-SVN: r178977", "tree": {"sha": "a66f6ce676d317754ff1f8b7995795b6ff262655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a66f6ce676d317754ff1f8b7995795b6ff262655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b5f3ce78fafdd62e9949f6dd697465cc437c23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5f3ce78fafdd62e9949f6dd697465cc437c23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5f3ce78fafdd62e9949f6dd697465cc437c23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5f3ce78fafdd62e9949f6dd697465cc437c23c/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a1357fbe0ab7a5090d52796850e07b354dcef90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1357fbe0ab7a5090d52796850e07b354dcef90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1357fbe0ab7a5090d52796850e07b354dcef90"}], "stats": {"total": 140, "additions": 30, "deletions": 110}, "files": [{"sha": "347d74e20868d0058076e32f89b1175da4c01163", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5f3ce78fafdd62e9949f6dd697465cc437c23c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5f3ce78fafdd62e9949f6dd697465cc437c23c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b5f3ce78fafdd62e9949f6dd697465cc437c23c", "patch": "@@ -1,3 +1,19 @@\n+2011-09-19  Alan Modra  <amodra@gmail.com>\n+\t    Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/50341\n+\t* config/rs6000/rs6000.md (call_indirect_aix<ptrsize>): Do not\n+\tsplit the load of the indirect function's TOC from the call to\n+\tprevent the compiler from moving the load of the new TOC above\n+\tcode that references the current function's TOC.\n+\t(call_indirect_aix<ptrsize>_internal): Ditto.\n+\t(call_indirect_aix<ptrsize>_nor11): Ditto.\n+\t(call_indirect_aix<ptrsize>_internal2): Ditto.\n+\t(call_value_indirect_aix<ptrsize>): Ditto.\n+\t(call_value_indirect_aix<ptrsize>_internal): Ditto.\n+\t(call_value_indirect_aix<ptrsize>_nor11): Ditto.\n+\t(call_value_indirect_aix<ptrsize>_internal2): Ditto.\n+\n 2011-09-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (*sse4_1_extractps): Change into"}, {"sha": "a2e6fdc2b2083dc8cf853a76b0af3f3c2028f929", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 14, "deletions": 110, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5f3ce78fafdd62e9949f6dd697465cc437c23c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5f3ce78fafdd62e9949f6dd697465cc437c23c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0b5f3ce78fafdd62e9949f6dd697465cc437c23c", "patch": "@@ -12379,169 +12379,73 @@\n ;; Operand2 is the location in the function descriptor to load r2 from\n ;; Operand3 is the stack location to hold the current TOC pointer\n \n-(define_insn_and_split \"call_indirect_aix<ptrsize>\"\n+(define_insn \"call_indirect_aix<ptrsize>\"\n   [(call (mem:SI (match_operand:P 0 \"register_operand\" \"c,*l\"))\n \t (match_operand 1 \"\" \"g,g\"))\n    (use (match_operand:P 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:P 3 \"memory_operand\" \"m,m\"))\n+   (set (reg:P TOC_REGNUM) (match_operand:P 3 \"memory_operand\" \"m,m\"))\n    (use (reg:P STATIC_CHAIN_REGNUM))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_AIX && TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (reg:P TOC_REGNUM) (match_dup 2))\n-   (parallel [(call (mem:SI (match_dup 0))\n-\t\t    (match_dup 1))\n-\t      (use (reg:P TOC_REGNUM))\n-\t      (use (reg:P STATIC_CHAIN_REGNUM))\n-\t      (use (match_dup 3))\n-\t      (set (reg:P TOC_REGNUM) (match_dup 3))\n-\t      (clobber (reg:P LR_REGNO))])]\n-  \"\"\n+  \"<ptrload> 2,%2\\;b%T0l\\;<ptrload> 2,%3\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"*call_indirect_aix<ptrsize>_internal\"\n-  [(call (mem:SI (match_operand:P 0 \"register_operand\" \"c,*l\"))\n-\t (match_operand 1 \"\" \"g,g\"))\n-   (use (reg:P TOC_REGNUM))\n-   (use (reg:P STATIC_CHAIN_REGNUM))\n-   (use (match_operand:P 2 \"memory_operand\" \"m,m\"))\n-   (set (reg:P TOC_REGNUM) (match_dup 2))\n-   (clobber (reg:P LR_REGNO))]\n-  \"DEFAULT_ABI == ABI_AIX && reload_completed\n-   && TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"b%T0l\\;<ptrload> 2,%2\"\n-  [(set_attr \"type\" \"jmpreg\")\n-   (set_attr \"length\" \"8\")])\n-\n-;; Like call_indirect_aix<ptrsize>, except don't load the static chain\n+;; Like call_indirect_aix<ptrsize>, but no use of the static chain\n ;; Operand0 is the addresss of the function to call\n ;; Operand1 is the flag for System V.4 for unprototyped or FP registers\n ;; Operand2 is the location in the function descriptor to load r2 from\n ;; Operand3 is the stack location to hold the current TOC pointer\n \n-(define_insn_and_split \"call_indirect_aix<ptrsize>_nor11\"\n+(define_insn \"call_indirect_aix<ptrsize>_nor11\"\n   [(call (mem:SI (match_operand:P 0 \"register_operand\" \"c,*l\"))\n \t (match_operand 1 \"\" \"g,g\"))\n    (use (match_operand:P 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:P 3 \"memory_operand\" \"m,m\"))\n+   (set (reg:P TOC_REGNUM) (match_operand:P 3 \"memory_operand\" \"m,m\"))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_AIX && !TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (reg:P TOC_REGNUM) (match_dup 2))\n-   (parallel [(call (mem:SI (match_dup 0))\n-\t\t    (match_dup 1))\n-\t      (use (reg:P TOC_REGNUM))\n-\t      (use (match_dup 3))\n-\t      (set (reg:P TOC_REGNUM) (match_dup 3))\n-\t      (clobber (reg:P LR_REGNO))])]\n-  \"\"\n+  \"<ptrload> 2,%2\\;b%T0l\\;<ptrload> 2,%3\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"*call_indirect_aix<ptrsize>_internal2\"\n-  [(call (mem:SI (match_operand:P 0 \"register_operand\" \"c,*l\"))\n-\t (match_operand 1 \"\" \"g,g\"))\n-   (use (reg:P TOC_REGNUM))\n-   (use (match_operand:P 2 \"memory_operand\" \"m,m\"))\n-   (set (reg:P TOC_REGNUM) (match_dup 2))\n-   (clobber (reg:P LR_REGNO))]\n-  \"DEFAULT_ABI == ABI_AIX && reload_completed\n-   && !TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"b%T0l\\;<ptrload> 2,%2\"\n-  [(set_attr \"type\" \"jmpreg\")\n-   (set_attr \"length\" \"8\")])\n-\n ;; Operand0 is the return result of the function\n ;; Operand1 is the addresss of the function to call\n ;; Operand2 is the flag for System V.4 for unprototyped or FP registers\n ;; Operand3 is the location in the function descriptor to load r2 from\n ;; Operand4 is the stack location to hold the current TOC pointer\n \n-(define_insn_and_split \"call_value_indirect_aix<ptrsize>\"\n+(define_insn \"call_value_indirect_aix<ptrsize>\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (mem:SI (match_operand:P 1 \"register_operand\" \"c,*l\"))\n \t      (match_operand 2 \"\" \"g,g\")))\n    (use (match_operand:P 3 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:P 4 \"memory_operand\" \"m,m\"))\n+   (set (reg:P TOC_REGNUM) (match_operand:P 4 \"memory_operand\" \"m,m\"))\n    (use (reg:P STATIC_CHAIN_REGNUM))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_AIX && TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (reg:P TOC_REGNUM) (match_dup 3))\n-   (parallel [(set (match_dup 0)\n-\t\t   (call (mem:SI (match_dup 1))\n-\t\t\t (match_dup 2)))\n-\t      (use (reg:P TOC_REGNUM))\n-\t      (use (reg:P STATIC_CHAIN_REGNUM))\n-\t      (use (match_dup 4))\n-\t      (set (reg:P TOC_REGNUM) (match_dup 4))\n-\t      (clobber (reg:P LR_REGNO))])]\n-  \"\"\n+  \"<ptrload> 2,%3\\;b%T1l\\;<ptrload> 2,%4\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"*call_value_indirect_aix<ptrsize>_internal\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:P 1 \"register_operand\" \"c,*l\"))\n-\t      (match_operand 2 \"\" \"g,g\")))\n-   (use (reg:P TOC_REGNUM))\n-   (use (reg:P STATIC_CHAIN_REGNUM))\n-   (use (match_operand:P 3 \"memory_operand\" \"m,m\"))\n-   (set (reg:P TOC_REGNUM) (match_dup 3))\n-   (clobber (reg:P LR_REGNO))]\n-  \"DEFAULT_ABI == ABI_AIX && reload_completed\n-   && TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"b%T1l\\;<ptrload> 2,%3\"\n-  [(set_attr \"type\" \"jmpreg\")\n-   (set_attr \"length\" \"8\")])\n-\n-;; Like call_value_indirect_aix<ptrsize>, but don't load the static chain\n+;; Like call_value_indirect_aix<ptrsize>, but no use of the static chain\n ;; Operand0 is the return result of the function\n ;; Operand1 is the addresss of the function to call\n ;; Operand2 is the flag for System V.4 for unprototyped or FP registers\n ;; Operand3 is the location in the function descriptor to load r2 from\n ;; Operand4 is the stack location to hold the current TOC pointer\n \n-(define_insn_and_split \"call_value_indirect_aix<ptrsize>_nor11\"\n+(define_insn \"call_value_indirect_aix<ptrsize>_nor11\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (mem:SI (match_operand:P 1 \"register_operand\" \"c,*l\"))\n \t      (match_operand 2 \"\" \"g,g\")))\n    (use (match_operand:P 3 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:P 4 \"memory_operand\" \"m,m\"))\n+   (set (reg:P TOC_REGNUM) (match_operand:P 4 \"memory_operand\" \"m,m\"))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_AIX && !TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (reg:P TOC_REGNUM) (match_dup 3))\n-   (parallel [(set (match_dup 0)\n-\t\t   (call (mem:SI (match_dup 1))\n-\t\t\t (match_dup 2)))\n-\t      (use (reg:P TOC_REGNUM))\n-\t      (use (match_dup 4))\n-\t      (set (reg:P TOC_REGNUM) (match_dup 4))\n-\t      (clobber (reg:P LR_REGNO))])]\n-  \"\"\n+  \"<ptrload> 2,%3\\;b%T1l\\;<ptrload> 2,%4\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"*call_value_indirect_aix<ptrsize>_internal2\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:P 1 \"register_operand\" \"c,*l\"))\n-\t      (match_operand 2 \"\" \"g,g\")))\n-   (use (reg:P TOC_REGNUM))\n-   (use (match_operand:P 3 \"memory_operand\" \"m,m\"))\n-   (set (reg:P TOC_REGNUM) (match_dup 3))\n-   (clobber (reg:P LR_REGNO))]\n-  \"DEFAULT_ABI == ABI_AIX && reload_completed\n-   && !TARGET_POINTERS_TO_NESTED_FUNCTIONS\"\n-  \"b%T1l\\;<ptrload> 2,%3\"\n-  [(set_attr \"type\" \"jmpreg\")\n-   (set_attr \"length\" \"8\")])\n-\n ;; Call to function which may be in another module.  Restore the TOC\n ;; pointer (r2) after the call unless this is System V.\n ;; Operand2 is nonzero if we are using the V.4 calling sequence and"}]}