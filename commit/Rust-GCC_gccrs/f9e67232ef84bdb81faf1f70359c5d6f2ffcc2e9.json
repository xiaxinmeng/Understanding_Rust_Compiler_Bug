{"sha": "f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjllNjcyMzJlZjg0YmRiODFmYWYxZjcwMzU5YzVkNmYyZmZjYzJlOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-31T21:16:47Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-31T21:16:47Z"}, "message": "(simplify_shift_const):\n\nFor a subreg, require subreg_lowpart_p and not paradoxical.\n\nFrom-SVN: r2664", "tree": {"sha": "f02b4c72cfa09b61f143417f4be6bc1cd3e37ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f02b4c72cfa09b61f143417f4be6bc1cd3e37ec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9/comments", "author": null, "committer": null, "parents": [{"sha": "62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "3f90edb926d6bc0706ab4754b8b27f1e8e578bc7", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f9e67232ef84bdb81faf1f70359c5d6f2ffcc2e9", "patch": "@@ -6792,7 +6792,9 @@ simplify_shift_const (x, code, result_mode, varop, count)\n \t  /* If VAROP is a SUBREG, strip it as long as the inner operand has\n \t     the same number of words as what we've seen so far.  Then store\n \t     the widest mode in MODE.  */\n-\t  if (SUBREG_WORD (varop) == 0\n+\t  if (subreg_lowpart_p (varop)\n+\t      && (GET_MODE_SIZE (GET_MODE (SUBREG_REG (varop)))\n+\t\t  > GET_MODE_SIZE (GET_MODE (varop)))\n \t      && (((GET_MODE_SIZE (GET_MODE (SUBREG_REG (varop)))\n \t\t    + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD)\n \t\t  == mode_words))"}]}