{"sha": "75d727d2d061d3e81813cd557ffbc9ff229cff40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVkNzI3ZDJkMDYxZDNlODE4MTNjZDU1N2ZmYmM5ZmYyMjljZmY0MA==", "commit": {"author": {"name": "Andrew Senkevich", "email": "andrew.senkevich@intel.com", "date": "2016-12-17T11:42:05Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-17T11:42:05Z"}, "message": "avx512bwintrin.h: Add new k-mask intrinsics.\n\n\t* config/i386/avx512bwintrin.h: Add new k-mask intrinsics.\n\t* config/i386/avx512dqintrin.h: Ditto.\n\t* config/i386/avx512fintrin.h: Ditto.\n\t* config/i386/i386-builtin.def (__builtin_ia32_kaddqi,\n\t__builtin_ia32_kaddhi, __builtin_ia32_kaddsi,\n\t__builtin_ia32_kadddi): New.\n\t* config/i386/sse.md (kadd<mode>): New.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512bw-kaddd-1.c: New test.\n\t* gcc.target/i386/avx512bw-kaddq-1.c: Ditto.\n\t* gcc.target/i386/avx512dq-kaddb-1.c: Ditto.\n\t* gcc.target/i386/avx512f-kaddw-1.c: Ditto.\n\nFrom-SVN: r243774", "tree": {"sha": "78032a13e49cf0754b44133f967b34014dff14ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78032a13e49cf0754b44133f967b34014dff14ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75d727d2d061d3e81813cd557ffbc9ff229cff40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d727d2d061d3e81813cd557ffbc9ff229cff40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d727d2d061d3e81813cd557ffbc9ff229cff40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d727d2d061d3e81813cd557ffbc9ff229cff40/comments", "author": null, "committer": null, "parents": [{"sha": "52fd48aeeac6fb83082ed2d89df3688d184a3544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52fd48aeeac6fb83082ed2d89df3688d184a3544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52fd48aeeac6fb83082ed2d89df3688d184a3544"}], "stats": {"total": 117, "additions": 113, "deletions": 4}, "files": [{"sha": "388532e89163b89a6c5c9506c98878fb3f827f0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -1,3 +1,13 @@\n+2016-12-17  Andrew Senkevich  <andrew.senkevich@intel.com>\n+\n+\t* config/i386/avx512bwintrin.h: Add new k-mask intrinsics.\n+\t* config/i386/avx512dqintrin.h: Ditto.\n+\t* config/i386/avx512fintrin.h: Ditto.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_kaddqi,\n+\t__builtin_ia32_kaddhi, __builtin_ia32_kaddsi,\n+\t__builtin_ia32_kadddi): New.\n+\t* config/i386/sse.md (kadd<mode>): New.\n+\n 2016-12-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*tzcnt<mode>_1): Merge *tzcnt<mode>_1_falsedep_1"}, {"sha": "e38055c1f092e5cf27b422ef178b4f6c510154e1", "filename": "gcc/config/i386/avx512bwintrin.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -40,6 +40,20 @@ typedef char __v64qi __attribute__ ((__vector_size__ (64)));\n \n typedef unsigned long long __mmask64;\n \n+extern __inline __mmask32\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_kadd_mask32 (__mmask32 __A, __mmask32 __B)\n+{\n+  return (__mmask32) __builtin_ia32_kaddsi ((__mmask32) __A, (__mmask32) __B);\n+}\n+\n+extern __inline __mmask64\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_kadd_mask64 (__mmask64 __A, __mmask64 __B)\n+{\n+  return (__mmask64) __builtin_ia32_kadddi ((__mmask64) __A, (__mmask64) __B);\n+}\n+\n extern __inline unsigned int\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _cvtmask32_u32 (__mmask32 __A)"}, {"sha": "ccc6a4d31e77db29f26a1de56cb2fe49f0548e1c", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -34,6 +34,13 @@\n #define __DISABLE_AVX512DQ__\n #endif /* __AVX512DQ__ */\n \n+extern __inline __mmask8\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_kadd_mask8 (__mmask8 __A, __mmask8 __B)\n+{\n+  return (__mmask8) __builtin_ia32_kaddqi ((__mmask8) __A, (__mmask8) __B);\n+}\n+\n extern __inline unsigned int\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _cvtmask8_u32 (__mmask8 __A)"}, {"sha": "820741c4b144be1d0756ddee2b6f2d8badd9b15b", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -9984,6 +9984,13 @@ _mm512_maskz_expandloadu_epi32 (__mmask16 __U, void const *__P)\n #define _kxnor_mask16 _mm512_kxnor\n #define _kxor_mask16 _mm512_kxor\n \n+extern __inline __mmask16\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_kadd_mask16 (__mmask16 __A, __mmask16 __B)\n+{\n+  return (__mmask16) __builtin_ia32_kaddhi ((__mmask16) __A, (__mmask16) __B);\n+}\n+\n extern __inline unsigned int\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _cvtmask16_u32 (__mmask16 __A)"}, {"sha": "37a983ff86c364b6bbe5c5299c64cae7a5664259", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -1471,6 +1471,10 @@ BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_kmovb, \"__builtin_ia32_kmovb\", IX86_BU\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_kmovw, \"__builtin_ia32_kmovw\", IX86_BUILTIN_KMOV16, UNKNOWN, (int) UHI_FTYPE_UHI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kmovd, \"__builtin_ia32_kmovd\", IX86_BUILTIN_KMOV32, UNKNOWN, (int) USI_FTYPE_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kmovq, \"__builtin_ia32_kmovq\", IX86_BUILTIN_KMOV64, UNKNOWN, (int) UDI_FTYPE_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_kaddqi, \"__builtin_ia32_kaddqi\", IX86_BUILTIN_KADD8, UNKNOWN, (int) UQI_FTYPE_UQI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_kaddhi, \"__builtin_ia32_kaddhi\", IX86_BUILTIN_KADD16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kaddsi, \"__builtin_ia32_kaddsi\", IX86_BUILTIN_KADD32, UNKNOWN, (int) USI_FTYPE_USI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kadddi, \"__builtin_ia32_kadddi\", IX86_BUILTIN_KADD64, UNKNOWN, (int) UDI_FTYPE_UDI_UDI)\n \n /* SHA */\n BDESC (OPTION_MASK_ISA_SSE2, CODE_FOR_sha1msg1, 0, IX86_BUILTIN_SHA1MSG1, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI)"}, {"sha": "696822c3550cd8d50e5cca267cb85e2ad715d166", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -1306,9 +1306,6 @@\n (define_mode_iterator SWI1248_AVX512BW\n   [QI HI (SI \"TARGET_AVX512BW\") (DI \"TARGET_AVX512BW\")])\n \n-;; Mask variant shift mnemonics\n-(define_code_attr mshift [(ashift \"shiftl\") (lshiftrt \"shiftr\")])\n-\n (define_expand \"kmov<mskmodesuffix>\"\n   [(set (match_operand:SWI1248_AVX512BWDQ 0 \"nonimmediate_operand\")\n \t(match_operand:SWI1248_AVX512BWDQ 1 \"nonimmediate_operand\"))]\n@@ -1404,6 +1401,21 @@\n \t   ]\n \t   (const_string \"<MODE>\")))])\n \n+(define_insn \"kadd<mode>\"\n+  [(set (match_operand:SWI1248_AVX512BWDQ 0 \"register_operand\" \"=k\")\n+\t(plus:SWI1248_AVX512BWDQ\n+\t  (match_operand:SWI1248_AVX512BWDQ 1 \"register_operand\" \"k\")\n+\t  (match_operand:SWI1248_AVX512BWDQ 2 \"register_operand\" \"k\")))\n+   (unspec [(const_int 0)] UNSPEC_MASKOP)]\n+  \"TARGET_AVX512F\"\n+  \"kadd<mskmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"msklog\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+;; Mask variant shift mnemonics\n+(define_code_attr mshift [(ashift \"shiftl\") (lshiftrt \"shiftr\")])\n+\n (define_insn \"*k<code><mode>\"\n   [(set (match_operand:SWI1248_AVX512BWDQ 0 \"register_operand\" \"=k\")\n \t(any_lshift:SWI1248_AVX512BWDQ"}, {"sha": "af27093c7db52d005ab4b669b289b336b7d78b0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -1,3 +1,10 @@\n+2016-12-17  Andrew Senkevich  <andrew.senkevich@intel.com>\n+\n+\t* gcc.target/i386/avx512bw-kaddd-1.c: New test.\n+\t* gcc.target/i386/avx512bw-kaddq-1.c: Ditto.\n+\t* gcc.target/i386/avx512dq-kaddb-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-kaddw-1.c: Ditto.\n+\n 2016-12-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/78239\n@@ -224,7 +231,7 @@\n \n 2016-12-14  Toma Tabacu  <toma.tabacu@imgtec.com>\n \n-\t* gcc.target/mips/msa-builtins-err.c (dg-options): Add \n+\t* gcc.target/mips/msa-builtins-err.c (dg-options): Add\n \t-ffat-lto-objects option.\n \n 2016-12-14  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>"}, {"sha": "1f6c61f03295a16fd255dc7610c1d1d6b29e240b", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-kaddd-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kaddd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kaddd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kaddd-1.c?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512bw -O2\" } */\n+/* { dg-final { scan-assembler-times \"kaddd\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+#include <immintrin.h>\n+\n+void\n+avx512bw_test ()\n+{\n+  __mmask32 k = _kadd_mask32 (11, 12);\n+  asm volatile (\"\" : \"+k\" (k));\n+}"}, {"sha": "9e9aaaefb340d048ca3005d0ce6074ee979f282b", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-kaddq-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kaddq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kaddq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kaddq-1.c?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512bw -O2\" } */\n+/* { dg-final { scan-assembler-times \"kaddq\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+#include <immintrin.h>\n+\n+void\n+avx512bw_test ()\n+{\n+  __mmask64 k = _kadd_mask64 (11, 12);\n+  asm volatile (\"\" : \"+k\" (k));\n+}"}, {"sha": "4be7b0b385cc3e9cddc8ebebefcae5dbc476fa13", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-kaddb-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-kaddb-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-kaddb-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-kaddb-1.c?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512dq -O2\" } */\n+/* { dg-final { scan-assembler-times \"kaddb\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+#include <immintrin.h>\n+\n+void\n+avx512dq_test ()\n+{\n+  __mmask8 k = _kadd_mask8 (11, 12);\n+  asm volatile (\"\" : \"+k\" (k));\n+}"}, {"sha": "957a39540fb55b9346ffe0226c38748c07d5b30d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kaddw-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kaddw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d727d2d061d3e81813cd557ffbc9ff229cff40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kaddw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kaddw-1.c?ref=75d727d2d061d3e81813cd557ffbc9ff229cff40", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"kaddw\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+#include <immintrin.h>\n+\n+void\n+avx512f_test ()\n+{\n+  __mmask16 k = _kadd_mask16 (11, 12);\n+  asm volatile (\"\" : \"+k\" (k));\n+}"}]}