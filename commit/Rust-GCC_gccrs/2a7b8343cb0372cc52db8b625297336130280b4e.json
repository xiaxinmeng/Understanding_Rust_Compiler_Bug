{"sha": "2a7b8343cb0372cc52db8b625297336130280b4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3YjgzNDNjYjAzNzJjYzUyZGI4YjYyNTI5NzMzNjEzMDI4MGI0ZQ==", "commit": {"author": {"name": "Simon Baldwin", "email": "simonb@google.com", "date": "2007-07-02T17:57:57Z"}, "committer": {"name": "Simon Baldwin", "email": "simonb@gcc.gnu.org", "date": "2007-07-02T17:57:57Z"}, "message": "parser.c (cp_parser_elaborated_type_specifier): Added a warning for inner-style nested forward declarations that don't declare...\n\n2007-07-02  Simon Baldwin  <simonb@google.com>\n\n        * parser.c (cp_parser_elaborated_type_specifier): Added a warning\n        for inner-style nested forward declarations that don't declare\n        anything useful.\n\nFrom-SVN: r126219", "tree": {"sha": "3a99335dd999003cb987b005ffaed594727657ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a99335dd999003cb987b005ffaed594727657ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a7b8343cb0372cc52db8b625297336130280b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7b8343cb0372cc52db8b625297336130280b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7b8343cb0372cc52db8b625297336130280b4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7b8343cb0372cc52db8b625297336130280b4e/comments", "author": null, "committer": null, "parents": [{"sha": "d49343266bbe24e86d772f2cf1513012e1fae90c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49343266bbe24e86d772f2cf1513012e1fae90c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d49343266bbe24e86d772f2cf1513012e1fae90c"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "27f6dc5f1b3cd8bd6ff5a7aa622cf01becc885f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7b8343cb0372cc52db8b625297336130280b4e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7b8343cb0372cc52db8b625297336130280b4e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2a7b8343cb0372cc52db8b625297336130280b4e", "patch": "@@ -1,3 +1,9 @@\n+2007-07-02  Simon Baldwin  <simonb@google.com>\n+\n+\t* parser.c (cp_parser_elaborated_type_specifier): Added a warning\n+\tfor inner-style nested forward declarations that don't declare\n+\tanything useful.\n+\n 2007-07-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/31748"}, {"sha": "d6e62045dd2e62cf19479625dcddb1591c706a67", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7b8343cb0372cc52db8b625297336130280b4e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7b8343cb0372cc52db8b625297336130280b4e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2a7b8343cb0372cc52db8b625297336130280b4e", "patch": "@@ -10913,6 +10913,23 @@ cp_parser_elaborated_type_specifier (cp_parser* parser,\n                 return error_mark_node;\n             }\n \n+          /* Forward declarations of nested types, such as\n+\n+               class C1::C2;\n+               class C1::C2::C3;\n+\n+             are invalid unless all components preceding the final '::'\n+             are complete.  If all enclosing types are complete, these\n+             declarations become merely pointless.\n+\n+             Invalid forward declarations of nested types are errors\n+             caught elsewhere in parsing.  Those that are pointless arrive\n+             here.  */\n+\n+          if (cp_parser_declares_only_class_p (parser)\n+              && !is_friend && !processing_explicit_instantiation)\n+            warning (0, \"declaration %qD does not declare anything\", decl);\n+\n \t  type = TREE_TYPE (decl);\n \t}\n       else"}, {"sha": "dae99486a91f552dccc5174bb214833428b31a4c", "filename": "gcc/testsuite/g++.dg/warn/forward-inner.C", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7b8343cb0372cc52db8b625297336130280b4e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fforward-inner.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7b8343cb0372cc52db8b625297336130280b4e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fforward-inner.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fforward-inner.C?ref=2a7b8343cb0372cc52db8b625297336130280b4e", "patch": "@@ -0,0 +1,81 @@\n+// Check that the compiler warns about inner-style forward declarations in\n+// contexts where they're not actually illegal, but merely useless.\n+\n+// Verify warnings for and within classes, and by extension, struct and union.\n+class C1;\n+class C1::C2;      // { dg-error \"does not name a type\" }\n+class C1::C2::C3;  // { dg-error \"has not been declared\" }\n+\n+class C1 {\n+ public:\n+  class C2;\n+  class C2::C3;    // { dg-error \"does not name a type\" }\n+  class C2 {\n+   public:\n+    class C3;\n+    class C3 { };\n+    class C3;\n+  };\n+  class C2;\n+  class C2::C3;    // { dg-warning \"declaration 'class C1::C2::C3' does not declare anything\" }\n+};\n+\n+class C1;\n+class C1::C2;      // { dg-warning \"declaration 'class C1::C2' does not declare anything\" }\n+class C1::C2::C3;  // { dg-warning \"declaration 'class C1::C2::C3' does not declare anything\" }\n+\n+\n+// Verify warnings for namespace scopes.\n+class N1::C4;      // { dg-error \"has not been declared\" }\n+class N1::N2::C5;  // { dg-error \"has not been declared\" }\n+\n+namespace N1 {\n+  class C4;\n+  class C4 { };\n+  class C4;\n+\n+  class N2::C5;    // { dg-error \"has not been declared\" }\n+  namespace N2 {\n+    class C5;\n+    class C5 { };\n+    class C5;\n+  }\n+  class N2::C5;    // { dg-warning \"declaration 'class N1::N2::C5' does not declare anything\" }\n+}\n+\n+class N1::C4;      // { dg-warning \"declaration 'class N1::C4' does not declare anything\" }\n+class N1::N2::C5;  // { dg-warning \"declaration 'class N1::N2::C5' does not declare anything\" }\n+\n+\n+// Verify that using declarations related to namespaces don't generate a\n+// warning.\n+using namespace N1;\n+using namespace N1::N2;\n+\n+namespace N3 {\n+  using N1::C4;      // Valid using declaration, no warning\n+  using N1::N2::C5;  // Valid using declaration, no warning\n+}\n+\n+\n+// Verify that explicit template instantiations, easy to confuse with\n+// forward declarations, don't generate a warning.\n+template<class C>\n+class TC6 {\n+ public:\n+  class TC7 { };\n+};\n+\n+template class TC6<int>::TC7;  // Valid explicit instantiation, no warning\n+\n+\n+// Verify that friend declarations, also easy to confuse with forward\n+// declrations, are similarly not warned about.\n+class C8 {\n+ public:\n+  class C9 { };\n+};\n+class C10 {\n+ public:\n+  friend class C8::C9;         // Valid friend declaration, no warning\n+};"}]}