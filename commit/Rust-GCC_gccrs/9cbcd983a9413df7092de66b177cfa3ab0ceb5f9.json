{"sha": "9cbcd983a9413df7092de66b177cfa3ab0ceb5f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiY2Q5ODNhOTQxM2RmNzA5MmRlNjZiMTc3Y2ZhM2FiMGNlYjVmOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-02-02T21:38:49Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-02-02T21:38:49Z"}, "message": "* config/h8300/h8300.c: Fix formatting.\n\nFrom-SVN: r49449", "tree": {"sha": "b62dc2e0343482448aaca119027e98dafc2841bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b62dc2e0343482448aaca119027e98dafc2841bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9/comments", "author": null, "committer": null, "parents": [{"sha": "7a27efc4eb366a39d5c0a4a8dda6f0cbe2c91826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a27efc4eb366a39d5c0a4a8dda6f0cbe2c91826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a27efc4eb366a39d5c0a4a8dda6f0cbe2c91826"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "cde41956626d36a89bd902076cad27acaf3e3c63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cbcd983a9413df7092de66b177cfa3ab0ceb5f9", "patch": "@@ -1,3 +1,7 @@\n+2002-02-02  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c: Fix formatting.\n+\n 2002-02-02  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.md: Fix formatting."}, {"sha": "13fc17ec1b949cdf0be3a2cfde1f4ae218e95d09", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbcd983a9413df7092de66b177cfa3ab0ceb5f9/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9cbcd983a9413df7092de66b177cfa3ab0ceb5f9", "patch": "@@ -148,30 +148,31 @@ byte_reg (x, b)\n      rtx x;\n      int b;\n {\n-  static const char *const names_small[] =\n-  {\"r0l\", \"r0h\", \"r1l\", \"r1h\", \"r2l\", \"r2h\", \"r3l\", \"r3h\",\n-   \"r4l\", \"r4h\", \"r5l\", \"r5h\", \"r6l\", \"r6h\", \"r7l\", \"r7h\"};\n+  static const char *const names_small[] = {\n+    \"r0l\", \"r0h\", \"r1l\", \"r1h\", \"r2l\", \"r2h\", \"r3l\", \"r3h\",\n+    \"r4l\", \"r4h\", \"r5l\", \"r5h\", \"r6l\", \"r6h\", \"r7l\", \"r7h\"\n+  };\n \n   return names_small[REGNO (x) * 2 + b];\n }\n \n /* REGNO must be saved/restored across calls if this macro is true.  */\n \n-#define WORD_REG_USED(regno)\t\t\t\t\t\\\n-  (regno < 7\t\t\t\t\t\t\t\\\n-   /* No need to save registers if this function will not return.  */\\\n-   && ! TREE_THIS_VOLATILE (current_function_decl)\t\t\\\n-   && (pragma_saveall\t\t\t\t\t\t\\\n-       /* Save any call saved register that was used.  */\t\\\n-       || (regs_ever_live[regno] && !call_used_regs[regno])\t\\\n-       /* Save the frame pointer if it was used.  */\t\t\\\n-       || (regno == FRAME_POINTER_REGNUM && regs_ever_live[regno])\\\n-       /* Save any register used in an interrupt handler.  */\t\\\n-       || (interrupt_handler && regs_ever_live[regno])\t\t\\\n-       /* Save call clobbered registers in non-leaf interrupt\t\\\n-\t  handlers.  */\t\t\t\t\t\t\\\n-       || (interrupt_handler\t\t\t\t\t\\\n-\t   && call_used_regs[regno]\t\t\t\t\\\n+#define WORD_REG_USED(regno)\t\t\t\t\t\t\\\n+  (regno < 7\t\t\t\t\t\t\t\t\\\n+   /* No need to save registers if this function will not return.  */\t\\\n+   && ! TREE_THIS_VOLATILE (current_function_decl)\t\t\t\\\n+   && (pragma_saveall\t\t\t\t\t\t\t\\\n+       /* Save any call saved register that was used.  */\t\t\\\n+       || (regs_ever_live[regno] && !call_used_regs[regno])\t\t\\\n+       /* Save the frame pointer if it was used.  */\t\t\t\\\n+       || (regno == FRAME_POINTER_REGNUM && regs_ever_live[regno])\t\\\n+       /* Save any register used in an interrupt handler.  */\t\t\\\n+       || (interrupt_handler && regs_ever_live[regno])\t\t\t\\\n+       /* Save call clobbered registers in non-leaf interrupt\t\t\\\n+\t  handlers.  */\t\t\t\t\t\t\t\\\n+       || (interrupt_handler\t\t\t\t\t\t\\\n+\t   && call_used_regs[regno]\t\t\t\t\t\\\n \t   && !current_function_is_leaf)))\n \n /* Output assembly language to FILE for the operation OP with operand size"}]}