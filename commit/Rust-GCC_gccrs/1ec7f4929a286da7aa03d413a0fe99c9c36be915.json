{"sha": "1ec7f4929a286da7aa03d413a0fe99c9c36be915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVjN2Y0OTI5YTI4NmRhN2FhMDNkNDEzYTBmZTk5YzljMzZiZTkxNQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2018-11-15T17:14:15Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2018-11-15T17:14:15Z"}, "message": "Handle vectors that don't fit in an integer.\n\nGCN vector sizes range between 64 and 512 bytes, none of which have\ncorrespondingly sized integer modes.  This breaks a number of assumptions\nthroughout the compiler, but I don't really want to create modes just for this\npurpose.\n\nInstead, this patch fixes up the cases that I've found, so far, such that the\ncompiler tries something else, or fails to optimize, rather than just ICE.\n\n2018-11-15  Andrew Stubbs  <ams@codesourcery.com>\n            Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tgcc/\n\t* tree-vect-stmts.c (vectorizable_store): Don't ICE when\n\tint_mode_for_size fails.\n\t(vectorizable_load): Likewise.\n\nCo-Authored-By: Kwok Cheung Yeung <kcy@codesourcery.com>\n\nFrom-SVN: r266190", "tree": {"sha": "8b4f15e343837ad357e3109beffa90c0c88fc487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b4f15e343837ad357e3109beffa90c0c88fc487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ec7f4929a286da7aa03d413a0fe99c9c36be915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec7f4929a286da7aa03d413a0fe99c9c36be915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ec7f4929a286da7aa03d413a0fe99c9c36be915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec7f4929a286da7aa03d413a0fe99c9c36be915/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2bd652d265f8158e9deed8715e5d1972bf8cd7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd652d265f8158e9deed8715e5d1972bf8cd7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd652d265f8158e9deed8715e5d1972bf8cd7c4"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "7b46b67122776672a0766f91afaeffd35739c372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ec7f4929a286da7aa03d413a0fe99c9c36be915/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ec7f4929a286da7aa03d413a0fe99c9c36be915/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ec7f4929a286da7aa03d413a0fe99c9c36be915", "patch": "@@ -1,3 +1,10 @@\n+2018-11-15  Andrew Stubbs  <ams@codesourcery.com>\n+            Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* tree-vect-stmts.c (vectorizable_store): Don't ICE when\n+\tint_mode_for_size fails.\n+\t(vectorizable_load): Likewise.\n+\n 2018-11-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* doc/ux.texi (Group logically-related diagnostics): Move"}, {"sha": "764810b9bb692558e71ad08d7bbe5d3347682918", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ec7f4929a286da7aa03d413a0fe99c9c36be915/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ec7f4929a286da7aa03d413a0fe99c9c36be915/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=1ec7f4929a286da7aa03d413a0fe99c9c36be915", "patch": "@@ -6654,12 +6654,12 @@ vectorizable_store (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t\t     supported.  */\n \t\t  unsigned lsize\n \t\t    = group_size * GET_MODE_BITSIZE (elmode);\n-\t\t  elmode = int_mode_for_size (lsize, 0).require ();\n \t\t  unsigned int lnunits = const_nunits / group_size;\n \t\t  /* If we can't construct such a vector fall back to\n \t\t     element extracts from the original vector type and\n \t\t     element size stores.  */\n-\t\t  if (mode_for_vector (elmode, lnunits).exists (&vmode)\n+\t\t  if (int_mode_for_size (lsize, 0).exists (&elmode)\n+\t\t      && mode_for_vector (elmode, lnunits).exists (&vmode)\n \t\t      && VECTOR_MODE_P (vmode)\n \t\t      && targetm.vector_mode_supported_p (vmode)\n \t\t      && (convert_optab_handler (vec_extract_optab,\n@@ -7789,11 +7789,11 @@ vectorizable_load (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t\t     to a larger load.  */\n \t\t  unsigned lsize\n \t\t    = group_size * TYPE_PRECISION (TREE_TYPE (vectype));\n-\t\t  elmode = int_mode_for_size (lsize, 0).require ();\n \t\t  unsigned int lnunits = const_nunits / group_size;\n \t\t  /* If we can't construct such a vector fall back to\n \t\t     element loads of the original vector type.  */\n-\t\t  if (mode_for_vector (elmode, lnunits).exists (&vmode)\n+\t\t  if (int_mode_for_size (lsize, 0).exists (&elmode)\n+\t\t      && mode_for_vector (elmode, lnunits).exists (&vmode)\n \t\t      && VECTOR_MODE_P (vmode)\n \t\t      && targetm.vector_mode_supported_p (vmode)\n \t\t      && (convert_optab_handler (vec_init_optab, vmode, elmode)"}]}