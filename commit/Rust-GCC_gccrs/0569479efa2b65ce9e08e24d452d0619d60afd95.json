{"sha": "0569479efa2b65ce9e08e24d452d0619d60afd95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU2OTQ3OWVmYTJiNjVjZTllMDhlMjRkNDUyZDA2MTlkNjBhZmQ5NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-10T17:04:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-10T17:04:06Z"}, "message": "mangle.c (mangle_decl): Only emit -Wc++1z-compat warnings for public or external symbols.\n\n\t* mangle.c (mangle_decl): Only emit -Wc++1z-compat warnings for\n\tpublic or external symbols.\n\n\t* g++.dg/cpp1z/noexcept-type14.C: New test.\n\t* g++.dg/asan/asan_test.C: Remove -Wno-c++1z-compat from dg-options.\n\nFrom-SVN: r242042", "tree": {"sha": "32c3e777e9cf39f4bb4dd9103341d64adaee2d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32c3e777e9cf39f4bb4dd9103341d64adaee2d9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0569479efa2b65ce9e08e24d452d0619d60afd95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0569479efa2b65ce9e08e24d452d0619d60afd95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0569479efa2b65ce9e08e24d452d0619d60afd95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0569479efa2b65ce9e08e24d452d0619d60afd95/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37a16493e4e8f312da299f678b20b45c1815b537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a16493e4e8f312da299f678b20b45c1815b537", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37a16493e4e8f312da299f678b20b45c1815b537"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "b19a236f21597804eaf53eba112085257eb687af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0569479efa2b65ce9e08e24d452d0619d60afd95", "patch": "@@ -1,3 +1,8 @@\n+2016-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* mangle.c (mangle_decl): Only emit -Wc++1z-compat warnings for\n+\tpublic or external symbols.\n+\n 2016-11-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/78283"}, {"sha": "be7b72b532e67482d2fd20220c09b70b28a39d3c", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=0569479efa2b65ce9e08e24d452d0619d60afd95", "patch": "@@ -3836,7 +3836,8 @@ mangle_decl (const tree decl)\n     }\n   SET_DECL_ASSEMBLER_NAME (decl, id);\n \n-  if (G.need_cxx1z_warning)\n+  if (G.need_cxx1z_warning\n+      && (TREE_PUBLIC (decl) || DECL_REALLY_EXTERN (decl)))\n     warning_at (DECL_SOURCE_LOCATION (decl), OPT_Wc__1z_compat,\n \t\t\"mangled name for %qD will change in C++17 because the \"\n \t\t\"exception specification is part of a function type\","}, {"sha": "7c131725f5ac24131b9c95f1c868ad4d238ecd5c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0569479efa2b65ce9e08e24d452d0619d60afd95", "patch": "@@ -1,3 +1,8 @@\n+2016-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp1z/noexcept-type14.C: New test.\n+\t* g++.dg/asan/asan_test.C: Remove -Wno-c++1z-compat from dg-options.\n+\n 2016-11-10  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.dg/torture/fp-int-convert.h (M_OK2): New, use it in"}, {"sha": "5c24260b7fd60afd3015e985920a4272a6706a10", "filename": "gcc/testsuite/g++.dg/asan/asan_test.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan_test.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan_test.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan_test.C?ref=0569479efa2b65ce9e08e24d452d0619d60afd95", "patch": "@@ -2,7 +2,7 @@\n // { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } }\n // { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } }\n // { dg-additional-sources \"asan_globals_test-wrapper.cc\" }\n-// { dg-options \"-std=c++11 -fsanitize=address -fno-builtin -Wall -Wno-c++1z-compat -Werror -g -DASAN_UAR=0 -DASAN_HAS_EXCEPTIONS=1 -DASAN_HAS_BLACKLIST=0 -DSANITIZER_USE_DEJAGNU_GTEST=1 -lasan -lpthread -ldl\" }\n+// { dg-options \"-std=c++11 -fsanitize=address -fno-builtin -Wall -Werror -g -DASAN_UAR=0 -DASAN_HAS_EXCEPTIONS=1 -DASAN_HAS_BLACKLIST=0 -DSANITIZER_USE_DEJAGNU_GTEST=1 -lasan -lpthread -ldl\" }\n // { dg-additional-options \"-DASAN_NEEDS_SEGV=1\" { target { ! arm*-*-* } } }\n // { dg-additional-options \"-DASAN_LOW_MEMORY=1 -DASAN_NEEDS_SEGV=0\" { target arm*-*-* } }\n // { dg-additional-options \"-DASAN_AVOID_EXPENSIVE_TESTS=1\" { target { ! run_expensive_tests } } }"}, {"sha": "a6aeb1ce734070df357feb4ba71adb72b5962750", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type14.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0569479efa2b65ce9e08e24d452d0619d60afd95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type14.C?ref=0569479efa2b65ce9e08e24d452d0619d60afd95", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wall\" }\n+\n+#define A asm volatile (\"\" : : : \"memory\")\n+void foo () throw () {}\n+extern void f1 (decltype (foo) *);\t// { dg-bogus \"mangled name\" }\n+void f2 (decltype (foo) *);\t\t// { dg-bogus \"mangled name\" }\n+extern void f3 (decltype (foo) *);\t// { dg-warning \"mangled name\" \"\" { target c++14_down } }\n+void f4 (decltype (foo) *);\t\t// { dg-warning \"mangled name\" \"\" { target c++14_down } }\n+void f5 (decltype (foo) *) { A; }\t// { dg-warning \"mangled name\" \"\" { target c++14_down } }\n+static void f6 (decltype (foo) *) { A; }// { dg-bogus \"mangled name\" }\n+namespace N {\n+void f7 (decltype (foo) *) { A; }\t// { dg-warning \"mangled name\" \"\" { target c++14_down } }\n+}\n+namespace {\n+void f8 (decltype (foo) *) { A; }\t// { dg-bogus \"mangled name\" }\n+}\n+void bar ()\n+{\n+  f3 (foo);\n+  f4 (foo);\n+  f5 (foo);\n+  f6 (foo);\n+  N::f7 (foo);\n+  f8 (foo);\n+}"}]}