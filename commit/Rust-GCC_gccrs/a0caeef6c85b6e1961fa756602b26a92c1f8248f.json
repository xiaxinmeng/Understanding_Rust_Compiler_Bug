{"sha": "a0caeef6c85b6e1961fa756602b26a92c1f8248f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBjYWVlZjZjODViNmUxOTYxZmE3NTY2MDJiMjZhOTJjMWY4MjQ4Zg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2017-04-25T12:03:30Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2017-04-25T12:03:30Z"}, "message": "[ARC] Differentiate between ARCv1 and ARCv2 'h'-reg class for ADD insns.\n\ngcc/\n2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.c (arc_output_addsi): Check for h-register class\n\twhen emitting short ADD instructions.\n\nFrom-SVN: r247195", "tree": {"sha": "548a6d138139c808a58d3a0b449a1c5fa74ad992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/548a6d138139c808a58d3a0b449a1c5fa74ad992"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0caeef6c85b6e1961fa756602b26a92c1f8248f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0caeef6c85b6e1961fa756602b26a92c1f8248f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0caeef6c85b6e1961fa756602b26a92c1f8248f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0caeef6c85b6e1961fa756602b26a92c1f8248f/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e03cebd10fd68c4e9feaf30ab732d698f73e587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e03cebd10fd68c4e9feaf30ab732d698f73e587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e03cebd10fd68c4e9feaf30ab732d698f73e587"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "b38b429f38bfbeb3f3499c4f41ed8c61a679413e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0caeef6c85b6e1961fa756602b26a92c1f8248f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0caeef6c85b6e1961fa756602b26a92c1f8248f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0caeef6c85b6e1961fa756602b26a92c1f8248f", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.c (arc_output_addsi): Check for h-register class\n+\twhen emitting short ADD instructions.\n+\n 2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.md (cmpsi_cc_insn_mixed): Use 'h' register"}, {"sha": "d6f500c88b00dbe0957dd683a67018901cde5736", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0caeef6c85b6e1961fa756602b26a92c1f8248f/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0caeef6c85b6e1961fa756602b26a92c1f8248f/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=a0caeef6c85b6e1961fa756602b26a92c1f8248f", "patch": "@@ -7324,6 +7324,10 @@ arc_output_addsi (rtx *operands, bool cond_p, bool output_p)\n   int short_p = (!cond_p && short_0 && satisfies_constraint_Rcq (operands[1]));\n   int ret = 0;\n \n+#define REG_H_P(OP) (REG_P (OP) && ((TARGET_V2 && REGNO (OP) <= 31\t\\\n+\t\t\t\t     && REGNO (OP) != 30)\t\t\\\n+\t\t\t\t    || !TARGET_V2))\n+\n #define ADDSI_OUTPUT1(FORMAT) do {\\\n   if (output_p) \\\n     output_asm_insn (FORMAT, operands);\\\n@@ -7346,32 +7350,40 @@ arc_output_addsi (rtx *operands, bool cond_p, bool output_p)\n \t but add1 r0,sp,35 doesn't.  */\n       && (!output_p || (get_attr_length (current_output_insn) & 2)))\n     {\n+      /* Generate add_s a,b,c; add_s b,b,u7; add_s c,b,u3; add_s b,b,h\n+\t patterns.  */\n       if (short_p\n-\t  && (REG_P (operands[2])\n-\t      ? (match || satisfies_constraint_Rcq (operands[2]))\n-\t      : (unsigned) intval <= (match ? 127 : 7)))\n-\tADDSI_OUTPUT1 (\"add%? %0,%1,%2\");\n-      if (short_0 && REG_P (operands[1]) && match2)\n-\tADDSI_OUTPUT1 (\"add%? %0,%2,%1\");\n+\t  && ((REG_H_P (operands[2])\n+\t       && (match || satisfies_constraint_Rcq (operands[2])))\n+\t      || (CONST_INT_P (operands[2])\n+\t\t  && ((unsigned) intval <= (match ? 127 : 7)))))\n+\tADDSI_OUTPUT1 (\"add%? %0,%1,%2 ;1\");\n+\n+      /* Generate add_s b,b,h patterns.  */\n+      if (short_0 && match2 && REG_H_P (operands[1]))\n+\tADDSI_OUTPUT1 (\"add%? %0,%2,%1 ;2\");\n+\n+      /* Generate add_s b,sp,u7; add_s sp,sp,u7 patterns.  */\n       if ((short_0 || REGNO (operands[0]) == STACK_POINTER_REGNUM)\n \t  && REGNO (operands[1]) == STACK_POINTER_REGNUM && !(intval & ~124))\n-\tADDSI_OUTPUT1 (\"add%? %0,%1,%2\");\n+\tADDSI_OUTPUT1 (\"add%? %0,%1,%2 ;3\");\n \n       if ((short_p && (unsigned) neg_intval <= (match ? 31 : 7))\n \t  || (REGNO (operands[0]) == STACK_POINTER_REGNUM\n \t      && match && !(neg_intval & ~124)))\n-\tADDSI_OUTPUT1 (\"sub%? %0,%1,%n2\");\n+\tADDSI_OUTPUT1 (\"sub%? %0,%1,%n2 ;4\");\n \n-      if (REG_P(operands[0]) && REG_P(operands[1])\n-\t  && (REGNO(operands[0]) <= 31) && (REGNO(operands[0]) == REGNO(operands[1]))\n-\t  && CONST_INT_P (operands[2]) && ( (intval>= -1) && (intval <= 6)))\n-\tADDSI_OUTPUT1 (\"add%? %0,%1,%2\");\n+      /* Generate add_s h,h,s3 patterns.  */\n+      if (REG_H_P (operands[0]) && match && TARGET_V2\n+\t  && CONST_INT_P (operands[2]) && ((intval>= -1) && (intval <= 6)))\n+\tADDSI_OUTPUT1 (\"add%? %0,%1,%2 ;5\");\n \n-      if (TARGET_CODE_DENSITY && REG_P(operands[0]) && REG_P(operands[1])\n-\t  && ((REGNO(operands[0]) == 0) || (REGNO(operands[0]) == 1))\n+      /* Generate add_s r0,b,u6; add_s r1,b,u6 patterns.  */\n+      if (TARGET_CODE_DENSITY && REG_P (operands[0]) && REG_P (operands[1])\n+\t  && ((REGNO (operands[0]) == 0) || (REGNO (operands[0]) == 1))\n \t  && satisfies_constraint_Rcq (operands[1])\n \t  && satisfies_constraint_L (operands[2]))\n-\tADDSI_OUTPUT1 (\"add%? %0,%1,%2 ;3\");\n+\tADDSI_OUTPUT1 (\"add%? %0,%1,%2 ;6\");\n     }\n \n   /* Now try to emit a 32 bit insn without long immediate.  */"}]}