{"sha": "0833b2d55e3fea376b47f4f260cf87b050d6a5e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzM2IyZDU1ZTNmZWEzNzZiNDdmNGYyNjBjZjg3YjA1MGQ2YTVlNw==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-18T10:08:48Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:13Z"}, "message": "For tuple structs the constructor is just a regular function call\n\nThis is a hack to get the AST to become a CallExpr more changes might\noccur later to cleanup this side of the AST.", "tree": {"sha": "fae4b439e9792e7e9f5344e26aabaaab351ed6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae4b439e9792e7e9f5344e26aabaaab351ed6e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0833b2d55e3fea376b47f4f260cf87b050d6a5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0833b2d55e3fea376b47f4f260cf87b050d6a5e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0833b2d55e3fea376b47f4f260cf87b050d6a5e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0833b2d55e3fea376b47f4f260cf87b050d6a5e7/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40a5081072f2069447b3d3267f8b00a16433ab91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a5081072f2069447b3d3267f8b00a16433ab91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a5081072f2069447b3d3267f8b00a16433ab91"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "46244035a617f9426992b933a10039e86cf58b1f", "filename": "gcc/rust/parse/rust-parse.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0833b2d55e3fea376b47f4f260cf87b050d6a5e7/gcc%2Frust%2Fparse%2Frust-parse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0833b2d55e3fea376b47f4f260cf87b050d6a5e7/gcc%2Frust%2Fparse%2Frust-parse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.cc?ref=0833b2d55e3fea376b47f4f260cf87b050d6a5e7", "patch": "@@ -10892,7 +10892,7 @@ Parser::parse_path_based_stmt_or_expr (\n       case LEFT_PAREN: {\n \t// assume struct expr tuple (as struct-enum disambiguation requires name\n \t// lookup) again, make statement if final ';'\n-\t::std::unique_ptr<AST::StructExprTuple> struct_expr\n+\t::std::unique_ptr<AST::CallExpr> struct_expr\n \t  = parse_struct_expr_tuple_partial (::std::move (path),\n \t\t\t\t\t     ::std::move (outer_attrs));\n \tif (struct_expr == NULL)\n@@ -13229,7 +13229,7 @@ Parser::parse_struct_expr_struct_partial (\n \n // Parses a struct expr tuple with a path in expression already parsed (but not\n // '(' token).\n-::std::unique_ptr<AST::StructExprTuple>\n+::std::unique_ptr<AST::CallExpr>\n Parser::parse_struct_expr_tuple_partial (\n   AST::PathInExpression path, ::std::vector<AST::Attribute> outer_attrs)\n {\n@@ -13272,10 +13272,12 @@ Parser::parse_struct_expr_tuple_partial (\n \n   Location path_locus = path.get_locus ();\n \n-  return ::std::unique_ptr<AST::StructExprTuple> (\n-    new AST::StructExprTuple (::std::move (path), ::std::move (exprs),\n-\t\t\t      ::std::move (inner_attrs),\n-\t\t\t      ::std::move (outer_attrs), path_locus));\n+  auto pathExpr = ::std::unique_ptr<AST::PathInExpression> (\n+    new AST::PathInExpression (::std::move (path)));\n+\n+  return ::std::unique_ptr<AST::CallExpr> (\n+    new AST::CallExpr (::std::move (pathExpr), ::std::move (exprs),\n+\t\t       ::std::move (outer_attrs), path_locus));\n }\n \n /* Parses a path in expression with the first token passed as a parameter (as it"}, {"sha": "5bbfefc02456f1f0de48e06f1292e49fa2ae7af7", "filename": "gcc/rust/parse/rust-parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0833b2d55e3fea376b47f4f260cf87b050d6a5e7/gcc%2Frust%2Fparse%2Frust-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0833b2d55e3fea376b47f4f260cf87b050d6a5e7/gcc%2Frust%2Fparse%2Frust-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.h?ref=0833b2d55e3fea376b47f4f260cf87b050d6a5e7", "patch": "@@ -407,7 +407,7 @@ class Parser\n   ::std::unique_ptr<AST::StructExprStruct>\n   parse_struct_expr_struct_partial (AST::PathInExpression path,\n \t\t\t\t    ::std::vector<AST::Attribute> outer_attrs);\n-  ::std::unique_ptr<AST::StructExprTuple>\n+  ::std::unique_ptr<AST::CallExpr>\n   parse_struct_expr_tuple_partial (AST::PathInExpression path,\n \t\t\t\t   ::std::vector<AST::Attribute> outer_attrs);\n   AST::PathInExpression parse_path_in_expression_pratt (const_TokenPtr tok);"}]}