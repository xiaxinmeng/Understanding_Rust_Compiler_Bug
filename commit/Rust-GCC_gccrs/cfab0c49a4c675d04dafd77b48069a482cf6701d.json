{"sha": "cfab0c49a4c675d04dafd77b48069a482cf6701d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZhYjBjNDlhNGM2NzVkMDRkYWZkNzdiNDgwNjlhNDgyY2Y2NzAxZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T12:52:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T12:52:58Z"}, "message": "[multiple changes]\n\n2010-06-17  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* g-socthi-mingw.adb (C_Recvmsg): Add 'use type' clause for C.size_t;\n\t(C_Sendmsg): Likewise.\n\n2010-06-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_res.adb: Update comments.\n\n2010-06-17  Vincent Celier  <celier@adacore.com>\n\n\t* back_end.adb (Scan_Compiler_Arguments): Process last argument.\n\nFrom-SVN: r160906", "tree": {"sha": "f87336532d052dcfa0356d5af84921c36f2cb0ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f87336532d052dcfa0356d5af84921c36f2cb0ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfab0c49a4c675d04dafd77b48069a482cf6701d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfab0c49a4c675d04dafd77b48069a482cf6701d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfab0c49a4c675d04dafd77b48069a482cf6701d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfab0c49a4c675d04dafd77b48069a482cf6701d/comments", "author": null, "committer": null, "parents": [{"sha": "b29def532d9dff6bd72e19863cf34afc841f2e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29def532d9dff6bd72e19863cf34afc841f2e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29def532d9dff6bd72e19863cf34afc841f2e27"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "0cb6c9c9765e16a050a33eb1fbe3e14914d9d08a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cfab0c49a4c675d04dafd77b48069a482cf6701d", "patch": "@@ -1,3 +1,16 @@\n+2010-06-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g-socthi-mingw.adb (C_Recvmsg): Add 'use type' clause for C.size_t;\n+\t(C_Sendmsg): Likewise.\n+\n+2010-06-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_res.adb: Update comments.\n+\n+2010-06-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* back_end.adb (Scan_Compiler_Arguments): Process last argument\n+\n 2010-06-17  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch3.adb, exp_ch6.adb, exp_smem.adb, exp_util.adb: Use Ekind_In."}, {"sha": "ee93f140796948728a2732a09bee27a6a93a0807", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=cfab0c49a4c675d04dafd77b48069a482cf6701d", "patch": "@@ -252,7 +252,7 @@ package body Back_End is\n       --  Loop through command line arguments, storing them for later access\n \n       Next_Arg := 1;\n-      while Next_Arg < Args'Last loop\n+      while Next_Arg <= Args'Last loop\n          Look_At_Arg : declare\n             Argv     : constant String := Args (Next_Arg).all;\n "}, {"sha": "23bab2c9a74763d6afc5d0acadfdf60f2ba1dd98", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=cfab0c49a4c675d04dafd77b48069a482cf6701d", "patch": "@@ -271,6 +271,8 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Flags : C.int) return System.CRTL.ssize_t\n    is\n+      use type C.size_t;\n+\n       Res   : C.int;\n       Count : C.int := 0;\n \n@@ -408,6 +410,8 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Flags : C.int) return System.CRTL.ssize_t\n    is\n+      use type C.size_t;\n+\n       Res   : C.int;\n       Count : C.int := 0;\n "}, {"sha": "6f1a13285af0dc3d2db8d6e153ddd075a1de0ce7", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfab0c49a4c675d04dafd77b48069a482cf6701d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=cfab0c49a4c675d04dafd77b48069a482cf6701d", "patch": "@@ -8979,16 +8979,19 @@ package body Sem_Res is\n \n       Set_Etype (N, Slice_Subtype);\n \n-      --  For packed slice subtypes, freeze immediately. Otherwise insert an\n-      --  itype reference in the slice's actions so that the itype is frozen\n-      --  at the proper place in the tree (i.e. at the point where actions\n-      --  for the slice are analyzed). Note that this is different from\n-      --  freezing the itype immediately, which might be premature (e.g. if\n-      --  the slice is within a transient scope).\n+      --  For packed slice subtypes, freeze immediately (except in the\n+      --  case of being in a \"spec expression\" where we never freeze\n+      --  when we first see the expression).\n \n       if Is_Packed (Slice_Subtype) and not In_Spec_Expression then\n          Freeze_Itype (Slice_Subtype, N);\n \n+      --  For all other cases insert an itype reference in the slice's actions\n+      --  so that the itype is frozen at the proper place in the tree (i.e. at\n+      --  the point where actions for the slice are analyzed). Note that this\n+      --  is different from freezing the itype immediately, which might be\n+      --  premature (e.g. if the slice is within a transient scope).\n+\n       else\n          Ensure_Defined (Typ => Slice_Subtype, N => N);\n       end if;"}]}