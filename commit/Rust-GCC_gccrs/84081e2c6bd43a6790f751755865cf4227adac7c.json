{"sha": "84081e2c6bd43a6790f751755865cf4227adac7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQwODFlMmM2YmQ0M2E2NzkwZjc1MTc1NTg2NWNmNDIyN2FkYWM3Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-10T06:10:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-12T21:29:54Z"}, "message": "c++: premature overload resolution [PR93085]\n\nWe can't resolve the call to foo<42> before instantiation of G, because the\ntemplate parameter of #1 has dependent type.  But we were missing that in\nour dependency check, because the tree walk of DECL_TEMPLATE_PARMS doesn't\nlook into the types of template parameters.  So look at them directly.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/93085\n\t* pt.c (uses_outer_template_parms): Handle non-type and template\n\ttemplate parameters specifically.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/93085\n\t* g++.dg/template/dependent-tmpl1.C: New test.", "tree": {"sha": "bea64490c946c310635dd1caeeae33e28a3a7632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bea64490c946c310635dd1caeeae33e28a3a7632"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84081e2c6bd43a6790f751755865cf4227adac7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84081e2c6bd43a6790f751755865cf4227adac7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84081e2c6bd43a6790f751755865cf4227adac7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84081e2c6bd43a6790f751755865cf4227adac7c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7650259de8f86c403113f7186d82737eddb65ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7650259de8f86c403113f7186d82737eddb65ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7650259de8f86c403113f7186d82737eddb65ef6"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "efcbc59f5c9814ea346568a0982329b298c4270f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84081e2c6bd43a6790f751755865cf4227adac7c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84081e2c6bd43a6790f751755865cf4227adac7c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=84081e2c6bd43a6790f751755865cf4227adac7c", "patch": "@@ -10846,11 +10846,22 @@ uses_outer_template_parms (tree decl)\n \t\t\t      &depth, NULL, /*include_nondeduced_p=*/true))\n     return true;\n   if (PRIMARY_TEMPLATE_P (decl)\n-      && for_each_template_parm (INNERMOST_TEMPLATE_PARMS\n-\t\t\t\t (DECL_TEMPLATE_PARMS (decl)),\n-\t\t\t\t template_parm_outer_level,\n-\t\t\t\t &depth, NULL, /*include_nondeduced_p=*/true))\n-    return true;\n+      || DECL_TEMPLATE_TEMPLATE_PARM_P (decl))\n+    {\n+      tree parms = INNERMOST_TEMPLATE_PARMS (DECL_TEMPLATE_PARMS (decl));\n+      for (int i = TREE_VEC_LENGTH (parms) - 1; i >= 0; --i)\n+\t{\n+\t  tree parm = TREE_VALUE (TREE_VEC_ELT (parms, i));\n+\t  if (TREE_CODE (parm) == PARM_DECL\n+\t      && for_each_template_parm (TREE_TYPE (parm),\n+\t\t\t\t\t template_parm_outer_level,\n+\t\t\t\t\t &depth, NULL, /*nondeduced*/true))\n+\t    return true;\n+\t  if (TREE_CODE (parm) == TEMPLATE_DECL\n+\t      && uses_outer_template_parms (parm))\n+\t    return true;\n+\t}\n+    }\n   tree ci = get_constraints (decl);\n   if (ci)\n     ci = CI_ASSOCIATED_CONSTRAINTS (ci);"}, {"sha": "7b800b6869a92010525141a91fe84c1c8818e702", "filename": "gcc/testsuite/g++.dg/template/dependent-tmpl1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84081e2c6bd43a6790f751755865cf4227adac7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-tmpl1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84081e2c6bd43a6790f751755865cf4227adac7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-tmpl1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-tmpl1.C?ref=84081e2c6bd43a6790f751755865cf4227adac7c", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/93085\n+// { dg-do compile { target c++11 } }\n+\n+template<class T>\n+struct G {\n+    template<T> static int foo();    // #1\n+    template<int> static int foo();  // #2\n+    int x = foo<42>();  // OK\n+};"}]}