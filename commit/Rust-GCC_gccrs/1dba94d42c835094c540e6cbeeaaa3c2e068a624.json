{"sha": "1dba94d42c835094c540e6cbeeaaa3c2e068a624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRiYTk0ZDQyYzgzNTA5NGM1NDBlNmNiZWVhYWEzYzJlMDY4YTYyNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-22T13:10:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-22T13:10:57Z"}, "message": "re PR tree-optimization/83963 ([graphite] ICE in merge_sese, at graphite-scop-detection.c:517)\n\n2018-01-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83963\n\t* graphite-scop-detection.c (scop_detection::get_sese): Delay\n\tincluding the loop exit block.\n\t(scop_detection::merge_sese): Likewise.\n\t(scop_detection::add_scop): Do it here instead.\n\n\t* gcc.dg/graphite/pr83963.c: New testcase.\n\nFrom-SVN: r256943", "tree": {"sha": "354993efe4c080b33c3875b02d46fb0d0744a52f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/354993efe4c080b33c3875b02d46fb0d0744a52f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dba94d42c835094c540e6cbeeaaa3c2e068a624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dba94d42c835094c540e6cbeeaaa3c2e068a624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dba94d42c835094c540e6cbeeaaa3c2e068a624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dba94d42c835094c540e6cbeeaaa3c2e068a624/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74e95ed04f70235f2f0a6de128369cf8b2bb8dcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e95ed04f70235f2f0a6de128369cf8b2bb8dcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e95ed04f70235f2f0a6de128369cf8b2bb8dcd"}], "stats": {"total": 73, "additions": 55, "deletions": 18}, "files": [{"sha": "bba9f63c11f057cbd10fdaf4862d988a7dbb3694", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1dba94d42c835094c540e6cbeeaaa3c2e068a624", "patch": "@@ -1,3 +1,11 @@\n+2018-01-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83963\n+\t* graphite-scop-detection.c (scop_detection::get_sese): Delay\n+\tincluding the loop exit block.\n+\t(scop_detection::merge_sese): Likewise.\n+\t(scop_detection::add_scop): Do it here instead.\n+\n 2018-01-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* doc/sourcebuild.texi (arm_softfloat): Document."}, {"sha": "6f407e16c887d66ad34a5ce33cfffe79fbe1cea8", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=1dba94d42c835094c540e6cbeeaaa3c2e068a624", "patch": "@@ -420,13 +420,6 @@ scop_detection::get_sese (loop_p loop)\n   edge scop_end = single_exit (loop);\n   if (!scop_end || (scop_end->flags & (EDGE_COMPLEX|EDGE_FAKE)))\n     return invalid_sese;\n-  /* Include the BB with the loop-closed SSA PHI nodes.\n-     canonicalize_loop_closed_ssa makes sure that is in proper shape.  */\n-  if (! single_pred_p (scop_end->dest)\n-      || ! single_succ_p (scop_end->dest)\n-      || ! sese_trivially_empty_bb_p (scop_end->dest))\n-    gcc_unreachable ();\n-  scop_end = single_succ_edge (scop_end->dest);\n \n   return sese_l (scop_begin, scop_end);\n }\n@@ -507,17 +500,6 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n     }\n   while (! bitmap_empty_p (worklist));\n \n-  /* Include the BB with the loop-closed SSA PHI nodes.\n-     canonicalize_loop_closed_ssa makes sure that is in proper shape.  */\n-  if (exit->dest != EXIT_BLOCK_PTR_FOR_FN (cfun)\n-      && loop_exit_edge_p (exit->src->loop_father, exit))\n-    {\n-      gcc_assert (single_pred_p (exit->dest)\n-\t\t  && single_succ_p (exit->dest)\n-\t\t  && sese_trivially_empty_bb_p (exit->dest));\n-      exit = single_succ_edge (exit->dest);\n-    }\n-\n   sese_l combined (entry, exit);\n \n   DEBUG_PRINT (dp << \"[merged-sese] s1: \"; print_sese (dump_file, combined));\n@@ -608,6 +590,18 @@ scop_detection::add_scop (sese_l s)\n {\n   gcc_assert (s);\n \n+  /* Include the BB with the loop-closed SSA PHI nodes, we need this\n+     block in the region for code-generating out-of-SSA copies.\n+     canonicalize_loop_closed_ssa makes sure that is in proper shape.  */\n+  if (s.exit->dest != EXIT_BLOCK_PTR_FOR_FN (cfun)\n+      && loop_exit_edge_p (s.exit->src->loop_father, s.exit))\n+    {\n+      gcc_assert (single_pred_p (s.exit->dest)\n+\t\t  && single_succ_p (s.exit->dest)\n+\t\t  && sese_trivially_empty_bb_p (s.exit->dest));\n+      s.exit = single_succ_edge (s.exit->dest);\n+    }\n+\n   /* Do not add scops with only one loop.  */\n   if (region_has_one_loop (s))\n     {"}, {"sha": "d64a841a49eef2b05d2ce3990a1edc106195aecb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1dba94d42c835094c540e6cbeeaaa3c2e068a624", "patch": "@@ -1,3 +1,7 @@\n+2018-01-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83963\n+\t* gcc.dg/graphite/pr83963.c: New testcase.\n \n 2018-01-22  Sudakshina Das  <sudi.das@arm.com>\n "}, {"sha": "6174463468e67869176660641558892e18688d10", "filename": "gcc/testsuite/gcc.dg/graphite/pr83963.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83963.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dba94d42c835094c540e6cbeeaaa3c2e068a624/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83963.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83963.c?ref=1dba94d42c835094c540e6cbeeaaa3c2e068a624", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -floop-nest-optimize -fno-tree-loop-im\" } */\n+\n+int mg, et;\n+\n+void\n+s5 (int is)\n+{\n+  if (is == 0)\n+    {\n+g6:\n+      ++is;\n+    }\n+\n+  while (mg < 1)\n+    {\n+      while (et < 1)\n+\t{\n+\t  if (is == 0)\n+\t    return;\n+\n+\t  ++et;\n+\t}\n+\n+      while (mg < 1)\n+\t++mg;\n+    }\n+\n+  goto g6;\n+}\n+"}]}