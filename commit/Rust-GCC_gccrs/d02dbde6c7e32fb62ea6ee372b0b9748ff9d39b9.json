{"sha": "d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyZGJkZTZjN2UzMmZiNjJlYTZlZTM3MmIwYjk3NDhmZjlkMzliOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-10-27T15:19:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-10-27T15:19:45Z"}, "message": "re PR c++/5247 (Memory eating infinite loop on default parameter in constructor which is reference to class)\n\n        PR c++/5247\n        * call.c (convert_default_arg): Detect recursion.\n\nFrom-SVN: r129681", "tree": {"sha": "aba63fd3f30b037b722fb938b8e158b301a6952e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aba63fd3f30b037b722fb938b8e158b301a6952e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1200489c4624638d172b15bb9adb303867bc9639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1200489c4624638d172b15bb9adb303867bc9639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1200489c4624638d172b15bb9adb303867bc9639"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "be18c36c78fd4986d846cc0e5999e5085316be1b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "patch": "@@ -1,3 +1,8 @@\n+2007-10-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/5247\n+\t* call.c (convert_default_arg): Detect recursion.\n+\n 2007-10-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/33842"}, {"sha": "297a37242012422f5fa80df59b8a7a3ffd6a598e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "patch": "@@ -4672,9 +4672,14 @@ cxx_type_promotes_to (tree type)\n    the indicated TYPE, which is a parameter to FN.  Do any required\n    conversions.  Return the converted value.  */\n \n+static GTY(()) VEC(tree,gc) *default_arg_context;\n+\n tree\n convert_default_arg (tree type, tree arg, tree fn, int parmnum)\n {\n+  int i;\n+  tree t;\n+\n   /* If the ARG is an unparsed default argument expression, the\n      conversion cannot be performed.  */\n   if (TREE_CODE (arg) == DEFAULT_ARG)\n@@ -4685,6 +4690,15 @@ convert_default_arg (tree type, tree arg, tree fn, int parmnum)\n       return error_mark_node;\n     }\n \n+  /* Detect recursion.  */\n+  for (i = 0; VEC_iterate (tree, default_arg_context, i, t); ++i)\n+    if (t == fn)\n+      {\n+\terror (\"recursive evaluation of default argument for %q#D\", fn);\n+\treturn error_mark_node;\n+      }\n+  VEC_safe_push (tree, gc, default_arg_context, fn);\n+\n   if (fn && DECL_TEMPLATE_INFO (fn))\n     arg = tsubst_default_argument (fn, type, arg);\n \n@@ -4711,6 +4725,8 @@ convert_default_arg (tree type, tree arg, tree fn, int parmnum)\n       arg = convert_for_arg_passing (type, arg);\n     }\n \n+  VEC_pop (tree, default_arg_context);\n+\n   return arg;\n }\n "}, {"sha": "44de733736f84cc4596ade89bcad20b1ba8f42a9", "filename": "gcc/testsuite/g++.dg/overload/defarg1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fdefarg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fdefarg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fdefarg1.C?ref=d02dbde6c7e32fb62ea6ee372b0b9748ff9d39b9", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/5247\n+\n+template<typename T>\n+int foo (T t, int = foo(T()));\n+\n+int main()\n+{\n+  foo(0);\t\t\t// { dg-error \"default argument\" }\n+}"}]}