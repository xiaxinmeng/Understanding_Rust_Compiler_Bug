{"sha": "f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlMTA5YmE3YmY3ZmYwYjliYjFlNzExMTMwM2RlZDJjNzAxMWExYQ==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-10-16T09:54:26Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-16T09:54:26Z"}, "message": "arm-builtins.c (arm_unsigned_uternop_qualifiers): New.\n\n2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n\n\t* config/arm/arm-builtins.c (arm_unsigned_uternop_qualifiers): New.\n\t(UTERNOP_QUALIFIERS, arm_umac_lane_qualifiers, UMAC_LANE_QUALIFIERS): New.\n\t* config/arm/arm_neon_builtins.def (sdot, udot, sdot_lane, udot_lane): new.\n\t* config/arm/iterators.md (DOTPROD, VSI2QI, vsi2qi): New.\n\t(UNSPEC_DOT_S, UNSPEC_DOT_U, opsuffix): New.\n\t* config/arm/neon.md (neon_<sup>dot<vsi2qi>): New.\n\t(neon_<sup>dot_lane<vsi2qi>, <sup>dot_prod<vsi2qi>): New.\n\t* config/arm/types.md (neon_dot, neon_dot_q): New.\n\t* config/arm/unspecs.md (sup): Add UNSPEC_DOT_S, UNSPEC_DOT_U.\n\nFrom-SVN: r253781", "tree": {"sha": "fa872dcd02ce419671831a943519ef40a0308ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa872dcd02ce419671831a943519ef40a0308ee9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba09dd21b342bb8b7ef8122c08ee478e7de95825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba09dd21b342bb8b7ef8122c08ee478e7de95825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba09dd21b342bb8b7ef8122c08ee478e7de95825"}], "stats": {"total": 119, "additions": 117, "deletions": 2}, "files": [{"sha": "499277552bb6930d24d42adab8f145b29e9298dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -1,3 +1,15 @@\n+2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/arm/arm-builtins.c (arm_unsigned_uternop_qualifiers): New.\n+\t(UTERNOP_QUALIFIERS, arm_umac_lane_qualifiers, UMAC_LANE_QUALIFIERS): New.\n+\t* config/arm/arm_neon_builtins.def (sdot, udot, sdot_lane, udot_lane): new.\n+\t* config/arm/iterators.md (DOTPROD, VSI2QI, vsi2qi): New.\n+\t(UNSPEC_DOT_S, UNSPEC_DOT_U, opsuffix): New.\n+\t* config/arm/neon.md (neon_<sup>dot<vsi2qi>): New.\n+\t(neon_<sup>dot_lane<vsi2qi>, <sup>dot_prod<vsi2qi>): New.\n+\t* config/arm/types.md (neon_dot, neon_dot_q): New.\n+\t* config/arm/unspecs.md (sup): Add UNSPEC_DOT_S, UNSPEC_DOT_U.\n+\n 2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/arm/arm.h (TARGET_DOTPROD): New."}, {"sha": "6d1b20c80f9a24a8d26a10bea6f6e316886bce31", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -105,6 +105,13 @@ arm_ternop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_none, qualifier_none };\n #define TERNOP_QUALIFIERS (arm_ternop_qualifiers)\n \n+/* unsigned T (unsigned T, unsigned T, unsigned T).  */\n+static enum arm_type_qualifiers\n+arm_unsigned_uternop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_unsigned, qualifier_unsigned, qualifier_unsigned,\n+      qualifier_unsigned };\n+#define UTERNOP_QUALIFIERS (arm_unsigned_uternop_qualifiers)\n+\n /* T (T, immediate).  */\n static enum arm_type_qualifiers\n arm_binop_imm_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n@@ -131,6 +138,13 @@ arm_mac_lane_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n       qualifier_none, qualifier_lane_index };\n #define MAC_LANE_QUALIFIERS (arm_mac_lane_qualifiers)\n \n+/* unsigned T (unsigned T, unsigned T, unsigend T, lane index).  */\n+static enum arm_type_qualifiers\n+arm_umac_lane_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_unsigned, qualifier_unsigned, qualifier_unsigned,\n+      qualifier_unsigned, qualifier_lane_index };\n+#define UMAC_LANE_QUALIFIERS (arm_umac_lane_qualifiers)\n+\n /* T (T, T, immediate).  */\n static enum arm_type_qualifiers\n arm_ternop_imm_qualifiers[SIMD_MAX_BUILTIN_ARGS]"}, {"sha": "982eec810dafb5ec955273099853f8842020d104", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -331,3 +331,7 @@ VAR11 (STORE1, vst4,\n \tv8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf)\n VAR9 (STORE1LANE, vst4_lane,\n \tv8qi, v4hi, v4hf, v2si, v2sf, v8hi, v8hf, v4si, v4sf)\n+VAR2 (TERNOP, sdot, v8qi, v16qi)\n+VAR2 (UTERNOP, udot, v8qi, v16qi)\n+VAR2 (MAC_LANE, sdot_lane, v8qi, v16qi)\n+VAR2 (UMAC_LANE, udot_lane, v8qi, v16qi)"}, {"sha": "a4fb234a846795e1c0dd5bf7de76ff7da487be23", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -410,6 +410,8 @@\n \n (define_int_iterator VFM_LANE_AS [UNSPEC_VFMA_LANE UNSPEC_VFMS_LANE])\n \n+(define_int_iterator DOTPROD [UNSPEC_DOT_S UNSPEC_DOT_U])\n+\n ;;----------------------------------------------------------------------------\n ;; Mode attributes\n ;;----------------------------------------------------------------------------\n@@ -720,6 +722,9 @@\n \n (define_mode_attr pf [(V8QI \"p\") (V16QI \"p\") (V2SF \"f\") (V4SF \"f\")])\n \n+(define_mode_attr VSI2QI [(V2SI \"V8QI\") (V4SI \"V16QI\")])\n+(define_mode_attr vsi2qi [(V2SI \"v8qi\") (V4SI \"v16qi\")])\n+\n ;;----------------------------------------------------------------------------\n ;; Code attributes\n ;;----------------------------------------------------------------------------\n@@ -816,6 +821,7 @@\n   (UNSPEC_VSRA_S_N \"s\") (UNSPEC_VSRA_U_N \"u\")\n   (UNSPEC_VRSRA_S_N \"s\") (UNSPEC_VRSRA_U_N \"u\")\n   (UNSPEC_VCVTH_S \"s\") (UNSPEC_VCVTH_U \"u\")\n+  (UNSPEC_DOT_S \"s\") (UNSPEC_DOT_U \"u\")\n ])\n \n (define_int_attr vcvth_op\n@@ -1003,3 +1009,6 @@\n \n (define_int_attr mrrc [(VUNSPEC_MRRC \"mrrc\") (VUNSPEC_MRRC2 \"mrrc2\")])\n (define_int_attr MRRC [(VUNSPEC_MRRC \"MRRC\") (VUNSPEC_MRRC2 \"MRRC2\")])\n+\n+(define_int_attr opsuffix [(UNSPEC_DOT_S \"s8\")\n+\t\t\t   (UNSPEC_DOT_U \"u8\")])"}, {"sha": "e715a5c2ae16ea2baf263a1fedfb991e7a29e1b9", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -3044,6 +3044,76 @@\n   DONE;\n })\n \n+;; These instructions map to the __builtins for the Dot Product operations.\n+(define_insn \"neon_<sup>dot<vsi2qi>\"\n+  [(set (match_operand:VCVTI 0 \"register_operand\" \"=w\")\n+\t(plus:VCVTI (match_operand:VCVTI 1 \"register_operand\" \"0\")\n+\t\t    (unspec:VCVTI [(match_operand:<VSI2QI> 2\n+\t\t\t\t\t\t\t\"register_operand\" \"w\")\n+\t\t\t\t   (match_operand:<VSI2QI> 3\n+\t\t\t\t\t\t\t\"register_operand\" \"w\")]\n+\t\tDOTPROD)))]\n+  \"TARGET_DOTPROD\"\n+  \"v<sup>dot.<opsuffix>\\\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n+  [(set_attr \"type\" \"neon_dot\")]\n+)\n+\n+;; These instructions map to the __builtins for the Dot Product\n+;; indexed operations.\n+(define_insn \"neon_<sup>dot_lane<vsi2qi>\"\n+  [(set (match_operand:VCVTI 0 \"register_operand\" \"=w\")\n+\t(plus:VCVTI (match_operand:VCVTI 1 \"register_operand\" \"0\")\n+\t\t    (unspec:VCVTI [(match_operand:<VSI2QI> 2\n+\t\t\t\t\t\t\t\"register_operand\" \"w\")\n+\t\t\t\t   (match_operand:V8QI 3 \"register_operand\" \"t\")\n+\t\t\t\t   (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+\t\tDOTPROD)))]\n+  \"TARGET_DOTPROD\"\n+  {\n+    operands[4]\n+      = GEN_INT (NEON_ENDIAN_LANE_N (V8QImode, INTVAL (operands[4])));\n+    return \"v<sup>dot.<opsuffix>\\\\t%<V_reg>0, %<V_reg>2, %P3[%c4]\";\n+  }\n+  [(set_attr \"type\" \"neon_dot\")]\n+)\n+\n+;; These expands map to the Dot Product optab the vectorizer checks for.\n+;; The auto-vectorizer expects a dot product builtin that also does an\n+;; accumulation into the provided register.\n+;; Given the following pattern\n+;;\n+;; for (i=0; i<len; i++) {\n+;;     c = a[i] * b[i];\n+;;     r += c;\n+;; }\n+;; return result;\n+;;\n+;; This can be auto-vectorized to\n+;; r  = a[0]*b[0] + a[1]*b[1] + a[2]*b[2] + a[3]*b[3];\n+;;\n+;; given enough iterations.  However the vectorizer can keep unrolling the loop\n+;; r += a[4]*b[4] + a[5]*b[5] + a[6]*b[6] + a[7]*b[7];\n+;; r += a[8]*b[8] + a[9]*b[9] + a[10]*b[10] + a[11]*b[11];\n+;; ...\n+;;\n+;; and so the vectorizer provides r, in which the result has to be accumulated.\n+(define_expand \"<sup>dot_prod<vsi2qi>\"\n+  [(set (match_operand:VCVTI 0 \"register_operand\")\n+\t(plus:VCVTI (unspec:VCVTI [(match_operand:<VSI2QI> 1\n+\t\t\t\t\t\t\t\"register_operand\")\n+\t\t\t\t   (match_operand:<VSI2QI> 2\n+\t\t\t\t\t\t\t\"register_operand\")]\n+\t\t     DOTPROD)\n+\t\t    (match_operand:VCVTI 3 \"register_operand\")))]\n+  \"TARGET_DOTPROD\"\n+{\n+  emit_insn (\n+    gen_neon_<sup>dot<vsi2qi> (operands[3], operands[3], operands[1],\n+\t\t\t\t operands[2]));\n+  emit_insn (gen_rtx_SET (operands[0], operands[3]));\n+  DONE;\n+})\n+\n (define_expand \"neon_copysignf<mode>\"\n   [(match_operand:VCVTF 0 \"register_operand\")\n    (match_operand:VCVTF 1 \"register_operand\")"}, {"sha": "03e9cdebb7509333a950581b9206a88afe7b2d0b", "filename": "gcc/config/arm/types.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Ftypes.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Ftypes.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftypes.md?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -316,6 +316,8 @@\n ; neon_cls_q\n ; neon_cnt\n ; neon_cnt_q\n+; neon_dot\n+; neon_dot_q\n ; neon_ext\n ; neon_ext_q\n ; neon_rbit\n@@ -764,6 +766,8 @@\n \\\n   neon_abs,\\\n   neon_abs_q,\\\n+  neon_dot,\\\n+  neon_dot_q,\\\n   neon_neg,\\\n   neon_neg_q,\\\n   neon_qneg,\\\n@@ -1110,8 +1114,8 @@\n           neon_sub, neon_sub_q, neon_sub_widen, neon_sub_long, neon_qsub,\\\n           neon_qsub_q, neon_sub_halve, neon_sub_halve_q,\\\n           neon_sub_halve_narrow_q,\\\n-          neon_abs, neon_abs_q, neon_neg, neon_neg_q, neon_qneg,\\\n-          neon_qneg_q, neon_qabs, neon_qabs_q, neon_abd, neon_abd_q,\\\n+\t  neon_abs, neon_abs_q, neon_dot, neon_dot_q, neon_neg, neon_neg_q,\\\n+\t  neon_qneg, neon_qneg_q, neon_qabs, neon_qabs_q, neon_abd, neon_abd_q,\\\n           neon_abd_long, neon_minmax, neon_minmax_q, neon_compare,\\\n           neon_compare_q, neon_compare_zero, neon_compare_zero_q,\\\n           neon_arith_acc, neon_arith_acc_q, neon_reduc_add,\\"}, {"sha": "c474f4bb5db995b60f464f098e478f0398ce15f9", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "patch": "@@ -410,4 +410,6 @@\n   UNSPEC_VRNDN\n   UNSPEC_VRNDP\n   UNSPEC_VRNDX\n+  UNSPEC_DOT_S\n+  UNSPEC_DOT_U\n ])"}]}