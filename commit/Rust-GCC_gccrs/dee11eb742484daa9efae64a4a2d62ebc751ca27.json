{"sha": "dee11eb742484daa9efae64a4a2d62ebc751ca27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVlMTFlYjc0MjQ4NGRhYTllZmFlNjRhNGEyZDYyZWJjNzUxY2EyNw==", "commit": {"author": {"name": "Stam Markianos-Wright", "email": "stam.markianos-wright@arm.com", "date": "2020-11-30T10:32:58Z"}, "committer": {"name": "Stam Markianos-Wright", "email": "stam.markianos-wright@arm.com", "date": "2020-11-30T10:36:26Z"}, "message": "[Obvious] arm: Fix test from failing on some targets [PR91816]\n\nThis recently submitted test was found to fail on some Cortex-M\ntargets. This was because codegen on these CPUs would emit a ldr\ninstead of a movw/movt pair, resulting in an overall smaller test\n(i.e. the branch wasn't as far) and the behaviour being tested\nfor not being triggered.\n\nThis commit doubles the size of the test to account for this.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/pr91816.c: New test.", "tree": {"sha": "49db544773277b242d453ea4fcd29e69708c1677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49db544773277b242d453ea4fcd29e69708c1677"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dee11eb742484daa9efae64a4a2d62ebc751ca27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dee11eb742484daa9efae64a4a2d62ebc751ca27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dee11eb742484daa9efae64a4a2d62ebc751ca27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dee11eb742484daa9efae64a4a2d62ebc751ca27/comments", "author": {"login": "Stammark", "id": 30555766, "node_id": "MDQ6VXNlcjMwNTU1NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/30555766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stammark", "html_url": "https://github.com/Stammark", "followers_url": "https://api.github.com/users/Stammark/followers", "following_url": "https://api.github.com/users/Stammark/following{/other_user}", "gists_url": "https://api.github.com/users/Stammark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stammark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stammark/subscriptions", "organizations_url": "https://api.github.com/users/Stammark/orgs", "repos_url": "https://api.github.com/users/Stammark/repos", "events_url": "https://api.github.com/users/Stammark/events{/privacy}", "received_events_url": "https://api.github.com/users/Stammark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stammark", "id": 30555766, "node_id": "MDQ6VXNlcjMwNTU1NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/30555766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stammark", "html_url": "https://github.com/Stammark", "followers_url": "https://api.github.com/users/Stammark/followers", "following_url": "https://api.github.com/users/Stammark/following{/other_user}", "gists_url": "https://api.github.com/users/Stammark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stammark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stammark/subscriptions", "organizations_url": "https://api.github.com/users/Stammark/orgs", "repos_url": "https://api.github.com/users/Stammark/repos", "events_url": "https://api.github.com/users/Stammark/events{/privacy}", "received_events_url": "https://api.github.com/users/Stammark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d87bd39bafae86747944b2f8c53fdbc43b8dac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d87bd39bafae86747944b2f8c53fdbc43b8dac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d87bd39bafae86747944b2f8c53fdbc43b8dac3"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "f12691416903b34223d2baa2571cd216aa656d14", "filename": "gcc/testsuite/gcc.target/arm/pr91816.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dee11eb742484daa9efae64a4a2d62ebc751ca27/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr91816.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dee11eb742484daa9efae64a4a2d62ebc751ca27/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr91816.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr91816.c?ref=dee11eb742484daa9efae64a4a2d62ebc751ca27", "patch": "@@ -11,6 +11,7 @@ int printf(const char *, ...);\n #define HW3\tHW2 HW2 HW2 HW2 HW2 HW2 HW2 HW2 HW2 HW2\n #define HW4\tHW3 HW3 HW3 HW3 HW3 HW3 HW3 HW3 HW3 HW3\n #define HW5\tHW4 HW4 HW4 HW4 HW4 HW4 HW4 HW4 HW4 HW4\n+#define HW6\tHW5 HW5\n \n __attribute__((noinline,noclone)) void f1 (int a)\n {\n@@ -25,7 +26,7 @@ __attribute__((noinline,noclone)) void f2 (int a)\n \n __attribute__((noinline,noclone)) void f3 (int a)\n {\n-  if (a) { HW5 }\n+  if (a) { HW6 }\n }\n \n __attribute__((noinline,noclone)) void f4 (int a)\n@@ -41,7 +42,7 @@ __attribute__((noinline,noclone)) void f5 (int a)\n \n __attribute__((noinline,noclone)) void f6 (int a)\n {\n-  if (a == 1) { HW5 }\n+  if (a == 1) { HW6 }\n }\n \n "}]}