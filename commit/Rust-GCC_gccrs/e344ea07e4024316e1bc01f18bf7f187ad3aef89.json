{"sha": "e344ea07e4024316e1bc01f18bf7f187ad3aef89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0NGVhMDdlNDAyNDMxNmUxYmMwMWYxOGJmN2YxODdhZDNhZWY4OQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-30T19:24:07Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-01T20:15:25Z"}, "message": "Objective-C++ : Address a FIXME.\n\nWe can avoid the spurious additional complaint about a closing\n')' by short-circuiting the test in the case we know there's a\nsyntax error already reported.\n\ngcc/cp/ChangeLog:\n\n\t* parser.c (cp_parser_objc_at_property_declaration): Use any\n\texisiting syntax error to suppress complaints about a missing\n\tclosing parenthesis in parsing property attributes.\n\ngcc/testsuite/ChangeLog:\n\n\t* obj-c++.dg/property/at-property-1.mm: Adjust test after\n\tfixing spurious error output.", "tree": {"sha": "d406d6eba79c5e13d509cc6c638e1b3e71ea088c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d406d6eba79c5e13d509cc6c638e1b3e71ea088c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e344ea07e4024316e1bc01f18bf7f187ad3aef89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e344ea07e4024316e1bc01f18bf7f187ad3aef89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e344ea07e4024316e1bc01f18bf7f187ad3aef89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e344ea07e4024316e1bc01f18bf7f187ad3aef89/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3784f161a383ead7d5fe9a5b68e4d07eccd82d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3784f161a383ead7d5fe9a5b68e4d07eccd82d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3784f161a383ead7d5fe9a5b68e4d07eccd82d49"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "dd8c4b56bd0657bca59892d6a26862bf6f3570ae", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e344ea07e4024316e1bc01f18bf7f187ad3aef89/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e344ea07e4024316e1bc01f18bf7f187ad3aef89/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e344ea07e4024316e1bc01f18bf7f187ad3aef89", "patch": "@@ -33884,16 +33884,17 @@ cp_parser_objc_at_property_declaration (cp_parser *parser)\n       /* Eat the '('.  */\n       matching_parens parens;\n       parens.consume_open (parser);\n+      bool syntax_error = false;\n \n       while (true)\n \t{\n-\t  bool syntax_error = false;\n \t  cp_token *token = cp_lexer_peek_token (parser->lexer);\n       \t  enum rid keyword;\n \n \t  if (token->type != CPP_NAME)\n \t    {\n \t      cp_parser_error (parser, \"expected identifier\");\n+\t      syntax_error = true;\n \t      break;\n \t    }\n \t  keyword = C_RID_CODE (token->u.value);\n@@ -33967,17 +33968,11 @@ cp_parser_objc_at_property_declaration (cp_parser *parser)\n \t    break;\n \t}\n \n-      /* FIXME: \"@property (setter, assign);\" will generate a spurious\n-\t \"error: expected \u2018)\u2019 before \u2018,\u2019 token\".  This is because\n-\t cp_parser_require, unlike the C counterpart, will produce an\n-\t error even if we are in error recovery.  */\n-      if (!parens.require_close (parser))\n-\t{\n-\t  cp_parser_skip_to_closing_parenthesis (parser,\n+      if (syntax_error || !parens.require_close (parser))\n+\tcp_parser_skip_to_closing_parenthesis (parser,\n \t\t\t\t\t\t /*recovering=*/true,\n \t\t\t\t\t\t /*or_comma=*/false,\n \t\t\t\t\t\t /*consume_paren=*/true);\n-\t}\n     }\n \n   /* ... and the property declaration(s).  */"}, {"sha": "6a90471d89cf344d03e237f3998d4bce104eb73e", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-1.mm", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e344ea07e4024316e1bc01f18bf7f187ad3aef89/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e344ea07e4024316e1bc01f18bf7f187ad3aef89/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-1.mm?ref=e344ea07e4024316e1bc01f18bf7f187ad3aef89", "patch": "@@ -16,5 +16,4 @@ @interface MyRootClass\n @property (xxx) int g;          /* { dg-error \"unknown property attribute\" } */\n @property (readonly,xxx) int h; /* { dg-error \"unknown property attribute\" } */\n @property ( int i;              /* { dg-error \"expected identifier\" } */\n-                                /* { dg-error \"expected ... \"       \"\" { target *-*-* } .-1 } */\n @end"}]}