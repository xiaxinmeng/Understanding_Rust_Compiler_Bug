{"sha": "b36c386c88ade83a6927df28ca5d26d3af5bde23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM2YzM4NmM4OGFkZTgzYTY5MjdkZjI4Y2E1ZDI2ZDNhZjViZGUyMw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2008-10-22T13:30:19Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2008-10-22T13:30:19Z"}, "message": "./\n\tPR gdb/921\n\tPR gdb/1646\n\tPR gdb/2175\n\tPR gdb/2176\n\n\t* Makefile.def (flags_to_pass): Add CPPFLAGS_FOR_BUILD and CPPFLAGS.\n\t* Makefile.tpl (BUILD_EXPORTS): Set CPPFLAGS.\n\t(EXTRA_BUILD_FLAGS): Correct typo.  Pass CPPFLAGS.\n\t(HOST_EXPORTS): Pass CPPFLAGS.\n\t(CPPFLAGS_FOR_BUILD, CPPFLAGS, CPPFLAGS_FOR_TARGET): Define.\n\t(LDFLAGS_FOR_TARGET): Initialize from configure script.\n\t(EXTRA_TARGET_FLAGS): Set CPPFLAGS.\n\t* Makefile.in, configure: Regenerated.\n\t* configure.ac: Set CPPFLAGS_FOR_TARGET, LDFLAGS_FOR_TARGET,\n\tand CPPFLAGS_FOR_BUILD.\n\n\tlibiberty/\n\t* Makefile.in (CPPFLAGS): Define.\n\t(FLAGS_TO_PASS, COMPILE.c): Add CPPFLAGS.\n\nFrom-SVN: r141292", "tree": {"sha": "0c40314e0364417e7a17fe8507df4caed13a5198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c40314e0364417e7a17fe8507df4caed13a5198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b36c386c88ade83a6927df28ca5d26d3af5bde23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36c386c88ade83a6927df28ca5d26d3af5bde23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36c386c88ade83a6927df28ca5d26d3af5bde23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36c386c88ade83a6927df28ca5d26d3af5bde23/comments", "author": null, "committer": null, "parents": [{"sha": "8eb766fd0a98aec3a60fe172b3c86f2ea1185060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb766fd0a98aec3a60fe172b3c86f2ea1185060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb766fd0a98aec3a60fe172b3c86f2ea1185060"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "fb8b4c35c77633d1eea456f32f8bdf179ac19d2e", "filename": "ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -1,3 +1,21 @@\n+2008-10-22  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR gdb/921\n+\tPR gdb/1646\n+\tPR gdb/2175\n+\tPR gdb/2176\n+\n+\t* Makefile.def (flags_to_pass): Add CPPFLAGS_FOR_BUILD and CPPFLAGS.\n+\t* Makefile.tpl (BUILD_EXPORTS): Set CPPFLAGS.\n+\t(EXTRA_BUILD_FLAGS): Correct typo.  Pass CPPFLAGS.\n+\t(HOST_EXPORTS): Pass CPPFLAGS.\n+\t(CPPFLAGS_FOR_BUILD, CPPFLAGS, CPPFLAGS_FOR_TARGET): Define.\n+\t(LDFLAGS_FOR_TARGET): Initialize from configure script.\n+\t(EXTRA_TARGET_FLAGS): Set CPPFLAGS.\n+\t* Makefile.in, configure: Regenerated.\n+\t* configure.ac: Set CPPFLAGS_FOR_TARGET, LDFLAGS_FOR_TARGET,\n+\tand CPPFLAGS_FOR_BUILD.\n+\n 2008-10-20  Sebastian Pop <sebastian.pop@amd.com>\n \n \t* MAINTAINERS (Graphite Reviewers): Added Daniel Berlin and"}, {"sha": "bd33d1de8b20da337b8db2cb532ebdd92abecc67", "filename": "Makefile.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -218,6 +218,7 @@ flags_to_pass = { flag= target_alias ; };\n flags_to_pass = { flag= BISON ; };\n flags_to_pass = { flag= CC_FOR_BUILD ; };\n flags_to_pass = { flag= CFLAGS_FOR_BUILD ; };\n+flags_to_pass = { flag= CPPFLAGS_FOR_BUILD ; };\n flags_to_pass = { flag= CXX_FOR_BUILD ; };\n flags_to_pass = { flag= EXPECT ; };\n flags_to_pass = { flag= FLEX ; };\n@@ -242,6 +243,7 @@ flags_to_pass = { flag= BOOT_ADAFLAGS ; optional=true ; };\n flags_to_pass = { flag= BOOT_CFLAGS ; };\n flags_to_pass = { flag= BOOT_LDFLAGS ; };\n flags_to_pass = { flag= CFLAGS ; };\n+flags_to_pass = { flag= CPPFLAGS ; };\n flags_to_pass = { flag= CXXFLAGS ; };\n flags_to_pass = { flag= LDFLAGS ; };\n flags_to_pass = { flag= LIBCFLAGS ; };"}, {"sha": "279441833696f488447b46106057b86bfceea01b", "filename": "Makefile.in", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -137,6 +137,7 @@ BUILD_EXPORTS = \\\n \tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n \tGCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n@@ -150,9 +151,10 @@ BUILD_EXPORTS = \\\n \tWINDMC=\"$(WINDMC_FOR_BUILD)\"; export WINDMC;\n \n # These variables must be set on the make command line for directories\n-# built for the build system to override those in BASE_FLAGS_TO_PASSS.\n+# built for the build system to override those in BASE_FLAGS_TO_PASS.\n EXTRA_BUILD_FLAGS = \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\" \\\n+\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\" \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"\n \n # This is the list of directories to built for the host system.\n@@ -172,6 +174,7 @@ HOST_EXPORTS = \\\n \tADA_CFLAGS=\"$(ADA_CFLAGS)\"; export ADA_CFLAGS; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCPPFLAGS=\"$(CFLAGS)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n@@ -287,6 +290,7 @@ AR_FOR_BUILD = @AR_FOR_BUILD@\n AS_FOR_BUILD = @AS_FOR_BUILD@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n@@ -348,6 +352,7 @@ GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n CFLAGS = @CFLAGS@\n+CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBCFLAGS = $(CFLAGS)\n CXXFLAGS = @CXXFLAGS@\n@@ -411,13 +416,14 @@ COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@\n COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@\n \n CFLAGS_FOR_TARGET = @CFLAGS_FOR_TARGET@\n+CPPFLAGS_FOR_TARGET = @CPPFLAGS_FOR_TARGET@\n CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n DEBUG_PREFIX_CFLAGS_FOR_TARGET = @DEBUG_PREFIX_CFLAGS_FOR_TARGET@\n \n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n-LDFLAGS_FOR_TARGET = \n+LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n \n # ------------------------------------\n # Miscellaneous targets and flag lists\n@@ -527,6 +533,7 @@ BASE_FLAGS_TO_PASS = \\\n \t\"BISON=$(BISON)\" \\\n \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"CPPFLAGS_FOR_BUILD=$(CPPFLAGS_FOR_BUILD)\" \\\n \t\"CXX_FOR_BUILD=$(CXX_FOR_BUILD)\" \\\n \t\"EXPECT=$(EXPECT)\" \\\n \t\"FLEX=$(FLEX)\" \\\n@@ -549,6 +556,7 @@ BASE_FLAGS_TO_PASS = \\\n \t\"BOOT_CFLAGS=$(BOOT_CFLAGS)\" \\\n \t\"BOOT_LDFLAGS=$(BOOT_LDFLAGS)\" \\\n \t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CPPFLAGS=$(CPPFLAGS)\" \\\n \t\"CXXFLAGS=$(CXXFLAGS)\" \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n@@ -639,6 +647,7 @@ EXTRA_TARGET_FLAGS = \\\n \t'AS=$(COMPILER_AS_FOR_TARGET)' \\\n \t'CC=$$(CC_FOR_TARGET)' \\\n \t'CFLAGS=$$(CFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n+\t'CPPFLAGS=$$(CPPFLAGS_FOR_TARGET)' \\\n \t'CXX=$$(CXX_FOR_TARGET)' \\\n \t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\"}, {"sha": "fde4dcaa464b6dcbaae678fbb250d6d2b3a80ac9", "filename": "Makefile.tpl", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -140,6 +140,7 @@ BUILD_EXPORTS = \\\n \tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n \tGCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n@@ -153,9 +154,10 @@ BUILD_EXPORTS = \\\n \tWINDMC=\"$(WINDMC_FOR_BUILD)\"; export WINDMC;\n \n # These variables must be set on the make command line for directories\n-# built for the build system to override those in BASE_FLAGS_TO_PASSS.\n+# built for the build system to override those in BASE_FLAGS_TO_PASS.\n EXTRA_BUILD_FLAGS = \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\" \\\n+\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\" \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"\n \n # This is the list of directories to built for the host system.\n@@ -175,6 +177,7 @@ HOST_EXPORTS = \\\n \tADA_CFLAGS=\"$(ADA_CFLAGS)\"; export ADA_CFLAGS; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCPPFLAGS=\"$(CFLAGS)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n@@ -290,6 +293,7 @@ AR_FOR_BUILD = @AR_FOR_BUILD@\n AS_FOR_BUILD = @AS_FOR_BUILD@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n@@ -351,6 +355,7 @@ GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n CFLAGS = @CFLAGS@\n+CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBCFLAGS = $(CFLAGS)\n CXXFLAGS = @CXXFLAGS@\n@@ -414,13 +419,14 @@ COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@\n COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@\n \n CFLAGS_FOR_TARGET = @CFLAGS_FOR_TARGET@\n+CPPFLAGS_FOR_TARGET = @CPPFLAGS_FOR_TARGET@\n CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n DEBUG_PREFIX_CFLAGS_FOR_TARGET = @DEBUG_PREFIX_CFLAGS_FOR_TARGET@\n \n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n-LDFLAGS_FOR_TARGET = \n+LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n \n # ------------------------------------\n # Miscellaneous targets and flag lists\n@@ -527,6 +533,7 @@ EXTRA_TARGET_FLAGS = \\\n \t'AS=$(COMPILER_AS_FOR_TARGET)' \\\n \t'CC=$$(CC_FOR_TARGET)' \\\n \t'CFLAGS=$$(CFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n+\t'CPPFLAGS=$$(CPPFLAGS_FOR_TARGET)' \\\n \t'CXX=$$(CXX_FOR_TARGET)' \\\n \t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\"}, {"sha": "13c5a48a38b41ad4cb6a44cf13469072e953c96c", "filename": "configure", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -272,7 +272,7 @@ PACKAGE_STRING=\n PACKAGE_BUGREPORT=\n \n ac_unique_file=\"move-if-change\"\n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS TOPLEVEL_CONFIGURE_ARGUMENTS build build_cpu build_vendor build_os build_noncanonical host_noncanonical target_noncanonical host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN LN_S build_libsubdir build_subdir host_subdir target_subdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CXX CXXFLAGS ac_ct_CXX GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE do_compare gmplibs gmpinc ppllibs pplinc clooglibs clooginc stage1_languages SYSROOT_CFLAGS_FOR_TARGET DEBUG_PREFIX_CFLAGS_FOR_TARGET CFLAGS_FOR_TARGET CXXFLAGS_FOR_TARGET RPATH_ENVVAR GCC_SHLIB_SUBDIR tooldir build_tooldir CONFIGURE_GDB_TK GDB_TK INSTALL_GDB_TK build_configargs build_configdirs host_configargs configdirs target_configargs AR_FOR_BUILD AS_FOR_BUILD CC_FOR_BUILD CFLAGS_FOR_BUILD CXXFLAGS_FOR_BUILD CXX_FOR_BUILD DLLTOOL_FOR_BUILD GCJ_FOR_BUILD GFORTRAN_FOR_BUILD LDFLAGS_FOR_BUILD LD_FOR_BUILD NM_FOR_BUILD RANLIB_FOR_BUILD WINDMC_FOR_BUILD WINDRES_FOR_BUILD config_shell YACC BISON M4 LEX FLEX MAKEINFO EXPECT RUNTEST AR AS DLLTOOL LD LIPO NM RANLIB STRIP WINDRES WINDMC OBJCOPY OBJDUMP CC_FOR_TARGET CXX_FOR_TARGET GCC_FOR_TARGET GCJ_FOR_TARGET GFORTRAN_FOR_TARGET AR_FOR_TARGET AS_FOR_TARGET DLLTOOL_FOR_TARGET LD_FOR_TARGET LIPO_FOR_TARGET NM_FOR_TARGET OBJDUMP_FOR_TARGET RANLIB_FOR_TARGET STRIP_FOR_TARGET WINDRES_FOR_TARGET WINDMC_FOR_TARGET RAW_CXX_FOR_TARGET FLAGS_FOR_TARGET COMPILER_AS_FOR_TARGET COMPILER_LD_FOR_TARGET COMPILER_NM_FOR_TARGET MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT stage1_cflags stage1_checking stage2_werror_flag datarootdir docdir pdfdir htmldir LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS TOPLEVEL_CONFIGURE_ARGUMENTS build build_cpu build_vendor build_os build_noncanonical host_noncanonical target_noncanonical host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN LN_S build_libsubdir build_subdir host_subdir target_subdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CXX CXXFLAGS ac_ct_CXX GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE do_compare gmplibs gmpinc ppllibs pplinc clooglibs clooginc stage1_languages SYSROOT_CFLAGS_FOR_TARGET DEBUG_PREFIX_CFLAGS_FOR_TARGET CFLAGS_FOR_TARGET CXXFLAGS_FOR_TARGET CPPFLAGS_FOR_TARGET LDFLAGS_FOR_TARGET RPATH_ENVVAR GCC_SHLIB_SUBDIR tooldir build_tooldir CONFIGURE_GDB_TK GDB_TK INSTALL_GDB_TK build_configargs build_configdirs host_configargs configdirs target_configargs AR_FOR_BUILD AS_FOR_BUILD CC_FOR_BUILD CFLAGS_FOR_BUILD CPPFLAGS_FOR_BUILD CXXFLAGS_FOR_BUILD CXX_FOR_BUILD DLLTOOL_FOR_BUILD GCJ_FOR_BUILD GFORTRAN_FOR_BUILD LDFLAGS_FOR_BUILD LD_FOR_BUILD NM_FOR_BUILD RANLIB_FOR_BUILD WINDMC_FOR_BUILD WINDRES_FOR_BUILD config_shell YACC BISON M4 LEX FLEX MAKEINFO EXPECT RUNTEST AR AS DLLTOOL LD LIPO NM RANLIB STRIP WINDRES WINDMC OBJCOPY OBJDUMP CC_FOR_TARGET CXX_FOR_TARGET GCC_FOR_TARGET GCJ_FOR_TARGET GFORTRAN_FOR_TARGET AR_FOR_TARGET AS_FOR_TARGET DLLTOOL_FOR_TARGET LD_FOR_TARGET LIPO_FOR_TARGET NM_FOR_TARGET OBJDUMP_FOR_TARGET RANLIB_FOR_TARGET STRIP_FOR_TARGET WINDRES_FOR_TARGET WINDMC_FOR_TARGET RAW_CXX_FOR_TARGET FLAGS_FOR_TARGET COMPILER_AS_FOR_TARGET COMPILER_LD_FOR_TARGET COMPILER_NM_FOR_TARGET MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT stage1_cflags stage1_checking stage2_werror_flag datarootdir docdir pdfdir htmldir LIBOBJS LTLIBOBJS'\n ac_subst_files='serialization_dependencies host_makefile_frag target_makefile_frag alphaieee_frag ospace_frag'\n ac_pwd=`pwd`\n \n@@ -5540,6 +5540,12 @@ if test \"x$CXXFLAGS_FOR_TARGET\" = x; then\n fi\n \n \n+# Other target tools.\n+CPPFLAGS_FOR_TARGET=${CPPFLAGS_FOR_TARGET-${CPPFLAGS}}\n+\n+LDFLAGS_FOR_TARGET=${LDFLAGS_FOR_TARGET-${LDFLAGS}}\n+\n+\n # Handle --with-headers=XXX.  If the value is not \"yes\", the contents of\n # the named directory are copied to $(tooldir)/sys-include.\n if test x\"${with_headers}\" != x && test x\"${with_headers}\" != xno ; then\n@@ -6289,6 +6295,7 @@ esac\n # our build compiler if desired.\n if test x\"${build}\" = x\"${host}\" ; then\n   CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}\n+  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}\n   CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}\n   LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}\n fi\n@@ -6367,6 +6374,7 @@ done\n \n \n \n+\n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these\n # programs in objdir.\n@@ -13239,6 +13247,8 @@ s,@SYSROOT_CFLAGS_FOR_TARGET@,$SYSROOT_CFLAGS_FOR_TARGET,;t t\n s,@DEBUG_PREFIX_CFLAGS_FOR_TARGET@,$DEBUG_PREFIX_CFLAGS_FOR_TARGET,;t t\n s,@CFLAGS_FOR_TARGET@,$CFLAGS_FOR_TARGET,;t t\n s,@CXXFLAGS_FOR_TARGET@,$CXXFLAGS_FOR_TARGET,;t t\n+s,@CPPFLAGS_FOR_TARGET@,$CPPFLAGS_FOR_TARGET,;t t\n+s,@LDFLAGS_FOR_TARGET@,$LDFLAGS_FOR_TARGET,;t t\n s,@RPATH_ENVVAR@,$RPATH_ENVVAR,;t t\n s,@GCC_SHLIB_SUBDIR@,$GCC_SHLIB_SUBDIR,;t t\n s,@tooldir@,$tooldir,;t t\n@@ -13255,6 +13265,7 @@ s,@AR_FOR_BUILD@,$AR_FOR_BUILD,;t t\n s,@AS_FOR_BUILD@,$AS_FOR_BUILD,;t t\n s,@CC_FOR_BUILD@,$CC_FOR_BUILD,;t t\n s,@CFLAGS_FOR_BUILD@,$CFLAGS_FOR_BUILD,;t t\n+s,@CPPFLAGS_FOR_BUILD@,$CPPFLAGS_FOR_BUILD,;t t\n s,@CXXFLAGS_FOR_BUILD@,$CXXFLAGS_FOR_BUILD,;t t\n s,@CXX_FOR_BUILD@,$CXX_FOR_BUILD,;t t\n s,@DLLTOOL_FOR_BUILD@,$DLLTOOL_FOR_BUILD,;t t"}, {"sha": "aa4b6133dae583e2437b2e79ff8fcc9d4ae24b66", "filename": "configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -1852,6 +1852,12 @@ if test \"x$CXXFLAGS_FOR_TARGET\" = x; then\n fi\n AC_SUBST(CXXFLAGS_FOR_TARGET)\n \n+# Other target tools.\n+CPPFLAGS_FOR_TARGET=${CPPFLAGS_FOR_TARGET-${CPPFLAGS}}\n+AC_SUBST(CPPFLAGS_FOR_TARGET)\n+LDFLAGS_FOR_TARGET=${LDFLAGS_FOR_TARGET-${LDFLAGS}}\n+AC_SUBST(LDFLAGS_FOR_TARGET)\n+\n # Handle --with-headers=XXX.  If the value is not \"yes\", the contents of\n # the named directory are copied to $(tooldir)/sys-include.\n if test x\"${with_headers}\" != x && test x\"${with_headers}\" != xno ; then\n@@ -2592,6 +2598,7 @@ esac\n # our build compiler if desired.\n if test x\"${build}\" = x\"${host}\" ; then\n   CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}\n+  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}\n   CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}\n   LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}\n fi\n@@ -2657,6 +2664,7 @@ AC_SUBST(AR_FOR_BUILD)\n AC_SUBST(AS_FOR_BUILD)\n AC_SUBST(CC_FOR_BUILD)\n AC_SUBST(CFLAGS_FOR_BUILD)\n+AC_SUBST(CPPFLAGS_FOR_BUILD)\n AC_SUBST(CXXFLAGS_FOR_BUILD)\n AC_SUBST(CXX_FOR_BUILD)\n AC_SUBST(DLLTOOL_FOR_BUILD)"}, {"sha": "fd9d30002176070fbb1d3fdb7c953ca78f1ece26", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -1,3 +1,8 @@\n+2008-10-22  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* Makefile.in (CPPFLAGS): Define.\n+\t(FLAGS_TO_PASS, COMPILE.c): Add CPPFLAGS.\n+\n 2008-10-15  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR bootstrap/37137"}, {"sha": "41a71f5ea32f0af2565a5404ada816a46e9d4550", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36c386c88ade83a6927df28ca5d26d3af5bde23/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36c386c88ade83a6927df28ca5d26d3af5bde23/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=b36c386c88ade83a6927df28ca5d26d3af5bde23", "patch": "@@ -55,6 +55,7 @@ AR_FLAGS = rc\n \n CC = @CC@\n CFLAGS = @CFLAGS@\n+CPPFLAGS = @CPPFLAGS@\n RANLIB = @RANLIB@\n MAKEINFO = @MAKEINFO@\n PERL = @PERL@\n@@ -78,6 +79,7 @@ FLAGS_TO_PASS = \\\n \t\"AR_FLAGS=$(AR_FLAGS)\" \\\n \t\"CC=$(CC)\" \\\n \t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CPPFLAGS=$(CPPFLAGS)\" \\\n \t\"DESTDIR=$(DESTDIR)\" \\\n \t\"EXTRA_OFILES=$(EXTRA_OFILES)\" \\\n \t\"HDEFINES=$(HDEFINES)\" \\\n@@ -109,7 +111,7 @@ installcheck: installcheck-subdir\n \n INCDIR=$(srcdir)/$(MULTISRCTOP)../include\n \n-COMPILE.c = $(CC) -c @DEFS@ $(CFLAGS) -I. -I$(INCDIR) $(HDEFINES) @ac_libiberty_warn_cflags@\n+COMPILE.c = $(CC) -c @DEFS@ $(CFLAGS) $(CPPFLAGS) -I. -I$(INCDIR) $(HDEFINES) @ac_libiberty_warn_cflags@\n \n # Just to make sure we don't use a built-in rule with VPATH\n .c.o:"}]}