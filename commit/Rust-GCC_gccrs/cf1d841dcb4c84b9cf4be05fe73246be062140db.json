{"sha": "cf1d841dcb4c84b9cf4be05fe73246be062140db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YxZDg0MWRjYjRjODRiOWNmNGJlMDVmZTczMjQ2YmUwNjIxNDBkYg==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-09-29T05:42:10Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-09-29T05:42:10Z"}, "message": "(ignore_escape_flag): Remove var.\n\n(check_newline, yylex): Do not ignore escapes when reading file names,\nbecause escapes are the only way to represent file names containing '\"'.\n\nFrom-SVN: r5528", "tree": {"sha": "2ad1ab53a3c48b891befe77f9e42083f78842d0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ad1ab53a3c48b891befe77f9e42083f78842d0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf1d841dcb4c84b9cf4be05fe73246be062140db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1d841dcb4c84b9cf4be05fe73246be062140db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1d841dcb4c84b9cf4be05fe73246be062140db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1d841dcb4c84b9cf4be05fe73246be062140db/comments", "author": null, "committer": null, "parents": [{"sha": "0d38001f71236de3143214709c1ae1d730d49705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d38001f71236de3143214709c1ae1d730d49705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d38001f71236de3143214709c1ae1d730d49705"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "98a9f83b0e4d5e9b444f8af0777e5db8b3ada3c8", "filename": "gcc/c-lex.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf1d841dcb4c84b9cf4be05fe73246be062140db/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf1d841dcb4c84b9cf4be05fe73246be062140db/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=cf1d841dcb4c84b9cf4be05fe73246be062140db", "patch": "@@ -90,9 +90,6 @@ static int end_of_file;\n static int nextchar = -1;\n \n int check_newline ();\n-\n-/* Nonzero tells yylex to ignore \\ in string constants.  */\n-static int ignore_escape_flag = 0;\n \f\n /* C code produced by gperf version 2.5 (GNU C++ version) */\n /* Command-line: gperf -p -j1 -i 1 -g -o -t -G -N is_reserved_word -k1,3,$ c-parse.gperf  */\n@@ -716,10 +713,8 @@ check_newline ()\n \n       /* More follows: it must be a string constant (filename).  */\n \n-      /* Read the string constant, but don't treat \\ as special.  */\n-      ignore_escape_flag = 1;\n+      /* Read the string constant.  */\n       token = yylex ();\n-      ignore_escape_flag = 0;\n \n       if (token != STRING || TREE_CODE (yylval.ttype) != STRING_CST)\n \t{\n@@ -1938,8 +1933,7 @@ yylex ()\n \n \twhile (c != '\"' && c >= 0)\n \t  {\n-\t    /* ignore_escape_flag is set for reading the filename in #line.  */\n-\t    if (!ignore_escape_flag && c == '\\\\')\n+\t    if (c == '\\\\')\n \t      {\n \t\tint ignore = 0;\n \t\tc = readescape (&ignore);"}]}