{"sha": "ec5e67bf4f176448bfb868599cefb583110301f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM1ZTY3YmY0ZjE3NjQ0OGJmYjg2ODU5OWNlZmI1ODMxMTAzMDFmMQ==", "commit": {"author": {"name": "Jason Blevins", "email": "jrblevin@sdf.org", "date": "2010-09-21T19:12:44Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-09-21T19:12:44Z"}, "message": "intrinsics.texi (HYPOT, [...]): Correct spelling.\n\n2010-09-21  Jason Blevins  <jrblevin@sdf.org>\n\n        * intrinsics.texi (HYPOT, IMAGE_INDEX, BESSEL_JN, BESSEL_YN,\n        execute_command_line, IEOR, IOR, NORM2, NOT, NULL, PARITY):\n        Correct spelling.\n\nFrom-SVN: r164496", "tree": {"sha": "af167b69edb4212d6a8ff439db8d29fef0e6fcde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af167b69edb4212d6a8ff439db8d29fef0e6fcde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec5e67bf4f176448bfb868599cefb583110301f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5e67bf4f176448bfb868599cefb583110301f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec5e67bf4f176448bfb868599cefb583110301f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5e67bf4f176448bfb868599cefb583110301f1/comments", "author": {"login": "jrblevin", "id": 12706530, "node_id": "MDQ6VXNlcjEyNzA2NTMw", "avatar_url": "https://avatars.githubusercontent.com/u/12706530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrblevin", "html_url": "https://github.com/jrblevin", "followers_url": "https://api.github.com/users/jrblevin/followers", "following_url": "https://api.github.com/users/jrblevin/following{/other_user}", "gists_url": "https://api.github.com/users/jrblevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrblevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrblevin/subscriptions", "organizations_url": "https://api.github.com/users/jrblevin/orgs", "repos_url": "https://api.github.com/users/jrblevin/repos", "events_url": "https://api.github.com/users/jrblevin/events{/privacy}", "received_events_url": "https://api.github.com/users/jrblevin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b4f2770ff14ee139b9f5d0aa16c1507eb60cb55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4f2770ff14ee139b9f5d0aa16c1507eb60cb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4f2770ff14ee139b9f5d0aa16c1507eb60cb55"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "ffe7df5be54921a309c00286538cb40c399b317e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5e67bf4f176448bfb868599cefb583110301f1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5e67bf4f176448bfb868599cefb583110301f1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ec5e67bf4f176448bfb868599cefb583110301f1", "patch": "@@ -1,3 +1,9 @@\n+2010-09-21  Jason Blevins  <jrblevin@sdf.org>\n+\n+\t* intrinsics.texi (HYPOT, IMAGE_INDEX, BESSEL_JN, BESSEL_YN,\n+\texecute_command_line, IEOR, IOR, NORM2, NOT, NULL, PARITY):\n+\tCorrect spelling.\n+\n 2010-09-21  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/45648"}, {"sha": "0265579862b00a9d450801c4051037037c5668d3", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5e67bf4f176448bfb868599cefb583110301f1/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5e67bf4f176448bfb868599cefb583110301f1/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=ec5e67bf4f176448bfb868599cefb583110301f1", "patch": "@@ -143,7 +143,7 @@ Some basic guidelines for editing this document:\n * @code{GMTIME}:        GMTIME,    Convert time to GMT info\n * @code{HOSTNM}:        HOSTNM,    Get system host name\n * @code{HUGE}:          HUGE,      Largest number of a kind\n-* @code{HYPOT}:         HYPOT,     Euclidian distance function\n+* @code{HYPOT}:         HYPOT,     Euclidean distance function\n * @code{IACHAR}:        IACHAR,    Code in @acronym{ASCII} collating sequence\n * @code{IALL}:          IALL,      Bitwise AND of array elements\n * @code{IAND}:          IAND,      Bitwise logical and\n@@ -156,7 +156,7 @@ Some basic guidelines for editing this document:\n * @code{IDATE}:         IDATE,     Current local time (day/month/year)\n * @code{IEOR}:          IEOR,      Bitwise logical exclusive or\n * @code{IERRNO}:        IERRNO,    Function to get the last system error number\n-* @code{IMAGE_INDEX}:   IMAGE_INDEX, Cosubscript to image index convertion\n+* @code{IMAGE_INDEX}:   IMAGE_INDEX, Cosubscript to image index conversion\n * @code{INDEX}:         INDEX intrinsic, Position of a substring within a string\n * @code{INT}:           INT,       Convert to integer type\n * @code{INT2}:          INT2,      Convert to 16-bit integer type\n@@ -1443,7 +1443,7 @@ Inverse function: @ref{TAN}\n @item @emph{Description}:\n @code{ATAN2(Y, X)} computes the principal value of the argument\n function of the complex number @math{X + i Y}. This function can\n-be used to transform from carthesian into polar coordinates and\n+be used to transform from Cartesian into polar coordinates and\n allows to determine the angle in the correct quadrant.\n \n @item @emph{Standard}:\n@@ -1660,7 +1660,7 @@ of the first kind of the orders @var{N1} to @var{N2}.\n Fortran 2008 and later, negative @var{N} is allowed as GNU extension\n \n @item @emph{Class}:\n-Elemental function, except for the tranformational function\n+Elemental function, except for the transformational function\n @code{BESSEL_JN(N1, N2, X)}\n \n @item @emph{Syntax}:\n@@ -1820,7 +1820,7 @@ of the first kind of the orders @var{N1} to @var{N2}.\n Fortran 2008 and later, negative @var{N} is allowed as GNU extension\n \n @item @emph{Class}:\n-Elemental function, except for the tranformational function\n+Elemental function, except for the transformational function\n @code{BESSEL_YN(N1, N2, X)}\n \n @item @emph{Syntax}:\n@@ -4114,7 +4114,7 @@ end program test_exec\n @item @emph{Note}:\n \n Because this intrinsic is implemented in terms of the @code{system()}\n-function call, its behavior with respect to signalling is processor\n+function call, its behavior with respect to signaling is processor\n dependent. In particular, on POSIX-compliant systems, the SIGINT and\n SIGQUIT signals will be ignored, and the SIGCHLD will be blocked. As\n such, if the parent process is terminated, the child process might not be\n@@ -6169,7 +6169,7 @@ The correspondence between characters and their codes is not necessarily\n the same across different GNU Fortran implementations.\n \n @item @emph{Standard}:\n-Fortan 95 and later, with @var{KIND} argument Fortran 2003 and later\n+Fortran 95 and later, with @var{KIND} argument Fortran 2003 and later\n \n @item @emph{Class}:\n Elemental function\n@@ -6285,7 +6285,7 @@ end program test_idate\n \n @table @asis\n @item @emph{Description}:\n-@code{IEOR} returns the bitwise boolean exclusive-OR of @var{I} and\n+@code{IEOR} returns the bitwise Boolean exclusive-OR of @var{I} and\n @var{J}.\n \n @item @emph{Standard}:\n@@ -6588,7 +6588,7 @@ The return value is a @code{INTEGER(8)} variable.\n \n @table @asis\n @item @emph{Description}:\n-@code{IOR} returns the bitwise boolean inclusive-OR of @var{I} and\n+@code{IOR} returns the bitwise Boolean inclusive-OR of @var{I} and\n @var{J}.\n \n @item @emph{Standard}:\n@@ -9112,7 +9112,7 @@ end program test_nint\n \n @table @asis\n @item @emph{Description}:\n-Calculates the Euclidean vector norm (@math{L_2}) norm of\n+Calculates the Euclidean vector norm (@math{L_2} norm) of\n of @var{ARRAY} along dimension @var{DIM}.\n \n @item @emph{Standard}:\n@@ -9163,7 +9163,7 @@ END PROGRAM\n \n @table @asis\n @item @emph{Description}:\n-@code{NOT} returns the bitwise boolean inverse of @var{I}.\n+@code{NOT} returns the bitwise Boolean inverse of @var{I}.\n \n @item @emph{Standard}:\n Fortran 95 and later\n@@ -9200,7 +9200,7 @@ argument.\n @item @emph{Description}:\n Returns a disassociated pointer.\n \n-If @var{MOLD} is present, a dissassociated pointer of the same type is\n+If @var{MOLD} is present, a disassociated pointer of the same type is\n returned, otherwise the type is determined by context.\n \n In Fortran 95, @var{MOLD} is optional. Please note that Fortran 2003\n@@ -9409,7 +9409,7 @@ END PROGRAM\n \n @table @asis\n @item @emph{Description}:\n-Calculates the partity, i.e. the reduction using @code{.XOR.},\n+Calculates the parity, i.e. the reduction using @code{.XOR.},\n of @var{MASK} along dimension @var{DIM}.\n \n @item @emph{Standard}:"}]}