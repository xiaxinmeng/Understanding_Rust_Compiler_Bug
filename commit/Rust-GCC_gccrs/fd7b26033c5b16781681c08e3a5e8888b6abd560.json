{"sha": "fd7b26033c5b16781681c08e3a5e8888b6abd560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ3YjI2MDMzYzViMTY3ODE2ODFjMDhlM2E1ZTg4ODhiNmFiZDU2MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-02-18T21:40:08Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-02-18T21:40:08Z"}, "message": "re PR target/39224 (ABI attribute doesn't work with long double)\n\n2009-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/39224\n\t* config/i386/i386.c (ix86_return_in_memory): Properly check\n\tABI.\n\nFrom-SVN: r144272", "tree": {"sha": "a8359d393551381e409f67c4fceff55358b18e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8359d393551381e409f67c4fceff55358b18e1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd7b26033c5b16781681c08e3a5e8888b6abd560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd7b26033c5b16781681c08e3a5e8888b6abd560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd7b26033c5b16781681c08e3a5e8888b6abd560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd7b26033c5b16781681c08e3a5e8888b6abd560/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a669372a3a1c6ce2ff5474612bcf27811afbc65f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a669372a3a1c6ce2ff5474612bcf27811afbc65f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a669372a3a1c6ce2ff5474612bcf27811afbc65f"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "b6b912439bc7887cd5625f9ae637429c8400ebfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd7b26033c5b16781681c08e3a5e8888b6abd560/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd7b26033c5b16781681c08e3a5e8888b6abd560/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd7b26033c5b16781681c08e3a5e8888b6abd560", "patch": "@@ -1,3 +1,9 @@\n+2009-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/39224\n+\t* config/i386/i386.c (ix86_return_in_memory): Properly check\n+\tABI.\n+\n 2009-02-18  Jason Merrill  <jason@redhat.com>\n \n \tPR target/39179"}, {"sha": "e41f501c35ac90ce6993e032a8057ca3a434cd62", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd7b26033c5b16781681c08e3a5e8888b6abd560/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd7b26033c5b16781681c08e3a5e8888b6abd560/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fd7b26033c5b16781681c08e3a5e8888b6abd560", "patch": "@@ -6211,10 +6211,13 @@ ix86_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n #else\n   const enum machine_mode mode = type_natural_mode (type, NULL);\n  \n-  if (TARGET_64BIT_MS_ABI)\n-    return return_in_memory_ms_64 (type, mode);\n-  else if (TARGET_64BIT)\n-    return return_in_memory_64 (type, mode);\n+  if (TARGET_64BIT)\n+    {\n+      if (ix86_function_type_abi (fntype) == MS_ABI)\n+\treturn return_in_memory_ms_64 (type, mode);\n+      else\n+\treturn return_in_memory_64 (type, mode);\n+    }\n   else\n     return return_in_memory_32 (type, mode);\n #endif"}]}