{"sha": "2d56744e3bfcf3cc27f4100b1903b2443d858f13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ1Njc0NGUzYmZjZjNjYzI3ZjQxMDBiMTkwM2IyNDQzZDg1OGYxMw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-08-12T09:00:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-12T09:00:39Z"}, "message": "[Ada] Minor cleanups in exception handling\n\nNo change in behavior, so no test.\n\n2019-08-12  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-except.ads: Update obsolete comment, still making\n\tclear that this is a variant.  Add explicit default for Id\n\tcomponent of Exception_Occurrence, because that value is used.\n\tDefine Null_Occurrence less redundantly.\n\t* libgnat/a-einuoc.adb: Minor simplification of code.\n\nFrom-SVN: r274296", "tree": {"sha": "4d3be3bc13d8b6cfa85f42fbfb85eedb8cd23123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d3be3bc13d8b6cfa85f42fbfb85eedb8cd23123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d56744e3bfcf3cc27f4100b1903b2443d858f13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d56744e3bfcf3cc27f4100b1903b2443d858f13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d56744e3bfcf3cc27f4100b1903b2443d858f13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d56744e3bfcf3cc27f4100b1903b2443d858f13/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5076fb182e2f99b46dca619f7be8e6e158bc902f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5076fb182e2f99b46dca619f7be8e6e158bc902f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5076fb182e2f99b46dca619f7be8e6e158bc902f"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "351cc49015272a11e7b1307ea7299bf29c427ffc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d56744e3bfcf3cc27f4100b1903b2443d858f13/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d56744e3bfcf3cc27f4100b1903b2443d858f13/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d56744e3bfcf3cc27f4100b1903b2443d858f13", "patch": "@@ -1,3 +1,11 @@\n+2019-08-12  Bob Duff  <duff@adacore.com>\n+\n+\t* libgnat/a-except.ads: Update obsolete comment, still making\n+\tclear that this is a variant.  Add explicit default for Id\n+\tcomponent of Exception_Occurrence, because that value is used.\n+\tDefine Null_Occurrence less redundantly.\n+\t* libgnat/a-einuoc.adb: Minor simplification of code.\n+\n 2019-08-12  Justin Squirek  <squirek@adacore.com>\n \n \t* libgnat/a-dhfina.adb, libgnat/a-dhfina.ads (Is_Simple_Name,"}, {"sha": "77d6b8dd9557508bc2d77953306f88fc33b380bd", "filename": "gcc/ada/libgnat/a-einuoc.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d56744e3bfcf3cc27f4100b1903b2443d858f13/gcc%2Fada%2Flibgnat%2Fa-einuoc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d56744e3bfcf3cc27f4100b1903b2443d858f13/gcc%2Fada%2Flibgnat%2Fa-einuoc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-einuoc.adb?ref=2d56744e3bfcf3cc27f4100b1903b2443d858f13", "patch": "@@ -40,9 +40,5 @@ begin\n    --  The null exception is uniquely identified by the fact that the Id value\n    --  is null. No other exception occurrence can have a null Id.\n \n-   if X.Id = Null_Id then\n-      return True;\n-   else\n-      return False;\n-   end if;\n+   return X.Id = Null_Id;\n end Ada.Exceptions.Is_Null_Occurrence;"}, {"sha": "4f70769a9b942b1910264a68ade3ed7428f416b1", "filename": "gcc/ada/libgnat/a-except.ads", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d56744e3bfcf3cc27f4100b1903b2443d858f13/gcc%2Fada%2Flibgnat%2Fa-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d56744e3bfcf3cc27f4100b1903b2443d858f13/gcc%2Fada%2Flibgnat%2Fa-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-except.ads?ref=2d56744e3bfcf3cc27f4100b1903b2443d858f13", "patch": "@@ -33,14 +33,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This version of Ada.Exceptions fully supports Ada 95 and later language\n---  versions.  It is used in all situations except for the build of the\n---  compiler and other basic tools. For these latter builds, we use an\n---  Ada 95-only version.\n-\n---  The reason for this splitting off of a separate version is to support\n---  older bootstrap compilers that do not support Ada 2005 features, and\n---  Ada.Exceptions is part of the compiler sources.\n+--  This is the default version of this package. We also have cert and zfp\n+--  versions.\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we get\n@@ -284,7 +278,7 @@ private\n    --  Traceback array stored in exception occurrence\n \n    type Exception_Occurrence is record\n-      Id : Exception_Id;\n+      Id : Exception_Id := Null_Id;\n       --  Exception_Identity for this exception occurrence\n \n       Machine_Occurrence : System.Address;\n@@ -336,14 +330,6 @@ private\n    pragma Stream_Convert (Exception_Occurrence, String_To_EO, EO_To_String);\n    --  Functions for implementing Exception_Occurrence stream attributes\n \n-   Null_Occurrence : constant Exception_Occurrence := (\n-     Id                 => null,\n-     Machine_Occurrence => System.Null_Address,\n-     Msg_Length         => 0,\n-     Msg                => (others => ' '),\n-     Exception_Raised   => False,\n-     Pid                => 0,\n-     Num_Tracebacks     => 0,\n-     Tracebacks         => (others => TBE.Null_TB_Entry));\n+   Null_Occurrence : constant Exception_Occurrence := (others => <>);\n \n end Ada.Exceptions;"}]}