{"sha": "f067961248ea104024f8b313ae39b3b95af1f8b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2Nzk2MTI0OGVhMTA0MDI0ZjhiMzEzYWUzOWIzYjk1YWYxZjhiNQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2011-04-19T20:37:11Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2011-04-19T20:37:11Z"}, "message": "m32c.c (m32c_emit_epilogue): Don't try to push registers if we already know there aren't any.\n\n* config/m32c/m32c.c (m32c_emit_epilogue): Don't try to push\nregisters if we already know there aren't any.\n(m32c_emit_epilogue): Don't emit a barrier here.\n(m32c_emit_eh_epilogue): Likewise.\n* config/m32c/blkmov.md (movstr): Don't fail on wrong-type\noperands at expand time.\n* config/m32c/m32c.h (WCHAR_TYPE_SIZE): Change to 4 to match \"long\nint\" wchar type.\n(REG_CLASS_CONTENTS, reg_class, REG_CLASS_NAMES): Remove\nduplicates.  Provide aliases instead.\n* config/m32c/prologue.md (eh_return): Emit a barrier here.\n(eh_epilogue): Add a \"(return)\" here as a hint to other parts of\nthe compiler.\n\nFrom-SVN: r172735", "tree": {"sha": "97515e749f5b4fd7edaa9e6f32c6622c08a7a6fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97515e749f5b4fd7edaa9e6f32c6622c08a7a6fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f067961248ea104024f8b313ae39b3b95af1f8b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f067961248ea104024f8b313ae39b3b95af1f8b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f067961248ea104024f8b313ae39b3b95af1f8b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f067961248ea104024f8b313ae39b3b95af1f8b5/comments", "author": null, "committer": null, "parents": [{"sha": "32257ddc4e61bfc4f43dff011313744fecc3fbe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32257ddc4e61bfc4f43dff011313744fecc3fbe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32257ddc4e61bfc4f43dff011313744fecc3fbe1"}], "stats": {"total": 59, "additions": 36, "deletions": 23}, "files": [{"sha": "660f6f1f1e51d502249173e8b4b59ec6bef54085", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f067961248ea104024f8b313ae39b3b95af1f8b5", "patch": "@@ -1,3 +1,19 @@\n+2011-04-19  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/m32c/m32c.c (m32c_emit_epilogue): Don't try to push\n+\tregisters if we already know there aren't any.\n+\t(m32c_emit_epilogue): Don't emit a barrier here.\n+\t(m32c_emit_eh_epilogue): Likewise.\n+\t* config/m32c/blkmov.md (movstr): Don't fail on wrong-type\n+\toperands at expand time.\n+\t* config/m32c/m32c.h (WCHAR_TYPE_SIZE): Change to 4 to match \"long\n+\tint\" wchar type.\n+\t(REG_CLASS_CONTENTS, reg_class, REG_CLASS_NAMES): Remove\n+\tduplicates.  Provide aliases instead.\n+\t* config/m32c/prologue.md (eh_return): Emit a barrier here.\n+\t(eh_epilogue): Add a \"(return)\" here as a hint to other parts of\n+\tthe compiler.\n+\n 2011-04-19  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/sparc/sparc.h (GENERAL_OR_I64, REGISTER_MOVE_COST): Remove."}, {"sha": "a5345ceef082838d2d6662ab8a8285ad887fa897", "filename": "gcc/config/m32c/blkmov.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fblkmov.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fblkmov.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fblkmov.md?ref=f067961248ea104024f8b313ae39b3b95af1f8b5", "patch": "@@ -215,8 +215,8 @@\n \n (define_expand \"movstr\"\n   [(match_operand 0 \"m32c_nonimmediate_operand\" \"\")\n-   (match_operand 1 \"ap_operand\" \"\")\n-   (match_operand 2 \"ap_operand\" \"\")\n+   (match_operand 1 \"\" \"\")\n+   (match_operand 2 \"\" \"\")\n    ]\n   \"TARGET_A24\"\n   \"if (m32c_expand_movstr(operands)) DONE; FAIL;\""}, {"sha": "c603770ad60f56b426d657ae73502e7fcd6fbabd", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=f067961248ea104024f8b313ae39b3b95af1f8b5", "patch": "@@ -4485,11 +4485,14 @@ m32c_emit_prologue (void)\n void\n m32c_emit_epilogue (void)\n {\n+  int popm_count = m32c_pushm_popm (PP_justcount);\n+\n   /* This just emits a comment into the .s file for debugging.  */\n-  if (m32c_pushm_popm (PP_justcount) > 0 || cfun->machine->is_interrupt)\n+  if (popm_count > 0 || cfun->machine->is_interrupt)\n     emit_insn (gen_epilogue_start ());\n \n-  m32c_pushm_popm (PP_popm);\n+  if (popm_count > 0)\n+    m32c_pushm_popm (PP_popm);\n \n   if (cfun->machine->is_interrupt)\n     {\n@@ -4546,7 +4549,6 @@ m32c_emit_epilogue (void)\n     emit_jump_insn (gen_epilogue_exitd_16 ());\n   else\n     emit_jump_insn (gen_epilogue_exitd_24 ());\n-  emit_barrier ();\n }\n \n void\n@@ -4558,7 +4560,6 @@ m32c_emit_eh_epilogue (rtx ret_addr)\n      assembler, so punt to libgcc.  */\n   emit_jump_insn (gen_eh_epilogue (ret_addr, cfun->machine->eh_stack_adjust));\n   /*  emit_clobber (gen_rtx_REG (HImode, R0L_REGNO)); */\n-  emit_barrier ();\n }\n \n /* Indicate which flags must be properly set for a given conditional.  */"}, {"sha": "6016ee56a13415a97b1c359529fd7be245b75df3", "filename": "gcc/config/m32c/m32c.h", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fm32c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fm32c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.h?ref=f067961248ea104024f8b313ae39b3b95af1f8b5", "patch": "@@ -201,7 +201,7 @@ machine_function;\n #define WCHAR_TYPE \"long int\"\n \n #undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE BITS_PER_WORD\n+#define WCHAR_TYPE_SIZE 32\n \n /* REGISTER USAGE */\n \n@@ -288,19 +288,15 @@ machine_function;\n   { 0x00000003 }, /* R02 - r0r2 */\\\n   { 0x0000000c }, /* R13 - r1r3 */\\\n   { 0x00000005 }, /* HL  - r0 r1 */\\\n-  { 0x00000005 }, /* QI  - r0 r1 */\\\n   { 0x0000000a }, /* R23 - r2 r3 */\\\n   { 0x0000000f }, /* R03 - r0r2 r1r3 */\\\n-  { 0x0000000f }, /* DI  - r0r2r1r3 + mems */\\\n   { 0x00000010 }, /* A0  - a0 */\\\n   { 0x00000020 }, /* A1  - a1 */\\\n   { 0x00000030 }, /* A   - a0 a1 */\\\n   { 0x000000f0 }, /* AD  - a0 a1 sb fp */\\\n   { 0x000001f0 }, /* PS  - a0 a1 sb fp sp */\\\n-  { 0x0000000f }, /* SI  - r0r2 r1r3 a0a1 */\\\n-  { 0x0000003f }, /* HI  - r0 r1 r2 r3 a0 a1 */\\\n   { 0x00000033 }, /* R02A  - r0r2 a0 a1 */ \\\n-  { 0x0000003f }, /* RA  - r0..r3 a0 a1 */\\\n+  { 0x0000003f }, /* RA  - r0 r1 r2 r3 a0 a1 */\\\n   { 0x0000007f }, /* GENERAL */\\\n   { 0x00000400 }, /* FLG */\\\n   { 0x000001ff }, /* HC  - r0l r1 r2 r3 a0 a1 sb fb sp */\\\n@@ -311,9 +307,14 @@ machine_function;\n   { 0x000ff00f }, /* R03_MEM */\\\n   { 0x000ff03f }, /* A_HI_MEM */\\\n   { 0x000ff0ff }, /* A_AD_CR_MEM_SI */\\\n-  { 0x000ff1ff }, /* ALL */\\\n+  { 0x000ff5ff }, /* ALL */\\\n }\n \n+#define QI_REGS HL_REGS\n+#define HI_REGS RA_REGS\n+#define SI_REGS R03_REGS\n+#define DI_REGS R03_REGS\n+\n enum reg_class\n {\n   NO_REGS,\n@@ -328,17 +329,13 @@ enum reg_class\n   R02_REGS,\n   R13_REGS,\n   HL_REGS,\n-  QI_REGS,\n   R23_REGS,\n   R03_REGS,\n-  DI_REGS,\n   A0_REGS,\n   A1_REGS,\n   A_REGS,\n   AD_REGS,\n   PS_REGS,\n-  SI_REGS,\n-  HI_REGS,\n   R02A_REGS,\n   RA_REGS,\n   GENERAL_REGS,\n@@ -370,17 +367,13 @@ enum reg_class\n \"R02_REGS\", \\\n \"R13_REGS\", \\\n \"HL_REGS\", \\\n-\"QI_REGS\", \\\n \"R23_REGS\", \\\n \"R03_REGS\", \\\n-\"DI_REGS\", \\\n \"A0_REGS\", \\\n \"A1_REGS\", \\\n \"A_REGS\", \\\n \"AD_REGS\", \\\n \"PS_REGS\", \\\n-\"SI_REGS\", \\\n-\"HI_REGS\", \\\n \"R02A_REGS\", \\\n \"RA_REGS\", \\\n \"GENERAL_REGS\", \\"}, {"sha": "f4e62db1d7548af331b2cb31c97308ea36d0adc7", "filename": "gcc/config/m32c/prologue.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fprologue.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f067961248ea104024f8b313ae39b3b95af1f8b5/gcc%2Fconfig%2Fm32c%2Fprologue.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fprologue.md?ref=f067961248ea104024f8b313ae39b3b95af1f8b5", "patch": "@@ -88,14 +88,17 @@\n (define_expand \"eh_return\"\n   [(match_operand:PSI 0 \"\" \"\")]\n   \"\"\n-  \"m32c_emit_eh_epilogue(operands[0]); DONE;\"\n+  \"m32c_emit_eh_epilogue(operands[0]);\n+   emit_barrier ();\n+   DONE;\"\n   )\n \n (define_insn \"eh_epilogue\"\n   [(set (pc)\n \t(unspec_volatile [(match_operand 0 \"m32c_r1_operand\" \"\")\n \t\t\t  (match_operand 1 \"m32c_r0_operand\" \"\")\n-\t\t\t  ] UNS_EH_EPILOGUE))]\n+\t\t\t  ] UNS_EH_EPILOGUE))\n+   (return)]\n   \"\"\n   \"jmp.a\\t__m32c_eh_return\"\n   [(set_attr \"flags\" \"x\")]"}]}