{"sha": "4d5ad877f554771f17d78db7b3c5245620b380c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ1YWQ4NzdmNTU0NzcxZjE3ZDc4ZGI3YjNjNTI0NTYyMGIzODBjNQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-16T19:49:56Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-16T19:49:56Z"}, "message": "h8300.md: Replace spaces with tabs.\n\n\t* config/h8300/h8300.md: Replace spaces with tabs.\n\t* config/h8300/t-h8300: Remove a trailing empty line.\n\nFrom-SVN: r59177", "tree": {"sha": "2ab257c324408c8d01e22e97d838aeb39914445c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ab257c324408c8d01e22e97d838aeb39914445c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d5ad877f554771f17d78db7b3c5245620b380c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d5ad877f554771f17d78db7b3c5245620b380c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d5ad877f554771f17d78db7b3c5245620b380c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d5ad877f554771f17d78db7b3c5245620b380c5/comments", "author": null, "committer": null, "parents": [{"sha": "17fa74a256b428f9e9f151f33469a15b11015a56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fa74a256b428f9e9f151f33469a15b11015a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fa74a256b428f9e9f151f33469a15b11015a56"}], "stats": {"total": 58, "additions": 31, "deletions": 27}, "files": [{"sha": "ca91f5cdace94dcbb41fe67cf01c7fc50338c139", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d5ad877f554771f17d78db7b3c5245620b380c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d5ad877f554771f17d78db7b3c5245620b380c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d5ad877f554771f17d78db7b3c5245620b380c5", "patch": "@@ -1,3 +1,8 @@\n+2002-11-16  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md: Replace spaces with tabs.\n+\t* config/h8300/t-h8300: Remove a trailing empty line.\n+\n 2002-11-16  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tlink.c: Fix formatting."}, {"sha": "4fb184b0fda5493c7a1238f80f4d5df515d056fc", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d5ad877f554771f17d78db7b3c5245620b380c5/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d5ad877f554771f17d78db7b3c5245620b380c5/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=4d5ad877f554771f17d78db7b3c5245620b380c5", "patch": "@@ -90,7 +90,7 @@\n \n (define_attr \"adjust_length\" \"yes,no\"\n   (cond [(eq_attr \"type\" \"branch\") (const_string \"no\")]\n-        (const_string \"yes\")))\n+\t(const_string \"yes\")))\n \n ;; Condition code settings.\n ;;\n@@ -114,19 +114,19 @@\n \n (define_insn \"pushqi1_h8300\"\n   [(parallel [(set (reg:HI SP_REG)\n-                   (plus:HI (reg:HI SP_REG) (const_int -2)))\n-              (set (mem:QI (plus:HI (reg:HI SP_REG) (const_int -1)))\n-                   (match_operand:QI 0 \"register_operand\" \"r\"))])]\n+\t\t   (plus:HI (reg:HI SP_REG) (const_int -2)))\n+\t      (set (mem:QI (plus:HI (reg:HI SP_REG) (const_int -1)))\n+\t\t   (match_operand:QI 0 \"register_operand\" \"r\"))])]\n   \"TARGET_H8300\"\n   \"mov.w\\\\t%T0,@-r7\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"clobber\")])\n \n (define_insn \"pushqi1_h8300hs\"\n   [(parallel [(set (reg:SI SP_REG)\n-                   (plus:SI (reg:SI SP_REG) (const_int -4)))\n-              (set (mem:QI (plus:SI (reg:SI SP_REG) (const_int -3)))\n-                   (match_operand:QI 0 \"register_operand\" \"r\"))])]\n+\t\t   (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t      (set (mem:QI (plus:SI (reg:SI SP_REG) (const_int -3)))\n+\t\t   (match_operand:QI 0 \"register_operand\" \"r\"))])]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"mov.l\\\\t%S0,@-er7\"\n   [(set_attr \"length\" \"4\")\n@@ -208,15 +208,15 @@\n \n (define_expand \"pushhi1_h8300\"\n   [(set (mem:HI (pre_dec:HI (reg:HI SP_REG)))\n-        (match_operand:HI 0 \"register_operand\" \"\"))]\n+\t(match_operand:HI 0 \"register_operand\" \"\"))]\n   \"TARGET_H8300\"\n   \"\")\n \n (define_insn \"pushhi1_h8300hs\"\n   [(parallel [(set (reg:SI SP_REG)\n-                   (plus:SI (reg:SI SP_REG) (const_int -4)))\n-              (set (mem:HI (plus:SI (reg:SI SP_REG) (const_int -2)))\n-                   (match_operand:HI 0 \"register_operand\" \"r\"))])]\n+\t\t   (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t      (set (mem:HI (plus:SI (reg:SI SP_REG) (const_int -2)))\n+\t\t   (match_operand:HI 0 \"register_operand\" \"r\"))])]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"mov.l\\\\t%S0,@-er7\"\n   [(set_attr \"length\" \"4\")\n@@ -510,7 +510,7 @@\n \t    }\n \n \t  /* Look for constants that can be obtained by subs, inc, and\n-             dec to 0.  */\n+\t     dec to 0.  */\n \t  switch (val & 0xffffffff)\n \t    {\n \t    case 0xffffffff:\n@@ -1491,9 +1491,9 @@\n {\n   if ((cc_status.flags & CC_OVERFLOW_UNUSABLE) != 0\n       && (GET_CODE (operands[1]) == GT\n-          || GET_CODE (operands[1]) == GE\n-          || GET_CODE (operands[1]) == LE\n-          || GET_CODE (operands[1]) == LT))\n+\t  || GET_CODE (operands[1]) == GE\n+\t  || GET_CODE (operands[1]) == LE\n+\t  || GET_CODE (operands[1]) == LT))\n     {\n       cc_status.flags &= ~CC_OVERFLOW_UNUSABLE;\n       return 0;\n@@ -1520,9 +1520,9 @@\n {\n   if ((cc_status.flags & CC_OVERFLOW_UNUSABLE) != 0\n       && (GET_CODE (operands[1]) == GT\n-          || GET_CODE (operands[1]) == GE\n-          || GET_CODE (operands[1]) == LE\n-          || GET_CODE (operands[1]) == LT))\n+\t  || GET_CODE (operands[1]) == GE\n+\t  || GET_CODE (operands[1]) == LE\n+\t  || GET_CODE (operands[1]) == LT))\n     {\n       cc_status.flags &= ~CC_OVERFLOW_UNUSABLE;\n       return 0;\n@@ -2138,7 +2138,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-        (ior:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\"))\n+\t(ior:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:HI 2 \"register_operand\" \"0\")))]\n   \"REG_P (operands[0])\n    && REG_P (operands[1])\n@@ -2149,7 +2149,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (ior:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\"))\n+\t(ior:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n    && REG_P (operands[0])\n@@ -2161,7 +2161,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (ior:SI (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\"))\n+\t(ior:SI (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n   \"REG_P (operands[0])\n    && REG_P (operands[1])\n@@ -2172,7 +2172,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-        (xor:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\"))\n+\t(xor:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:HI 2 \"register_operand\" \"0\")))]\n   \"REG_P (operands[0])\n    && REG_P (operands[1])\n@@ -2183,7 +2183,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (xor:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\"))\n+\t(xor:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n    && REG_P (operands[0])\n@@ -2195,7 +2195,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (xor:SI (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\"))\n+\t(xor:SI (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n   \"REG_P (operands[0])\n    && REG_P (operands[1])\n@@ -2206,7 +2206,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-        (ior:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"0\"))\n+\t(ior:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"0\"))\n \t\t(ashift:HI (match_operand:HI 2 \"register_operand\" \"r\")\n \t\t\t   (const_int 8))))]\n   \"REG_P (operands[0])\n@@ -2218,7 +2218,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (ior:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"0\"))\n+\t(ior:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"0\"))\n \t\t(ashift:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t   (const_int 16))))]\n   \"(TARGET_H8300H || TARGET_H8300S)"}, {"sha": "ad7a657489603696b144f8f2c3867c2cc339fe9c", "filename": "gcc/config/h8300/t-h8300", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d5ad877f554771f17d78db7b3c5245620b380c5/gcc%2Fconfig%2Fh8300%2Ft-h8300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d5ad877f554771f17d78db7b3c5245620b380c5/gcc%2Fconfig%2Fh8300%2Ft-h8300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ft-h8300?ref=4d5ad877f554771f17d78db7b3c5245620b380c5", "patch": "@@ -31,4 +31,3 @@ MULTILIB_EXCEPTIONS = mint32\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n-"}]}