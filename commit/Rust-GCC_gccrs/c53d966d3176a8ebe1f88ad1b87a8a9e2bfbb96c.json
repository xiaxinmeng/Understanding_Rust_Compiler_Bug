{"sha": "c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUzZDk2NmQzMTc2YThlYmUxZjg4YWQxYjg3YThhOWUyYmZiYjk2Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-01T21:18:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-01T21:18:11Z"}, "message": "re PR c++/56793 (ICE with scoped enum)\n\n\tPR c++/56793\n\t* typeck.c (finish_class_member_access_expr): Handle enum scope.\n\nFrom-SVN: r197325", "tree": {"sha": "11c4c8565782dcbbb91083272e0874bddfb21e57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11c4c8565782dcbbb91083272e0874bddfb21e57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "570e2ca01e8a80aadd18eb0b85c982077e76aef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570e2ca01e8a80aadd18eb0b85c982077e76aef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570e2ca01e8a80aadd18eb0b85c982077e76aef4"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "7e58f704747fd28a6b41684dcbcb6e7d036efa24", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "patch": "@@ -1,5 +1,8 @@\n 2013-04-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56793\n+\t* typeck.c (finish_class_member_access_expr): Handle enum scope.\n+\n \tPR c++/56794\n \t* parser.c (cp_parser_range_for): Don't try to do auto deduction\n \tin a template if the type of the range is incomplete."}, {"sha": "043d52ffaa713491957cecd7d3d61c2fd3304bb3", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "patch": "@@ -2684,6 +2684,23 @@ finish_class_member_access_expr (tree object, tree name, bool template_p,\n \t      return error_mark_node;\n \t    }\n \n+\t  if (TREE_CODE (scope) == ENUMERAL_TYPE)\n+\t    {\n+\t      /* Looking up a member enumerator (c++/56793).  */\n+\t      if (!TYPE_CLASS_SCOPE_P (scope)\n+\t\t  || !DERIVED_FROM_P (TYPE_CONTEXT (scope), object_type))\n+\t\t{\n+\t\t  if (complain & tf_error)\n+\t\t    error (\"%<%D::%D%> is not a member of %qT\",\n+\t\t\t   scope, name, object_type);\n+\t\t  return error_mark_node;\n+\t\t}\n+\t      tree val = lookup_enumerator (scope, name);\n+\t      if (TREE_SIDE_EFFECTS (object))\n+\t\tval = build2 (COMPOUND_EXPR, TREE_TYPE (val), object, val);\n+\t      return val;\n+\t    }\n+\n \t  gcc_assert (CLASS_TYPE_P (scope));\n \t  gcc_assert (identifier_p (name) || TREE_CODE (name) == BIT_NOT_EXPR);\n "}, {"sha": "cb2cf8f5363b15bf528f981c6ce33eb1cf7c9dfb", "filename": "gcc/testsuite/g++.dg/cpp0x/enum25.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum25.C?ref=c53d966d3176a8ebe1f88ad1b87a8a9e2bfbb96c", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/56793\n+// { dg-require-effective-target c++11 }\n+\n+struct A\n+{\n+  enum struct B {X, Y} b;\n+} a;\n+\n+enum struct D {X,Y};\n+struct C { } c;\n+\n+int main ()\n+{\n+  if (a.b == a.B::Y)\n+    a.b = A::B::X;\n+\n+  c.D::Y;\t\t\t// { dg-error \"not a member\" }\n+}"}]}