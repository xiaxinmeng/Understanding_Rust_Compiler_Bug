{"sha": "55380b08d86adce0c8bf8c3415d02fcc81626e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUzODBiMDhkODZhZGNlMGM4YmY4YzM0MTVkMDJmY2M4MTYyNmU5Mg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-07-01T21:01:48Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-07-01T21:01:48Z"}, "message": "Reorganize, remove now-redundant tests.\n\nFrom-SVN: r55154", "tree": {"sha": "95975bb92672ca91e64759d8e8572d32471845f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95975bb92672ca91e64759d8e8572d32471845f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55380b08d86adce0c8bf8c3415d02fcc81626e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55380b08d86adce0c8bf8c3415d02fcc81626e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55380b08d86adce0c8bf8c3415d02fcc81626e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55380b08d86adce0c8bf8c3415d02fcc81626e92/comments", "author": null, "committer": null, "parents": [{"sha": "6bfa5aac87329dfa40b16181408237e9d0df764e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfa5aac87329dfa40b16181408237e9d0df764e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfa5aac87329dfa40b16181408237e9d0df764e"}], "stats": {"total": 969, "additions": 483, "deletions": 486}, "files": [{"sha": "7b80078c60d84f907d41a335b323b6a640de6455", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55380b08d86adce0c8bf8c3415d02fcc81626e92/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55380b08d86adce0c8bf8c3415d02fcc81626e92/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=55380b08d86adce0c8bf8c3415d02fcc81626e92", "patch": "@@ -1,3 +1,7 @@\n+2002-07-01  Nathanael Nerode <neroden@gcc.gnu.org>\n+\n+\t* configure.in: Eliminate redundant tests.  Reorganize.\n+\n 2002-07-01  Nathanael Nerode <neroden@gcc.gnu.org>\n \n \t* Makefile.in: Eliminate last reference to LIBGCC1_TEST."}, {"sha": "dc85de5c7b929e8d3c97fd26b272aebb4ff4fde9", "filename": "configure.in", "status": "modified", "additions": 479, "deletions": 486, "changes": 965, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55380b08d86adce0c8bf8c3415d02fcc81626e92/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55380b08d86adce0c8bf8c3415d02fcc81626e92/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=55380b08d86adce0c8bf8c3415d02fcc81626e92", "patch": "@@ -127,315 +127,6 @@ else\n   is_cross_compiler=yes\n fi\t\n \n-# Work in distributions that contain no compiler tools, like Autoconf.\n-tentative_cc=\"\"\n-if test -d ${srcdir}/config ; then\n-case \"${host}\" in\n-  m68k-hp-hpux*)\n-    # Avoid \"too much defining\" errors from HPUX compiler.\n-    tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"config/mh-hp300\"\n-    ;;\n-  m68k-apollo-sysv*)\n-    tentative_cc=\"cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DUSG\"\n-    host_makefile_frag=\"config/mh-apollo68\"\n-    ;;\n-  m68k-apollo-bsd*)\n-    #None of the Apollo compilers can compile gas or binutils.  The preprocessor\n-    # chokes on bfd, the compiler won't let you assign integers to enums, and\n-    # other problems.  Defining CC to gcc is a questionable way to say \"don't use\n-    # the apollo compiler\" (the preferred version of GCC could be called cc,\n-    # or whatever), but I'm not sure leaving CC as cc is any better...\n-    #CC=cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DNO_STDARG\n-    tentative_cc=gcc\n-    host_makefile_frag=\"config/mh-a68bsd\"\n-    ;;\n-  m88k-dg-dgux*)\n-    tentative_cc=\"gcc -Wall -ansi -D__using_DGUX\"\n-    host_makefile_frag=\"config/mh-dgux\"\n-    ;;\n-  m88k-harris-cxux*)\n-    # Under CX/UX, we want to tell the compiler to use ANSI mode.\n-    tentative_cc=\"cc -Xa\"\n-    host_makefile_frag=\"config/mh-cxux\"\n-    ;;\n-  m88k-motorola-sysv*)\n-    host_makefile_frag=\"config/mh-delta88\"\n-    ;;\n-  mips*-dec-ultrix*)\n-    tentative_cc=\"cc -Wf,-XNg1000\"\n-    host_makefile_frag=\"config/mh-decstation\"\n-    ;;\n-  mips*-nec-sysv4*)\n-    # The C compiler on NEC MIPS SVR4 needs bigger tables.\n-    tentative_cc=\"cc -ZXNd=5000 -ZXNg=1000\"\n-    host_makefile_frag=\"config/mh-necv4\"\n-    ;;\n-  mips*-sgi-irix6*)\n-    host_makefile_frag=\"config/mh-irix6\"\n-    ;;\n-  mips*-sgi-irix5*)\n-    host_makefile_frag=\"config/mh-irix5\"\n-    ;;\n-  mips*-sgi-irix4*)\n-    # Tell compiler to use K&R C.  We can't compile under the SGI Ansi\n-    # environment.  Also bump switch table size so that cp-parse will\n-    # compile.  Bump string length limit so linker builds.\n-    tentative_cc=\"cc -cckr -Wf,-XNg1500 -Wf,-XNk1000 -Wf,-XNh2000 -Wf,-XNl8192\"\n-    ;;\n-  mips*-sgi-irix3*)\n-    host_makefile_frag=\"config/mh-sysv\"\n-    ;;\n-  mips*-*-sysv4*)\n-    host_makefile_frag=\"config/mh-sysv4\"\n-    ;;\n-  mips*-*-sysv*)\n-    # This is for a MIPS running RISC/os 4.52C.\n-\n-    # This is needed for GDB, but needs to be in the top-level make because\n-    # if a library is compiled with the bsd headers and gets linked with the\n-    # sysv system libraries all hell can break loose (e.g. a jmp_buf might be\n-    # a different size).\n-    # ptrace(2) apparently has problems in the BSD environment.  No workaround is\n-    # known except to select the sysv environment.  Could we use /proc instead?\n-    # These \"sysv environments\" and \"bsd environments\" often end up being a pain.\n-    #\n-    # This is not part of CFLAGS because perhaps not all C compilers have this\n-    # option.\n-    tentative_cc=\"cc -systype sysv\"\n-    host_makefile_frag=\"config/mh-riscos\"\n-    ;;\n-  i370-ibm-opened*)\n-    tentative_cc=\"c89\"\n-    host_makefile_frag=\"config/mh-openedition\"\n-    ;;\n-  i[3456]86-*-sysv5*)\n-    host_makefile_frag=\"config/mh-sysv5\"\n-    ;;\n-  i[3456]86-*-dgux*)\n-    tentative_cc=\"gcc -Wall -ansi -D__using_DGUX\"\n-    host_makefile_frag=\"config/mh-dgux386\"\n-    ;;\n-  i[3456]86-ncr-sysv4.3*)\n-    # The MetaWare compiler will generate a copyright message unless you\n-    # turn it off by adding the -Hnocopyr flag.\n-    tentative_cc=\"cc -Hnocopyr\"\n-    host_makefile_frag=\"config/mh-ncrsvr43\"\n-    ;;\n-  i[3456]86-ncr-sysv4*)\n-    # for an NCR 3000 (i486/SVR4) system.\n-    # The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.\n-    # This compiler not only emits obnoxious copyright messages every time\n-    # you run it, but it chokes and dies on a whole bunch of GNU source\n-    # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.\n-    tentative_cc=\"/usr/ccs/ATT/cc\"\n-    host_makefile_frag=\"config/mh-ncr3000\"\n-    ;;\n-  i[3456]86-*-sco3.2v5*)\n-    host_makefile_frag=\"config/mh-sysv\"\n-    ;;\n-  i[3456]86-*-sco*)\n-    # The native C compiler botches some simple uses of const.  Unfortunately,\n-    # it doesn't defined anything like \"__sco__\" for us to test for in ansidecl.h.\n-    tentative_cc=\"cc -Dconst=\"\n-    host_makefile_frag=\"config/mh-sco\"\n-    ;;\n-  i[3456]86-*-udk*)\n-    host_makefile_frag=\"config/mh-sysv5\"\n-    ;;\n-  i[3456]86-*-isc*)\n-    host_makefile_frag=\"config/mh-sysv\"\n-    ;;\n-  i[3456]86-*-solaris2*)\n-    host_makefile_frag=\"config/mh-sysv4\"\n-    ;;\n-  i[3456]86-*-aix*)\n-    host_makefile_frag=\"config/mh-aix386\"\n-    ;;\n-  i[3456]86-*-msdosdjgpp*)\n-    host_makefile_frag=\"config/mh-djgpp\"\n-    ;;\n-  *-cygwin*)\n-    host_makefile_frag=\"config/mh-cygwin\"\n-    ;;\n-  *-mingw32*)\n-    host_makefile_frag=\"config/mh-mingw32\"\n-    ;;\n-  *-interix*)\n-    host_makefile_frag=\"config/mh-interix\"\n-    ;;\n-  vax-*-ultrix2*)\n-    # The old BSD pcc isn't up to compiling parts of gdb so use gcc\n-    tentative_cc=gcc\n-    ;;\n-  *-*-solaris2*)\n-    host_makefile_frag=\"config/mh-solaris\"\n-    ;;\n-  m68k-sun-sunos*)\n-    # Sun's C compiler needs the -J flag to be able to compile cp-parse.c\n-    # without overflowing the jump tables (-J says to use a 32 bit table)\n-    tentative_cc=\"cc -J\"\n-    ;;\n-  *-hp-hpux[78]*)\n-    tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"config/mh-hpux8\"\n-    ;;\n-  *-hp-hpux*)\n-    tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"config/mh-hpux\"\n-    ;;\n-  *-*-hiux*)\n-    tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"config/mh-hpux\"\n-    ;;\n-  rs6000-*-lynxos*)\n-    # /bin/cc is less than useful for our purposes.  Always use GCC\n-    tentative_cc=\"/usr/cygnus/progressive/bin/gcc\"\n-    host_makefile_frag=\"config/mh-lynxrs6k\"\n-    ;;\n-  *-*-lynxos*)\n-    # /bin/cc is less than useful for our purposes.  Always use GCC\n-    tentative_cc=\"/bin/gcc\"\n-    ;;\n-  *-*-sysv4*)\n-    host_makefile_frag=\"config/mh-sysv4\"\n-    ;;\n-  *-*-sysv*)\n-    host_makefile_frag=\"config/mh-sysv\"\n-    ;;\n-esac\n-fi\n-\n-# If we aren't going to be using gcc, see if we can extract a definition\n-# of CC from the fragment.\n-# Actually, use the 'pre-extracted' version above.\n-if test -z \"${CC}\" && test \"${build}\" = \"${host}\" ; then\n-  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n-  found=\n-  for dir in $PATH; do\n-    test -z \"$dir\" && dir=.\n-    if test -f $dir/gcc; then\n-      found=yes\n-      break\n-    fi\n-  done\n-  IFS=\"$save_ifs\"\n-  if test -z \"${found}\" && test -n \"${tentative_cc}\" ; then\n-    CC=$tentative_cc\n-  fi\n-fi\n-\n-# We default to --with-shared on platforms where -fpic is meaningless.\n-# Well, we don't yet, but we will.\n-if false && test \"${host}\" = \"${target}\" && test x${enable_shared} = x ; then\n-  case \"${target}\" in\n-    alpha*-dec-osf*)\tenable_shared=yes ;;\n-    alpha*-*-linux*)\tenable_shared=yes ;;\n-    mips-sgi-irix5*)\tenable_shared=yes ;;\n-    *)\t\t\tenable_shared=no ;;\n-  esac\n-fi\n-\n-# hpux11 in 64bit mode has libraries in a weird place.  Arrange to find\n-# them automatically.\n-case \"${host}\" in\n-  hppa*64*-*-hpux11*)\t\n-    withoptions=\"$withoptions -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include\"\n-    ;;\n-esac\n-\n-case \"${enable_shared}\" in\n-  yes) shared=yes ;;\n-  no) shared=no ;;\n-  \"\") shared=no ;;\n-  *) shared=yes ;;\n-esac\n-\n-rm -f mh-frag\n-if test -n \"${host_makefile_frag}\" ; then\n-  for f in ${host_makefile_frag}\n-  do\n-    cat ${srcdir}/$f >> mh-frag\n-  done\n-  host_makefile_frag=mh-frag\n-fi\n-\n-case \"${target}\" in\n-  v810*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-v810\"\n-    ;;\n-  i[3456]86-*-netware*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-netware\"\n-    ;;\n-  powerpc-*-netware*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-netware\"\n-    ;;\n-  alpha*-*-linux*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-linux\"\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-alphaieee\"\n-    ;;\n-  alpha*-*-*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-alphaieee\"\n-    ;;\n-  *-*-linux*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-linux\"\n-    ;;\n-  *-*-aix4.[3456789]* | *-*-aix[56789].*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-aix43\"\n-    ;;\n-  mips*-*-pe | sh*-*-pe | *arm-wince-pe)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-wince\"\n-    ;;\n-esac\n-\n-# If --enable-target-optspace always use -Os instead of -O2 to build\n-# the target libraries, similarly if it is not specified, use -Os\n-# on selected platforms.\n-case \"${enable_target_optspace}:${target}\" in\n-  yes:*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-ospace\"\n-    ;;\n-  :d30v-*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-d30v\"\n-    ;;\n-  :m32r-* | :d10v-* | :fr30-*)\n-    target_makefile_frag=\"${target_makefile_frag} config/mt-ospace\"\n-    ;;\n-  no:* | :*)\n-    ;;\n-  *)\n-    echo \"*** bad value \\\"${enable_target_optspace}\\\" for --enable-target-optspace flag; ignored\" 1>&2\n-    ;;\n-esac\n-\n-skipdirs=\n-use_gnu_ld=\n-use_gnu_as=\n-\n-# some tools are so dependent upon X11 that if we're not building with X, \n-# it's not even worth trying to configure, much less build, that tool.\n-\n-case ${with_x} in\n-  yes | \"\")  # the default value for this tree is that X11 is available\n-\t;;\n-  no)\n-\tskipdirs=\"${skipdirs} tk libgui\"\n-\t;;\n-  *)\n-    \techo \"*** bad value \\\"${with_x}\\\" for -with-x flag; ignored\" 1>&2\n-    \t;;\n-esac\n-\n-# Some tools are only suitable for building in a \"native\" situation.\n-# Those are added when we have a host==target configuration.  For cross\n-# toolchains, we add some directories that should only be useful in a\n-# cross-compiler.\n-\n-case $is_cross_compiler in\n-  no) skipdirs=\"${skipdirs} ${cross_only}\" ;;\n-  yes) skipdirs=\"${skipdirs} ${native_only}\" ;;\n-esac\n-\n # We always want to use the same name for this directory, so that dejagnu\n # can reliably find it.\n target_subdir=${target_alias}\n@@ -460,70 +151,42 @@ if test x\"${build_alias}\" != x\"${host}\" ; then\n   fi\n fi\n \n-copy_dirs=\n+# Skipdirs are removed silently.\n+skipdirs=\n+# Noconfigdirs are removed loudly.\n+noconfigdirs=\"\"\n \n-# Handle --with-headers=XXX.  The contents of the named directory are\n-# copied to $(tooldir)/sys-include.\n-if test x\"${with_headers}\" != x ; then\n-  if test x${is_cross_compiler} = xno ; then\n-    echo 1>&2 '***' --with-headers is only supported when cross compiling\n-    exit 1\n-  fi\n-  case \"${exec_prefixoption}\" in\n-  \"\") x=${prefix} ;;\n-  *) x=${exec_prefix} ;;\n-  esac\n-  copy_dirs=\"${copy_dirs} ${with_headers} $x/${target_alias}/sys-include\"\n+use_gnu_ld=\n+# Make sure we don't let GNU ld be added if we didn't want it.\n+if test x$with_gnu_ld = xno ; then\n+  use_gnu_ld=no\n+  noconfigdirs=\"$noconfigdirs ld\"\n fi\n \n-# Handle --with-libs=XXX.  Multiple directories are permitted.  The\n-# contents are copied to $(tooldir)/lib.\n-if test x\"${with_libs}\" != x ; then\n-  if test x${is_cross_compiler} = xno ; then\n-    echo 1>&2 '***' --with-libs is only supported when cross compiling\n-    exit 1\n-  fi\n-  # Copy the libraries in reverse order, so that files in the first named\n-  # library override files in subsequent libraries.\n-  case \"${exec_prefixoption}\" in\n-  \"\") x=${prefix} ;;\n-  *) x=${exec_prefix} ;;\n-  esac\n-  for l in ${with_libs}; do\n-    copy_dirs=\"$l $x/${target_alias}/lib ${copy_dirs}\"\n-  done\n+use_gnu_as=\n+# Make sure we don't let GNU as be added if we didn't want it.\n+if test x$with_gnu_as = xno ; then\n+  use_gnu_as=no\n+  noconfigdirs=\"$noconfigdirs gas\"\n fi\n \n-# Handle ${copy_dirs}\n-set fnord ${copy_dirs}\n-shift\n-while test $# != 0 ; do\n-  if test -f $2/COPIED && test x\"`cat $2/COPIED`\" = x\"$1\" ; then\n-    :\n-  else\n-    echo Copying $1 to $2\n-\n-    # Use the install script to create the directory and all required\n-    # parent directories.\n-    if test -d $2 ; then\n-      :\n-    else\n-      echo >config.temp\n-      ${srcdir}/install-sh -c -m 644 config.temp $2/COPIED\n-    fi\n+# some tools are so dependent upon X11 that if we're not building with X, \n+# it's not even worth trying to configure, much less build, that tool.\n \n-    # Copy the directory, assuming we have tar.\n-    # FIXME: Should we use B in the second tar?  Not all systems support it.\n-    (cd $1; tar -cf - .) | (cd $2; tar -xpf -)\n+case ${with_x} in\n+  yes | \"\") ;; # the default value for this tree is that X11 is available\n+  no)  skipdirs=\"${skipdirs} tk libgui\" ;;\n+  *)  echo \"*** bad value \\\"${with_x}\\\" for -with-x flag; ignored\" 1>&2 ;;\n+esac\n \n-    # It is the responsibility of the user to correctly adjust all\n-    # symlinks.  If somebody can figure out how to handle them correctly\n-    # here, feel free to add the code.\n+# Some tools are only suitable for building in a \"native\" situation.\n+# Remove these if host!=target.  Similarly, some are only suitable\n+# for cross toolchains; remove if host=target.\n \n-    echo $1 > $2/COPIED\n-  fi\n-  shift; shift\n-done\n+case $is_cross_compiler in\n+  no) skipdirs=\"${skipdirs} ${cross_only}\" ;;\n+  yes) skipdirs=\"${skipdirs} ${native_only}\" ;;\n+esac\n \n # If both --with-headers and --with-libs are specified, default to\n # --without-newlib.\n@@ -539,35 +202,21 @@ case ${with_newlib} in\n   yes) skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'` ;;\n esac\n \n-# Default to using --with-stabs for certain targets.\n-if test x${with_stabs} = x ; then\n-  case \"${target}\" in\n-  mips*-*-irix6*)\n-    ;;\n-  mips*-*-* | alpha*-*-osf*)\n-    with_stabs=yes;\n-    withoptions=\"${withoptions} --with-stabs\"\n-    ;;\n-  esac\n-fi\n-\n # Configure extra directories which are host specific\n \n case \"${host}\" in\n-\ti[3456]86-*-go32*)\n-\t  configdirs=\"$configdirs dosrel\" ;;\n-\ti[3456]86-*-mingw32*)\n-\t  configdirs=\"$configdirs dosrel\" ;;\n-\t*-cygwin*)\n-\t  configdirs=\"$configdirs libtermcap dosrel\" ;;\n+  i[3456]86-*-go32*)\n+    configdirs=\"$configdirs dosrel\" ;;\n+  i[3456]86-*-mingw32*)\n+    configdirs=\"$configdirs dosrel\" ;;\n+  *-cygwin*)\n+    configdirs=\"$configdirs libtermcap dosrel\" ;;\n esac\n \n # Remove more programs from consideration, based on the host or \n # target this usually means that a port of the program doesn't\n # exist yet.\n \n-noconfigdirs=\"\"\n-\n case \"${host}\" in\n   hppa*64*-*-*)\n     noconfigdirs=\"$noconfigdirs byacc\"\n@@ -1039,19 +688,7 @@ esac\n case \"${noconfigdirs}\" in\n   *target-libgloss*) ;;\n   *target-newlib*) noconfigdirs=\"$noconfigdirs target-libgloss\" ;;\n-esac\n-\n-# Make sure we don't let GNU ld be added if we didn't want it.\n-if test x$with_gnu_ld = xno ; then\n-  use_gnu_ld=no\n-  noconfigdirs=\"$noconfigdirs ld\"\n-fi\n-\n-# Make sure we don't let GNU as be added if we didn't want it.\n-if test x$with_gnu_as = xno ; then\n-  use_gnu_as=no\n-  noconfigdirs=\"$noconfigdirs gas\"\n-fi\n+esac\n \n # Figure out what language subdirectories are present.\n # Look if the user specified --enable-languages=\"...\"; if not, use\n@@ -1188,72 +825,413 @@ if test -n \"${target_configdirs}\" ; then\n   fi\n fi\n \n-# Deconfigure all subdirectories, in case we are changing the\n-# configuration from one where a subdirectory is supported to one where it\n-# is not.\n-if test -z \"${norecursion}\" && test -n \"${configdirs}\" ; then\n-  for i in `echo ${configdirs} | sed -e s/target-//g` ; do\n-    rm -f $i/Makefile\n+# Deconfigure all subdirectories, in case we are changing the\n+# configuration from one where a subdirectory is supported to one where it\n+# is not.\n+if test -z \"${norecursion}\" && test -n \"${configdirs}\" ; then\n+  for i in `echo ${configdirs} | sed -e s/target-//g` ; do\n+    rm -f $i/Makefile\n+  done\n+fi\n+if test -z \"${norecursion}\" && test -n \"${target_configdirs}\" ; then\n+  for i in `echo ${target_configdirs} | sed -e s/target-//g` ; do\n+    rm -f ${target_subdir}/$i/Makefile\n+  done\n+fi\n+\n+# Quietly strip out all directories which aren't configurable in this tree.\n+# This relies on all configurable subdirectories being autoconfiscated, which\n+# is now the case.\n+configdirs_all=\"$configdirs\"\n+configdirs=\n+for i in ${configdirs_all} ; do\n+  if test -f ${srcdir}/$i/configure ; then\n+    configdirs=\"${configdirs} $i\"\n+  fi\n+done\n+target_configdirs_all=\"$target_configdirs\"\n+target_configdirs=\n+for i in ${target_configdirs_all} ; do\n+  j=`echo $i | sed -e s/target-//g` \n+  if test -f ${srcdir}/$j/configure ; then\n+    target_configdirs=\"${target_configdirs} $i\"\n+  fi\n+done\n+\n+# Produce a warning message for the subdirs we can't configure.\n+# This isn't especially interesting in the Cygnus tree, but in the individual\n+# FSF releases, it's important to let people know when their machine isn't\n+# supported by the one or two programs in a package.\n+\n+if test -n \"${notsupp}\" && test -z \"${norecursion}\" ; then\n+  # If $appdirs is non-empty, at least one of those directories must still\n+  # be configured, or we error out.  (E.g., if the gas release supports a\n+  # specified target in some subdirs but not the gas subdir, we shouldn't\n+  # pretend that all is well.)\n+  if test -n \"$appdirs\" ; then\n+    for dir in $appdirs ; do\n+      if test -r $dir/Makefile.in ; then\n+\tif echo \" ${configdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n+\t  appdirs=\"\"\n+\t  break\n+\tfi\n+\tif echo \" ${target_configdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n+\t  appdirs=\"\"\n+\t  break\n+\tfi\n+      fi\n+    done\n+    if test -n \"$appdirs\" ; then\n+      echo \"*** This configuration is not supported by this package.\" 1>&2\n+      exit 1\n+    fi\n+  fi\n+  # Okay, some application will build, or we don't care to check.  Still\n+  # notify of subdirs not getting built.\n+  echo \"*** This configuration is not supported in the following subdirectories:\" 1>&2\n+  echo \"    ${notsupp}\" 1>&2\n+  echo \"    (Any other directories should still work fine.)\" 1>&2\n+fi\n+\n+case \"$host\" in\n+  *msdosdjgpp*)\n+    enable_gdbtk=no ;;\n+esac\n+# Determine whether gdb needs tk/tcl or not.\n+case \"$enable_gdbtk\" in\n+  no)\n+    GDB_TK=\"\" ;;\n+  *)\n+    GDB_TK=\"all-tcl all-tk all-itcl all-tix all-libgui\" ;;\n+esac\n+\n+copy_dirs=\n+\n+# Handle --with-headers=XXX.  The contents of the named directory are\n+# copied to $(tooldir)/sys-include.\n+if test x\"${with_headers}\" != x ; then\n+  if test x${is_cross_compiler} = xno ; then\n+    echo 1>&2 '***' --with-headers is only supported when cross compiling\n+    exit 1\n+  fi\n+  case \"${exec_prefixoption}\" in\n+  \"\") x=${prefix} ;;\n+  *) x=${exec_prefix} ;;\n+  esac\n+  copy_dirs=\"${copy_dirs} ${with_headers} $x/${target_alias}/sys-include\"\n+fi\n+\n+# Handle --with-libs=XXX.  Multiple directories are permitted.  The\n+# contents are copied to $(tooldir)/lib.\n+if test x\"${with_libs}\" != x ; then\n+  if test x${is_cross_compiler} = xno ; then\n+    echo 1>&2 '***' --with-libs is only supported when cross compiling\n+    exit 1\n+  fi\n+  # Copy the libraries in reverse order, so that files in the first named\n+  # library override files in subsequent libraries.\n+  case \"${exec_prefixoption}\" in\n+  \"\") x=${prefix} ;;\n+  *) x=${exec_prefix} ;;\n+  esac\n+  for l in ${with_libs}; do\n+    copy_dirs=\"$l $x/${target_alias}/lib ${copy_dirs}\"\n+  done\n+fi\n+\n+# Handle ${copy_dirs}\n+set fnord ${copy_dirs}\n+shift\n+while test $# != 0 ; do\n+  if test -f $2/COPIED && test x\"`cat $2/COPIED`\" = x\"$1\" ; then\n+    :\n+  else\n+    echo Copying $1 to $2\n+\n+    # Use the install script to create the directory and all required\n+    # parent directories.\n+    if test -d $2 ; then\n+      :\n+    else\n+      echo >config.temp\n+      ${srcdir}/install-sh -c -m 644 config.temp $2/COPIED\n+    fi\n+\n+    # Copy the directory, assuming we have tar.\n+    # FIXME: Should we use B in the second tar?  Not all systems support it.\n+    (cd $1; tar -cf - .) | (cd $2; tar -xpf -)\n+\n+    # It is the responsibility of the user to correctly adjust all\n+    # symlinks.  If somebody can figure out how to handle them correctly\n+    # here, feel free to add the code.\n+\n+    echo $1 > $2/COPIED\n+  fi\n+  shift; shift\n+done\n+\n+# Work in distributions that contain no compiler tools, like Autoconf.\n+tentative_cc=\"\"\n+if test -d ${srcdir}/config ; then\n+case \"${host}\" in\n+  m68k-hp-hpux*)\n+    # Avoid \"too much defining\" errors from HPUX compiler.\n+    tentative_cc=\"cc -Wp,-H256000\"\n+    host_makefile_frag=\"config/mh-hp300\"\n+    ;;\n+  m68k-apollo-sysv*)\n+    tentative_cc=\"cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DUSG\"\n+    host_makefile_frag=\"config/mh-apollo68\"\n+    ;;\n+  m68k-apollo-bsd*)\n+    #None of the Apollo compilers can compile gas or binutils.  The preprocessor\n+    # chokes on bfd, the compiler won't let you assign integers to enums, and\n+    # other problems.  Defining CC to gcc is a questionable way to say \"don't use\n+    # the apollo compiler\" (the preferred version of GCC could be called cc,\n+    # or whatever), but I'm not sure leaving CC as cc is any better...\n+    #CC=cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DNO_STDARG\n+    tentative_cc=gcc\n+    host_makefile_frag=\"config/mh-a68bsd\"\n+    ;;\n+  m88k-dg-dgux*)\n+    tentative_cc=\"gcc -Wall -ansi -D__using_DGUX\"\n+    host_makefile_frag=\"config/mh-dgux\"\n+    ;;\n+  m88k-harris-cxux*)\n+    # Under CX/UX, we want to tell the compiler to use ANSI mode.\n+    tentative_cc=\"cc -Xa\"\n+    host_makefile_frag=\"config/mh-cxux\"\n+    ;;\n+  m88k-motorola-sysv*)\n+    host_makefile_frag=\"config/mh-delta88\"\n+    ;;\n+  mips*-dec-ultrix*)\n+    tentative_cc=\"cc -Wf,-XNg1000\"\n+    host_makefile_frag=\"config/mh-decstation\"\n+    ;;\n+  mips*-nec-sysv4*)\n+    # The C compiler on NEC MIPS SVR4 needs bigger tables.\n+    tentative_cc=\"cc -ZXNd=5000 -ZXNg=1000\"\n+    host_makefile_frag=\"config/mh-necv4\"\n+    ;;\n+  mips*-sgi-irix6*)\n+    host_makefile_frag=\"config/mh-irix6\"\n+    ;;\n+  mips*-sgi-irix5*)\n+    host_makefile_frag=\"config/mh-irix5\"\n+    ;;\n+  mips*-sgi-irix4*)\n+    # Tell compiler to use K&R C.  We can't compile under the SGI Ansi\n+    # environment.  Also bump switch table size so that cp-parse will\n+    # compile.  Bump string length limit so linker builds.\n+    tentative_cc=\"cc -cckr -Wf,-XNg1500 -Wf,-XNk1000 -Wf,-XNh2000 -Wf,-XNl8192\"\n+    ;;\n+  mips*-sgi-irix3*)\n+    host_makefile_frag=\"config/mh-sysv\"\n+    ;;\n+  mips*-*-sysv4*)\n+    host_makefile_frag=\"config/mh-sysv4\"\n+    ;;\n+  mips*-*-sysv*)\n+    # This is for a MIPS running RISC/os 4.52C.\n+\n+    # This is needed for GDB, but needs to be in the top-level make because\n+    # if a library is compiled with the bsd headers and gets linked with the\n+    # sysv system libraries all hell can break loose (e.g. a jmp_buf might be\n+    # a different size).\n+    # ptrace(2) apparently has problems in the BSD environment.  No workaround is\n+    # known except to select the sysv environment.  Could we use /proc instead?\n+    # These \"sysv environments\" and \"bsd environments\" often end up being a pain.\n+    #\n+    # This is not part of CFLAGS because perhaps not all C compilers have this\n+    # option.\n+    tentative_cc=\"cc -systype sysv\"\n+    host_makefile_frag=\"config/mh-riscos\"\n+    ;;\n+  i370-ibm-opened*)\n+    tentative_cc=\"c89\"\n+    host_makefile_frag=\"config/mh-openedition\"\n+    ;;\n+  i[3456]86-*-sysv5*)\n+    host_makefile_frag=\"config/mh-sysv5\"\n+    ;;\n+  i[3456]86-*-dgux*)\n+    tentative_cc=\"gcc -Wall -ansi -D__using_DGUX\"\n+    host_makefile_frag=\"config/mh-dgux386\"\n+    ;;\n+  i[3456]86-ncr-sysv4.3*)\n+    # The MetaWare compiler will generate a copyright message unless you\n+    # turn it off by adding the -Hnocopyr flag.\n+    tentative_cc=\"cc -Hnocopyr\"\n+    host_makefile_frag=\"config/mh-ncrsvr43\"\n+    ;;\n+  i[3456]86-ncr-sysv4*)\n+    # for an NCR 3000 (i486/SVR4) system.\n+    # The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.\n+    # This compiler not only emits obnoxious copyright messages every time\n+    # you run it, but it chokes and dies on a whole bunch of GNU source\n+    # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.\n+    tentative_cc=\"/usr/ccs/ATT/cc\"\n+    host_makefile_frag=\"config/mh-ncr3000\"\n+    ;;\n+  i[3456]86-*-sco3.2v5*)\n+    host_makefile_frag=\"config/mh-sysv\"\n+    ;;\n+  i[3456]86-*-sco*)\n+    # The native C compiler botches some simple uses of const.  Unfortunately,\n+    # it doesn't defined anything like \"__sco__\" for us to test for in ansidecl.h.\n+    tentative_cc=\"cc -Dconst=\"\n+    host_makefile_frag=\"config/mh-sco\"\n+    ;;\n+  i[3456]86-*-udk*)\n+    host_makefile_frag=\"config/mh-sysv5\"\n+    ;;\n+  i[3456]86-*-isc*)\n+    host_makefile_frag=\"config/mh-sysv\"\n+    ;;\n+  i[3456]86-*-solaris2*)\n+    host_makefile_frag=\"config/mh-sysv4\"\n+    ;;\n+  i[3456]86-*-aix*)\n+    host_makefile_frag=\"config/mh-aix386\"\n+    ;;\n+  i[3456]86-*-msdosdjgpp*)\n+    host_makefile_frag=\"config/mh-djgpp\"\n+    ;;\n+  *-cygwin*)\n+    host_makefile_frag=\"config/mh-cygwin\"\n+    ;;\n+  *-mingw32*)\n+    host_makefile_frag=\"config/mh-mingw32\"\n+    ;;\n+  *-interix*)\n+    host_makefile_frag=\"config/mh-interix\"\n+    ;;\n+  vax-*-ultrix2*)\n+    # The old BSD pcc isn't up to compiling parts of gdb so use gcc\n+    tentative_cc=gcc\n+    ;;\n+  *-*-solaris2*)\n+    host_makefile_frag=\"config/mh-solaris\"\n+    ;;\n+  m68k-sun-sunos*)\n+    # Sun's C compiler needs the -J flag to be able to compile cp-parse.c\n+    # without overflowing the jump tables (-J says to use a 32 bit table)\n+    tentative_cc=\"cc -J\"\n+    ;;\n+  *-hp-hpux[78]*)\n+    tentative_cc=\"cc -Wp,-H256000\"\n+    host_makefile_frag=\"config/mh-hpux8\"\n+    ;;\n+  *-hp-hpux*)\n+    tentative_cc=\"cc -Wp,-H256000\"\n+    host_makefile_frag=\"config/mh-hpux\"\n+    ;;\n+  *-*-hiux*)\n+    tentative_cc=\"cc -Wp,-H256000\"\n+    host_makefile_frag=\"config/mh-hpux\"\n+    ;;\n+  rs6000-*-lynxos*)\n+    # /bin/cc is less than useful for our purposes.  Always use GCC\n+    tentative_cc=\"/usr/cygnus/progressive/bin/gcc\"\n+    host_makefile_frag=\"config/mh-lynxrs6k\"\n+    ;;\n+  *-*-lynxos*)\n+    # /bin/cc is less than useful for our purposes.  Always use GCC\n+    tentative_cc=\"/bin/gcc\"\n+    ;;\n+  *-*-sysv4*)\n+    host_makefile_frag=\"config/mh-sysv4\"\n+    ;;\n+  *-*-sysv*)\n+    host_makefile_frag=\"config/mh-sysv\"\n+    ;;\n+esac\n+fi\n+\n+rm -f mh-frag\n+if test -n \"${host_makefile_frag}\" ; then\n+  for f in ${host_makefile_frag}\n+  do\n+    cat ${srcdir}/$f >> mh-frag\n   done\n+  host_makefile_frag=mh-frag\n fi\n-if test -z \"${norecursion}\" && test -n \"${target_configdirs}\" ; then\n-  for i in `echo ${target_configdirs} | sed -e s/target-//g` ; do\n-    rm -f ${target_subdir}/$i/Makefile\n+\n+# If we aren't going to be using gcc, see if we can extract a definition\n+# of CC from the fragment.\n+# Actually, use the 'pre-extracted' version above.\n+if test -z \"${CC}\" && test \"${build}\" = \"${host}\" ; then\n+  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n+  found=\n+  for dir in $PATH; do\n+    test -z \"$dir\" && dir=.\n+    if test -f $dir/gcc; then\n+      found=yes\n+      break\n+    fi\n   done\n+  IFS=\"$save_ifs\"\n+  if test -z \"${found}\" && test -n \"${tentative_cc}\" ; then\n+    CC=$tentative_cc\n+  fi\n fi\n \n-# Quietly strip out all directories which aren't configurable in this tree.\n-# This relies on all configurable subdirectories being autoconfiscated, which\n-# is now the case.\n-configdirs_all=\"$configdirs\"\n-configdirs=\n-for i in ${configdirs_all} ; do\n-  if test -f ${srcdir}/$i/configure ; then\n-    configdirs=\"${configdirs} $i\"\n-  fi\n-done\n-target_configdirs_all=\"$target_configdirs\"\n-target_configdirs=\n-for i in ${target_configdirs_all} ; do\n-  j=`echo $i | sed -e s/target-//g` \n-  if test -f ${srcdir}/$j/configure ; then\n-    target_configdirs=\"${target_configdirs} $i\"\n-  fi\n-done\n+case \"${target}\" in\n+  v810*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-v810\"\n+    ;;\n+  i[3456]86-*-netware*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-netware\"\n+    ;;\n+  powerpc-*-netware*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-netware\"\n+    ;;\n+  alpha*-*-linux*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-linux\"\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-alphaieee\"\n+    ;;\n+  alpha*-*-*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-alphaieee\"\n+    ;;\n+  *-*-linux*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-linux\"\n+    ;;\n+  *-*-aix4.[3456789]* | *-*-aix[56789].*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-aix43\"\n+    ;;\n+  mips*-*-pe | sh*-*-pe | *arm-wince-pe)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-wince\"\n+    ;;\n+esac\n \n-# Produce a warning message for the subdirs we can't configure.\n-# This isn't especially interesting in the Cygnus tree, but in the individual\n-# FSF releases, it's important to let people know when their machine isn't\n-# supported by the one or two programs in a package.\n+# If --enable-target-optspace always use -Os instead of -O2 to build\n+# the target libraries, similarly if it is not specified, use -Os\n+# on selected platforms.\n+case \"${enable_target_optspace}:${target}\" in\n+  yes:*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-ospace\"\n+    ;;\n+  :d30v-*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-d30v\"\n+    ;;\n+  :m32r-* | :d10v-* | :fr30-*)\n+    target_makefile_frag=\"${target_makefile_frag} config/mt-ospace\"\n+    ;;\n+  no:* | :*)\n+    ;;\n+  *)\n+    echo \"*** bad value \\\"${enable_target_optspace}\\\" for --enable-target-optspace flag; ignored\" 1>&2\n+    ;;\n+esac\n \n-if test -n \"${notsupp}\" && test -z \"${norecursion}\" ; then\n-  # If $appdirs is non-empty, at least one of those directories must still\n-  # be configured, or we error out.  (E.g., if the gas release supports a\n-  # specified target in some subdirs but not the gas subdir, we shouldn't\n-  # pretend that all is well.)\n-  if test -n \"$appdirs\" ; then\n-    for dir in $appdirs ; do\n-      if test -r $dir/Makefile.in ; then\n-\tif echo \" ${configdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n-\t  appdirs=\"\"\n-\t  break\n-\tfi\n-\tif echo \" ${target_configdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n-\t  appdirs=\"\"\n-\t  break\n-\tfi\n-      fi\n-    done\n-    if test -n \"$appdirs\" ; then\n-      echo \"*** This configuration is not supported by this package.\" 1>&2\n-      exit 1\n-    fi\n-  fi\n-  # Okay, some application will build, or we don't care to check.  Still\n-  # notify of subdirs not getting built.\n-  echo \"*** This configuration is not supported in the following subdirectories:\" 1>&2\n-  echo \"    ${notsupp}\" 1>&2\n-  echo \"    (Any other directories should still work fine.)\" 1>&2\n+rm -f mt-frag\n+if test -n \"${target_makefile_frag}\" ; then\n+  for f in ${target_makefile_frag}\n+  do\n+    cat ${srcdir}/$f >> mt-frag\n+  done\n+  target_makefile_frag=mt-frag\n fi\n \n # Set with_gnu_as and with_gnu_ld as appropriate.\n@@ -1269,47 +1247,63 @@ fi\n # want to do that, then you should use the --without-gnu-as and\n # --without-gnu-ld options for the configure script.\n \n-if test x${use_gnu_as} = x ; then\n-  if test x${with_gnu_as} != xno && echo \" ${configdirs} \" | grep \" gas \" > /dev/null 2>&1 && test -d ${srcdir}/gas ; then\n-    with_gnu_as=yes\n-    withoptions=\"$withoptions --with-gnu-as\"\n-  fi\n+if test x${use_gnu_as} = x &&\n+   echo \" ${configdirs} \" | grep \" gas \" > /dev/null 2>&1 ; then\n+  with_gnu_as=yes\n+  withoptions=\"$withoptions --with-gnu-as\"\n fi\n \n-if test x${use_gnu_ld} = x ; then\n-  if test x${with_gnu_ld} != xno && echo \" ${configdirs} \" | grep \" ld \" > /dev/null 2>&1 && test -d ${srcdir}/ld ; then\n-    with_gnu_ld=yes\n-    withoptions=\"$withoptions --with-gnu-ld\"\n-  fi\n+if test x${use_gnu_ld} = x &&\n+   echo \" ${configdirs} \" | grep \" ld \" > /dev/null 2>&1 ; then\n+  with_gnu_ld=yes\n+  withoptions=\"$withoptions --with-gnu-ld\"\n fi\n \n # If using newlib, add --with-newlib to the withoptions so that gcc/configure\n # can detect this case.\n \n-if test x${with_newlib} != xno && echo \" ${target_configdirs} \" | grep \" target-newlib \" > /dev/null 2>&1 && test -d ${srcdir}/newlib ; then\n+if test x${with_newlib} != xno && echo \" ${target_configdirs} \" | grep \" target-newlib \" > /dev/null 2>&1 ; then\n   with_newlib=yes\n   withoptions=\"$withoptions --with-newlib\"\n fi\n \n-rm -f mt-frag\n-if test -n \"${target_makefile_frag}\" ; then\n-  for f in ${target_makefile_frag}\n-  do\n-    cat ${srcdir}/$f >> mt-frag\n-  done\n-  target_makefile_frag=mt-frag\n+# We default to --with-shared on platforms where -fpic is meaningless.\n+# Well, we don't yet, but we will.\n+if false && test \"${host}\" = \"${target}\" && test x${enable_shared} = x ; then\n+  case \"${target}\" in\n+    alpha*-dec-osf*)\tenable_shared=yes ;;\n+    alpha*-*-linux*)\tenable_shared=yes ;;\n+    mips-sgi-irix5*)\tenable_shared=yes ;;\n+    *)\t\t\tenable_shared=no ;;\n+  esac\n fi\n \n-case \"$host\" in\n-  *msdosdjgpp*)\n-    enable_gdbtk=no ;;\n+case \"${enable_shared}\" in\n+  yes) shared=yes ;;\n+  no) shared=no ;;\n+  \"\") shared=no ;;\n+  *) shared=yes ;;\n esac\n-# Determine whether gdb needs tk/tcl or not.\n-case \"$enable_gdbtk\" in\n-  no)\n-    GDB_TK=\"\" ;;\n-  *)\n-    GDB_TK=\"all-tcl all-tk all-itcl all-tix all-libgui\" ;;\n+\n+\n+# Default to using --with-stabs for certain targets.\n+if test x${with_stabs} = x ; then\n+  case \"${target}\" in\n+  mips*-*-irix6*)\n+    ;;\n+  mips*-*-* | alpha*-*-osf*)\n+    with_stabs=yes;\n+    withoptions=\"${withoptions} --with-stabs\"\n+    ;;\n+  esac\n+fi\n+\n+# hpux11 in 64bit mode has libraries in a weird place.  Arrange to find\n+# them automatically.\n+case \"${host}\" in\n+  hppa*64*-*-hpux11*)\t\n+    withoptions=\"$withoptions -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include\"\n+    ;;\n esac\n \n # post-target:\n@@ -1520,8 +1514,7 @@ if test \"${build}\" = \"${host}\" && test -d ${srcdir}/gcc; then\n fi\n \n if test \"x${use_gnu_ld}\" = x && test \"x${with_gnu_ld}\" != xno &&\n-   echo \" ${configdirs} \" | grep \" ld \" > /dev/null &&\n-   test -d ${srcdir}/ld; then\n+   echo \" ${configdirs} \" | grep \" ld \" > /dev/null ; then\n   # Arrange for us to find uninstalled linker scripts.\n   FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/ld'\n fi"}]}