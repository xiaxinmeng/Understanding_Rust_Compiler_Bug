{"sha": "2387cfc7f6e2065f5c040d62763f6f3a5997a444", "node_id": "C_kwDOANBUbNoAKDIzODdjZmM3ZjZlMjA2NWY1YzA0MGQ2Mjc2M2Y2ZjNhNTk5N2E0NDQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-26T10:06:48Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-26T10:08:13Z"}, "message": "s390: fix wrong refactoring\n\nSince r13-2251-g1930c5d05ceff2, the refactoring is not 1:1 and we end\nup with a wrong rtx type.\n\ngcc/ChangeLog:\n\n\t* config/s390/s390.cc (s390_rtx_costs): Remove dest variable\n\tand use only dst.", "tree": {"sha": "913db77bbbec4075778b1e3a5700d8f434d4bf0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/913db77bbbec4075778b1e3a5700d8f434d4bf0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2387cfc7f6e2065f5c040d62763f6f3a5997a444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2387cfc7f6e2065f5c040d62763f6f3a5997a444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2387cfc7f6e2065f5c040d62763f6f3a5997a444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2387cfc7f6e2065f5c040d62763f6f3a5997a444/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c33e12fa479c01848f4a288883bf1ef848c94ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c33e12fa479c01848f4a288883bf1ef848c94ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c33e12fa479c01848f4a288883bf1ef848c94ca3"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "9861913af05093599fc2b920116fd5025c343a2a", "filename": "gcc/config/s390/s390.cc", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2387cfc7f6e2065f5c040d62763f6f3a5997a444/gcc%2Fconfig%2Fs390%2Fs390.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2387cfc7f6e2065f5c040d62763f6f3a5997a444/gcc%2Fconfig%2Fs390%2Fs390.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.cc?ref=2387cfc7f6e2065f5c040d62763f6f3a5997a444", "patch": "@@ -3648,7 +3648,7 @@ s390_rtx_costs (rtx x, machine_mode mode, int outer_code,\n       *total = 0;\n       return true;\n       case SET: {\n-\trtx dest = SET_DEST (x);\n+\trtx dst = SET_DEST (x);\n \trtx src = SET_SRC (x);\n \n \tswitch (GET_CODE (src))\n@@ -3669,7 +3669,6 @@ s390_rtx_costs (rtx x, machine_mode mode, int outer_code,\n \t\t slightly more expensive than a normal load.  */\n \t      *total = COSTS_N_INSNS (1) + 2;\n \n-\t      rtx dst = SET_DEST (src);\n \t      rtx then = XEXP (src, 1);\n \t      rtx els = XEXP (src, 2);\n \n@@ -3696,33 +3695,33 @@ s390_rtx_costs (rtx x, machine_mode mode, int outer_code,\n \t    break;\n \t  }\n \n-\tswitch (GET_CODE (dest))\n+\tswitch (GET_CODE (dst))\n \t  {\n \t  case SUBREG:\n-\t    if (!REG_P (SUBREG_REG (dest)))\n+\t    if (!REG_P (SUBREG_REG (dst)))\n \t      *total += rtx_cost (SUBREG_REG (src), VOIDmode, SET, 0, speed);\n \t    /* fallthrough */\n \t  case REG:\n \t    /* If this is a VR -> VR copy, count the number of\n \t       registers.  */\n-\t    if (VECTOR_MODE_P (GET_MODE (dest)) && REG_P (src))\n+\t    if (VECTOR_MODE_P (GET_MODE (dst)) && REG_P (src))\n \t      {\n-\t\tint nregs = s390_hard_regno_nregs (VR0_REGNUM, GET_MODE (dest));\n+\t\tint nregs = s390_hard_regno_nregs (VR0_REGNUM, GET_MODE (dst));\n \t\t*total = COSTS_N_INSNS (nregs);\n \t      }\n \t    /* Same for GPRs.  */\n \t    else if (REG_P (src))\n \t      {\n \t\tint nregs\n-\t\t  = s390_hard_regno_nregs (GPR0_REGNUM, GET_MODE (dest));\n+\t\t  = s390_hard_regno_nregs (GPR0_REGNUM, GET_MODE (dst));\n \t\t*total = COSTS_N_INSNS (nregs);\n \t      }\n \t    else\n \t      /* Otherwise just cost the src.  */\n \t      *total += rtx_cost (src, mode, SET, 1, speed);\n \t    return true;\n \t    case MEM: {\n-\t      rtx address = XEXP (dest, 0);\n+\t      rtx address = XEXP (dst, 0);\n \t      rtx tmp;\n \t      HOST_WIDE_INT tmp2;\n \t      if (s390_loadrelative_operand_p (address, &tmp, &tmp2))"}]}