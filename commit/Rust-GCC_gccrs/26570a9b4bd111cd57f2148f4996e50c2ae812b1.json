{"sha": "26570a9b4bd111cd57f2148f4996e50c2ae812b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1NzBhOWI0YmQxMTFjZDU3ZjIxNDhmNDk5NmU1MGMyYWU4MTJiMQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2015-01-26T22:54:31Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2015-01-26T22:54:31Z"}, "message": "configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n\n2015-01-26  Matthias Klose  <doko@ubuntu.com>\n\n        * configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n        * configure: Regenerate.\n\nFrom-SVN: r220141", "tree": {"sha": "7a25f4080e0f0fbbba6c386f7ed71ca3e7b2369b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a25f4080e0f0fbbba6c386f7ed71ca3e7b2369b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26570a9b4bd111cd57f2148f4996e50c2ae812b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26570a9b4bd111cd57f2148f4996e50c2ae812b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26570a9b4bd111cd57f2148f4996e50c2ae812b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26570a9b4bd111cd57f2148f4996e50c2ae812b1/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40a778bd519125d4385bc155d9ae6e6e04d703c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a778bd519125d4385bc155d9ae6e6e04d703c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a778bd519125d4385bc155d9ae6e6e04d703c3"}], "stats": {"total": 113, "additions": 60, "deletions": 53}, "files": [{"sha": "6f630dc7924f0d66a62be3707a1a211604c0983c", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26570a9b4bd111cd57f2148f4996e50c2ae812b1/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26570a9b4bd111cd57f2148f4996e50c2ae812b1/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=26570a9b4bd111cd57f2148f4996e50c2ae812b1", "patch": "@@ -1,3 +1,8 @@\n+2015-01-26  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n+\t* configure: Regenerate.\n+\n 2014-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/63784"}, {"sha": "b0646306295f8731eeccfa68052ed87447e6ec7e", "filename": "libcilkrts/configure", "status": "modified", "additions": 53, "deletions": 52, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26570a9b4bd111cd57f2148f4996e50c2ae812b1/libcilkrts%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26570a9b4bd111cd57f2148f4996e50c2ae812b1/libcilkrts%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure?ref=26570a9b4bd111cd57f2148f4996e50c2ae812b1", "patch": "@@ -636,7 +636,6 @@ EGREP\n GREP\n CPP\n ALLOCA\n-multi_basedir\n am__fastdepCXX_FALSE\n am__fastdepCXX_TRUE\n CXXDEPMODE\n@@ -659,6 +658,7 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n+multi_basedir\n MAINT\n MAINTAINER_MODE_FALSE\n MAINTAINER_MODE_TRUE\n@@ -739,8 +739,8 @@ ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n enable_maintainer_mode\n-enable_dependency_tracking\n enable_multilib\n+enable_dependency_tracking\n enable_version_specific_runtime_libs\n enable_shared\n enable_static\n@@ -1385,9 +1385,9 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n+  --enable-multilib       build many library versions (default)\n   --disable-dependency-tracking  speeds up one-time build\n   --enable-dependency-tracking   do not reject slow dependency extractors\n-  --enable-multilib       build many library versions (default)\n   --enable-version-specific-runtime-libs\n                           Specify that runtime libraries should be installed\n                           in a compi ler-specific directory\n@@ -2875,6 +2875,44 @@ fi\n \n \n \n+# Default to --enable-multilib\n+# Check whether --enable-multilib was given.\n+if test \"${enable_multilib+set}\" = set; then :\n+  enableval=$enable_multilib; case \"$enableval\" in\n+  yes) multilib=yes ;;\n+  no)  multilib=no ;;\n+  *)   as_fn_error \"bad value $enableval for multilib option\" \"$LINENO\" 5 ;;\n+ esac\n+else\n+  multilib=yes\n+fi\n+\n+\n+# We may get other options which we leave undocumented:\n+# --with-target-subdir, --with-multisrctop, --with-multisubdir\n+# See config-ml.in if you want the gory details.\n+\n+if test \"$srcdir\" = \".\"; then\n+  if test \"$with_target_subdir\" != \".\"; then\n+    multi_basedir=\"$srcdir/$with_multisrctop../..\"\n+  else\n+    multi_basedir=\"$srcdir/$with_multisrctop..\"\n+  fi\n+else\n+  multi_basedir=\"$srcdir/..\"\n+fi\n+\n+\n+# Even if the default multilib is not a cross compilation,\n+# it may be that some of the other multilibs are.\n+if test $cross_compiling = no && test $multilib = yes \\\n+   && test \"x${with_multisubdir}\" != x ; then\n+   cross_compiling=maybe\n+fi\n+\n+ac_config_commands=\"$ac_config_commands default-1\"\n+\n+\n # Build a DLL on Windows\n # AC_LIBTOOL_WIN32_DLL\n ac_ext=c\n@@ -4219,43 +4257,6 @@ fi\n # AC_CONFIG_MACRO_DIR([..])\n ac_config_files=\"$ac_config_files Makefile libcilkrts.spec\"\n \n-# Default to --enable-multilib\n-# Check whether --enable-multilib was given.\n-if test \"${enable_multilib+set}\" = set; then :\n-  enableval=$enable_multilib; case \"$enableval\" in\n-  yes) multilib=yes ;;\n-  no)  multilib=no ;;\n-  *)   as_fn_error \"bad value $enableval for multilib option\" \"$LINENO\" 5 ;;\n- esac\n-else\n-  multilib=yes\n-fi\n-\n-\n-# We may get other options which we leave undocumented:\n-# --with-target-subdir, --with-multisrctop, --with-multisubdir\n-# See config-ml.in if you want the gory details.\n-\n-if test \"$srcdir\" = \".\"; then\n-  if test \"$with_target_subdir\" != \".\"; then\n-    multi_basedir=\"$srcdir/$with_multisrctop../..\"\n-  else\n-    multi_basedir=\"$srcdir/$with_multisrctop..\"\n-  fi\n-else\n-  multi_basedir=\"$srcdir/..\"\n-fi\n-\n-\n-# Even if the default multilib is not a cross compilation,\n-# it may be that some of the other multilibs are.\n-if test $cross_compiling = no && test $multilib = yes \\\n-   && test \"x${with_multisubdir}\" != x ; then\n-   cross_compiling=maybe\n-fi\n-\n-ac_config_commands=\"$ac_config_commands default-1\"\n-\n \n ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n@@ -11059,7 +11060,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11062 \"configure\"\n+#line 11063 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11165,7 +11166,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11168 \"configure\"\n+#line 11169 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15255,7 +15256,6 @@ cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n #\n # INIT-COMMANDS\n #\n-AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n srcdir=\"$srcdir\"\n host=\"$host\"\n@@ -15270,6 +15270,7 @@ CC=\"$CC\"\n CXX=\"$CXX\"\n GFORTRAN=\"$GFORTRAN\"\n GCJ=\"$GCJ\"\n+AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n \n # The HP-UX ksh and POSIX shell print the target directory to stdout\n@@ -15639,10 +15640,10 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n for ac_config_target in $ac_config_targets\n do\n   case $ac_config_target in\n+    \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n     \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n     \"libcilkrts.spec\") CONFIG_FILES=\"$CONFIG_FILES libcilkrts.spec\" ;;\n-    \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n \n   *) as_fn_error \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n@@ -16062,6 +16063,14 @@ $as_echo \"$as_me: executing $ac_file commands\" >&6;}\n \n \n   case $ac_file$ac_mode in\n+    \"default-1\":C)\n+# Only add multilib support code if we just rebuilt the top-level\n+# Makefile.\n+case \" $CONFIG_FILES \" in\n+ *\" Makefile \"*)\n+   ac_file=Makefile . ${multi_basedir}/config-ml.in\n+   ;;\n+esac ;;\n     \"depfiles\":C) test x\"$AMDEP_TRUE\" != x\"\" || {\n   # Autoconf 2.62 quotes --file arguments for eval, but not when files\n   # are listed without --file.  Let's play safe and only enable the eval\n@@ -16157,14 +16166,6 @@ $as_echo X\"$file\" |\n   done\n }\n  ;;\n-    \"default-1\":C)\n-# Only add multilib support code if we just rebuilt the top-level\n-# Makefile.\n-case \" $CONFIG_FILES \" in\n- *\" Makefile \"*)\n-   ac_file=Makefile . ${multi_basedir}/config-ml.in\n-   ;;\n-esac ;;\n     \"libtool\":C)\n \n     # See if we are running on zsh, and set the options which allow our"}, {"sha": "8ad647ea8e77a0190f79978291af3ad8ae884fa4", "filename": "libcilkrts/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26570a9b4bd111cd57f2148f4996e50c2ae812b1/libcilkrts%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26570a9b4bd111cd57f2148f4996e50c2ae812b1/libcilkrts%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure.ac?ref=26570a9b4bd111cd57f2148f4996e50c2ae812b1", "patch": "@@ -43,14 +43,15 @@ AM_INIT_AUTOMAKE(foreign no-dist)\n \n AM_MAINTAINER_MODE\n \n+AM_ENABLE_MULTILIB(, ..)\n+\n # Build a DLL on Windows\n # AC_LIBTOOL_WIN32_DLL\n AC_PROG_CC\n AC_PROG_CXX\n # AC_PROG_LIBTOOL\n # AC_CONFIG_MACRO_DIR([..])\n AC_CONFIG_FILES([Makefile libcilkrts.spec])\n-AM_ENABLE_MULTILIB(, ..)\n AC_FUNC_ALLOCA\n \n # Check whether the target supports protected visibility."}]}