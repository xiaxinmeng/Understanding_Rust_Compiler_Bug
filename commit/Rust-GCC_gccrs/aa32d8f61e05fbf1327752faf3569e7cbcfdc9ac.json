{"sha": "aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzMmQ4ZjYxZTA1ZmJmMTMyNzc1MmZhZjM1NjllN2NiY2ZkYzlhYw==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-05-01T21:44:02Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-05-01T21:44:02Z"}, "message": "gc_priv.h (UNLOCK): Change type of GC_noop1 argument.\n\n2001-05-01  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* gc_priv.h (UNLOCK): Change type of GC_noop1 argument.\n\t(GC_noop1): Change declaration to take one argument.\n\nFrom-SVN: r41738", "tree": {"sha": "9d598b5a7c34ac7a9f902b2d5f86d6c02bcc81ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d598b5a7c34ac7a9f902b2d5f86d6c02bcc81ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac/comments", "author": null, "committer": null, "parents": [{"sha": "d54d2a054a7075fb550e297780c5b41838bf63bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54d2a054a7075fb550e297780c5b41838bf63bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54d2a054a7075fb550e297780c5b41838bf63bb"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f62b7f3d2bf6e8db761bdc6bb0286d646922ec5c", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac", "patch": "@@ -1,3 +1,8 @@\n+2001-05-01  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* gc_priv.h (UNLOCK): Change type of GC_noop1 argument.\n+\t(GC_noop1): Change declaration to take one argument.\n+\n 2001-04-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure.in: Obtain THREADS with `gcc -v'."}, {"sha": "260566eb3a2c2a44e52c43d54ff30345f1044554", "filename": "boehm-gc/gc_priv.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac/boehm-gc%2Fgc_priv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac/boehm-gc%2Fgc_priv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fgc_priv.h?ref=aa32d8f61e05fbf1327752faf3569e7cbcfdc9ac", "patch": "@@ -628,7 +628,7 @@ void GC_print_callers (/* struct callinfo info[NFRAMES] */);\n #    ifdef HPUX_THREADS\n #      define LOCK() { if (!GC_test_and_clear(&GC_allocate_lock)) GC_lock(); }\n        /* The following is INCORRECT, since the memory model is too weak. */\n-#      define UNLOCK() { GC_noop1(&GC_allocate_lock); \\\n+#      define UNLOCK() { GC_noop1((word)&GC_allocate_lock); \\\n \t\t\t*(volatile unsigned long *)(&GC_allocate_lock) = 1; }\n #    else\n #      define LOCK() { if (GC_test_and_set(&GC_allocate_lock, 1)) GC_lock(); }\n@@ -641,7 +641,7 @@ void GC_print_callers (/* struct callinfo info[NFRAMES] */);\n \t    /* This is probably not necessary for ucode or gcc 2.8.\t*/\n \t    /* It may be necessary for Ragnarok and future gcc\t\t*/\n \t    /* versions.\t\t\t\t\t\t*/\n-#           define UNLOCK() { GC_noop1(&GC_allocate_lock); \\\n+#           define UNLOCK() { GC_noop1((word)&GC_allocate_lock); \\\n \t\t\t*(volatile unsigned long *)(&GC_allocate_lock) = 0; }\n #      endif\n #    endif\n@@ -1851,7 +1851,7 @@ void GC_dump();\n   GC_API void GC_noop();\n # endif\n \n-void GC_noop1(/* word arg */);\n+void GC_noop1(word);\n \n /* Logging and diagnostic output: \t*/\n GC_API void GC_printf GC_PROTO((char * format, long, long, long, long, long, long));"}]}