{"sha": "96a111a3dfb5def92156e41ea48f7677f34ce3c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhMTExYTNkZmI1ZGVmOTIxNTZlNDFlYTQ4Zjc2NzdmMzRjZTNjMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-24T08:31:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-24T08:31:07Z"}, "message": "genmatch.c (add_operator): Allow SSA_NAME as predicate.\n\n2015-07-24  Richard Biener  <rguenther@suse.de>\n\n\t* genmatch.c (add_operator): Allow SSA_NAME as predicate.\n\t* fold-const.c (fold_comparison): Move parameter does not\n\talias &local simplification ...\n\t* match.pd: ... as a pattern here.\n\nFrom-SVN: r226140", "tree": {"sha": "ea73c4893759d64987134135112562c59854df86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea73c4893759d64987134135112562c59854df86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96a111a3dfb5def92156e41ea48f7677f34ce3c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a111a3dfb5def92156e41ea48f7677f34ce3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a111a3dfb5def92156e41ea48f7677f34ce3c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a111a3dfb5def92156e41ea48f7677f34ce3c2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37d486ab11c0d4f1e860b6dbc46e2e94bb8f0647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d486ab11c0d4f1e860b6dbc46e2e94bb8f0647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d486ab11c0d4f1e860b6dbc46e2e94bb8f0647"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "515f8ad3d3d9b3c5680452fa9c6469a0cfcba6f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96a111a3dfb5def92156e41ea48f7677f34ce3c2", "patch": "@@ -1,3 +1,10 @@\n+2015-07-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* genmatch.c (add_operator): Allow SSA_NAME as predicate.\n+\t* fold-const.c (fold_comparison): Move parameter does not\n+\talias &local simplification ...\n+\t* match.pd: ... as a pattern here.\n+\n 2015-07-24  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-fold.c (replace_stmt_with_simplification): Special-case"}, {"sha": "54a6b13df29f2c7353a7982b4d7d63de67cdd3fd", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=96a111a3dfb5def92156e41ea48f7677f34ce3c2", "patch": "@@ -8467,33 +8467,9 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \t    }\n \t}\n \n-      /* A local variable can never be pointed to by\n-         the default SSA name of an incoming parameter.  */\n-      if ((TREE_CODE (arg0) == ADDR_EXPR\n-           && indirect_base0\n-           && TREE_CODE (base0) == VAR_DECL\n-           && auto_var_in_fn_p (base0, current_function_decl)\n-           && !indirect_base1\n-           && TREE_CODE (base1) == SSA_NAME\n-           && SSA_NAME_IS_DEFAULT_DEF (base1)\n-\t   && TREE_CODE (SSA_NAME_VAR (base1)) == PARM_DECL)\n-          || (TREE_CODE (arg1) == ADDR_EXPR\n-              && indirect_base1\n-              && TREE_CODE (base1) == VAR_DECL\n-              && auto_var_in_fn_p (base1, current_function_decl)\n-              && !indirect_base0\n-              && TREE_CODE (base0) == SSA_NAME\n-              && SSA_NAME_IS_DEFAULT_DEF (base0)\n-\t      && TREE_CODE (SSA_NAME_VAR (base0)) == PARM_DECL))\n-        {\n-          if (code == NE_EXPR)\n-            return constant_boolean_node (1, type);\n-          else if (code == EQ_EXPR)\n-            return constant_boolean_node (0, type);\n-        }\n       /* If we have equivalent bases we might be able to simplify.  */\n-      else if (indirect_base0 == indirect_base1\n-               && operand_equal_p (base0, base1, 0))\n+      if (indirect_base0 == indirect_base1\n+\t  && operand_equal_p (base0, base1, 0))\n \t{\n \t  /* We can fold this expression to a constant if the non-constant\n \t     offset parts are equal.  */"}, {"sha": "cb2377095fe91a5d10f8a1542cc4f08306b7c6d7", "filename": "gcc/genmatch.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=96a111a3dfb5def92156e41ea48f7677f34ce3c2", "patch": "@@ -395,7 +395,9 @@ add_operator (enum tree_code code, const char *id,\n       /* To have INTEGER_CST and friends as \"predicate operators\".  */\n       && strcmp (tcc, \"tcc_constant\") != 0\n       /* And allow CONSTRUCTOR for vector initializers.  */\n-      && !(code == CONSTRUCTOR))\n+      && !(code == CONSTRUCTOR)\n+      /* Allow SSA_NAME as predicate operator.  */\n+      && !(code == SSA_NAME))\n     return;\n   /* Treat ADDR_EXPR as atom, thus don't allow matching its operand.  */\n   if (code == ADDR_EXPR)"}, {"sha": "ccc5165f320bae1bd79aecdfe9d8ce251e1b1877", "filename": "gcc/match.pd", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a111a3dfb5def92156e41ea48f7677f34ce3c2/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=96a111a3dfb5def92156e41ea48f7677f34ce3c2", "patch": "@@ -1743,6 +1743,21 @@ along with GCC; see the file COPYING3.  If not see\n \t   (if (cmp == GT_EXPR || cmp == GE_EXPR)\n \t    { constant_boolean_node (above ? false : true, type); }))))))))))))\n \n+(for cmp (eq ne)\n+ /* A local variable can never be pointed to by\n+    the default SSA name of an incoming parameter.\n+    SSA names are canonicalized to 2nd place.  */\n+ (simplify\n+  (cmp addr@0 SSA_NAME@1)\n+  (if (SSA_NAME_IS_DEFAULT_DEF (@1)\n+       && TREE_CODE (SSA_NAME_VAR (@1)) == PARM_DECL)\n+   (with { tree base = get_base_address (TREE_OPERAND (@0, 0)); }\n+    (if (TREE_CODE (base) == VAR_DECL\n+         && auto_var_in_fn_p (base, current_function_decl))\n+     (if (cmp == NE_EXPR)\n+      { constant_boolean_node (true, type); }\n+      { constant_boolean_node (false, type); }))))))\n+\n /* Equality compare simplifications from fold_binary  */\n (for cmp (eq ne)\n "}]}