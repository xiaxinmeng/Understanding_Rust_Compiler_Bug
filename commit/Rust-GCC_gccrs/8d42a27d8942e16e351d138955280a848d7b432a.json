{"sha": "8d42a27d8942e16e351d138955280a848d7b432a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0MmEyN2Q4OTQyZTE2ZTM1MWQxMzg5NTUyODBhODQ4ZDdiNDMyYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-19T14:54:21Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-19T15:40:34Z"}, "message": "Make dump_ranger routines externally visible.\n\nThere was an inline extern declaration for dump_ranger that was a bit of\na hack.  I've removed it in favor of an actual prototype.  There are\nalso some trivial changes to the dumping code in the path solver.\n\ngcc/ChangeLog:\n\n\t* gimple-range-path.cc (path_range_query::path_range_query): Add\n\theader.\n\t(path_range_query::dump): Remove extern declaration of dump_ranger.\n\t* gimple-range-trace.cc (dump_ranger): Add DEBUG_FUNCTION marker.\n\t* gimple-range-trace.h (dump_ranger): Add prototype.", "tree": {"sha": "65e0b21038c9da0cc2352d77bb0b56727fa9672f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65e0b21038c9da0cc2352d77bb0b56727fa9672f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d42a27d8942e16e351d138955280a848d7b432a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d42a27d8942e16e351d138955280a848d7b432a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d42a27d8942e16e351d138955280a848d7b432a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d42a27d8942e16e351d138955280a848d7b432a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fee8a0a9223d030c66d53c104fb0a431369248f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fee8a0a9223d030c66d53c104fb0a431369248f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fee8a0a9223d030c66d53c104fb0a431369248f"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "10b018b5211a3c061a496aacb02dd3a3c4120f39", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d42a27d8942e16e351d138955280a848d7b432a/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d42a27d8942e16e351d138955280a848d7b432a/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=8d42a27d8942e16e351d138955280a848d7b432a", "patch": "@@ -37,6 +37,9 @@ along with GCC; see the file COPYING3.  If not see\n path_range_query::path_range_query (gimple_ranger &ranger)\n   : m_ranger (ranger)\n {\n+  if (DEBUG_SOLVER)\n+    fprintf (dump_file, \"\\n*********** path_range_query ******************\\n\");\n+\n   m_cache = new ssa_global_cache;\n   m_has_cache_entry = BITMAP_ALLOC (NULL);\n   m_path = NULL;\n@@ -85,14 +88,15 @@ path_range_query::set_cache (const irange &r, tree name)\n void\n path_range_query::dump (FILE *dump_file)\n {\n+  push_dump_file save (dump_file, dump_flags & ~TDF_DETAILS);\n+\n   if (m_path->is_empty ())\n     return;\n \n   unsigned i;\n   bitmap_iterator bi;\n-  extern void dump_ranger (FILE *, const vec<basic_block> &);\n \n-  fprintf (dump_file, \"Path is (length=%d):\\n\", m_path->length ());\n+  fprintf (dump_file, \"\\nPath is (length=%d):\\n\", m_path->length ());\n   dump_ranger (dump_file, *m_path);\n \n   fprintf (dump_file, \"Imports:\\n\");"}, {"sha": "2417c21f1f269175e0743d5fa7be6a2a4a4d9fa7", "filename": "gcc/gimple-range-trace.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d42a27d8942e16e351d138955280a848d7b432a/gcc%2Fgimple-range-trace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d42a27d8942e16e351d138955280a848d7b432a/gcc%2Fgimple-range-trace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-trace.cc?ref=8d42a27d8942e16e351d138955280a848d7b432a", "patch": "@@ -176,7 +176,7 @@ push_dump_file::~push_dump_file ()\n \n // Dump all that ranger knows for the current function.\n \n-DEBUG_FUNCTION void\n+void\n dump_ranger (FILE *out)\n {\n   push_dump_file save (out, dump_flags);\n@@ -201,7 +201,7 @@ debug_ranger ()\n // Note that the blocks are in reverse order, thus the exit block is\n // path[0].\n \n-DEBUG_FUNCTION void\n+void\n dump_ranger (FILE *dump_file, const vec<basic_block> &path)\n {\n   if (path.length () == 0)"}, {"sha": "d3e69e03543b963987180a81829db349b6ca7d76", "filename": "gcc/gimple-range-trace.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d42a27d8942e16e351d138955280a848d7b432a/gcc%2Fgimple-range-trace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d42a27d8942e16e351d138955280a848d7b432a/gcc%2Fgimple-range-trace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-trace.h?ref=8d42a27d8942e16e351d138955280a848d7b432a", "patch": "@@ -72,4 +72,7 @@ class push_dump_file\n   dump_flags_t old_dump_flags;\n };\n \n+void dump_ranger (FILE *);\n+void dump_ranger (FILE *, const vec<basic_block> &path);\n+\n #endif // GCC_GIMPLE_RANGE_TRACE_H"}]}