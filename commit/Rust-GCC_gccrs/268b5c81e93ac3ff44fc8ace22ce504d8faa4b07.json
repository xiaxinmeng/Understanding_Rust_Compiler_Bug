{"sha": "268b5c81e93ac3ff44fc8ace22ce504d8faa4b07", "node_id": "C_kwDOANBUbNoAKDI2OGI1YzgxZTkzYWMzZmY0NGZjOGFjZTIyY2U1MDRkOGZhYTRiMDc", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-06-23T20:59:11Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-06-24T08:43:46Z"}, "message": "profile-count: fix /= and *= operators\n\n\tPR middle-end/106059\n\ngcc/ChangeLog:\n\n\t* profile-count.h: *= and /= operators need to modify this\n\tobject.", "tree": {"sha": "295aa078ec4e72ccd5f624d9d9d5e636adb08312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/295aa078ec4e72ccd5f624d9d9d5e636adb08312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/268b5c81e93ac3ff44fc8ace22ce504d8faa4b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268b5c81e93ac3ff44fc8ace22ce504d8faa4b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268b5c81e93ac3ff44fc8ace22ce504d8faa4b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268b5c81e93ac3ff44fc8ace22ce504d8faa4b07/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b8794302b52a819ca3ea78238e9b5025d1c56dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8794302b52a819ca3ea78238e9b5025d1c56dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8794302b52a819ca3ea78238e9b5025d1c56dd"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "141a8827001fb5e1f1e6b5acb06c06e4ef514841", "filename": "gcc/profile-count.h", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268b5c81e93ac3ff44fc8ace22ce504d8faa4b07/gcc%2Fprofile-count.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268b5c81e93ac3ff44fc8ace22ce504d8faa4b07/gcc%2Fprofile-count.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.h?ref=268b5c81e93ac3ff44fc8ace22ce504d8faa4b07", "patch": "@@ -605,19 +605,21 @@ class GTY((user)) profile_probability\n       return apply_scale (num, 1);\n     }\n \n-  profile_probability operator*= (int64_t den) const\n+  profile_probability operator*= (int64_t num)\n     {\n-      return *this * den;\n+      *this = apply_scale (num, 1);\n+      return *this;\n     }\n \n   profile_probability operator/ (int64_t den) const\n     {\n       return apply_scale (1, den);\n     }\n \n-  profile_probability operator/= (int64_t den) const\n+  profile_probability operator/= (int64_t den)\n     {\n-      return *this / den;\n+      *this = apply_scale (1, den);\n+      return *this;\n     }\n \n   /* Get the value of the count.  */\n@@ -1017,19 +1019,21 @@ struct GTY(()) profile_count\n       return apply_scale (num, 1);\n     }\n \n-  profile_count operator*= (int64_t den) const\n+  profile_count operator*= (int64_t num)\n     {\n-      return *this * den;\n+      *this = apply_scale (num, 1);\n+      return *this;\n     }\n \n   profile_count operator/ (int64_t den) const\n     {\n       return apply_scale (1, den);\n     }\n \n-  profile_count operator/= (int64_t den) const\n+  profile_count operator/= (int64_t den)\n     {\n-      return *this / den;\n+      *this = apply_scale (1, den);\n+      return *this;\n     }\n \n   /* Return true when value is not zero and can be used for scaling. "}]}