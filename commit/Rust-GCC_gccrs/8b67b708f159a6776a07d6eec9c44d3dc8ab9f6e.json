{"sha": "8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2N2I3MDhmMTU5YTY3NzZhMDdkNmVlYzljNDRkM2RjOGFiOWY2ZQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-08-11T13:50:13Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-08-11T13:50:13Z"}, "message": "re PR libfortran/20006 ($ format extension doesn't work)\n\n\tPR libfortran/20006\n\t* gfortran.h: Add is_main_program member to symbol_attribute.\n\t* trans-decl: Add a gfor_fndecl_set_std tree.\n\t(gfc_build_builtin_function_decls): Create it.\n\t(gfc_generate_function_code): Add this call at the beginning of\n\tthe main program.\n\t* trans.c (gfc_generate_code): Move main_program and attr.\n\t* trans.h: Add declaration for gfor_fndecl_set_std.\n\n\t* Makefile.am: Add file runtime/compile_options.c.\n\t* Makefile.in: Regenerate.\n\t* libgfortran.h: Create structure compile_options_t. Define the\n\tcompile_options variable and GFC_STD_ macros.\n\t* runtime/compile_options.c: New file.\n\t* runtime/error.c (notify_std): New function.\n\t* runtime/main.c (init): Call init_compile_options during\n\tinitialization.\n\t* io/format.c: Use the new notify_std function for the $\n\tdescriptor extension.\n\n\t* gfortran.dg/runtime_warning_1.f90: New test.\n\nCo-Authored-By: Steven Bosscher <stevenb@suse.de>\n\nFrom-SVN: r102990", "tree": {"sha": "d2c54ce8afd0ee3ffde950228cb4b59edbde4431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2c54ce8afd0ee3ffde950228cb4b59edbde4431"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b002ba34f1d63cc0130ad44076b462477c631f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b002ba34f1d63cc0130ad44076b462477c631f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74b002ba34f1d63cc0130ad44076b462477c631f"}], "stats": {"total": 212, "additions": 206, "deletions": 6}, "files": [{"sha": "d8b46198ea7536e82476ddfa427ab0688d5fdae8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -1,3 +1,15 @@\n+2005-09-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR libfortran/20006\n+\t* gfortran.h: Add is_main_program member to symbol_attribute.\n+\t* trans-decl: Add a gfor_fndecl_set_std tree.\n+\t(gfc_build_builtin_function_decls): Create it.\n+\t(gfc_generate_function_code): Add this call at the beginning of\n+\tthe main program.\n+\t* trans.c (gfc_generate_code): Move main_program and attr.\n+\t* trans.h: Add declaration for gfor_fndecl_set_std.\n+\n 2005-08-10  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/22143"}, {"sha": "8ff8d5cdbfe96d3820ebbe38d7435058dc268036", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -432,9 +432,11 @@ typedef struct\n      don't have any code associated, and the backend will turn them into\n      thunks to the master function.  */\n   unsigned entry:1;\n+\n   /* Set if this is the master function for a procedure with multiple\n      entry points.  */\n   unsigned entry_master:1;\n+\n   /* Set if this is the master function for a function with multiple\n      entry points where characteristics of the entry points differ.  */\n   unsigned mixed_entry_master:1;\n@@ -446,6 +448,11 @@ typedef struct\n      modification of type or type parameters is permitted.  */\n   unsigned referenced:1;\n \n+  /* Set if the is the symbol for the main program.  This is the least\n+     cumbersome way to communicate this function property without\n+     strcmp'ing with __MAIN everywhere.  */\n+  unsigned is_main_program:1;\n+\n   /* Mutually exclusive multibit attributes.  */\n   ENUM_BITFIELD (gfc_access) access:2;\n   ENUM_BITFIELD (sym_intent) intent:2;"}, {"sha": "3488cde9096c8baeeb83fa0fb24a193dcb430be6", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -83,6 +83,7 @@ tree gfor_fndecl_stop_numeric;\n tree gfor_fndecl_stop_string;\n tree gfor_fndecl_select_string;\n tree gfor_fndecl_runtime_error;\n+tree gfor_fndecl_set_std;\n tree gfor_fndecl_in_pack;\n tree gfor_fndecl_in_unpack;\n tree gfor_fndecl_associated;\n@@ -1941,6 +1942,13 @@ gfc_build_builtin_function_decls (void)\n   /* The runtime_error function does not return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_runtime_error) = 1;\n \n+  gfor_fndecl_set_std =\n+    gfc_build_library_function_decl (get_identifier (PREFIX(\"set_std\")),\n+\t\t\t\t    void_type_node,\n+\t\t\t\t    2,\n+\t\t\t\t    gfc_int4_type_node,\n+\t\t\t\t    gfc_int4_type_node);\n+\n   gfor_fndecl_in_pack = gfc_build_library_function_decl (\n         get_identifier (PREFIX(\"internal_pack\")),\n         pvoid_type_node, 1, pvoid_type_node);\n@@ -2349,6 +2357,24 @@ gfc_generate_function_code (gfc_namespace * ns)\n   /* Now generate the code for the body of this function.  */\n   gfc_init_block (&body);\n \n+  /* If this is the main program and we compile with -pedantic, add a call\n+     to set_std to set up the runtime library Fortran language standard\n+     parameters.  */\n+  if (sym->attr.is_main_program && pedantic)\n+    {\n+      tree arglist, gfc_int4_type_node;\n+\n+      gfc_int4_type_node = gfc_get_int_type (4);\n+      arglist = gfc_chainon_list (NULL_TREE,\n+\t\t\t\t  build_int_cst (gfc_int4_type_node,\n+\t\t\t\t\t\t gfc_option.warn_std));\n+      arglist = gfc_chainon_list (arglist,\n+\t\t\t\t  build_int_cst (gfc_int4_type_node,\n+\t\t\t\t\t\t gfc_option.allow_std));\n+      tmp = gfc_build_function_call (gfor_fndecl_set_std, arglist);\n+      gfc_add_expr_to_block (&body, tmp);\n+    }\n+\n   if (TREE_TYPE (DECL_RESULT (fndecl)) != void_type_node\n       && sym->attr.subroutine)\n     {"}, {"sha": "a3c3ddc48fb7bd09833ebb39db2bb3d601dcf8df", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -650,9 +650,6 @@ gfc_trans_code (gfc_code * code)\n void\n gfc_generate_code (gfc_namespace * ns)\n {\n-  gfc_symbol *main_program = NULL;\n-  symbol_attribute attr;\n-\n   if (ns->is_block_data)\n     {\n       gfc_generate_block_data (ns);\n@@ -662,6 +659,9 @@ gfc_generate_code (gfc_namespace * ns)\n   /* Main program subroutine.  */\n   if (!ns->proc_name)\n     {\n+      gfc_symbol *main_program;\n+      symbol_attribute attr;\n+\n       /* Lots of things get upset if a subroutine doesn't have a symbol, so we\n          make one now.  Hopefully we've set all the required fields.  */\n       gfc_get_symbol (\"MAIN__\", ns, &main_program);\n@@ -670,7 +670,9 @@ gfc_generate_code (gfc_namespace * ns)\n       attr.proc = PROC_UNKNOWN;\n       attr.subroutine = 1;\n       attr.access = ACCESS_PUBLIC;\n+      attr.is_main_program = 1;\n       main_program->attr = attr;\n+\n       /* Set the location to the first line of code.  */\n       if (ns->code)\n \tmain_program->declared_at = ns->code->loc;"}, {"sha": "3c5734d816c8dbc2c9df864dcf8f8b9adb25b02b", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -453,6 +453,7 @@ extern GTY(()) tree gfor_fndecl_stop_numeric;\n extern GTY(()) tree gfor_fndecl_stop_string;\n extern GTY(()) tree gfor_fndecl_select_string;\n extern GTY(()) tree gfor_fndecl_runtime_error;\n+extern GTY(()) tree gfor_fndecl_set_std;\n extern GTY(()) tree gfor_fndecl_in_pack;\n extern GTY(()) tree gfor_fndecl_in_unpack;\n extern GTY(()) tree gfor_fndecl_associated;"}, {"sha": "6af85c344efa59816daad1b4e093e391947f3295", "filename": "gcc/testsuite/gfortran.dg/runtime_warning_1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fruntime_warning_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fruntime_warning_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fruntime_warning_1.f90?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -0,0 +1,17 @@\n+! Test runtime warnings using non-standard $ editing - PR20006.\n+!\n+! Contributor Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+!\n+! { dg-options \"-pedantic\" }\n+! { dg-do run }\n+!\n+     character*5 c\n+     open (42,status='scratch')\n+     write (42,'(A,$)') 'abc' ! { dg-warning \".*descriptor\" \"\" }\n+     write (42,'(A)') 'de'\n+     rewind (42)\n+     read (42,'(A)') c\n+     close (42)\n+     if (c /= 'abcde') call abort ()\n+     end\n+! { dg-warning \".*descriptor\" \"\" 10}"}, {"sha": "bbf3355593988cba62483b86363ba798dc64cd3d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -1,3 +1,18 @@\n+2005-09-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR libfortran/20006\n+\t* Makefile.am: Add file runtime/compile_options.c.\n+\t* Makefile.in: Regenerate.\n+\t* libgfortran.h: Create structure compile_options_t. Define the\n+\tcompile_options variable and GFC_STD_ macros.\n+\t* runtime/compile_options.c: New file.\n+\t* runtime/error.c (notify_std): New function.\n+\t* runtime/main.c (init): Call init_compile_options during\n+\tinitialization.\n+\t* io/format.c: Use the new notify_std function for the $\n+\tdescriptor extension.\n+\n 2005-08-09  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \t* Makefile.am: Add file intrinsics/tty.c to Makefile process.\n \t* Makefile.in: Regenerate."}, {"sha": "4f12f8f3774bacad0a9462460235ace9d1f0df3c", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -94,6 +94,7 @@ runtime/in_unpack_generic.c \\\n runtime/normalize.c\n \n gfor_src= \\\n+runtime/compile_options.c \\\n runtime/environ.c \\\n runtime/error.c \\\n runtime/main.c \\"}, {"sha": "ee68562dd814b2005ed85733a28cf60867c4b4a7", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -67,8 +67,8 @@ am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n-am__objects_1 = environ.lo error.lo main.lo memory.lo pause.lo stop.lo \\\n-\tstring.lo select.lo\n+am__objects_1 = compile_options.lo environ.lo error.lo main.lo \\\n+\tmemory.lo pause.lo stop.lo string.lo select.lo\n am__objects_2 = all_l4.lo all_l8.lo\n am__objects_3 = any_l4.lo any_l8.lo\n am__objects_4 = count_4_l4.lo count_8_l4.lo count_4_l8.lo \\\n@@ -388,6 +388,7 @@ runtime/in_unpack_generic.c \\\n runtime/normalize.c\n \n gfor_src = \\\n+runtime/compile_options.c \\\n runtime/environ.c \\\n runtime/error.c \\\n runtime/main.c \\\n@@ -831,6 +832,9 @@ f2c_specifics.lo: intrinsics/f2c_specifics.F90\n .c.lo:\n \t$(LTCOMPILE) -c -o $@ $<\n \n+compile_options.lo: runtime/compile_options.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o compile_options.lo `test -f 'runtime/compile_options.c' || echo '$(srcdir)/'`runtime/compile_options.c\n+\n environ.lo: runtime/environ.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o environ.lo `test -f 'runtime/environ.c' || echo '$(srcdir)/'`runtime/environ.c\n "}, {"sha": "e075eee255681ecb54e408c397af2251148293dd", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -580,6 +580,7 @@ parse_format_list (void)\n     case FMT_DOLLAR:\n       get_fnode (&head, &tail, FMT_DOLLAR);\n       tail->repeat = 1;\n+      notify_std (GFC_STD_GNU, \"Extension: $ descriptor\");\n       goto between_desc;\n \n     case FMT_T:"}, {"sha": "de17c2f3723066cb9940791594ccf4215afde049", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -295,11 +295,25 @@ typedef struct\n }\n options_t;\n \n-\n extern options_t options;\n internal_proto(options);\n \n \n+/* Compile-time options that will influence the library.  */\n+\n+typedef struct\n+{\n+  int warn_std;\n+  int allow_std;\n+}\n+compile_options_t;\n+\n+extern compile_options_t compile_options;\n+internal_proto(compile_options);\n+\n+\n+\n+\n /* Structure for statement options.  */\n \n typedef struct\n@@ -334,6 +348,18 @@ typedef enum\n error_codes;\n \n \n+/* Flags to specify which standard/extension contains a feature.\n+   Keep them in sync with their counterparts in gcc/fortran/gfortran.h.  */\n+#define GFC_STD_LEGACY          (1<<6) /* Backward compatibility.  */\n+#define GFC_STD_GNU             (1<<5)    /* GNU Fortran extension.  */\n+#define GFC_STD_F2003           (1<<4)    /* New in F2003.  */\n+/* Note that no features were obsoleted nor deleted in F2003.  */\n+#define GFC_STD_F95             (1<<3)    /* New in F95.  */\n+#define GFC_STD_F95_DEL         (1<<2)    /* Deleted in F95.  */\n+#define GFC_STD_F95_OBS         (1<<1)    /* Obsoleted in F95.  */\n+#define GFC_STD_F77             (1<<0)    /* Up to and including F77.  */\n+\n+\n /* The filename and line number don't go inside the globals structure.\n    They are set by the rest of the program and must be linked to.  */\n "}, {"sha": "5b124199663221b615375cd1a211a2875bc7d680", "filename": "libgfortran/runtime/compile_options.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -0,0 +1,61 @@\n+/* Handling of compile-time options that influence the library.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+In addition to the permissions in the GNU General Public License, the\n+Free Software Foundation gives you unlimited permission to link the\n+compiled version of this file into combinations with other programs,\n+and to distribute those combinations without any restriction coming\n+from the use of this file.  (The General Public License restrictions\n+do apply in other respects; for example, they cover modification of\n+the file, and distribution when not linked into a combine\n+executable.)\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with libgfortran; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+\n+#include \"libgfortran.h\"\n+\n+\n+/* Useful compile-time options will be stored in here.  */\n+compile_options_t compile_options;\n+\n+\n+/* Prototypes */\n+extern void set_std (GFC_INTEGER_4, GFC_INTEGER_4);\n+export_proto(set_std);\n+\n+\n+void\n+set_std (GFC_INTEGER_4 warn_std, GFC_INTEGER_4 allow_std)\n+{\n+  compile_options.warn_std = warn_std;\n+  compile_options.allow_std = allow_std;\n+}\n+\n+\n+/* Default values for the compile-time options.  Keep in sync with\n+   gcc/fortran/options.c (gfc_init_options).  */\n+void\n+init_compile_options (void)\n+{\n+  compile_options.warn_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n+    | GFC_STD_F2003 | GFC_STD_LEGACY;\n+  compile_options.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n+    | GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F77 | GFC_STD_GNU | GFC_STD_LEGACY;\n+}"}, {"sha": "b2f29acd851e9e4982ce563e19dfacb3dfe9c7e5", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -489,3 +489,29 @@ generate_error (int family, const char *message)\n \n   runtime_error (message);\n }\n+\n+\n+\n+/* Possibly issue a warning/error about use of a nonstandard (or deleted)\n+   feature.  An error/warning will be issued if the currently selected\n+   standard does not contain the requested bits.  */\n+\n+try\n+notify_std (int std, const char * message)\n+{\n+  int warning;\n+\n+  warning = compile_options.warn_std & std;\n+  if ((compile_options.allow_std & std) != 0 && !warning)\n+    return SUCCESS;\n+\n+  show_locus ();\n+  if (!warning)\n+    {\n+      st_printf (\"Fortran runtime error: %s\\n\", message);\n+      sys_exit (2);\n+    }\n+  else\n+    st_printf (\"Fortran runtime warning: %s\\n\", message);\n+  return FAILURE;\n+}"}, {"sha": "6801aadc5e1da1bf91ca7c539ae981b37db1162e", "filename": "libgfortran/runtime/main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fruntime%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e/libgfortran%2Fruntime%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmain.c?ref=8b67b708f159a6776a07d6eec9c44d3dc8ab9f6e", "patch": "@@ -96,6 +96,7 @@ init (void)\n   init_variables ();\n \n   init_units ();\n+  init_compile_options ();\n \n #ifdef DEBUG\n   /* Check for special command lines.  */"}]}