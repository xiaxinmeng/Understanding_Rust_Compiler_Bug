{"sha": "faf387e135006d0409b250c8a8b8d2f370400156", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFmMzg3ZTEzNTAwNmQwNDA5YjI1MGM4YThiOGQyZjM3MDQwMDE1Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-15T10:03:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-15T10:03:34Z"}, "message": "[multiple changes]\n\n2009-07-15  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb, exp_util.adb, tbuild.adb, tbuild.ads, exp_ch4.adb,\n\texp_aggr.adb: Minor code reorganization (better calling sequence for\n\tMake_Temporary).\n\n2009-07-15  Thomas Quinot  <quinot@adacore.com>\n\n\t* opt.ads: Minor comment edits\n\nFrom-SVN: r149672", "tree": {"sha": "921937b994768bcbd4f12f7d6bd8c5766b0619ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/921937b994768bcbd4f12f7d6bd8c5766b0619ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faf387e135006d0409b250c8a8b8d2f370400156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf387e135006d0409b250c8a8b8d2f370400156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf387e135006d0409b250c8a8b8d2f370400156", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf387e135006d0409b250c8a8b8d2f370400156/comments", "author": null, "committer": null, "parents": [{"sha": "b41e33fe7f1d944ddb3d98e2c1f352fbd6f46604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41e33fe7f1d944ddb3d98e2c1f352fbd6f46604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b41e33fe7f1d944ddb3d98e2c1f352fbd6f46604"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "e4b6bf661bc2e39046ff29c070f314f615ceef7e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -1,3 +1,13 @@\n+2009-07-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb, exp_util.adb, tbuild.adb, tbuild.ads, exp_ch4.adb,\n+\texp_aggr.adb: Minor code reorganization (better calling sequence for\n+\tMake_Temporary).\n+\n+2009-07-15  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* opt.ads: Minor comment edits\n+\n 2009-07-15  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/Makefile.in: Special rule for seh_init.o no longer"}, {"sha": "dfb164b025320da5a4e2417c86cea429a82ac8f8", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -2996,8 +2996,7 @@ package body Exp_Aggr is\n                      --  Create a temporary array of the above subtype which\n                      --  will be used to capture the aggregate assignments.\n \n-                     TmpE : constant Entity_Id :=\n-                              Make_Temporary (Loc, New_Internal_Name ('A'), N);\n+                     TmpE : constant Entity_Id := Make_Temporary (Loc, 'A', N);\n \n                      TmpD : constant Node_Id :=\n                               Make_Object_Declaration (Loc,\n@@ -3587,7 +3586,7 @@ package body Exp_Aggr is\n          Rewrite (Parent (N), Make_Null_Statement (Loc));\n \n       else\n-         Temp := Make_Temporary (Loc, New_Internal_Name ('A'), N);\n+         Temp := Make_Temporary (Loc, 'A', N);\n \n          --  If the type inherits unknown discriminants, use the view with\n          --  known discriminants if available.\n@@ -5202,7 +5201,7 @@ package body Exp_Aggr is\n \n       else\n          Maybe_In_Place_OK := False;\n-         Tmp := Make_Temporary (Loc, New_Internal_Name ('A'), N);\n+         Tmp := Make_Temporary (Loc, 'A', N);\n          Tmp_Decl :=\n            Make_Object_Declaration\n              (Loc,"}, {"sha": "8343ea19b70bc4b6f74942f7a202ee79d00505c0", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -4043,7 +4043,7 @@ package body Exp_Ch4 is\n       --  and replace the conditional expresion by a reference to Cnn.all ???\n \n       if Present (Then_Actions (N)) or else Present (Else_Actions (N)) then\n-         Cnn := Make_Temporary (Loc, New_Internal_Name ('C'), N);\n+         Cnn := Make_Temporary (Loc, 'C', N);\n \n          New_If :=\n            Make_Implicit_If_Statement (N,"}, {"sha": "a8a32fb5114b477e299feb03c40b24c4ecad1852", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -3551,9 +3551,8 @@ package body Exp_Ch7 is\n \n    procedure Wrap_Transient_Expression (N : Node_Id) is\n       Loc  : constant Source_Ptr := Sloc (N);\n-      E    : constant Entity_Id :=\n-               Make_Temporary (Loc, New_Internal_Name ('E'), N);\n-      Etyp : constant Entity_Id := Etype (N);\n+      E    : constant Entity_Id  := Make_Temporary (Loc, 'E', N);\n+      Etyp : constant Entity_Id  := Etype (N);\n \n    begin\n       Insert_Actions (N, New_List ("}, {"sha": "b396ee5dac74170d519f3822d8cd2560c6acfe99", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -4588,7 +4588,7 @@ package body Exp_Util is\n                    or else Nkind (Exp) in N_Op\n                    or else (not Name_Req and then Is_Volatile_Reference (Exp)))\n       then\n-         Def_Id := Make_Temporary (Loc, New_Internal_Name ('R'), Exp);\n+         Def_Id := Make_Temporary (Loc, 'R', Exp);\n          Set_Etype (Def_Id, Exp_Type);\n          Res := New_Reference_To (Def_Id, Loc);\n \n@@ -4606,7 +4606,7 @@ package body Exp_Util is\n       --  the pointer, and then do an explicit dereference on the result.\n \n       elsif Nkind (Exp) = N_Explicit_Dereference then\n-         Def_Id := Make_Temporary (Loc, New_Internal_Name ('R'), Exp);\n+         Def_Id := Make_Temporary (Loc, 'R', Exp);\n          Res :=\n            Make_Explicit_Dereference (Loc, New_Reference_To (Def_Id, Loc));\n \n@@ -4650,7 +4650,7 @@ package body Exp_Util is\n             --  Use a renaming to capture the expression, rather than create\n             --  a controlled temporary.\n \n-            Def_Id := Make_Temporary (Loc, New_Internal_Name ('R'), Exp);\n+            Def_Id := Make_Temporary (Loc, 'R', Exp);\n             Res := New_Reference_To (Def_Id, Loc);\n \n             Insert_Action (Exp,\n@@ -4660,7 +4660,7 @@ package body Exp_Util is\n                 Name                => Relocate_Node (Exp)));\n \n          else\n-            Def_Id := Make_Temporary (Loc, New_Internal_Name ('R'), Exp);\n+            Def_Id := Make_Temporary (Loc, 'R', Exp);\n             Set_Etype (Def_Id, Exp_Type);\n             Res := New_Reference_To (Def_Id, Loc);\n \n@@ -4683,7 +4683,7 @@ package body Exp_Util is\n         and then Nkind (Exp) /= N_Function_Call\n         and then (Name_Req or else not Is_Volatile_Reference (Exp))\n       then\n-         Def_Id := Make_Temporary (Loc, New_Internal_Name ('R'), Exp);\n+         Def_Id := Make_Temporary (Loc, 'R', Exp);\n \n          if Nkind (Exp) = N_Selected_Component\n            and then Nkind (Prefix (Exp)) = N_Function_Call\n@@ -4750,8 +4750,7 @@ package body Exp_Util is\n            and then Ada_Version >= Ada_05\n          then\n             declare\n-               Obj  : constant Entity_Id :=\n-                        Make_Temporary (Loc, New_Internal_Name ('F'), Exp);\n+               Obj  : constant Entity_Id := Make_Temporary (Loc, 'F', Exp);\n                Decl : Node_Id;\n \n             begin\n@@ -4781,7 +4780,7 @@ package body Exp_Util is\n          E := Exp;\n          Insert_Action (Exp, Ptr_Typ_Decl);\n \n-         Def_Id := Make_Temporary (Loc, New_Internal_Name ('R'), Exp);\n+         Def_Id := Make_Temporary (Loc, 'R', Exp);\n          Set_Etype (Def_Id, Exp_Type);\n \n          Res :="}, {"sha": "d184da9aa5483c3dcac293323e184e9c2296fa3e", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -554,7 +554,7 @@ package Opt is\n    --  GNAT\n    --  True when switch -gnateS is used. When True, Source Coverage Obligation\n    --  (SCO) information is generated and output in the ALI file. See unit\n-   --  Sem_SCO for full details.\n+   --  Par_SCO for full details.\n \n    Generating_Code : Boolean := False;\n    --  GNAT"}, {"sha": "7273fde67036430cc3a98a3a2b417276a3ddbb3f", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -442,10 +442,12 @@ package body Tbuild is\n \n    function Make_Temporary\n      (Loc          : Source_Ptr;\n-      Id           : Name_Id;\n+      Id           : Character;\n       Related_Node : Node_Id := Empty) return Node_Id\n    is\n-      Temp : constant Node_Id := Make_Defining_Identifier (Loc, Id);\n+      Temp : constant Node_Id :=\n+               Make_Defining_Identifier (Loc,\n+                 Chars => New_Internal_Name (Id));\n    begin\n       Set_Related_Expression (Temp, Related_Node);\n       return Temp;"}, {"sha": "261776df78f96b5cbb67ac3bfb7345581965f306", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf387e135006d0409b250c8a8b8d2f370400156/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=faf387e135006d0409b250c8a8b8d2f370400156", "patch": "@@ -177,11 +177,12 @@ package Tbuild is\n \n    function Make_Temporary\n      (Loc          : Source_Ptr;\n-      Id           : Name_Id;\n+      Id           : Character;\n       Related_Node : Node_Id := Empty) return Node_Id;\n    --  Create a defining identifier to capture the value of an expression\n    --  or aggregate, and link it to the expression that it replaces, in\n-   --  order to provide better CodePeer reports.\n+   --  order to provide better CodePeer reports. The defining identifier\n+   --  name is obtained by Make_Internal_Name (Id).\n \n    function Make_Unsuppress_Block\n      (Loc   : Source_Ptr;"}]}