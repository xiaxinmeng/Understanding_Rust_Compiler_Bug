{"sha": "7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlZGIzNmFjYmY3NTcxNGQzYjg5ZGI4Y2VlYmY5MjA5YzNkYzAyZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-09T10:17:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-09T10:17:40Z"}, "message": "[multiple changes]\n\n2009-07-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Expression): If the expression is the name of a\n\tfunction in a call, and the function has not been frozen yet, create\n\textra formals for it to ensure that the proper actuals are created\n\twhen expanding the call.\n\n2009-07-09  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-pp.adb (Print): Fix handling of source index when set on a\n\tdeclaration node.\n\nFrom-SVN: r149408", "tree": {"sha": "1c386358ddd8a840fdc3199079dff29ae8481caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c386358ddd8a840fdc3199079dff29ae8481caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/comments", "author": null, "committer": null, "parents": [{"sha": "a4941eecd0c07405fa7f5ee91d74aa6ef302df99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4941eecd0c07405fa7f5ee91d74aa6ef302df99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4941eecd0c07405fa7f5ee91d74aa6ef302df99"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "296c04dc1760039909ccac25c21ab8f16ad5b483", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "patch": "@@ -1,3 +1,15 @@\n+2009-07-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Expression): If the expression is the name of a\n+\tfunction in a call, and the function has not been frozen yet, create\n+\textra formals for it to ensure that the proper actuals are created\n+\twhen expanding the call.\n+\n+2009-07-09  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-pp.adb (Print): Fix handling of source index when set on a\n+\tdeclaration node.\n+\n 2009-07-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* einfo.ads, einfo.adb: New attribute Related_Expression, used to link"}, {"sha": "fffb33f1e531cbc50d3321574b9acc52224f7682", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "patch": "@@ -4012,6 +4012,12 @@ package body Freeze is\n       --  designated type is a private type without full view, the expression\n       --  cannot contain an allocator, so the type is not frozen.\n \n+      --  For a function, we freeze the entity when the subprogram declaration\n+      --  is frozen, but a function call may appear in an initialization proc.\n+      --  before the  declaration  is frozen. We need to generate  the extra\n+      --  formals, if any, to ensure that the expansion of the call includes\n+      --  the proper actuals.\n+\n       Desig_Typ := Empty;\n \n       case Nkind (N) is\n@@ -4033,6 +4039,14 @@ package body Freeze is\n                Desig_Typ := Designated_Type (Etype (Prefix (N)));\n             end if;\n \n+         when N_Identifier =>\n+            if Present (Nam)\n+              and then Ekind (Nam) = E_Function\n+              and then Nkind (Parent (N)) = N_Function_Call\n+            then\n+               Create_Extra_Formals (Nam);\n+            end if;\n+\n          when others =>\n             null;\n       end case;"}, {"sha": "cc88f8e5eb5e96ae268e59eb9dd7570365781ed4", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aedb36acbf75714d3b89db8ceebf9209c3dc02f/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=7aedb36acbf75714d3b89db8ceebf9209c3dc02f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -517,7 +517,7 @@ package body Prj.PP is\n                   Output_String (String_Value_Of (Node, In_Tree));\n \n                   if Source_Index_Of (Node, In_Tree) /= 0 then\n-                     Write_String (\" at \");\n+                     Write_String (\" at\");\n                      Write_String (Source_Index_Of (Node, In_Tree)'Img);\n                   end if;\n \n@@ -532,12 +532,6 @@ package body Prj.PP is\n                      Write_String (\" (\");\n                      Output_String\n                        (Associative_Array_Index_Of (Node, In_Tree));\n-\n-                     if Source_Index_Of (Node, In_Tree) /= 0 then\n-                        Write_String (\" at \");\n-                        Write_String (Source_Index_Of (Node, In_Tree)'Img);\n-                     end if;\n-\n                      Write_String (\")\");\n                   end if;\n \n@@ -580,6 +574,11 @@ package body Prj.PP is\n                      Output_Attribute_Name (Name_Of (Node, In_Tree));\n                   end if;\n \n+                  if Source_Index_Of (Node, In_Tree) /= 0 then\n+                     Write_String (\" at\");\n+                     Write_String (Source_Index_Of (Node, In_Tree)'Img);\n+                  end if;\n+\n                   Write_String (\";\");\n                   Write_End_Of_Line_Comment (Node);\n                   Print (First_Comment_After (Node, In_Tree), Indent);"}]}