{"sha": "98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjNzZlM2M5Yzg3OWNkZDZlMWM4NTk5YjkxOTZiYmY4NmEyMDk3Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-02-13T13:24:42Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-02-13T13:24:42Z"}, "message": "Support reference types\n\nFrom-SVN: r8922", "tree": {"sha": "5ad32c364d8cbe069e54331d0bc53d585f6bb527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ad32c364d8cbe069e54331d0bc53d585f6bb527"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c76e3c9c879cdd6e1c8599b9196bbf86a20977/comments", "author": null, "committer": null, "parents": [{"sha": "f2f49259166ede7bdf8e83d528b82bd633aabb3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f49259166ede7bdf8e83d528b82bd633aabb3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f49259166ede7bdf8e83d528b82bd633aabb3a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "578163011032faca85f3a0bde33f53ae272860e6", "filename": "gcc/convert.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c76e3c9c879cdd6e1c8599b9196bbf86a20977/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c76e3c9c879cdd6e1c8599b9196bbf86a20977/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "patch": "@@ -26,9 +26,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"flags.h\"\n #include \"convert.h\"\n \n-/* Convert EXPR to some pointer type TYPE.\n+/* Convert EXPR to some pointer or reference type TYPE.\n \n-   EXPR must be pointer, integer, enumeral, or literal zero;\n+   EXPR must be pointer, reference, integer, enumeral, or literal zero;\n    in other cases error is called. */\n \n tree\n@@ -45,7 +45,7 @@ convert_to_pointer (type, expr)\n       return expr;\n     }\n \n-  if (form == POINTER_TYPE)\n+  if (form == POINTER_TYPE || form == REFERENCE_TYPE)\n     return build1 (NOP_EXPR, type, expr);\n \n \n@@ -92,7 +92,7 @@ convert_to_real (type, expr)\n     return convert (type, fold (build1 (REALPART_EXPR,\n \t\t\t\t\tTREE_TYPE (TREE_TYPE (expr)), expr)));\n \n-  if (form == POINTER_TYPE)\n+  if (form == POINTER_TYPE || form == REFERENCE_TYPE)\n     error (\"pointer value used where a floating point value was expected\");\n   else\n     error (\"aggregate value used where a float was expected\");\n@@ -120,7 +120,7 @@ convert_to_integer (type, expr)\n   register tree intype = TREE_TYPE (expr);\n   register enum tree_code form = TREE_CODE (intype);\n \n-  if (form == POINTER_TYPE)\n+  if (form == POINTER_TYPE || form == REFERENCE_TYPE)\n     {\n       if (integer_zerop (expr))\n \texpr = integer_zero_node;\n@@ -449,7 +449,7 @@ convert_to_complex (type, expr)\n \t}\n     }\n \n-  if (form == POINTER_TYPE)\n+  if (form == POINTER_TYPE || form == REFERENCE_TYPE)\n     error (\"pointer value used where a complex was expected\");\n   else\n     error (\"aggregate value used where a complex was expected\");"}]}