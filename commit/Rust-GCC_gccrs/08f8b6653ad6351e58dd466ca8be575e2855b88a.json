{"sha": "08f8b6653ad6351e58dd466ca8be575e2855b88a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmOGI2NjUzYWQ2MzUxZTU4ZGQ0NjZjYThiZTU3NWUyODU1Yjg4YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-09-10T15:36:54Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-09-10T15:36:54Z"}, "message": "re PR c++/67318 (Parsing error when using abbreviated integral type names in template parameter pack declaration)\n\n/cp\n2015-09-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67318\n\t* parser.c (cp_parser_parameter_declaration): Consume the ellipsis\n\tand set template_parameter_pack_p also when the type is null.\n\n/testsuite\n2015-09-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67318\n\t* g++.dg/cpp0x/variadic166.C: New.\n\nFrom-SVN: r227650", "tree": {"sha": "d6b0747256243a640b4bfb7b870d293c49062ada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6b0747256243a640b4bfb7b870d293c49062ada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08f8b6653ad6351e58dd466ca8be575e2855b88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f8b6653ad6351e58dd466ca8be575e2855b88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f8b6653ad6351e58dd466ca8be575e2855b88a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f8b6653ad6351e58dd466ca8be575e2855b88a/comments", "author": null, "committer": null, "parents": [{"sha": "dbb68221b64c0174eeb22d878a8e078775ee73bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb68221b64c0174eeb22d878a8e078775ee73bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb68221b64c0174eeb22d878a8e078775ee73bf"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "a9952fcae755d2bc4da1f01e4029dfb78f790aeb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08f8b6653ad6351e58dd466ca8be575e2855b88a", "patch": "@@ -1,3 +1,9 @@\n+2015-09-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/67318\n+\t* parser.c (cp_parser_parameter_declaration): Consume the ellipsis\n+\tand set template_parameter_pack_p also when the type is null.\n+\n 2015-09-09  Mark Wielaard  <mjw@redhat.com>\n \n \t* typeck.c (cp_build_binary_op): Check and warn when nonnull arg"}, {"sha": "64eb5ea88038835ea5b32d19a8b14b6ecaeff2e7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=08f8b6653ad6351e58dd466ca8be575e2855b88a", "patch": "@@ -19613,11 +19613,12 @@ cp_parser_parameter_declaration (cp_parser *parser,\n \t}\n     }\n \n-  /* If the next token is an ellipsis, and we have not seen a\n-     declarator name, and the type of the declarator contains parameter\n-     packs but it is not a TYPE_PACK_EXPANSION, then we actually have\n-     a parameter pack expansion expression. Otherwise, leave the\n-     ellipsis for a C-style variadic function. */\n+  /* If the next token is an ellipsis, and we have not seen a declarator\n+     name, and if either the type of the declarator contains parameter\n+     packs but it is not a TYPE_PACK_EXPANSION or is null (this happens\n+     for, eg, abbreviated integral type names), then we actually have a\n+     parameter pack expansion expression. Otherwise, leave the ellipsis\n+     for a C-style variadic function. */\n   token = cp_lexer_peek_token (parser->lexer);\n   if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n     {\n@@ -19626,11 +19627,12 @@ cp_parser_parameter_declaration (cp_parser *parser,\n       if (type && DECL_P (type))\n         type = TREE_TYPE (type);\n \n-      if (type\n-\t  && TREE_CODE (type) != TYPE_PACK_EXPANSION\n-\t  && declarator_can_be_parameter_pack (declarator)\n-          && (template_parm_p || uses_parameter_packs (type)))\n-        {\n+      if (((type\n+\t    && TREE_CODE (type) != TYPE_PACK_EXPANSION\n+\t    && (template_parm_p || uses_parameter_packs (type)))\n+\t   || (!type && template_parm_p))\n+\t  && declarator_can_be_parameter_pack (declarator))\n+\t{\n \t  /* Consume the `...'. */\n \t  cp_lexer_consume_token (parser->lexer);\n \t  maybe_warn_variadic_templates ();"}, {"sha": "34ad00712ff6b0d5d59ea8ba9a02865b69e82e50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08f8b6653ad6351e58dd466ca8be575e2855b88a", "patch": "@@ -1,3 +1,8 @@\n+2015-09-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/67318\n+\t* g++.dg/cpp0x/variadic166.C: New.\n+\n 2015-09-09  Mark Wielaard  <mjw@redhat.com>\n \n \t* c-c++-common/nonnull-1.c: New test."}, {"sha": "91455cbf03750181183668bab3241a712d24d010", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic166.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic166.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f8b6653ad6351e58dd466ca8be575e2855b88a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic166.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic166.C?ref=08f8b6653ad6351e58dd466ca8be575e2855b88a", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/67318\n+// { dg-do compile { target c++11 } }\n+\n+template<signed...>\n+struct MyStruct1;\n+\n+template<unsigned...>\n+struct MyStruct2;\n+\n+template<short...>\n+struct MyStruct3;\n+\n+template<long...>\n+struct MyStruct4;"}]}