{"sha": "210dedfec3cf0dd04feab88b659d217b7d8c1079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwZGVkZmVjM2NmMGRkMDRmZWFiODhiNjU5ZDIxN2I3ZDhjMTA3OQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2011-01-06T07:34:24Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-01-06T07:34:24Z"}, "message": "re PR tree-optimization/47139 (ice in process_use, at tree-vect-stmts.c:290)\n\n\n        PR tree-optimization/47139\n        * tree-vect-loop.c (vect_is_simple_reduction_1): Check that \n        only the last reduction value is used outside the loop. Update\n        documentation.\n\nFrom-SVN: r168535", "tree": {"sha": "36ea0e958c8f30e21eb30fefe90a361aa48c90c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36ea0e958c8f30e21eb30fefe90a361aa48c90c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/210dedfec3cf0dd04feab88b659d217b7d8c1079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210dedfec3cf0dd04feab88b659d217b7d8c1079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210dedfec3cf0dd04feab88b659d217b7d8c1079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210dedfec3cf0dd04feab88b659d217b7d8c1079/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e4bc20e5107fbf05555ca34d4d6664835845729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4bc20e5107fbf05555ca34d4d6664835845729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e4bc20e5107fbf05555ca34d4d6664835845729"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "33945a3b518eadcdc9eb04970c7a0c82a0289add", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=210dedfec3cf0dd04feab88b659d217b7d8c1079", "patch": "@@ -1,3 +1,10 @@\n+2011-01-06  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/47139\n+\t* tree-vect-loop.c (vect_is_simple_reduction_1): Check that\n+\tonly the last reduction value is used outside the loop.  Update\n+\tdocumentation.\n+\n 2011-01-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/rtems.opt: New."}, {"sha": "564be0f86a6b23e6a8a36174cef07cfadd361089", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=210dedfec3cf0dd04feab88b659d217b7d8c1079", "patch": "@@ -1,3 +1,8 @@\n+2011-01-06  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/47139\n+\t* gcc.dg/vect/pr47139.c: New test.\n+\n 2011-01-05  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47180"}, {"sha": "9e9c751e9712f0d85b95795929697309c21dcde5", "filename": "gcc/testsuite/gcc.dg/vect/pr47139.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr47139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr47139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr47139.c?ref=210dedfec3cf0dd04feab88b659d217b7d8c1079", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+\n+int d;\n+\n+void\n+foo ()\n+{\n+  int a = 0;\n+  unsigned char b;\n+  for (b = 1; b; b++)\n+    {\n+      d = a;\n+      a |= b;\n+    }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "d474688ebecba312228d4c2ac29e4f4201cbf68a", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210dedfec3cf0dd04feab88b659d217b7d8c1079/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=210dedfec3cf0dd04feab88b659d217b7d8c1079", "patch": "@@ -1649,9 +1649,10 @@ report_vect_op (gimple stmt, const char *msg)\n    1. operation is commutative and associative and it is safe to\n       change the order of the computation (if CHECK_REDUCTION is true)\n    2. no uses for a2 in the loop (a2 is used out of the loop)\n-   3. no uses of a1 in the loop besides the reduction operation.\n+   3. no uses of a1 in the loop besides the reduction operation\n+   4. no uses of a1 outside the loop.\n \n-   Condition 1 is tested here.\n+   Conditions 1,4 are tested here.\n    Conditions 2,3 are tested in vect_mark_stmts_to_be_vectorized.\n \n    (2) Detect a cross-iteration def-use cycle in nested loops, i.e.,\n@@ -1702,8 +1703,16 @@ vect_is_simple_reduction_1 (loop_vec_info loop_info, gimple phi,\n       gimple use_stmt = USE_STMT (use_p);\n       if (is_gimple_debug (use_stmt))\n \tcontinue;\n-      if (flow_bb_inside_loop_p (loop, gimple_bb (use_stmt))\n-\t  && vinfo_for_stmt (use_stmt)\n+\n+      if (!flow_bb_inside_loop_p (loop, gimple_bb (use_stmt)))\n+        {\n+          if (vect_print_dump_info (REPORT_DETAILS))\n+            fprintf (vect_dump, \"intermediate value used outside loop.\");\n+\n+          return NULL;\n+        }\n+\n+      if (vinfo_for_stmt (use_stmt)\n \t  && !is_pattern_stmt_p (vinfo_for_stmt (use_stmt)))\n         nloop_uses++;\n       if (nloop_uses > 1)"}]}