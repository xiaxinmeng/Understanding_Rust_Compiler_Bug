{"sha": "18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjYTUyOWIxOTc2YmZkYzdmODRiOTZmOTNkMGFjM2Y0ODNiZjdmOA==", "commit": {"author": {"name": "Jason Eckhardt", "email": "jle@cygnus.com", "date": "2000-05-03T16:39:55Z"}, "committer": {"name": "Jason Eckhardt", "email": "jle@gcc.gnu.org", "date": "2000-05-03T16:39:55Z"}, "message": "flow.c (verify_flow_info): Added two more sanity checks.\n\nTue May  2 00:20:30 2000  Jason Eckhardt  <jle@cygnus.com>\n\n        * flow.c (verify_flow_info): Added two more sanity checks. The\n        first checks that the blocks are numbered consecutively. The second\n        checks that n_basic_blocks is actually equal to the number of\n        basic blocks in the insn chain.\n\nFrom-SVN: r33632", "tree": {"sha": "47b0707ffe3783fb75b890728aeafe96645da837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b0707ffe3783fb75b890728aeafe96645da837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8/comments", "author": null, "committer": null, "parents": [{"sha": "754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "267ce8922418a4895fb7e08c2ca93f6171e8b90d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8", "patch": "@@ -1,3 +1,10 @@\n+Tue May  2 00:20:30 2000  Jason Eckhardt  <jle@cygnus.com>\n+\n+        * flow.c (verify_flow_info): Added two more sanity checks. The\n+        first checks that the blocks are numbered consecutively. The second\n+        checks that n_basic_blocks is actually equal to the number of\n+        basic blocks in the insn chain.\n+\n 2000-05-03  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cpplib.h: Add accessor macros for token lists."}, {"sha": "08f1f0ac297143b5af1fc120f48cef4b08a46cd4", "filename": "gcc/flow.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=18ca529b1976bfdc7f84b96f93d0ac3f483bf7f8", "patch": "@@ -6177,7 +6177,7 @@ verify_flow_info ()\n   const rtx rtx_first = get_insns ();\n   basic_block *bb_info;\n   rtx x;\n-  int i, err = 0;\n+  int i, last_bb_num_seen, num_bb_notes, err = 0;\n \n   bb_info = (basic_block *) xcalloc (max_uid, sizeof (basic_block));\n \n@@ -6340,9 +6340,21 @@ verify_flow_info ()\n \t}\n     }\n \n+  last_bb_num_seen = -1;\n+  num_bb_notes = 0;\n   x = rtx_first;\n   while (x)\n     {\n+      if (GET_CODE (x) == NOTE\n+\t  && NOTE_LINE_NUMBER (x) == NOTE_INSN_BASIC_BLOCK)\n+\t{\n+\t  basic_block bb = NOTE_BASIC_BLOCK (x);\n+\t  num_bb_notes++;\n+\t  if (bb->index != last_bb_num_seen + 1)\n+\t    fatal (\"Basic blocks not numbered consecutively\");\n+\t  last_bb_num_seen = bb->index;\n+\t}\n+\n       if (!bb_info[INSN_UID (x)])\n \t{\n \t  switch (GET_CODE (x))\n@@ -6378,6 +6390,10 @@ verify_flow_info ()\n       x = NEXT_INSN (x);\n     }\n \n+  if (num_bb_notes != n_basic_blocks)\n+    fatal (\"number of bb notes in insn chain (%d) != n_basic_blocks (%d)\",\n+\t   num_bb_notes, n_basic_blocks);\n+\n   if (err)\n     abort ();\n "}]}