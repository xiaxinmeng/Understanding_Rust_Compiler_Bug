{"sha": "a23c217d73659db9a4513f31a22500cdf789d170", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIzYzIxN2Q3MzY1OWRiOWE0NTEzZjMxYTIyNTAwY2RmNzg5ZDE3MA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-04-17T12:36:41Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-04-17T12:36:41Z"}, "message": "merge register_dump_files_1 into register_dump_files and remove more fiddling with properties\n\ngcc/\n\t* pass_manager.h (pass_manager::register_dump_files_1): Remove declaration.\n\t* passes.c (pass_manager::register_dump_files_1): Merge into\n\t(pass_manager::register_dump_files): this, and remove its handling of\n\tproperties since the pass always has the properties anyway.\n\t(pass_manager::pass_manager): Adjust.\n\nFrom-SVN: r209478", "tree": {"sha": "58d93727b425aa09aeadfa12e88bd37c995914c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58d93727b425aa09aeadfa12e88bd37c995914c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a23c217d73659db9a4513f31a22500cdf789d170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23c217d73659db9a4513f31a22500cdf789d170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23c217d73659db9a4513f31a22500cdf789d170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23c217d73659db9a4513f31a22500cdf789d170/comments", "author": null, "committer": null, "parents": [{"sha": "0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd11b40ceca096e288dc5bbaffeb770d70b88f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd11b40ceca096e288dc5bbaffeb770d70b88f3"}], "stats": {"total": 48, "additions": 17, "deletions": 31}, "files": [{"sha": "97ba9dd8f661fd319b005fcb41ea7597b803ec05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23c217d73659db9a4513f31a22500cdf789d170/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23c217d73659db9a4513f31a22500cdf789d170/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a23c217d73659db9a4513f31a22500cdf789d170", "patch": "@@ -1,3 +1,11 @@\n+2014-04-17  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* pass_manager.h (pass_manager::register_dump_files_1): Remove declaration.\n+\t* passes.c (pass_manager::register_dump_files_1): Merge into\n+\t(pass_manager::register_dump_files): this, and remove its handling of\n+\tproperties since the pass always has the properties anyway.\n+\t(pass_manager::pass_manager): Adjust.\n+\n 2014-04-17  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* pass_manager.h (pass_manager::register_dump_files_1): Adjust."}, {"sha": "9f4d67bc84c429c6e204ae70e17ea006c77624c6", "filename": "gcc/pass_manager.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23c217d73659db9a4513f31a22500cdf789d170/gcc%2Fpass_manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23c217d73659db9a4513f31a22500cdf789d170/gcc%2Fpass_manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpass_manager.h?ref=a23c217d73659db9a4513f31a22500cdf789d170", "patch": "@@ -91,8 +91,7 @@ class pass_manager\n \n private:\n   void set_pass_for_id (int id, opt_pass *pass);\n-  void register_dump_files_1 (opt_pass *pass);\n-  void register_dump_files (opt_pass *pass, int properties);\n+  void register_dump_files (opt_pass *pass);\n \n private:\n   context *m_ctxt;"}, {"sha": "7508771350c31c0f56fb1e40a86306d03b7edcba", "filename": "gcc/passes.c", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23c217d73659db9a4513f31a22500cdf789d170/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23c217d73659db9a4513f31a22500cdf789d170/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=a23c217d73659db9a4513f31a22500cdf789d170", "patch": "@@ -706,37 +706,24 @@ pass_manager::register_one_dump_file (opt_pass *pass)\n   free (CONST_CAST (char *, full_name));\n }\n \n-/* Recursive worker function for register_dump_files.  */\n+/* Register the dump files for the pass_manager starting at PASS. */\n \n void\n-pass_manager::\n-register_dump_files_1 (opt_pass *pass)\n+pass_manager::register_dump_files (opt_pass *pass)\n {\n   do\n     {\n       if (pass->name && pass->name[0] != '*')\n         register_one_dump_file (pass);\n \n       if (pass->sub)\n-        register_dump_files_1 (pass->sub);\n+        register_dump_files (pass->sub);\n \n       pass = pass->next;\n     }\n   while (pass);\n }\n \n-/* Register the dump files for the pass_manager starting at PASS.\n-   PROPERTIES reflects the properties that are guaranteed to be available at\n-   the beginning of the pipeline.  */\n-\n-void\n-pass_manager::\n-register_dump_files (opt_pass *pass,int properties)\n-{\n-  pass->properties_required |= properties;\n-  register_dump_files_1 (pass);\n-}\n-\n struct pass_registry\n {\n   const char* unique_name;\n@@ -1536,19 +1523,11 @@ pass_manager::pass_manager (context *ctxt)\n #undef TERMINATE_PASS_LIST\n \n   /* Register the passes with the tree dump code.  */\n-  register_dump_files (all_lowering_passes, PROP_gimple_any);\n-  register_dump_files (all_small_ipa_passes,\n-\t\t       PROP_gimple_any | PROP_gimple_lcf | PROP_gimple_leh\n-\t\t       | PROP_cfg);\n-  register_dump_files (all_regular_ipa_passes,\n-\t\t       PROP_gimple_any | PROP_gimple_lcf | PROP_gimple_leh\n-\t\t       | PROP_cfg);\n-  register_dump_files (all_late_ipa_passes,\n-\t\t       PROP_gimple_any | PROP_gimple_lcf | PROP_gimple_leh\n-\t\t       | PROP_cfg);\n-  register_dump_files (all_passes,\n-\t\t       PROP_gimple_any | PROP_gimple_lcf | PROP_gimple_leh\n-\t\t       | PROP_cfg);\n+  register_dump_files (all_lowering_passes);\n+  register_dump_files (all_small_ipa_passes);\n+  register_dump_files (all_regular_ipa_passes);\n+  register_dump_files (all_late_ipa_passes);\n+  register_dump_files (all_passes);\n }\n \n /* If we are in IPA mode (i.e., current_function_decl is NULL), call"}]}