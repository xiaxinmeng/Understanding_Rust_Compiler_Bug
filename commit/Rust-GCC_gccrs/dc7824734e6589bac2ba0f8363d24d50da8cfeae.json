{"sha": "dc7824734e6589bac2ba0f8363d24d50da8cfeae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM3ODI0NzM0ZTY1ODliYWMyYmEwZjgzNjNkMjRkNTBkYThjZmVhZQ==", "commit": {"author": {"name": "Stephan Bergmann", "email": "sbergman@redhat.com", "date": "2020-10-26T10:11:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-26T10:15:45Z"}, "message": "libstdc++: Add missing exception-specifications in shared_ptr\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/shared_ptr_base.h\n\t(_Sp_counted_base::_M_add_ref_lock_nothrow(): Add noexcept to\n\tdefinitions to match declaration.\n\t(__shared_count(const __weak_count&, nothrow_t)): Add noexcept\n\tto declaration to match definition.", "tree": {"sha": "f3d78cad5943d98effe12acd227688bfb769b7d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3d78cad5943d98effe12acd227688bfb769b7d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc7824734e6589bac2ba0f8363d24d50da8cfeae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7824734e6589bac2ba0f8363d24d50da8cfeae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc7824734e6589bac2ba0f8363d24d50da8cfeae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7824734e6589bac2ba0f8363d24d50da8cfeae/comments", "author": {"login": "stbergmann", "id": 2386025, "node_id": "MDQ6VXNlcjIzODYwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2386025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stbergmann", "html_url": "https://github.com/stbergmann", "followers_url": "https://api.github.com/users/stbergmann/followers", "following_url": "https://api.github.com/users/stbergmann/following{/other_user}", "gists_url": "https://api.github.com/users/stbergmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/stbergmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stbergmann/subscriptions", "organizations_url": "https://api.github.com/users/stbergmann/orgs", "repos_url": "https://api.github.com/users/stbergmann/repos", "events_url": "https://api.github.com/users/stbergmann/events{/privacy}", "received_events_url": "https://api.github.com/users/stbergmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02a8253980d04638085237915498acd04297fbbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a8253980d04638085237915498acd04297fbbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a8253980d04638085237915498acd04297fbbf"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "543783ba034ea9b60e72791e04de377a205bd5b3", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7824734e6589bac2ba0f8363d24d50da8cfeae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7824734e6589bac2ba0f8363d24d50da8cfeae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=dc7824734e6589bac2ba0f8363d24d50da8cfeae", "patch": "@@ -227,7 +227,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<>\n     inline bool\n     _Sp_counted_base<_S_single>::\n-    _M_add_ref_lock_nothrow()\n+    _M_add_ref_lock_nothrow() noexcept\n     {\n       if (_M_use_count == 0)\n \treturn false;\n@@ -238,7 +238,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<>\n     inline bool\n     _Sp_counted_base<_S_mutex>::\n-    _M_add_ref_lock_nothrow()\n+    _M_add_ref_lock_nothrow() noexcept\n     {\n       __gnu_cxx::__scoped_lock sentry(*this);\n       if (__gnu_cxx::__exchange_and_add_dispatch(&_M_use_count, 1) == 0)\n@@ -252,7 +252,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<>\n     inline bool\n     _Sp_counted_base<_S_atomic>::\n-    _M_add_ref_lock_nothrow()\n+    _M_add_ref_lock_nothrow() noexcept\n     {\n       // Perform lock-free add-if-not-zero operation.\n       _Atomic_word __count = _M_get_use_count();\n@@ -693,7 +693,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       explicit __shared_count(const __weak_count<_Lp>& __r);\n \n       // Does not throw if __r._M_get_use_count() == 0, caller must check.\n-      explicit __shared_count(const __weak_count<_Lp>& __r, std::nothrow_t);\n+      explicit\n+      __shared_count(const __weak_count<_Lp>& __r, std::nothrow_t) noexcept;\n \n       ~__shared_count() noexcept\n       {"}]}