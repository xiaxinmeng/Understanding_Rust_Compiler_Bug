{"sha": "ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1ZjQzNjRiNGE1MDljNmZhOGNkYTkyNTA3MmU2ZjM4YTRjYjdkMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-07-28T18:24:29Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-07-28T18:24:29Z"}, "message": "pa.c (hppa_builtin_saveregs): Use get_varargs_alias_set and tag the spill mems.\n\n        * pa.c (hppa_builtin_saveregs):  Use get_varargs_alias_set\n        and tag the spill mems.\n        (hppa_va_start): New.\n        (hppa_va_arg): New.\n        * pa.h (EXPAND_BUILTIN_VA_START): New.\n        (EXPAND_BUILTIN_VA_ARG): New.\n\nFrom-SVN: r28317", "tree": {"sha": "349870baac565227f556eddad1e86b51aa5efe05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/349870baac565227f556eddad1e86b51aa5efe05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/comments", "author": null, "committer": null, "parents": [{"sha": "fc2acc87279925c07492b5ff6eb29a6ecbf1bf84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2acc87279925c07492b5ff6eb29a6ecbf1bf84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc2acc87279925c07492b5ff6eb29a6ecbf1bf84"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "7dad4a763a7115394dfaaae78f9d03e580391c41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "patch": "@@ -1,3 +1,12 @@\n+Wed Jul 28 11:23:48 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* pa.c (hppa_builtin_saveregs):  Use get_varargs_alias_set\n+\tand tag the spill mems.\n+\t(hppa_va_start): New.\n+\t(hppa_va_arg): New.\n+\t* pa.h (EXPAND_BUILTIN_VA_START): New.\n+\t(EXPAND_BUILTIN_VA_ARG): New.\n+\n Wed Jul 28 11:22:21 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* mn10300.c (mn10300_builtin_saveregs): Use get_varargs_alias_set"}, {"sha": "92c5dae1f6910fbaff17eda396a826ce0c6e76e5", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "patch": "@@ -4283,6 +4283,7 @@ hppa_builtin_saveregs ()\n   dest = gen_rtx_MEM (BLKmode,\n \t\t      plus_constant (current_function_internal_arg_pointer,\n \t\t\t\t     -16));\n+  MEM_ALIAS_SET (dest) = get_varargs_alias_set ();\n   move_block_from_reg (23, dest, 4, 4 * UNITS_PER_WORD);\n \n   /* move_block_from_reg will emit code to store the argument registers\n@@ -4308,6 +4309,73 @@ hppa_builtin_saveregs ()\n \t\t\t\t    offset, 0, 0, OPTAB_LIB_WIDEN));\n }\n \n+void\n+hppa_va_start (stdarg_p, valist, nextarg)\n+     int stdarg_p;\n+     tree valist;\n+     rtx nextarg;\n+{\n+  nextarg = expand_builtin_saveregs ();\n+  std_expand_builtin_va_start (stdarg_p, valist, nextarg);\n+}\n+\n+rtx\n+hppa_va_arg (valist, type)\n+     tree valist, type;\n+{\n+  HOST_WIDE_INT align, size, ofs;\n+  tree t, ptr, pptr;\n+\n+  /* Compute the rounded size of the type.  */\n+  align = PARM_BOUNDARY / BITS_PER_UNIT;\n+  size = int_size_in_bytes (type);\n+\n+  ptr = build_pointer_type (type);\n+\n+  /* \"Large\" types are passed by reference.  */\n+  if (size > 8)\n+    {\n+      t = build (PREDECREMENT_EXPR, TREE_TYPE (valist), valist, \n+\t\t build_int_2 (POINTER_SIZE / BITS_PER_UNIT, 0));\n+      TREE_SIDE_EFFECTS (t) = 1;\n+\n+      pptr = build_pointer_type (ptr);\n+      t = build1 (NOP_EXPR, pptr, t);\n+      TREE_SIDE_EFFECTS (t) = 1;\n+\n+      t = build1 (INDIRECT_REF, ptr, t);\n+      TREE_SIDE_EFFECTS (t) = 1;\n+    }\n+  else\n+    {\n+      t = build (PLUS_EXPR, TREE_TYPE (valist), valist,\n+\t\t build_int_2 (-size, -1));\n+\n+      /* ??? Copied from va-pa.h, but we probably don't need to align\n+\t to word size, since we generate and preserve that invariant.  */\n+      t = build (BIT_AND_EXPR, TREE_TYPE (valist), t,\n+\t\t build_int_2 ((size > 4 ? -8 : -4), -1));\n+\n+      t = build (MODIFY_EXPR, TREE_TYPE (valist), valist, t);\n+      TREE_SIDE_EFFECTS (t) = 1;\n+      \n+      ofs = (8 - size) % 4;\n+      if (ofs)\n+\t{\n+\t  t = build (PLUS_EXPR, TREE_TYPE (valist), t, build_int_2 (ofs, 0));\n+\t  TREE_SIDE_EFFECTS (t) = 1;\n+\t}\n+\n+      t = build1 (NOP_EXPR, ptr, t);\n+      TREE_SIDE_EFFECTS (t) = 1;\n+    }\n+\n+  /* Calculate!  */\n+  return expand_expr (t, NULL_RTX, Pmode, EXPAND_NORMAL);\n+}\n+\n+\n+\n /* This routine handles all the normal conditional branch sequences we\n    might need to generate.  It handles compare immediate vs compare\n    register, nullification of delay slots, varying length branches,"}, {"sha": "612993ec5efa993da8c8ada3eec705fd25c59ec3", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=ca5f4364b4a509c6fa8cda925072e6f38a4cb7d3", "patch": "@@ -1219,6 +1219,17 @@ extern union tree_node *current_function_decl;\n extern struct rtx_def *hppa_builtin_saveregs ();\n #define EXPAND_BUILTIN_SAVEREGS() hppa_builtin_saveregs ()\n \n+/* Implement `va_start' for varargs and stdarg.  */\n+\n+extern void hppa_va_start();\n+#define EXPAND_BUILTIN_VA_START(stdarg, valist, nextarg) \\\n+  hppa_va_start (stdarg, valist, nextarg)\n+\n+/* Implement `va_arg'.  */\n+\n+extern struct rtx_def *hppa_va_arg();\n+#define EXPAND_BUILTIN_VA_ARG(valist, type) \\\n+  hppa_va_arg (valist, type)\n \f\n /* Addressing modes, and classification of registers for them. \n "}]}