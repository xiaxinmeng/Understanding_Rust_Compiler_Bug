{"sha": "36aa0bf595347b210b80a80be4fc561673fa5deb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZhYTBiZjU5NTM0N2IyMTBiODBhODBiZTRmYzU2MTY3M2ZhNWRlYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-06T16:54:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-06T16:54:41Z"}, "message": "(expand_inline_function): Don't call convert_to_mode unless we need to...\n\n(expand_inline_function): Don't call convert_to_mode unless we need\nto; some converstions of VOIDmode objects can mess them up.\n\nFrom-SVN: r4359", "tree": {"sha": "b1c811c53af37163a9a5e819529d239afa4b9ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1c811c53af37163a9a5e819529d239afa4b9ac1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36aa0bf595347b210b80a80be4fc561673fa5deb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36aa0bf595347b210b80a80be4fc561673fa5deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36aa0bf595347b210b80a80be4fc561673fa5deb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36aa0bf595347b210b80a80be4fc561673fa5deb/comments", "author": null, "committer": null, "parents": [{"sha": "619fdc9c7a57494aed214046d1a06e59a614ce4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619fdc9c7a57494aed214046d1a06e59a614ce4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619fdc9c7a57494aed214046d1a06e59a614ce4a"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "6a7fef56a9f9f379c2b3bbe1616430154d36492c", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36aa0bf595347b210b80a80be4fc561673fa5deb/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36aa0bf595347b210b80a80be4fc561673fa5deb/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=36aa0bf595347b210b80a80be4fc561673fa5deb", "patch": "@@ -1,5 +1,5 @@\n /* Procedure integration for GNU CC.\n-   Copyright (C) 1988, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1991, 1993 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -1242,12 +1242,17 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t  arg_vals[i] = XEXP (stack_slot, 0);\n \t}\n       else if (GET_CODE (loc) != MEM)\n-\t/* The mode if LOC and ARG can differ if LOC was a variable\n-\t   that had its mode promoted via PROMOTED_MODE.  */\n-\targ_vals[i] = convert_to_mode (GET_MODE (loc),\n-\t\t\t\t       expand_expr (arg, NULL_RTX, mode,\n-\t\t\t\t\t\t    EXPAND_SUM),\n-\t\t\t\t       TREE_UNSIGNED (TREE_TYPE (formal)));\n+\t{\n+\t  if (GET_MODE (loc) != TYPE_MODE (TREE_TYPE (arg)))\n+\t    /* The mode if LOC and ARG can differ if LOC was a variable\n+\t       that had its mode promoted via PROMOTED_MODE.  */\n+\t    arg_vals[i] = convert_to_mode (GET_MODE (loc),\n+\t\t\t\t\t   expand_expr (arg, NULL_RTX, mode,\n+\t\t\t\t\t\t\tEXPAND_SUM),\n+\t\t\t\t\t   TREE_UNSIGNED (TREE_TYPE (formal)));\n+\t  else\n+\t    arg_vals[i] = expand_expr (arg, NULL_RTX, mode, EXPAND_SUM);\n+\t}\n       else\n \targ_vals[i] = 0;\n "}]}