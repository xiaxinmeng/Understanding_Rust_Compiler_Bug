{"sha": "94b01be34735b1618001ef5aae4bc7585baf3182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiMDFiZTM0NzM1YjE2MTgwMDFlZjVhYWU0YmM3NTg1YmFmMzE4Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-14T10:31:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-14T10:31:32Z"}, "message": "varasm.c (struct varasm_status): Change x_const_rtx_sym_hash_table to array of pool_constnat pointers.\n\n\t* varasm.c (struct varasm_status): Change x_const_rtx_sym_hash_table\n\tto array of pool_constnat pointers.\n\t(struct pool_constant): Add next_sym and label members.\n\t(struct pool_sym): Remove.\n\t(init_varasm_status): Change pool_sym into pool_constant.\n\t(mark_pool_constant): Mark pc->label string as well.\n\t(mark_pool_sym_hash_table): Remove.\n\t(mark_varasm_status): Remove it from caller as well.\n\t(free_varasm_status): Don't free pool_sym structures.\n\t(force_const_mem): Don't allocate pool_sym structure, instead\n\tfill pool->label and chain it into rtx_sym hash table.\n\t(find_pool_constant, mark_constant_pool): Use pool_constant instead\n\tof pool_sym.\n\nFrom-SVN: r37451", "tree": {"sha": "85dd6b90df7b539c4c5d766822ce71cb2177a169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85dd6b90df7b539c4c5d766822ce71cb2177a169"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94b01be34735b1618001ef5aae4bc7585baf3182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b01be34735b1618001ef5aae4bc7585baf3182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b01be34735b1618001ef5aae4bc7585baf3182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b01be34735b1618001ef5aae4bc7585baf3182/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "716120a70a1bae9f403454944ac14ddf07059bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716120a70a1bae9f403454944ac14ddf07059bb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/716120a70a1bae9f403454944ac14ddf07059bb7"}], "stats": {"total": 91, "additions": 36, "deletions": 55}, "files": [{"sha": "75a8fe481d88d8eeac08789820ed46cdd4a2733f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b01be34735b1618001ef5aae4bc7585baf3182/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b01be34735b1618001ef5aae4bc7585baf3182/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94b01be34735b1618001ef5aae4bc7585baf3182", "patch": "@@ -1,3 +1,19 @@\n+2000-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* varasm.c (struct varasm_status): Change x_const_rtx_sym_hash_table\n+\tto array of pool_constnat pointers.\n+\t(struct pool_constant): Add next_sym and label members.\n+\t(struct pool_sym): Remove.\n+\t(init_varasm_status): Change pool_sym into pool_constant.\n+\t(mark_pool_constant): Mark pc->label string as well.\n+\t(mark_pool_sym_hash_table): Remove.\n+\t(mark_varasm_status): Remove it from caller as well.\n+\t(free_varasm_status): Don't free pool_sym structures.\n+\t(force_const_mem): Don't allocate pool_sym structure, instead\n+\tfill pool->label and chain it into rtx_sym hash table.\n+\t(find_pool_constant, mark_constant_pool): Use pool_constant instead\n+\tof pool_sym.\n+\n 2000-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* reload1.c (emit_input_reload_insns): Honour forcing of constants"}, {"sha": "b4a8c2e976e2a187c44c0865244f5708ffa3a426", "filename": "gcc/varasm.c", "status": "modified", "additions": 20, "deletions": 55, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b01be34735b1618001ef5aae4bc7585baf3182/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b01be34735b1618001ef5aae4bc7585baf3182/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=94b01be34735b1618001ef5aae4bc7585baf3182", "patch": "@@ -101,7 +101,7 @@ struct varasm_status\n      so each function gets its own constants-pool that comes right before\n      it.  */\n   struct constant_descriptor **x_const_rtx_hash_table;\n-  struct pool_sym **x_const_rtx_sym_hash_table;\n+  struct pool_constant **x_const_rtx_sym_hash_table;\n \n   /* Pointers to first and last constant in pool.  */\n   struct pool_constant *x_first_pool, *x_last_pool;\n@@ -184,7 +184,6 @@ static void asm_output_aligned_bss\tPARAMS ((FILE *, tree, const char *,\n #endif\n #endif /* BSS_SECTION_ASM_OP */\n static void mark_pool_constant          PARAMS ((struct pool_constant *));\n-static void mark_pool_sym_hash_table\tPARAMS ((struct pool_sym **));\n static void mark_const_hash_entry\tPARAMS ((void *));\n static void asm_emit_uninitialised\tPARAMS ((tree, const char*, int, int));\n \f\n@@ -3220,25 +3219,16 @@ output_constant_def_contents (exp, reloc, labelno)\n struct pool_constant\n {\n   struct constant_descriptor *desc;\n-  struct pool_constant *next;\n-  enum machine_mode mode;\n+  struct pool_constant *next, *next_sym;\n+  char *label;\n   rtx constant;\n+  enum machine_mode mode;\n   int labelno;\n   int align;\n   int offset;\n   int mark;\n };\n \n-/* Structure used to maintain hash table mapping symbols used to their\n-   corresponding constants.  */\n-\n-struct pool_sym\n-{\n-  char *label;\n-  struct pool_constant *pool;\n-  struct pool_sym *next;\n-};\n-\n /* Hash code for a SYMBOL_REF with CONSTANT_POOL_ADDRESS_P true.\n    The argument is XSTR (... , 0)  */\n \n@@ -3258,8 +3248,8 @@ init_varasm_status (f)\n     = ((struct constant_descriptor **)\n        xcalloc (MAX_RTX_HASH_TABLE, sizeof (struct constant_descriptor *)));\n   p->x_const_rtx_sym_hash_table\n-    = ((struct pool_sym **)\n-       xcalloc (MAX_RTX_HASH_TABLE, sizeof (struct pool_sym *)));\n+    = ((struct pool_constant **)\n+       xcalloc (MAX_RTX_HASH_TABLE, sizeof (struct pool_constant *)));\n \n   p->x_first_pool = p->x_last_pool = 0;\n   p->x_pool_offset = 0;\n@@ -3276,24 +3266,11 @@ mark_pool_constant (pc)\n     {\n       ggc_mark (pc);\n       ggc_mark_rtx (pc->constant);\n+      ggc_mark_string (pc->label);\n       pc = pc->next;\n     }\n }\n \n-/* Mark PPS for GC.  */\n-\n-static void\n-mark_pool_sym_hash_table (pps)\n-     struct pool_sym **pps;\n-{\n-  struct pool_sym *ps;\n-  int i;\n-\n-  for (i = 0; i < MAX_RTX_HASH_TABLE; ++i)\n-    for (ps = pps[i]; ps ; ps = ps->next)\n-      ggc_mark_string (ps->label);\n-}\n-\n /* Mark P for GC.  */\n \n void\n@@ -3304,7 +3281,6 @@ mark_varasm_status (p)\n     return;\n \n   mark_pool_constant (p->x_first_pool);\n-  mark_pool_sym_hash_table (p->x_const_rtx_sym_hash_table);\n   ggc_mark_rtx (p->x_const_double_chain);\n }\n \n@@ -3325,21 +3301,13 @@ free_varasm_status (f)\n   for (i = 0; i < MAX_RTX_HASH_TABLE; ++i)\n     {\n       struct constant_descriptor* cd;\n-      struct pool_sym *ps;\n \n       cd = p->x_const_rtx_hash_table[i];\n       while (cd) {\n \tstruct constant_descriptor* next = cd->next;\n \tfree (cd);\n \tcd = next;\n       }\n-\n-      ps = p->x_const_rtx_sym_hash_table[i];\n-      while (ps) {\n-\tstruct pool_sym *next = ps->next;\n-\tfree (ps);\n-\tps = next;\n-      }\n     }\n \n   free (p->x_const_rtx_hash_table);\n@@ -3562,7 +3530,6 @@ force_const_mem (mode, x)\n   if (found == 0)\n     {\n       register struct pool_constant *pool;\n-      register struct pool_sym *sym;\n       int align;\n \n       /* No constant equal to X is known to have been output.\n@@ -3615,11 +3582,9 @@ force_const_mem (mode, x)\n \n       /* Add label to symbol hash table.  */\n       hash = SYMHASH (found);\n-      sym = (struct pool_sym *) xmalloc (sizeof (struct pool_sym));\n-      sym->label = found;\n-      sym->pool = pool;\n-      sym->next = const_rtx_sym_hash_table[hash];\n-      const_rtx_sym_hash_table[hash] = sym;\n+      pool->label = found;\n+      pool->next_sym = const_rtx_sym_hash_table[hash];\n+      const_rtx_sym_hash_table[hash] = pool;\n     }\n \n   /* We have a symbol name; construct the SYMBOL_REF and the MEM.  */\n@@ -3653,13 +3618,13 @@ find_pool_constant (f, addr)\n      struct function *f;\n      rtx addr;\n {\n-  struct pool_sym *sym;\n+  struct pool_constant *pool;\n   const char *label = XSTR (addr, 0);\n \n-  for (sym = f->varasm->x_const_rtx_sym_hash_table[SYMHASH (label)]; sym;\n-       sym = sym->next)\n-    if (sym->label == label)\n-      return sym->pool;\n+  for (pool = f->varasm->x_const_rtx_sym_hash_table[SYMHASH (label)]; pool;\n+       pool = pool->next_sym)\n+    if (pool->label == label)\n+      return pool;\n \n   abort ();\n }\n@@ -3866,7 +3831,7 @@ mark_constant_pool ()\n      not clear that 2'd level references can happen. */\n   for (pool = first_pool; pool; pool = pool->next)\n     {\n-      struct pool_sym *sym;\n+      struct pool_constant *tem;\n       const char *label;\n \n       /* skip unmarked entries; no insn refers to them. */\n@@ -3879,10 +3844,10 @@ mark_constant_pool ()\n       label = XSTR (pool->constant, 0);\n \n       /* Be sure the symbol's value is marked. */\n-      for (sym = const_rtx_sym_hash_table[SYMHASH (label)]; sym; \n-           sym = sym->next)\n-\t  if (sym->label == label)\n-\t    sym->pool->mark = 1;\n+      for (tem = const_rtx_sym_hash_table[SYMHASH (label)]; tem; \n+           tem = tem->next)\n+\t  if (tem->label == label)\n+\t    tem->mark = 1;\n       /* If we didn't find it, there's something truly wrong here, but it\n \t will be announced by the assembler. */\n     }"}]}