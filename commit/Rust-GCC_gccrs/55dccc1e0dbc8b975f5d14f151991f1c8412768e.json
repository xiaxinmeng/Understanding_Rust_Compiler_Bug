{"sha": "55dccc1e0dbc8b975f5d14f151991f1c8412768e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkY2NjMWUwZGJjOGI5NzVmNWQxNGYxNTE5OTFmMWM4NDEyNzY4ZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-12-08T15:51:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-12-08T15:51:25Z"}, "message": "compiler: make Slice_construction_expression::do_flatten idempotent\n    \n    Because of the way we handle call expressions with multiple results,\n    it's possible for expressions to be flattened more than once.  In the\n    case of Slice_construction_expression, allocating the slice storage\n    multiple times caused a compiler crash as one of the\n    Temporary_statement's wound up not getting a backend expression.\n    \n    Test case is https://golang.org/cl/34020.\n    \n    Reviewed-on: https://go-review.googlesource.com/34026\n\nFrom-SVN: r243442", "tree": {"sha": "916bbce811ecf95c3694babe08a797b550aaef06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/916bbce811ecf95c3694babe08a797b550aaef06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55dccc1e0dbc8b975f5d14f151991f1c8412768e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55dccc1e0dbc8b975f5d14f151991f1c8412768e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55dccc1e0dbc8b975f5d14f151991f1c8412768e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55dccc1e0dbc8b975f5d14f151991f1c8412768e/comments", "author": null, "committer": null, "parents": [{"sha": "04bfa1e4691afb9eb0edcd9e80ec1e542628c7d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04bfa1e4691afb9eb0edcd9e80ec1e542628c7d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04bfa1e4691afb9eb0edcd9e80ec1e542628c7d4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "dbba68fb26058e9c86c4c707a5ca1c09eb4733b8", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55dccc1e0dbc8b975f5d14f151991f1c8412768e/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55dccc1e0dbc8b975f5d14f151991f1c8412768e/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=55dccc1e0dbc8b975f5d14f151991f1c8412768e", "patch": "@@ -1,4 +1,4 @@\n-08d221726e3f50cb197a931ba385fac67f66a028\n+7a941ba323660ec7034cd92d4eab466024a3c72c\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "899fc9b4053e799ace2da38bd6515c79fbe463b7", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55dccc1e0dbc8b975f5d14f151991f1c8412768e/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55dccc1e0dbc8b975f5d14f151991f1c8412768e/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=55dccc1e0dbc8b975f5d14f151991f1c8412768e", "patch": "@@ -12951,8 +12951,8 @@ Slice_construction_expression::do_flatten(Gogo* gogo, Named_object* no,\n   // Base class flattening first\n   this->Array_construction_expression::do_flatten(gogo, no, inserter);\n \n-  // Create an stack-allocated storage temp if storage won't escape\n-  if (!this->storage_escapes_)\n+  // Create a stack-allocated storage temp if storage won't escape\n+  if (!this->storage_escapes_ && this->slice_storage_ == NULL)\n     {\n       Location loc = this->location();\n       this->array_val_ = create_array_val();"}]}