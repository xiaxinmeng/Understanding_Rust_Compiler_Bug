{"sha": "cf3a909cf45514cd294e483a7c86ef16c82ffa96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YzYTkwOWNmNDU1MTRjZDI5NGU0ODNhN2M4NmVmMTZjODJmZmE5Ng==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-04-16T19:20:22Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-04-24T13:54:11Z"}, "message": "amdgcn: Testsuite tweaks\n\nThe vector size chosen here is for V64DImode. The concept of this setting is\nnot well adapted for GCN, in which the vector size varies with the number of\nlanes, not the other way around, but this is ok for now.\n\n2020-04-24  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp (available_vector_sizes): Add amdgcn.\n\t(check_effective_target_vect_cmdline_needed): Disable for amdgcn.\n\t(check_effective_target_vect_pack_trunc): Add amdgcn.", "tree": {"sha": "98a86b71aea62c4922728c591e0da7d15eda7a72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98a86b71aea62c4922728c591e0da7d15eda7a72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf3a909cf45514cd294e483a7c86ef16c82ffa96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3a909cf45514cd294e483a7c86ef16c82ffa96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3a909cf45514cd294e483a7c86ef16c82ffa96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3a909cf45514cd294e483a7c86ef16c82ffa96/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00082ff88cf4e25fc1041e9effd1c92fbaaa8d62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00082ff88cf4e25fc1041e9effd1c92fbaaa8d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00082ff88cf4e25fc1041e9effd1c92fbaaa8d62"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "ec141198a81acdb22b4bab0d8aedc346e34d6145", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3a909cf45514cd294e483a7c86ef16c82ffa96/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3a909cf45514cd294e483a7c86ef16c82ffa96/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf3a909cf45514cd294e483a7c86ef16c82ffa96", "patch": "@@ -1,3 +1,9 @@\n+2020-04-24  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* lib/target-supports.exp (available_vector_sizes): Add amdgcn.\n+\t(check_effective_target_vect_cmdline_needed): Disable for amdgcn.\n+\t(check_effective_target_vect_pack_trunc): Add amdgcn.\n+\n 2020-04-24 Iain Sandoe <iain@sandoe.co.uk>\n \n \tPR c++/94288"}, {"sha": "f416d5cafda6cd5f963817c51545b713d239fe9d", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3a909cf45514cd294e483a7c86ef16c82ffa96/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3a909cf45514cd294e483a7c86ef16c82ffa96/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=cf3a909cf45514cd294e483a7c86ef16c82ffa96", "patch": "@@ -3261,7 +3261,8 @@ proc check_effective_target_vect_cmdline_needed { } {\n \t\t     || [check_effective_target_powerpc_altivec]))\n \t     || ([istarget sparc*-*-*] && [check_effective_target_sparc_vis])\n \t     || ([istarget arm*-*-*] && [check_effective_target_arm_neon])\n-\t     || [istarget aarch64*-*-*] } {\n+\t     || [istarget aarch64*-*-*]\n+             || [istarget amdgcn*-*-*]} {\n \t    return 0\n \t} else {\n \t    return 1\n@@ -6806,7 +6807,8 @@ proc check_effective_target_vect_pack_trunc { } {\n \t     || ([istarget mips*-*-*]\n \t\t && [et-is-effective-target mips_msa])\n \t     || ([istarget s390*-*-*]\n-\t\t && [check_effective_target_s390_vx]) }}]\n+\t\t && [check_effective_target_s390_vx])\n+             || [istarget amdgcn*-*-*] }}]\n }\n \n # Return 1 if the target plus current options supports a vector\n@@ -7231,6 +7233,8 @@ proc available_vector_sizes { } {\n \t}\n     } elseif { [istarget sparc*-*-*] } {\n \tlappend result 64\n+    } elseif { [istarget amdgcn*-*-*] } {\n+\tlappend result 4096\n     } else {\n \t# The traditional default asumption.\n \tlappend result 128"}]}