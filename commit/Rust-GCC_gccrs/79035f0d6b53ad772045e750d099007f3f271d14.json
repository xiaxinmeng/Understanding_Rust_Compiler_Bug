{"sha": "79035f0d6b53ad772045e750d099007f3f271d14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwMzVmMGQ2YjUzYWQ3NzIwNDVlNzUwZDA5OTAwN2YzZjI3MWQxNA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-29T20:22:40Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-29T20:22:40Z"}, "message": "configure.in: Convert to autoconf 2.57, gratuitous stylistic cleanup, rename to configure.ac.\n\n\t* configure.in: Convert to autoconf 2.57, gratuitous stylistic\n\tcleanup, rename to configure.ac.\n\t* configure.ac: Renamed from configure.in.\n\t* config.h.in: Rebuilt with autoheader 2.57.\n\t* configure: Rebuilt with autoconf 2.57\n\t* README: Update to reflect rename of configure.in to configure.ac.\n\nFrom-SVN: r78668", "tree": {"sha": "154386c3509235bb7e097c2f593d492f311ef528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154386c3509235bb7e097c2f593d492f311ef528"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79035f0d6b53ad772045e750d099007f3f271d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79035f0d6b53ad772045e750d099007f3f271d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79035f0d6b53ad772045e750d099007f3f271d14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79035f0d6b53ad772045e750d099007f3f271d14/comments", "author": null, "committer": null, "parents": [{"sha": "c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1"}], "stats": {"total": 8688, "additions": 6055, "deletions": 2633}, "files": [{"sha": "57f0dce0d9778ffe473229b3c951f96db25b71af", "filename": "intl/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79035f0d6b53ad772045e750d099007f3f271d14/intl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79035f0d6b53ad772045e750d099007f3f271d14/intl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FChangeLog?ref=79035f0d6b53ad772045e750d099007f3f271d14", "patch": "@@ -1,3 +1,12 @@\n+2004-02-29  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in: Convert to autoconf 2.57, gratuitous stylistic\n+\tcleanup, rename to configure.ac.\n+\t* configure.ac: Renamed from configure.in.\n+\t* config.h.in: Rebuilt with autoheader 2.57.\n+\t* configure: Rebuilt with autoconf 2.57\n+\t* README: Update to reflect rename of configure.in to configure.ac.\n+\n 2003-07-07  Zack Weinberg  <zack@codesourcery.com>\n \n \t* README: Update."}, {"sha": "27811e42c373e3f0fe688c79306c24be6155dbe6", "filename": "intl/README", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79035f0d6b53ad772045e750d099007f3f271d14/intl%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79035f0d6b53ad772045e750d099007f3f271d14/intl%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FREADME?ref=79035f0d6b53ad772045e750d099007f3f271d14", "patch": "@@ -18,6 +18,6 @@ gettext developers first.  However, note the following:\n   \"gettextize\" from the files that gettext 0.12.1 installs in\n   $(prefix)/share/aclocal.\n \n-* configure.in, config.intl.in, and Makefile.in were written for this\n+* configure.ac, config.intl.in, and Makefile.in were written for this\n   directory layout, by Zack Weinberg <zack@codesourcery.com>.  Please\n   direct patches for these files to gcc-patches@gcc.gnu.org."}, {"sha": "7b73f01c02c783ba8d093bfddb736fe67817ce92", "filename": "intl/config.h.in", "status": "modified", "additions": 162, "deletions": 130, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79035f0d6b53ad772045e750d099007f3f271d14/intl%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79035f0d6b53ad772045e750d099007f3f271d14/intl%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfig.h.in?ref=79035f0d6b53ad772045e750d099007f3f271d14", "patch": "@@ -1,211 +1,243 @@\n-/* config.h.in.  Generated automatically from configure.in by autoheader 2.13.  */\n+/* config.h.in.  Generated from configure.ac by autoheader.  */\n \n-/* Define if using alloca.c.  */\n+/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP\n+   systems. This function is required for `alloca.c' support on those systems.\n+   */\n+#undef CRAY_STACKSEG_END\n+\n+/* Define to 1 if using `alloca.c'. */\n #undef C_ALLOCA\n \n-/* Define to empty if the keyword does not work.  */\n-#undef const\n+/* Define because we depend on libiconv. */\n+#undef DEPENDS_ON_LIBICONV\n \n-/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.\n-   This function is required for alloca.c support on those systems.  */\n-#undef CRAY_STACKSEG_END\n+/* Define to 1 if translation of program messages to the user's native\n+   language is requested. */\n+#undef ENABLE_NLS\n+\n+/* Define to enable relocation. */\n+#undef ENABLE_RELOCATABLE\n \n-/* Define if you have alloca, as a function or macro.  */\n+/* Define to 1 if you have `alloca', as a function or macro. */\n #undef HAVE_ALLOCA\n \n-/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */\n+/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).\n+   */\n #undef HAVE_ALLOCA_H\n \n-/* Define if you have a working `mmap' system call.  */\n-#undef HAVE_MMAP\n+/* Define to 1 if you have the <argz.h> header file. */\n+#undef HAVE_ARGZ_H\n \n-/* Define as __inline if that's what the C compiler calls it.  */\n-#undef inline\n+/* Define if the GNU dcgettext() function is already present or preinstalled.\n+   */\n+#undef HAVE_DCGETTEXT\n \n-/* Define to `long' if <sys/types.h> doesn't define.  */\n-#undef off_t\n+/* Define to 1 if you have the `feof_unlocked' function. */\n+#undef HAVE_FEOF_UNLOCKED\n \n-/* Define to `unsigned' if <sys/types.h> doesn't define.  */\n-#undef size_t\n+/* Define to 1 if you have the `fgets_unlocked' function. */\n+#undef HAVE_FGETS_UNLOCKED\n \n-/* If using the C implementation of alloca, define if you know the\n-   direction of stack growth for your system; otherwise it will be\n-   automatically deduced at run-time.\n- STACK_DIRECTION > 0 => grows toward higher addresses\n- STACK_DIRECTION < 0 => grows toward lower addresses\n- STACK_DIRECTION = 0 => direction of growth unknown\n- */\n-#undef STACK_DIRECTION\n+/* Define to 1 if you have the `getcwd' function. */\n+#undef HAVE_GETCWD\n \n-/* Define if you have the ANSI C header files.  */\n-#undef STDC_HEADERS\n+/* Define to 1 if you have the `getc_unlocked' function. */\n+#undef HAVE_GETC_UNLOCKED\n \n-/* Define if you have the __argz_count function.  */\n-#undef HAVE___ARGZ_COUNT\n+/* Define to 1 if you have the `getegid' function. */\n+#undef HAVE_GETEGID\n \n-/* Define if you have the __argz_next function.  */\n-#undef HAVE___ARGZ_NEXT\n+/* Define to 1 if you have the `geteuid' function. */\n+#undef HAVE_GETEUID\n \n-/* Define if you have the __argz_stringify function.  */\n-#undef HAVE___ARGZ_STRINGIFY\n+/* Define to 1 if you have the `getgid' function. */\n+#undef HAVE_GETGID\n \n-/* Define if you have the __fsetlocking function.  */\n-#undef HAVE___FSETLOCKING\n+/* Define to 1 if you have the `getpagesize' function. */\n+#undef HAVE_GETPAGESIZE\n \n-/* Define if you have the feof_unlocked function.  */\n-#undef HAVE_FEOF_UNLOCKED\n+/* Define if the GNU gettext() function is already present or preinstalled. */\n+#undef HAVE_GETTEXT\n \n-/* Define if you have the fgets_unlocked function.  */\n-#undef HAVE_FGETS_UNLOCKED\n+/* Define to 1 if you have the `getuid' function. */\n+#undef HAVE_GETUID\n \n-/* Define if you have the getc_unlocked function.  */\n-#undef HAVE_GETC_UNLOCKED\n+/* Define if you have the iconv() function. */\n+#undef HAVE_ICONV\n \n-/* Define if you have the getcwd function.  */\n-#undef HAVE_GETCWD\n+/* Define if <inttypes.h> exists and doesn't clash with <sys/types.h>. */\n+#undef HAVE_INTTYPES_H\n \n-/* Define if you have the getegid function.  */\n-#undef HAVE_GETEGID\n+/* Define if <inttypes.h> exists, doesn't clash with <sys/types.h>, and\n+   declares uintmax_t. */\n+#undef HAVE_INTTYPES_H_WITH_UINTMAX\n \n-/* Define if you have the geteuid function.  */\n-#undef HAVE_GETEUID\n+/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */\n+#undef HAVE_LANGINFO_CODESET\n \n-/* Define if you have the getgid function.  */\n-#undef HAVE_GETGID\n+/* Define if your <locale.h> file defines LC_MESSAGES. */\n+#undef HAVE_LC_MESSAGES\n \n-/* Define if you have the getpagesize function.  */\n-#undef HAVE_GETPAGESIZE\n+/* Define to 1 if you have the <limits.h> header file. */\n+#undef HAVE_LIMITS_H\n \n-/* Define if you have the getuid function.  */\n-#undef HAVE_GETUID\n+/* Define to 1 if you have the <locale.h> header file. */\n+#undef HAVE_LOCALE_H\n+\n+/* Define to 1 if you have the <malloc.h> header file. */\n+#undef HAVE_MALLOC_H\n \n-/* Define if you have the mempcpy function.  */\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the `mempcpy' function. */\n #undef HAVE_MEMPCPY\n \n-/* Define if you have the munmap function.  */\n+/* Define to 1 if you have a working `mmap' system call. */\n+#undef HAVE_MMAP\n+\n+/* Define to 1 if you have the `munmap' function. */\n #undef HAVE_MUNMAP\n \n-/* Define if you have the putenv function.  */\n+/* Define to 1 if you have the <nl_types.h> header file. */\n+#undef HAVE_NL_TYPES_H\n+\n+/* Define to 1 if you have the `putenv' function. */\n #undef HAVE_PUTENV\n \n-/* Define if you have the setenv function.  */\n+/* Define to 1 if you have the `setenv' function. */\n #undef HAVE_SETENV\n \n-/* Define if you have the setlocale function.  */\n+/* Define to 1 if you have the `setlocale' function. */\n #undef HAVE_SETLOCALE\n \n-/* Define if you have the stpcpy function.  */\n+/* Define to 1 if you have the <stddef.h> header file. */\n+#undef HAVE_STDDEF_H\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define if <stdint.h> exists, doesn't clash with <sys/types.h>, and declares\n+   uintmax_t. */\n+#undef HAVE_STDINT_H_WITH_UINTMAX\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the `stpcpy' function. */\n #undef HAVE_STPCPY\n \n-/* Define if you have the strcasecmp function.  */\n+/* Define to 1 if you have the `strcasecmp' function. */\n #undef HAVE_STRCASECMP\n \n-/* Define if you have the strdup function.  */\n+/* Define to 1 if you have the `strdup' function. */\n #undef HAVE_STRDUP\n \n-/* Define if you have the strtoul function.  */\n-#undef HAVE_STRTOUL\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n \n-/* Define if you have the tsearch function.  */\n-#undef HAVE_TSEARCH\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n \n-/* Define if you have the <argz.h> header file.  */\n-#undef HAVE_ARGZ_H\n+/* Define to 1 if you have the `strtoul' function. */\n+#undef HAVE_STRTOUL\n \n-/* Define if you have the <limits.h> header file.  */\n-#undef HAVE_LIMITS_H\n+/* Define to 1 if you have the <sys/param.h> header file. */\n+#undef HAVE_SYS_PARAM_H\n \n-/* Define if you have the <locale.h> header file.  */\n-#undef HAVE_LOCALE_H\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n \n-/* Define if you have the <malloc.h> header file.  */\n-#undef HAVE_MALLOC_H\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n \n-/* Define if you have the <nl_types.h> header file.  */\n-#undef HAVE_NL_TYPES_H\n+/* Define to 1 if you have the `tsearch' function. */\n+#undef HAVE_TSEARCH\n \n-/* Define if you have the <stddef.h> header file.  */\n-#undef HAVE_STDDEF_H\n+/* Define if you have the 'uintmax_t' type in <stdint.h> or <inttypes.h>. */\n+#undef HAVE_UINTMAX_T\n \n-/* Define if you have the <stdlib.h> header file.  */\n-#undef HAVE_STDLIB_H\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n \n-/* Define if you have the <string.h> header file.  */\n-#undef HAVE_STRING_H\n+/* Define if you have the unsigned long long type. */\n+#undef HAVE_UNSIGNED_LONG_LONG\n \n-/* Define if you have the <sys/param.h> header file.  */\n-#undef HAVE_SYS_PARAM_H\n+/* Define to 1 if you have the `__argz_count' function. */\n+#undef HAVE___ARGZ_COUNT\n \n-/* Define if you have the <unistd.h> header file.  */\n-#undef HAVE_UNISTD_H\n+/* Define to 1 if you have the `__argz_next' function. */\n+#undef HAVE___ARGZ_NEXT\n \n-/* Define if <inttypes.h> exists, doesn't clash with <sys/types.h>,\n-       and declares uintmax_t.  */\n-#undef HAVE_INTTYPES_H_WITH_UINTMAX\n+/* Define to 1 if you have the `__argz_stringify' function. */\n+#undef HAVE___ARGZ_STRINGIFY\n \n-/* Define if <stdint.h> exists, doesn't clash with <sys/types.h>,\n-       and declares uintmax_t.  */\n-#undef HAVE_STDINT_H_WITH_UINTMAX\n+/* Define to 1 if you have the `__fsetlocking' function. */\n+#undef HAVE___FSETLOCKING\n \n-/* Define if you have the unsigned long long type. */\n-#undef HAVE_UNSIGNED_LONG_LONG\n+/* Define as const if the declaration of iconv() needs const. */\n+#undef ICONV_CONST\n \n /* Define if integer division by zero raises signal SIGFPE. */\n #undef INTDIV0_RAISES_SIGFPE\n \n-/* Define to unsigned long or unsigned long long\n-       if <stdint.h> and <inttypes.h> don't define. */\n-#undef uintmax_t\n-\n-/* Define if you have the 'uintmax_t' type in <stdint.h> or <inttypes.h>. */\n-#undef HAVE_UINTMAX_T\n+/* Define because this is libintl. */\n+#undef IN_LIBINTL\n \n-/* Define if <inttypes.h> exists and doesn't clash with <sys/types.h>. */\n-#undef HAVE_INTTYPES_H\n+/* Define because this is a library. */\n+#undef IN_LIBRARY\n \n-/* Define if <inttypes.h> exists and defines unusable PRI* macros. */\n-#undef PRI_MACROS_BROKEN\n+/* Define if there is no xmalloc. */\n+#undef NO_XMALLOC\n \n-/* Define if you have the iconv() function. */\n-#undef HAVE_ICONV\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n \n-/* Define as const if the declaration of iconv() needs const. */\n-#undef ICONV_CONST\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n \n-/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */\n-#undef HAVE_LANGINFO_CODESET\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n \n-/* Define if your <locale.h> file defines LC_MESSAGES. */\n-#undef HAVE_LC_MESSAGES\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n \n-/* Define to 1 if translation of program messages to the user's native language\n-   is requested. */\n-#undef ENABLE_NLS\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n \n-/* Define if the GNU gettext() function is already present or preinstalled. */\n-#undef HAVE_GETTEXT\n+/* Define if <inttypes.h> exists and defines unusable PRI* macros. */\n+#undef PRI_MACROS_BROKEN\n \n-/* Define if the GNU dcgettext() function is already present or preinstalled. */\n-#undef HAVE_DCGETTEXT\n+/* If using the C implementation of alloca, define if you know the\n+   direction of stack growth for your system; otherwise it will be\n+   automatically deduced at run-time.\n+        STACK_DIRECTION > 0 => grows toward higher addresses\n+        STACK_DIRECTION < 0 => grows toward lower addresses\n+        STACK_DIRECTION = 0 => direction of growth unknown */\n+#undef STACK_DIRECTION\n \n-/* Define because this is libintl. */\n-#undef IN_LIBINTL\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n \n-/* Define because this is a library. */\n-#undef IN_LIBRARY\n+/* Define to empty if `const' does not conform to ANSI C. */\n+#undef const\n \n-/* Define because we depend on libiconv. */\n-#undef DEPENDS_ON_LIBICONV\n+/* Define as `__inline' if that's what the C compiler calls it, or to nothing\n+   if it is not supported. */\n+#undef inline\n \n-/* Define to enable relocation. */\n-#undef ENABLE_RELOCATABLE\n+/* Define to `long' if <sys/types.h> does not define. */\n+#undef off_t\n \n-/* Define if there is no xmalloc. */\n-#undef NO_XMALLOC\n+/* Define this entry point correctly. */\n+#undef relocate\n \n /* Define this entry point correctly. */\n #undef set_relocation_prefix\n \n-/* Define this entry point correctly. */\n-#undef relocate\n+/* Define to `unsigned' if <sys/types.h> does not define. */\n+#undef size_t\n \n+/* Define to unsigned long or unsigned long long if <stdint.h> and\n+   <inttypes.h> don't define. */\n+#undef uintmax_t"}, {"sha": "b0667213486e229aaf29c57156e59fc1af0791ed", "filename": "intl/configure", "status": "modified", "additions": 5866, "deletions": 2491, "changes": 8357, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79035f0d6b53ad772045e750d099007f3f271d14/intl%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79035f0d6b53ad772045e750d099007f3f271d14/intl%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure?ref=79035f0d6b53ad772045e750d099007f3f271d14"}, {"sha": "0f54336ba860cd250a7dd635d9df6fe9cc56f57b", "filename": "intl/configure.ac", "status": "renamed", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79035f0d6b53ad772045e750d099007f3f271d14/intl%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79035f0d6b53ad772045e750d099007f3f271d14/intl%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure.ac?ref=79035f0d6b53ad772045e750d099007f3f271d14", "patch": "@@ -1,10 +1,11 @@\n-AC_PREREQ(2.13)\n-AC_INIT(gettext.c)\n+AC_PREREQ(2.57)\n+AC_INIT\n+AC_CONFIG_SRCDIR(gettext.c)\n AC_CONFIG_HEADER(config.h)\n AM_GNU_GETTEXT_VERSION(0.12.1)\n AM_GNU_GETTEXT\n \n-dnl This replaces the extensive use of DEFS in the original Makefile.in.\n+# This replaces the extensive use of DEFS in the original Makefile.in.\n AC_DEFINE(IN_LIBINTL, 1, [Define because this is libintl.])\n AC_DEFINE(IN_LIBRARY, 1, [Define because this is a library.])\n AC_DEFINE(DEPENDS_ON_LIBICONV, 1, [Define because we depend on libiconv.])\n@@ -15,13 +16,18 @@ AC_DEFINE(set_relocation_prefix, libintl_set_relocation_prefix,\n AC_DEFINE(relocate, libintl_relocate,\n [Define this entry point correctly.])\n \n-dnl Additional info for config.intl.\n-LIBINTL_DEP=   AC_SUBST(LIBINTL_DEP)\n-INCINTL=       AC_SUBST(INCINTL)\n+# Additional info for config.intl.\n+AC_SUBST(LIBINTL_DEP)\n+AC_SUBST(INCINTL)\n \n-if test $USE_INCLUDED_LIBINTL = yes; then\n-  LIBINTL_DEP='${top_builddir}/intl/libintl.a'\n-  INCINTL='-I${top_builddir}/intl'\n-fi\n+LIBINTL_DEP=\n+INCINTL=\n+case $USE_INCLUDED_LIBINTL in\n+  yes)\n+    LIBINTL_DEP='${top_builddir}/intl/libintl.a'\n+    INCINTL='-I${top_builddir}/intl'\n+    ;;\n+esac\n \n-AC_OUTPUT(Makefile config.intl)\n+AC_CONFIG_FILES(Makefile config.intl)\n+AC_OUTPUT", "previous_filename": "intl/configure.in"}]}