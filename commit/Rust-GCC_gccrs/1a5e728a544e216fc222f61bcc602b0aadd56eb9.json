{"sha": "1a5e728a544e216fc222f61bcc602b0aadd56eb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE1ZTcyOGE1NDRlMjE2ZmMyMjJmNjFiY2M2MDJiMGFhZGQ1NmViOQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-22T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-22T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "26895d4635bb8c7b351908f594bfbc29a2a235a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26895d4635bb8c7b351908f594bfbc29a2a235a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a5e728a544e216fc222f61bcc602b0aadd56eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5e728a544e216fc222f61bcc602b0aadd56eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5e728a544e216fc222f61bcc602b0aadd56eb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5e728a544e216fc222f61bcc602b0aadd56eb9/comments", "author": null, "committer": null, "parents": [{"sha": "a477f1445b3093d01e68cd4c096c5776ad769e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a477f1445b3093d01e68cd4c096c5776ad769e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a477f1445b3093d01e68cd4c096c5776ad769e11"}], "stats": {"total": 132, "additions": 131, "deletions": 1}, "files": [{"sha": "2d4bb74d6b35f1e5d68e37e61548bd052cff3bc1", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,8 @@\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR other/98409\n+\t* Makefile.in: Fix exeext variable case.\n+\n 2020-12-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* server.cc (crash_signal): Don't use strsignal."}, {"sha": "12690d11b18044f339d2c44e05dc60e34ed19d7b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,15 @@\n+2020-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Add new error for quoted\n+\tfilenames.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Test it.\n+\n+2020-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/test_email.py: New test.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n 2020-12-17  Nathan Sidwell  <nathan@acm.org>\n \n \tPR bootstrap/98300"}, {"sha": "88db61e45889a986835b8f77df44daa4d95283d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,32 @@\n+2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98353\n+\t* gimplify.c (gimplify_init_ctor_eval_range): Gimplify value before\n+\tstoring it into cref.\n+\n+2020-12-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin-driver.c (darwin_find_version_from_kernel):\n+\tCompute the minor OS version from the minor kernel version.\n+\n+2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98407\n+\t* fold-const.c (native_encode_initializer): When handling flexible\n+\tarray members, fix up computation of length for memset.  Also remove\n+\t\" - o\" as o is always guaranteed to be 0 in this code path.\n+\n+2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98383\n+\t* gimplify.c (struct gimplify_omp_ctx): Add in_for_exprs flag.\n+\t(gimple_add_tmp_var): For addressable temporaries appearing in\n+\tsimd lb, b or incr expressions, don't add a private clause unless\n+\tit is seen also outside of those expressions in the simd body.\n+\t(omp_notice_variable): Likewise.\n+\t(gimplify_omp_for): Set and reset in_for_exprs around gimplification\n+\tof lb, b or incr expressions.\n+\n 2020-12-20  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/xtensa.md (bswapsi2, bswapdi2): New patterns."}, {"sha": "f7fef04d926adc73692514eb11427dbce2341696", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1 +1 @@\n-20201221\n+20201222"}, {"sha": "e49d1a14b9381cdfeacf0f7c8baf6cef903a18bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,15 @@\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* module.cc (create_dirs): Add logging.\n+\t(finish_module_processing): Unlink before rename.\n+\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98412\n+\t* mapper-client.cc: INCLUDE_STRING, INCLUDE_VECTOR.\n+\t(module_client::open_module_client): Avoid std::stoul.\n+\t* mapper-resolver.cc: INCLUDE_STRING, INCLUDE_VECTOR.\n+\n 2020-12-18  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* cp-lang.c (cxx_get_decl_init): New."}, {"sha": "0ee098f3970efbbb0ed0680710a7fc3176a0f1f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,18 @@\n+2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98353\n+\t* g++.dg/opt/pr98353.C: New test.\n+\n+2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98407\n+\t* gcc.c-torture/compile/pr98407.c: New test.\n+\n+2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98383\n+\t* g++.dg/gomp/pr98383.C: New test.\n+\n 2020-12-20  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* gcc.target/xtensa/bswap.c: New test."}, {"sha": "99fd9319ab1b4dc72d8e0efb3601a0982ae83c00", "filename": "libcody/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/libcody%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/libcody%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,29 @@\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98412\n+\t* client.cc: Include cstdlib.\n+\t* server.cc: Include cstdlib.\n+\n+2020-12-21  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* netserver.cc: Include <netinet/in.h>.\n+\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (RANLIB): New var.\n+\t* Makesub.in (libcody.a): Apply RANLIB.\n+\t* configure.ac: Call AC_PROG_RANLIB.\n+\t* configure: Rebuilt.\n+\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* buffer.cc (MessageBuffer::AppendInteger): Workaround\n+\tto_string's non-ubiquity.\n+\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* netclient.cc: Add netinet.h.\n+\n 2020-12-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* configure.ac: Add --enable-host-shared."}, {"sha": "19f881be015dfd45bb713916759ee4cbfeb95c7a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,14 @@\n+2020-12-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c (d_expression_1): Recognize qualified-id\n+\ton RHS of dt/pt.\n+\t* testsuite/demangle-expected: Add test.\n+\n+2020-12-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c (d_unqualified_name): Clear is_expression.\n+\t* testsuite/demangle-expected: Add tests.\n+\n 2020-11-25  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* configure: Regenerate."}, {"sha": "c1d241c11d6013b2671b7e74c401cd92ea70a649", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5e728a544e216fc222f61bcc602b0aadd56eb9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5e728a544e216fc222f61bcc602b0aadd56eb9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1a5e728a544e216fc222f61bcc602b0aadd56eb9", "patch": "@@ -1,3 +1,23 @@\n+2020-12-21  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/bits/c++config (_GLIBCXX_FLOAT_IS_IEEE_BINARY_32):\n+\tDefine this macro.\n+\t(_GLIBCXX_DOUBLE_IS_IEEE_BINARY_64): Likewise.\n+\t* include/std/charconv (to_chars): Use these macros to\n+\tconditionally hide the overloads for floating-point types.\n+\t* src/c++17/floating_to_chars.cc: Use the macros to\n+\tconditionally disable this file.\n+\t(floating_type_traits<float>): Remove redundant static assert.\n+\t(floating_type_traits<double>): Likewise.\n+\t* testsuite/20_util/to_chars/double.cc: Run this test only on\n+\tieee-floats effective targets.\n+\t* testsuite/20_util/to_chars/float.cc: Likewise.\n+\t* testsuite/20_util/to_chars/long_double.cc: Likewise.\n+\t* testsuite/lib/libstdc++.exp\n+\t(check_effective_target_ieee-floats): Define new proc for\n+\tdetecting whether float and double have the IEEE binary32 and\n+\tbinary64 formats.\n+\n 2020-12-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/semaphore: Fix indentation."}]}