{"sha": "e330aa5b3568877fb26267fa0f277de320821b14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzMGFhNWIzNTY4ODc3ZmIyNjI2N2ZhMGYyNzdkZTMyMDgyMWIxNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-05-27T16:35:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-05-27T16:35:36Z"}, "message": "re PR libstdc++/49187 (parallel mode compilation broken - unqualified lookup? (bisected))\n\n2011-05-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/49187\n\t* include/parallel/losertree.h: Add missing using declarations\n\tof _Base::_M_comp.\n\t* include/parallel/algobase.h: Include <parallel/algorithmfwd.h>.\n\t* include/parallel/multiway_merge.h: Include <parallel/\n\tmultiseq_selection.h>, forward declare __merge_advance.\n\t* include/parallel/multiseq_selection.h: Don't include <parallel/\n\tsort.h> here.\n\t* include/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp: Fix\n\tqualification of upper_bound.\n\n\t* testsuite/ext/pb_ds/regression/tree_no_data_map_rand_debug.cc:\n\tUse dg-require-debug-mode.\n\t* testsuite/ext/pb_ds/regression/tree_data_map_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/priority_queue_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/trie_no_data_map_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/trie_data_map_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/list_update_no_data_map_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/list_update_data_map_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/hash_no_data_map_rand_debug.cc:\n\tLikewise.\n\t* testsuite/ext/pb_ds/regression/hash_data_map_rand_debug.cc:\n\tLikewise.\n\n\t* include/parallel/algo.h: Minor uglification fixes.\n\nFrom-SVN: r174342", "tree": {"sha": "1051bb4048ccce0663659df76760928b03612b7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1051bb4048ccce0663659df76760928b03612b7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e330aa5b3568877fb26267fa0f277de320821b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e330aa5b3568877fb26267fa0f277de320821b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e330aa5b3568877fb26267fa0f277de320821b14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e330aa5b3568877fb26267fa0f277de320821b14/comments", "author": null, "committer": null, "parents": [{"sha": "0219becc2c40e0cd43515e6015fe833cf2d0cf8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0219becc2c40e0cd43515e6015fe833cf2d0cf8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0219becc2c40e0cd43515e6015fe833cf2d0cf8f"}], "stats": {"total": 106, "additions": 76, "deletions": 30}, "files": [{"sha": "5be06f5dfead4381e4b590b75f5cce8479225266", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,3 +1,37 @@\n+2011-05-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/49187\n+\t* include/parallel/losertree.h: Add missing using declarations\n+\tof _Base::_M_comp.\n+\t* include/parallel/algobase.h: Include <parallel/algorithmfwd.h>.\n+\t* include/parallel/multiway_merge.h: Include <parallel/\n+\tmultiseq_selection.h>, forward declare __merge_advance.\n+\t* include/parallel/multiseq_selection.h: Don't include <parallel/\n+\tsort.h> here.\n+\t* include/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp: Fix\n+\tqualification of upper_bound.\n+\n+\t* testsuite/ext/pb_ds/regression/tree_no_data_map_rand_debug.cc:\n+\tUse dg-require-debug-mode.\n+\t* testsuite/ext/pb_ds/regression/tree_data_map_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/priority_queue_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/trie_no_data_map_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/trie_data_map_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/list_update_no_data_map_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/list_update_data_map_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/hash_no_data_map_rand_debug.cc:\n+\tLikewise.\n+\t* testsuite/ext/pb_ds/regression/hash_data_map_rand_debug.cc:\n+\tLikewise.\n+\n+\t* include/parallel/algo.h: Minor uglification fixes.\n+\n 2011-05-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* src/list.cc: Use noexcept per the FDIS."}, {"sha": "c52e2dcc417b533adbd7a7818fd214d0329c411f", "filename": "libstdc++-v3/include/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Ferase_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Ferase_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Ferase_fn_imps.hpp?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -244,9 +244,9 @@ rank_bound()\n {\n   using namespace std;\n   const size_t* const p_upper =\n-    _GLIBCXX_STD_A::upper_bound(g_a_rank_bounds,\n-\t\t\t\tg_a_rank_bounds + num_distinct_rank_bounds,\n-\t\t\t       \tbase_type::m_size);\n+    std::upper_bound(g_a_rank_bounds,\n+\t\t     g_a_rank_bounds + num_distinct_rank_bounds,\n+\t\t     base_type::m_size);\n \n   if (p_upper == g_a_rank_bounds + num_distinct_rank_bounds)\n     return max_rank;"}, {"sha": "26d9e4c63f4a9095edf253b47660e99ed54502fe", "filename": "libstdc++-v3/include/parallel/algo.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -273,12 +273,12 @@ namespace __parallel\n                   _BinaryPredicate __comp)\n     {\n       typedef std::iterator_traits<_IIter> _IIterTraits;\n-      typedef std::iterator_traits<_FIterator> iteratorf_traits;\n+      typedef std::iterator_traits<_FIterator> _FIterTraits;\n       typedef typename _IIterTraits::iterator_category _IIteratorCategory;\n-      typedef typename iteratorf_traits::iterator_category iteratorf_category;\n+      typedef typename _FIterTraits::iterator_category _FIteratorCategory;\n \n       return __find_first_of_switch(__begin1, __end1, __begin2, __end2, __comp,\n-                                  _IIteratorCategory(), iteratorf_category());\n+                                  _IIteratorCategory(), _FIteratorCategory());\n     }\n \n   // Public interface, insert default comparator\n@@ -288,9 +288,9 @@ namespace __parallel\n                   _FIterator __begin2, _FIterator __end2)\n     {\n       typedef std::iterator_traits<_IIter> _IIterTraits;\n-      typedef std::iterator_traits<_FIterator> iteratorf_traits;\n+      typedef std::iterator_traits<_FIterator> _FIterTraits;\n       typedef typename _IIterTraits::value_type _IValueType;\n-      typedef typename iteratorf_traits::value_type _FValueType;\n+      typedef typename _FIterTraits::value_type _FValueType;\n \n       return __gnu_parallel::find_first_of(__begin1, __end1, __begin2, __end2,\n                          __gnu_parallel::_EqualTo<_IValueType, _FValueType>());"}, {"sha": "8d6ec191d1324bd04ae54fafe3e59901c677e369", "filename": "libstdc++-v3/include/parallel/algobase.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -38,8 +38,7 @@\n \n #include <bits/stl_algobase.h>\n #include <parallel/base.h>\n-#include <parallel/tags.h>\n-#include <parallel/settings.h>\n+#include <parallel/algorithmfwd.h>\n #include <parallel/find.h>\n #include <parallel/find_selectors.h>\n "}, {"sha": "577497e787da3618558ab0010c7ca565cc26cac6", "filename": "libstdc++-v3/include/parallel/losertree.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -171,6 +171,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreeBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n       using _Base::_M_first_insert;\n \n@@ -263,6 +264,7 @@ namespace __gnu_parallel\n       typedef _LoserTreeBase<_Tp, _Compare> _Base;\n       using _Base::_M_log_k;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n       using _Base::_M_first_insert;\n \n@@ -409,6 +411,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreePointerBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n \n     public:\n@@ -490,6 +493,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreePointerBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n \n     public:\n@@ -644,6 +648,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n \n   public:\n@@ -731,6 +736,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n \n     public:\n@@ -887,6 +893,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n \n     public:\n@@ -972,6 +979,7 @@ namespace __gnu_parallel\n     {\n       typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;\n       using _Base::_M_k;\n+      using _Base::_M_comp;\n       using _Base::_M_losers;\n \n   public:"}, {"sha": "cfba9c4366e90d3e3b6f85904d7b8bc44b8bafa1", "filename": "libstdc++-v3/include/parallel/multiseq_selection.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -46,8 +46,6 @@\n \n #include <bits/stl_algo.h>\n \n-#include <parallel/sort.h>\n-\n namespace __gnu_parallel\n {\n   /** @brief Compare __a pair of types lexicographically, ascending. */"}, {"sha": "bae6a5cd611744863e7ce781d4c974d1390b8c1d", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -45,6 +45,7 @@\n #include <parallel/features.h>\n #include <parallel/parallel.h>\n #include <parallel/losertree.h>\n+#include <parallel/multiseq_selection.h>\n #if _GLIBCXX_ASSERTIONS\n #include <parallel/checkers.h>\n #endif\n@@ -54,6 +55,12 @@\n \n namespace __gnu_parallel\n {\n+  template<typename _RAIter1, typename _RAIter2, typename _OutputIterator,\n+\t   typename _DifferenceTp, typename _Compare>\n+    _OutputIterator\n+    __merge_advance(_RAIter1&, _RAIter1, _RAIter2&, _RAIter2,\n+\t\t    _OutputIterator, _DifferenceTp, _Compare);\n+\n   /** @brief _Iterator wrapper supporting an implicit supremum at the end\n    *         of the sequence, dominating all comparisons.\n    *"}, {"sha": "65d9c11ac5247453eac6cf59d4a7a1dd670d04cc", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/hash_data_map_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "bc5a596b4ff011bc4697162c97e653f852f84548", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/hash_no_data_map_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_no_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_no_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_no_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "3a9fc3c631f53118292db903d847d3233feaa7b2", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/list_update_data_map_rand_debug.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,5 +1,5 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "065ca9de357883f1975205f5b0c1ee44311691d6", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/list_update_no_data_map_rand_debug.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_no_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_no_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_no_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,5 +1,5 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "1d6dcf1bdb41b67bb951596674e826517e1ce0b5", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/priority_queue_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "75b31f037be9d68092fb35ea1c10ece0b7d9cc11", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/tree_data_map_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "1e85d01612176c6cf2bb09ae42a7b3290b7eae24", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/tree_no_data_map_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_no_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_no_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_no_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "701e7d8e095b1bf7b5a3cb23f52b8ba9161035c3", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/trie_data_map_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}, {"sha": "19a201da443ffe74883e2c675a9edcb92e356a86", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/trie_no_data_map_rand_debug.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_no_data_map_rand_debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e330aa5b3568877fb26267fa0f277de320821b14/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_no_data_map_rand_debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_no_data_map_rand_debug.cc?ref=e330aa5b3568877fb26267fa0f277de320821b14", "patch": "@@ -1,7 +1,7 @@\n+// { dg-require-debug-mode \"\" }\n // { dg-require-time \"\" }\n // This can take long on simulators, timing out the test.\n-// { dg-options \"-D_GLIBCXX_DEBUG -DITERATIONS=5\" { target simulator } }\n-// { dg-options \"-D_GLIBCXX_DEBUG\" }\n+// { dg-options \"-DITERATIONS=5\" { target simulator } }\n // { dg-timeout-factor 2.0 }\n \n // -*- C++ -*-"}]}