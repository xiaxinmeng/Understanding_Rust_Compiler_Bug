{"sha": "207e7fea7b49c52c9075f17d024ecc315f2cf4b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA3ZTdmZWE3YjQ5YzUyYzkwNzVmMTdkMDI0ZWNjMzE1ZjJjZjRiNA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-12-17T21:26:49Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-12-17T21:26:49Z"}, "message": "[nvptx] Unify C/Fortran routine handling in nvptx_goacc_validate_dims\n\nThe Fortran front-end has a bug (PR72741) that means what when\nnvptx_goacc_validate_dims is called for a Fortran routine, the dims parameter\nis not the same as it would have been if the function would have been called for\nan equivalent C routine.\n\nWork around this bug by overriding the dims parameter for routines, allowing the\nfunction to handle routines in Fortran and C the same.\n\nBuild and reg-tested on x86_64 with nvptx accelerator.\n\n2018-12-17  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims): Work around Fortran\n\tbug PR72741 by overriding dims parameter for routines.\n\nFrom-SVN: r267213", "tree": {"sha": "dda0290fe2b2db0a1b811f69dde1959ad358da08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dda0290fe2b2db0a1b811f69dde1959ad358da08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/207e7fea7b49c52c9075f17d024ecc315f2cf4b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207e7fea7b49c52c9075f17d024ecc315f2cf4b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207e7fea7b49c52c9075f17d024ecc315f2cf4b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207e7fea7b49c52c9075f17d024ecc315f2cf4b4/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec6c865c6dc342dd6e99842377da5c18706a74ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6c865c6dc342dd6e99842377da5c18706a74ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec6c865c6dc342dd6e99842377da5c18706a74ee"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "767e3f8eb6b95ff1118998d9c1c3ac570a4a73a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207e7fea7b49c52c9075f17d024ecc315f2cf4b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207e7fea7b49c52c9075f17d024ecc315f2cf4b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=207e7fea7b49c52c9075f17d024ecc315f2cf4b4", "patch": "@@ -1,3 +1,8 @@\n+2018-12-17  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims): Work around Fortran\n+\tbug PR72741 by overriding dims parameter for routines.\n+\n 2018-12-17  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims): Rewrite using"}, {"sha": "24727ad592010988088625de5aaf45003448f20c", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207e7fea7b49c52c9075f17d024ecc315f2cf4b4/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207e7fea7b49c52c9075f17d024ecc315f2cf4b4/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=207e7fea7b49c52c9075f17d024ecc315f2cf4b4", "patch": "@@ -5212,6 +5212,42 @@ nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n   else\n     gcc_unreachable ();\n \n+  if (routine_p)\n+    {\n+      /* OpenACC routines in C arrive here with the following attributes\n+\t (omitting the 'omp declare target'):\n+\t seq   : __attribute__((oacc function (0 1, 0 1, 0 1)))\n+\t vector: __attribute__((oacc function (0 1, 0 1, 1 0)))\n+\t worker: __attribute__((oacc function (0 1, 1 0, 1 0)))\n+\t gang  : __attribute__((oacc function (1 0, 1 0, 1 0)))\n+\n+\t If we take f.i. the oacc function attribute of the worker routine\n+\t (0 1, 1 0, 1 0), then:\n+\t - the slice (0, 1, 1) is interpreted by oacc_fn_attrib_level as\n+\t   meaning: worker routine, that is:\n+\t   - can't contain gang loop (0),\n+\t   - can contain worker loop (1),\n+\t   - can contain vector loop (1).\n+\t - the slice (1, 0, 0) is interpreted by oacc_validate_dims as the\n+\t dimensions: gang: 1, worker: 0, vector: 0.\n+\n+\t OTOH, routines in Fortran arrive here with these attributes:\n+\t seq   : __attribute__((oacc function (0 0, 0 0, 0 0)))\n+\t vector: __attribute__((oacc function (0 0, 0 0, 1 0)))\n+\t worker: __attribute__((oacc function (0 0, 1 0, 1 0)))\n+\t gang  : __attribute__((oacc function (1 0, 1 0, 1 0)))\n+\t that is, the same as for C but with the dimensions set to 0.\n+\n+\t This is due to a bug in the Fortran front-end: PR72741.  Work around\n+\t this bug by forcing the dimensions to be the same in Fortran as for C,\n+\t to be able to handle C and Fortran routines uniformly in this\n+\t function.  */\n+      dims[GOMP_DIM_VECTOR] = fn_level > GOMP_DIM_VECTOR ? 1 : 0;\n+      dims[GOMP_DIM_WORKER] = fn_level > GOMP_DIM_WORKER ? 1 : 0;\n+      dims[GOMP_DIM_GANG] = fn_level > GOMP_DIM_GANG ? 1 : 0;\n+      changed = true;\n+    }\n+\n   /* The vector size must be 32, unless this is a SEQ routine.  */\n   if ((offload_region_p || oacc_default_dims_p\n        || (routine_p && !routine_seq_p))"}]}