{"sha": "0b0f416385667e0b43b3b82069b55f2d0da43e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIwZjQxNjM4NTY2N2UwYjQzYjNiODIwNjliNTVmMmQwZGE0M2U4OQ==", "commit": {"author": {"name": "Bo Thorsen", "email": "bo@suse.de", "date": "2002-09-27T14:37:23Z"}, "committer": {"name": "Bo Thorsen", "email": "bo@gcc.gnu.org", "date": "2002-09-27T14:37:23Z"}, "message": "ffi.h.in: Fix multilib x86-64 support.\n\n2002-09-27  Bo Thorsen  <bo@suse.de>\n\n        * include/ffi.h.in: Fix multilib x86-64 support.\n\nFrom-SVN: r57589", "tree": {"sha": "a2504148cc796956b26e03445fe8ba32f4812c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2504148cc796956b26e03445fe8ba32f4812c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b0f416385667e0b43b3b82069b55f2d0da43e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0f416385667e0b43b3b82069b55f2d0da43e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b0f416385667e0b43b3b82069b55f2d0da43e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0f416385667e0b43b3b82069b55f2d0da43e89/comments", "author": null, "committer": null, "parents": [{"sha": "dce81a1a59f9663eb72e722e17f490adc3f5a2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dce81a1a59f9663eb72e722e17f490adc3f5a2d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dce81a1a59f9663eb72e722e17f490adc3f5a2d6"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "3fd628f8334b55e5f2d969aaf6e465110c29ea96", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0f416385667e0b43b3b82069b55f2d0da43e89/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0f416385667e0b43b3b82069b55f2d0da43e89/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=0b0f416385667e0b43b3b82069b55f2d0da43e89", "patch": "@@ -1,3 +1,7 @@\n+2002-09-27  Bo Thorsen  <bo@suse.de>\n+\n+\t* include/ffi.h.in: Fix multilib x86-64 support.\n+\n 2002-09-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.am (all-multi): Fix multilib parallel build."}, {"sha": "7cb1aa652fcc387e649900b9286da3d1c8e797ba", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0f416385667e0b43b3b82069b55f2d0da43e89/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0f416385667e0b43b3b82069b55f2d0da43e89/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=0b0f416385667e0b43b3b82069b55f2d0da43e89", "patch": "@@ -189,23 +189,23 @@ typedef enum ffi_abi {\n #endif\n #endif\n \n+  /* ---- Intel x86 Win32 ---------- */\n+#ifdef X86_WIN32\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n   /* ---- Intel x86 and AMD x86-64 - */\n-#if defined(X86) || defined(X86_64)\n+#if defined(__i386__) || defined(__x86_64__)\n   FFI_SYSV,\n   FFI_UNIX64,   /* Unix variants all use the same ABI for x86-64  */\n-#ifdef X86\n+#ifdef __i386__\n   FFI_DEFAULT_ABI = FFI_SYSV,\n #else\n   FFI_DEFAULT_ABI = FFI_UNIX64,\n #endif\n #endif\n \n-  /* ---- Intel x86 Win32 ---------- */\n-#ifdef X86_WIN32\n-  FFI_SYSV,\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n   /* ---- Intel ia64 ---------------- */\n #ifdef IA64\n   FFI_UNIX,   \t/* Linux and all Unix variants use the same conventions\t*/\n@@ -390,13 +390,7 @@ size_t ffi_java_raw_size (ffi_cif *cif);\n \n /* ---- Definitions for closures ----------------------------------------- */\n \n-#ifdef X86\n-\n-#define FFI_CLOSURES 1\t\t/* x86 supports closures */\n-#define FFI_TRAMPOLINE_SIZE 10\n-#define FFI_NATIVE_RAW_API 1\t/* and has native raw api support */\n-\n-#elif defined(X86_WIN32)\n+#ifdef __i386__\n \n #define FFI_CLOSURES 1\t\t/* x86 supports closures */\n #define FFI_TRAMPOLINE_SIZE 10"}]}