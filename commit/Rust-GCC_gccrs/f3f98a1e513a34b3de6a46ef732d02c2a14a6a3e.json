{"sha": "f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNmOThhMWU1MTNhMzRiM2RlNmE0NmVmNzMyZDAyYzJhMTRhNmEzZQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-08-01T19:21:49Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-08-01T19:21:49Z"}, "message": "re PR fortran/44912 ([OOP] Segmentation fault on TBP)\n\n2010-08-01  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44912\n\t* class.c (gfc_build_class_symbol): Make '$vptr' component private.\n\t(gfc_find_derived_vtab): Make vtabs and vtypes public.\n\t* module.c (read_module): When reading module files, always import\n\tvtab and vtype symbols.\n\n2010-08-01  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44912\n\t* gfortran.dg/typebound_call_17.f03: New.\n\nFrom-SVN: r162804", "tree": {"sha": "d126ebbe2b9edcbf2625ee091a4729a1fbf99798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d126ebbe2b9edcbf2625ee091a4729a1fbf99798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47dad3ff97135ef8a26e0ecbc2170fba6c4e89be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47dad3ff97135ef8a26e0ecbc2170fba6c4e89be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47dad3ff97135ef8a26e0ecbc2170fba6c4e89be"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "fa41c8a43405ecff500e28d91e59d36cf4236e34", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "patch": "@@ -1,3 +1,11 @@\n+2010-08-01  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44912\n+\t* class.c (gfc_build_class_symbol): Make '$vptr' component private.\n+\t(gfc_find_derived_vtab): Make vtabs and vtypes public.\n+\t* module.c (read_module): When reading module files, always import\n+\tvtab and vtype symbols.\n+\n 2010-07-31  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/42051"}, {"sha": "9393b562e6d4efe67225358164313a0aae476df0", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "patch": "@@ -178,6 +178,7 @@ gfc_build_class_symbol (gfc_typespec *ts, symbol_attribute *attr,\n \t  gcc_assert (vtab);\n \t  c->ts.u.derived = vtab->ts.u.derived;\n \t}\n+      c->attr.access = ACCESS_PRIVATE;\n       c->attr.pointer = 1;\n     }\n \n@@ -343,6 +344,7 @@ gfc_find_derived_vtab (gfc_symbol *derived)\n \t  vtab->attr.target = 1;\n \t  vtab->attr.save = SAVE_EXPLICIT;\n \t  vtab->attr.vtab = 1;\n+\t  vtab->attr.access = ACCESS_PUBLIC;\n \t  vtab->refs++;\n \t  gfc_set_sym_referenced (vtab);\n \t  sprintf (name, \"vtype$%s\", derived->name);\n@@ -357,6 +359,7 @@ gfc_find_derived_vtab (gfc_symbol *derived)\n \t      if (gfc_add_flavor (&vtype->attr, FL_DERIVED,\n \t\t\t\t  NULL, &gfc_current_locus) == FAILURE)\n \t\tgoto cleanup;\n+\t      vtype->attr.access = ACCESS_PUBLIC;\n \t      vtype->refs++;\n \t      gfc_set_sym_referenced (vtype);\n "}, {"sha": "d68e868dba2ab2367795c860b04123eb2196a80a", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "patch": "@@ -4370,6 +4370,11 @@ read_module (void)\n \t  if (p == NULL && strcmp (name, module_name) == 0)\n \t    p = name;\n \n+\t  /* Exception: Always import vtabs & vtypes.  */\n+\t  if (p == NULL && (strcmp (xstrndup (name,5), \"vtab$\") == 0\n+\t\t\t    || strcmp (xstrndup (name,6), \"vtype$\") == 0))\n+\t    p = name;\n+\n \t  /* Skip symtree nodes not in an ONLY clause, unless there\n \t     is an existing symtree loaded from another USE statement.  */\n \t  if (p == NULL)"}, {"sha": "5c211c07cd8cdd28bfcc83d6a919235afc035da0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "patch": "@@ -1,3 +1,8 @@\n+2010-08-01  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44912\n+\t* gfortran.dg/typebound_call_17.f03: New.\n+\n 2010-07-30  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/44929"}, {"sha": "5bd054707ec62ad1b4b7724e1d42c24cc407fcfc", "filename": "gcc/testsuite/gfortran.dg/typebound_call_17.f03", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_17.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_17.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_17.f03?ref=f3f98a1e513a34b3de6a46ef732d02c2a14a6a3e", "patch": "@@ -0,0 +1,57 @@\n+! { dg-do run }\n+!\n+! PR 44912: [OOP] Segmentation fault on TBP\n+!\n+! Contributed by Satish.BD <bdsatish@gmail.com>\n+\n+module polynomial\n+implicit none\n+\n+private\n+\n+type, public :: polynom\n+   complex, allocatable, dimension(:) :: a\n+   integer :: n\n+ contains\n+   procedure :: init_from_coeff\n+   procedure :: get_degree\n+   procedure :: add_poly\n+end type polynom\n+\n+contains\n+  subroutine init_from_coeff(self, coeff)\n+    class(polynom), intent(inout) :: self\n+    complex, dimension(:), intent(in) :: coeff\n+    self%n = size(coeff) - 1\n+    allocate(self%a(self%n + 1))\n+    self%a = coeff\n+    print *,\"ifc:\",self%a\n+  end subroutine init_from_coeff\n+\n+  function get_degree(self)   result(n)\n+    class(polynom), intent(in) :: self\n+    integer :: n\n+    print *,\"gd\"\n+    n = self%n\n+  end function get_degree\n+\n+  subroutine add_poly(self)\n+    class(polynom), intent(in) :: self\n+    integer :: s\n+    print *,\"ap\"\n+    s = self%get_degree()         !!!! fails here\n+  end subroutine\n+\n+end module polynomial\n+\n+program test_poly\n+   use polynomial, only: polynom\n+\n+   type(polynom) :: p1\n+\n+   call p1%init_from_coeff([(1,0),(2,0),(3,0)])\n+   call p1%add_poly()\n+\n+end program test_poly\n+\n+! { dg-final { cleanup-modules \"polynomial\" } }"}]}