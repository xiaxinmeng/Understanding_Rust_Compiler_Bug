{"sha": "1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFhNTRmOTBlNjhkYzkyN2U4MGUxNGM3ZTRiZjliNDI1MjVlM2M3Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-07-25T13:24:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-07-25T13:24:51Z"}, "message": "re PR tree-optimization/81455 (Compile-time hog w/ -O1 -funswitch-loops)\n\n2017-07-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81455\n\t* tree-ssa-loop-unswitch.c (find_loop_guard): Make sure to\n\tnot walk in cycles when looking for guards.\n\n\t* gcc.dg/pr81455.c: New testcase.\n\nFrom-SVN: r250518", "tree": {"sha": "2b8bb2985d182e0067a33a9d5b70c12080b8464d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b8bb2985d182e0067a33a9d5b70c12080b8464d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e294f495894cd2d9e217565e340284b2edda4671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e294f495894cd2d9e217565e340284b2edda4671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e294f495894cd2d9e217565e340284b2edda4671"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "4597d3b2f572b71d28f32be0c645ec490bad8e98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "patch": "@@ -1,3 +1,9 @@\n+2017-07-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81455\n+\t* tree-ssa-loop-unswitch.c (find_loop_guard): Make sure to\n+\tnot walk in cycles when looking for guards.\n+\n 2017-07-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81529"}, {"sha": "0aee7d909466a1907ef322a75c2de3bc532bb576", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "patch": "@@ -1,3 +1,8 @@\n+2017-07-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81455\n+\t* gcc.dg/pr81455.c: New testcase.\n+\n 2017-07-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81529"}, {"sha": "8ab88639ee83a62ca667f1698266281c79559049", "filename": "gcc/testsuite/gcc.dg/pr81455.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81455.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81455.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81455.c?ref=1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -funswitch-loops\" } */\n+\n+void\n+jh (unsigned int aw, int sn)\n+{\n+  int xs;\n+\n+  for (xs = 0; xs < 1; ++xs)\n+    aw &= 1;\n+\n+  while (aw < 1 || ++sn < 1)\n+    {\n+    }\n+}"}, {"sha": "57aba4f1dd019de39cb69785f9115f422f498590", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa54f90e68dc927e80e14c7e4bf9b42525e3c76/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=1aa54f90e68dc927e80e14c7e4bf9b42525e3c76", "patch": "@@ -582,8 +582,9 @@ find_loop_guard (struct loop *loop)\n   gcond *cond;\n   do\n     {\n+      basic_block next = NULL;\n       if (single_succ_p (header))\n-\theader = single_succ (header);\n+\tnext = single_succ (header);\n       else\n \t{\n \t  cond = dyn_cast <gcond *> (last_stmt (header));\n@@ -593,12 +594,16 @@ find_loop_guard (struct loop *loop)\n \t  /* Make sure to skip earlier hoisted guards that are left\n \t     in place as if (true).  */\n \t  if (gimple_cond_true_p (cond))\n-\t    header = te->dest;\n+\t    next = te->dest;\n \t  else if (gimple_cond_false_p (cond))\n-\t    header = fe->dest;\n+\t    next = fe->dest;\n \t  else\n \t    break;\n \t}\n+      /* Never traverse a backedge.  */\n+      if (header->loop_father->header == next)\n+\treturn NULL;\n+      header = next;\n     }\n   while (1);\n   if (!flow_bb_inside_loop_p (loop, te->dest)"}]}