{"sha": "1f82f1245db9096c1fe53acc763fdfacdba2a440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4MmYxMjQ1ZGI5MDk2YzFmZTUzYWNjNzYzZmRmYWNkYmEyYTQ0MA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2015-07-21T17:25:48Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2015-07-21T17:25:48Z"}, "message": "re PR target/66956 ([avr] Using 32*32=64 multiplicatiion (umulsidi3) for 32=32*32 without MUL.)\n\n\tPR target/66956\n\t* config/avr/avr-dimode.md (<extend_u>mulsidi3_insn)\n\t(<extend_u>mulsidi3): Don't use if !AVR_HAVE_MUL.\n\nFrom-SVN: r226046", "tree": {"sha": "8f395f396f4fdb07a5ad28ceffa7f27cde400a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f395f396f4fdb07a5ad28ceffa7f27cde400a1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f82f1245db9096c1fe53acc763fdfacdba2a440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f82f1245db9096c1fe53acc763fdfacdba2a440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f82f1245db9096c1fe53acc763fdfacdba2a440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f82f1245db9096c1fe53acc763fdfacdba2a440/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82f04ea0724846eb10c04f5458f14e18be2a1c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82f04ea0724846eb10c04f5458f14e18be2a1c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82f04ea0724846eb10c04f5458f14e18be2a1c79"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "8e25b9a0640575306ff90b5ca9aa3e2a947b0345", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f82f1245db9096c1fe53acc763fdfacdba2a440/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f82f1245db9096c1fe53acc763fdfacdba2a440/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f82f1245db9096c1fe53acc763fdfacdba2a440", "patch": "@@ -1,3 +1,9 @@\n+2015-07-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/66956\n+\t* config/avr/avr-dimode.md (<extend_u>mulsidi3_insn)\n+\t(<extend_u>mulsidi3): Don't use if !AVR_HAVE_MUL.\n+\n 2015-07-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66948"}, {"sha": "a1cd6d91c6dcd031d2dab9292bbd73e4bfead48c", "filename": "gcc/config/avr/avr-dimode.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f82f1245db9096c1fe53acc763fdfacdba2a440/gcc%2Fconfig%2Favr%2Favr-dimode.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f82f1245db9096c1fe53acc763fdfacdba2a440/gcc%2Fconfig%2Favr%2Favr-dimode.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-dimode.md?ref=1f82f1245db9096c1fe53acc763fdfacdba2a440", "patch": "@@ -461,7 +461,8 @@\n               (match_operand:SI 2 \"general_operand\" \"\")\n               ;; Just to mention the iterator \n               (clobber (any_extend:SI (match_dup 1)))])]\n-  \"avr_have_dimode\"\n+  \"avr_have_dimode\n+   && AVR_HAVE_MUL\"\n   {\n     avr_fix_inputs (operands, 1 << 2, regmask (SImode, 22));\n     emit_move_insn (gen_rtx_REG (SImode, 22), operands[1]);\n@@ -480,7 +481,8 @@\n                  (any_extend:DI (reg:SI 22))))\n    (clobber (reg:HI REG_X))\n    (clobber (reg:HI REG_Z))]\n-  \"avr_have_dimode\"\n+  \"avr_have_dimode\n+   && AVR_HAVE_MUL\"\n   \"%~call __<extend_u>mulsidi3\"\n   [(set_attr \"adjust_len\" \"call\")\n    (set_attr \"cc\" \"clobber\")])"}]}