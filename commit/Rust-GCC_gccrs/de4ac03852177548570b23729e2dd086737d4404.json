{"sha": "de4ac03852177548570b23729e2dd086737d4404", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU0YWMwMzg1MjE3NzU0ODU3MGIyMzcyOWUyZGQwODY3MzdkNDQwNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T08:57:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T08:57:50Z"}, "message": "[multiple changes]\n\n2015-01-06  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taskin.ads, s-traces.ads: Minor reformatting.\n\t* exp_util.adb: Minor typo fix.\n\n2015-01-06  Vincent Celier  <celier@adacore.com>\n\n\t* gnatls.adb (Search_RTS): Invoke Initialize_Default_Project_Path\n\twith the runtime name.\n\t* prj-env.adb (Initialize_Default_Project_Path): When both\n\tTarget_Name and Runtime_Name are not empty string, add to the\n\tproject path the two directories .../lib/gnat and .../share/gpr\n\trelated to the runtime.\n\t* prj-env.ads (Initialize_Default_Project_Path): New String\n\tparameter Runtime_Name, defaulted to the empty string.\n\n2015-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* frontend.adb: Guard against the case where a configuration\n\tpragma may be split into multiple pragmas and the original\n\trewritten as a null statement.\n\t* sem_prag.adb (Analyze_Pragma): Insert a brand new Check_Policy\n\tpragma using Insert_Before rather than Insert_Action. This\n\ttakes care of the configuration pragma case where Insert_Action\n\twould fail.\n\n2015-01-06  Bob Duff  <duff@adacore.com>\n\n\t* a-coboho.ads (Element_Access): Add \"pragma\n\tNo_Strict_Aliasing (Element_Access);\". This is needed because\n\twe are unchecked-converting from Address to Element_Access.\n\t* a-cofove.ads, a-cofove.adb (Elems,Elemsc): Fix bounds of the\n\tresult to be 1.\n\n2015-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Resolve_Actuals): Remove the\n\trestriction which prohibits volatile actual parameters with\n\tenabled external propery Async_Writers to act appear in procedure\n\tcalls where the corresponding formal is of mode OUT.\n\nFrom-SVN: r219222", "tree": {"sha": "d1be37fa9f20698c01022cd5537bb9c6d2c28d10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1be37fa9f20698c01022cd5537bb9c6d2c28d10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de4ac03852177548570b23729e2dd086737d4404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de4ac03852177548570b23729e2dd086737d4404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de4ac03852177548570b23729e2dd086737d4404", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de4ac03852177548570b23729e2dd086737d4404/comments", "author": null, "committer": null, "parents": [{"sha": "d3d514a953f10b9baaef8c7007448b828ab99513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d514a953f10b9baaef8c7007448b828ab99513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d514a953f10b9baaef8c7007448b828ab99513"}], "stats": {"total": 282, "additions": 181, "deletions": 101}, "files": [{"sha": "562b619524b86e8bf7a009d7ac397b731de28913", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -1,3 +1,44 @@\n+2015-01-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-taskin.ads, s-traces.ads: Minor reformatting.\n+\t* exp_util.adb: Minor typo fix.\n+\n+2015-01-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatls.adb (Search_RTS): Invoke Initialize_Default_Project_Path\n+\twith the runtime name.\n+\t* prj-env.adb (Initialize_Default_Project_Path): When both\n+\tTarget_Name and Runtime_Name are not empty string, add to the\n+\tproject path the two directories .../lib/gnat and .../share/gpr\n+\trelated to the runtime.\n+\t* prj-env.ads (Initialize_Default_Project_Path): New String\n+\tparameter Runtime_Name, defaulted to the empty string.\n+\n+2015-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* frontend.adb: Guard against the case where a configuration\n+\tpragma may be split into multiple pragmas and the original\n+\trewritten as a null statement.\n+\t* sem_prag.adb (Analyze_Pragma): Insert a brand new Check_Policy\n+\tpragma using Insert_Before rather than Insert_Action. This\n+\ttakes care of the configuration pragma case where Insert_Action\n+\twould fail.\n+\n+2015-01-06  Bob Duff  <duff@adacore.com>\n+\n+\t* a-coboho.ads (Element_Access): Add \"pragma\n+\tNo_Strict_Aliasing (Element_Access);\". This is needed because\n+\twe are unchecked-converting from Address to Element_Access.\n+\t* a-cofove.ads, a-cofove.adb (Elems,Elemsc): Fix bounds of the\n+\tresult to be 1.\n+\n+2015-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Actuals): Remove the\n+\trestriction which prohibits volatile actual parameters with\n+\tenabled external propery Async_Writers to act appear in procedure\n+\tcalls where the corresponding formal is of mode OUT.\n+\n 2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gnat_ugn.texi: Bump @copying's copyright year."}, {"sha": "7e6933e22deefdcc7967742790fb11362ff6a82f", "filename": "gcc/ada/a-coboho.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fa-coboho.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fa-coboho.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coboho.ads?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -99,4 +99,9 @@ private\n    --  the 'Address of an array points to the first element, thus losing the\n    --  bounds.\n \n+   pragma No_Strict_Aliasing (Element_Access);\n+   --  Needed because we are unchecked-converting from Address to\n+   --  Element_Access (see package body), which is a violation of the\n+   --  normal aliasing rules enforced by gcc.\n+\n end Ada.Containers.Bounded_Holders;"}, {"sha": "9cfd1328cf2d2a6f72a4497784c9986029d65742", "filename": "gcc/ada/a-cofove.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fa-cofove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fa-cofove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -45,10 +45,9 @@ is\n    procedure Free is\n       new Ada.Unchecked_Deallocation (Elements_Array, Elements_Array_Ptr);\n \n-   type Maximal_Array_Ptr is access all Elements_Array (Capacity_Range)\n+   type Maximal_Array_Ptr is access all Elements_Array (Array_Index)\n      with Storage_Size => 0;\n-   type Maximal_Array_Ptr_Const is access constant\n-     Elements_Array (Capacity_Range)\n+   type Maximal_Array_Ptr_Const is access constant Elements_Array (Array_Index)\n        with Storage_Size => 0;\n \n    function Elems (Container : in out Vector) return Maximal_Array_Ptr;\n@@ -111,7 +110,7 @@ is\n          Reserve_Capacity\n            (Container,\n             Capacity_Range'Max (Capacity (Container) * Growth_Factor,\n-                            Capacity_Range (New_Length)));\n+                                Capacity_Range (New_Length)));\n       end if;\n \n       if Container.Last = Index_Type'Last then\n@@ -381,7 +380,7 @@ is\n       is\n          procedure Sort is\n            new Generic_Array_Sort\n-             (Index_Type   => Capacity_Range,\n+             (Index_Type   => Array_Index,\n               Element_Type => Element_Type,\n               Array_Type   => Elements_Array,\n               \"<\"          => \"<\");"}, {"sha": "9e91bc8bae040ab9d8f3a35b53e9e0e00c8a2bb3", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -246,7 +246,8 @@ private\n    pragma Inline (Replace_Element);\n    pragma Inline (Contains);\n \n-   type Elements_Array is array (Capacity_Range range <>) of Element_Type;\n+   subtype Array_Index is Capacity_Range range 1 .. Capacity_Range'Last;\n+   type Elements_Array is array (Array_Index range <>) of Element_Type;\n    function \"=\" (L, R : Elements_Array) return Boolean is abstract;\n \n    type Elements_Array_Ptr is access all Elements_Array;"}, {"sha": "f1f6b5290cd5483c33f5e653b290af7cbd9c9ca2", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -2961,7 +2961,7 @@ package body Exp_Util is\n \n    begin\n       --  If parser detected no address clause for the identifier in question,\n-      --  then then answer is a quick NO, without the need for a search.\n+      --  then the answer is a quick NO, without the need for a search.\n \n       if not Get_Name_Table_Boolean (Chars (Id)) then\n          return Empty;"}, {"sha": "7d24ae03ed9f58ce33780195ce1d65f96f47e484", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -339,18 +339,25 @@ begin\n \n      and then not Fatal_Error (Main_Unit)\n    then\n-      --  Pragmas that require some semantic activity, such as\n-      --  Interrupt_State, cannot be processed until the main unit\n-      --  is installed, because they require a compilation unit on\n-      --  which to attach with_clauses, etc. So analyze them now.\n+      --  Pragmas that require some semantic activity, such as Interrupt_State,\n+      --  cannot be processed until the main unit is installed, because they\n+      --  require a compilation unit on which to attach with_clauses, etc. So\n+      --  analyze them now.\n \n       declare\n          Prag : Node_Id;\n \n       begin\n          Prag := First (Config_Pragmas);\n          while Present (Prag) loop\n-            if Delay_Config_Pragma_Analyze (Prag) then\n+\n+            --  Guard against the case where a configuration pragma may be\n+            --  split into multiple pragmas and the original rewritten as a\n+            --  null statement.\n+\n+            if Nkind (Prag) = N_Pragma\n+              and then Delay_Config_Pragma_Analyze (Prag)\n+            then\n                Analyze_Pragma (Prag);\n             end if;\n "}, {"sha": "6ef23a24253b3d26195aa0686d1ced7d3201bdff", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -1225,6 +1225,10 @@ procedure Gnatls is\n       if Src_Path /= null and then Lib_Path /= null then\n          Add_Search_Dirs (Src_Path, Include);\n          Add_Search_Dirs (Lib_Path, Objects);\n+         Initialize_Default_Project_Path\n+           (Prj_Path,\n+            Target_Name => Sdefault.Target_Name.all,\n+            Runtime_Name => Name);\n          return;\n       end if;\n \n@@ -1237,7 +1241,9 @@ procedure Gnatls is\n       --  Try to find the RTS on the project path. First setup the project path\n \n       Initialize_Default_Project_Path\n-        (Prj_Path, Target_Name => Sdefault.Target_Name.all);\n+        (Prj_Path,\n+         Target_Name => Sdefault.Target_Name.all,\n+         Runtime_Name => Name);\n \n       Rts_Full_Path := Get_Runtime_Path (Prj_Path, Name);\n "}, {"sha": "dd60df9b3083c73b953b8a1113008d3ae2f1fb1e", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 78, "deletions": 51, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -1873,8 +1873,9 @@ package body Prj.Env is\n    -------------------------------------\n \n    procedure Initialize_Default_Project_Path\n-     (Self        : in out Project_Search_Path;\n-      Target_Name : String)\n+     (Self         : in out Project_Search_Path;\n+      Target_Name  : String;\n+      Runtime_Name : String := \"\")\n    is\n       Add_Default_Dir : Boolean := Target_Name /= \"-\";\n       First           : Positive;\n@@ -1894,6 +1895,24 @@ package body Prj.Env is\n       --  The path name(s) of directories where project files may reside.\n       --  May be empty.\n \n+      Prefix : String_Ptr;\n+      Runtime : String_Ptr;\n+\n+      procedure Add_Target;\n+\n+      procedure Add_Target is\n+      begin\n+         Add_Str_To_Name_Buffer\n+           (Path_Separator & Prefix.all & Target_Name);\n+\n+         --  Note: Target_Name has a trailing / when it comes from\n+         --  Sdefault.\n+\n+         if Name_Buffer (Name_Len) /= '/' then\n+            Add_Char_To_Name_Buffer (Directory_Separator);\n+         end if;\n+      end Add_Target;\n+\n    begin\n       if Is_Initialized (Self) then\n          return;\n@@ -2051,73 +2070,81 @@ package body Prj.Env is\n       --  Set the initial value of Current_Project_Path\n \n       if Add_Default_Dir then\n-         declare\n-            Prefix : String_Ptr;\n-\n-         begin\n-            if Sdefault.Search_Dir_Prefix = null then\n-\n-               --  gprbuild case\n+         if Sdefault.Search_Dir_Prefix = null then\n \n-               Prefix := new String'(Executable_Prefix_Path);\n-\n-            else\n-               Prefix := new String'(Sdefault.Search_Dir_Prefix.all\n-                                     & \"..\" & Dir_Separator\n-                                     & \"..\" & Dir_Separator\n-                                     & \"..\" & Dir_Separator\n-                                     & \"..\" & Dir_Separator);\n-            end if;\n+            --  gprbuild case\n \n-            if Prefix.all /= \"\" then\n-               if Target_Name /= \"\" then\n+            Prefix := new String'(Executable_Prefix_Path);\n \n-                  --  $prefix/$target/lib/gnat\n-\n-                  Add_Str_To_Name_Buffer\n-                    (Path_Separator & Prefix.all & Target_Name);\n-\n-                  --  Note: Target_Name has a trailing / when it comes from\n-                  --  Sdefault.\n-\n-                  if Name_Buffer (Name_Len) /= '/' then\n-                     Add_Char_To_Name_Buffer (Directory_Separator);\n-                  end if;\n+         else\n+            Prefix := new String'(Sdefault.Search_Dir_Prefix.all\n+                                  & \"..\" & Dir_Separator\n+                                  & \"..\" & Dir_Separator\n+                                  & \"..\" & Dir_Separator\n+                                  & \"..\" & Dir_Separator);\n+         end if;\n \n-                  Add_Str_To_Name_Buffer\n-                    (\"lib\" & Directory_Separator & \"gnat\");\n+         if Prefix.all /= \"\" then\n+            if Target_Name /= \"\" then\n \n-                  --  $prefix/$target/share/gpr\n+               if Runtime_Name /= \"\" then\n+                  if Base_Name (Runtime_Name) = Runtime_Name then\n \n-                  Add_Str_To_Name_Buffer\n-                    (Path_Separator & Prefix.all & Target_Name);\n+                     --  $prefix/$target/$runtime/lib/gnat\n+                     Add_Target;\n+                     Add_Str_To_Name_Buffer\n+                       (Runtime_Name & Directory_Separator &\n+                          \"lib\" & Directory_Separator & \"gnat\");\n \n-                  --  Note: Target_Name has a trailing / when it comes from\n-                  --  Sdefault.\n+                     --  $prefix/$target/$runtime/share/gpr\n+                     Add_Target;\n+                     Add_Str_To_Name_Buffer\n+                       (Runtime_Name & Directory_Separator &\n+                          \"share\" & Directory_Separator & \"gpr\");\n \n-                  if Name_Buffer (Name_Len) /= '/' then\n-                     Add_Char_To_Name_Buffer (Directory_Separator);\n+                  else\n+                     Runtime :=\n+                       new String'(Normalize_Pathname (Runtime_Name));\n+\n+                     --  $runtime_dir/lib/gnat\n+                     Add_Str_To_Name_Buffer\n+                       (Path_Separator & Runtime.all & Directory_Separator &\n+                        \"lib\" & Directory_Separator & \"gnat\");\n+\n+                     --  $runtime_dir/share/gpr\n+                     Add_Str_To_Name_Buffer\n+                       (Path_Separator & Runtime.all & Directory_Separator &\n+                        \"share\" & Directory_Separator & \"gpr\");\n                   end if;\n-\n-                  Add_Str_To_Name_Buffer\n-                    (\"share\" & Directory_Separator & \"gpr\");\n                end if;\n \n-               --  $prefix/share/gpr\n+               --  $prefix/$target/lib/gnat\n \n+               Add_Target;\n                Add_Str_To_Name_Buffer\n-                 (Path_Separator & Prefix.all & \"share\"\n-                  & Directory_Separator & \"gpr\");\n+                 (\"lib\" & Directory_Separator & \"gnat\");\n \n-               --  $prefix/lib/gnat\n+               --  $prefix/$target/share/gpr\n \n+               Add_Target;\n                Add_Str_To_Name_Buffer\n-                 (Path_Separator & Prefix.all & \"lib\"\n-                  & Directory_Separator & \"gnat\");\n+                 (\"share\" & Directory_Separator & \"gpr\");\n             end if;\n \n-            Free (Prefix);\n-         end;\n+            --  $prefix/share/gpr\n+\n+            Add_Str_To_Name_Buffer\n+              (Path_Separator & Prefix.all & \"share\"\n+               & Directory_Separator & \"gpr\");\n+\n+            --  $prefix/lib/gnat\n+\n+            Add_Str_To_Name_Buffer\n+              (Path_Separator & Prefix.all & \"lib\"\n+               & Directory_Separator & \"gnat\");\n+         end if;\n+\n+         Free (Prefix);\n       end if;\n \n       Self.Path := new String'(Name_Buffer (1 .. Name_Len));"}, {"sha": "a7617afab909ff55299425edf9385aed04c57fe9", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -171,14 +171,16 @@ package Prj.Env is\n    No_Project_Search_Path : constant Project_Search_Path;\n \n    procedure Initialize_Default_Project_Path\n-     (Self        : in out Project_Search_Path;\n-      Target_Name : String);\n-   --  Initialize Self. It will then contain the default project path on the\n-   --  given target (including directories specified by the environment\n-   --  variables GPR_PROJECT_PATH_FILE, GPR_PROJECT_PATH and ADA_PROJECT_PATH).\n-   --  If one of the directory or Target_Name is \"-\", then the path contains\n-   --  only those directories specified by the environment variables (except\n-   --  \"-\"). This does nothing if Self has already been initialized.\n+     (Self         : in out Project_Search_Path;\n+      Target_Name  : String;\n+      Runtime_Name : String := \"\");\n+   --  Initialize Self. It will then contain the default project path on\n+   --  the given target and runtime (including directories specified by the\n+   --  environment variables GPR_PROJECT_PATH_FILE, GPR_PROJECT_PATH and\n+   --  ADA_PROJECT_PATH). If one of the directory or Target_Name is \"-\", then\n+   --  the path contains only those directories specified by the environment\n+   --  variables (except \"-\"). This does nothing if Self has already been\n+   --  initialized.\n \n    procedure Copy (From : Project_Search_Path; To : out Project_Search_Path);\n    --  Copy From into To"}, {"sha": "f48d98d063483f7a8887ae7bf07ecc004a5dc620", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -670,7 +670,7 @@ package System.Tasking is\n       --  System-specific attributes of the task as specified by the\n       --  Task_Info pragma.\n \n-      Analyzer  : System.Stack_Usage.Stack_Analyzer;\n+      Analyzer : System.Stack_Usage.Stack_Analyzer;\n       --  For storing information used to measure the stack usage\n \n       Global_Task_Lock_Nesting : Natural;"}, {"sha": "89c7cc42dd3e80936007a3d1a6506d577cd98dd9", "filename": "gcc/ada/s-traces.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fs-traces.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fs-traces.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traces.ads?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,8 +33,7 @@\n \n --  Warning : NO dependencies to tasking should be created here\n \n---  This package, and all its children are used to implement debug\n---  information\n+--  This package and all its children are used to implement debug information\n \n --  A new primitive, Send_Trace_Info (Id : Trace_T; 'data') is introduced.\n --  Trace_T is an event identifier, 'data' are the information to pass\n@@ -50,7 +49,7 @@\n --  corresponding Send_Trace_Info procedure. It may be required for some\n --  target to modify Send_Trace (e.g. VxWorks).\n \n---  To add a new target, just adapt System.Traces.Send to your own purposes\n+--  To add a new target, just adapt System.Traces.Send as needed\n \n package System.Traces is\n    pragma Preelaborate;"}, {"sha": "58acefdd7a79c890329a23f0947fa2efcc546115", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -11017,10 +11017,10 @@ package body Sem_Prag is\n          --  processing is required here.\n \n          when Pragma_Assertion_Policy => Assertion_Policy : declare\n-            LocP   : Source_Ptr;\n-            Policy : Node_Id;\n             Arg    : Node_Id;\n             Kind   : Name_Id;\n+            LocP   : Source_Ptr;\n+            Policy : Node_Id;\n \n          begin\n             Ada_2005_Pragma;\n@@ -11102,12 +11102,17 @@ package body Sem_Prag is\n                   Check_Arg_Is_One_Of\n                     (Arg, Name_Check, Name_Disable, Name_Ignore);\n \n-                  --  We rewrite the Assertion_Policy pragma as a series of\n-                  --  Check_Policy pragmas:\n+                  --  Rewrite the Assertion_Policy pragma as a series of\n+                  --  Check_Policy pragmas of the form:\n \n                   --    Check_Policy (Kind, Policy);\n \n-                  Insert_Action (N,\n+                  --  Note: the insertion of the pragmas cannot be done with\n+                  --  Insert_Action because in the configuration case, there\n+                  --  are no scopes on the scope stack and the mechanism will\n+                  --  fail.\n+\n+                  Insert_Before_And_Analyze (N,\n                     Make_Pragma (LocP,\n                       Chars                        => Name_Check_Policy,\n                       Pragma_Argument_Associations => New_List ("}, {"sha": "df88d43d0696698a4bdd580a4c0fb4cd7d67ec15", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de4ac03852177548570b23729e2dd086737d4404/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=de4ac03852177548570b23729e2dd086737d4404", "patch": "@@ -4630,31 +4630,19 @@ package body Sem_Res is\n                --  first place.\n \n                if Ekind (Nam) = E_Procedure\n+                 and then Ekind (F) = E_In_Parameter\n                  and then Is_Entity_Name (A)\n                  and then Present (Entity (A))\n                  and then Ekind (Entity (A)) = E_Variable\n                then\n                   A_Id := Entity (A);\n \n-                  if Ekind (F) = E_In_Parameter then\n-                     if Async_Readers_Enabled (A_Id) then\n-                        Property_Error (A, A_Id, Name_Async_Readers);\n-                     elsif Effective_Reads_Enabled (A_Id) then\n-                        Property_Error (A, A_Id, Name_Effective_Reads);\n-                     elsif Effective_Writes_Enabled (A_Id) then\n-                        Property_Error (A, A_Id, Name_Effective_Writes);\n-                     end if;\n-\n-                  elsif Ekind (F) = E_Out_Parameter\n-                    and then Async_Writers_Enabled (A_Id)\n-                  then\n-                     Error_Msg_Name_1 := Name_Async_Writers;\n-                     Error_Msg_NE\n-                       (\"external variable & with enabled property % cannot \"\n-                        & \"appear as actual in procedure call \"\n-                        & \"(SPARK RM 7.1.3(11))\", A, A_Id);\n-                     Error_Msg_N\n-                       (\"\\\\corresponding formal parameter has mode Out\", A);\n+                  if Async_Readers_Enabled (A_Id) then\n+                     Property_Error (A, A_Id, Name_Async_Readers);\n+                  elsif Effective_Reads_Enabled (A_Id) then\n+                     Property_Error (A, A_Id, Name_Effective_Reads);\n+                  elsif Effective_Writes_Enabled (A_Id) then\n+                     Property_Error (A, A_Id, Name_Effective_Writes);\n                   end if;\n                end if;\n             end if;"}]}