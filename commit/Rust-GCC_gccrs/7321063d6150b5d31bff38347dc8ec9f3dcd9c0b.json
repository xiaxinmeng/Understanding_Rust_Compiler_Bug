{"sha": "7321063d6150b5d31bff38347dc8ec9f3dcd9c0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyMTA2M2Q2MTUwYjVkMzFiZmYzODM0N2RjOGVjOWYzZGNkOWMwYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-04-10T21:37:34Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-04-10T21:37:34Z"}, "message": "rs6000: Fix stack clash for big residuals (PR85287)\n\nThe stack clash protection code had a logic error in how it decided\nwhether to put the final update size in a register, or to emit it\ndirectly in an insn.  This fixes it.  It also tidies some surrounding\ncode.\n\n\n\tPR target/85287\n\t* gcc/config/rs6000/rs6000.md (allocate_stack): Put the residual size\n\tfor stack clash protection in a register whenever we need it to be in\n\ta register.\n\nFrom-SVN: r259299", "tree": {"sha": "3fcdfb0d30170016776f29fe2331eed98e2dff2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fcdfb0d30170016776f29fe2331eed98e2dff2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0359465c703ad3c214c52c772557ef1b3fe52183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0359465c703ad3c214c52c772557ef1b3fe52183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0359465c703ad3c214c52c772557ef1b3fe52183"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "480af2a620a788c10fb9a81853b1b951a4c40aa8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7321063d6150b5d31bff38347dc8ec9f3dcd9c0b", "patch": "@@ -1,3 +1,9 @@\n+2018-04-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc/config/rs6000/rs6000.md (allocate_stack): Put the residual size\n+\tfor stack clash protection in a register whenever we need it to be in\n+\ta register.\n+\n 2018-04-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* common/config/rs6000/rs6000-common.c (rs6000_option_init_struct):"}, {"sha": "b07e5bd26536f8e735f1d9b80da1c8e8ebdc92a7", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7321063d6150b5d31bff38347dc8ec9f3dcd9c0b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=7321063d6150b5d31bff38347dc8ec9f3dcd9c0b", "patch": "@@ -9783,22 +9783,20 @@\n       /* Now handle residuals.  We just have to set operands[1] correctly\n \t and let the rest of the expander run.  */\n       operands[1] = residual;\n-      if (!CONST_INT_P (residual))\n-\toperands[1] = force_reg (Pmode, operands[1]);\n     }\n \n-  if (GET_CODE (operands[1]) != CONST_INT\n-      || INTVAL (operands[1]) < -32767\n-      || INTVAL (operands[1]) > 32768)\n+  if (!(CONST_INT_P (operands[1])\n+\t&& IN_RANGE (INTVAL (operands[1]), -32767, 32768)))\n     {\n+      operands[1] = force_reg (Pmode, operands[1]);\n       neg_op0 = gen_reg_rtx (Pmode);\n       if (TARGET_32BIT)\n \temit_insn (gen_negsi2 (neg_op0, operands[1]));\n       else\n \temit_insn (gen_negdi2 (neg_op0, operands[1]));\n     }\n   else\n-    neg_op0 = GEN_INT (- INTVAL (operands[1]));\n+    neg_op0 = GEN_INT (-INTVAL (operands[1]));\n \n   insn = emit_insn ((* ((TARGET_32BIT) ? gen_movsi_update_stack\n \t\t\t\t       : gen_movdi_di_update_stack))"}]}