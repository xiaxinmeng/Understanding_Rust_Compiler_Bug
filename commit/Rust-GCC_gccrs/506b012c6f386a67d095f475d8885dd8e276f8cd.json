{"sha": "506b012c6f386a67d095f475d8885dd8e276f8cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2YjAxMmM2ZjM4NmE2N2QwOTVmNDc1ZDg4ODVkZDhlMjc2ZjhjZA==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "1998-10-14T00:07:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-14T00:07:47Z"}, "message": "real.c (emdnorm and etoasc): Disable round to even for c4x target to be compatible with TI compiler.\n\n        * real.c (emdnorm and etoasc): Disable round to even for c4x target\n        to be compatible with TI compiler.\n\nFrom-SVN: r23072", "tree": {"sha": "9790b3e94277f8d0301445c7055cadba3be74c92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9790b3e94277f8d0301445c7055cadba3be74c92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506b012c6f386a67d095f475d8885dd8e276f8cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506b012c6f386a67d095f475d8885dd8e276f8cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506b012c6f386a67d095f475d8885dd8e276f8cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506b012c6f386a67d095f475d8885dd8e276f8cd/comments", "author": null, "committer": null, "parents": [{"sha": "2fdc44405fe0750303f45f8cb26ee755d79a679d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fdc44405fe0750303f45f8cb26ee755d79a679d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fdc44405fe0750303f45f8cb26ee755d79a679d"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "d62c789b0ade1f237a0df19dbf2bf48564b99b3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506b012c6f386a67d095f475d8885dd8e276f8cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506b012c6f386a67d095f475d8885dd8e276f8cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=506b012c6f386a67d095f475d8885dd8e276f8cd", "patch": "@@ -11,6 +11,9 @@ Wed Oct 14 00:38:40 1998  Jeffrey A Law  (law@cygnus.com)\n \n 1998-10-13 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n+\t* real.c (emdnorm and etoasc): Disable round to even for c4x target\n+\tto be compatible with TI compiler.\n+\n \t* Makefile.in (USER_H): Add va-c4x.h to definition.\n \n Tue Oct 13 23:03:37 1998  Richard Henderson  <rth@cygnus.com>"}, {"sha": "7fac64d19a63553c74c4f86b2bab099f05b416e0", "filename": "gcc/real.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506b012c6f386a67d095f475d8885dd8e276f8cd/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506b012c6f386a67d095f475d8885dd8e276f8cd/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=506b012c6f386a67d095f475d8885dd8e276f8cd", "patch": "@@ -79,7 +79,10 @@ netlib.att.com: netlib/cephes.   */\n    `C4X' refers specifically to the floating point format used on\n    Texas Instruments TMS320C3x and TMS320C4x digital signal\n    processors.  This supports QFmode (32-bit float, double) and HFmode\n-   (40-bit long double) where BITS_PER_BYTE is 32.\n+   (40-bit long double) where BITS_PER_BYTE is 32. Unlike IEEE\n+   floats, C4x floats are not rounded to be even. The C4x conversions\n+   were contributed by m.hayes@elec.canterbury.ac.nz (Michael Hayes) and\n+   Haj.Ten.Brugge@net.HCC.nl (Herman ten Brugge).\n \n    If LONG_DOUBLE_TYPE_SIZE = 64 (the default, unless tm.h defines it)\n    then `long double' and `double' are both implemented, but they\n@@ -2594,6 +2597,7 @@ emdnorm (s, lost, subflg, exp, rcntrl)\n   s[rw] &= ~rmsk;\n   if ((r & rmbit) != 0)\n     {\n+#ifndef C4X\n       if (r == rmbit)\n \t{\n \t  if (lost == 0)\n@@ -2607,6 +2611,7 @@ emdnorm (s, lost, subflg, exp, rcntrl)\n \t\tgoto mddone;\n \t    }\n \t}\n+#endif\n       eaddm (rbit, s);\n     }\n  mddone:\n@@ -4932,8 +4937,10 @@ etoasc (x, string, ndigs)\n \t  emovo (y, t);\n \t  if (ecmp (t, ezero) != 0)\n \t    goto roun;\t\t/* round to nearest */\n+#ifndef C4X\n \t  if ((*(s - 1) & 1) == 0)\n \t    goto doexp;\t\t/* round to even */\n+#endif\n \t}\n       /* Round up and propagate carry-outs */\n     roun:"}]}