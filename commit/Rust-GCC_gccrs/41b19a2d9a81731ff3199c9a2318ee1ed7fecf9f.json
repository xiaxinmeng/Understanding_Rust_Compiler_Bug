{"sha": "41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiMTlhMmQ5YTgxNzMxZmYzMTk5YzlhMjMxOGVlMWVkN2ZlY2Y5Zg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-01-09T11:26:42Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-01-09T11:26:42Z"}, "message": "DocumentName.java, [...]: New files.\n\n2004-01-09  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/print/attribute/standard/DocumentName.java,\n\tjavax/print/attribute/standard/JobHoldUntil.java,\n\tjavax/print/attribute/standard/JobMessageFromOperator.java,\n\tjavax/print/attribute/standard/JobName.java,\n\tjavax/print/attribute/standard/JobOriginatingUserName.java,\n\tjavax/print/attribute/standard/OutputDeviceAssigned.java,\n\tjavax/print/attribute/standard/PrinterInfo.java,\n\tjavax/print/attribute/standard/PrinterLocation.java,\n\tjavax/print/attribute/standard/PrinterMakeAndModel.java,\n\tjavax/print/attribute/standard/PrinterMessageFromOperator.java,\n\tjavax/print/attribute/standard/PrinterName.java,\n\tjavax/print/attribute/standard/RequestingUserName.java: New files.\n\t* Makefile.am (javax_source_files): Added new files.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r75573", "tree": {"sha": "7cd1af0a9d351f067bfb6097692b02965120b054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cd1af0a9d351f067bfb6097692b02965120b054"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/comments", "author": null, "committer": null, "parents": [{"sha": "af0088587f92edb6fb004fc7ec5ce0a050ec4d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af0088587f92edb6fb004fc7ec5ce0a050ec4d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af0088587f92edb6fb004fc7ec5ce0a050ec4d16"}], "stats": {"total": 1195, "additions": 1195, "deletions": 0}, "files": [{"sha": "8a04fae492bcfd8c706480d28ee7054c9a1489fc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -1,3 +1,20 @@\n+2004-01-09  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/attribute/standard/DocumentName.java,\n+\tjavax/print/attribute/standard/JobHoldUntil.java,\n+\tjavax/print/attribute/standard/JobMessageFromOperator.java,\n+\tjavax/print/attribute/standard/JobName.java,\n+\tjavax/print/attribute/standard/JobOriginatingUserName.java,\n+\tjavax/print/attribute/standard/OutputDeviceAssigned.java,\n+\tjavax/print/attribute/standard/PrinterInfo.java,\n+\tjavax/print/attribute/standard/PrinterLocation.java,\n+\tjavax/print/attribute/standard/PrinterMakeAndModel.java,\n+\tjavax/print/attribute/standard/PrinterMessageFromOperator.java,\n+\tjavax/print/attribute/standard/PrinterName.java,\n+\tjavax/print/attribute/standard/RequestingUserName.java: New files.\n+\t* Makefile.am (javax_source_files): Added new files.\n+\t* Makefile.in: Regenerated.\n+\n 2004-01-09  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/AbstractAction.java,"}, {"sha": "15f26264394d46ed37c52e71910fc92814d7d2bb", "filename": "libjava/Makefile.am", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -1790,20 +1790,32 @@ javax/print/attribute/standard/Copies.java \\\n javax/print/attribute/standard/DateTimeAtCompleted.java \\\n javax/print/attribute/standard/DateTimeAtCreation.java \\\n javax/print/attribute/standard/DateTimeAtProcessing.java \\\n+javax/print/attribute/standard/DocumentName.java \\\n+javax/print/attribute/standard/JobHoldUntil.java \\\n javax/print/attribute/standard/JobImpressions.java \\\n javax/print/attribute/standard/JobImpressionsCompleted.java \\\n javax/print/attribute/standard/JobKOctets.java \\\n javax/print/attribute/standard/JobKOctetsProcessed.java \\\n javax/print/attribute/standard/JobMediaSheets.java \\\n javax/print/attribute/standard/JobMediaSheetsCompleted.java \\\n+javax/print/attribute/standard/JobMessageFromOperator.java \\\n+javax/print/attribute/standard/JobName.java \\\n+javax/print/attribute/standard/JobOriginatingUserName.java \\\n javax/print/attribute/standard/JobPriority.java \\\n javax/print/attribute/standard/JobPrioritySupported.java \\\n javax/print/attribute/standard/NumberOfDocuments.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/NumberUp.java \\\n+javax/print/attribute/standard/OutputDeviceAssigned.java \\\n javax/print/attribute/standard/PagesPerMinute.java \\\n javax/print/attribute/standard/PagesPerMinuteColor.java \\\n+javax/print/attribute/standard/PrinterInfo.java \\\n+javax/print/attribute/standard/PrinterLocation.java \\\n+javax/print/attribute/standard/PrinterMakeAndModel.java \\\n+javax/print/attribute/standard/PrinterMessageFromOperator.java \\\n+javax/print/attribute/standard/PrinterName.java \\\n javax/print/attribute/standard/QueuedJobCount.java \\\n+javax/print/attribute/standard/RequestingUserName.java \\\n javax/security/auth/x500/X500Principal.java \\\n javax/sql/ConnectionEvent.java \\\n javax/sql/ConnectionEventListener.java \\"}, {"sha": "1057f8935fb6153e0fa97d626bdda4774e196682", "filename": "libjava/Makefile.in", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -1508,20 +1508,32 @@ javax/print/attribute/standard/Copies.java \\\n javax/print/attribute/standard/DateTimeAtCompleted.java \\\n javax/print/attribute/standard/DateTimeAtCreation.java \\\n javax/print/attribute/standard/DateTimeAtProcessing.java \\\n+javax/print/attribute/standard/DocumentName.java \\\n+javax/print/attribute/standard/JobHoldUntil.java \\\n javax/print/attribute/standard/JobImpressions.java \\\n javax/print/attribute/standard/JobImpressionsCompleted.java \\\n javax/print/attribute/standard/JobKOctets.java \\\n javax/print/attribute/standard/JobKOctetsProcessed.java \\\n javax/print/attribute/standard/JobMediaSheets.java \\\n javax/print/attribute/standard/JobMediaSheetsCompleted.java \\\n+javax/print/attribute/standard/JobMessageFromOperator.java \\\n+javax/print/attribute/standard/JobName.java \\\n+javax/print/attribute/standard/JobOriginatingUserName.java \\\n javax/print/attribute/standard/JobPriority.java \\\n javax/print/attribute/standard/JobPrioritySupported.java \\\n javax/print/attribute/standard/NumberOfDocuments.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/NumberUp.java \\\n+javax/print/attribute/standard/OutputDeviceAssigned.java \\\n javax/print/attribute/standard/PagesPerMinute.java \\\n javax/print/attribute/standard/PagesPerMinuteColor.java \\\n+javax/print/attribute/standard/PrinterInfo.java \\\n+javax/print/attribute/standard/PrinterLocation.java \\\n+javax/print/attribute/standard/PrinterMakeAndModel.java \\\n+javax/print/attribute/standard/PrinterMessageFromOperator.java \\\n+javax/print/attribute/standard/PrinterName.java \\\n javax/print/attribute/standard/QueuedJobCount.java \\\n+javax/print/attribute/standard/RequestingUserName.java \\\n javax/security/auth/x500/X500Principal.java \\\n javax/sql/ConnectionEvent.java \\\n javax/sql/ConnectionEventListener.java \\\n@@ -4235,20 +4247,32 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/print/attribute/standard/DateTimeAtCompleted.P \\\n .deps/javax/print/attribute/standard/DateTimeAtCreation.P \\\n .deps/javax/print/attribute/standard/DateTimeAtProcessing.P \\\n+.deps/javax/print/attribute/standard/DocumentName.P \\\n+.deps/javax/print/attribute/standard/JobHoldUntil.P \\\n .deps/javax/print/attribute/standard/JobImpressions.P \\\n .deps/javax/print/attribute/standard/JobImpressionsCompleted.P \\\n .deps/javax/print/attribute/standard/JobKOctets.P \\\n .deps/javax/print/attribute/standard/JobKOctetsProcessed.P \\\n .deps/javax/print/attribute/standard/JobMediaSheets.P \\\n .deps/javax/print/attribute/standard/JobMediaSheetsCompleted.P \\\n+.deps/javax/print/attribute/standard/JobMessageFromOperator.P \\\n+.deps/javax/print/attribute/standard/JobName.P \\\n+.deps/javax/print/attribute/standard/JobOriginatingUserName.P \\\n .deps/javax/print/attribute/standard/JobPriority.P \\\n .deps/javax/print/attribute/standard/JobPrioritySupported.P \\\n .deps/javax/print/attribute/standard/NumberOfDocuments.P \\\n .deps/javax/print/attribute/standard/NumberOfInterveningJobs.P \\\n .deps/javax/print/attribute/standard/NumberUp.P \\\n+.deps/javax/print/attribute/standard/OutputDeviceAssigned.P \\\n .deps/javax/print/attribute/standard/PagesPerMinute.P \\\n .deps/javax/print/attribute/standard/PagesPerMinuteColor.P \\\n+.deps/javax/print/attribute/standard/PrinterInfo.P \\\n+.deps/javax/print/attribute/standard/PrinterLocation.P \\\n+.deps/javax/print/attribute/standard/PrinterMakeAndModel.P \\\n+.deps/javax/print/attribute/standard/PrinterMessageFromOperator.P \\\n+.deps/javax/print/attribute/standard/PrinterName.P \\\n .deps/javax/print/attribute/standard/QueuedJobCount.P \\\n+.deps/javax/print/attribute/standard/RequestingUserName.P \\\n .deps/javax/rmi/BAD_OPERATION.P .deps/javax/rmi/CORBA/ClassDesc.P \\\n .deps/javax/rmi/CORBA/ObjectImpl.P \\\n .deps/javax/rmi/CORBA/PortableRemoteObjectDelegate.P \\"}, {"sha": "da6b2143dae0ac42ef228f5dfe311d35d153b911", "filename": "libjava/javax/print/attribute/standard/DocumentName.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDocumentName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDocumentName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDocumentName.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* DocumentName.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class DocumentName extends TextSyntax\n+  implements DocAttribute\n+{\n+  private static final long serialVersionUID = 7883105848533280430L;\n+\n+  /**\n+   * Creates a <code>DocumentName</code> object.\n+   *\n+   * @param documentName the document name\n+   *\n+   * @exception NullPointerException if documentName is null\n+   */\n+  public DocumentName(String documentName, Locale locale)\n+  {\n+    super(documentName, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof DocumentName))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>DocumentName</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return DocumentName.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"document-name\"\n+   */\n+  public final String getName()\n+  {\n+    return \"document-name\";\n+  }\n+}"}, {"sha": "7370ba84aa8af144a902e093b22dc7afea67078f", "filename": "libjava/javax/print/attribute/standard/JobHoldUntil.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobHoldUntil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobHoldUntil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobHoldUntil.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,96 @@\n+/* JobHoldUntil.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Date;\n+import javax.print.attribute.DateTimeSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+public final class JobHoldUntil extends DateTimeSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -1664471048860415024L;\n+\n+  /**\n+   * Creates a <code>JobHoldUntil</code> object.\n+   *\n+   * @param value the date to hold the job until\n+   *\n+   * @exception NullPointerException if value is null\n+   */\n+  public JobHoldUntil(Date value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobHoldUntil))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobHoldUntil</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobHoldUntil.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-hold-until\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-hold-until\";\n+  }\n+}"}, {"sha": "0caa805cb6c921b109aaad8b5823bcbde7e7a69e", "filename": "libjava/javax/print/attribute/standard/JobMessageFromOperator.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMessageFromOperator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMessageFromOperator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMessageFromOperator.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* JobMessageFromOperator.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class JobMessageFromOperator extends TextSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -4620751846003142047L;\n+\n+  /**\n+   * Creates a <code>JobMessageFromOperator</code> object.\n+   *\n+   * @param message the message\n+   *\n+   * @exception NullPointerException if message is null\n+   */\n+  public JobMessageFromOperator(String message, Locale locale)\n+  {\n+    super(message, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobMessageFromOperator))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobMessageFromOperator</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobMessageFromOperator.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-message-from-operator\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-message-from-operator\";\n+  }\n+}"}, {"sha": "c69434bd18fb45269e2586b026c35e4dc88e561a", "filename": "libjava/javax/print/attribute/standard/JobName.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobName.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,96 @@\n+/* JobName.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class JobName extends TextSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = 4660359192078689545L;\n+\n+  /**\n+   * Creates a <code>JobName</code> object.\n+   *\n+   * @param jobName the job name\n+   *\n+   * @exception NullPointerException if jobName is null\n+   */\n+  public JobName(String jobName, Locale locale)\n+  {\n+    super(jobName, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobName))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobName</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobName.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-name\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-name\";\n+  }\n+}"}, {"sha": "925a5f4a883b5a43b83e845561608c638d7b10ca", "filename": "libjava/javax/print/attribute/standard/JobOriginatingUserName.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobOriginatingUserName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobOriginatingUserName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobOriginatingUserName.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* JobOriginatingUserName.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class JobOriginatingUserName extends TextSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -8052537926362933477L;\n+\n+  /**\n+   * Creates a <code>JobOriginatingUserName</code> object.\n+   *\n+   * @param userName the user name\n+   *\n+   * @exception NullPointerException if userName is null\n+   */\n+  public JobOriginatingUserName(String userName, Locale locale)\n+  {\n+    super(userName, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobOriginatingUserName))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobOriginatingUserName</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobOriginatingUserName.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-originating-user-name\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-originating-user-name\";\n+  }\n+}"}, {"sha": "155b6c752e76ae892f0d387dcfa4d3c525ffd466", "filename": "libjava/javax/print/attribute/standard/OutputDeviceAssigned.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOutputDeviceAssigned.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOutputDeviceAssigned.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOutputDeviceAssigned.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* OutputDeviceAssigned.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class OutputDeviceAssigned extends TextSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 5486733778854271081L;\n+\n+  /**\n+   * Creates a <code>OutputDeviceAssigned</code> object.\n+   *\n+   * @param deviceName the user name\n+   *\n+   * @exception NullPointerException if deviceName is null\n+   */\n+  public OutputDeviceAssigned(String deviceName, Locale locale)\n+  {\n+    super(deviceName, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof OutputDeviceAssigned))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>OutputDeviceAssigned</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return OutputDeviceAssigned.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"output-device-assigened\"\n+   */\n+  public final String getName()\n+  {\n+    return \"output-device-assigened\";\n+  }\n+}"}, {"sha": "a4f77d2766ea5d01070363a8e9debd107e5dfee9", "filename": "libjava/javax/print/attribute/standard/PrinterInfo.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterInfo.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* PrinterInfo.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class PrinterInfo extends TextSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = 7765280618777599727L;\n+\n+  /**\n+   * Creates a <code>PrinterInfo</code> object.\n+   *\n+   * @param printerInfo the printer info\n+   *\n+   * @exception NullPointerException if printerInfo is null\n+   */\n+  public PrinterInfo(String printerInfo, Locale locale)\n+  {\n+    super(printerInfo, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof PrinterInfo))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterInfo</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterInfo.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-info\"\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-info\";\n+  }\n+}"}, {"sha": "d405d25782dfae22b6db0e1c752985da7f2d69aa", "filename": "libjava/javax/print/attribute/standard/PrinterLocation.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterLocation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterLocation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterLocation.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* PrinterLocation.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class PrinterLocation extends TextSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -1598610039865566337L;\n+\n+  /**\n+   * Creates a <code>PrinterLocation</code> object.\n+   *\n+   * @param printerLocation the printer location\n+   *\n+   * @exception NullPointerException if printerLocation is null\n+   */\n+  public PrinterLocation(String printerLocation, Locale locale)\n+  {\n+    super(printerLocation, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof PrinterLocation))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterLocation</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterLocation.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-location\"\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-location\";\n+  }\n+}"}, {"sha": "2609750e1ebb79cec0f455a3e22955d086fc07c1", "filename": "libjava/javax/print/attribute/standard/PrinterMakeAndModel.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMakeAndModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMakeAndModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMakeAndModel.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* PrinterMakeAndModel.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class PrinterMakeAndModel extends TextSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = 4580461489499351411L;\n+\n+  /**\n+   * Creates a <code>PrinterMakeAndModel</code> object.\n+   *\n+   * @param makeAndModel the make and model string\n+   *\n+   * @exception NullPointerException if makeAndModel is null\n+   */\n+  public PrinterMakeAndModel(String makeAndModel, Locale locale)\n+  {\n+    super(makeAndModel, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof PrinterMakeAndModel))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterMakeAndModel</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterMakeAndModel.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-make-and-model\"\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-make-and-model\";\n+  }\n+}"}, {"sha": "aa1c02281158abe0b7d304c5428b75fbbf610da1", "filename": "libjava/javax/print/attribute/standard/PrinterMessageFromOperator.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMessageFromOperator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMessageFromOperator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMessageFromOperator.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* PrinterMessageFromOperator.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class PrinterMessageFromOperator extends TextSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -4486871203218629318L;\n+\n+  /**\n+   * Creates a <code>PrinterMessageFromOperator</code> object.\n+   *\n+   * @param message the message\n+   *\n+   * @exception NullPointerException if message is null\n+   */\n+  public PrinterMessageFromOperator(String message, Locale locale)\n+  {\n+    super(message, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof PrinterMessageFromOperator))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterMessageFromOperator</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterMessageFromOperator.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-message-from-operator\"\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-message-from-operator\";\n+  }\n+}"}, {"sha": "0c55e5fc575f57cbaf6bb8ffe6be1a1a8536b728", "filename": "libjava/javax/print/attribute/standard/PrinterName.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterName.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* PrinterName.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class PrinterName extends TextSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = 299740639137803127L;\n+\n+  /**\n+   * Creates a <code>PrinterName</code> object.\n+   *\n+   * @param printerName the printer name\n+   *\n+   * @exception NullPointerException if printerName is null\n+   */\n+  public PrinterName(String printerName, Locale locale)\n+  {\n+    super(printerName, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof PrinterName))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterName</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterName.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-name\"\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-name\";\n+  }\n+}"}, {"sha": "6805fe86e7f8a384c06f3212b4e66365984a461e", "filename": "libjava/javax/print/attribute/standard/RequestingUserName.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FRequestingUserName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FRequestingUserName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FRequestingUserName.java?ref=41b19a2d9a81731ff3199c9a2318ee1ed7fecf9f", "patch": "@@ -0,0 +1,95 @@\n+/* RequestingUserName.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Locale;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.TextSyntax;\n+\n+public final class RequestingUserName extends TextSyntax\n+  implements PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = 4660359192078689545L;\n+\n+  /**\n+   * Creates a <code>RequestingUserName</code> object.\n+   *\n+   * @param userName the job name\n+   *\n+   * @exception NullPointerException if userName is null\n+   */\n+  public RequestingUserName(String userName, Locale locale)\n+  {\n+    super(userName, locale);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof RequestingUserName))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>RequestingUserName</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return RequestingUserName.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"requesting-user-name\"\n+   */\n+  public final String getName()\n+  {\n+    return \"requesting-user-name\";\n+  }\n+}"}]}