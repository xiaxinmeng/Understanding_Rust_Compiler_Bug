{"sha": "11bf0eb0c73c713a4093fb456839c7dee7b8a722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFiZjBlYjBjNzNjNzEzYTQwOTNmYjQ1NjgzOWM3ZGVlN2I4YTcyMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-09-09T03:29:18Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-09-09T03:29:18Z"}, "message": "builtin-types.def (BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, [...]): New.\n\n\t* builtin-types.def\n\t(BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE,\n\tBT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE,\n\tBT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT_COMPLEX_FLOAT): New.\n\t* builtins.def (BUILT_IN_CACOS, BUILT_IN_CACOSF, BUILT_IN_CACOSH,\n\tBUILT_IN_CACOSHF, BUILT_IN_CACOSHL, BUILT_IN_CACOSL,\n\tBUILT_IN_CARG, BUILT_IN_CARGF, BUILT_IN_CARGL, BUILT_IN_CASIN,\n\tBUILT_IN_CASINF, BUILT_IN_CASINH, BUILT_IN_CASINHF,\n\tBUILT_IN_CASINHL, BUILT_IN_CASINL, BUILT_IN_CATAN,\n\tBUILT_IN_CATANF, BUILT_IN_CATANH, BUILT_IN_CATANHF,\n\tBUILT_IN_CATANHL, BUILT_IN_CATANL, BUILT_IN_CCOS, BUILT_IN_CCOSF,\n\tBUILT_IN_CCOSH, BUILT_IN_CCOSHF, BUILT_IN_CCOSHL, BUILT_IN_CCOSL,\n\tBUILT_IN_CEXP, BUILT_IN_CEXPF, BUILT_IN_CEXPL, BUILT_IN_CPOW,\n\tBUILT_IN_CPOWF, BUILT_IN_CPOWL, BUILT_IN_CPROJ, BUILT_IN_CPROJF,\n\tBUILT_IN_CPROJL, BUILT_IN_CSIN, BUILT_IN_CSINF, BUILT_IN_CSINH,\n\tBUILT_IN_CSINHF, BUILT_IN_CSINHL, BUILT_IN_CSINL, BUILT_IN_CSQRT,\n\tBUILT_IN_CSQRTF, BUILT_IN_CSQRTL, BUILT_IN_CTAN, BUILT_IN_CTANF,\n\tBUILT_IN_CTANH, BUILT_IN_CTANHF, BUILT_IN_CTANHL, BUILT_IN_CTANL):\n\tNew.\n\t* doc/extend.texi: Document new builtins.\n\ntestsuite:\n\t* gcc.dg/builtins-1.c: Add more _Complex tests.\n\t* gcc.dg/torture/builtin-attr-1.c: Likewise.\n\nFrom-SVN: r71226", "tree": {"sha": "0e93754e9ec6457ec4c597c62ce1dadc4a3731a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e93754e9ec6457ec4c597c62ce1dadc4a3731a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11bf0eb0c73c713a4093fb456839c7dee7b8a722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11bf0eb0c73c713a4093fb456839c7dee7b8a722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11bf0eb0c73c713a4093fb456839c7dee7b8a722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11bf0eb0c73c713a4093fb456839c7dee7b8a722/comments", "author": null, "committer": null, "parents": [{"sha": "df049e595fcfd94fda08283ae57bbeaa36947854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df049e595fcfd94fda08283ae57bbeaa36947854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df049e595fcfd94fda08283ae57bbeaa36947854"}], "stats": {"total": 239, "additions": 213, "deletions": 26}, "files": [{"sha": "e3895abfb78274548cadad99c4457bf2c42cec6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -1,3 +1,26 @@\n+2003-09-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* builtin-types.def\n+\t(BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE,\n+\tBT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE,\n+\tBT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT_COMPLEX_FLOAT): New.\n+\t* builtins.def (BUILT_IN_CACOS, BUILT_IN_CACOSF, BUILT_IN_CACOSH,\n+\tBUILT_IN_CACOSHF, BUILT_IN_CACOSHL, BUILT_IN_CACOSL,\n+\tBUILT_IN_CARG, BUILT_IN_CARGF, BUILT_IN_CARGL, BUILT_IN_CASIN,\n+\tBUILT_IN_CASINF, BUILT_IN_CASINH, BUILT_IN_CASINHF,\n+\tBUILT_IN_CASINHL, BUILT_IN_CASINL, BUILT_IN_CATAN,\n+\tBUILT_IN_CATANF, BUILT_IN_CATANH, BUILT_IN_CATANHF,\n+\tBUILT_IN_CATANHL, BUILT_IN_CATANL, BUILT_IN_CCOS, BUILT_IN_CCOSF,\n+\tBUILT_IN_CCOSH, BUILT_IN_CCOSHF, BUILT_IN_CCOSHL, BUILT_IN_CCOSL,\n+\tBUILT_IN_CEXP, BUILT_IN_CEXPF, BUILT_IN_CEXPL, BUILT_IN_CPOW,\n+\tBUILT_IN_CPOWF, BUILT_IN_CPOWL, BUILT_IN_CPROJ, BUILT_IN_CPROJF,\n+\tBUILT_IN_CPROJL, BUILT_IN_CSIN, BUILT_IN_CSINF, BUILT_IN_CSINH,\n+\tBUILT_IN_CSINHF, BUILT_IN_CSINHL, BUILT_IN_CSINL, BUILT_IN_CSQRT,\n+\tBUILT_IN_CSQRTF, BUILT_IN_CSQRTL, BUILT_IN_CTAN, BUILT_IN_CTANF,\n+\tBUILT_IN_CTANH, BUILT_IN_CTANHF, BUILT_IN_CTANHL, BUILT_IN_CTANL):\n+\tNew.\n+\t* doc/extend.texi: Document new builtins.\n+\n Tue Sep  9 02:18:06 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_varpool_finalize_decl): Sanity check duplicated"}, {"sha": "f33bacd4330f1132699ea23c77a6f286deef221e", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -212,6 +212,12 @@ DEF_FUNCTION_TYPE_2 (BT_FN_INT_CONST_STRING_VALIST_ARG,\n \t\t     BT_INT, BT_CONST_STRING, BT_VALIST_ARG)\n DEF_FUNCTION_TYPE_2 (BT_FN_PTR_SIZE_SIZE,\n \t\t     BT_PTR, BT_SIZE, BT_SIZE)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT_COMPLEX_FLOAT, \n+\t\t     BT_COMPLEX_FLOAT, BT_COMPLEX_FLOAT, BT_COMPLEX_FLOAT)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE, \n+\t\t     BT_COMPLEX_DOUBLE, BT_COMPLEX_DOUBLE, BT_COMPLEX_DOUBLE)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, \n+\t             BT_COMPLEX_LONGDOUBLE, BT_COMPLEX_LONGDOUBLE, BT_COMPLEX_LONGDOUBLE)\n \n DEF_FUNCTION_TYPE_3 (BT_FN_STRING_STRING_CONST_STRING_SIZE,\n \t\t     BT_STRING, BT_STRING, BT_CONST_STRING, BT_SIZE)"}, {"sha": "fc6ddcaedfaa6762282c1e0625a02820d7060d03", "filename": "gcc/builtins.def", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -358,18 +358,74 @@ DEF_EXT_LIB_BUILTIN    (BUILT_IN_YNF, \"ynf\", BT_FN_FLOAT_INT_FLOAT, ATTR_MATHFN_\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_YNL, \"ynl\", BT_FN_LONGDOUBLE_INT_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n \n /* Category: _Complex math builtins.  */\n+/* The C99 clog function conflicts with C++ iostreams clog, see\n+   http://gcc.gnu.org/ml/gcc-patches/2003-09/msg00510.html  */\n DEF_C99_BUILTIN        (BUILT_IN_CABS, \"cabs\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_BUILTIN        (BUILT_IN_CABSF, \"cabsf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_BUILTIN        (BUILT_IN_CABSL, \"cabsl\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CACOS, \"cacos\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CACOSF, \"cacosf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CACOSH, \"cacosh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CACOSHF, \"cacoshf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CACOSHL, \"cacoshl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CACOSL, \"cacosl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CARG, \"carg\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CARGF, \"cargf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CARGL, \"cargl\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CASIN, \"casin\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CASINF, \"casinf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CASINH, \"casinh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CASINHF, \"casinhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CASINHL, \"casinhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CASINL, \"casinl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CATAN, \"catan\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CATANF, \"catanf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CATANH, \"catanh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CATANHF, \"catanhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CATANHL, \"catanhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CATANL, \"catanl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CCOS, \"ccos\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CCOSF, \"ccosf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CCOSH, \"ccosh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CCOSHF, \"ccoshf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CCOSHL, \"ccoshl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CCOSL, \"ccosl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CEXP, \"cexp\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CEXPF, \"cexpf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CEXPL, \"cexpl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_BUILTIN        (BUILT_IN_CIMAG, \"cimag\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_CIMAGF, \"cimagf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_CIMAGL, \"cimagl\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_CONST_NOTHROW_LIST)\n+/*DEF_C99_BUILTIN        (BUILT_IN_CLOG, \"clog\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)*/\n+/*DEF_C99_BUILTIN        (BUILT_IN_CLOGF, \"clogf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)*/\n+/*DEF_C99_BUILTIN        (BUILT_IN_CLOGL, \"clogl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)*/\n DEF_C99_BUILTIN        (BUILT_IN_CONJ, \"conj\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_CONJF, \"conjf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_CONJL, \"conjl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_CPOW, \"cpow\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CPOWF, \"cpowf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CPOWL, \"cpowl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CPROJ, \"cproj\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CPROJF, \"cprojf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CPROJL, \"cprojl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_BUILTIN        (BUILT_IN_CREAL, \"creal\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_CREALF, \"crealf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_CONST_NOTHROW_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_CREALL, \"creall\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_CONST_NOTHROW_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_CSIN, \"csin\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSINF, \"csinf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSINH, \"csinh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSINHF, \"csinhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSINHL, \"csinhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSINL, \"csinl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSQRT, \"csqrt\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSQRTF, \"csqrtf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CSQRTL, \"csqrtl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CTAN, \"ctan\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CTANF, \"ctanf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CTANH, \"ctanh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CTANHF, \"ctanhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CTANHL, \"ctanhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_C99_BUILTIN        (BUILT_IN_CTANL, \"ctanl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n \n /* Category: string/memory builtins.  */\n /* bcmp, bcopy and bzero have traditionally accepted NULL pointers"}, {"sha": "788df630284cf1b44ed66e0f1d40186573c1469e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 89, "deletions": 26, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -4756,13 +4756,43 @@ v4si f (v4si a, v4si b, v4si c)\n @findex cabs\n @findex cabsf\n @findex cabsl\n+@findex cacos\n+@findex cacosf\n+@findex cacosh\n+@findex cacoshf\n+@findex cacoshl\n+@findex cacosl\n @findex calloc\n+@findex carg\n+@findex cargf\n+@findex cargl\n+@findex casin\n+@findex casinf\n+@findex casinh\n+@findex casinhf\n+@findex casinhl\n+@findex casinl\n+@findex catan\n+@findex catanf\n+@findex catanh\n+@findex catanhf\n+@findex catanhl\n+@findex catanl\n @findex cbrt\n @findex cbrtf\n @findex cbrtl\n+@findex ccos\n+@findex ccosf\n+@findex ccosh\n+@findex ccoshf\n+@findex ccoshl\n+@findex ccosl\n @findex ceil\n @findex ceilf\n @findex ceill\n+@findex cexp\n+@findex cexpf\n+@findex cexpl\n @findex cimag\n @findex cimagf\n @findex cimagl\n@@ -4778,9 +4808,30 @@ v4si f (v4si a, v4si b, v4si c)\n @findex coshf\n @findex coshl\n @findex cosl\n+@findex cpow\n+@findex cpowf\n+@findex cpowl\n+@findex cproj\n+@findex cprojf\n+@findex cprojl\n @findex creal\n @findex crealf\n @findex creall\n+@findex csin\n+@findex csinf\n+@findex csinh\n+@findex csinhf\n+@findex csinhl\n+@findex csinl\n+@findex csqrt\n+@findex csqrtf\n+@findex csqrtl\n+@findex ctan\n+@findex ctanf\n+@findex ctanh\n+@findex ctanhf\n+@findex ctanhl\n+@findex ctanl\n @findex dcgettext\n @findex dgettext\n @findex drem\n@@ -5046,32 +5097,44 @@ mode.\n The ISO C99 functions\n @code{_Exit}, @code{acoshf}, @code{acoshl}, @code{acosh}, @code{asinhf},\n @code{asinhl}, @code{asinh}, @code{atanhf}, @code{atanhl}, @code{atanh},\n-@code{cabsf}, @code{cabsl}, @code{cabs}, @code{cbrtf}, @code{cbrtl},\n-@code{cbrt}, @code{cimagf}, @code{cimagl}, @code{cimag}, @code{conjf},\n-@code{conjl}, @code{conj}, @code{copysignf}, @code{copysignl},\n-@code{copysign}, @code{crealf}, @code{creall}, @code{creal},\n-@code{erfcf}, @code{erfcl}, @code{erfc}, @code{erff}, @code{erfl},\n-@code{erf}, @code{exp2f}, @code{exp2l}, @code{exp2}, @code{expm1f},\n-@code{expm1l}, @code{expm1}, @code{fdimf}, @code{fdiml}, @code{fdim},\n-@code{fmaf}, @code{fmal}, @code{fmaxf}, @code{fmaxl}, @code{fmax},\n-@code{fma}, @code{fminf}, @code{fminl}, @code{fmin}, @code{hypotf},\n-@code{hypotl}, @code{hypot}, @code{ilogbf}, @code{ilogbl}, @code{ilogb},\n-@code{imaxabs}, @code{lgammaf}, @code{lgammal}, @code{lgamma},\n-@code{llabs}, @code{llrintf}, @code{llrintl}, @code{llrint},\n-@code{llroundf}, @code{llroundl}, @code{llround}, @code{log1pf},\n-@code{log1pl}, @code{log1p}, @code{log2f}, @code{log2l}, @code{log2},\n-@code{logbf}, @code{logbl}, @code{logb}, @code{lrintf}, @code{lrintl},\n-@code{lrint}, @code{lroundf}, @code{lroundl}, @code{lround},\n-@code{nearbyintf}, @code{nearbyintl}, @code{nearbyint},\n-@code{nextafterf}, @code{nextafterl}, @code{nextafter},\n-@code{nexttowardf}, @code{nexttowardl}, @code{nexttoward},\n-@code{remainderf}, @code{remainderl}, @code{remainder}, @code{remquof},\n-@code{remquol}, @code{remquo}, @code{rintf}, @code{rintl}, @code{rint},\n-@code{roundf}, @code{roundl}, @code{round}, @code{scalblnf},\n-@code{scalblnl}, @code{scalbln}, @code{scalbnf}, @code{scalbnl},\n-@code{scalbn}, @code{snprintf}, @code{tgammaf}, @code{tgammal},\n-@code{tgamma}, @code{truncf}, @code{truncl}, @code{trunc},\n-@code{vfscanf}, @code{vscanf}, @code{vsnprintf} and @code{vsscanf},\n+@code{cabsf}, @code{cabsl}, @code{cabs}, @code{cacosf}, @code{cacoshf},\n+@code{cacoshl}, @code{cacosh}, @code{cacosl}, @code{cacos},\n+@code{cargf}, @code{cargl}, @code{carg}, @code{casinf}, @code{casinhf},\n+@code{casinhl}, @code{casinh}, @code{casinl}, @code{casin},\n+@code{catanf}, @code{catanhf}, @code{catanhl}, @code{catanh},\n+@code{catanl}, @code{catan}, @code{cbrtf}, @code{cbrtl}, @code{cbrt},\n+@code{ccosf}, @code{ccoshf}, @code{ccoshl}, @code{ccosh}, @code{ccosl},\n+@code{ccos}, @code{cexpf}, @code{cexpl}, @code{cexp}, @code{cimagf},\n+@code{cimagl}, @code{cimag},\n+@code{conjf}, @code{conjl}, @code{conj}, @code{copysignf},\n+@code{copysignl}, @code{copysign}, @code{cpowf}, @code{cpowl},\n+@code{cpow}, @code{cprojf}, @code{cprojl}, @code{cproj}, @code{crealf},\n+@code{creall}, @code{creal}, @code{csinf}, @code{csinhf}, @code{csinhl},\n+@code{csinh}, @code{csinl}, @code{csin}, @code{csqrtf}, @code{csqrtl},\n+@code{csqrt}, @code{ctanf}, @code{ctanhf}, @code{ctanhl}, @code{ctanh},\n+@code{ctanl}, @code{ctan}, @code{erfcf}, @code{erfcl}, @code{erfc},\n+@code{erff}, @code{erfl}, @code{erf}, @code{exp2f}, @code{exp2l},\n+@code{exp2}, @code{expm1f}, @code{expm1l}, @code{expm1}, @code{fdimf},\n+@code{fdiml}, @code{fdim}, @code{fmaf}, @code{fmal}, @code{fmaxf},\n+@code{fmaxl}, @code{fmax}, @code{fma}, @code{fminf}, @code{fminl},\n+@code{fmin}, @code{hypotf}, @code{hypotl}, @code{hypot}, @code{ilogbf},\n+@code{ilogbl}, @code{ilogb}, @code{imaxabs}, @code{lgammaf},\n+@code{lgammal}, @code{lgamma}, @code{llabs}, @code{llrintf},\n+@code{llrintl}, @code{llrint}, @code{llroundf}, @code{llroundl},\n+@code{llround}, @code{log1pf}, @code{log1pl}, @code{log1p},\n+@code{log2f}, @code{log2l}, @code{log2}, @code{logbf}, @code{logbl},\n+@code{logb}, @code{lrintf}, @code{lrintl}, @code{lrint}, @code{lroundf},\n+@code{lroundl}, @code{lround}, @code{nearbyintf}, @code{nearbyintl},\n+@code{nearbyint}, @code{nextafterf}, @code{nextafterl},\n+@code{nextafter}, @code{nexttowardf}, @code{nexttowardl},\n+@code{nexttoward}, @code{remainderf}, @code{remainderl},\n+@code{remainder}, @code{remquof}, @code{remquol}, @code{remquo},\n+@code{rintf}, @code{rintl}, @code{rint}, @code{roundf}, @code{roundl},\n+@code{round}, @code{scalblnf}, @code{scalblnl}, @code{scalbln},\n+@code{scalbnf}, @code{scalbnl}, @code{scalbn}, @code{snprintf},\n+@code{tgammaf}, @code{tgammal}, @code{tgamma}, @code{truncf},\n+@code{truncl}, @code{trunc}, @code{vfscanf}, @code{vscanf},\n+@code{vsnprintf} and @code{vsscanf}\n are handled as built-in functions\n except in strict ISO C90 mode (@option{-ansi} or @option{-std=c89}).\n "}, {"sha": "62652d196f3ddf9af1bb60de68c4735d27f97a2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -1,5 +1,8 @@\n 2003-09-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* gcc.dg/builtins-1.c: Add more _Complex tests.\n+\t* gcc.dg/torture/builtin-attr-1.c: Likewise.\n+\n \t* gcc.dg/builtins-1.c: Test existing _Complex functions.\n \t* gcc.dg/torture/builtin-attr-1.c: Likewise.\n "}, {"sha": "41bd8d5788cfeeb4c3b8d1a1e6f346ec33d19cb5", "filename": "gcc/testsuite/gcc.dg/builtins-1.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-1.c?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -180,6 +180,24 @@ FPTEST2ARG1 (yn, int)\n \n /* Keep this list sorted alphabetically by function name.  */\n CPTEST1RETFP (cabs)\n+CPTEST1      (cacos)\n+CPTEST1      (cacosh)\n+CPTEST1RETFP (carg)\n+CPTEST1      (casin)\n+CPTEST1      (casinh)\n+CPTEST1      (catan)\n+CPTEST1      (catanh)\n+CPTEST1      (ccos)\n+CPTEST1      (ccosh)\n+CPTEST1      (cexp)\n CPTEST1RETFP (cimag)\n+/*CPTEST1      (clog)*/\n CPTEST1      (conj)\n+CPTEST2      (cpow)\n+CPTEST1      (cproj)\n CPTEST1RETFP (creal)\n+CPTEST1      (csin)\n+CPTEST1      (csinh)\n+CPTEST1      (csqrt)\n+CPTEST1      (ctan)\n+CPTEST1      (ctanh)"}, {"sha": "304e92afa8f78f81b896e77c3a6fbed6238c3fd0", "filename": "gcc/testsuite/gcc.dg/torture/builtin-attr-1.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11bf0eb0c73c713a4093fb456839c7dee7b8a722/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-attr-1.c?ref=11bf0eb0c73c713a4093fb456839c7dee7b8a722", "patch": "@@ -326,9 +326,27 @@ FPTEST2ARG1        (yn, int)\n \n /* Test the complex math builtins.  */\n /*CPTEST1 (cabs) See http://gcc.gnu.org/ml/gcc-patches/2003-09/msg00040.html */\n+CPTEST1 (cacos)\n+CPTEST1 (cacosh)\n+CPTEST1 (carg)\n+CPTEST1 (casin)\n+CPTEST1 (casinh)\n+CPTEST1 (catan)\n+CPTEST1 (catanh)\n+CPTEST1 (ccos)\n+CPTEST1 (ccosh)\n+CPTEST1 (cexp)\n CPTEST1 (cimag)\n+/*CPTEST1 (clog)*/\n CPTEST1 (conj)\n+CPTEST2 (cpow)\n+CPTEST1 (cproj)\n CPTEST1 (creal)\n+CPTEST1 (csin)\n+CPTEST1 (csinh)\n+CPTEST1 (csqrt)\n+CPTEST1 (ctan)\n+CPTEST1 (ctanh)\n \n /* Various other const builtins.  */\n TEST1         (abs, int)"}]}