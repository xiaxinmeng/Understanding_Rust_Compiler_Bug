{"sha": "330cc73d9838aa51c162f29ed1e5ccf659b440d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMwY2M3M2Q5ODM4YWE1MWMxNjJmMjllZDFlNWNjZjY1OWI0NDBkMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-11-12T03:40:24Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-11-12T03:40:24Z"}, "message": "Add std::future_error constructor from future_errc\n\n\t* include/std/future (future_error): Make existing constructor\n\tprivate and add constructor from future_errc.\n\nFrom-SVN: r242334", "tree": {"sha": "d7064649b874219d4ee5e61dfa01a5ba577eced6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7064649b874219d4ee5e61dfa01a5ba577eced6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/330cc73d9838aa51c162f29ed1e5ccf659b440d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/330cc73d9838aa51c162f29ed1e5ccf659b440d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/330cc73d9838aa51c162f29ed1e5ccf659b440d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/330cc73d9838aa51c162f29ed1e5ccf659b440d3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f88f1f2ab86b2e0f07996d4d1ab10a225264377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f88f1f2ab86b2e0f07996d4d1ab10a225264377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f88f1f2ab86b2e0f07996d4d1ab10a225264377"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "00f6670e106bbdc38564469d34c16f91694635f5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/330cc73d9838aa51c162f29ed1e5ccf659b440d3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/330cc73d9838aa51c162f29ed1e5ccf659b440d3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=330cc73d9838aa51c162f29ed1e5ccf659b440d3", "patch": "@@ -1,5 +1,8 @@\n 2016-11-11  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/future (future_error): Make existing constructor\n+\tprivate and add constructor from future_errc.\n+\n \t* include/bits/shared_ptr.h (hash<shared_ptr<T>>): Use element_type.\n \t* include/bits/shared_ptr_base.h (hash<__shared_ptr<T, L>>): Likewise.\n "}, {"sha": "4d125e8fe9d3ee3a6f5a81e152df909e3434a947", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/330cc73d9838aa51c162f29ed1e5ccf659b440d3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/330cc73d9838aa51c162f29ed1e5ccf659b440d3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=330cc73d9838aa51c162f29ed1e5ccf659b440d3", "patch": "@@ -95,11 +95,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   class future_error : public logic_error\n   {\n-    error_code \t\t\t_M_code;\n-\n   public:\n-    explicit future_error(error_code __ec)\n-    : logic_error(\"std::future_error: \" + __ec.message()), _M_code(__ec)\n+    explicit\n+    future_error(future_errc __errc)\n+    : future_error(std::make_error_code(__errc))\n     { }\n \n     virtual ~future_error() noexcept;\n@@ -109,6 +108,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     const error_code&\n     code() const noexcept { return _M_code; }\n+\n+  public:\n+    explicit\n+    future_error(error_code __ec)\n+    : logic_error(\"std::future_error: \" + __ec.message()), _M_code(__ec)\n+    { }\n+\n+    friend void __throw_future_error(int);\n+\n+    error_code \t\t\t_M_code;\n   };\n \n   // Forward declarations.\n@@ -426,8 +435,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \tif (static_cast<bool>(__res))\n \t  {\n-\t    error_code __ec(make_error_code(future_errc::broken_promise));\n-\t    __res->_M_error = make_exception_ptr(future_error(__ec));\n+\t    __res->_M_error =\n+\t      make_exception_ptr(future_error(future_errc::broken_promise));\n \t    // This function is only called when the last asynchronous result\n \t    // provider is abandoning this shared state, so noone can be\n \t    // trying to make the shared state ready at the same time, and"}]}