{"sha": "d28cbb07672ee31fe07754d6306b47745ea11014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4Y2JiMDc2NzJlZTMxZmUwNzc1NGQ2MzA2YjQ3NzQ1ZWExMTAxNA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-08-17T14:00:52Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-08-17T14:00:52Z"}, "message": "tree-ssa-loop-im.c (MAX_LSM_NAME_LENGTH, [...]): New.\n\n\t* tree-ssa-loop-im.c (MAX_LSM_NAME_LENGTH, lsm_tmp_name,\n\tlsm_tmp_name_length): New.\n\t(lsm_tmp_name_add, gen_lsm_tmp_name, get_lsm_tmp_name): New functions.\n\t(schedule_sm): Use get_lsm_tmp_name instead of \"lsm_tmp\".\n\nFrom-SVN: r103215", "tree": {"sha": "f9839da889ff12c5c75dedb6d24481349cfb1830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9839da889ff12c5c75dedb6d24481349cfb1830"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d28cbb07672ee31fe07754d6306b47745ea11014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28cbb07672ee31fe07754d6306b47745ea11014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28cbb07672ee31fe07754d6306b47745ea11014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28cbb07672ee31fe07754d6306b47745ea11014/comments", "author": null, "committer": null, "parents": [{"sha": "39bd07e86ec4fbef09c64ffd23ed627dc4b7c05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bd07e86ec4fbef09c64ffd23ed627dc4b7c05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bd07e86ec4fbef09c64ffd23ed627dc4b7c05d"}], "stats": {"total": 113, "additions": 112, "deletions": 1}, "files": [{"sha": "3acb28946da967f5c4227c0573b65322048fcd51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28cbb07672ee31fe07754d6306b47745ea11014/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28cbb07672ee31fe07754d6306b47745ea11014/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d28cbb07672ee31fe07754d6306b47745ea11014", "patch": "@@ -1,3 +1,10 @@\n+2005-08-16  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* tree-ssa-loop-im.c (MAX_LSM_NAME_LENGTH, lsm_tmp_name,\n+\tlsm_tmp_name_length): New.\n+\t(lsm_tmp_name_add, gen_lsm_tmp_name, get_lsm_tmp_name): New functions.\n+\t(schedule_sm): Use get_lsm_tmp_name instead of \"lsm_tmp\".\n+\n 2005-08-16  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \t    Andreas Krebbel  <krebbel1@de.ibm.com>\n "}, {"sha": "ee6aaeef91d9ff1cdcae2f06220b4812ec56362a", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 105, "deletions": 1, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28cbb07672ee31fe07754d6306b47745ea11014/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28cbb07672ee31fe07754d6306b47745ea11014/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=d28cbb07672ee31fe07754d6306b47745ea11014", "patch": "@@ -927,6 +927,109 @@ rewrite_mem_refs (tree tmp_var, struct mem_ref_loc *mem_refs)\n     }\n }\n \n+/* The name and the length of the currently generated variable\n+   for lsm.  */\n+#define MAX_LSM_NAME_LENGTH 40\n+static char lsm_tmp_name[MAX_LSM_NAME_LENGTH + 1];\n+static int lsm_tmp_name_length;\n+\n+/* Adds S to lsm_tmp_name.  */\n+\n+static void\n+lsm_tmp_name_add (const char *s)\n+{\n+  int l = strlen (s) + lsm_tmp_name_length;\n+  if (l > MAX_LSM_NAME_LENGTH)\n+    return;\n+\n+  strcpy (lsm_tmp_name + lsm_tmp_name_length, s);\n+  lsm_tmp_name_length = l;\n+}\n+\n+/* Stores the name for temporary variable that replaces REF to\n+   lsm_tmp_name.  */\n+\n+static void\n+gen_lsm_tmp_name (tree ref)\n+{\n+  const char *name;\n+\n+  switch (TREE_CODE (ref))\n+    {\n+    case MISALIGNED_INDIRECT_REF:\n+    case ALIGN_INDIRECT_REF:\n+    case INDIRECT_REF:\n+      gen_lsm_tmp_name (TREE_OPERAND (ref, 0));\n+      lsm_tmp_name_add (\"_\");\n+      break;\n+\n+    case BIT_FIELD_REF:\n+    case VIEW_CONVERT_EXPR:\n+    case ARRAY_RANGE_REF:\n+      gen_lsm_tmp_name (TREE_OPERAND (ref, 0));\n+      break;\n+\n+    case REALPART_EXPR:\n+      gen_lsm_tmp_name (TREE_OPERAND (ref, 0));\n+      lsm_tmp_name_add (\"_RE\");\n+      break;\n+      \n+    case IMAGPART_EXPR:\n+      gen_lsm_tmp_name (TREE_OPERAND (ref, 0));\n+      lsm_tmp_name_add (\"_IM\");\n+      break;\n+\n+    case COMPONENT_REF:\n+      gen_lsm_tmp_name (TREE_OPERAND (ref, 0));\n+      lsm_tmp_name_add (\"_\");\n+      name = get_name (TREE_OPERAND (ref, 1));\n+      if (!name)\n+\tname = \"F\";\n+      lsm_tmp_name_add (\"_\");\n+      lsm_tmp_name_add (name);\n+\n+    case ARRAY_REF:\n+      gen_lsm_tmp_name (TREE_OPERAND (ref, 0));\n+      lsm_tmp_name_add (\"_I\");\n+      break;\n+\n+    case SSA_NAME:\n+      ref = SSA_NAME_VAR (ref);\n+      /* Fallthru.  */\n+\n+    case VAR_DECL:\n+    case PARM_DECL:\n+      name = get_name (ref);\n+      if (!name)\n+\tname = \"D\";\n+      lsm_tmp_name_add (name);\n+      break;\n+\n+    case STRING_CST:\n+      lsm_tmp_name_add (\"S\");\n+      break;\n+\n+    case RESULT_DECL:\n+      lsm_tmp_name_add (\"R\");\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+\n+/* Determines name for temporary variable that replaces REF.\n+   The name is accumulated into the lsm_tmp_name variable.  */\n+\n+static char *\n+get_lsm_tmp_name (tree ref)\n+{\n+  lsm_tmp_name_length = 0;\n+  gen_lsm_tmp_name (ref);\n+  lsm_tmp_name_add (\"_lsm\");\n+  return lsm_tmp_name;\n+}\n+\n /* Records request for store motion of memory reference REF from LOOP.\n    MEM_REFS is the list of occurrences of the reference REF inside LOOP;\n    these references are rewritten by a new temporary variable.\n@@ -952,7 +1055,8 @@ schedule_sm (struct loop *loop, edge *exits, unsigned n_exits, tree ref,\n       fprintf (dump_file, \" from loop %d\\n\", loop->num);\n     }\n \n-  tmp_var = make_rename_temp (TREE_TYPE (ref), \"lsm_tmp\");\n+  tmp_var = make_rename_temp (TREE_TYPE (ref),\n+\t\t\t      get_lsm_tmp_name (ref));\n \n   fmt_data.loop = loop;\n   fmt_data.orig_loop = loop;"}]}