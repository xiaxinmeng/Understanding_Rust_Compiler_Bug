{"sha": "241bea26410d0aec26d5f98d032061d9fa455a74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQxYmVhMjY0MTBkMGFlYzI2ZDVmOThkMDMyMDYxZDlmYTQ1NWE3NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T10:33:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T10:33:58Z"}, "message": "[multiple changes]\n\n2009-08-17  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* a-calend-vms.adb: Fix typo.\n\n2009-08-17  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-taprop-posix.adb: Round up the stack size to avoid failure on\n\tDarwin.\n\n2009-08-17  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_cat.adb (Validate_Static_Object_Name): Update comment.\n\n2009-08-17  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Arguments_Collected): Unneeded, removed\n\t(Change_To_Object_Directory): Use Project directly. Add pragma Assert to\n\tensure caller does not pass in No_Project.\n\t(Compile): Add new parameter Project. Let procedure\n\tCollect_Arguments_And_Compile provide the proper value.\n\n\t* switch-c.adb: Add documentation for -gnatea and -gnatez\n\n2009-08-17  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_ugn.texi: Changed name of package in SAL example, to avoid\n\tclash with Ada 2005 reserved word (interface).\n\nFrom-SVN: r150838", "tree": {"sha": "08fd5f5eeb7e7b34ada41c76539af0bee7badf9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08fd5f5eeb7e7b34ada41c76539af0bee7badf9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/241bea26410d0aec26d5f98d032061d9fa455a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241bea26410d0aec26d5f98d032061d9fa455a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241bea26410d0aec26d5f98d032061d9fa455a74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241bea26410d0aec26d5f98d032061d9fa455a74/comments", "author": null, "committer": null, "parents": [{"sha": "5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2d216d27bef0ee6f851e1f75d7b79945504ac5"}], "stats": {"total": 144, "additions": 83, "deletions": 61}, "files": [{"sha": "8dfceb4b01ba30c30e8402f2714847f9cc895b9f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -1,3 +1,31 @@\n+2009-08-17  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* a-calend-vms.adb: Fix typo.\n+\n+2009-08-17  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-taprop-posix.adb: Round up the stack size to avoid failure on\n+\tDarwin.\n+\n+2009-08-17  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_cat.adb (Validate_Static_Object_Name): Update comment.\n+\n+2009-08-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Arguments_Collected): Unneeded, removed\n+\t(Change_To_Object_Directory): Use Project directly. Add pragma Assert to\n+\tensure caller does not pass in No_Project.\n+\t(Compile): Add new parameter Project. Let procedure\n+\tCollect_Arguments_And_Compile provide the proper value.\n+\n+\t* switch-c.adb: Add documentation for -gnatea and -gnatez\n+\n+2009-08-17  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_ugn.texi: Changed name of package in SAL example, to avoid\n+\tclash with Ada 2005 reserved word (interface).\n+\n 2009-08-17  Robert Dewar  <dewar@adacore.com>\n \n \t* a-crbtgk.adb, a-crdlli.adb, a-direct.adb, a-caldel-vms.adb,"}, {"sha": "788ff28a4d0145fb80b82dfda5fa4816963854db", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -921,7 +921,7 @@ package body Ada.Calendar is\n \n          --  Step 3: Handle leap second occurrences\n \n-         tm_Sec := (if Leap_Sec then 60 else Second);\n+         tm_sec := (if Leap_Sec then 60 else Second);\n       end To_Struct_Tm;\n \n       ------------------"}, {"sha": "7a65203b7fe0047b2a71648982aaabf48513f339", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -19433,15 +19433,15 @@ or @code{pragma Convention}.\n Here is an example of simple library interface for use with C main program:\n \n @smallexample @c ada\n-package Interface is\n+package My_Package is\n \n    procedure Do_Something;\n    pragma Export (C, Do_Something, \"do_something\");\n \n    procedure Do_Something_Else;\n    pragma Export (C, Do_Something_Else, \"do_something_else\");\n \n-end Interface;\n+end My_Package;\n @end smallexample\n \n @noindent"}, {"sha": "20fc989a0156ef35d69e8704375698cca185d0ed", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 29, "deletions": 51, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -519,10 +519,6 @@ package body Make is\n    Last_Argument : Natural := 0;\n    --  Last index of arguments in Arguments above\n \n-   Arguments_Collected : Boolean := False;\n-   --  Set to True when the arguments for the next invocation of the compiler\n-   --  have been collected.\n-\n    Arguments_Project : Project_Id;\n    --  Project id, if any, of the source to be compiled\n \n@@ -1359,32 +1355,24 @@ package body Make is\n    --------------------------------\n \n    procedure Change_To_Object_Directory (Project : Project_Id) is\n-      Actual_Project   : Project_Id;\n       Object_Directory : Path_Name_Type;\n \n    begin\n-      --  For sources outside of any project, compilation occurs in the object\n-      --  directory of the main project, otherwise we use the project given.\n-\n-      if Project = No_Project then\n-         Actual_Project := Main_Project;\n-      else\n-         Actual_Project := Project;\n-      end if;\n+      pragma Assert (Project /= No_Project);\n \n       --  Nothing to do if the current working directory is already the correct\n       --  object directory.\n \n-      if Project_Of_Current_Object_Directory /= Actual_Project then\n-         Project_Of_Current_Object_Directory := Actual_Project;\n-         Object_Directory := Actual_Project.Object_Directory.Name;\n+      if Project_Of_Current_Object_Directory /= Project then\n+         Project_Of_Current_Object_Directory := Project;\n+         Object_Directory := Project.Object_Directory.Name;\n \n          --  Set the working directory to the object directory of the actual\n          --  project.\n \n          if Verbose_Mode then\n             Write_Str  (\"Changing to object directory of \"\"\");\n-            Write_Name (Actual_Project.Display_Name);\n+            Write_Name (Project.Display_Name);\n             Write_Str  (\"\"\": \"\"\");\n             Write_Name (Object_Directory);\n             Write_Line (\"\"\"\");\n@@ -1399,9 +1387,9 @@ package body Make is\n       when Directory_Error =>\n          Make_Failed (\"unable to change to object directory \"\"\" &\n                       Path_Or_File_Name\n-                        (Actual_Project.Object_Directory.Name) &\n+                        (Project.Object_Directory.Name) &\n                       \"\"\" of project \" &\n-                      Get_Name_String (Actual_Project.Display_Name));\n+                      Get_Name_String (Project.Display_Name));\n    end Change_To_Object_Directory;\n \n    -----------\n@@ -2201,7 +2189,6 @@ package body Make is\n       Args           : Argument_List)\n    is\n    begin\n-      Arguments_Collected := True;\n       Arguments_Project := No_Project;\n       Last_Argument := 0;\n       Add_Arguments (Args);\n@@ -2502,13 +2489,12 @@ package body Make is\n       procedure Check_Standard_Library;\n       --  Check if s-stalib.adb needs to be compiled\n \n-      procedure Collect_Arguments_And_Compile\n-        (Source_File  : File_Name_Type;\n-         Source_Index : Int);\n+      procedure Collect_Arguments_And_Compile (Source_Index : Int);\n       --  Collect arguments from project file (if any) and compile\n \n       function Compile\n-        (S            : File_Name_Type;\n+        (Project      : Project_Id;\n+         S            : File_Name_Type;\n          L            : File_Name_Type;\n          Source_Index : Int;\n          Args         : Argument_List) return Process_Id;\n@@ -2709,23 +2695,13 @@ package body Make is\n       -- Collect_Arguments_And_Compile --\n       -----------------------------------\n \n-      procedure Collect_Arguments_And_Compile\n-        (Source_File  : File_Name_Type;\n-         Source_Index : Int)\n-      is\n+      procedure Collect_Arguments_And_Compile (Source_Index : Int) is\n       begin\n          --  Process_Created will be set True if an attempt is made to compile\n          --  the source, that is if it is not in an externally built project.\n \n          Process_Created := False;\n \n-         --  If arguments not yet collected (in Check), collect them now\n-\n-         if not Arguments_Collected then\n-            Collect_Arguments\n-              (Source_File, Source_Index, Source_File = Main_Source, Args);\n-         end if;\n-\n          --  If we use mapping file (-P or -C switches), then get one\n \n          if Create_Mapping_File then\n@@ -2769,13 +2745,10 @@ package body Make is\n                   end;\n                end if;\n \n-               --  Change to object directory of the project file, if necessary\n-\n-               Change_To_Object_Directory (Arguments_Project);\n-\n                Pid :=\n                  Compile\n-                   (File_Name_Type (Arguments_Path_Name),\n+                   (Arguments_Project,\n+                    File_Name_Type (Arguments_Path_Name),\n                     Lib_File,\n                     Source_Index,\n                     Arguments (1 .. Last_Argument));\n@@ -2786,12 +2759,13 @@ package body Make is\n             --  If this is a source outside of any project file, make sure it\n             --  will be compiled in object directory of the main project file.\n \n-            if Main_Project /= No_Project then\n-               Change_To_Object_Directory (Arguments_Project);\n-            end if;\n-\n-            Pid := Compile (Full_Source_File, Lib_File, Source_Index,\n-                            Arguments (1 .. Last_Argument));\n+            Pid :=\n+              Compile\n+                (Main_Project,\n+                 Full_Source_File,\n+                 Lib_File,\n+                 Source_Index,\n+                 Arguments (1 .. Last_Argument));\n             Process_Created := True;\n          end if;\n       end Collect_Arguments_And_Compile;\n@@ -2801,7 +2775,8 @@ package body Make is\n       -------------\n \n       function Compile\n-        (S            : File_Name_Type;\n+        (Project      : Project_Id;\n+         S            : File_Name_Type;\n          L            : File_Name_Type;\n          Source_Index : Int;\n          Args         : Argument_List) return Process_Id\n@@ -2985,6 +2960,12 @@ package body Make is\n          Comp_Last := Comp_Last + 1;\n          Comp_Args (Comp_Last) := new String'(Name_Buffer (1 .. Name_Len));\n \n+         --  Change to object directory of the project file, if necessary\n+\n+         if Project /= No_Project then\n+            Change_To_Object_Directory (Project);\n+         end if;\n+\n          GNAT.OS_Lib.Normalize_Arguments (Comp_Args (Args'First .. Comp_Last));\n \n          Comp_Last := Comp_Last + 1;\n@@ -3225,8 +3206,6 @@ package body Make is\n                --  The source file that we are checking can be located\n \n                else\n-                  Arguments_Collected := False;\n-\n                   Collect_Arguments (Source_File, Source_Index,\n                                      Source_File = Main_Source, Args);\n \n@@ -3314,8 +3293,7 @@ package body Make is\n                         --  Start the compilation and record it. We can do\n                         --  this because there is at least one free process.\n \n-                        Collect_Arguments_And_Compile\n-                          (Source_File, Source_Index);\n+                        Collect_Arguments_And_Compile (Source_Index);\n \n                         --  Make sure we could successfully start\n                         --  the Compilation."}, {"sha": "ac147000b7a8d9d5d0ab46ac1533facae4d8ade7", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -926,6 +926,7 @@ package body System.Task_Primitives.Operations is\n    is\n       Attributes          : aliased pthread_attr_t;\n       Adjusted_Stack_Size : Interfaces.C.size_t;\n+      Page_Size           : constant Interfaces.C.size_t := Get_Page_Size;\n       Result              : Interfaces.C.int;\n \n       function Thread_Body_Access is new\n@@ -946,9 +947,15 @@ package body System.Task_Primitives.Operations is\n          --  to be sure the effective stack size is greater than what\n          --  has been asked.\n \n-         Adjusted_Stack_Size := Adjusted_Stack_Size + 2 * Get_Page_Size;\n+         Adjusted_Stack_Size := Adjusted_Stack_Size + 2 * Page_Size;\n       end if;\n \n+      --  Round stack size as this is required by some OSes (Darwin)\n+\n+      Adjusted_Stack_Size := Adjusted_Stack_Size + Page_Size - 1;\n+      Adjusted_Stack_Size :=\n+        Adjusted_Stack_Size - Adjusted_Stack_Size mod Page_Size;\n+\n       Result := pthread_attr_init (Attributes'Access);\n       pragma Assert (Result = 0 or else Result = ENOMEM);\n "}, {"sha": "c8d06e8cfec82c9a960cdced1303c26b5d63efc0", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -2191,10 +2191,8 @@ package body Sem_Cat is\n             Flag_Non_Static_Expr\n               (\"non-static object name in preelaborated unit\", N);\n \n-         --  We take the view that a constant defined in another preelaborated\n-         --  unit is preelaborable, even though it may have a private type and\n-         --  thus appear non-static in a client. This must be the intent of\n-         --  the language, but currently is an RM gap ???\n+         --  Give an error for a reference to a nonstatic constant, unless the\n+         --  constant is in another GNAT library unit that is preelaborable.\n \n          elsif Ekind (Entity (N)) = E_Constant\n            and then not Is_Static_Expression (N)"}, {"sha": "1ecae61a01360b5500dc79c422bd437df5ec40d7", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241bea26410d0aec26d5f98d032061d9fa455a74/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=241bea26410d0aec26d5f98d032061d9fa455a74", "patch": "@@ -309,6 +309,11 @@ package body Switch.C is\n \n                case Switch_Chars (Ptr) is\n \n+                  --  -gnatea (initial delimiter of explicit switches)\n+                  --  All switches that come before -gnatea have been added by\n+                  --  the GCC driver and are not stored in the ALI file.\n+                  --  See also -gnatez below.\n+\n                   when 'a' =>\n                      Store_Switch := False;\n                      Enable_Switch_Storing;\n@@ -462,14 +467,20 @@ package body Switch.C is\n \n                      Ptr := Max + 1;\n \n-                  --  -gnatez ???\n+                  --  -gnatez (final delimiter of explicit switches)\n+                  --  All switches that come after -gnatez have been added by\n+                  --  the GCC driver and are not stored in the ALI file.\n+                  --  See also -gnatea above.\n \n                   when 'z' =>\n                      Store_Switch := False;\n                      Disable_Switch_Storing;\n                      Ptr := Ptr + 1;\n \n-                  --  -gnateS (Store SCO information)\n+                  --  -gnateS (generate SCO information)\n+                  --  Include Source Coverage Obligation information in ALI\n+                  --  files for the benefit of source coverage analysis tools\n+                  --  (xcov).\n \n                   when 'S' =>\n                      Generate_SCO := True;"}]}