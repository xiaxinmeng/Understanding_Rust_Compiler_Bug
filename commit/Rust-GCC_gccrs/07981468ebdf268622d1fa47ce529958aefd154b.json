{"sha": "07981468ebdf268622d1fa47ce529958aefd154b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc5ODE0NjhlYmRmMjY4NjIyZDFmYTQ3Y2U1Mjk5NThhZWZkMTU0Yg==", "commit": {"author": {"name": "Konrad Eisele", "email": "konrad@gaisler.com", "date": "2010-12-16T22:28:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-12-16T22:28:45Z"}, "message": "Support for LEON processor\n\n\tSupport for LEON processor\n\t* config.gcc (sparc-*-elf*): Deal with sparc-leon specifically.\n\t(sparc-*-linux*): Likewise.\n\t(sparc-*-rtems*): Remove Solaris left-overs.\n\t(sparc*-*-*): Remove obsolete sparc86x setting.\n\t(sparc-leon*): Default to --with-cpu=v8 and --with-tune=leon.\n\t* doc/invoke.texi (SPARC Options): Document -mcpu/-mtune=leon.\n\t* config/sparc/sparc.h (TARGET_CPU_leon): Define.\n\t(TARGET_CPU_sparc86x): Delete.\n\t(TARGET_CPU_cypress): Define as alias to TARGET_CPU_v7.\n\t(TARGET_CPU_f930): Define as alias to TARGET_CPU_sparclite.\n\t(TARGET_CPU_f934): Likewise.\n\t(TARGET_CPU_tsc701): Define as alias to TARGET_CPU_sparclet.\n\t(CPP_CPU_SPEC): Add entry for -mcpu=leon.\n\t(enum processor_type): Add PROCESSOR_LEON.  Reorganize.\n\t* config/sparc/sparc.c (leon_costs): New cost array.\n\t(sparc_option_override): Add entry for TARGET_CPU_leon and -mcpu=leon.\n\tInitialize cost array to leon_costs if -mtune=leon.\n\t* config/sparc/sparc.md (cpu attribute): Add leon.  Reorganize.\n\tInclude leon.md scheduling description.\n\t* config/sparc/leon.md: New file.\n\t* config/sparc/t-elf: Do not assemble Solaris startup files.\n\t* config/sparc/t-leon: New file.\n\t* config/sparc/t-leon3: Likewise.\n\nCo-Authored-By: Eric Botcazou <ebotcazou@adacore.com>\n\nFrom-SVN: r167957", "tree": {"sha": "0e6fb4a816a6dafb5da76bad485f9568f3a0dbf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e6fb4a816a6dafb5da76bad485f9568f3a0dbf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07981468ebdf268622d1fa47ce529958aefd154b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07981468ebdf268622d1fa47ce529958aefd154b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07981468ebdf268622d1fa47ce529958aefd154b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07981468ebdf268622d1fa47ce529958aefd154b/comments", "author": null, "committer": null, "parents": [{"sha": "cb2168c9660ac9d920b4c68a8b31a411fe6abe42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2168c9660ac9d920b4c68a8b31a411fe6abe42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2168c9660ac9d920b4c68a8b31a411fe6abe42"}], "stats": {"total": 362, "additions": 301, "deletions": 61}, "files": [{"sha": "f0dfc4bb6c7eaba644f50a1e9d90ef3176113663", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -1,3 +1,31 @@\n+2010-12-16  Konrad Eisele  <konrad@gaisler.com>\n+            Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tSupport for LEON processor\n+\t* config.gcc (sparc-*-elf*): Deal with sparc-leon specifically.\n+\t(sparc-*-linux*): Likewise.\n+\t(sparc-*-rtems*): Remove Solaris left-overs.\n+\t(sparc*-*-*): Remove obsolete sparc86x setting.\n+\t(sparc-leon*): Default to --with-cpu=v8 and --with-tune=leon.\n+\t* doc/invoke.texi (SPARC Options): Document -mcpu/-mtune=leon.\n+\t* config/sparc/sparc.h (TARGET_CPU_leon): Define.\n+\t(TARGET_CPU_sparc86x): Delete.\n+\t(TARGET_CPU_cypress): Define as alias to TARGET_CPU_v7.\n+\t(TARGET_CPU_f930): Define as alias to TARGET_CPU_sparclite.\n+\t(TARGET_CPU_f934): Likewise.\n+\t(TARGET_CPU_tsc701): Define as alias to TARGET_CPU_sparclet.\n+\t(CPP_CPU_SPEC): Add entry for -mcpu=leon.\n+\t(enum processor_type): Add PROCESSOR_LEON.  Reorganize.\n+\t* config/sparc/sparc.c (leon_costs): New cost array.\n+\t(sparc_option_override): Add entry for TARGET_CPU_leon and -mcpu=leon.\n+\tInitialize cost array to leon_costs if -mtune=leon.\n+\t* config/sparc/sparc.md (cpu attribute): Add leon.  Reorganize.\n+\tInclude leon.md scheduling description.\n+\t* config/sparc/leon.md: New file.\n+\t* config/sparc/t-elf: Do not assemble Solaris startup files.\n+\t* config/sparc/t-leon: New file.\n+\t* config/sparc/t-leon3: Likewise.\n+\n 2010-12-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/43655"}, {"sha": "ace2b959557321fe3380292b6df16726cc045cfd", "filename": "gcc/config.gcc", "status": "modified", "additions": 43, "deletions": 7, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -2450,18 +2450,39 @@ sh-wrs-vxworks)\n \t;;\n sparc-*-elf*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp-elf.h\"\n-\ttmake_file=\"sparc/t-elf sparc/t-crtfm\"\n-\textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n+\tcase ${target} in\n+\t    *-leon-*)\n+\t\ttmake_file=\"sparc/t-leon\"\n+\t\t;;\n+\t    *-leon[3-9]*)\n+\t\ttmake_file=\"sparc/t-leon3\"\n+\t\t;;\n+\t    *)\n+\t\ttmake_file=\"sparc/t-elf\"\n+\t\t;;\n+\tesac\n+\ttmake_file=\"${tmake_file} sparc/t-crtfm\"\n+\textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h sparc/sp-elf.h sparc/rtemself.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"sparc/t-elf sparc/t-crtfm t-rtems\"\n-\textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n+\textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h linux.h glibc-stdint.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n-\ttmake_file=\"${tmake_file} sparc/t-linux\"\n+\tcase ${target} in\n+\t    *-leon-*)\n+\t\ttmake_file=\"${tmake_file} sparc/t-leon\"\n+\t\t;;\n+\t    *-leon[3-9]*)\n+\t\ttmake_file=\"${tmake_file} sparc/t-leon3\"\n+\t\t;;\n+\t    *)\n+\t\ttmake_file=\"${tmake_file} sparc/t-linux\"\n+\t\t;;\n+\tesac\n \tif test x$enable_targets = xall; then\n \t\ttm_file=\"sparc/biarch64.h ${tm_file} sparc/linux64.h\"\n \t\ttmake_file=\"${tmake_file} sparc/t-linux64\"\n@@ -2922,6 +2943,9 @@ if test x$with_cpu = x ; then\n     mips*-*-vxworks)\n       with_arch=mips2\n       ;;\n+    sparc-leon*-*)\n+      with_cpu=v8;\n+      ;;\n     sparc*-*-*)\n       with_cpu=\"`echo ${target} | sed 's/-.*$//'`\"\n       ;;\n@@ -3441,9 +3465,11 @@ case \"${target}\" in\n \t\tfor which in cpu tune; do\n \t\t\teval \"val=\\$with_$which\"\n \t\t\tcase ${val} in\n-\t\t\t\"\" | sparc | sparcv9 | sparc64 | sparc86x \\\n-\t\t\t| v7 | cypress | v8 | supersparc | sparclite | f930 \\\n-\t\t\t| f934 | hypersparc | sparclite86x | sparclet | tsc701 \\\n+\t\t\t\"\" | sparc | sparcv9 | sparc64 \\\n+\t\t\t| v7 | cypress \\\n+\t\t\t| v8 | supersparc | hypersparc | leon \\\n+\t\t\t| sparclite | f930 | f934 | sparclite86x \\\n+\t\t\t| sparclet | tsc701 \\\n \t\t\t| v9 | ultrasparc | ultrasparc3 | niagara | niagara2)\n \t\t\t\t# OK\n \t\t\t\t;;\n@@ -3587,6 +3613,15 @@ case ${target} in\n \t\tcxx_target_objs=\"${cxx_target_objs} sh-c.o\"\n \t\t;;\n \n+\tsparc-leon*-*)\n+\t\tif test x$with_tune = x ; then\n+\t\t  with_tune=leon;\n+\t\tfi\n+\n+\t\t# The SPARC port checks this value at compile-time.\n+\t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n+\t\t;;\n+\n \tsparc*-*-*)\n \t\t# Some standard aliases.\n \t\tcase x$with_cpu in\n@@ -3601,6 +3636,7 @@ case ${target} in\n \t\t# The SPARC port checks this value at compile-time.\n \t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n \t\t;;\n+\n \tv850*-*-*)\n \t\t# FIXME: The v850 is \"special\" in that it does not support\n \t\t# runtime CPU selection, only --with-cpu."}, {"sha": "bc77c6ab928308746143eb4694727241797668ca", "filename": "gcc/config/sparc/leon.md", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fleon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fleon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fleon.md?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -0,0 +1,56 @@\n+;; Scheduling description for LEON.\n+;;   Copyright (C) 2010 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+\n+(define_automaton \"leon\")\n+\n+(define_cpu_unit \"leon_memory, leon_fpalu\" \"leon\")\n+(define_cpu_unit \"leon_fpmds\" \"leon\")\n+(define_cpu_unit \"write_buf\" \"leon\")\n+\n+(define_insn_reservation \"leon_load\" 1\n+  (and (eq_attr \"cpu\" \"leon\")\n+    (eq_attr \"type\" \"load,sload,fpload\"))\n+  \"leon_memory\")\n+\n+(define_insn_reservation \"leon_store\" 1\n+  (and (eq_attr \"cpu\" \"leon\")\n+    (eq_attr \"type\" \"store,fpstore\"))\n+  \"leon_memory+write_buf\")\n+  \n+(define_insn_reservation \"leon_fp_alu\" 1\n+  (and (eq_attr \"cpu\" \"leon\")\n+    (eq_attr \"type\" \"fp,fpmove\"))\n+  \"leon_fpalu, nothing\")\n+\n+(define_insn_reservation \"leon_fp_mult\" 1\n+  (and (eq_attr \"cpu\" \"leon\")\n+    (eq_attr \"type\" \"fpmul\"))\n+  \"leon_fpmds, nothing\")\n+\n+(define_insn_reservation \"leon_fp_div\" 16\n+  (and (eq_attr \"cpu\" \"leon\")\n+    (eq_attr \"type\" \"fpdivs,fpdivd\"))\n+  \"leon_fpmds, nothing*15\")\n+\n+(define_insn_reservation \"leon_fp_sqrt\" 23\n+  (and (eq_attr \"cpu\" \"leon\")\n+    (eq_attr \"type\" \"fpsqrts,fpsqrtd\"))\n+  \"leon_fpmds, nothing*21\")\n+"}, {"sha": "760ff6e122f26c4c4d68fe7a2e9eb479c5bc09de", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 48, "deletions": 16, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -128,6 +128,30 @@ struct processor_costs hypersparc_costs = {\n   0, /* shift penalty */\n };\n \n+static const\n+struct processor_costs leon_costs = {\n+  COSTS_N_INSNS (1), /* int load */\n+  COSTS_N_INSNS (1), /* int signed load */\n+  COSTS_N_INSNS (1), /* int zeroed load */\n+  COSTS_N_INSNS (1), /* float load */\n+  COSTS_N_INSNS (1), /* fmov, fneg, fabs */\n+  COSTS_N_INSNS (1), /* fadd, fsub */\n+  COSTS_N_INSNS (1), /* fcmp */\n+  COSTS_N_INSNS (1), /* fmov, fmovr */\n+  COSTS_N_INSNS (1), /* fmul */\n+  COSTS_N_INSNS (15), /* fdivs */\n+  COSTS_N_INSNS (15), /* fdivd */\n+  COSTS_N_INSNS (23), /* fsqrts */\n+  COSTS_N_INSNS (23), /* fsqrtd */\n+  COSTS_N_INSNS (5), /* imul */\n+  COSTS_N_INSNS (5), /* imulX */\n+  0, /* imul bit factor */\n+  COSTS_N_INSNS (5), /* idiv */\n+  COSTS_N_INSNS (5), /* idivX */\n+  COSTS_N_INSNS (1), /* movcc/movr */\n+  0, /* shift penalty */\n+};\n+\n static const\n struct processor_costs sparclet_costs = {\n   COSTS_N_INSNS (3), /* int load */\n@@ -698,19 +722,20 @@ sparc_option_override (void)\n     { NULL, (enum cmodel) 0 }\n   };\n   const struct code_model *cmodel;\n-  /* Map TARGET_CPU_DEFAULT to value for -m{arch,tune}=.  */\n+  /* Map TARGET_CPU_DEFAULT to value for -m{cpu,tune}=.  */\n   static struct cpu_default {\n     const int cpu;\n     const char *const name;\n   } const cpu_default[] = {\n     /* There must be one entry here for each TARGET_CPU value.  */\n     { TARGET_CPU_sparc, \"cypress\" },\n-    { TARGET_CPU_sparclet, \"tsc701\" },\n-    { TARGET_CPU_sparclite, \"f930\" },\n     { TARGET_CPU_v8, \"v8\" },\n+    { TARGET_CPU_supersparc, \"supersparc\" },\n     { TARGET_CPU_hypersparc, \"hypersparc\" },\n+    { TARGET_CPU_leon, \"leon\" },\n+    { TARGET_CPU_sparclite, \"f930\" },\n     { TARGET_CPU_sparclite86x, \"sparclite86x\" },\n-    { TARGET_CPU_supersparc, \"supersparc\" },\n+    { TARGET_CPU_sparclet, \"tsc701\" },\n     { TARGET_CPU_v9, \"v9\" },\n     { TARGET_CPU_ultrasparc, \"ultrasparc\" },\n     { TARGET_CPU_ultrasparc3, \"ultrasparc3\" },\n@@ -731,28 +756,32 @@ sparc_option_override (void)\n     { \"v8\",         PROCESSOR_V8, MASK_ISA, MASK_V8 },\n     /* TI TMS390Z55 supersparc */\n     { \"supersparc\", PROCESSOR_SUPERSPARC, MASK_ISA, MASK_V8 },\n+    { \"hypersparc\", PROCESSOR_HYPERSPARC, MASK_ISA, MASK_V8|MASK_FPU },\n+    /* LEON */\n+    { \"leon\",       PROCESSOR_LEON, MASK_ISA, MASK_V8|MASK_FPU },\n     { \"sparclite\",  PROCESSOR_SPARCLITE, MASK_ISA, MASK_SPARCLITE },\n-    /* The Fujitsu MB86930 is the original sparclite chip, with no fpu.\n-       The Fujitsu MB86934 is the recent sparclite chip, with an fpu.  */\n+    /* The Fujitsu MB86930 is the original sparclite chip, with no FPU.  */\n     { \"f930\",       PROCESSOR_F930, MASK_ISA|MASK_FPU, MASK_SPARCLITE },\n+    /* The Fujitsu MB86934 is the recent sparclite chip, with an FPU.  */\n     { \"f934\",       PROCESSOR_F934, MASK_ISA, MASK_SPARCLITE|MASK_FPU },\n-    { \"hypersparc\", PROCESSOR_HYPERSPARC, MASK_ISA, MASK_V8|MASK_FPU },\n     { \"sparclite86x\",  PROCESSOR_SPARCLITE86X, MASK_ISA|MASK_FPU,\n       MASK_SPARCLITE },\n     { \"sparclet\",   PROCESSOR_SPARCLET, MASK_ISA, MASK_SPARCLET },\n     /* TEMIC sparclet */\n     { \"tsc701\",     PROCESSOR_TSC701, MASK_ISA, MASK_SPARCLET },\n     { \"v9\",         PROCESSOR_V9, MASK_ISA, MASK_V9 },\n-    /* TI ultrasparc I, II, IIi */\n-    { \"ultrasparc\", PROCESSOR_ULTRASPARC, MASK_ISA, MASK_V9\n-    /* Although insns using %y are deprecated, it is a clear win on current\n-       ultrasparcs.  */\n-    \t\t\t\t\t\t    |MASK_DEPRECATED_V8_INSNS},\n-    /* TI ultrasparc III */\n-    /* ??? Check if %y issue still holds true in ultra3.  */\n-    { \"ultrasparc3\", PROCESSOR_ULTRASPARC3, MASK_ISA, MASK_V9|MASK_DEPRECATED_V8_INSNS},\n+    /* UltraSPARC I, II, IIi */\n+    { \"ultrasparc\", PROCESSOR_ULTRASPARC, MASK_ISA,\n+    /* Although insns using %y are deprecated, it is a clear win.  */\n+      MASK_V9|MASK_DEPRECATED_V8_INSNS},\n+    /* UltraSPARC III */\n+    /* ??? Check if %y issue still holds true.  */\n+    { \"ultrasparc3\", PROCESSOR_ULTRASPARC3, MASK_ISA,\n+      MASK_V9|MASK_DEPRECATED_V8_INSNS},\n     /* UltraSPARC T1 */\n-    { \"niagara\", PROCESSOR_NIAGARA, MASK_ISA, MASK_V9|MASK_DEPRECATED_V8_INSNS},\n+    { \"niagara\", PROCESSOR_NIAGARA, MASK_ISA,\n+      MASK_V9|MASK_DEPRECATED_V8_INSNS},\n+    /* UltraSPARC T2 */\n     { \"niagara2\", PROCESSOR_NIAGARA, MASK_ISA, MASK_V9},\n     { 0, (enum processor_type) 0, 0, 0 }\n   };\n@@ -907,6 +936,9 @@ sparc_option_override (void)\n     case PROCESSOR_SPARCLITE86X:\n       sparc_costs = &hypersparc_costs;\n       break;\n+    case PROCESSOR_LEON:\n+      sparc_costs = &leon_costs;\n+      break;\n     case PROCESSOR_SPARCLET:\n     case PROCESSOR_TSC701:\n       sparc_costs = &sparclet_costs;"}, {"sha": "a2ed8d06f5494036906b2aba0130fa965f2d679d", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -228,21 +228,25 @@ extern enum cmodel sparc_cmodel;\n /* Note that TARGET_CPU_v9 is assumed to start the list of 64-bit\n    capable cpu's.  */\n #define TARGET_CPU_sparc\t0\n-#define TARGET_CPU_v7\t\t0\t/* alias for previous */\n-#define TARGET_CPU_sparclet\t1\n-#define TARGET_CPU_sparclite\t2\n-#define TARGET_CPU_v8\t\t3\t/* generic v8 implementation */\n-#define TARGET_CPU_supersparc\t4\n-#define TARGET_CPU_hypersparc   5\n-#define TARGET_CPU_sparc86x\t6\n+#define TARGET_CPU_v7\t\t0\t/* alias */\n+#define TARGET_CPU_cypress\t0       /* alias */\n+#define TARGET_CPU_v8\t\t1\t/* generic v8 implementation */\n+#define TARGET_CPU_supersparc\t2\n+#define TARGET_CPU_hypersparc\t3\n+#define TARGET_CPU_leon\t\t4\n+#define TARGET_CPU_sparclite\t5\n+#define TARGET_CPU_f930\t\t5       /* alias */\n+#define TARGET_CPU_f934\t\t5       /* alias */\n #define TARGET_CPU_sparclite86x\t6\n-#define TARGET_CPU_v9\t\t7\t/* generic v9 implementation */\n-#define TARGET_CPU_sparcv9\t7\t/* alias */\n-#define TARGET_CPU_sparc64\t7\t/* alias */\n-#define TARGET_CPU_ultrasparc\t8\n-#define TARGET_CPU_ultrasparc3\t9\n-#define TARGET_CPU_niagara\t10\n-#define TARGET_CPU_niagara2\t11\n+#define TARGET_CPU_sparclet\t7\n+#define TARGET_CPU_tsc701\t7       /* alias */\n+#define TARGET_CPU_v9\t\t8\t/* generic v9 implementation */\n+#define TARGET_CPU_sparcv9\t8\t/* alias */\n+#define TARGET_CPU_sparc64\t8\t/* alias */\n+#define TARGET_CPU_ultrasparc\t9\n+#define TARGET_CPU_ultrasparc3\t10\n+#define TARGET_CPU_niagara\t11\n+#define TARGET_CPU_niagara2\t12\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_v9 \\\n  || TARGET_CPU_DEFAULT == TARGET_CPU_ultrasparc \\\n@@ -299,6 +303,11 @@ extern enum cmodel sparc_cmodel;\n #define ASM_CPU32_DEFAULT_SPEC \"-Asparclite\"\n #endif\n \n+#if TARGET_CPU_DEFAULT == TARGET_CPU_sparclite86x\n+#define CPP_CPU32_DEFAULT_SPEC \"-D__sparclite86x__\"\n+#define ASM_CPU32_DEFAULT_SPEC \"-Asparclite\"\n+#endif\n+\n #if TARGET_CPU_DEFAULT == TARGET_CPU_supersparc\n #define CPP_CPU32_DEFAULT_SPEC \"-D__supersparc__ -D__sparc_v8__\"\n #define ASM_CPU32_DEFAULT_SPEC \"\"\n@@ -309,9 +318,9 @@ extern enum cmodel sparc_cmodel;\n #define ASM_CPU32_DEFAULT_SPEC \"\"\n #endif\n \n-#if TARGET_CPU_DEFAULT == TARGET_CPU_sparclite86x\n-#define CPP_CPU32_DEFAULT_SPEC \"-D__sparclite86x__\"\n-#define ASM_CPU32_DEFAULT_SPEC \"-Asparclite\"\n+#if TARGET_CPU_DEFAULT == TARGET_CPU_leon\n+#define CPP_CPU32_DEFAULT_SPEC \"-D__leon__ -D__sparc_v8__\"\n+#define ASM_CPU32_DEFAULT_SPEC \"\"\n #endif\n \n #endif\n@@ -360,10 +369,11 @@ extern enum cmodel sparc_cmodel;\n %{mcpu=sparclet:-D__sparclet__} %{mcpu=tsc701:-D__sparclet__} \\\n %{mcpu=sparclite:-D__sparclite__} \\\n %{mcpu=f930:-D__sparclite__} %{mcpu=f934:-D__sparclite__} \\\n+%{mcpu=sparclite86x:-D__sparclite86x__} \\\n %{mcpu=v8:-D__sparc_v8__} \\\n %{mcpu=supersparc:-D__supersparc__ -D__sparc_v8__} \\\n %{mcpu=hypersparc:-D__hypersparc__ -D__sparc_v8__} \\\n-%{mcpu=sparclite86x:-D__sparclite86x__} \\\n+%{mcpu=leon:-D__leon__ -D__sparc_v8__} \\\n %{mcpu=v9:-D__sparc_v9__} \\\n %{mcpu=ultrasparc:-D__sparc_v9__} \\\n %{mcpu=ultrasparc3:-D__sparc_v9__} \\\n@@ -526,10 +536,11 @@ enum processor_type {\n   PROCESSOR_CYPRESS,\n   PROCESSOR_V8,\n   PROCESSOR_SUPERSPARC,\n+  PROCESSOR_HYPERSPARC,\n+  PROCESSOR_LEON,\n   PROCESSOR_SPARCLITE,\n   PROCESSOR_F930,\n   PROCESSOR_F934,\n-  PROCESSOR_HYPERSPARC,\n   PROCESSOR_SPARCLITE86X,\n   PROCESSOR_SPARCLET,\n   PROCESSOR_TSC701,"}, {"sha": "f8939dd77d18bfe22f3e098bef697e1567bbe5b4", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -104,9 +104,14 @@\n    cypress,\n    v8,\n    supersparc,\n-   sparclite,f930,f934,\n-   hypersparc,sparclite86x,\n-   sparclet,tsc701,\n+   hypersparc,\n+   leon,\n+   sparclite,\n+   f930,\n+   f934,\n+   sparclite86x,\n+   sparclet,\n+   tsc701,\n    v9,\n    ultrasparc,\n    ultrasparc3,\n@@ -339,6 +344,7 @@\n (include \"cypress.md\")\n (include \"supersparc.md\")\n (include \"hypersparc.md\")\n+(include \"leon.md\")\n (include \"sparclet.md\")\n (include \"ultra1_2.md\")\n (include \"ultra3.md\")"}, {"sha": "18ed2de16e615ed8f404622db99517dc16c1a8c5", "filename": "gcc/config/sparc/t-elf", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-elf?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -1,5 +1,5 @@\n-# Copyright (C) 1997, 1998, 1999, 2001, 2002, 2005,\n-# 2007 Free Software Foundation, Inc.\n+# Copyright (C) 1997, 1998, 1999, 2001, 2002, 2005, 2007, 2010\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -32,17 +32,9 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n-# MULTILIB_OPTIONS should have msparclite too, but we'd have to make\n-# gas build...\n MULTILIB_OPTIONS = msoft-float mcpu=v8\n MULTILIB_DIRNAMES = soft v8\n MULTILIB_MATCHES = msoft-float=mno-fpu mcpu?v8=mv8\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n-\n-# Assemble startup files.\n-$(T)crti.o: $(srcdir)/config/sparc/sol2-ci.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) -c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/sparc/sol2-ci.asm\n-$(T)crtn.o: $(srcdir)/config/sparc/sol2-cn.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) -c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/sparc/sol2-cn.asm"}, {"sha": "6573f824e8ba79c67ae048430592ae7d46092cbf", "filename": "gcc/config/sparc/t-leon", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Ft-leon", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Ft-leon", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-leon?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -0,0 +1,42 @@\n+# Copyright (C) 2010 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+LIB1ASMSRC = sparc/lb1spc.asm\n+LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+# Multilibs for LEON\n+# LEON is a SPARC-V8, but the AT697 implementation has a bug in the\n+# V8-specific instructions.\n+MULTILIB_OPTIONS = mcpu=v7 msoft-float\n+MULTILIB_DIRNAMES = v7 soft\n+MULTILIB_MATCHES = mcpu?v7=mv7 msoft-float=mno-fpu\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "ce57d16751be4d562ade4a53793ded25abf58910", "filename": "gcc/config/sparc/t-leon3", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Ft-leon3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fconfig%2Fsparc%2Ft-leon3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-leon3?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -0,0 +1,37 @@\n+# Copyright (C) 2010 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+# Multilibs for LEON3\n+MULTILIB_OPTIONS = msoft-float\n+MULTILIB_DIRNAMES = soft\n+MULTILIB_MATCHES = msoft-float=mno-fpu\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "b28073c4523377ae0f64c145c792f8fee4314fd7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07981468ebdf268622d1fa47ce529958aefd154b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=07981468ebdf268622d1fa47ce529958aefd154b", "patch": "@@ -16951,8 +16951,8 @@ the rules of the ABI@.\n @opindex mcpu\n Set the instruction set, register set, and instruction scheduling parameters\n for machine type @var{cpu_type}.  Supported values for @var{cpu_type} are\n-@samp{v7}, @samp{cypress}, @samp{v8}, @samp{supersparc}, @samp{sparclite},\n-@samp{f930}, @samp{f934}, @samp{hypersparc}, @samp{sparclite86x},\n+@samp{v7}, @samp{cypress}, @samp{v8}, @samp{supersparc}, @samp{hypersparc},\n+@samp{leon}, @samp{sparclite}, @samp{f930}, @samp{f934}, @samp{sparclite86x},\n @samp{sparclet}, @samp{tsc701}, @samp{v9}, @samp{ultrasparc},\n @samp{ultrasparc3}, @samp{niagara} and @samp{niagara2}.\n \n@@ -16965,7 +16965,7 @@ implementations.\n \n @smallexample\n     v7:             cypress\n-    v8:             supersparc, hypersparc\n+    v8:             supersparc, hypersparc, leon\n     sparclite:      f930, f934, sparclite86x\n     sparclet:       tsc701\n     v9:             ultrasparc, ultrasparc3, niagara, niagara2\n@@ -17018,9 +17018,9 @@ option @option{-mcpu=@var{cpu_type}} would.\n The same values for @option{-mcpu=@var{cpu_type}} can be used for\n @option{-mtune=@var{cpu_type}}, but the only useful values are those\n that select a particular cpu implementation.  Those are @samp{cypress},\n-@samp{supersparc}, @samp{hypersparc}, @samp{f930}, @samp{f934},\n-@samp{sparclite86x}, @samp{tsc701}, @samp{ultrasparc},\n-@samp{ultrasparc3}, @samp{niagara}, and @samp{niagara2}.\n+@samp{supersparc}, @samp{hypersparc}, @samp{leon}, @samp{f930}, @samp{f934},\n+@samp{sparclite86x}, @samp{tsc701}, @samp{ultrasparc}, @samp{ultrasparc3},\n+@samp{niagara}, and @samp{niagara2}.\n \n @item -mv8plus\n @itemx -mno-v8plus"}]}