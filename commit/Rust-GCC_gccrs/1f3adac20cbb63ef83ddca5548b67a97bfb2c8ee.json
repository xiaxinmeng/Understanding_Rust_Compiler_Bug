{"sha": "1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYzYWRhYzIwY2JiNjNlZjgzZGRjYTU1NDhiNjdhOTdiZmIyYzhlZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-12-09T20:02:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-12-09T20:02:58Z"}, "message": "locale_facets.tcc (num_get::_M_extract_int): Slightly streamline the code dealing with overflows and the parsing of the sign.\n\n2003-12-09  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (num_get::_M_extract_int):\n\tSlightly streamline the code dealing with overflows and the\n\tparsing of the sign.\n\nFrom-SVN: r74476", "tree": {"sha": "52a810b91e113d635231cac5aa6c6b42e4793713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52a810b91e113d635231cac5aa6c6b42e4793713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee/comments", "author": null, "committer": null, "parents": [{"sha": "579ed98749118b73243dea6f54916c6f2207e963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579ed98749118b73243dea6f54916c6f2207e963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579ed98749118b73243dea6f54916c6f2207e963"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "04c3b1a61ca02290d38bf03a561a6604eb6e6ad1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee", "patch": "@@ -1,3 +1,9 @@\n+2003-12-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (num_get::_M_extract_int):\n+\tSlightly streamline the code dealing with overflows and the\n+\tparsing of the sign.\n+\n 2003-12-09  Bernardo Innocenti  <bernie@develer.com>\n \n \t* include/ext/algorithm, include/ext/debug_allocator.h,"}, {"sha": "ae0a4e4361667d9f8a18c8702ab3b7ca4789d2e5", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=1f3adac20cbb63ef83ddca5548b67a97bfb2c8ee", "patch": "@@ -283,9 +283,9 @@ namespace std\n \tbool __negative = false;\n \tif (__beg != __end)\n \t  {\n-\t    __negative = __traits_type::eq(*__beg, __lit[_S_iminus]);\n-\t    if (__negative && numeric_limits<_ValueT>::is_signed\n-\t\t|| __traits_type::eq(*__beg, __lit[_S_iplus]))\n+\t    if (numeric_limits<_ValueT>::is_signed)\n+\t      __negative = __traits_type::eq(*__beg, __lit[_S_iminus]);\n+\t    if (__negative || __traits_type::eq(*__beg, __lit[_S_iplus]))\n \t      ++__beg;\n \t  }\n \n@@ -353,8 +353,7 @@ namespace std\n \t\t    else\n \t\t      {\n \t\t\tconst _ValueT __new_result = __result * __base - __digit;\n-\t\t\tif (__result)\n-\t\t\t  __overflow |= __new_result >= __result;\n+\t\t\t__overflow |= __new_result > __result;\n \t\t\t__result = __new_result;\n \t\t\t++__sep_pos;\n \t\t\t__found_num = true;\n@@ -398,8 +397,7 @@ namespace std\n \t\t    else\n \t\t      {\n \t\t\tconst _ValueT __new_result = __result * __base + __digit;\n-\t\t\tif (__result)\n-\t\t\t  __overflow |= __new_result <= __result;\n+\t\t\t__overflow |= __new_result < __result;\n \t\t\t__result = __new_result;\n \t\t\t++__sep_pos;\n \t\t\t__found_num = true;\n@@ -436,8 +434,8 @@ namespace std\n \t      __err |= ios_base::failbit;\n \t  }\n \n-\tif (!(__err & ios_base::failbit)\n-\t    && !__overflow && __found_num)\n+\tif (!(__err & ios_base::failbit) && !__overflow\n+\t    && __found_num)\n \t  __v = __result;\n \telse\n \t  __err |= ios_base::failbit;"}]}