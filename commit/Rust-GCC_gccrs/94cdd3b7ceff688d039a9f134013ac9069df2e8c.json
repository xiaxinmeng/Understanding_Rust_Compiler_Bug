{"sha": "94cdd3b7ceff688d039a9f134013ac9069df2e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjZGQzYjdjZWZmNjg4ZDAzOWE5ZjEzNDAxM2FjOTA2OWRmMmU4Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-11-20T08:31:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-11-20T08:31:43Z"}, "message": "re PR target/90867 (Multiplication or typecast of integer and double always zero when...)\n\n\tPR target/90867\n\t* config/i386/i386-options.c (ix86_valid_target_attribute_tree): Don't\n\tclear opts->x_ix86_isa_flags{,2} here...\n\t(ix86_valid_target_attribute_inner_p): ... but here when seeing\n\tarch=.  Also clear opts->x_ix86_isa_flags{,2}_explicit.\n\n\t* gcc.target/i386/pr90867.c: New test.\n\nFrom-SVN: r278482", "tree": {"sha": "9b47cc4a3c64711978a4c4b17f818b1d50168b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b47cc4a3c64711978a4c4b17f818b1d50168b66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94cdd3b7ceff688d039a9f134013ac9069df2e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cdd3b7ceff688d039a9f134013ac9069df2e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94cdd3b7ceff688d039a9f134013ac9069df2e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cdd3b7ceff688d039a9f134013ac9069df2e8c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7313f6cf21109d6cea9f17e749ffbf8fc8d7febc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7313f6cf21109d6cea9f17e749ffbf8fc8d7febc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7313f6cf21109d6cea9f17e749ffbf8fc8d7febc"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "32af46773934c10087dea8ddf94853d43edfa405", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94cdd3b7ceff688d039a9f134013ac9069df2e8c", "patch": "@@ -1,5 +1,11 @@\n 2019-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/90867\n+\t* config/i386/i386-options.c (ix86_valid_target_attribute_tree): Don't\n+\tclear opts->x_ix86_isa_flags{,2} here...\n+\t(ix86_valid_target_attribute_inner_p): ... but here when seeing\n+\tarch=.  Also clear opts->x_ix86_isa_flags{,2}_explicit.\n+\n \tPR c/90898\n \t* tree-ssa-ccp.c (insert_clobber_before_stack_restore): Remove\n \tassertion."}, {"sha": "79ccc3292b432a632f8ca3bafafca159390dab02", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=94cdd3b7ceff688d039a9f134013ac9069df2e8c", "patch": "@@ -1147,7 +1147,25 @@ ix86_valid_target_attribute_inner_p (tree fndecl, tree args, char *p_strings[],\n \t      ret = false;\n \t    }\n \t  else\n-\t    p_strings[opt] = xstrdup (p + opt_len);\n+\t    {\n+\t      p_strings[opt] = xstrdup (p + opt_len);\n+\t      if (opt == IX86_FUNCTION_SPECIFIC_ARCH)\n+\t\t{\n+\t\t  /* If arch= is set,  clear all bits in x_ix86_isa_flags,\n+\t\t     except for ISA_64BIT, ABI_64, ABI_X32, and CODE16\n+\t\t     and all bits in x_ix86_isa_flags2.  */\n+\t\t  opts->x_ix86_isa_flags &= (OPTION_MASK_ISA_64BIT\n+\t\t\t\t\t     | OPTION_MASK_ABI_64\n+\t\t\t\t\t     | OPTION_MASK_ABI_X32\n+\t\t\t\t\t     | OPTION_MASK_CODE16);\n+\t\t  opts->x_ix86_isa_flags_explicit &= (OPTION_MASK_ISA_64BIT\n+\t\t\t\t\t\t      | OPTION_MASK_ABI_64\n+\t\t\t\t\t\t      | OPTION_MASK_ABI_X32\n+\t\t\t\t\t\t      | OPTION_MASK_CODE16);\n+\t\t  opts->x_ix86_isa_flags2 = 0;\n+\t\t  opts->x_ix86_isa_flags2_explicit = 0;\n+\t\t}\n+\t    }\n \t}\n \n       else if (type == ix86_opt_enum)\n@@ -1225,18 +1243,8 @@ ix86_valid_target_attribute_tree (tree fndecl, tree args,\n       /* If we are using the default tune= or arch=, undo the string assigned,\n \t and use the default.  */\n       if (option_strings[IX86_FUNCTION_SPECIFIC_ARCH])\n-\t{\n-\t  opts->x_ix86_arch_string\n-\t    = ggc_strdup (option_strings[IX86_FUNCTION_SPECIFIC_ARCH]);\n-\n-\t  /* If arch= is set,  clear all bits in x_ix86_isa_flags,\n-\t     except for ISA_64BIT, ABI_64, ABI_X32, and CODE16.  */\n-\t  opts->x_ix86_isa_flags &= (OPTION_MASK_ISA_64BIT\n-\t\t\t\t     | OPTION_MASK_ABI_64\n-\t\t\t\t     | OPTION_MASK_ABI_X32\n-\t\t\t\t     | OPTION_MASK_CODE16);\n-\t  opts->x_ix86_isa_flags2 = 0;\n-\t}\n+\topts->x_ix86_arch_string\n+\t  = ggc_strdup (option_strings[IX86_FUNCTION_SPECIFIC_ARCH]);\n       else if (!orig_arch_specified)\n \topts->x_ix86_arch_string = NULL;\n "}, {"sha": "e199f4c62142f4e1c52f2fc399d578916624bd70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94cdd3b7ceff688d039a9f134013ac9069df2e8c", "patch": "@@ -1,5 +1,8 @@\n 2019-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/90867\n+\t* gcc.target/i386/pr90867.c: New test.\n+\n \tPR c/90898\n \t* gcc.dg/pr90898.c: New test.\n "}, {"sha": "1ed96b582ed15ffd92821c765814c24c31dd30e0", "filename": "gcc/testsuite/gcc.target/i386/pr90867.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90867.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cdd3b7ceff688d039a9f134013ac9069df2e8c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90867.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90867.c?ref=94cdd3b7ceff688d039a9f134013ac9069df2e8c", "patch": "@@ -0,0 +1,30 @@\n+/* PR target/90867 */\n+/* { dg-do run { target lp64 } } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+unsigned long long freq = 3600000000UL;   /* 3.6 GHz = 3600.0 MHz */\n+\n+__attribute__((noipa)) void\n+bar (double x)\n+{\n+  static double d = 3600000000.0;\n+  if (x != d)\n+    __builtin_abort ();\n+  d /= 1000.0;\n+}\n+\n+__attribute__ ((target (\"arch=x86-64\"))) int\n+foo ()\n+{\n+  bar ((double) freq);\n+  bar (1e-3 * freq);\n+  bar (1e-6 * freq);\n+  bar (1e-9 * freq);\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  return foo ();\n+}"}]}