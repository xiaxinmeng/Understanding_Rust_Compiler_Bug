{"sha": "20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyNjFkYzFjN2RhY2M4OWE3MjA2YTYwMWM1ZjIxYzM2YzJjNGI5ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T08:28:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T08:28:58Z"}, "message": "[multiple changes]\n\n2010-10-11  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb, s-htable.ads: Minor reformatting.\n\n2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Selected_Component): If the selector is\n\tinvisible in an instantiation, and both the formal and the actual are\n\tprivate extensions of the same type, look for the desired component in\n\tthe proper view of the parent type.\n\n2010-10-11  Vincent Celier  <celier@adacore.com>\n\n\t* adaint.c (__gnat_number_of_cpus): Add implementation for Solaris,\n\tAIX, Tru64, Darwin, IRIX and HP-UX.\n\nFrom-SVN: r165277", "tree": {"sha": "53a36f30d39dd6dce627ca1d62602a2ede3ceae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53a36f30d39dd6dce627ca1d62602a2ede3ceae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/comments", "author": null, "committer": null, "parents": [{"sha": "9694c03951602dd1216838de82dc1c2de54d2754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9694c03951602dd1216838de82dc1c2de54d2754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9694c03951602dd1216838de82dc1c2de54d2754"}], "stats": {"total": 122, "additions": 94, "deletions": 28}, "files": [{"sha": "d14707df9b352ddb8779954f79430bfbb55abfe3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "patch": "@@ -1,3 +1,19 @@\n+2010-10-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb, s-htable.ads: Minor reformatting.\n+\n+2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): If the selector is\n+\tinvisible in an instantiation, and both the formal and the actual are\n+\tprivate extensions of the same type, look for the desired component in\n+\tthe proper view of the parent type.\n+\n+2010-10-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* adaint.c (__gnat_number_of_cpus): Add implementation for Solaris,\n+\tAIX, Tru64, Darwin, IRIX and HP-UX.\n+\n 2010-10-11  Robert Dewar  <dewar@adacore.com>\n \n \t* a-textio.adb: Minor reformatting"}, {"sha": "b6c19de0c79bbf2bc4fd440b50a97ae10dc671a6", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "patch": "@@ -49,6 +49,15 @@\n \n #endif /* VxWorks */\n \n+#if (defined (__mips) && defined (__sgi)) || defined (__APPLE__)\n+#include <unistd.h>\n+#endif\n+\n+#if defined (__hpux__)\n+#include <sys/param.h>\n+#include <sys/pstat.h>\n+#endif\n+\n #ifdef VMS\n #define _POSIX_EXIT 1\n #define HOST_EXECUTABLE_SUFFIX \".exe\"\n@@ -2363,8 +2372,18 @@ __gnat_number_of_cpus (void)\n {\n   int cores = 1;\n \n-#if defined (linux)\n+#if defined (linux) || defined (sun) || defined (AIX) || \\\n+    (defined (__alpha__)  && defined (_osf_)) || defined (__APPLE__)\n   cores = (int)sysconf(_SC_NPROCESSORS_ONLN);\n+\n+#elif (defined (__mips) && defined (__sgi))\n+  cores = (int)sysconf(_SC_NPROC_ONLN);\n+\n+#elif defined (__hpux__)\n+    struct pst_dynamic psd;\n+    if (pstat_getdynamic(&psd, sizeof(psd), 1, 0) != -1)\n+       cores = (int)psd.psd_proc_cnt;\n+\n #endif\n \n   return cores;"}, {"sha": "9e7d1044cc352cb969853c53bee83ce8c5b6923e", "filename": "gcc/ada/s-htable.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fs-htable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fs-htable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.ads?ref=20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2009, AdaCore                     --\n+--                     Copyright (C) 1995-2010, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,7 +80,7 @@ package System.HTable is\n \n       function Get (K : Key) return Element;\n       --  Returns the Element associated with a key or No_Element if the\n-      --  given key has not associated element\n+      --  given key has no associated element.\n \n       procedure Remove (K : Key);\n       --  Removes the latest inserted element pointer associated with the"}, {"sha": "0a86369b89d65ea48c3467da5863c35d0d298daa", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 50, "deletions": 19, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "patch": "@@ -3375,13 +3375,46 @@ package body Sem_Ch4 is\n       Is_Single_Concurrent_Object : Boolean;\n       --  Set True if the prefix is a single task or a single protected object\n \n+      procedure Find_Component_In_Instance (Rec : Entity_Id);\n+      --  In an instance, a component of a private extension may not be visible\n+      --  while it was visible in the generic. Search candidate scope for a\n+      --  component with the proper identifier. This is only done if all other\n+      --  searches have failed. When the match is found (it always will be),\n+      --  the Etype of both N and Sel are set from this component, and the\n+      --  entity of Sel is set to reference this component.\n+\n       function Has_Mode_Conformant_Spec (Comp : Entity_Id) return Boolean;\n       --  It is known that the parent of N denotes a subprogram call. Comp\n       --  is an overloadable component of the concurrent type of the prefix.\n       --  Determine whether all formals of the parent of N and Comp are mode\n       --  conformant. If the parent node is not analyzed yet it may be an\n       --  indexed component rather than a function call.\n \n+      --------------------------------\n+      -- Find_Component_In_Instance --\n+      --------------------------------\n+\n+      procedure Find_Component_In_Instance (Rec : Entity_Id) is\n+         Comp : Entity_Id;\n+\n+      begin\n+         Comp := First_Component (Rec);\n+         while Present (Comp) loop\n+            if Chars (Comp) = Chars (Sel) then\n+               Set_Entity_With_Style_Check (Sel, Comp);\n+               Set_Etype (Sel, Etype (Comp));\n+               Set_Etype (N,   Etype (Comp));\n+               return;\n+            end if;\n+\n+            Next_Component (Comp);\n+         end loop;\n+\n+         --  This must succeed because code was legal in the generic\n+\n+         raise Program_Error;\n+      end Find_Component_In_Instance;\n+\n       ------------------------------\n       -- Has_Mode_Conformant_Spec --\n       ------------------------------\n@@ -3961,33 +3994,31 @@ package body Sem_Ch4 is\n             Analyze_Selected_Component (N);\n             return;\n \n+         --  Similarly, if this is the actual for a formal derived type, the\n+         --  component inherited from the generic parent may not be visible\n+         --  in the actual, but the selected component is legal.\n+\n          elsif Ekind (Prefix_Type) = E_Record_Subtype_With_Private\n            and then Is_Generic_Actual_Type (Prefix_Type)\n            and then Present (Full_View (Prefix_Type))\n          then\n-            --  Similarly, if this the actual for a formal derived type, the\n-            --  component inherited from the generic parent may not be visible\n-            --  in the actual, but the selected component is legal.\n \n-            declare\n-               Comp : Entity_Id;\n+            Find_Component_In_Instance\n+              (Generic_Parent_Type (Parent (Prefix_Type)));\n+            return;\n \n-            begin\n-               Comp :=\n-                 First_Component (Generic_Parent_Type (Parent (Prefix_Type)));\n-               while Present (Comp) loop\n-                  if Chars (Comp) = Chars (Sel) then\n-                     Set_Entity_With_Style_Check (Sel, Comp);\n-                     Set_Etype (Sel, Etype (Comp));\n-                     Set_Etype (N,   Etype (Comp));\n-                     return;\n-                  end if;\n+         --  Finally, the formal and the actual may be private extensions,\n+         --  but the generic is declared in a child unit of the parent, and\n+         --  an addtional step is needed to retrieve the proper scope.\n \n-                  Next_Component (Comp);\n-               end loop;\n+         elsif In_Instance\n+           and then Present (Parent_Subtype (Etype (Base_Type (Prefix_Type))))\n+         then\n+            Find_Component_In_Instance\n+              (Parent_Subtype (Etype (Base_Type (Prefix_Type))));\n+            return;\n \n-               pragma Assert (Etype (N) /= Any_Type);\n-            end;\n+         --  Component not found, specialize error message when appropriate\n \n          else\n             if Ekind (Prefix_Type) = E_Record_Subtype then"}, {"sha": "aeb7552b479381b7c7442714857b5a78121c6428", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20261dc1c7dacc89a7206a601c5f21c36c2c4b9e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=20261dc1c7dacc89a7206a601c5f21c36c2c4b9e", "patch": "@@ -501,17 +501,17 @@ package body Sem_Ch6 is\n             elsif Warn_On_Ada_2005_Compatibility or GNAT_Mode then\n                if Inside_A_Generic then\n                   Error_Msg_N\n-                    (\"return of limited object not permitted in Ada2005 \" &\n-                       \"(RM-2005 6.5(5.5/2))?\", Expr);\n+                    (\"return of limited object not permitted in Ada2005 \"\n+                     & \"(RM-2005 6.5(5.5/2))?\", Expr);\n \n                elsif Is_Immutably_Limited_Type (R_Type) then\n                   Error_Msg_N\n-                    (\"return by reference not permitted in Ada 2005 \" &\n-                     \"(RM-2005 6.5(5.5/2))?\", Expr);\n+                    (\"return by reference not permitted in Ada 2005 \"\n+                     & \"(RM-2005 6.5(5.5/2))?\", Expr);\n                else\n                   Error_Msg_N\n-                    (\"cannot copy object of a limited type in Ada 2005 \" &\n-                     \"(RM-2005 6.5(5.5/2))?\", Expr);\n+                    (\"cannot copy object of a limited type in Ada 2005 \"\n+                     & \"(RM-2005 6.5(5.5/2))?\", Expr);\n                end if;\n \n             --  Ada 95 mode, compatibility warnings disabled"}]}