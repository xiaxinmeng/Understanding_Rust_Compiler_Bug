{"sha": "652623f7c68594b1825a333bf8e83e87d1c3f523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUyNjIzZjdjNjg1OTRiMTgyNWEzMzNiZjhlODNlODdkMWMzZjUyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-27T09:43:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-27T09:43:28Z"}, "message": "gcse, ipa-devirt: Use %wd/%wu instead of HOST_WIDE_INT_PRINT* in diagnostics [PR99288]\n\nHOST_WIDE_INT_PRINT* in the string literals of warning/error/inform etc.\nmake those messages non-translatable, and we have a perfectly fine\nalternative when not using system *printf - %w{d,u}.\n\n2021-02-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR other/99288\n\t* gcse.c (gcse_or_cprop_is_too_expensive): Use %wu instead of\n\tHOST_WIDE_INT_PRINT_UNSIGNED in warning format string.\n\t* ipa-devirt.c (ipa_odr_read_section): Use %wd instead of\n\tHOST_WIDE_INT_PRINT_DEC in inform format string.  Fix comment\n\ttypos.", "tree": {"sha": "65b973e9a9e60277c1fc678b29226e4d0198045b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65b973e9a9e60277c1fc678b29226e4d0198045b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/652623f7c68594b1825a333bf8e83e87d1c3f523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652623f7c68594b1825a333bf8e83e87d1c3f523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/652623f7c68594b1825a333bf8e83e87d1c3f523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652623f7c68594b1825a333bf8e83e87d1c3f523/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a9f20f97e788bdff139dcf62d055955debcc8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a9f20f97e788bdff139dcf62d055955debcc8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a9f20f97e788bdff139dcf62d055955debcc8d"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "210dc7bd5da3dd831392bd0b01e1090abf07f68d", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652623f7c68594b1825a333bf8e83e87d1c3f523/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652623f7c68594b1825a333bf8e83e87d1c3f523/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=652623f7c68594b1825a333bf8e83e87d1c3f523", "patch": "@@ -4011,8 +4011,7 @@ gcse_or_cprop_is_too_expensive (const char *pass)\n     {\n       warning (OPT_Wdisabled_optimization,\n \t       \"%s: %d basic blocks and %d registers; \"\n-\t       \"increase %<--param max-gcse-memory%> above \"\n-\t       HOST_WIDE_INT_PRINT_UNSIGNED,\n+\t       \"increase %<--param max-gcse-memory%> above %wu\",\n \t       pass, n_basic_blocks_for_fn (cfun), max_reg_num (),\n \t       memory_request / 1024);\n "}, {"sha": "8cd1100aba986234f563a22366d0ef876919c97f", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652623f7c68594b1825a333bf8e83e87d1c3f523/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652623f7c68594b1825a333bf8e83e87d1c3f523/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=652623f7c68594b1825a333bf8e83e87d1c3f523", "patch": "@@ -4261,13 +4261,12 @@ ipa_odr_read_section (struct lto_file_decl_data *file_data, const char *data,\n \t\t\t    \" in another translation unit\",\n \t\t\t    this_enum.vals[j].name, warn_name);\n \t\t  /* FIXME: In case there is easy way to print wide_ints,\n-\t\t     perhaps we could do it here instead of overlfow checpl.  */\n+\t\t     perhaps we could do it here instead of overflow check.  */\n \t\t  else if (wi::fits_shwi_p (this_enum.vals[j].val)\n \t\t\t   && wi::fits_shwi_p (warn_value))\n \t\t    inform (this_enum.vals[j].locus,\n-\t\t\t    \"name %qs is defined to \" HOST_WIDE_INT_PRINT_DEC\n-\t\t\t    \" while another translation unit defines \"\n-\t\t\t    \"it as \" HOST_WIDE_INT_PRINT_DEC,\n+\t\t\t    \"name %qs is defined to %wd while another \"\n+\t\t\t    \"translation unit defines it as %wd\",\n \t\t\t    warn_name, this_enum.vals[j].val.to_shwi (),\n \t\t\t    warn_value.to_shwi ());\n \t\t  else"}]}