{"sha": "382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyOTU1NzM2ZWNhNDgyYmZlYmU1ZWVjZGMyZWI2YWM1ZjlmMGQ3Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-09-21T18:45:59Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-09-21T18:45:59Z"}, "message": "PR c++/87372 - __func__ constexpr evaluation.\n\n\t* constexpr.c (maybe_constant_init_1): Pass false for strict down to\n\tcxx_eval_outermost_constant_expr.\n\n\t* g++.dg/cpp1y/func_constexpr2.C: New test.\n\nFrom-SVN: r264489", "tree": {"sha": "a95f55fc8c34da8c13203cd8494c4c6f4bedce25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a95f55fc8c34da8c13203cd8494c4c6f4bedce25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edaaef601d0d6d263fba87b42d6d04c99dd23dba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edaaef601d0d6d263fba87b42d6d04c99dd23dba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edaaef601d0d6d263fba87b42d6d04c99dd23dba"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "079d1cb8574609021b1348353f5c06f7b07084d0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "patch": "@@ -1,3 +1,9 @@\n+2018-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/87372 - __func__ constexpr evaluation.\n+\t* constexpr.c (maybe_constant_init_1): Pass false for strict down to\n+\tcxx_eval_outermost_constant_expr.\n+\n 2018-09-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87109 - wrong ctor with maybe-rvalue semantics."}, {"sha": "08d00e859d8773d33830ae722d2f88167e80f792", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "patch": "@@ -5364,7 +5364,7 @@ maybe_constant_init_1 (tree t, tree decl, bool allow_non_constant,\n     /* No evaluation needed.  */;\n   else\n     t = cxx_eval_outermost_constant_expr (t, allow_non_constant,\n-\t\t\t\t\t  !allow_non_constant,\n+\t\t\t\t\t  /*strict*/false,\n \t\t\t\t\t  pretend_const_required, decl);\n   if (TREE_CODE (t) == TARGET_EXPR)\n     {"}, {"sha": "c6ea7f17b1caf475281fd8ae7b35578763c46d38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "patch": "@@ -1,3 +1,8 @@\n+2018-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/87372 - __func__ constexpr evaluation.\n+\t* g++.dg/cpp1y/func_constexpr2.C: New test.\n+\n 2018-09-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/77325"}, {"sha": "b1576e649608af4317b490d6bc44a00fcc65b9e9", "filename": "gcc/testsuite/g++.dg/cpp1y/func_constexpr2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Ffunc_constexpr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382955736eca482bfebe5eecdc2eb6ac5f9f0d72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Ffunc_constexpr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Ffunc_constexpr2.C?ref=382955736eca482bfebe5eecdc2eb6ac5f9f0d72", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/87372\n+// { dg-do compile { target c++14 } }\n+\n+constexpr int\n+foo (char const *s)\n+{\n+  int i = 0;\n+  while (s[i])\n+    ++i;\n+  return i;\n+}\n+\n+constexpr int\n+bar ()\n+{\n+  constexpr int l = foo (__PRETTY_FUNCTION__);\n+  constexpr int l2 = foo (__FUNCTION__);\n+  constexpr int l3 = foo (__func__);\n+  return l + l2 + l3;\n+}\n+static_assert (bar () == 25, \"\");"}]}