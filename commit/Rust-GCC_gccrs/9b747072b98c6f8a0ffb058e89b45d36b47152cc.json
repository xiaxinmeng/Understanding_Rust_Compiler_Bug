{"sha": "9b747072b98c6f8a0ffb058e89b45d36b47152cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3NDcwNzJiOThjNmY4YTBmZmIwNThlODliNDVkMzZiNDcxNTJjYw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-02-08T22:20:58Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2019-02-08T22:20:58Z"}, "message": "[RS6000] Correct save_reg_p\n\nFixes lack of r30 save/restore on\n\n// -m32 -fpic -ftls-model=initial-exec\n__thread char* p;\nchar** f1 (void) { return &p; }\n\nand\n\n// -m32 -fpic -msecure-plt\nextern int foo (int);\nint f1 (int x) { return foo (x); }\n\nThese are both caused by save_reg_p returning false when the pic\noffset table reg (r30 for ABI_V4) was used, due to the logic not\nexactly matching that in rs6000_emit_prologue to set up r30.\n\nI also noticed that save_reg_p isn't following the comment regarding\ncalls_eh_return (since svn 267049, git 0edf78b1b2a0), and the comment\nneeds tweaking too.  For why the revised comment is correct, grep for\nsaves_all_registers in lra.c, and yes, we do want to save the pic\noffset table reg for eh_return.\n\n\tPR target/88343\n\t* config/rs6000/rs6000.c (save_reg_p): Correct calls_eh_return\n\tcase.  Match logic in rs6000_emit_prologue emitting pic_offset_table\n\tsetup.\n\nFrom-SVN: r268708", "tree": {"sha": "3e40cee7cbfd77fe6d27b5071742fb2117a8fa73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e40cee7cbfd77fe6d27b5071742fb2117a8fa73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b747072b98c6f8a0ffb058e89b45d36b47152cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b747072b98c6f8a0ffb058e89b45d36b47152cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b747072b98c6f8a0ffb058e89b45d36b47152cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b747072b98c6f8a0ffb058e89b45d36b47152cc/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddf321918d35a4f737dda35867c550ab7daf8dfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf321918d35a4f737dda35867c550ab7daf8dfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddf321918d35a4f737dda35867c550ab7daf8dfc"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "0079a6948e84299c666f8d4a3db342a947bdeed8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b747072b98c6f8a0ffb058e89b45d36b47152cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b747072b98c6f8a0ffb058e89b45d36b47152cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b747072b98c6f8a0ffb058e89b45d36b47152cc", "patch": "@@ -1,3 +1,10 @@\n+2019-02-09  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/88343\n+\t* config/rs6000/rs6000.c (save_reg_p): Correct calls_eh_return\n+\tcase.  Match logic in rs6000_emit_prologue emitting pic_offset_table\n+\tsetup.\n+\n 2019-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/88560"}, {"sha": "b4ff18d414c34501b0c1435782bd1c7e4a31b813", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b747072b98c6f8a0ffb058e89b45d36b47152cc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b747072b98c6f8a0ffb058e89b45d36b47152cc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9b747072b98c6f8a0ffb058e89b45d36b47152cc", "patch": "@@ -24008,21 +24008,30 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n static bool\n save_reg_p (int reg)\n {\n-  /* We need to mark the PIC offset register live for the same conditions\n-     as it is set up, or otherwise it won't be saved before we clobber it.  */\n-\n   if (reg == RS6000_PIC_OFFSET_TABLE_REGNUM && !TARGET_SINGLE_PIC_BASE)\n     {\n       /* When calling eh_return, we must return true for all the cases\n \t where conditional_register_usage marks the PIC offset reg\n-\t call used.  */\n+\t call used or fixed.  */\n+      if (crtl->calls_eh_return\n+\t  && ((DEFAULT_ABI == ABI_V4 && flag_pic)\n+\t      || (DEFAULT_ABI == ABI_DARWIN && flag_pic)\n+\t      || (TARGET_TOC && TARGET_MINIMAL_TOC)))\n+\treturn true;\n+\n+      /* We need to mark the PIC offset register live for the same\n+\t conditions as it is set up in rs6000_emit_prologue, or\n+\t otherwise it won't be saved before we clobber it.  */\n       if (TARGET_TOC && TARGET_MINIMAL_TOC\n-\t  && (crtl->calls_eh_return\n-\t      || df_regs_ever_live_p (reg)\n-\t      || !constant_pool_empty_p ()))\n+\t  && !constant_pool_empty_p ())\n+\treturn true;\n+\n+      if (DEFAULT_ABI == ABI_V4\n+\t  && (flag_pic == 1 || (flag_pic && TARGET_SECURE_PLT))\n+\t  && df_regs_ever_live_p (RS6000_PIC_OFFSET_TABLE_REGNUM))\n \treturn true;\n \n-      if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_DARWIN)\n+      if (DEFAULT_ABI == ABI_DARWIN\n \t  && flag_pic && crtl->uses_pic_offset_table)\n \treturn true;\n     }"}]}