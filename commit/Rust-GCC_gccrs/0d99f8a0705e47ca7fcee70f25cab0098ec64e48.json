{"sha": "0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ5OWY4YTA3MDVlNDdjYTdmY2VlNzBmMjVjYWIwMDk4ZWM2NGU0OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-05-31T12:18:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-05-31T12:18:15Z"}, "message": "re PR tree-optimization/71352 (ICE at -O1 and above on x86_64-linux-gnu: in zero_one_operation, at tree-ssa-reassoc.c:1251)\n\n2016-05-31  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/71352\n\t* tree-ssa-reassoc.c (zero_one_operation): Handle op equal to\n\tminus one and a negate.\n\n\t* gcc.dg/tree-ssa/reassoc-45.c: New testcase.\n\nFrom-SVN: r236920", "tree": {"sha": "85254d6388859050eae0e98b7d517d512f953dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85254d6388859050eae0e98b7d517d512f953dfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1293f402a25801d03a58312b06b65c33702c726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1293f402a25801d03a58312b06b65c33702c726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1293f402a25801d03a58312b06b65c33702c726"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "41bb494ec551636e8cdc2f743272367413a46b6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "patch": "@@ -1,3 +1,9 @@\n+2016-05-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71352\n+\t* tree-ssa-reassoc.c (zero_one_operation): Handle op equal to\n+\tminus one and a negate.\n+\n 2016-05-31  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_simd_attr_length_move): Delete."}, {"sha": "8c5def43270ec9c8e5a4c1d4978fa5ae8e46f26d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "patch": "@@ -1,3 +1,8 @@\n+2016-05-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71352\n+\t* gcc.dg/tree-ssa/reassoc-45.c: New testcase.\n+\n 2016-05-31  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.target/arm/armv5_thumb_isa.c: New test."}, {"sha": "48f6b74e39f1464c508b717f4115797b2c2fabf9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-45.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-45.c?ref=0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "patch": "@@ -0,0 +1,15 @@\n+/* PR/71352 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-reassoc1\" } */\n+\n+unsigned a, b, c, d, e;\n+\n+void\n+fn1 ()\n+{\n+  unsigned f;\n+  e = f = d * -b + a * -c;\n+}\n+\n+/* Check that we factor -1 and create -(d * b + a * c).  */\n+/* { dg-final { scan-tree-dump-times \" = -\" 1 \"reassoc1\" } } */"}, {"sha": "1973077db7cb6682e80908029418c4faccb9ce2a", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d99f8a0705e47ca7fcee70f25cab0098ec64e48/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=0d99f8a0705e47ca7fcee70f25cab0098ec64e48", "patch": "@@ -1199,11 +1199,20 @@ zero_one_operation (tree *def, enum tree_code opcode, tree op)\n \t\tpropagate_op_to_single_use (op, stmt, def);\n \t      return;\n \t    }\n-\t  else if (gimple_assign_rhs_code (stmt) == NEGATE_EXPR\n-\t\t   && gimple_assign_rhs1 (stmt) == op)\n+\t  else if (gimple_assign_rhs_code (stmt) == NEGATE_EXPR)\n \t    {\n-\t      propagate_op_to_single_use (op, stmt, def);\n-\t      return;\n+\t      if (gimple_assign_rhs1 (stmt) == op)\n+\t\t{\n+\t\t  propagate_op_to_single_use (op, stmt, def);\n+\t\t  return;\n+\t\t}\n+\t      else if (integer_minus_onep (op)\n+\t\t       || real_minus_onep (op))\n+\t\t{\n+\t\t  gimple_assign_set_rhs_code\n+\t\t    (stmt, TREE_CODE (gimple_assign_rhs1 (stmt)));\n+\t\t  return;\n+\t\t}\n \t    }\n \t}\n \n@@ -1238,11 +1247,20 @@ zero_one_operation (tree *def, enum tree_code opcode, tree op)\n \t      return;\n \t    }\n \t  else if (is_gimple_assign (stmt2)\n-\t\t   && gimple_assign_rhs_code (stmt2) == NEGATE_EXPR\n-\t\t   && gimple_assign_rhs1 (stmt2) == op)\n+\t\t   && gimple_assign_rhs_code (stmt2) == NEGATE_EXPR)\n \t    {\n-\t      propagate_op_to_single_use (op, stmt2, def);\n-\t      return;\n+\t      if (gimple_assign_rhs1 (stmt2) == op)\n+\t\t{\n+\t\t  propagate_op_to_single_use (op, stmt2, def);\n+\t\t  return;\n+\t\t}\n+\t      else if (integer_minus_onep (op)\n+\t\t       || real_minus_onep (op))\n+\t\t{\n+\t\t  gimple_assign_set_rhs_code\n+\t\t    (stmt2, TREE_CODE (gimple_assign_rhs1 (stmt2)));\n+\t\t  return;\n+\t\t}\n \t    }\n \t}\n "}]}