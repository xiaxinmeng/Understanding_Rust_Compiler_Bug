{"sha": "87bacc2b392f48951491bf6454d7d6bcde127c90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdiYWNjMmIzOTJmNDg5NTE0OTFiZjY0NTRkN2Q2YmNkZTEyN2M5MA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-10-31T14:57:13Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-10-31T14:57:13Z"}, "message": "[4/7] Preprocessor location-kind predicates\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-10/msg02040.html\n\t* include/line-map.h (IS_ORDINARY_LOC, IS_MACRO_LOC): New\n\tpredicates.\n\t(IS_ADHOC_LOC): Move earlier.\n\t(MAP_ORDINARY_P): Use IS_ORDINARY_LOC.\n\t* line-map.c (linemap_location_from_macro_expansion_p): Use\n\tIS_MACRO_LOC.\n\nFrom-SVN: r265689", "tree": {"sha": "2f2758bb919239d08146f1801e6c722d58eb633c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f2758bb919239d08146f1801e6c722d58eb633c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87bacc2b392f48951491bf6454d7d6bcde127c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87bacc2b392f48951491bf6454d7d6bcde127c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87bacc2b392f48951491bf6454d7d6bcde127c90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87bacc2b392f48951491bf6454d7d6bcde127c90/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9fb347ea14cd8f519a71374c97547044413a71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9fb347ea14cd8f519a71374c97547044413a71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9fb347ea14cd8f519a71374c97547044413a71f"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "42433d9fe123c71e452b728e03ec6ad4bfa7bf1a", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87bacc2b392f48951491bf6454d7d6bcde127c90/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87bacc2b392f48951491bf6454d7d6bcde127c90/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=87bacc2b392f48951491bf6454d7d6bcde127c90", "patch": "@@ -1,5 +1,12 @@\n 2018-10-31  Nathan Sidwell  <nathan@acm.org>\n \n+\t* include/line-map.h (IS_ORDINARY_LOC, IS_MACRO_LOC): New\n+\tpredicates.\n+\t(IS_ADHOC_LOC): Move earlier.\n+\t(MAP_ORDINARY_P): Use IS_ORDINARY_LOC.\n+\t* line-map.c (linemap_location_from_macro_expansion_p): Use\n+\tIS_MACRO_LOC.\n+\n \t* include/cpplib.h (cpp_macro_definition_location): Make inline.\n \t* macro.c (warn_of_redefinition): Fix comments, examine macro\n \ttype, use C++ for."}, {"sha": "ae9780e5d1a9d101760b09dedb0729ed265c20f0", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87bacc2b392f48951491bf6454d7d6bcde127c90/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87bacc2b392f48951491bf6454d7d6bcde127c90/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=87bacc2b392f48951491bf6454d7d6bcde127c90", "patch": "@@ -558,12 +558,32 @@ struct GTY((tag (\"2\"))) line_map_macro : public line_map {\n #define linemap_assert_fails(EXPR) (! (EXPR))\n #endif\n \n+/* Get whether location LOC is an ad-hoc, ordinary or macro location.  */\n+\n+inline bool\n+IS_ORDINARY_LOC (source_location loc)\n+{\n+  return loc < LINE_MAP_MAX_LOCATION;\n+}\n+\n+inline bool\n+IS_ADHOC_LOC (source_location loc)\n+{\n+  return loc > MAX_SOURCE_LOCATION;\n+}\n+\n+inline bool\n+IS_MACRO_LOC (source_location loc)\n+{\n+  return !IS_ORDINARY_LOC (loc) && !IS_ADHOC_LOC (loc);\n+}\n+\n /* Categorize line map kinds.  */\n \n inline bool\n MAP_ORDINARY_P (const line_map *map)\n {\n-  return map->start_location < LINE_MAP_MAX_LOCATION;\n+  return IS_ORDINARY_LOC (map->start_location);\n }\n \n /* Return TRUE if MAP encodes locations coming from a macro\n@@ -1037,14 +1057,6 @@ extern source_location get_location_from_adhoc_loc (struct line_maps *,\n \n extern source_range get_range_from_loc (line_maps *set, source_location loc);\n \n-/* Get whether location LOC is an ad-hoc location.  */\n-\n-inline bool\n-IS_ADHOC_LOC (source_location loc)\n-{\n-  return (loc & MAX_SOURCE_LOCATION) != loc;\n-}\n-\n /* Get whether location LOC is a \"pure\" location, or\n    whether it is an ad-hoc location, or embeds range information.  */\n "}, {"sha": "2d3ed839122693aa482a04da0c30e52dd964c535", "filename": "libcpp/line-map.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87bacc2b392f48951491bf6454d7d6bcde127c90/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87bacc2b392f48951491bf6454d7d6bcde127c90/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=87bacc2b392f48951491bf6454d7d6bcde127c90", "patch": "@@ -1238,7 +1238,7 @@ linemap_location_from_macro_expansion_p (const struct line_maps *set,\n     location = set->location_adhoc_data_map.data[location\n \t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n-  return location >= LINE_MAP_MAX_LOCATION;\n+  return IS_MACRO_LOC (location);\n }\n \n /* Given two virtual locations *LOC0 and *LOC1, return the first"}]}