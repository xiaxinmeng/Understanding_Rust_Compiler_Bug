{"sha": "dc7750b1a9b7e961354334a4a34f4b384c2240c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM3NzUwYjFhOWI3ZTk2MTM1NDMzNGE0YTM0ZjRiMzg0YzIyNDBjMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-04-12T17:39:58Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-04-12T17:39:58Z"}, "message": "mips-protos.h: In comments, refer to loadgp_absolute rather than loadgp_noshared.\n\ngcc/\n\t* config/mips/mips-protos.h: In comments, refer to loadgp_absolute\n\trather than loadgp_noshared.\n\t* config/mips/mips.c (mips_emit_loadgp): Use gen_loadgp_absolute\n\tinstead of gen_loadgp_noshared.  Use gen_loadgp_newabi instead of\n\tgen_loadgp.\n\t* config/mips/mips.md (loadgp): Rename to...\n\t(loadgp_newabi): ...this.\n\t(loadgp_noshared): Rename to...\n\t(loadgp_absolute): ...this.\n\nFrom-SVN: r123755", "tree": {"sha": "393ca3ed1cdf4988b569fa9e98483982b1f2969f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/393ca3ed1cdf4988b569fa9e98483982b1f2969f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc7750b1a9b7e961354334a4a34f4b384c2240c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7750b1a9b7e961354334a4a34f4b384c2240c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc7750b1a9b7e961354334a4a34f4b384c2240c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7750b1a9b7e961354334a4a34f4b384c2240c0/comments", "author": null, "committer": null, "parents": [{"sha": "006257dc5b471f56079fb172410b177d28cbc7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006257dc5b471f56079fb172410b177d28cbc7fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/006257dc5b471f56079fb172410b177d28cbc7fb"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "e98422669bf47396b6444e896dc695103ff33733", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc7750b1a9b7e961354334a4a34f4b384c2240c0", "patch": "@@ -1,3 +1,15 @@\n+2007-04-12  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/mips/mips-protos.h: In comments, refer to loadgp_absolute\n+\trather than loadgp_noshared.\n+\t* config/mips/mips.c (mips_emit_loadgp): Use gen_loadgp_absolute\n+\tinstead of gen_loadgp_noshared.  Use gen_loadgp_newabi instead of\n+\tgen_loadgp.\n+\t* config/mips/mips.md (loadgp): Rename to...\n+\t(loadgp_newabi): ...this.\n+\t(loadgp_noshared): Rename to...\n+\t(loadgp_absolute): ...this.\n+\n 2007-04-12  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/mips/mips.c (mips_ok_for_lazy_binding_p): Always return"}, {"sha": "78cdc1ae6693cee91d23aca9856a61681ccfcfde", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=dc7750b1a9b7e961354334a4a34f4b384c2240c0", "patch": "@@ -119,7 +119,7 @@ enum mips_symbol_type {\n \tby .cpsetup).\n \n    LOADGP_ABSOLUTE\n-\tThe GNU absolute sequence, as generated by loadgp_noshared.  */\n+\tThe GNU absolute sequence, as generated by loadgp_absolute.  */\n enum mips_loadgp_style {\n   LOADGP_NONE,\n   LOADGP_OLDABI,"}, {"sha": "9100e998c7663a2724e67cdc57250765a761fdc6", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=dc7750b1a9b7e961354334a4a34f4b384c2240c0", "patch": "@@ -6599,14 +6599,14 @@ mips_emit_loadgp (void)\n \t  mips_gnu_local_gp = gen_rtx_SYMBOL_REF (Pmode, \"__gnu_local_gp\");\n \t  SYMBOL_REF_FLAGS (mips_gnu_local_gp) |= SYMBOL_FLAG_LOCAL;\n \t}\n-      emit_insn (gen_loadgp_noshared (mips_gnu_local_gp));\n+      emit_insn (gen_loadgp_absolute (mips_gnu_local_gp));\n       break;\n \n     case LOADGP_NEWABI:\n       addr = XEXP (DECL_RTL (current_function_decl), 0);\n       offset = mips_unspec_address (addr, SYMBOL_GOTOFF_LOADGP);\n       incoming_address = gen_rtx_REG (Pmode, PIC_FUNCTION_ADDR_REGNUM);\n-      emit_insn (gen_loadgp (offset, incoming_address));\n+      emit_insn (gen_loadgp_newabi (offset, incoming_address));\n       if (!TARGET_EXPLICIT_RELOCS)\n \temit_insn (gen_loadgp_blockage ());\n       break;"}, {"sha": "28fb5022eb781655fcb65123112dd69160ceb3a9", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7750b1a9b7e961354334a4a34f4b384c2240c0/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=dc7750b1a9b7e961354334a4a34f4b384c2240c0", "patch": "@@ -4083,7 +4083,7 @@\n ;; Insn to initialize $gp for n32/n64 abicalls.  Operand 0 is the offset\n ;; of _gp from the start of this function.  Operand 1 is the incoming\n ;; function address.\n-(define_insn_and_split \"loadgp\"\n+(define_insn_and_split \"loadgp_newabi\"\n   [(unspec_volatile [(match_operand 0 \"\" \"\")\n \t\t     (match_operand 1 \"register_operand\" \"\")] UNSPEC_LOADGP)]\n   \"mips_current_loadgp_style () == LOADGP_NEWABI\"\n@@ -4101,7 +4101,7 @@\n   [(set_attr \"length\" \"12\")])\n \n ;; Likewise, for -mno-shared code.  Operand 0 is the __gnu_local_gp symbol.\n-(define_insn_and_split \"loadgp_noshared\"\n+(define_insn_and_split \"loadgp_absolute\"\n   [(unspec_volatile [(match_operand 0 \"\" \"\")] UNSPEC_LOADGP)]\n   \"mips_current_loadgp_style () == LOADGP_ABSOLUTE\"\n   \"#\""}]}