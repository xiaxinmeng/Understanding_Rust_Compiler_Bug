{"sha": "57cfc5dd861a5807349c2ab5d590183a745a7a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdjZmM1ZGQ4NjFhNTgwNzM0OWMyYWI1ZDU5MDE4M2E3NDVhN2EzMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-11-23T03:16:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-23T03:16:06Z"}, "message": "parse.y (named_class_head): Update CLASSTYPE_DECLARED_CLASS.\n\n\t* parse.y (named_class_head): Update CLASSTYPE_DECLARED_CLASS.\nFixes Sec14/5/P14139.C\n\nFrom-SVN: r23765", "tree": {"sha": "7f387613ee17575133c00ff1c0bda5a454bcb2da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f387613ee17575133c00ff1c0bda5a454bcb2da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57cfc5dd861a5807349c2ab5d590183a745a7a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57cfc5dd861a5807349c2ab5d590183a745a7a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57cfc5dd861a5807349c2ab5d590183a745a7a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57cfc5dd861a5807349c2ab5d590183a745a7a32/comments", "author": null, "committer": null, "parents": [{"sha": "0b5be8972fafa478f6dc09e3a7555a637fa09480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5be8972fafa478f6dc09e3a7555a637fa09480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5be8972fafa478f6dc09e3a7555a637fa09480"}], "stats": {"total": 712, "additions": 362, "deletions": 350}, "files": [{"sha": "ecf782a6e8b7f48040f3b8d6bd42e65e91121805", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57cfc5dd861a5807349c2ab5d590183a745a7a32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57cfc5dd861a5807349c2ab5d590183a745a7a32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=57cfc5dd861a5807349c2ab5d590183a745a7a32", "patch": "@@ -1,5 +1,7 @@\n 1998-11-23  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* parse.y (named_class_head): Update CLASSTYPE_DECLARED_CLASS.\n+\n \t* class.c (finish_struct_1): Set things up for 0-width bitfields\n \tlike we do for others.\n "}, {"sha": "c941e4b9422e176217cf6ea2fd5886bc79633dd2", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 353, "deletions": 348, "changes": 701, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57cfc5dd861a5807349c2ab5d590183a745a7a32/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57cfc5dd861a5807349c2ab5d590183a745a7a32/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=57cfc5dd861a5807349c2ab5d590183a745a7a32", "patch": "@@ -693,44 +693,44 @@ static const short yyrline[] = { 0,\n   2093,  2097,  2101,  2108,  2112,  2115,  2118,  2124,  2136,  2138,\n   2141,  2161,  2163,  2166,  2168,  2173,  2175,  2177,  2179,  2181,\n   2183,  2187,  2195,  2198,  2200,  2204,  2210,  2215,  2220,  2222,\n-  2226,  2229,  2233,  2239,  2242,  2259,  2265,  2267,  2270,  2273,\n-  2275,  2279,  2281,  2285,  2290,  2296,  2299,  2300,  2321,  2344,\n-  2346,  2350,  2361,  2375,  2380,  2387,  2389,  2390,  2391,  2394,\n-  2409,  2414,  2420,  2422,  2427,  2429,  2431,  2433,  2435,  2437,\n-  2440,  2450,  2457,  2482,  2488,  2491,  2494,  2496,  2507,  2512,\n-  2515,  2520,  2523,  2530,  2540,  2543,  2550,  2560,  2562,  2565,\n-  2567,  2570,  2577,  2585,  2592,  2598,  2604,  2612,  2616,  2621,\n-  2625,  2628,  2637,  2639,  2643,  2646,  2651,  2655,  2661,  2672,\n-  2675,  2679,  2683,  2691,  2696,  2702,  2705,  2707,  2709,  2715,\n-  2718,  2720,  2722,  2724,  2728,  2731,  2749,  2759,  2761,  2762,\n-  2766,  2771,  2774,  2776,  2778,  2780,  2784,  2790,  2792,  2800,\n-  2803,  2805,  2807,  2809,  2813,  2816,  2819,  2821,  2823,  2825,\n-  2829,  2832,  2835,  2837,  2839,  2841,  2843,  2850,  2854,  2859,\n-  2863,  2868,  2870,  2874,  2877,  2879,  2882,  2884,  2885,  2888,\n-  2890,  2892,  2898,  2913,  2919,  2925,  2939,  2941,  2945,  2959,\n-  2961,  2963,  2967,  2973,  2986,  2988,  2992,  3005,  3011,  3013,\n-  3014,  3015,  3023,  3028,  3037,  3038,  3042,  3045,  3051,  3057,\n-  3060,  3062,  3064,  3066,  3070,  3074,  3078,  3081,  3086,  3089,\n-  3091,  3093,  3095,  3097,  3099,  3101,  3103,  3107,  3111,  3115,\n-  3119,  3120,  3122,  3124,  3126,  3128,  3130,  3132,  3134,  3136,\n-  3144,  3146,  3147,  3148,  3151,  3157,  3159,  3164,  3166,  3169,\n-  3183,  3186,  3189,  3193,  3196,  3203,  3205,  3208,  3210,  3212,\n-  3215,  3218,  3221,  3224,  3226,  3229,  3233,  3235,  3241,  3243,\n-  3244,  3246,  3251,  3253,  3255,  3257,  3259,  3262,  3263,  3265,\n-  3268,  3269,  3272,  3272,  3275,  3275,  3278,  3278,  3280,  3282,\n-  3284,  3286,  3292,  3298,  3301,  3304,  3310,  3312,  3314,  3318,\n-  3320,  3321,  3322,  3324,  3327,  3334,  3339,  3347,  3351,  3353,\n-  3356,  3358,  3361,  3365,  3367,  3370,  3372,  3375,  3392,  3398,\n-  3406,  3408,  3410,  3414,  3417,  3418,  3426,  3430,  3434,  3437,\n-  3438,  3444,  3447,  3450,  3452,  3456,  3461,  3464,  3474,  3479,\n-  3480,  3487,  3490,  3493,  3495,  3498,  3500,  3510,  3524,  3528,\n-  3531,  3533,  3537,  3541,  3544,  3547,  3549,  3553,  3555,  3562,\n-  3569,  3572,  3575,  3579,  3583,  3589,  3593,  3598,  3600,  3603,\n-  3608,  3614,  3625,  3628,  3630,  3634,  3639,  3641,  3648,  3651,\n-  3653,  3655,  3661,  3666,  3669,  3671,  3673,  3675,  3677,  3679,\n-  3681,  3683,  3685,  3687,  3689,  3691,  3693,  3695,  3697,  3699,\n-  3701,  3703,  3705,  3707,  3709,  3711,  3713,  3715,  3717,  3719,\n-  3721,  3723,  3725,  3727,  3729,  3731,  3734,  3736\n+  2226,  2229,  2233,  2239,  2242,  2264,  2270,  2272,  2275,  2278,\n+  2280,  2284,  2286,  2290,  2295,  2301,  2304,  2305,  2326,  2349,\n+  2351,  2355,  2366,  2380,  2385,  2392,  2394,  2395,  2396,  2399,\n+  2414,  2419,  2425,  2427,  2432,  2434,  2436,  2438,  2440,  2442,\n+  2445,  2455,  2462,  2487,  2493,  2496,  2499,  2501,  2512,  2517,\n+  2520,  2525,  2528,  2535,  2545,  2548,  2555,  2565,  2567,  2570,\n+  2572,  2575,  2582,  2590,  2597,  2603,  2609,  2617,  2621,  2626,\n+  2630,  2633,  2642,  2644,  2648,  2651,  2656,  2660,  2666,  2677,\n+  2680,  2684,  2688,  2696,  2701,  2707,  2710,  2712,  2714,  2720,\n+  2723,  2725,  2727,  2729,  2733,  2736,  2754,  2764,  2766,  2767,\n+  2771,  2776,  2779,  2781,  2783,  2785,  2789,  2795,  2797,  2805,\n+  2808,  2810,  2812,  2814,  2818,  2821,  2824,  2826,  2828,  2830,\n+  2834,  2837,  2840,  2842,  2844,  2846,  2848,  2855,  2859,  2864,\n+  2868,  2873,  2875,  2879,  2882,  2884,  2887,  2889,  2890,  2893,\n+  2895,  2897,  2903,  2918,  2924,  2930,  2944,  2946,  2950,  2964,\n+  2966,  2968,  2972,  2978,  2991,  2993,  2997,  3010,  3016,  3018,\n+  3019,  3020,  3028,  3033,  3042,  3043,  3047,  3050,  3056,  3062,\n+  3065,  3067,  3069,  3071,  3075,  3079,  3083,  3086,  3091,  3094,\n+  3096,  3098,  3100,  3102,  3104,  3106,  3108,  3112,  3116,  3120,\n+  3124,  3125,  3127,  3129,  3131,  3133,  3135,  3137,  3139,  3141,\n+  3149,  3151,  3152,  3153,  3156,  3162,  3164,  3169,  3171,  3174,\n+  3188,  3191,  3194,  3198,  3201,  3208,  3210,  3213,  3215,  3217,\n+  3220,  3223,  3226,  3229,  3231,  3234,  3238,  3240,  3246,  3248,\n+  3249,  3251,  3256,  3258,  3260,  3262,  3264,  3267,  3268,  3270,\n+  3273,  3274,  3277,  3277,  3280,  3280,  3283,  3283,  3285,  3287,\n+  3289,  3291,  3297,  3303,  3306,  3309,  3315,  3317,  3319,  3323,\n+  3325,  3326,  3327,  3329,  3332,  3339,  3344,  3352,  3356,  3358,\n+  3361,  3363,  3366,  3370,  3372,  3375,  3377,  3380,  3397,  3403,\n+  3411,  3413,  3415,  3419,  3422,  3423,  3431,  3435,  3439,  3442,\n+  3443,  3449,  3452,  3455,  3457,  3461,  3466,  3469,  3479,  3484,\n+  3485,  3492,  3495,  3498,  3500,  3503,  3505,  3515,  3529,  3533,\n+  3536,  3538,  3542,  3546,  3549,  3552,  3554,  3558,  3560,  3567,\n+  3574,  3577,  3580,  3584,  3588,  3594,  3598,  3603,  3605,  3608,\n+  3613,  3619,  3630,  3633,  3635,  3639,  3644,  3646,  3653,  3656,\n+  3658,  3660,  3666,  3671,  3674,  3676,  3678,  3680,  3682,  3684,\n+  3686,  3688,  3690,  3692,  3694,  3696,  3698,  3700,  3702,  3704,\n+  3706,  3708,  3710,  3712,  3714,  3716,  3718,  3720,  3722,  3724,\n+  3726,  3728,  3730,  3732,  3734,  3736,  3739,  3741\n };\n #endif\n \n@@ -6278,12 +6278,17 @@ case 505:\n { \n                   pop_scope (CP_DECL_CONTEXT (yyvsp[-2].ttype));\n \t\t  yyval.ttype = TREE_TYPE (yyvsp[-2].ttype);\n-\t\t  if (TREE_INT_CST_LOW (current_aggr) == union_type \n+\t\t  if (current_aggr == union_type_node\n \t\t      && TREE_CODE (yyval.ttype) != UNION_TYPE)\n \t\t    cp_pedwarn (\"`union' tag used in declaring `%#T'\", yyval.ttype);\n \t\t  else if (TREE_CODE (yyval.ttype) == UNION_TYPE\n-\t\t\t   && TREE_INT_CST_LOW (current_aggr) != union_type)\n+\t\t\t   && current_aggr != union_type_node)\n \t\t    cp_pedwarn (\"non-`union' tag used in declaring `%#T'\", yyval.ttype);\n+\t\t  else if (TREE_CODE (yyval.ttype) == RECORD_TYPE)\n+\t\t    /* We might be specializing a template with a different\n+\t\t       class-key; deal.  */\n+\t\t    CLASSTYPE_DECLARED_CLASS (yyval.ttype) = (current_aggr\n+\t\t\t\t\t\t     == class_type_node);\n \t\t  if (yyvsp[0].ttype)\n \t\t    {\n \t\t      maybe_process_partial_specialization (yyval.ttype);\n@@ -6292,44 +6297,44 @@ case 505:\n \t\t;\n     break;}\n case 506:\n-#line 2261 \"parse.y\"\n+#line 2266 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 509:\n-#line 2272 \"parse.y\"\n+#line 2277 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 510:\n-#line 2274 \"parse.y\"\n+#line 2279 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 511:\n-#line 2276 \"parse.y\"\n+#line 2281 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 513:\n-#line 2282 \"parse.y\"\n+#line 2287 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 514:\n-#line 2287 \"parse.y\"\n+#line 2292 \"parse.y\"\n { yyval.ttype = finish_base_specifier (access_default_node, yyvsp[0].ttype,\n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 515:\n-#line 2291 \"parse.y\"\n+#line 2296 \"parse.y\"\n { yyval.ttype = finish_base_specifier (yyvsp[-2].ttype, yyvsp[0].ttype, \n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 516:\n-#line 2298 \"parse.y\"\n+#line 2303 \"parse.y\"\n { if (yyval.ttype != error_mark_node) yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 518:\n-#line 2301 \"parse.y\"\n+#line 2306 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6352,7 +6357,7 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2322 \"parse.y\"\n+#line 2327 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6375,13 +6380,13 @@ case 519:\n \t\t;\n     break;}\n case 521:\n-#line 2347 \"parse.y\"\n+#line 2352 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 522:\n-#line 2351 \"parse.y\"\n+#line 2356 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6394,7 +6399,7 @@ case 522:\n \t\t;\n     break;}\n case 523:\n-#line 2362 \"parse.y\"\n+#line 2367 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6408,17 +6413,17 @@ case 523:\n \t\t;\n     break;}\n case 524:\n-#line 2377 \"parse.y\"\n+#line 2382 \"parse.y\"\n { yyvsp[-1].ttype = begin_class_definition (yyvsp[-1].ttype); ;\n     break;}\n case 525:\n-#line 2382 \"parse.y\"\n+#line 2387 \"parse.y\"\n {\n \t\t  finish_member_declaration (build_self_reference ());\n \t\t;\n     break;}\n case 530:\n-#line 2396 \"parse.y\"\n+#line 2401 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6430,49 +6435,49 @@ case 530:\n                 ;\n     break;}\n case 531:\n-#line 2411 \"parse.y\"\n+#line 2416 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 532:\n-#line 2415 \"parse.y\"\n+#line 2420 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 534:\n-#line 2423 \"parse.y\"\n+#line 2428 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 535:\n-#line 2428 \"parse.y\"\n+#line 2433 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 536:\n-#line 2430 \"parse.y\"\n+#line 2435 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 537:\n-#line 2432 \"parse.y\"\n+#line 2437 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 538:\n-#line 2434 \"parse.y\"\n+#line 2439 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 539:\n-#line 2436 \"parse.y\"\n+#line 2441 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 540:\n-#line 2438 \"parse.y\"\n+#line 2443 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 541:\n-#line 2441 \"parse.y\"\n+#line 2446 \"parse.y\"\n {  \n \t\t  if (yyvsp[0].ttype)\n \t\t    yyval.ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6484,14 +6489,14 @@ case 541:\n \t\t;\n     break;}\n case 542:\n-#line 2451 \"parse.y\"\n+#line 2456 \"parse.y\"\n { \n \t\t  yyval.ttype = finish_member_class_template (yyvsp[-1].ftype.t); \n \t\t  finish_template_decl (yyvsp[-2].ttype);\n \t\t;\n     break;}\n case 543:\n-#line 2462 \"parse.y\"\n+#line 2467 \"parse.y\"\n {\n \t\t  /* Most of the productions for component_decl only\n \t\t     allow the creation of one new member, so we call\n@@ -6514,53 +6519,53 @@ case 543:\n \t\t;\n     break;}\n case 544:\n-#line 2483 \"parse.y\"\n+#line 2488 \"parse.y\"\n { \n \t\t  if (!yyvsp[0].itype)\n \t\t    grok_x_components (yyvsp[-1].ttype);\n \t\t  yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 545:\n-#line 2489 \"parse.y\"\n+#line 2494 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 546:\n-#line 2492 \"parse.y\"\n+#line 2497 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 547:\n-#line 2495 \"parse.y\"\n+#line 2500 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 548:\n-#line 2497 \"parse.y\"\n+#line 2502 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 549:\n-#line 2508 \"parse.y\"\n+#line 2513 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 550:\n-#line 2513 \"parse.y\"\n+#line 2518 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 551:\n-#line 2516 \"parse.y\"\n+#line 2521 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 552:\n-#line 2522 \"parse.y\"\n+#line 2527 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 553:\n-#line 2524 \"parse.y\"\n+#line 2529 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6569,7 +6574,7 @@ case 553:\n \t\t;\n     break;}\n case 554:\n-#line 2531 \"parse.y\"\n+#line 2536 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6579,11 +6584,11 @@ case 554:\n \t\t;\n     break;}\n case 555:\n-#line 2542 \"parse.y\"\n+#line 2547 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 556:\n-#line 2544 \"parse.y\"\n+#line 2549 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6592,7 +6597,7 @@ case 556:\n \t\t;\n     break;}\n case 557:\n-#line 2551 \"parse.y\"\n+#line 2556 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6602,102 +6607,102 @@ case 557:\n \t\t;\n     break;}\n case 562:\n-#line 2572 \"parse.y\"\n+#line 2577 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 563:\n-#line 2578 \"parse.y\"\n+#line 2583 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 564:\n-#line 2587 \"parse.y\"\n+#line 2592 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 565:\n-#line 2593 \"parse.y\"\n+#line 2598 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 566:\n-#line 2599 \"parse.y\"\n+#line 2604 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 567:\n-#line 2605 \"parse.y\"\n+#line 2610 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 568:\n-#line 2614 \"parse.y\"\n+#line 2619 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 569:\n-#line 2617 \"parse.y\"\n+#line 2622 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 570:\n-#line 2623 \"parse.y\"\n+#line 2628 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 571:\n-#line 2626 \"parse.y\"\n+#line 2631 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 572:\n-#line 2629 \"parse.y\"\n+#line 2634 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 574:\n-#line 2640 \"parse.y\"\n+#line 2645 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 575:\n-#line 2645 \"parse.y\"\n+#line 2650 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE, current_enum_type); ;\n     break;}\n case 576:\n-#line 2647 \"parse.y\"\n+#line 2652 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype, current_enum_type); ;\n     break;}\n case 577:\n-#line 2653 \"parse.y\"\n+#line 2658 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 578:\n-#line 2656 \"parse.y\"\n+#line 2661 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 579:\n-#line 2663 \"parse.y\"\n+#line 2668 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6707,71 +6712,71 @@ case 579:\n \t\t;\n     break;}\n case 580:\n-#line 2674 \"parse.y\"\n+#line 2679 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 581:\n-#line 2676 \"parse.y\"\n+#line 2681 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 582:\n-#line 2681 \"parse.y\"\n+#line 2686 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 583:\n-#line 2684 \"parse.y\"\n+#line 2689 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 584:\n-#line 2693 \"parse.y\"\n+#line 2698 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 585:\n-#line 2698 \"parse.y\"\n+#line 2703 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 586:\n-#line 2704 \"parse.y\"\n+#line 2709 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 587:\n-#line 2706 \"parse.y\"\n+#line 2711 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 588:\n-#line 2708 \"parse.y\"\n+#line 2713 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 589:\n-#line 2710 \"parse.y\"\n+#line 2715 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 590:\n-#line 2717 \"parse.y\"\n+#line 2722 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 591:\n-#line 2719 \"parse.y\"\n+#line 2724 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 592:\n-#line 2721 \"parse.y\"\n+#line 2726 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 593:\n-#line 2723 \"parse.y\"\n+#line 2728 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 594:\n-#line 2725 \"parse.y\"\n+#line 2730 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 596:\n-#line 2733 \"parse.y\"\n+#line 2738 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6790,7 +6795,7 @@ case 596:\n \t\t;\n     break;}\n case 597:\n-#line 2750 \"parse.y\"\n+#line 2755 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6800,160 +6805,160 @@ case 597:\n \t\t;\n     break;}\n case 600:\n-#line 2763 \"parse.y\"\n+#line 2768 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 601:\n-#line 2768 \"parse.y\"\n+#line 2773 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 602:\n-#line 2773 \"parse.y\"\n+#line 2778 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 603:\n-#line 2775 \"parse.y\"\n+#line 2780 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 604:\n-#line 2777 \"parse.y\"\n+#line 2782 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 605:\n-#line 2779 \"parse.y\"\n+#line 2784 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 606:\n-#line 2781 \"parse.y\"\n+#line 2786 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 609:\n-#line 2793 \"parse.y\"\n+#line 2798 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 610:\n-#line 2802 \"parse.y\"\n+#line 2807 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2804 \"parse.y\"\n+#line 2809 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 612:\n-#line 2806 \"parse.y\"\n+#line 2811 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 613:\n-#line 2808 \"parse.y\"\n+#line 2813 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 614:\n-#line 2810 \"parse.y\"\n+#line 2815 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 616:\n-#line 2818 \"parse.y\"\n+#line 2823 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 617:\n-#line 2820 \"parse.y\"\n+#line 2825 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 618:\n-#line 2822 \"parse.y\"\n+#line 2827 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 619:\n-#line 2824 \"parse.y\"\n+#line 2829 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 620:\n-#line 2826 \"parse.y\"\n+#line 2831 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 622:\n-#line 2834 \"parse.y\"\n+#line 2839 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 623:\n-#line 2836 \"parse.y\"\n+#line 2841 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 624:\n-#line 2838 \"parse.y\"\n+#line 2843 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 625:\n-#line 2840 \"parse.y\"\n+#line 2845 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 626:\n-#line 2842 \"parse.y\"\n+#line 2847 \"parse.y\"\n { enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 627:\n-#line 2844 \"parse.y\"\n+#line 2849 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 628:\n-#line 2852 \"parse.y\"\n+#line 2857 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 629:\n-#line 2855 \"parse.y\"\n+#line 2860 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 630:\n-#line 2861 \"parse.y\"\n+#line 2866 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 631:\n-#line 2864 \"parse.y\"\n+#line 2869 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 633:\n-#line 2871 \"parse.y\"\n+#line 2876 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 634:\n-#line 2876 \"parse.y\"\n+#line 2881 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 635:\n-#line 2878 \"parse.y\"\n+#line 2883 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 636:\n-#line 2880 \"parse.y\"\n+#line 2885 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 641:\n-#line 2891 \"parse.y\"\n+#line 2896 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 642:\n-#line 2893 \"parse.y\"\n+#line 2898 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 643:\n-#line 2900 \"parse.y\"\n+#line 2905 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6969,31 +6974,31 @@ case 643:\n \t\t;\n     break;}\n case 644:\n-#line 2914 \"parse.y\"\n+#line 2919 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 645:\n-#line 2920 \"parse.y\"\n+#line 2925 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 646:\n-#line 2926 \"parse.y\"\n+#line 2931 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 648:\n-#line 2942 \"parse.y\"\n+#line 2947 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 649:\n-#line 2947 \"parse.y\"\n+#line 2952 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7008,26 +7013,26 @@ case 649:\n \t\t;\n     break;}\n case 650:\n-#line 2960 \"parse.y\"\n+#line 2965 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 2962 \"parse.y\"\n+#line 2967 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 652:\n-#line 2964 \"parse.y\"\n+#line 2969 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 653:\n-#line 2969 \"parse.y\"\n+#line 2974 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 654:\n-#line 2974 \"parse.y\"\n+#line 2979 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7042,15 +7047,15 @@ case 654:\n \t\t;\n     break;}\n case 655:\n-#line 2987 \"parse.y\"\n+#line 2992 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 2989 \"parse.y\"\n+#line 2994 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 657:\n-#line 2994 \"parse.y\"\n+#line 2999 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7064,31 +7069,31 @@ case 657:\n \t\t;\n     break;}\n case 658:\n-#line 3006 \"parse.y\"\n+#line 3011 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 659:\n-#line 3012 \"parse.y\"\n+#line 3017 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 662:\n-#line 3016 \"parse.y\"\n+#line 3021 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 663:\n-#line 3025 \"parse.y\"\n+#line 3030 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 664:\n-#line 3030 \"parse.y\"\n+#line 3035 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7098,148 +7103,148 @@ case 664:\n \t\t;\n     break;}\n case 666:\n-#line 3039 \"parse.y\"\n+#line 3044 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 667:\n-#line 3044 \"parse.y\"\n+#line 3049 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 668:\n-#line 3046 \"parse.y\"\n+#line 3051 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 669:\n-#line 3053 \"parse.y\"\n+#line 3058 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 670:\n-#line 3059 \"parse.y\"\n+#line 3064 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 671:\n-#line 3061 \"parse.y\"\n+#line 3066 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 672:\n-#line 3063 \"parse.y\"\n+#line 3068 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3065 \"parse.y\"\n+#line 3070 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3067 \"parse.y\"\n+#line 3072 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 675:\n-#line 3071 \"parse.y\"\n+#line 3076 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 677:\n-#line 3080 \"parse.y\"\n+#line 3085 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 678:\n-#line 3082 \"parse.y\"\n+#line 3087 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 679:\n-#line 3088 \"parse.y\"\n+#line 3093 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 680:\n-#line 3090 \"parse.y\"\n+#line 3095 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 681:\n-#line 3092 \"parse.y\"\n+#line 3097 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 682:\n-#line 3094 \"parse.y\"\n+#line 3099 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 683:\n-#line 3096 \"parse.y\"\n+#line 3101 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 684:\n-#line 3098 \"parse.y\"\n+#line 3103 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 685:\n-#line 3100 \"parse.y\"\n+#line 3105 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 686:\n-#line 3102 \"parse.y\"\n+#line 3107 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 687:\n-#line 3104 \"parse.y\"\n+#line 3109 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 688:\n-#line 3108 \"parse.y\"\n+#line 3113 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 690:\n-#line 3117 \"parse.y\"\n+#line 3122 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 692:\n-#line 3121 \"parse.y\"\n+#line 3126 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 693:\n-#line 3123 \"parse.y\"\n+#line 3128 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 694:\n-#line 3125 \"parse.y\"\n+#line 3130 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 695:\n-#line 3127 \"parse.y\"\n+#line 3132 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 696:\n-#line 3129 \"parse.y\"\n+#line 3134 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 697:\n-#line 3131 \"parse.y\"\n+#line 3136 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 698:\n-#line 3133 \"parse.y\"\n+#line 3138 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 699:\n-#line 3135 \"parse.y\"\n+#line 3140 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 700:\n-#line 3137 \"parse.y\"\n+#line 3142 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 707:\n-#line 3160 \"parse.y\"\n+#line 3165 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 710:\n-#line 3171 \"parse.y\"\n+#line 3176 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7250,225 +7255,225 @@ case 710:\n \t\t;\n     break;}\n case 711:\n-#line 3185 \"parse.y\"\n+#line 3190 \"parse.y\"\n {;\n     break;}\n case 713:\n-#line 3191 \"parse.y\"\n+#line 3196 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 714:\n-#line 3193 \"parse.y\"\n+#line 3198 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 715:\n-#line 3198 \"parse.y\"\n+#line 3203 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 716:\n-#line 3203 \"parse.y\"\n+#line 3208 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 717:\n-#line 3205 \"parse.y\"\n+#line 3210 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 719:\n-#line 3210 \"parse.y\"\n+#line 3215 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 720:\n-#line 3212 \"parse.y\"\n+#line 3217 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 721:\n-#line 3217 \"parse.y\"\n+#line 3222 \"parse.y\"\n {;\n     break;}\n case 723:\n-#line 3223 \"parse.y\"\n+#line 3228 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 724:\n-#line 3225 \"parse.y\"\n+#line 3230 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 725:\n-#line 3227 \"parse.y\"\n+#line 3232 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 726:\n-#line 3229 \"parse.y\"\n+#line 3234 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 727:\n-#line 3234 \"parse.y\"\n+#line 3239 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 728:\n-#line 3236 \"parse.y\"\n+#line 3241 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 729:\n-#line 3241 \"parse.y\"\n+#line 3246 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 730:\n-#line 3243 \"parse.y\"\n+#line 3248 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 731:\n-#line 3245 \"parse.y\"\n+#line 3250 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 732:\n-#line 3247 \"parse.y\"\n+#line 3252 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 733:\n-#line 3252 \"parse.y\"\n+#line 3257 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 734:\n-#line 3254 \"parse.y\"\n+#line 3259 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 735:\n-#line 3256 \"parse.y\"\n+#line 3261 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 736:\n-#line 3258 \"parse.y\"\n+#line 3263 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 737:\n-#line 3260 \"parse.y\"\n+#line 3265 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 738:\n-#line 3262 \"parse.y\"\n+#line 3267 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 739:\n-#line 3264 \"parse.y\"\n+#line 3269 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 740:\n-#line 3266 \"parse.y\"\n+#line 3271 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 741:\n-#line 3268 \"parse.y\"\n+#line 3273 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 742:\n-#line 3270 \"parse.y\"\n+#line 3275 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 744:\n-#line 3273 \"parse.y\"\n+#line 3278 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 746:\n-#line 3276 \"parse.y\"\n+#line 3281 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 748:\n-#line 3279 \"parse.y\"\n+#line 3284 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 749:\n-#line 3281 \"parse.y\"\n+#line 3286 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 750:\n-#line 3283 \"parse.y\"\n+#line 3288 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 751:\n-#line 3285 \"parse.y\"\n+#line 3290 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 752:\n-#line 3287 \"parse.y\"\n+#line 3292 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 753:\n-#line 3293 \"parse.y\"\n+#line 3298 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 754:\n-#line 3299 \"parse.y\"\n+#line 3304 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 755:\n-#line 3303 \"parse.y\"\n+#line 3308 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 756:\n-#line 3305 \"parse.y\"\n+#line 3310 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 757:\n-#line 3311 \"parse.y\"\n+#line 3316 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 758:\n-#line 3313 \"parse.y\"\n+#line 3318 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 759:\n-#line 3315 \"parse.y\"\n+#line 3320 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 760:\n-#line 3319 \"parse.y\"\n+#line 3324 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 763:\n-#line 3323 \"parse.y\"\n+#line 3328 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 765:\n-#line 3329 \"parse.y\"\n+#line 3334 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 766:\n-#line 3335 \"parse.y\"\n+#line 3340 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 767:\n-#line 3339 \"parse.y\"\n+#line 3344 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7477,41 +7482,41 @@ case 767:\n \t\t;\n     break;}\n case 768:\n-#line 3349 \"parse.y\"\n+#line 3354 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 769:\n-#line 3351 \"parse.y\"\n+#line 3356 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 770:\n-#line 3353 \"parse.y\"\n+#line 3358 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 773:\n-#line 3363 \"parse.y\"\n+#line 3368 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 774:\n-#line 3365 \"parse.y\"\n+#line 3370 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 775:\n-#line 3367 \"parse.y\"\n+#line 3372 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 778:\n-#line 3377 \"parse.y\"\n+#line 3382 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 779:\n-#line 3393 \"parse.y\"\n+#line 3398 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 780:\n-#line 3400 \"parse.y\"\n+#line 3405 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7520,98 +7525,98 @@ case 780:\n \t\t;\n     break;}\n case 781:\n-#line 3407 \"parse.y\"\n+#line 3412 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 782:\n-#line 3409 \"parse.y\"\n+#line 3414 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 783:\n-#line 3411 \"parse.y\"\n+#line 3416 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 784:\n-#line 3416 \"parse.y\"\n+#line 3421 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 786:\n-#line 3419 \"parse.y\"\n+#line 3424 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 787:\n-#line 3428 \"parse.y\"\n+#line 3433 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 788:\n-#line 3431 \"parse.y\"\n+#line 3436 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 789:\n-#line 3436 \"parse.y\"\n+#line 3441 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 791:\n-#line 3439 \"parse.y\"\n+#line 3444 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 792:\n-#line 3446 \"parse.y\"\n+#line 3451 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 795:\n-#line 3453 \"parse.y\"\n+#line 3458 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 796:\n-#line 3458 \"parse.y\"\n+#line 3463 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 797:\n-#line 3463 \"parse.y\"\n+#line 3468 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 798:\n-#line 3465 \"parse.y\"\n+#line 3470 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 799:\n-#line 3476 \"parse.y\"\n+#line 3481 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 801:\n-#line 3481 \"parse.y\"\n+#line 3486 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 802:\n-#line 3489 \"parse.y\"\n+#line 3494 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 803:\n-#line 3491 \"parse.y\"\n+#line 3496 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 804:\n-#line 3494 \"parse.y\"\n+#line 3499 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 805:\n-#line 3496 \"parse.y\"\n+#line 3501 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 806:\n-#line 3499 \"parse.y\"\n+#line 3504 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 807:\n-#line 3501 \"parse.y\"\n+#line 3506 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7623,7 +7628,7 @@ case 807:\n \t\t;\n     break;}\n case 808:\n-#line 3511 \"parse.y\"\n+#line 3516 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7636,98 +7641,98 @@ case 808:\n \t\t;\n     break;}\n case 809:\n-#line 3526 \"parse.y\"\n+#line 3531 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 810:\n-#line 3528 \"parse.y\"\n+#line 3533 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 813:\n-#line 3539 \"parse.y\"\n+#line 3544 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 814:\n-#line 3542 \"parse.y\"\n+#line 3547 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 815:\n-#line 3545 \"parse.y\"\n+#line 3550 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 816:\n-#line 3548 \"parse.y\"\n+#line 3553 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 817:\n-#line 3550 \"parse.y\"\n+#line 3555 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 819:\n-#line 3556 \"parse.y\"\n+#line 3561 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 820:\n-#line 3566 \"parse.y\"\n+#line 3571 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 821:\n-#line 3570 \"parse.y\"\n+#line 3575 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 822:\n-#line 3573 \"parse.y\"\n+#line 3578 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 823:\n-#line 3576 \"parse.y\"\n+#line 3581 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 824:\n-#line 3580 \"parse.y\"\n+#line 3585 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 825:\n-#line 3584 \"parse.y\"\n+#line 3589 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 826:\n-#line 3591 \"parse.y\"\n+#line 3596 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 827:\n-#line 3594 \"parse.y\"\n+#line 3599 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 830:\n-#line 3605 \"parse.y\"\n+#line 3610 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 831:\n-#line 3610 \"parse.y\"\n+#line 3615 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 832:\n-#line 3615 \"parse.y\"\n+#line 3620 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7738,188 +7743,188 @@ case 832:\n \t\t;\n     break;}\n case 833:\n-#line 3627 \"parse.y\"\n+#line 3632 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 834:\n-#line 3629 \"parse.y\"\n+#line 3634 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 835:\n-#line 3631 \"parse.y\"\n+#line 3636 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 836:\n-#line 3636 \"parse.y\"\n+#line 3641 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 838:\n-#line 3642 \"parse.y\"\n+#line 3647 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 839:\n-#line 3650 \"parse.y\"\n+#line 3655 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 840:\n-#line 3652 \"parse.y\"\n+#line 3657 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 841:\n-#line 3654 \"parse.y\"\n+#line 3659 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 842:\n-#line 3656 \"parse.y\"\n+#line 3661 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 843:\n-#line 3663 \"parse.y\"\n+#line 3668 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 844:\n-#line 3668 \"parse.y\"\n+#line 3673 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 845:\n-#line 3670 \"parse.y\"\n+#line 3675 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 846:\n-#line 3672 \"parse.y\"\n+#line 3677 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 847:\n-#line 3674 \"parse.y\"\n+#line 3679 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 848:\n-#line 3676 \"parse.y\"\n+#line 3681 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 849:\n-#line 3678 \"parse.y\"\n+#line 3683 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 850:\n-#line 3680 \"parse.y\"\n+#line 3685 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 851:\n-#line 3682 \"parse.y\"\n+#line 3687 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 852:\n-#line 3684 \"parse.y\"\n+#line 3689 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 853:\n-#line 3686 \"parse.y\"\n+#line 3691 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 854:\n-#line 3688 \"parse.y\"\n+#line 3693 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 855:\n-#line 3690 \"parse.y\"\n+#line 3695 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 856:\n-#line 3692 \"parse.y\"\n+#line 3697 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 857:\n-#line 3694 \"parse.y\"\n+#line 3699 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 858:\n-#line 3696 \"parse.y\"\n+#line 3701 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 859:\n-#line 3698 \"parse.y\"\n+#line 3703 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 860:\n-#line 3700 \"parse.y\"\n+#line 3705 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3702 \"parse.y\"\n+#line 3707 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 862:\n-#line 3704 \"parse.y\"\n+#line 3709 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 863:\n-#line 3706 \"parse.y\"\n+#line 3711 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 864:\n-#line 3708 \"parse.y\"\n+#line 3713 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 865:\n-#line 3710 \"parse.y\"\n+#line 3715 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 866:\n-#line 3712 \"parse.y\"\n+#line 3717 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 867:\n-#line 3714 \"parse.y\"\n+#line 3719 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 868:\n-#line 3716 \"parse.y\"\n+#line 3721 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 869:\n-#line 3718 \"parse.y\"\n+#line 3723 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 870:\n-#line 3720 \"parse.y\"\n+#line 3725 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 871:\n-#line 3722 \"parse.y\"\n+#line 3727 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 872:\n-#line 3724 \"parse.y\"\n+#line 3729 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 873:\n-#line 3726 \"parse.y\"\n+#line 3731 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 874:\n-#line 3728 \"parse.y\"\n+#line 3733 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 875:\n-#line 3730 \"parse.y\"\n+#line 3735 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 876:\n-#line 3732 \"parse.y\"\n+#line 3737 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 877:\n-#line 3735 \"parse.y\"\n+#line 3740 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 878:\n-#line 3737 \"parse.y\"\n+#line 3742 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8120,7 +8125,7 @@ case 878:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3740 \"parse.y\"\n+#line 3745 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "f2a1720bb3a585eb91f00c1525a20fad7af39691", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57cfc5dd861a5807349c2ab5d590183a745a7a32/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57cfc5dd861a5807349c2ab5d590183a745a7a32/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=57cfc5dd861a5807349c2ab5d590183a745a7a32", "patch": "@@ -2242,12 +2242,17 @@ named_class_head:\n \t\t{ \n                   pop_scope (CP_DECL_CONTEXT ($1));\n \t\t  $$ = TREE_TYPE ($1);\n-\t\t  if (TREE_INT_CST_LOW (current_aggr) == union_type \n+\t\t  if (current_aggr == union_type_node\n \t\t      && TREE_CODE ($$) != UNION_TYPE)\n \t\t    cp_pedwarn (\"`union' tag used in declaring `%#T'\", $$);\n \t\t  else if (TREE_CODE ($$) == UNION_TYPE\n-\t\t\t   && TREE_INT_CST_LOW (current_aggr) != union_type)\n+\t\t\t   && current_aggr != union_type_node)\n \t\t    cp_pedwarn (\"non-`union' tag used in declaring `%#T'\", $$);\n+\t\t  else if (TREE_CODE ($$) == RECORD_TYPE)\n+\t\t    /* We might be specializing a template with a different\n+\t\t       class-key; deal.  */\n+\t\t    CLASSTYPE_DECLARED_CLASS ($$) = (current_aggr\n+\t\t\t\t\t\t     == class_type_node);\n \t\t  if ($3)\n \t\t    {\n \t\t      maybe_process_partial_specialization ($$);"}]}