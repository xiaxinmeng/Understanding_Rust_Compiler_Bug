{"sha": "49d508065bdd36fb1a9b6aad9666b1edb5e06474", "node_id": "C_kwDOANBUbNoAKDQ5ZDUwODA2NWJkZDM2ZmIxYTliNmFhZDk2NjZiMWVkYjVlMDY0NzQ", "commit": {"author": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2022-06-27T22:42:44Z"}, "committer": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2022-06-29T18:15:59Z"}, "message": "jit: avoid calloc() poisoning on musl [PR106102]\n\nOn musl <pthread.h> uses calloc() (via <sched.h>). jit/ includes\nit directly and exposes use of poisoned calloc():\n\n    /build/build/./prev-gcc/xg++ ... ../../gcc-13-20220626/gcc/jit/jit-playback.cc\n    make[3]: *** [Makefile:1143: jit/libgccjit.o] Error 1\n    make[3]: *** Waiting for unfinished jobs....\n    In file included from /<<NIX>>/musl-1.2.3-dev/include/pthread.h:30,\n                     from ../../gcc-13-20220626/gcc/jit/jit-playback.cc:44:\n    /<<NIX>>/musl-1.2.3-dev/include/sched.h:84:7: error: attempt to use poisoned \"calloc\"\n       84 | void *calloc(size_t, size_t);\n          |       ^\n    /<<NIX>>/musl-1.2.3-dev/include/sched.h:124:36: error: attempt to use poisoned \"calloc\"\n      124 | #define CPU_ALLOC(n) ((cpu_set_t *)calloc(1,CPU_ALLOC_SIZE(n)))\n          |                                    ^\n\nThe change moves <pthread.h> inclusion to \"system.h\" under new\nINCLUDE_PTHREAD_H guard and uses this mechanism in libgccjit.\n\ngcc/\n\n\tPR c++/106102\n\t* system.h: Introduce INCLUDE_PTHREAD_H macros to include <pthread.h>.\n\ngcc/jit/\n\n\tPR c++/106102\n\t* jit-playback.cc: Include <pthread.h> via \"system.h\" to avoid calloc()\n\tpoisoning.\n\t* jit-recording.cc: Ditto.\n\t* libgccjit.cc: Ditto.", "tree": {"sha": "5053755b20c0931e66abeed4fd92e9dc4320e691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5053755b20c0931e66abeed4fd92e9dc4320e691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49d508065bdd36fb1a9b6aad9666b1edb5e06474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d508065bdd36fb1a9b6aad9666b1edb5e06474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d508065bdd36fb1a9b6aad9666b1edb5e06474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d508065bdd36fb1a9b6aad9666b1edb5e06474/comments", "author": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8f284d3673004dffae714b56ed663467c2a52a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f284d3673004dffae714b56ed663467c2a52a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8f284d3673004dffae714b56ed663467c2a52a7"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "79714132b91aea78acf730a897419563446d1c7b", "filename": "gcc/jit/jit-playback.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fjit%2Fjit-playback.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fjit%2Fjit-playback.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.cc?ref=49d508065bdd36fb1a9b6aad9666b1edb5e06474", "patch": "@@ -19,6 +19,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#define INCLUDE_PTHREAD_H\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"target.h\"\n@@ -41,8 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"stmt.h\"\n \n-#include <pthread.h>\n-\n #include \"jit-playback.h\"\n #include \"jit-result.h\"\n #include \"jit-builtins.h\""}, {"sha": "f78daed2d71a2b3e40d27a74cba18dba8e393472", "filename": "gcc/jit/jit-recording.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fjit%2Fjit-recording.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fjit%2Fjit-recording.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-recording.cc?ref=49d508065bdd36fb1a9b6aad9666b1edb5e06474", "patch": "@@ -19,13 +19,13 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#define INCLUDE_PTHREAD_H\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"pretty-print.h\"\n #include \"toplev.h\"\n \n-#include <pthread.h>\n \n #include \"jit-builtins.h\"\n #include \"jit-recording.h\""}, {"sha": "ca862662777eca87fce62fb2ac83dc9961307af4", "filename": "gcc/jit/libgccjit.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fjit%2Flibgccjit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fjit%2Flibgccjit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Flibgccjit.cc?ref=49d508065bdd36fb1a9b6aad9666b1edb5e06474", "patch": "@@ -19,12 +19,12 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#define INCLUDE_PTHREAD_H\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"timevar.h\"\n #include \"typed-splay-tree.h\"\n #include \"cppbuiltin.h\"\n-#include <pthread.h>\n \n #include \"libgccjit.h\"\n #include \"jit-recording.h\""}, {"sha": "f8d42ff68150574fb71aa619358406b1763be229", "filename": "gcc/system.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d508065bdd36fb1a9b6aad9666b1edb5e06474/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=49d508065bdd36fb1a9b6aad9666b1edb5e06474", "patch": "@@ -753,6 +753,10 @@ extern int vsnprintf (char *, size_t, const char *, va_list);\n #endif\n #endif\n \n+#ifdef INCLUDE_PTHREAD_H\n+#include <pthread.h>\n+#endif\n+\n #ifdef INCLUDE_ISL\n #ifdef HAVE_isl\n #include <isl/options.h>"}]}