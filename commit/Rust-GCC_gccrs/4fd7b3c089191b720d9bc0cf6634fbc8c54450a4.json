{"sha": "4fd7b3c089191b720d9bc0cf6634fbc8c54450a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZkN2IzYzA4OTE5MWI3MjBkOWJjMGNmNjYzNGZiYzhjNTQ0NTBhNA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-05-09T12:21:05Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-05-10T11:08:14Z"}, "message": "Ensure we lower the generic params for impl items\n\nInherit impl items can have generic parameters and must be preserved into\nthe HIR trees in order for the type params to be resolved.\n\nFixes #417", "tree": {"sha": "deefc472327be4e4faa7fc282dc82ccb8d5af66a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deefc472327be4e4faa7fc282dc82ccb8d5af66a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e66d683186ffdcca835bad1a90081fe56be8822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e66d683186ffdcca835bad1a90081fe56be8822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e66d683186ffdcca835bad1a90081fe56be8822"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "2581d68e1c8a8c33419ef82516383f966d7cdaed", "filename": "gcc/rust/hir/rust-ast-lower-implitem.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h?ref=4fd7b3c089191b720d9bc0cf6634fbc8c54450a4", "patch": "@@ -86,7 +86,6 @@ class ASTLowerImplItem : public ASTLoweringBase\n   void visit (AST::Function &function) override\n   {\n     // ignore for now and leave empty\n-    std::vector<std::unique_ptr<HIR::GenericParam> > generic_params;\n     std::vector<HIR::Attribute> outer_attrs;\n     std::vector<std::unique_ptr<HIR::WhereClauseItem> > where_clause_items;\n     HIR::WhereClause where_clause (std::move (where_clause_items));\n@@ -95,6 +94,11 @@ class ASTLowerImplItem : public ASTLoweringBase\n     HIR::Visibility vis = HIR::Visibility::create_public ();\n \n     // need\n+    std::vector<std::unique_ptr<HIR::GenericParam> > generic_params;\n+    if (function.has_generics ())\n+      {\n+\tgeneric_params = lower_generic_params (function.get_generic_params ());\n+      }\n     Identifier function_name = function.get_function_name ();\n     Location locus = function.get_locus ();\n \n@@ -165,7 +169,6 @@ class ASTLowerImplItem : public ASTLoweringBase\n   void visit (AST::Method &method) override\n   {\n     // ignore for now and leave empty\n-    std::vector<std::unique_ptr<HIR::GenericParam> > generic_params;\n     std::vector<HIR::Attribute> outer_attrs;\n     std::vector<std::unique_ptr<HIR::WhereClauseItem> > where_clause_items;\n     HIR::WhereClause where_clause (std::move (where_clause_items));\n@@ -174,6 +177,11 @@ class ASTLowerImplItem : public ASTLoweringBase\n     HIR::Visibility vis = HIR::Visibility::create_public ();\n \n     // need\n+    std::vector<std::unique_ptr<HIR::GenericParam> > generic_params;\n+    if (method.has_generics ())\n+      {\n+\tgeneric_params = lower_generic_params (method.get_generic_params ());\n+      }\n     Identifier method_name = method.get_method_name ();\n     Location locus = method.get_locus ();\n "}, {"sha": "8cee8b00fb20264a085912959e449b396f519da8", "filename": "gcc/testsuite/rust.test/compile/generics28.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics28.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fd7b3c089191b720d9bc0cf6634fbc8c54450a4/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics28.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics28.rs?ref=4fd7b3c089191b720d9bc0cf6634fbc8c54450a4", "patch": "@@ -0,0 +1,18 @@\n+struct Foo<A, B>(A, B);\n+\n+impl Foo<i32, f32> {\n+    fn test<X>(a: X) -> X {\n+        a\n+    }\n+}\n+\n+fn main() {\n+    let a;\n+    a = Foo::test::<_>(123);\n+\n+    let b;\n+    b = Foo::test::<bool>(true);\n+\n+    let c;\n+    c = Foo::test(456f32);\n+}"}]}