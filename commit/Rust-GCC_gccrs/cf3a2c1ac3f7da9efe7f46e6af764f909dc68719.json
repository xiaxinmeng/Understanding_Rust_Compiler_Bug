{"sha": "cf3a2c1ac3f7da9efe7f46e6af764f909dc68719", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YzYTJjMWFjM2Y3ZGE5ZWZlN2Y0NmU2YWY3NjRmOTA5ZGM2ODcxOQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-05-26T11:35:31Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-05-26T11:35:31Z"}, "message": "Don't check ifunc_resolver on error\n\nSince ifunc_resolver isn't set when an error is detected, we should\nlookup ifunc attribute in this case.\n\n\tPR target/85900\n\tPR target/85345\n\t* varasm.c (assemble_alias): Lookup ifunc attribute on error.\n\nFrom-SVN: r260792", "tree": {"sha": "81e9396598acd173c142182d7f93d2d5a0be467b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81e9396598acd173c142182d7f93d2d5a0be467b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "442849834153349b690041dfdfa81cadae20faa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442849834153349b690041dfdfa81cadae20faa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442849834153349b690041dfdfa81cadae20faa6"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "fdfd41ac7851d608c50d04159e0fb106c1e4a2be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf3a2c1ac3f7da9efe7f46e6af764f909dc68719", "patch": "@@ -1,3 +1,9 @@\n+2018-05-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/85900\n+\tPR target/85345\n+\t* varasm.c (assemble_alias): Lookup ifunc attribute on error.\n+\n 2018-05-25  Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/riscv-protos.h (riscv_epilogue_uses): New."}, {"sha": "4d332f502706afb3a8e8f2b25328ce6797164d16", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3a2c1ac3f7da9efe7f46e6af764f909dc68719/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=cf3a2c1ac3f7da9efe7f46e6af764f909dc68719", "patch": "@@ -5917,8 +5917,9 @@ assemble_alias (tree decl, tree target)\n # else\n       if (!DECL_WEAK (decl))\n \t{\n+\t  /* NB: ifunc_resolver isn't set when an error is detected.  */\n \t  if (TREE_CODE (decl) == FUNCTION_DECL\n-\t      && cgraph_node::get (decl)->ifunc_resolver)\n+\t      && lookup_attribute (\"ifunc\", DECL_ATTRIBUTES (decl)))\n \t    error_at (DECL_SOURCE_LOCATION (decl),\n \t\t      \"ifunc is not supported in this configuration\");\n \t  else"}]}