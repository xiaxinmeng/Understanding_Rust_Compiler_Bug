{"sha": "a780db15307e718218f39f753eebe20689fa1e30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4MGRiMTUzMDdlNzE4MjE4ZjM5Zjc1M2VlYmUyMDY4OWZhMWUzMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T09:46:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T09:46:31Z"}, "message": "[multiple changes]\n\n2010-10-18  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_util.adb (Side_Effect_Free): Code clean up.\n\n2010-10-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Is_Primitive_Operator_In_Use): Renamed from\n\tIs_Primitive_Operator. When ending the scope of a use package scope, a\n\tprimitive operator remains in use if the base type has a current use\n\t(type) clause.\n\n2010-10-18  Javier Miranda  <miranda@adacore.com>\n\n\t* einfo.ads (Is_Dynamic_Support): Add missing support for limited\n\tprivate types whose full-view is a task type.\n\t* sem_util.adb (Enclosing_Subprogram): Add missing support for limited\n\tprivate types whose full-view is a task type.\n\t* exp_ch7.adb (Find_Final_List): Minor code cleanup replacing code by\n\tfunction Nearest_Dynamic_Scope which provides the needed functionality.\n\n2010-10-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_prag.adb (Set_Exported): Do not generate error when exporting a\n\tvariable with an address clause in codepeer mode.\n\nFrom-SVN: r165614", "tree": {"sha": "4540c03ab0e98dee1c3ccd724dbec7f679f61108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4540c03ab0e98dee1c3ccd724dbec7f679f61108"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a780db15307e718218f39f753eebe20689fa1e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a780db15307e718218f39f753eebe20689fa1e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a780db15307e718218f39f753eebe20689fa1e30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a780db15307e718218f39f753eebe20689fa1e30/comments", "author": null, "committer": null, "parents": [{"sha": "fda9c731a9a047cdde798207b896784e8233a4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda9c731a9a047cdde798207b896784e8233a4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda9c731a9a047cdde798207b896784e8233a4d8"}], "stats": {"total": 65, "additions": 49, "deletions": 16}, "files": [{"sha": "251ac572e275d69c72f6475a7dfc706b9e2c8ab0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -1,3 +1,28 @@\n+2010-10-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_util.adb (Side_Effect_Free): Code clean up.\n+\n+2010-10-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Is_Primitive_Operator_In_Use): Renamed from\n+\tIs_Primitive_Operator. When ending the scope of a use package scope, a\n+\tprimitive operator remains in use if the base type has a current use\n+\t(type) clause.\n+\n+2010-10-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* einfo.ads (Is_Dynamic_Support): Add missing support for limited\n+\tprivate types whose full-view is a task type.\n+\t* sem_util.adb (Enclosing_Subprogram): Add missing support for limited\n+\tprivate types whose full-view is a task type.\n+\t* exp_ch7.adb (Find_Final_List): Minor code cleanup replacing code by\n+\tfunction Nearest_Dynamic_Scope which provides the needed functionality.\n+\n+2010-10-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Set_Exported): Do not generate error when exporting a\n+\tvariable with an address clause in codepeer mode.\n+\n 2010-10-18  Robert Dewar  <dewar@adacore.com>\n \n \t* g-trasym-vms-ia64.adb: Minor reformatting."}, {"sha": "6782c5b2d95cfb74d5514cdfb939ae4ff42c44a4", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -6130,6 +6130,10 @@ package body Einfo is\n           or else\n         Ekind (Id) = E_Task_Type\n           or else\n+       (Ekind (Id) = E_Limited_Private_Type\n+         and then Present (Full_View (Id))\n+         and then Ekind (Full_View (Id)) = E_Task_Type)\n+          or else\n         Ekind (Id) = E_Entry\n           or else\n         Ekind (Id) = E_Entry_Family"}, {"sha": "27f4b5004a7b645ac45e02e7c8554040c8e999fd", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -1739,11 +1739,7 @@ package body Exp_Ch7 is\n          end if;\n \n       else\n-         if Is_Dynamic_Scope (E) then\n-            S := E;\n-         else\n-            S := Enclosing_Dynamic_Scope (E);\n-         end if;\n+         S := Nearest_Dynamic_Scope (E);\n \n          --  When the finalization chain entity is 'Error', it means that there\n          --  should not be any chain at that level and that the enclosing one"}, {"sha": "77ad7a009fa776124ff83bf8500af6e6190d1174", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -4655,8 +4655,8 @@ package body Exp_Util is\n \n          elsif VM_Target /= No_VM\n             and then not Comes_From_Source (N)\n-            and then Is_Class_Wide_Type (Etype (N))\n             and then Nkind (Parent (N)) = N_Object_Renaming_Declaration\n+            and then Is_Class_Wide_Type (Etype (N))\n          then\n             return True;\n          end if;"}, {"sha": "d45ebda071db6c29875a0f7ab9b9c7f1ca81655a", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -3361,24 +3361,25 @@ package body Sem_Ch8 is\n       Id        : Entity_Id;\n       Elmt      : Elmt_Id;\n \n-      function Is_Primitive_Operator\n+      function Is_Primitive_Operator_In_Use\n         (Op : Entity_Id;\n          F  : Entity_Id) return Boolean;\n       --  Check whether Op is a primitive operator of a use-visible type\n \n-      ---------------------------\n-      -- Is_Primitive_Operator --\n-      ---------------------------\n+      ----------------------------------\n+      -- Is_Primitive_Operator_In_Use --\n+      ----------------------------------\n \n-      function Is_Primitive_Operator\n+      function Is_Primitive_Operator_In_Use\n         (Op : Entity_Id;\n          F  : Entity_Id) return Boolean\n       is\n          T : constant Entity_Id := Etype (F);\n       begin\n-         return In_Use (T)\n+         return (In_Use (T)\n+                  or else Present (Current_Use_Clause (Base_Type (T))))\n            and then Scope (T) = Scope (Op);\n-      end Is_Primitive_Operator;\n+      end Is_Primitive_Operator_In_Use;\n \n    --  Start of processing for End_Use_Package\n \n@@ -3409,11 +3410,12 @@ package body Sem_Ch8 is\n \n                   if Nkind (Id) = N_Defining_Operator_Symbol\n                        and then\n-                         (Is_Primitive_Operator (Id, First_Formal (Id))\n+                         (Is_Primitive_Operator_In_Use\n+                           (Id, First_Formal (Id))\n                             or else\n                           (Present (Next_Formal (First_Formal (Id)))\n                              and then\n-                               Is_Primitive_Operator\n+                               Is_Primitive_Operator_In_Use\n                                  (Id, Next_Formal (First_Formal (Id)))))\n                   then\n                      null;"}, {"sha": "443aa92368f172eef42f28d6f3c8b4bb6932d7d4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -4986,7 +4986,7 @@ package body Sem_Prag is\n             Error_Pragma_Arg\n               (\"cannot export entity& that was previously imported\", Arg);\n \n-         elsif Present (Address_Clause (E)) then\n+         elsif Present (Address_Clause (E)) and then not CodePeer_Mode then\n             Error_Pragma_Arg\n               (\"cannot export entity& that has an address clause\", Arg);\n          end if;"}, {"sha": "461f5099627f058296bc0392d1f52ae8f84c8d1f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780db15307e718218f39f753eebe20689fa1e30/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a780db15307e718218f39f753eebe20689fa1e30", "patch": "@@ -2715,6 +2715,12 @@ package body Sem_Util is\n       elsif Ekind (Dynamic_Scope) = E_Task_Type then\n          return Get_Task_Body_Procedure (Dynamic_Scope);\n \n+      elsif Ekind (Dynamic_Scope) = E_Limited_Private_Type\n+        and then Present (Full_View (Dynamic_Scope))\n+        and then Ekind (Full_View (Dynamic_Scope)) = E_Task_Type\n+      then\n+         return Get_Task_Body_Procedure (Full_View (Dynamic_Scope));\n+\n       --  No body is generated if the protected operation is eliminated\n \n       elsif Convention (Dynamic_Scope) = Convention_Protected"}]}