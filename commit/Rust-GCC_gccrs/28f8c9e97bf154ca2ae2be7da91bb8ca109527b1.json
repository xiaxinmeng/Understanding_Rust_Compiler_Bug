{"sha": "28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmOGM5ZTk3YmYxNTRjYTJhZTJiZTdkYTkxYmI4Y2ExMDk1MjdiMQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-10-08T14:27:22Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-10-08T14:27:22Z"}, "message": "re PR libfortran/26540 ([4.1 only] intrinsics/signal.c warnings)\n\n\tPR libfortran/26540\n\t* intrinsics/signal.c (signal_sub, signal_sub_int): Use intptr_t\n\tif available to cast function pointers to int and back.\n\t* configure.ac: Check for intptr_t.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r117556", "tree": {"sha": "ffb84f961e1bffef9af13aa03299b35be358889b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb84f961e1bffef9af13aa03299b35be358889b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bec93d793735ff33a75a0e77ba96e78dd4b01262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec93d793735ff33a75a0e77ba96e78dd4b01262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec93d793735ff33a75a0e77ba96e78dd4b01262"}], "stats": {"total": 177, "additions": 165, "deletions": 12}, "files": [{"sha": "effc06e48790dca278e4fb7e6b6fafc729a5f196", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "patch": "@@ -1,3 +1,12 @@\n+2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26540\n+\t* intrinsics/signal.c (signal_sub, signal_sub_int): Use intptr_t\n+\tif available to cast function pointers to int and back.\n+\t* configure.ac: Check for intptr_t.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2006-10-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/16580"}, {"sha": "0be4cf94feff4e98e8b2babab4ac2856d5e2646f", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "patch": "@@ -390,6 +390,9 @@\n /* Define to 1 if you have the <ieeefp.h> header file. */\n #undef HAVE_IEEEFP_H\n \n+/* Define to 1 if the system has the type `intptr_t'. */\n+#undef HAVE_INTPTR_T\n+\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n "}, {"sha": "8265f5b3683476e1ed096e51ebff0aea6b2ed7e5", "filename": "libgfortran/configure", "status": "modified", "additions": 127, "deletions": 9, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "patch": "@@ -6898,8 +6898,9 @@ fi\n   break\n done\n if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(lacks uintptr_t)\"\n+  acx_cv_header_stdint_kind=\"(lacks uintmax_t)\"\n   for i in stdint.h $inttype_headers; do\n+    unset ac_cv_type_uintptr_t\n     unset ac_cv_type_uint32_t\n     unset ac_cv_type_uint64_t\n     echo $ECHO_N \"looking for an incomplete stdint.h in $i, $ECHO_C\" >&6\n@@ -7025,11 +7026,65 @@ rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n echo \"$as_me:$LINENO: result: $ac_cv_type_uint64_t\" >&5\n echo \"${ECHO_T}$ac_cv_type_uint64_t\" >&6\n-if test $ac_cv_type_uint64_t = yes; then\n-  :\n+\n+    echo \"$as_me:$LINENO: checking for uintptr_t\" >&5\n+echo $ECHO_N \"checking for uintptr_t... $ECHO_C\" >&6\n+if test \"${ac_cv_type_uintptr_t+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  acx_cv_header_stdint_kind=\"(lacks uintptr_t and uint64_t)\"\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+#include <$i>\n+\n+int\n+main ()\n+{\n+if ((uintptr_t *) 0)\n+  return 0;\n+if (sizeof (uintptr_t))\n+  return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_type_uintptr_t=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_type_uintptr_t=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n+echo \"$as_me:$LINENO: result: $ac_cv_type_uintptr_t\" >&5\n+echo \"${ECHO_T}$ac_cv_type_uintptr_t\" >&6\n \n     break\n   done\n@@ -7162,11 +7217,6 @@ rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n echo \"$as_me:$LINENO: result: $ac_cv_type_u_int64_t\" >&5\n echo \"${ECHO_T}$ac_cv_type_u_int64_t\" >&6\n-if test $ac_cv_type_u_int64_t = yes; then\n-  :\n-else\n-  acx_cv_header_stdint_kind=\"(u_intXX_t style, lacks u_int64_t)\"\n-fi\n \n     break\n   done\n@@ -10037,6 +10087,7 @@ fi\n done\n \n \n+\n for ac_func in wait setmode\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -10144,6 +10195,73 @@ fi\n done\n \n \n+# Check for types\n+echo \"$as_me:$LINENO: checking for intptr_t\" >&5\n+echo $ECHO_N \"checking for intptr_t... $ECHO_C\" >&6\n+if test \"${ac_cv_type_intptr_t+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+if ((intptr_t *) 0)\n+  return 0;\n+if (sizeof (intptr_t))\n+  return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_type_intptr_t=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_type_intptr_t=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_type_intptr_t\" >&5\n+echo \"${ECHO_T}$ac_cv_type_intptr_t\" >&6\n+if test $ac_cv_type_intptr_t = yes; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_INTPTR_T 1\n+_ACEOF\n+\n+\n+fi\n+\n+\n # Check libc for getgid, getpid, getuid\n echo \"$as_me:$LINENO: checking for getgid in -lc\" >&5\n echo $ECHO_N \"checking for getgid in -lc... $ECHO_C\" >&6"}, {"sha": "abdf37a65b138f59e78d2806c28ef3df19066ed3", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "patch": "@@ -174,6 +174,9 @@ AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n AC_CHECK_FUNCS(wait setmode)\n \n+# Check for types\n+AC_CHECK_TYPES([intptr_t])\n+\n # Check libc for getgid, getpid, getuid\n AC_CHECK_LIB([c],[getgid],[AC_DEFINE([HAVE_GETGID],[1],[libc includes getgid])])\n AC_CHECK_LIB([c],[getpid],[AC_DEFINE([HAVE_GETPID],[1],[libc includes getpid])])"}, {"sha": "e912c90780eb7729297ad468f7f9df360b69aefa", "filename": "libgfortran/intrinsics/signal.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fintrinsics%2Fsignal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f8c9e97bf154ca2ae2be7da91bb8ca109527b1/libgfortran%2Fintrinsics%2Fsignal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsignal.c?ref=28f8c9e97bf154ca2ae2be7da91bb8ca109527b1", "patch": "@@ -38,8 +38,18 @@ Boston, MA 02110-1301, USA.  */\n #include <signal.h>\n #endif\n \n+#ifdef HAVE_INTTYPES_H\n+#include <inttypes.h>\n+#endif\n+\n #include <errno.h>\n \n+#ifdef HAVE_INTPTR_T\n+# define INTPTR_T intptr_t\n+#else\n+# define INTPTR_T int\n+#endif\n+\n /* SIGNAL subroutine with PROCEDURE as handler  */\n extern void signal_sub (int *, void (*)(int), int *);\n iexport_proto(signal_sub);\n@@ -48,8 +58,13 @@ void\n signal_sub (int *number, void (*handler)(int), int *status)\n {\n #ifdef HAVE_SIGNAL\n+  INTPTR_T ret;\n+\n   if (status != NULL)\n-    *status = (int) signal (*number, handler);\n+    {\n+      ret = (INTPTR_T) signal (*number, handler);\n+      *status = (int) ret;\n+    }\n   else\n     signal (*number, handler);\n #else\n@@ -69,10 +84,15 @@ void\n signal_sub_int (int *number, int *handler, int *status)\n {\n #ifdef HAVE_SIGNAL\n+  INTPTR_T ptr = *handler, ret;\n+\n   if (status != NULL)\n-    *status = (int) signal (*number, (void (*)(int)) *handler);\n+    {\n+      ret = (INTPTR_T) signal (*number, (void (*)(int)) ptr);\n+      *status = (int) ret;\n+    }\n   else\n-    signal (*number, (void (*)(int)) *handler);\n+    signal (*number, (void (*)(int)) ptr);\n #else\n   errno = ENOSYS;\n   if (status != NULL)"}]}