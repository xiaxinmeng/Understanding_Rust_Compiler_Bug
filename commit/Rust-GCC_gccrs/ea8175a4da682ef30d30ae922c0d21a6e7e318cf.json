{"sha": "ea8175a4da682ef30d30ae922c0d21a6e7e318cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4MTc1YTRkYTY4MmVmMzBkMzBhZTkyMmMwZDIxYTZlN2UzMThjZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-22T20:17:00Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-22T20:17:00Z"}, "message": "regcprop.c: Use rtx_insn\n\ngcc/\n\t* regcprop.c (struct queued_debug_insn_change): Strengthen field\n\t\"insn\" from rtx to rtx_insn *.\n\t(replace_oldest_value_reg): Likewise for param \"insn\".\n\t(replace_oldest_value_addr): Likewise.\n\t(replace_oldest_value_mem): Likewise.\n\t(apply_debug_insn_changes): Likewise for local \"last_insn\".\n\t(copyprop_hardreg_forward_1): Likewise for local \"insn\".\n\nFrom-SVN: r214366", "tree": {"sha": "5e27ea13acb446dd071eabc8286a88bcfc750007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e27ea13acb446dd071eabc8286a88bcfc750007"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8175a4da682ef30d30ae922c0d21a6e7e318cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8175a4da682ef30d30ae922c0d21a6e7e318cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8175a4da682ef30d30ae922c0d21a6e7e318cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8175a4da682ef30d30ae922c0d21a6e7e318cf/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8aeaba0c38b9e3bb986cb7a3b31b624811273be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8aeaba0c38b9e3bb986cb7a3b31b624811273be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8aeaba0c38b9e3bb986cb7a3b31b624811273be"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "6aeb055b05211a8e61df2dce1151d028459bc938", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8175a4da682ef30d30ae922c0d21a6e7e318cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8175a4da682ef30d30ae922c0d21a6e7e318cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea8175a4da682ef30d30ae922c0d21a6e7e318cf", "patch": "@@ -1,3 +1,13 @@\n+2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* regcprop.c (struct queued_debug_insn_change): Strengthen field\n+\t\"insn\" from rtx to rtx_insn *.\n+\t(replace_oldest_value_reg): Likewise for param \"insn\".\n+\t(replace_oldest_value_addr): Likewise.\n+\t(replace_oldest_value_mem): Likewise.\n+\t(apply_debug_insn_changes): Likewise for local \"last_insn\".\n+\t(copyprop_hardreg_forward_1): Likewise for local \"insn\".\n+\n 2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* reg-stack.c (next_flags_user): Strengthen return type and param"}, {"sha": "efc05ace2341e4859f8e5551ece22fcae9f7a344", "filename": "gcc/regcprop.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8175a4da682ef30d30ae922c0d21a6e7e318cf/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8175a4da682ef30d30ae922c0d21a6e7e318cf/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=ea8175a4da682ef30d30ae922c0d21a6e7e318cf", "patch": "@@ -50,7 +50,7 @@\n struct queued_debug_insn_change\n {\n   struct queued_debug_insn_change *next;\n-  rtx insn;\n+  rtx_insn *insn;\n   rtx *loc;\n   rtx new_rtx;\n };\n@@ -93,12 +93,12 @@ static bool mode_change_ok (enum machine_mode, enum machine_mode,\n static rtx maybe_mode_change (enum machine_mode, enum machine_mode,\n \t\t\t      enum machine_mode, unsigned int, unsigned int);\n static rtx find_oldest_value_reg (enum reg_class, rtx, struct value_data *);\n-static bool replace_oldest_value_reg (rtx *, enum reg_class, rtx,\n+static bool replace_oldest_value_reg (rtx *, enum reg_class, rtx_insn *,\n \t\t\t\t      struct value_data *);\n static bool replace_oldest_value_addr (rtx *, enum reg_class,\n-\t\t\t\t       enum machine_mode, addr_space_t, rtx,\n-\t\t\t\t       struct value_data *);\n-static bool replace_oldest_value_mem (rtx, rtx, struct value_data *);\n+\t\t\t\t       enum machine_mode, addr_space_t,\n+\t\t\t\t       rtx_insn *, struct value_data *);\n+static bool replace_oldest_value_mem (rtx, rtx_insn *, struct value_data *);\n static bool copyprop_hardreg_forward_1 (basic_block, struct value_data *);\n extern void debug_value_data (struct value_data *);\n #ifdef ENABLE_CHECKING\n@@ -482,7 +482,7 @@ find_oldest_value_reg (enum reg_class cl, rtx reg, struct value_data *vd)\n    in register class CL.  Return true if successfully replaced.  */\n \n static bool\n-replace_oldest_value_reg (rtx *loc, enum reg_class cl, rtx insn,\n+replace_oldest_value_reg (rtx *loc, enum reg_class cl, rtx_insn *insn,\n \t\t\t  struct value_data *vd)\n {\n   rtx new_rtx = find_oldest_value_reg (cl, *loc, vd);\n@@ -523,7 +523,7 @@ replace_oldest_value_reg (rtx *loc, enum reg_class cl, rtx insn,\n static bool\n replace_oldest_value_addr (rtx *loc, enum reg_class cl,\n \t\t\t   enum machine_mode mode, addr_space_t as,\n-\t\t\t   rtx insn, struct value_data *vd)\n+\t\t\t   rtx_insn *insn, struct value_data *vd)\n {\n   rtx x = *loc;\n   RTX_CODE code = GET_CODE (x);\n@@ -669,7 +669,7 @@ replace_oldest_value_addr (rtx *loc, enum reg_class cl,\n /* Similar to replace_oldest_value_reg, but X contains a memory.  */\n \n static bool\n-replace_oldest_value_mem (rtx x, rtx insn, struct value_data *vd)\n+replace_oldest_value_mem (rtx x, rtx_insn *insn, struct value_data *vd)\n {\n   enum reg_class cl;\n \n@@ -690,7 +690,7 @@ static void\n apply_debug_insn_changes (struct value_data *vd, unsigned int regno)\n {\n   struct queued_debug_insn_change *change;\n-  rtx last_insn = vd->e[regno].debug_insn_changes->insn;\n+  rtx_insn *last_insn = vd->e[regno].debug_insn_changes->insn;\n \n   for (change = vd->e[regno].debug_insn_changes;\n        change;\n@@ -741,7 +741,7 @@ static bool\n copyprop_hardreg_forward_1 (basic_block bb, struct value_data *vd)\n {\n   bool anything_changed = false;\n-  rtx insn;\n+  rtx_insn *insn;\n \n   for (insn = BB_HEAD (bb); ; insn = NEXT_INSN (insn))\n     {"}]}