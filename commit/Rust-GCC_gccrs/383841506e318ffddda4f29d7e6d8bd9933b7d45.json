{"sha": "383841506e318ffddda4f29d7e6d8bd9933b7d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgzODQxNTA2ZTMxOGZmZGRkYTRmMjlkN2U2ZDhiZDk5MzNiN2Q0NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-30T15:01:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-30T15:01:27Z"}, "message": "re PR inline-asm/50571 (Undesirable folding in \"m\" constrained asm operands)\n\n\tPR inline-asm/50571\n\t* gimple-fold.c (fold_stmt_1) <case GIMPLE_ASM>: If\n\tinput constraints allow mem and not reg, pass true instead of\n\tfalse as second argument to maybe_fold_reference.\n\n\t* gcc.dg/pr50571.c: New test.\n\nFrom-SVN: r179389", "tree": {"sha": "0dc48dd18357dd5c7e31ead2094f2684dcdd9cf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dc48dd18357dd5c7e31ead2094f2684dcdd9cf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/383841506e318ffddda4f29d7e6d8bd9933b7d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383841506e318ffddda4f29d7e6d8bd9933b7d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/383841506e318ffddda4f29d7e6d8bd9933b7d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383841506e318ffddda4f29d7e6d8bd9933b7d45/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ccb5dbf93d900812222d4383760d6c632bf2382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ccb5dbf93d900812222d4383760d6c632bf2382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ccb5dbf93d900812222d4383760d6c632bf2382"}], "stats": {"total": 80, "additions": 58, "deletions": 22}, "files": [{"sha": "c0159e80d1f93fb4ceb00f2bb7a62277cf578839", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=383841506e318ffddda4f29d7e6d8bd9933b7d45", "patch": "@@ -1,5 +1,10 @@\n 2011-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/50571\n+\t* gimple-fold.c (fold_stmt_1) <case GIMPLE_ASM>: If\n+\tinput constraints allow mem and not reg, pass true instead of\n+\tfalse as second argument to maybe_fold_reference.\n+\n \tPR tree-optimization/46309\n \t* fold-const.c (make_range, merge_ranges): Remove prototypes.\n \t(make_range_step): New function."}, {"sha": "f8e5035e29702fba3e858632a5da1efc1ec10aa0", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 39, "deletions": 22, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=383841506e318ffddda4f29d7e6d8bd9933b7d45", "patch": "@@ -1201,28 +1201,45 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace)\n \n     case GIMPLE_ASM:\n       /* Fold *& in asm operands.  */\n-      for (i = 0; i < gimple_asm_noutputs (stmt); ++i)\n-\t{\n-\t  tree link = gimple_asm_output_op (stmt, i);\n-\t  tree op = TREE_VALUE (link);\n-\t  if (REFERENCE_CLASS_P (op)\n-\t      && (op = maybe_fold_reference (op, true)) != NULL_TREE)\n-\t    {\n-\t      TREE_VALUE (link) = op;\n-\t      changed = true;\n-\t    }\n-\t}\n-      for (i = 0; i < gimple_asm_ninputs (stmt); ++i)\n-\t{\n-\t  tree link = gimple_asm_input_op (stmt, i);\n-\t  tree op = TREE_VALUE (link);\n-\t  if (REFERENCE_CLASS_P (op)\n-\t      && (op = maybe_fold_reference (op, false)) != NULL_TREE)\n-\t    {\n-\t      TREE_VALUE (link) = op;\n-\t      changed = true;\n-\t    }\n-\t}\n+      {\n+\tsize_t noutputs;\n+\tconst char **oconstraints;\n+\tconst char *constraint;\n+\tbool allows_mem, allows_reg;\n+\n+\tnoutputs = gimple_asm_noutputs (stmt);\n+\toconstraints = XALLOCAVEC (const char *, noutputs);\n+\n+\tfor (i = 0; i < gimple_asm_noutputs (stmt); ++i)\n+\t  {\n+\t    tree link = gimple_asm_output_op (stmt, i);\n+\t    tree op = TREE_VALUE (link);\n+\t    oconstraints[i]\n+\t      = TREE_STRING_POINTER (TREE_VALUE (TREE_PURPOSE (link)));\n+\t    if (REFERENCE_CLASS_P (op)\n+\t\t&& (op = maybe_fold_reference (op, true)) != NULL_TREE)\n+\t      {\n+\t\tTREE_VALUE (link) = op;\n+\t\tchanged = true;\n+\t      }\n+\t  }\n+\tfor (i = 0; i < gimple_asm_ninputs (stmt); ++i)\n+\t  {\n+\t    tree link = gimple_asm_input_op (stmt, i);\n+\t    tree op = TREE_VALUE (link);\n+\t    constraint\n+\t      = TREE_STRING_POINTER (TREE_VALUE (TREE_PURPOSE (link)));\n+\t    parse_input_constraint (&constraint, 0, 0, noutputs, 0,\n+\t\t\t\t    oconstraints, &allows_mem, &allows_reg);\n+\t    if (REFERENCE_CLASS_P (op)\n+\t\t&& (op = maybe_fold_reference (op, !allows_reg && allows_mem))\n+\t\t   != NULL_TREE)\n+\t      {\n+\t\tTREE_VALUE (link) = op;\n+\t\tchanged = true;\n+\t      }\n+\t  }\n+      }\n       break;\n \n     case GIMPLE_DEBUG:"}, {"sha": "7005e74231142a42cadea85411fa3ed0909782e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=383841506e318ffddda4f29d7e6d8bd9933b7d45", "patch": "@@ -1,5 +1,8 @@\n 2011-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/50571\n+\t* gcc.dg/pr50571.c: New test.\n+\n \tPR tree-optimization/46309\n \t* gcc.dg/pr46309.c: New test.\n "}, {"sha": "3fb4310d6843204ca2116b9df3f0524fcf1d5abf", "filename": "gcc/testsuite/gcc.dg/pr50571.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50571.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383841506e318ffddda4f29d7e6d8bd9933b7d45/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50571.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50571.c?ref=383841506e318ffddda4f29d7e6d8bd9933b7d45", "patch": "@@ -0,0 +1,11 @@\n+/* PR inline-asm/50571 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+static const int var[4] = { 1, 2, 3, 4 };\n+\n+void\n+foo (void)\n+{\n+  __asm volatile (\"\" : : \"m\" (*(int *) var));\n+}"}]}