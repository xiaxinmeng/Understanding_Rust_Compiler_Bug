{"sha": "85c73d636947efcb3555ce521c6064717a559615", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVjNzNkNjM2OTQ3ZWZjYjM1NTVjZTUyMWM2MDY0NzE3YTU1OTYxNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-22T13:22:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-22T13:22:58Z"}, "message": "[Ada] Spurious visibility error on aspect in generic unit\n\nThis patch fixes a spurious visiblity error on an instantiation of a generic\npackage that contains a type declaration with an aspect specification for\nan aspect that must be delayed (i.e. an aspect whose value may be specified\nat a later point).\n\nThe package g.ads must compile quietly:\n\n----\nwith S;\ngeneric\npackage G\nis\n   type Buffer_Type is record\n      Data       : Integer;\n   end record;\n\n   package Buffer is new S (Buffer_Type => Buffer_Type);\nend G;\n----\ngeneric\n   type Buffer_Type is private;\npackage S\nis\n   Page_Size : constant := 4096;\n\n   type Reader_Type is limited record\n      Data   : Buffer_Type;\n   end record\n     with\n        Alignment => Page_Size; -- Using a constant does not work\n--      Alignment => 4096;      -- Using a number works\n\n-- for Reader_Type'Alignment use Page_Size; -- so does an attribute.\n   pragma Compile_Time_Error (Reader_Type'Size /= 12345, \"Ooops\");\n   -- Note: We set 'Alignment and check for 'Size.\nend S;\n\n2018-05-22  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb (Freeze_Entity): When analyzing delayed aspects of an\n\tentity E within a generic unit, indicate that there are no remaining\n\tdelayed aspects after invoking Analyze_Aspects_At_Freeze_Point. The\n\tentity E is not frozen yet but the aspects should not be reanalyzed at\n\tthe freeze point, which may be outside of the generic and may not have\n\tthe proper visibility.\n\nFrom-SVN: r260516", "tree": {"sha": "0474ec7b7792640047568d0ca5b55c8a0881cad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0474ec7b7792640047568d0ca5b55c8a0881cad5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85c73d636947efcb3555ce521c6064717a559615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c73d636947efcb3555ce521c6064717a559615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c73d636947efcb3555ce521c6064717a559615", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c73d636947efcb3555ce521c6064717a559615/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "714835398ed533b90d9bae265c176ac9bcdf5af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714835398ed533b90d9bae265c176ac9bcdf5af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714835398ed533b90d9bae265c176ac9bcdf5af3"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "378ccad0a6c6933c0b29c55d0af91d01f4635e62", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c73d636947efcb3555ce521c6064717a559615/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c73d636947efcb3555ce521c6064717a559615/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=85c73d636947efcb3555ce521c6064717a559615", "patch": "@@ -1,3 +1,12 @@\n+2018-05-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): When analyzing delayed aspects of an\n+\tentity E within a generic unit, indicate that there are no remaining\n+\tdelayed aspects after invoking Analyze_Aspects_At_Freeze_Point. The\n+\tentity E is not frozen yet but the aspects should not be reanalyzed at\n+\tthe freeze point, which may be outside of the generic and may not have\n+\tthe proper visibility.\n+\n 2018-05-22  Bob Duff  <duff@adacore.com>\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst: Add documentation for"}, {"sha": "66f9dcca62cecaa066bef46980a14ee02dde279a", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c73d636947efcb3555ce521c6064717a559615/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c73d636947efcb3555ce521c6064717a559615/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=85c73d636947efcb3555ce521c6064717a559615", "patch": "@@ -5167,11 +5167,14 @@ package body Freeze is\n       --  be frozen in the proper scope after the current generic is analyzed.\n       --  However, aspects must be analyzed because they may be queried later\n       --  within the generic itself, and the corresponding pragma or attribute\n-      --  definition has not been analyzed yet.\n+      --  definition has not been analyzed yet. After this, indicate that the\n+      --  entity has no further delayed aspects, to prevent a later aspect\n+      --  analysis out of the scope of the generic.\n \n       elsif Inside_A_Generic and then External_Ref_In_Generic (Test_E) then\n          if Has_Delayed_Aspects (E) then\n             Analyze_Aspects_At_Freeze_Point (E);\n+            Set_Has_Delayed_Aspects (E, False);\n          end if;\n \n          Result := No_List;"}]}