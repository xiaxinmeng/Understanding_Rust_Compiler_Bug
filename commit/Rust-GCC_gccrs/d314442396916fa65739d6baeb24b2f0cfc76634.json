{"sha": "d314442396916fa65739d6baeb24b2f0cfc76634", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxNDQ0MjM5NjkxNmZhNjU3MzlkNmJhZWIyNGIyZjBjZmM3NjYzNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-06-01T07:13:51Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-06-01T07:13:51Z"}, "message": "invoke.texi (-static-libgcc): Explicitly mention non-GNU linkers.\n\n\t* doc/invoke.texi (-static-libgcc): Explicitly mention\n\tnon-GNU linkers.\n\nFrom-SVN: r82529", "tree": {"sha": "fd5cbf49d0e138a28501d02e9163b10e261126a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd5cbf49d0e138a28501d02e9163b10e261126a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d314442396916fa65739d6baeb24b2f0cfc76634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d314442396916fa65739d6baeb24b2f0cfc76634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d314442396916fa65739d6baeb24b2f0cfc76634", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d314442396916fa65739d6baeb24b2f0cfc76634/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76f824a4a0a6427b8c29ce6253b2b79c4ad3e519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f824a4a0a6427b8c29ce6253b2b79c4ad3e519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f824a4a0a6427b8c29ce6253b2b79c4ad3e519"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "8d3b14975773343dbb5aec6b670d10e232432876", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d314442396916fa65739d6baeb24b2f0cfc76634/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d314442396916fa65739d6baeb24b2f0cfc76634/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d314442396916fa65739d6baeb24b2f0cfc76634", "patch": "@@ -1,3 +1,8 @@\n+2004-06-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* doc/invoke.texi (-static-libgcc): Explicitly mention\n+\tnon-GNU linkers.\n+\n 2004-06-01  Bernardo Innocenti  <bernie@develer.com>\n \n \tPR target/12968"}, {"sha": "70656da195082dc36f6189dfe03983de1cffcf6b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d314442396916fa65739d6baeb24b2f0cfc76634/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d314442396916fa65739d6baeb24b2f0cfc76634/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d314442396916fa65739d6baeb24b2f0cfc76634", "patch": "@@ -5488,14 +5488,14 @@ this is the right thing to do.\n \n If, instead, you use the GCC driver to create shared libraries, you may\n find that they will not always be linked with the shared @file{libgcc}.\n-If GCC finds, at its configuration time, that you have a GNU linker that\n-does not support option @option{--eh-frame-hdr}, it will link the shared\n-version of @file{libgcc} into shared libraries by default.  Otherwise,\n-it will take advantage of the linker and optimize away the linking with\n-the shared version of @file{libgcc}, linking with the static version of\n-libgcc by default.  This allows exceptions to propagate through such\n-shared libraries, without incurring relocation costs at library load\n-time.\n+If GCC finds, at its configuration time, that you have a non-GNU linker\n+or a GNU linker that does not support option @option{--eh-frame-hdr},\n+it will link the shared version of @file{libgcc} into shared libraries\n+by default.  Otherwise, it will take advantage of the linker and optimize\n+away the linking with the shared version of @file{libgcc}, linking with\n+the static version of libgcc by default.  This allows exceptions to\n+propagate through such shared libraries, without incurring relocation\n+costs at library load time.\n \n However, if a library or main executable is supposed to throw or catch\n exceptions, you must link it using the G++ or GCJ driver, as appropriate"}]}