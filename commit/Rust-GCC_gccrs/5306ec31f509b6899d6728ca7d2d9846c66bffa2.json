{"sha": "5306ec31f509b6899d6728ca7d2d9846c66bffa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMwNmVjMzFmNTA5YjY4OTlkNjcyOGNhN2QyZDk4NDZjNjZiZmZhMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-07-25T23:04:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-07-25T23:04:33Z"}, "message": "re PR middle-end/22626 (ICE with optimization turned on while trying to exand complex multiply)\n\n        PR 22626\n        * tree-complex.c (gate_no_optimization): True if errors.\n        * Makefile.in (tree-complex.o): Update dependencies.\n\nFrom-SVN: r102373", "tree": {"sha": "a191cde8108b1af39f728fe3015def9fc06647b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a191cde8108b1af39f728fe3015def9fc06647b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5306ec31f509b6899d6728ca7d2d9846c66bffa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5306ec31f509b6899d6728ca7d2d9846c66bffa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5306ec31f509b6899d6728ca7d2d9846c66bffa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5306ec31f509b6899d6728ca7d2d9846c66bffa2/comments", "author": null, "committer": null, "parents": [{"sha": "7f50ddeef61d29b1bbf09aa2862390d81f2f6c37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f50ddeef61d29b1bbf09aa2862390d81f2f6c37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f50ddeef61d29b1bbf09aa2862390d81f2f6c37"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "587ebf18d204e1a9969183d23781d6d6790b6097", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5306ec31f509b6899d6728ca7d2d9846c66bffa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5306ec31f509b6899d6728ca7d2d9846c66bffa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5306ec31f509b6899d6728ca7d2d9846c66bffa2", "patch": "@@ -1,3 +1,9 @@\n+2005-07-25  Richard Henderson  <rth@redhat.com>\n+\n+\tPR 22626\n+\t* tree-complex.c (gate_no_optimization): True if errors.\n+\t* Makefile.in (tree-complex.o): Update dependencies.\n+\n 2005-07-25  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/frv/predicates.md (integer_register_operand): Use"}, {"sha": "f849aab9caea94928129c954f28d008678346476", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5306ec31f509b6899d6728ca7d2d9846c66bffa2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5306ec31f509b6899d6728ca7d2d9846c66bffa2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5306ec31f509b6899d6728ca7d2d9846c66bffa2", "patch": "@@ -2217,11 +2217,9 @@ tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_GIMPLE_H) \\\n     langhooks.h tree-pass.h $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n     bitmap.h $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(PARAMS_H) $(TARGET_H)\n-tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(TM_H) $(TREE_FLOW_H) $(TREE_GIMPLE_H) tree-iterator.h tree-pass.h \\\n-    $(FLAGS_H) $(OPTABS_H) $(RTL_H) $(MACHMODE_H) $(EXPR_H) \\\n-    langhooks.h $(FLAGS_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n-    coretypes.h insn-codes.h\n+tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n+    $(TM_H) $(RTL_H) real.h $(FLAGS_H) $(TREE_FLOW_H) $(TREE_GIMPLE_H) \\\n+    tree-iterator.h tree-pass.h tree-ssa-propagate.h $(DIAGNOSTIC_H)\n tree-vect-generic.o : tree-vect-generic.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(TM_H) $(TREE_FLOW_H) $(TREE_GIMPLE_H) tree-iterator.h tree-pass.h \\\n     $(FLAGS_H) $(OPTABS_H) $(RTL_H) $(MACHMODE_H) $(EXPR_H) \\"}, {"sha": "b72c37e7e78930f7afe4e22ad8ed0ce1e067c25b", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5306ec31f509b6899d6728ca7d2d9846c66bffa2/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5306ec31f509b6899d6728ca7d2d9846c66bffa2/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=5306ec31f509b6899d6728ca7d2d9846c66bffa2", "patch": "@@ -31,6 +31,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"tree-iterator.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n+#include \"diagnostic.h\"\n \n \n /* For each complex ssa name, a lattice value.  We're interested in finding\n@@ -1566,7 +1567,9 @@ tree_lower_complex_O0 (void)\n static bool\n gate_no_optimization (void)\n {\n-  return optimize == 0;\n+  /* With errors, normal optimization passes are not run.  If we don't\n+     lower complex operations at all, rtl expansion will abort.  */\n+  return optimize == 0 || sorrycount || errorcount;\n }\n \n struct tree_opt_pass pass_lower_complex_O0 = "}]}