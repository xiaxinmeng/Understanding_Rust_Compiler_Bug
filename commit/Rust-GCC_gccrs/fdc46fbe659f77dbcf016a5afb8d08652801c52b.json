{"sha": "fdc46fbe659f77dbcf016a5afb8d08652801c52b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjNDZmYmU2NTlmNzdkYmNmMDE2YTVhZmI4ZDA4NjUyODAxYzUyYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-23T02:18:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-23T02:18:53Z"}, "message": "expr.c (pending_chain): Move up.\n\n\t* expr.c (pending_chain): Move up.\n\t(save_expr_status): Do save pending_chain.\n\t(restore_expr_status): And restore it.\n\t* function.h (struct function): Add pending_chain.\n\nFrom-SVN: r23241", "tree": {"sha": "83545746e3ad14e4a0e2b45f443e0abcddba6ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83545746e3ad14e4a0e2b45f443e0abcddba6ee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdc46fbe659f77dbcf016a5afb8d08652801c52b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc46fbe659f77dbcf016a5afb8d08652801c52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc46fbe659f77dbcf016a5afb8d08652801c52b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc46fbe659f77dbcf016a5afb8d08652801c52b/comments", "author": null, "committer": null, "parents": [{"sha": "5581627cef0a73759464baf4a13c6158da3622af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5581627cef0a73759464baf4a13c6158da3622af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5581627cef0a73759464baf4a13c6158da3622af"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "5f6faa2ddbd40e564c2499d1fd1745873cf36fd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc46fbe659f77dbcf016a5afb8d08652801c52b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc46fbe659f77dbcf016a5afb8d08652801c52b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdc46fbe659f77dbcf016a5afb8d08652801c52b", "patch": "@@ -1,3 +1,10 @@\n+Fri Oct 23 00:56:11 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* expr.c (pending_chain): Move up.\n+\t(save_expr_status): Do save pending_chain.\n+\t(restore_expr_status): And restore it.\n+\t* function.h (struct function): Add pending_chain.\n+\n 1998-10-23 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* reorg.c (relax_delay_slots): Fixed test for mostly_true_jump. The"}, {"sha": "37581ec39ce81e3f214e231360e0e56fbd3e44f8", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc46fbe659f77dbcf016a5afb8d08652801c52b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc46fbe659f77dbcf016a5afb8d08652801c52b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=fdc46fbe659f77dbcf016a5afb8d08652801c52b", "patch": "@@ -114,6 +114,9 @@ static int can_handle_constant_p;\n    infinite recursion.  */\n static int in_check_memory_usage;\n \n+/* Postincrements that still need to be expanded.  */\n+static rtx pending_chain;\n+\n /* This structure is used by move_by_pieces to describe the move to\n    be performed.  */\n struct move_by_pieces\n@@ -342,15 +345,14 @@ void\n save_expr_status (p)\n      struct function *p;\n {\n-  /* Instead of saving the postincrement queue, empty it.  */\n-  emit_queue ();\n-\n+  p->pending_chain = pending_chain;\n   p->pending_stack_adjust = pending_stack_adjust;\n   p->inhibit_defer_pop = inhibit_defer_pop;\n   p->saveregs_value = saveregs_value;\n   p->apply_args_value = apply_args_value;\n   p->forced_labels = forced_labels;\n \n+  pending_chain = NULL_RTX;\n   pending_stack_adjust = 0;\n   inhibit_defer_pop = 0;\n   saveregs_value = 0;\n@@ -365,6 +367,7 @@ void\n restore_expr_status (p)\n      struct function *p;\n {\n+  pending_chain = p->pending_chain;\n   pending_stack_adjust = p->pending_stack_adjust;\n   inhibit_defer_pop = p->inhibit_defer_pop;\n   saveregs_value = p->saveregs_value;\n@@ -375,8 +378,6 @@ restore_expr_status (p)\n /* Manage the queue of increment instructions to be output\n    for POSTINCREMENT_EXPR expressions, etc.  */\n \n-static rtx pending_chain;\n-\n /* Queue up to increment (or change) VAR later.  BODY says how:\n    BODY should be the same thing you would pass to emit_insn\n    to increment right away.  It will go to emit_insn later on."}, {"sha": "d5e6cd06abc53c1bd45be46265d123aa9a1f1a69", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc46fbe659f77dbcf016a5afb8d08652801c52b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc46fbe659f77dbcf016a5afb8d08652801c52b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=fdc46fbe659f77dbcf016a5afb8d08652801c52b", "patch": "@@ -146,6 +146,7 @@ struct function\n   rtx ehc;\n \n   /* For expr.c.  */\n+  rtx pending_chain;\n   int pending_stack_adjust;\n   int inhibit_defer_pop;\n   rtx saveregs_value;"}]}