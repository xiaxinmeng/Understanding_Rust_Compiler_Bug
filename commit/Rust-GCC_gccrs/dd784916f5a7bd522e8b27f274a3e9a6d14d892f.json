{"sha": "dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ3ODQ5MTZmNWE3YmQ1MjJlOGIyN2YyNzRhM2U5YTZkMTRkODkyZg==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-11-16T18:10:34Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-11-16T18:10:34Z"}, "message": "Looking at PR77308, one of the issues is that the bswap optimization phase doesn't work on ARM.\n\nLooking at PR77308, one of the issues is that the bswap optimization \nphase doesn't work on ARM.  This is due to an odd check that uses\nSLOW_UNALIGNED_ACCESS (which is always true on ARM).  Since the testcase\nin PR77308 generates much better code with this patch (~13% fewer\ninstructions), it seems best to remove this check.\n\n    gcc/\n\t* tree-ssa-math-opts.c (bswap_replace): Remove test\n\tof SLOW_UNALIGNED_ACCESS.\n\n    testsuite/\n\t* gcc.dg/optimize-bswapdi-3.c: Remove xfail.\n\t* gcc.dg/optimize-bswaphi-1.c: Likewise. \t\n\t* gcc.dg/optimize-bswapsi-2.c: Likewise.\n\nFrom-SVN: r242506", "tree": {"sha": "95cdedbc8770628bd05cade2f2c9927771d2d8e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95cdedbc8770628bd05cade2f2c9927771d2d8e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/comments", "author": null, "committer": null, "parents": [{"sha": "0af30954688a9dc1fccdc7579807cb1f46b6ebd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af30954688a9dc1fccdc7579807cb1f46b6ebd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af30954688a9dc1fccdc7579807cb1f46b6ebd6"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "a5290bafc4a7fa8cf940f851f1415d8361c4bd48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "patch": "@@ -1,3 +1,8 @@\n+2015-11-16  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* tree-ssa-math-opts.c (bswap_replace): Remove test\n+\tof SLOW_UNALIGNED_ACCESS.\n+\n 2016-11-16  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* config/nvptx/mkoffload.c (main): Check that either OpenACC or OpenMP"}, {"sha": "3f8831e066afbc98f110f914367685ec1f60ac6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "patch": "@@ -1,3 +1,9 @@\n+2015-11-16  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* gcc.dg/optimize-bswapdi-3.c: Remove xfail.\n+\t* gcc.dg/optimize-bswaphi-1.c: Likewise. \t\n+\t* gcc.dg/optimize-bswapsi-2.c: Likewise.\n+\n 2016-11-16  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR libgfortran/78314"}, {"sha": "6f682014622ab79e541cdf26d13f16a7d87f158d", "filename": "gcc/testsuite/gcc.dg/optimize-bswapdi-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-3.c?ref=dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "patch": "@@ -61,4 +61,4 @@ uint64_t read_be64_3 (unsigned char *data)\n }\n \n /* { dg-final { scan-tree-dump-times \"64 bit load in target endianness found at\" 3 \"bswap\" } } */\n-/* { dg-final { scan-tree-dump-times \"64 bit bswap implementation found at\" 3 \"bswap\" { xfail alpha*-*-* arm*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"64 bit bswap implementation found at\" 3 \"bswap\" } } */"}, {"sha": "852ccfe5c1acd519f2cf340cc55f3ea74b1ec21f", "filename": "gcc/testsuite/gcc.dg/optimize-bswaphi-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c?ref=dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "patch": "@@ -55,5 +55,4 @@ swap16 (HItype in)\n }\n \n /* { dg-final { scan-tree-dump-times \"16 bit load in target endianness found at\" 3 \"bswap\" } } */\n-/* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 1 \"bswap\" { target alpha*-*-* arm*-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 4 \"bswap\" { xfail alpha*-*-* arm*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"16 bit bswap implementation found at\" 4 \"bswap\" } } */"}, {"sha": "01ae3776ed3f44fbc300d001f8c67ec11625d03b", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c?ref=dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "patch": "@@ -45,4 +45,4 @@ uint32_t read_be32_3 (unsigned char *data)\n }\n \n /* { dg-final { scan-tree-dump-times \"32 bit load in target endianness found at\" 3 \"bswap\" } } */\n-/* { dg-final { scan-tree-dump-times \"32 bit bswap implementation found at\" 3 \"bswap\" { xfail alpha*-*-* arm*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"32 bit bswap implementation found at\" 3 \"bswap\" } } */"}, {"sha": "a389dfcae14f35e3e5ec9d52c2a5bcf3b76c07e7", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd784916f5a7bd522e8b27f274a3e9a6d14d892f/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=dd784916f5a7bd522e8b27f274a3e9a6d14d892f", "patch": "@@ -2649,11 +2649,6 @@ bswap_replace (gimple *cur_stmt, gimple *src_stmt, tree fndecl,\n \n       align = get_object_alignment (src);\n \n-      if (bswap\n-\t  && align < GET_MODE_ALIGNMENT (TYPE_MODE (load_type))\n-\t  && SLOW_UNALIGNED_ACCESS (TYPE_MODE (load_type), align))\n-\treturn false;\n-\n       /* Move cur_stmt just before  one of the load of the original\n \t to ensure it has the same VUSE.  See PR61517 for what could\n \t go wrong.  */"}]}