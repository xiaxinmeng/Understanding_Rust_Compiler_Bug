{"sha": "3ff2ca23dcf986e846691ec259da9243c636e64c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmMmNhMjNkY2Y5ODZlODQ2NjkxZWMyNTlkYTkyNDNjNjM2ZTY0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-05T12:05:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-05T12:05:37Z"}, "message": "re PR tree-optimization/58984 (wrong code at -Os and above on x86_64-linux-gnu in 64-bit mode)\n\n\tPR tree-optimization/58984\n\t* ipa-prop.c (ipa_load_from_parm_agg_1): Add SIZE_P argument,\n\tset *SIZE_P if non-NULL on success.\n\t(ipa_load_from_parm_agg, ipa_analyze_indirect_call_uses): Adjust\n\tcallers.\n\t(ipcp_transform_function): Likewise.  Punt if size of access\n\tis different from TYPE_SIZE on v->value's type.\n\n\t* gcc.c-torture/execute/pr58984.c: New test.\n\nFrom-SVN: r204385", "tree": {"sha": "94f1319a87c64263ea23f14068264399661a6f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94f1319a87c64263ea23f14068264399661a6f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ff2ca23dcf986e846691ec259da9243c636e64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2ca23dcf986e846691ec259da9243c636e64c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff2ca23dcf986e846691ec259da9243c636e64c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2ca23dcf986e846691ec259da9243c636e64c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f93a6a65b024af690d6b81778accea9587ad0a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93a6a65b024af690d6b81778accea9587ad0a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93a6a65b024af690d6b81778accea9587ad0a2a"}], "stats": {"total": 90, "additions": 84, "deletions": 6}, "files": [{"sha": "06515889f6a9552e41e69cc6855b782f41827dc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ff2ca23dcf986e846691ec259da9243c636e64c", "patch": "@@ -1,3 +1,13 @@\n+2013-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/58984\n+\t* ipa-prop.c (ipa_load_from_parm_agg_1): Add SIZE_P argument,\n+\tset *SIZE_P if non-NULL on success.\n+\t(ipa_load_from_parm_agg, ipa_analyze_indirect_call_uses): Adjust\n+\tcallers.\n+\t(ipcp_transform_function): Likewise.  Punt if size of access\n+\tis different from TYPE_SIZE on v->value's type.\n+\n 2013-11-05  Tobias Burnus  <burnus@net-b.de>\n \n \t* doc/invoke.texi (-fopenmp-simd): Document new option."}, {"sha": "07af67724f5df71c5a04bf4a48aab4a3d723ce0c", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=3ff2ca23dcf986e846691ec259da9243c636e64c", "patch": "@@ -852,7 +852,7 @@ static bool\n ipa_load_from_parm_agg_1 (vec<ipa_param_descriptor_t> descriptors,\n \t\t\t  struct param_analysis_info *parms_ainfo, gimple stmt,\n \t\t\t  tree op, int *index_p, HOST_WIDE_INT *offset_p,\n-\t\t\t  bool *by_ref_p)\n+\t\t\t  HOST_WIDE_INT *size_p, bool *by_ref_p)\n {\n   int index;\n   HOST_WIDE_INT size, max_size;\n@@ -870,6 +870,8 @@ ipa_load_from_parm_agg_1 (vec<ipa_param_descriptor_t> descriptors,\n \t{\n \t  *index_p = index;\n \t  *by_ref_p = false;\n+\t  if (size_p)\n+\t    *size_p = size;\n \t  return true;\n \t}\n       return false;\n@@ -912,6 +914,8 @@ ipa_load_from_parm_agg_1 (vec<ipa_param_descriptor_t> descriptors,\n     {\n       *index_p = index;\n       *by_ref_p = true;\n+      if (size_p)\n+\t*size_p = size;\n       return true;\n     }\n   return false;\n@@ -926,7 +930,7 @@ ipa_load_from_parm_agg (struct ipa_node_params *info, gimple stmt,\n \t\t\tbool *by_ref_p)\n {\n   return ipa_load_from_parm_agg_1 (info->descriptors, NULL, stmt, op, index_p,\n-\t\t\t\t   offset_p, by_ref_p);\n+\t\t\t\t   offset_p, NULL, by_ref_p);\n }\n \n /* Given that an actual argument is an SSA_NAME (given in NAME) and is a result\n@@ -1826,7 +1830,7 @@ ipa_analyze_indirect_call_uses (struct cgraph_node *node,\n   if (gimple_assign_single_p (def)\n       && ipa_load_from_parm_agg_1 (info->descriptors, parms_ainfo, def,\n \t\t\t\t   gimple_assign_rhs1 (def), &index, &offset,\n-\t\t\t\t   &by_ref))\n+\t\t\t\t   NULL, &by_ref))\n     {\n       struct cgraph_edge *cs = ipa_note_param_call (node, index, call);\n       cs->indirect_info->offset = offset;\n@@ -4567,7 +4571,7 @@ ipcp_transform_function (struct cgraph_node *node)\n \tstruct ipa_agg_replacement_value *v;\n \tgimple stmt = gsi_stmt (gsi);\n \ttree rhs, val, t;\n-\tHOST_WIDE_INT offset;\n+\tHOST_WIDE_INT offset, size;\n \tint index;\n \tbool by_ref, vce;\n \n@@ -4594,13 +4598,15 @@ ipcp_transform_function (struct cgraph_node *node)\n \t  continue;\n \n \tif (!ipa_load_from_parm_agg_1 (descriptors, parms_ainfo, stmt,\n-\t\t\t\t       rhs, &index, &offset, &by_ref))\n+\t\t\t\t       rhs, &index, &offset, &size, &by_ref))\n \t  continue;\n \tfor (v = aggval; v; v = v->next)\n \t  if (v->index == index\n \t      && v->offset == offset)\n \t    break;\n-\tif (!v || v->by_ref != by_ref)\n+\tif (!v\n+\t    || v->by_ref != by_ref\n+\t    || tree_low_cst (TYPE_SIZE (TREE_TYPE (v->value)), 0) != size)\n \t  continue;\n \n \tgcc_checking_assert (is_gimple_ip_invariant (v->value));"}, {"sha": "d95fc2c64dedfd7d916b1babe9ae3852124d8e79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ff2ca23dcf986e846691ec259da9243c636e64c", "patch": "@@ -1,3 +1,8 @@\n+2013-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/58984\n+\t* gcc.c-torture/execute/pr58984.c: New test.\n+\n 2013-11-05  Andreas Schwab  <schwab@suse.de>\n \n \t* g++.dg/ext/sync-4.C: Require sync_long_long_runtime support."}, {"sha": "e0f7669c78d003af20e7d4b849471fe19dcbfcc9", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58984.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58984.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2ca23dcf986e846691ec259da9243c636e64c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58984.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58984.c?ref=3ff2ca23dcf986e846691ec259da9243c636e64c", "patch": "@@ -0,0 +1,57 @@\n+/* PR tree-optimization/58984 */\n+\n+struct S { int f0 : 8; int : 6; int f1 : 5; };\n+struct T { char f0; int : 6; int f1 : 5; };\n+\n+int a, *c = &a, e, n, b, m;\n+\n+static int\n+foo (struct S p)\n+{\n+  const unsigned short *f[36];\n+  for (; e < 2; e++)\n+    {\n+      const unsigned short **i = &f[0];\n+      *c ^= 1;\n+      if (p.f1)\n+\t{\n+\t  *i = 0;\n+\t  return b;\n+\t}\n+    }\n+  return 0;\n+}\n+\n+static int\n+bar (struct T p)\n+{\n+  const unsigned short *f[36];\n+  for (; e < 2; e++)\n+    {\n+      const unsigned short **i = &f[0];\n+      *c ^= 1;\n+      if (p.f1)\n+\t{\n+\t  *i = 0;\n+\t  return b;\n+\t}\n+    }\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  struct S o = { 1, 1 };\n+  foo (o);\n+  m = n || o.f0;\n+  if (a != 1)\n+    __builtin_abort ();\n+  e = 0;\n+  struct T p = { 1, 1 };\n+  bar (p);\n+  m |= n || p.f0;\n+  if (a != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}