{"sha": "0620be185dfe68d566205c6f11268378b3675533", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyMGJlMTg1ZGZlNjhkNTY2MjA1YzZmMTEyNjgzNzhiMzY3NTUzMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-06-17T19:53:56Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-06-17T19:53:56Z"}, "message": "re PR target/15433 (ICE, cannot split insn)\n\n\n\tPR target/15433\n\t* i386.md (SSE SF cmov 0 splitter): The conditional is VOIDmode; fix\n\toperand numbering in the output template.\n\t(SSE DF cmov 0 splitter): The conditional is VOIDmode.\n\nFrom-SVN: r83305", "tree": {"sha": "053a8077cb2900083eebe10257e55238335d682e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/053a8077cb2900083eebe10257e55238335d682e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0620be185dfe68d566205c6f11268378b3675533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0620be185dfe68d566205c6f11268378b3675533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0620be185dfe68d566205c6f11268378b3675533", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0620be185dfe68d566205c6f11268378b3675533/comments", "author": null, "committer": null, "parents": [{"sha": "2df6cea5dc471c577065eaacce5a75658861009f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df6cea5dc471c577065eaacce5a75658861009f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df6cea5dc471c577065eaacce5a75658861009f"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "5e6e9258005b092863a6cf2a010a5a032dbdbded", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0620be185dfe68d566205c6f11268378b3675533/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0620be185dfe68d566205c6f11268378b3675533/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0620be185dfe68d566205c6f11268378b3675533", "patch": "@@ -1,3 +1,14 @@\n+2004-06-17  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR target/15433\n+\t* i386.md (SSE SF cmov 0 splitter): The conditional is VOIDmode; fix\n+\toperand numbering in the output template.\n+\t(SSE DF cmov 0 splitter): The conditional is VOIDmode.\n+\n+2004-06-17  Jan Hubicka  <jh@suse.cz>\n+\n+\t* except.c (can_throw_internal): Recognize RESX expresisons.\n+\n 2004-06-17  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgbuild.c (make_edges): Do not use label_value_list."}, {"sha": "bb6aebfb04705072cfe64b11abe23c9723a2a179", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0620be185dfe68d566205c6f11268378b3675533/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0620be185dfe68d566205c6f11268378b3675533/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0620be185dfe68d566205c6f11268378b3675533", "patch": "@@ -18191,7 +18191,7 @@\n \n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(if_then_else (match_operator:SF 1 \"comparison_operator\"\n+\t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t[(match_operand:SF 4 \"nonimmediate_operand\" \"\")\n \t\t\t (match_operand:SF 5 \"nonimmediate_operand\" \"\")])\n \t\t      (match_operand:SF 2 \"nonmemory_operand\" \"\")\n@@ -18217,19 +18217,19 @@\n   if (const0_operand (operands[2], GET_MODE (operands[2])))\n     {\n       operands[7] = operands[3];\n-      operands[6] = gen_rtx_NOT (V4SFmode, operands[5]);\n+      operands[6] = gen_rtx_NOT (V4SFmode, operands[8]);\n     }\n   else\n     {\n       operands[7] = operands[2];\n-      operands[6] = operands[0];\n+      operands[6] = operands[8];\n     }\n   operands[7] = simplify_gen_subreg (V4SFmode, operands[7], SFmode, 0);\n })\n \n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(if_then_else (match_operator:DF 1 \"comparison_operator\"\n+\t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t[(match_operand:DF 4 \"nonimmediate_operand\" \"\")\n \t\t\t (match_operand:DF 5 \"nonimmediate_operand\" \"\")])\n \t\t      (match_operand:DF 2 \"nonmemory_operand\" \"\")"}, {"sha": "3e663dbff8af8b6f6bb4562b66ed3ebef89c4faf", "filename": "gcc/except.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0620be185dfe68d566205c6f11268378b3675533/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0620be185dfe68d566205c6f11268378b3675533/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=0620be185dfe68d566205c6f11268378b3675533", "patch": "@@ -3114,6 +3114,11 @@ can_throw_internal (rtx insn)\n   if (! INSN_P (insn))\n     return false;\n \n+  if (GET_CODE (insn) == JUMP_INSN\n+      && GET_CODE (PATTERN (insn)) == RESX\n+      && XINT (PATTERN (insn), 0) > 0)\n+    return can_throw_internal_1 (XINT (PATTERN (insn), 0));\n+\n   if (GET_CODE (insn) == INSN\n       && GET_CODE (PATTERN (insn)) == SEQUENCE)\n     insn = XVECEXP (PATTERN (insn), 0, 0);"}]}