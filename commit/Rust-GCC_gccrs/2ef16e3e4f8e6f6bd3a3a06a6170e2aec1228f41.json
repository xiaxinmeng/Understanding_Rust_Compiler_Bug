{"sha": "2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmMTZlM2U0ZjhlNmY2YmQzYTNhMDZhNjE3MGUyYWVjMTIyOGY0MQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-09-30T13:58:25Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-09-30T13:58:25Z"}, "message": "[AArch64] Wire up vqdmullh_laneq_s16 and vqdmullh_laneq_s32\n\ngcc/\n\n\t* config/aarch64/aarch64-simd-builtins.def (sqdmull_laneq): Expand\n\titerator.\n\t* config/aarch64/aarch64-simd.md\n\t(aarch64_sqdmull_laneq<mode>): Expand iterator.\n\t* config/aarch64/arm_neon.h (vqdmullh_laneq_s16): New.\n\t(vqdmulls_lane_s32): Fix return type.\n\t(vqdmulls_laneq_s32): New.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/simd/vqdmullh_laneq_s16.c: New.\n\t* gcc.target/aarch64/simd/vqdmulls_laneq_s32.c: Likewise.\n\t* gcc.target/aarch64/simd/vqdmulls_lane_s32.c: Fix return type.\n\t* gcc.target/aarch64/scalar_intrinsics.c (test_vqdmulls_s32):  Fix\n\treturn type.\n\nFrom-SVN: r215722", "tree": {"sha": "0ca0ba3d7be276bfb170a2fef14d995a20159fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca0ba3d7be276bfb170a2fef14d995a20159fc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c95e85637dde93c38909f5d2895ec2dc84954522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95e85637dde93c38909f5d2895ec2dc84954522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c95e85637dde93c38909f5d2895ec2dc84954522"}], "stats": {"total": 72, "additions": 66, "deletions": 6}, "files": [{"sha": "98b13064cef0521e64fdd41e4317042ad260a4fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -1,3 +1,13 @@\n+2014-09-30  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def (sqdmull_laneq): Expand\n+\titerator.\n+\t* config/aarch64/aarch64-simd.md\n+\t(aarch64_sqdmull_laneq<mode>): Expand iterator.\n+\t* config/aarch64/arm_neon.h (vqdmullh_laneq_s16): New.\n+\t(vqdmulls_lane_s32): Fix return type.\n+\t(vqdmulls_laneq_s32): New.\n+\n 2014-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR inline-asm/63282"}, {"sha": "23674367d250702e17906889eff37d153c89b86e", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -155,7 +155,7 @@\n \n   BUILTIN_VSD_HSI (BINOP, sqdmull, 0)\n   BUILTIN_VSD_HSI (TERNOP, sqdmull_lane, 0)\n-  BUILTIN_VD_HSI (TERNOP, sqdmull_laneq, 0)\n+  BUILTIN_VSD_HSI (TERNOP, sqdmull_laneq, 0)\n   BUILTIN_VD_HSI (BINOP, sqdmull_n, 0)\n   BUILTIN_VQ_HSI (BINOP, sqdmull2, 0)\n   BUILTIN_VQ_HSI (TERNOP, sqdmull2_lane, 0)"}, {"sha": "cab26a341ecefb65b81d13d066b349d3be354616", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -3398,7 +3398,7 @@\n \n (define_expand \"aarch64_sqdmull_laneq<mode>\"\n   [(match_operand:<VWIDE> 0 \"register_operand\" \"=w\")\n-   (match_operand:VD_HSI 1 \"register_operand\" \"w\")\n+   (match_operand:VSD_HSI 1 \"register_operand\" \"w\")\n    (match_operand:<VCONQ> 2 \"register_operand\" \"<vwx>\")\n    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n   \"TARGET_SIMD\""}, {"sha": "9b1873f2bf23bf46a7b59c2e49ace34b4eec8bc2", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -19420,16 +19420,28 @@ vqdmullh_lane_s16 (int16_t __a, int16x4_t __b, const int __c)\n   return __builtin_aarch64_sqdmull_lanehi (__a, __b, __c);\n }\n \n+__extension__ static __inline int32_t __attribute__ ((__always_inline__))\n+vqdmullh_laneq_s16 (int16_t __a, int16x8_t __b, const int __c)\n+{\n+  return __builtin_aarch64_sqdmull_laneqhi (__a, __b, __c);\n+}\n+\n __extension__ static __inline int64_t __attribute__ ((__always_inline__))\n vqdmulls_s32 (int32_t __a, int32_t __b)\n {\n   return __builtin_aarch64_sqdmullsi (__a, __b);\n }\n \n-__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n vqdmulls_lane_s32 (int32_t __a, int32x2_t __b, const int __c)\n {\n-  return (int64x1_t) {__builtin_aarch64_sqdmull_lanesi (__a, __b, __c)};\n+  return __builtin_aarch64_sqdmull_lanesi (__a, __b, __c);\n+}\n+\n+__extension__ static __inline int64_t __attribute__ ((__always_inline__))\n+vqdmulls_laneq_s32 (int32_t __a, int32x4_t __b, const int __c)\n+{\n+  return __builtin_aarch64_sqdmull_laneqsi (__a, __b, __c);\n }\n \n /* vqmovn */"}, {"sha": "e42cfc8dda240f1d3014b3651b1b4fd4a299b268", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -1,3 +1,11 @@\n+2014-09-30  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.target/aarch64/simd/vqdmullh_laneq_s16.c: New.\n+\t* gcc.target/aarch64/simd/vqdmulls_laneq_s32.c: Likewise.\n+\t* gcc.target/aarch64/simd/vqdmulls_lane_s32.c: Fix return type.\n+\t* gcc.target/aarch64/scalar_intrinsics.c (test_vqdmulls_s32):  Fix\n+\treturn type.\n+\n 2014-30-09  Dominique d'Humieres <dominiq@lps.ens.fr>\n \n \t* gfortran.dg/coarray_collectives_9.f90: Fix some dg-error."}, {"sha": "ea29066e369b967d0781d31c8a5208bda9e4f685", "filename": "gcc/testsuite/gcc.target/aarch64/scalar_intrinsics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -501,7 +501,7 @@ test_vqdmulls_s32 (int32_t a, int32_t b)\n \n /* { dg-final { scan-assembler-times \"\\\\tsqdmull\\\\td\\[0-9\\]+, s\\[0-9\\]+, v\" 1 } } */\n \n-int64x1_t\n+int64_t\n test_vqdmulls_lane_s32 (int32_t a, int32x2_t b)\n {\n   return vqdmulls_lane_s32 (a, b, 1);"}, {"sha": "947ebf4f7f022eb74ffbfda038ecee9bcf50fd0c", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vqdmullh_laneq_s16.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmullh_laneq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmullh_laneq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmullh_laneq_s16.c?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -0,0 +1,15 @@\n+/* Test the vqdmullh_laneq_s16 AArch64 SIMD intrinsic.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+\n+#include \"arm_neon.h\"\n+\n+int32_t\n+t_vqdmullh_laneq_s16 (int16_t a, int16x8_t b)\n+{\n+  return vqdmullh_laneq_s16 (a, b, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sqdmull\\[ \\t\\]+\\[sS\\]\\[0-9\\]+, ?\\[hH\\]\\[0-9\\]+, ?\\[vV\\]\\[0-9\\]+\\.\\[hH\\]\\\\\\[0\\\\\\]\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "24daaab91a14639c8196ef21d0970f294558ce36", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vqdmulls_lane_s32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmulls_lane_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmulls_lane_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmulls_lane_s32.c?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -5,7 +5,7 @@\n \n #include \"arm_neon.h\"\n \n-int64x1_t\n+int64_t\n t_vqdmulls_lane_s32 (int32_t a, int32x2_t b)\n {\n   return vqdmulls_lane_s32 (a, b, 0);"}, {"sha": "503f81e79d661d3ac7f1e407ab0901af5bc21fed", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vqdmulls_laneq_s32.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmulls_laneq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmulls_laneq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvqdmulls_laneq_s32.c?ref=2ef16e3e4f8e6f6bd3a3a06a6170e2aec1228f41", "patch": "@@ -0,0 +1,15 @@\n+/* Test the vqdmulls_laneq_s32 AArch64 SIMD intrinsic.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+\n+#include \"arm_neon.h\"\n+\n+int64_t\n+t_vqdmulls_laneq_s32 (int32_t a, int32x4_t b)\n+{\n+  return vqdmulls_laneq_s32 (a, b, 0);\n+}\n+\n+/* { dg-final { scan-assembler-times \"sqdmull\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, ?\\[sS\\]\\[0-9\\]+, ?\\[vV\\]\\[0-9\\]+\\.\\[sS\\]\\\\\\[0\\\\\\]\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}]}