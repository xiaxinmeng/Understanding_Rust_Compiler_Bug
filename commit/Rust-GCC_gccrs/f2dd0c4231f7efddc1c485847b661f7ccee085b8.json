{"sha": "f2dd0c4231f7efddc1c485847b661f7ccee085b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkZDBjNDIzMWY3ZWZkZGMxYzQ4NTg0N2I2NjFmN2NjZWUwODViOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-17T11:24:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-17T11:24:04Z"}, "message": "xtensa.c (xtensa_encode_section_info): Remove.\n\n        * config/xtensa/xtensa.c (xtensa_encode_section_info): Remove.\n        (call_insn_operand): Use SYMBOL_REF_LOCAL_P.\n        * config/xtensa/xtensa.md (call, call_value): Likewise.\n\nFrom-SVN: r65739", "tree": {"sha": "c6441d0d1295e0d196dbc1aecea2c19b7c5dd826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6441d0d1295e0d196dbc1aecea2c19b7c5dd826"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2dd0c4231f7efddc1c485847b661f7ccee085b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dd0c4231f7efddc1c485847b661f7ccee085b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2dd0c4231f7efddc1c485847b661f7ccee085b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dd0c4231f7efddc1c485847b661f7ccee085b8/comments", "author": null, "committer": null, "parents": [{"sha": "50d1ff6afc9de67ccea71a481d57d4a6b88befa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d1ff6afc9de67ccea71a481d57d4a6b88befa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d1ff6afc9de67ccea71a481d57d4a6b88befa6"}], "stats": {"total": 29, "additions": 10, "deletions": 19}, "files": [{"sha": "77b03651e938176af96c0769870565f1a7ed2c91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dd0c4231f7efddc1c485847b661f7ccee085b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dd0c4231f7efddc1c485847b661f7ccee085b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2dd0c4231f7efddc1c485847b661f7ccee085b8", "patch": "@@ -1,3 +1,9 @@\n+2003-04-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/xtensa/xtensa.c (xtensa_encode_section_info): Remove.\n+\t(call_insn_operand): Use SYMBOL_REF_LOCAL_P.\n+\t* config/xtensa/xtensa.md (call, call_value): Likewise.\n+\n 2003-04-17  Richard Henderson  <rth@redhat.com>\n \n \t* config/v850/v850.c (print_operand): Use SYMBOL_REF_[ZST]DA."}, {"sha": "5e7835df058db97f8e8ef880f757da02c7e2f358", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dd0c4231f7efddc1c485847b661f7ccee085b8/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dd0c4231f7efddc1c485847b661f7ccee085b8/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=f2dd0c4231f7efddc1c485847b661f7ccee085b8", "patch": "@@ -203,7 +203,6 @@ static unsigned int xtensa_multibss_section_type_flags\n   PARAMS ((tree, const char *, int));\n static void xtensa_select_rtx_section\n   PARAMS ((enum machine_mode, rtx, unsigned HOST_WIDE_INT));\n-static void xtensa_encode_section_info PARAMS ((tree, int));\n static bool xtensa_rtx_costs PARAMS ((rtx, int, int, int *));\n \n static rtx frame_size_const;\n@@ -238,8 +237,6 @@ static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n \n #undef TARGET_ASM_SELECT_RTX_SECTION\n #define TARGET_ASM_SELECT_RTX_SECTION  xtensa_select_rtx_section\n-#undef TARGET_ENCODE_SECTION_INFO\n-#define TARGET_ENCODE_SECTION_INFO  xtensa_encode_section_info\n \n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS xtensa_rtx_costs\n@@ -596,8 +593,8 @@ call_insn_operand (op, mode)\n   if (CONSTANT_ADDRESS_P (op))\n     {\n       /* Direct calls only allowed to static functions with PIC.  */\n-      return (!flag_pic || (GET_CODE (op) == SYMBOL_REF\n-\t\t\t    && SYMBOL_REF_FLAG (op)));\n+      return (!flag_pic\n+\t      || (GET_CODE (op) == SYMBOL_REF && SYMBOL_REF_LOCAL_P (op)));\n     }\n \n   return FALSE;\n@@ -2833,18 +2830,6 @@ xtensa_select_rtx_section (mode, x, align)\n   function_section (current_function_decl);\n }\n \n-/* If we are referencing a function that is static, make the SYMBOL_REF\n-   special so that we can generate direct calls to it even with -fpic.  */\n-\n-static void\n-xtensa_encode_section_info (decl, first)\n-     tree decl;\n-     int first ATTRIBUTE_UNUSED;\n-{\n-  if (TREE_CODE (decl) == FUNCTION_DECL && ! TREE_PUBLIC (decl))\n-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (decl), 0)) = 1;\n-}\n-\n /* Compute a (partial) cost for rtx X.  Return true if the complete\n    cost has been computed, and false if subexpressions should be\n    scanned.  In either case, *TOTAL contains the cost result.  */"}, {"sha": "7a39cab1e4d29ad74ecf2d95ba33cdc6f7bd9482", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dd0c4231f7efddc1c485847b661f7ccee085b8/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dd0c4231f7efddc1c485847b661f7ccee085b8/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=f2dd0c4231f7efddc1c485847b661f7ccee085b8", "patch": "@@ -2291,7 +2291,7 @@\n   \"\n {\n   rtx addr = XEXP (operands[0], 0);\n-  if (flag_pic && GET_CODE (addr) == SYMBOL_REF && !SYMBOL_REF_FLAG (addr))\n+  if (flag_pic && GET_CODE (addr) == SYMBOL_REF && !SYMBOL_REF_LOCAL_P (addr))\n     addr = gen_sym_PLT (addr);\n   if (!call_insn_operand (addr, VOIDmode))\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, addr);\n@@ -2316,7 +2316,7 @@\n   \"\n {\n   rtx addr = XEXP (operands[1], 0);\n-  if (flag_pic && GET_CODE (addr) == SYMBOL_REF && !SYMBOL_REF_FLAG (addr))\n+  if (flag_pic && GET_CODE (addr) == SYMBOL_REF && !SYMBOL_REF_LOCAL_P (addr))\n     addr = gen_sym_PLT (addr);\n   if (!call_insn_operand (addr, VOIDmode))\n     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, addr);"}]}