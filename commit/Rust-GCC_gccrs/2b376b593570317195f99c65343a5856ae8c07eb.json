{"sha": "2b376b593570317195f99c65343a5856ae8c07eb", "node_id": "C_kwDOANBUbNoAKDJiMzc2YjU5MzU3MDMxNzE5NWY5OWM2NTM0M2E1ODU2YWU4YzA3ZWI", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2022-05-18T13:22:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-02T09:06:43Z"}, "message": "[Ada] Rename GNATprove annotate pragma for termination to Always_Return\n\nGNATprove changed the name of the pragma Annotate used to verify that\na subprogram always returns normally. It is now called Always_Return\ninstead of Terminating.\n\ngcc/ada/\n\n\t* libgnat/s-aridou.adb: Use Always_Return instead of Terminating\n\tto annotate termination for GNATprove.\n\t* libgnat/s-arit32.adb: Idem.\n\t* libgnat/s-spcuop.ads: Idem.", "tree": {"sha": "8625a1abef732b0e2fbf95e048a618c7421ebd47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8625a1abef732b0e2fbf95e048a618c7421ebd47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b376b593570317195f99c65343a5856ae8c07eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b376b593570317195f99c65343a5856ae8c07eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b376b593570317195f99c65343a5856ae8c07eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b376b593570317195f99c65343a5856ae8c07eb/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a466ee093827650cd33fe877c1043441c4e9427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a466ee093827650cd33fe877c1043441c4e9427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a466ee093827650cd33fe877c1043441c4e9427"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "880a8995d5c968af772eca5f417e639e13ea931c", "filename": "gcc/ada/libgnat/s-aridou.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b376b593570317195f99c65343a5856ae8c07eb/gcc%2Fada%2Flibgnat%2Fs-aridou.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b376b593570317195f99c65343a5856ae8c07eb/gcc%2Fada%2Flibgnat%2Fs-aridou.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-aridou.adb?ref=2b376b593570317195f99c65343a5856ae8c07eb", "patch": "@@ -162,7 +162,7 @@ is\n \n    function To_Neg_Int (A : Double_Uns) return Double_Int\n    with\n-     Annotate => (GNATprove, Terminating),\n+     Annotate => (GNATprove, Always_Return),\n      Pre      => In_Double_Int_Range (-Big (A)),\n      Post     => Big (To_Neg_Int'Result) = -Big (A);\n    --  Convert to negative integer equivalent. If the input is in the range\n@@ -172,7 +172,7 @@ is\n \n    function To_Pos_Int (A : Double_Uns) return Double_Int\n    with\n-     Annotate => (GNATprove, Terminating),\n+     Annotate => (GNATprove, Always_Return),\n      Pre      => In_Double_Int_Range (Big (A)),\n      Post     => Big (To_Pos_Int'Result) = Big (A);\n    --  Convert to positive integer equivalent. If the input is in the range"}, {"sha": "6dac5725a59e4bca7948c3d33bb40138d9b53756", "filename": "gcc/ada/libgnat/s-arit32.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b376b593570317195f99c65343a5856ae8c07eb/gcc%2Fada%2Flibgnat%2Fs-arit32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b376b593570317195f99c65343a5856ae8c07eb/gcc%2Fada%2Flibgnat%2Fs-arit32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-arit32.adb?ref=2b376b593570317195f99c65343a5856ae8c07eb", "patch": "@@ -104,7 +104,7 @@ is\n \n    function To_Neg_Int (A : Uns32) return Int32\n    with\n-     Annotate => (GNATprove, Terminating),\n+     Annotate => (GNATprove, Always_Return),\n      Pre      => In_Int32_Range (-Big (A)),\n      Post     => Big (To_Neg_Int'Result) = -Big (A);\n    --  Convert to negative integer equivalent. If the input is in the range\n@@ -114,7 +114,7 @@ is\n \n    function To_Pos_Int (A : Uns32) return Int32\n    with\n-     Annotate => (GNATprove, Terminating),\n+     Annotate => (GNATprove, Always_Return),\n      Pre      => In_Int32_Range (Big (A)),\n      Post     => Big (To_Pos_Int'Result) = Big (A);\n    --  Convert to positive integer equivalent. If the input is in the range"}, {"sha": "53db0ce381214e731bc4424fc680d0739a36e16f", "filename": "gcc/ada/libgnat/s-spcuop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b376b593570317195f99c65343a5856ae8c07eb/gcc%2Fada%2Flibgnat%2Fs-spcuop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b376b593570317195f99c65343a5856ae8c07eb/gcc%2Fada%2Flibgnat%2Fs-spcuop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-spcuop.ads?ref=2b376b593570317195f99c65343a5856ae8c07eb", "patch": "@@ -45,7 +45,7 @@\n package System.SPARK.Cut_Operations with\n   SPARK_Mode,\n   Pure,\n-  Annotate => (GNATprove, Terminating)\n+  Annotate => (GNATprove, Always_Return)\n is\n \n    function By (Consequence, Premise : Boolean) return Boolean with"}]}