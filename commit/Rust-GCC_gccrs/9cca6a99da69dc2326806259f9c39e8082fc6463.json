{"sha": "9cca6a99da69dc2326806259f9c39e8082fc6463", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjYTZhOTlkYTY5ZGMyMzI2ODA2MjU5ZjljMzllODA4MmZjNjQ2Mw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-04-15T18:46:12Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-04-15T18:46:12Z"}, "message": "function.c (preserve_temp_slots): Only preserve temporaries that happen to be at the current level.\n\n\t* function.c (preserve_temp_slots): Only preserve temporaries that\n\thappen to be at the current level.\nFixes p7325.C.\n\nFrom-SVN: r11800", "tree": {"sha": "991d5868e87290bdb87586a6827bc97fc8410645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991d5868e87290bdb87586a6827bc97fc8410645"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cca6a99da69dc2326806259f9c39e8082fc6463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca6a99da69dc2326806259f9c39e8082fc6463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cca6a99da69dc2326806259f9c39e8082fc6463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca6a99da69dc2326806259f9c39e8082fc6463/comments", "author": null, "committer": null, "parents": [{"sha": "1d2a8985b01849f45cf3d3e83c41f933421cf58b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2a8985b01849f45cf3d3e83c41f933421cf58b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d2a8985b01849f45cf3d3e83c41f933421cf58b"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "54c668e90237b23fe068dac05237d17e43f79a72", "filename": "gcc/function.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cca6a99da69dc2326806259f9c39e8082fc6463/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cca6a99da69dc2326806259f9c39e8082fc6463/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9cca6a99da69dc2326806259f9c39e8082fc6463", "patch": "@@ -1095,10 +1095,11 @@ mark_temp_addr_taken (x)\n     p->addr_taken = 1;\n }\n \n-/* If X could be a reference to a temporary slot, mark that slot as belonging\n-   to the to one level higher.  If X matched one of our slots, just mark that\n-   one.  Otherwise, we can't easily predict which it is, so upgrade all of\n-   them.  Kept slots need not be touched.\n+/* If X could be a reference to a temporary slot, mark that slot as\n+   belonging to the to one level higher than the current level.  If X\n+   matched one of our slots, just mark that one.  Otherwise, we can't\n+   easily predict which it is, so upgrade all of them.  Kept slots\n+   need not be touched.\n \n    This is called when an ({...}) construct occurs and a statement\n    returns a value in memory.  */\n@@ -1149,12 +1150,15 @@ preserve_temp_slots (x)\n \t level in case we used its address.  */\n       struct temp_slot *q;\n \n-      for (q = temp_slots; q; q = q->next)\n-\tif (q != p && q->addr_taken && q->level == p->level)\n-\t  q->level--;\n+      if (p->level == temp_slot_level)\n+\t{\n+\t  for (q = temp_slots; q; q = q->next)\n+\t    if (q != p && q->addr_taken && q->level == p->level)\n+\t      q->level--;\n \n-      p->level--;\n-      p->addr_taken = 0;\n+\t  p->level--;\n+\t  p->addr_taken = 0;\n+\t}\n       return;\n     }\n "}]}