{"sha": "978970473bf5517ef449997c31b13f76fc242c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4OTcwNDczYmY1NTE3ZWY0NDk5OTdjMzFiMTNmNzZmYzI0MmM3Mw==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2001-02-26T20:23:41Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2001-02-26T20:23:41Z"}, "message": "configure.in: Test for ftruncate.\n\n2001-02-26  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* libI77/configure.in: Test for ftruncate.\n\t* libI77/configure: Rebuilt.\n\t* libI77/endfile.c: Use fflush/ftruncate when available.\n\nFrom-SVN: r40072", "tree": {"sha": "0ab417d33e31f2a32dfc54d1653434f8a60b1a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab417d33e31f2a32dfc54d1653434f8a60b1a59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/978970473bf5517ef449997c31b13f76fc242c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978970473bf5517ef449997c31b13f76fc242c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978970473bf5517ef449997c31b13f76fc242c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978970473bf5517ef449997c31b13f76fc242c73/comments", "author": null, "committer": null, "parents": [{"sha": "3914b81a45ea397fd8bbd278d479e601fa4608f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3914b81a45ea397fd8bbd278d479e601fa4608f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3914b81a45ea397fd8bbd278d479e601fa4608f6"}], "stats": {"total": 95, "additions": 85, "deletions": 10}, "files": [{"sha": "5206fa8b7c12753ee017e17922aa6be6623c5da3", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=978970473bf5517ef449997c31b13f76fc242c73", "patch": "@@ -1,3 +1,9 @@\n+2001-02-26  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* libI77/configure.in: Test for ftruncate.\n+\t* libI77/configure: Rebuilt.\n+\t* libI77/endfile.c: Use fflush/ftruncate when available.\n+\n 2001-02-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* libF77/Version.c, libI77/Version.c, libU77/Version.c: Update G77"}, {"sha": "231fbb4c04bb5e0527d2d30d125e69946b112782", "filename": "libf2c/libI77/configure", "status": "modified", "additions": 63, "deletions": 8, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FlibI77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FlibI77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure?ref=978970473bf5517ef449997c31b13f76fc242c73", "patch": "@@ -1132,7 +1132,7 @@ else\n int main() {\n \n /* Ultrix mips cc rejects this.  */\n-typedef int charset[2]; const charset x;\n+typedef int charset[2]; const charset x = {0,0};\n /* SunOS 4.1.1 cc rejects this.  */\n char const *const *ccp;\n char **p;\n@@ -1295,7 +1295,7 @@ else\n   echo \"$ac_t\"\"no\" 1>&6\n fi\n \n-for ac_func in mkstemp\n+for ac_func in ftruncate\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n echo \"configure:1302: checking for $ac_func\" >&5\n@@ -1350,7 +1350,7 @@ else\n fi\n done\n \n-for ac_func in tempnam\n+for ac_func in mkstemp\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n echo \"configure:1357: checking for $ac_func\" >&5\n@@ -1405,25 +1405,80 @@ else\n fi\n done\n \n+for ac_func in tempnam\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1412: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1417 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1440: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n \n # posix will guarantee the right behaviour for sprintf, else we can't be\n # sure; HEADER_STDC wouldn't be the right check in sunos4, for instance.\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe\n # we're posix-conformant, so always do the test.\n echo $ac_n \"checking for ansi/posix sprintf result\"\"... $ac_c\" 1>&6\n-echo \"configure:1415: checking for ansi/posix sprintf result\" >&5\n+echo \"configure:1470: checking for ansi/posix sprintf result\" >&5\n if test \"$cross_compiling\" = yes; then\n   g77_cv_sys_sprintf_ansi=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1420 \"configure\"\n+#line 1475 \"configure\"\n #include \"confdefs.h\"\n   #include <stdio.h>\n     /* does sprintf return the number of chars transferred? */\n     main () {char foo[2]; (sprintf(foo, \"1\") == 1) ? exit(0) : exit(1);}\n \n EOF\n-if { (eval echo configure:1427: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1482: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   g77_cv_sys_sprintf_ansi=yes\n else\n@@ -1454,9 +1509,9 @@ fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n echo $ac_n \"checking NON_ANSI_RW_MODES\"\"... $ac_c\" 1>&6\n-echo \"configure:1458: checking NON_ANSI_RW_MODES\" >&5\n+echo \"configure:1513: checking NON_ANSI_RW_MODES\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 1460 \"configure\"\n+#line 1515 \"configure\"\n #include \"confdefs.h\"\n #ifdef unix\n   yes"}, {"sha": "f2f63597f646258e85ee07451f4494da696c87be", "filename": "libf2c/libI77/configure.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FlibI77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FlibI77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure.in?ref=978970473bf5517ef449997c31b13f76fc242c73", "patch": "@@ -134,6 +134,7 @@ else\n   AC_MSG_RESULT(no)\n fi\n \n+AC_CHECK_FUNCS(ftruncate)\n AC_CHECK_FUNCS(mkstemp)\n AC_CHECK_FUNCS(tempnam)\n "}, {"sha": "8e60d05f439ac6048c635e93e81e8b9185193474", "filename": "libf2c/libI77/endfile.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FlibI77%2Fendfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978970473bf5517ef449997c31b13f76fc242c73/libf2c%2FlibI77%2Fendfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fendfile.c?ref=978970473bf5517ef449997c31b13f76fc242c73", "patch": "@@ -1,6 +1,8 @@\n #include \"f2c.h\"\n #include \"fio.h\"\n \n+#include <unistd.h>\n+\n #ifdef KR_headers\n extern char *strcpy();\n extern FILE *tmpfile();\n@@ -38,6 +40,7 @@ integer f_end(alist *a)\n \treturn(b->useek ? t_runc(a) : 0);\n }\n \n+#ifndef HAVE_FTRUNCATE\n  static int\n #ifdef KR_headers\n copy(from, len, to) FILE *from, *to; register long len;\n@@ -56,6 +59,7 @@ copy(FILE *from, register long len, FILE *to)\n \t\t}\n \treturn 0;\n \t}\n+#endif /* !defined(HAVE_FTRUNCATE) */\n \n  int\n #ifdef KR_headers\n@@ -66,8 +70,11 @@ t_runc(alist *a)\n {\n \tlong loc, len;\n \tunit *b;\n-\tFILE *bf, *tf;\n-\tint rc = 0;\n+\tint rc;\n+\tFILE *bf;\n+#ifndef HAVE_FTRUNCATE\n+\tFILE *tf;\n+#endif /* !defined(HAVE_FTRUNCATE) */\n \n \tb = &f__units[a->aunit];\n \tif(b->url)\n@@ -77,6 +84,8 @@ t_runc(alist *a)\n \tlen=ftell(bf);\n \tif (loc >= len || b->useek == 0 || b->ufnm == NULL)\n \t\treturn(0);\n+#ifndef HAVE_FTRUNCATE\n+\trc = 0;\n \tfclose(b->ufd);\n \tif (!loc) {\n \t\tif (!(bf = fopen(b->ufnm, f__w_mode[b->ufmt])))\n@@ -118,6 +127,10 @@ t_runc(alist *a)\n \tfclose(tf);\n done:\n \tf__cf = b->ufd = bf;\n+#else  /* !defined(HAVE_FTRUNCATE) */\n+\tfflush(b->ufd);\n+\trc = ftruncate(fileno(b->ufd),loc);\n+#endif /* !defined(HAVE_FTRUNCATE) */\n \tif (rc)\n \t\terr(a->aerr,111,\"endfile\");\n \treturn 0;"}]}