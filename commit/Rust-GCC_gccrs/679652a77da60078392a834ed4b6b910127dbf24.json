{"sha": "679652a77da60078392a834ed4b6b910127dbf24", "node_id": "C_kwDOANBUbNoAKDY3OTY1MmE3N2RhNjAwNzgzOTJhODM0ZWQ0YjZiOTEwMTI3ZGJmMjQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-25T14:54:22Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-01T19:29:19Z"}, "message": "Fix negative integer range for UInteger.\n\ngcc/ChangeLog:\n\n\t* opt-functions.awk: Add new sanity checking.\n\t* optc-gen.awk: Add new argument to integer_range_info.\n\t* params.opt: Update 2 params which have negative IntegerRange.", "tree": {"sha": "0e8e107e34fa3c4fdd90ed4987f1fb1966af52e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e8e107e34fa3c4fdd90ed4987f1fb1966af52e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/679652a77da60078392a834ed4b6b910127dbf24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679652a77da60078392a834ed4b6b910127dbf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679652a77da60078392a834ed4b6b910127dbf24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679652a77da60078392a834ed4b6b910127dbf24/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a11c53985a7080f9bf6143788ccb455dc9b0da21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11c53985a7080f9bf6143788ccb455dc9b0da21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a11c53985a7080f9bf6143788ccb455dc9b0da21"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "9bc856040669e901ea04d8efe1a76b64ae74725c", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679652a77da60078392a834ed4b6b910127dbf24/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679652a77da60078392a834ed4b6b910127dbf24/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=679652a77da60078392a834ed4b6b910127dbf24", "patch": "@@ -356,14 +356,16 @@ function search_var_name(name, opt_numbers, opts, flags, n_opts)\n     return \"\"\n }\n \n-function integer_range_info(range_option, init, option)\n+function integer_range_info(range_option, init, option, uinteger_used)\n {\n     if (range_option != \"\") {\n \tival = init + 0;\n \tstart = nth_arg(0, range_option) + 0;\n \tend = nth_arg(1, range_option) + 0;\n \tif (init != \"\" && init != \"-1\" && (ival < start || ival > end))\n \t  print \"#error initial value \" init \" of '\" option \"' must be in range [\" start \",\" end \"]\"\n+\tif (uinteger_used && start < 0)\n+\t  print \"#error '\" option\"': negative IntegerRange (\" start \", \" end \") cannot be combined with UInteger\"\n \treturn start \", \" end\n     }\n     else"}, {"sha": "ebc1a02fa36692a30e960350d620e50fcb050286", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679652a77da60078392a834ed4b6b910127dbf24/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679652a77da60078392a834ed4b6b910127dbf24/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=679652a77da60078392a834ed4b6b910127dbf24", "patch": "@@ -422,7 +422,7 @@ for (i = 0; i < n_opts; i++) {\n \t\t       cl_flags, cl_bit_fields)\n \tprintf(\"    %s, %s, %s }%s\\n\", var_ref(opts[i], flags[i]),\n \t       var_set(flags[i]), integer_range_info(opt_args(\"IntegerRange\", flags[i]),\n-\t\t    opt_args(\"Init\", flags[i]), opts[i]), comma)\n+\t\t    opt_args(\"Init\", flags[i]), opts[i], flag_set_p(\"UInteger\", flags[i])), comma)\n \n \t# Bump up the informational option index.\n \t++optindex"}, {"sha": "8c5948f7a84d768969773573cb99179e445cb66b", "filename": "gcc/params.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/679652a77da60078392a834ed4b6b910127dbf24/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/679652a77da60078392a834ed4b6b910127dbf24/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=679652a77da60078392a834ed4b6b910127dbf24", "patch": "@@ -402,7 +402,7 @@ Common Joined UInteger Var(param_lim_expensive) Init(20) Param Optimization\n The minimum cost of an expensive expression in the loop invariant motion.\n \n -param=logical-op-non-short-circuit=\n-Common Joined UInteger Var(param_logical_op_non_short_circuit) Init(-1) IntegerRange(-1, 1) Param\n+Common Joined UInteger Var(param_logical_op_non_short_circuit) Init(-1) IntegerRange(0, 1) Param\n True if a non-short-circuit operation is optimal.\n \n -param=loop-block-tile-size=\n@@ -1132,7 +1132,7 @@ Common Joined UInteger Var(param_vect_epilogues_nomask) Init(1) IntegerRange(0,\n Enable loop epilogue vectorization using smaller vector size.\n \n -param=vect-max-peeling-for-alignment=\n-Common Joined UInteger Var(param_vect_max_peeling_for_alignment) Init(-1) IntegerRange(-1, 64) Param Optimization\n+Common Joined UInteger Var(param_vect_max_peeling_for_alignment) Init(-1) IntegerRange(0, 64) Param Optimization\n Maximum number of loop peels to enhance alignment of data references in a loop.\n \n -param=vect-max-version-for-alias-checks="}]}