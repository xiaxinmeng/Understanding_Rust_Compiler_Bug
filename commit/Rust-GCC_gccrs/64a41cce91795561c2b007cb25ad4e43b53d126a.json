{"sha": "64a41cce91795561c2b007cb25ad4e43b53d126a", "node_id": "C_kwDOANBUbNoAKDY0YTQxY2NlOTE3OTU1NjFjMmIwMDdjYjI1YWQ0ZTQzYjUzZDEyNmE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-18T11:28:28Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-20T11:35:33Z"}, "message": "mappings: Add reverse mappings from HirId -> NodeId", "tree": {"sha": "fc51c5d7d0f8e6a233d160ef1f15f6b2d38f94b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc51c5d7d0f8e6a233d160ef1f15f6b2d38f94b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64a41cce91795561c2b007cb25ad4e43b53d126a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a41cce91795561c2b007cb25ad4e43b53d126a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a41cce91795561c2b007cb25ad4e43b53d126a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a41cce91795561c2b007cb25ad4e43b53d126a/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9d41c4ef9da8ba71570ecf83691c813c12d9149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9d41c4ef9da8ba71570ecf83691c813c12d9149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9d41c4ef9da8ba71570ecf83691c813c12d9149"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "8672c8acb12018f3270209320e1202edc2ba5191", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 35, "deletions": 19, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a41cce91795561c2b007cb25ad4e43b53d126a/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a41cce91795561c2b007cb25ad4e43b53d126a/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=64a41cce91795561c2b007cb25ad4e43b53d126a", "patch": "@@ -239,7 +239,7 @@ Mappings::insert_hir_item (CrateNum crateNum, HirId id, HIR::Item *item)\n   rust_assert (lookup_hir_item (crateNum, id) == nullptr);\n \n   hirItemMappings[crateNum][id] = item;\n-  nodeIdToHirMappings[crateNum][item->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, item->get_mappings ().get_nodeid (), id);\n }\n \n HIR::Item *\n@@ -263,7 +263,7 @@ Mappings::insert_hir_trait_item (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_trait_item (crateNum, id) == nullptr);\n \n   hirTraitItemMappings[crateNum][id] = item;\n-  nodeIdToHirMappings[crateNum][item->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, item->get_mappings ().get_nodeid (), id);\n }\n \n HIR::TraitItem *\n@@ -287,7 +287,7 @@ Mappings::insert_hir_extern_item (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_extern_item (crateNum, id) == nullptr);\n \n   hirExternItemMappings[crateNum][id] = item;\n-  nodeIdToHirMappings[crateNum][item->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, item->get_mappings ().get_nodeid (), id);\n }\n \n HIR::ExternalItem *\n@@ -311,7 +311,7 @@ Mappings::insert_hir_impl_block (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_impl_block (crateNum, id) == nullptr);\n \n   hirImplBlockMappings[crateNum][id] = item;\n-  nodeIdToHirMappings[crateNum][item->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, item->get_mappings ().get_nodeid (), id);\n }\n \n HIR::ImplBlock *\n@@ -357,7 +357,7 @@ Mappings::insert_hir_implitem (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_implitem (crateNum, id, nullptr) == nullptr);\n   hirImplItemMappings[crateNum][id]\n     = std::pair<HirId, HIR::ImplItem *> (parent_impl_id, item);\n-  nodeIdToHirMappings[crateNum][item->get_impl_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, item->get_impl_mappings ().get_nodeid (), id);\n }\n \n HIR::ImplItem *\n@@ -383,7 +383,7 @@ void\n Mappings::insert_hir_expr (CrateNum crateNum, HirId id, HIR::Expr *expr)\n {\n   hirExprMappings[crateNum][id] = expr;\n-  nodeIdToHirMappings[crateNum][expr->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, expr->get_mappings ().get_nodeid (), id);\n   insert_location (crateNum, id, expr->get_locus ());\n }\n \n@@ -408,7 +408,7 @@ Mappings::insert_hir_path_expr_seg (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_path_expr_seg (crateNum, id) == nullptr);\n \n   hirPathSegMappings[crateNum][id] = expr;\n-  nodeIdToHirMappings[crateNum][expr->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, expr->get_mappings ().get_nodeid (), id);\n   insert_location (crateNum, id, expr->get_locus ());\n }\n \n@@ -433,7 +433,7 @@ Mappings::insert_simple_path_segment (CrateNum crateNum, HirId id,\n   rust_assert (lookup_simple_path_segment (crateNum, id) == nullptr);\n \n   astSimplePathSegmentMappings[crateNum][id] = path;\n-  nodeIdToHirMappings[crateNum][path->get_node_id ()] = id;\n+  insert_node_to_hir (crateNum, path->get_node_id (), id);\n   insert_location (crateNum, id, path->get_locus ());\n }\n \n@@ -458,7 +458,7 @@ Mappings::insert_simple_path (CrateNum crateNum, HirId id,\n   rust_assert (lookup_simple_path (crateNum, id) == nullptr);\n \n   astSimplePathMappings[crateNum][id] = path;\n-  nodeIdToHirMappings[crateNum][path->get_node_id ()] = id;\n+  insert_node_to_hir (crateNum, path->get_node_id (), id);\n   insert_location (crateNum, id, path->get_locus ());\n }\n \n@@ -483,7 +483,7 @@ Mappings::insert_hir_generic_param (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_generic_param (crateNum, id) == nullptr);\n \n   hirGenericParamMappings[crateNum][id] = param;\n-  nodeIdToHirMappings[crateNum][param->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, param->get_mappings ().get_nodeid (), id);\n   insert_location (crateNum, id, param->get_locus ());\n }\n \n@@ -507,7 +507,7 @@ Mappings::insert_hir_type (CrateNum crateNum, HirId id, HIR::Type *type)\n   rust_assert (lookup_hir_type (crateNum, id) == nullptr);\n \n   hirTypeMappings[crateNum][id] = type;\n-  nodeIdToHirMappings[crateNum][type->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, type->get_mappings ().get_nodeid (), id);\n }\n \n HIR::Type *\n@@ -525,12 +525,12 @@ Mappings::lookup_hir_type (CrateNum crateNum, HirId id)\n }\n \n void\n-Mappings::insert_hir_stmt (CrateNum crateNum, HirId id, HIR::Stmt *type)\n+Mappings::insert_hir_stmt (CrateNum crateNum, HirId id, HIR::Stmt *stmt)\n {\n   rust_assert (lookup_hir_stmt (crateNum, id) == nullptr);\n \n-  hirStmtMappings[crateNum][id] = type;\n-  nodeIdToHirMappings[crateNum][type->get_mappings ().get_nodeid ()] = id;\n+  hirStmtMappings[crateNum][id] = stmt;\n+  insert_node_to_hir (crateNum, stmt->get_mappings ().get_nodeid (), id);\n }\n \n HIR::Stmt *\n@@ -554,7 +554,7 @@ Mappings::insert_hir_param (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_stmt (crateNum, id) == nullptr);\n \n   hirParamMappings[crateNum][id] = param;\n-  nodeIdToHirMappings[crateNum][param->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, param->get_mappings ().get_nodeid (), id);\n }\n \n HIR::FunctionParam *\n@@ -578,7 +578,7 @@ Mappings::insert_hir_self_param (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_stmt (crateNum, id) == nullptr);\n \n   hirSelfParamMappings[crateNum][id] = param;\n-  nodeIdToHirMappings[crateNum][param->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, param->get_mappings ().get_nodeid (), id);\n }\n \n HIR::SelfParam *\n@@ -602,7 +602,7 @@ Mappings::insert_hir_struct_field (CrateNum crateNum, HirId id,\n   rust_assert (lookup_hir_stmt (crateNum, id) == nullptr);\n \n   hirStructFieldMappings[crateNum][id] = field;\n-  nodeIdToHirMappings[crateNum][field->get_mappings ().get_nodeid ()] = id;\n+  insert_node_to_hir (crateNum, field->get_mappings ().get_nodeid (), id);\n }\n \n HIR::StructExprField *\n@@ -624,8 +624,8 @@ Mappings::insert_hir_pattern (CrateNum crateNum, HirId id,\n \t\t\t      HIR::Pattern *pattern)\n {\n   hirPatternMappings[crateNum][id] = pattern;\n-  nodeIdToHirMappings[crateNum][pattern->get_pattern_mappings ().get_nodeid ()]\n-    = id;\n+  insert_node_to_hir (crateNum, pattern->get_pattern_mappings ().get_nodeid (),\n+\t\t      id);\n }\n \n HIR::Pattern *\n@@ -684,6 +684,7 @@ void\n Mappings::insert_node_to_hir (CrateNum crate, NodeId id, HirId ref)\n {\n   nodeIdToHirMappings[crate][id] = ref;\n+  hirIdToNodeMappings[crate][ref] = id;\n }\n \n bool\n@@ -701,6 +702,21 @@ Mappings::lookup_node_to_hir (CrateNum crate, NodeId id, HirId *ref)\n   return true;\n }\n \n+bool\n+Mappings::lookup_hir_to_node (CrateNum crate, HirId id, NodeId *ref)\n+{\n+  auto it = hirIdToNodeMappings.find (crate);\n+  if (it == hirIdToNodeMappings.end ())\n+    return false;\n+\n+  auto iy = it->second.find (id);\n+  if (iy == it->second.end ())\n+    return false;\n+\n+  *ref = iy->second;\n+  return true;\n+}\n+\n void\n Mappings::insert_location (CrateNum crate, HirId id, Location locus)\n {"}, {"sha": "65f86616d56ac466f7af1c1ec82a80deb648e40b", "filename": "gcc/rust/util/rust-hir-map.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a41cce91795561c2b007cb25ad4e43b53d126a/gcc%2Frust%2Futil%2Frust-hir-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a41cce91795561c2b007cb25ad4e43b53d126a/gcc%2Frust%2Futil%2Frust-hir-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.h?ref=64a41cce91795561c2b007cb25ad4e43b53d126a", "patch": "@@ -177,7 +177,7 @@ class Mappings\n   void insert_hir_type (CrateNum crateNum, HirId id, HIR::Type *type);\n   HIR::Type *lookup_hir_type (CrateNum crateNum, HirId id);\n \n-  void insert_hir_stmt (CrateNum crateNum, HirId id, HIR::Stmt *type);\n+  void insert_hir_stmt (CrateNum crateNum, HirId id, HIR::Stmt *stmt);\n   HIR::Stmt *lookup_hir_stmt (CrateNum crateNum, HirId id);\n \n   void insert_hir_param (CrateNum crateNum, HirId id, HIR::FunctionParam *type);\n@@ -199,6 +199,7 @@ class Mappings\n \n   void insert_node_to_hir (CrateNum crate, NodeId id, HirId ref);\n   bool lookup_node_to_hir (CrateNum crate, NodeId id, HirId *ref);\n+  bool lookup_hir_to_node (CrateNum crate, HirId id, NodeId *ref);\n \n   void insert_location (CrateNum crate, HirId id, Location locus);\n   Location lookup_location (CrateNum crate, HirId id);\n@@ -376,8 +377,8 @@ class Mappings\n   // location info\n   std::map<CrateNum, std::map<NodeId, Location>> locations;\n \n-  // reverse mappings\n   std::map<CrateNum, std::map<NodeId, HirId>> nodeIdToHirMappings;\n+  std::map<CrateNum, std::map<HirId, NodeId>> hirIdToNodeMappings;\n \n   // all hirid nodes\n   std::map<CrateNum, std::set<HirId>> hirNodesWithinCrate;"}]}