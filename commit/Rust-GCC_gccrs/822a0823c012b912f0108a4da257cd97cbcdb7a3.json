{"sha": "822a0823c012b912f0108a4da257cd97cbcdb7a3", "node_id": "C_kwDOANBUbNoAKDgyMmEwODIzYzAxMmI5MTJmMDEwOGE0ZGEyNTdjZDk3Y2JjZGI3YTM", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-12T10:58:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-17T08:53:49Z"}, "message": "[PR68097] Try to avoid recursing for floats in gimple_stmt_nonnegative_warnv_p.\n\nIt irks me that a PR named \"we should track ranges for floating-point\nhasn't been closed in this release.  This is an attempt to do just\nthat.\n\nAs mentioned in the PR, even though we track ranges for floats, it has\nbeen suggested that avoiding recursing through SSA defs in\ngimple_assign_nonnegative_warnv_p is also a goal.  This patch uses a\nglobal range query (no on-demand lookups, just global ranges and\nminimal folding) to determine if the range of a statement is known to\nbe non-negative.\n\n\tPR tree-optimization/68097\n\ngcc/ChangeLog:\n\n\t* gimple-fold.cc (gimple_stmt_nonnegative_warnv_p): Call\n\trange_of_stmt for floats.", "tree": {"sha": "1b8b9c9bd05a0cac01a7d3b9df585a8b78e22b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b8b9c9bd05a0cac01a7d3b9df585a8b78e22b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/822a0823c012b912f0108a4da257cd97cbcdb7a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a0823c012b912f0108a4da257cd97cbcdb7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822a0823c012b912f0108a4da257cd97cbcdb7a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a0823c012b912f0108a4da257cd97cbcdb7a3/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "156f523f9582f1e6bcce27ece03f2776960408c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156f523f9582f1e6bcce27ece03f2776960408c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156f523f9582f1e6bcce27ece03f2776960408c8"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c2d9c806aee3fab852b0e7ff75995d0c39defa10", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822a0823c012b912f0108a4da257cd97cbcdb7a3/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822a0823c012b912f0108a4da257cd97cbcdb7a3/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=822a0823c012b912f0108a4da257cd97cbcdb7a3", "patch": "@@ -68,6 +68,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-strlen.h\"\n #include \"varasm.h\"\n #include \"internal-fn.h\"\n+#include \"gimple-range.h\"\n \n enum strlen_range_kind {\n   /* Compute the exact constant string length.  */\n@@ -9234,6 +9235,15 @@ bool\n gimple_stmt_nonnegative_warnv_p (gimple *stmt, bool *strict_overflow_p,\n \t\t\t\t int depth)\n {\n+  tree type = gimple_range_type (stmt);\n+  if (type && frange::supports_p (type))\n+    {\n+      frange r;\n+      bool sign;\n+      if (get_global_range_query ()->range_of_stmt (r, stmt)\n+\t  && r.signbit_p (sign))\n+\treturn !sign;\n+    }\n   switch (gimple_code (stmt))\n     {\n     case GIMPLE_ASSIGN:"}]}