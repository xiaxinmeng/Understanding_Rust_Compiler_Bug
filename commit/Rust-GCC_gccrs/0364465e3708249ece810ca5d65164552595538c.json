{"sha": "0364465e3708249ece810ca5d65164552595538c", "node_id": "C_kwDOANBUbNoAKDAzNjQ0NjVlMzcwODI0OWVjZTgxMGNhNWQ2NTE2NDU1MjU5NTUzOGM", "commit": {"author": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2022-04-03T22:22:13Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2022-04-03T22:24:23Z"}, "message": "[committed][PR target/104987] Avoid \"likely\" forms of bbi[n] on iq2000.\n\nThe iq2000 port is mis-compiling its mulsi3 libgcc2 function.\n\nAFAICT, the iq2000 has delay slots and can use \"branch-likely\" forms of conditional branches to annul-false the slot.   There's a support routine that handles creation of the  likely form.  However, that routine is not used by the bbi[n] instructions.\n\nIf I manually add the likely extension to the bbi[b] instructions, the assembler complains  After a fair amount of digging it appears that the likely forms of bbi[n] are only supported on the IQ10 variant.\n\nGiven this is a dead processor and has been so for a while it seems reasonable to just disallow annul-false slots for the bbi[n] instructions rather than try to handle them just for the IQ10 (which we don't have real support for anyway).\n\nThis (of course) fixes the vrp13 regression.  But it also fixes nearly a thousand execution test failures in the testsuite (Yow!).\n\ngcc/\n\tPR target/104987\n\t* config/iq2000/iq2000.md (bbi): New attribute,  default to no.\n\t(delay slot descripts): Use different delay slot description when\n\tthe insn as the \"bbi\" attribute.\n\t(bbi, bbin patterns): Set the bbi attribute to yes.", "tree": {"sha": "af275d125bc97891bf828c29ff13b07ae2f77eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af275d125bc97891bf828c29ff13b07ae2f77eff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0364465e3708249ece810ca5d65164552595538c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0364465e3708249ece810ca5d65164552595538c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0364465e3708249ece810ca5d65164552595538c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0364465e3708249ece810ca5d65164552595538c/comments", "author": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a74058b784c845e84a0cf1997b54b984df483d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a74058b784c845e84a0cf1997b54b984df483d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a74058b784c845e84a0cf1997b54b984df483d"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "86361e27a86f84a80f44a3321dea189ab4948bde", "filename": "gcc/config/iq2000/iq2000.md", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0364465e3708249ece810ca5d65164552595538c/gcc%2Fconfig%2Fiq2000%2Fiq2000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0364465e3708249ece810ca5d65164552595538c/gcc%2Fconfig%2Fiq2000%2Fiq2000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.md?ref=0364465e3708249ece810ca5d65164552595538c", "patch": "@@ -165,6 +165,8 @@\n \t\t (const_string \"yes\")\n \t\t (const_string \"no\"))))\n \n+;; Is this a bbi instruction or not\n+(define_attr \"bbi\" \"no,yes\" (const_string \"no\"))\n \n ;; Describe a user's asm statement.\n (define_asm_attributes\n@@ -183,11 +185,18 @@\n    (nil)\n    (nil)])\n \n-(define_delay (eq_attr \"type\" \"branch\")\n+;; GAS refuses to assemble bbi[n]l.  So for bbi instructions, do not\n+;; allow them to annul-false.\n+(define_delay (and (eq_attr \"type\" \"branch\") (eq_attr \"bbi\" \"no\"))\n   [(and (eq_attr \"dslot\" \"ok_in_dslot\") (eq_attr \"length\" \"4\"))\n    (nil)\n    (and (eq_attr \"branch_likely\" \"yes\") (and (eq_attr \"dslot\" \"ok_in_dslot\") (eq_attr \"length\" \"4\")))])\n \n+(define_delay (and (eq_attr \"type\" \"branch\") (eq_attr \"bbi\" \"yes\"))\n+  [(and (eq_attr \"dslot\" \"ok_in_dslot\") (eq_attr \"length\" \"4\"))\n+   (nil)\n+   (nil)])\n+\n (define_delay (eq_attr \"type\" \"call\")\n   [(and (eq_attr \"dslot\" \"ok_in_dslot\") (eq_attr \"length\" \"4\"))\n    (nil)\n@@ -1114,7 +1123,8 @@\n   \"\"\n   \"bb%A2\\\\t%0(31-%1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"branch\")])\n+   (set_attr \"type\" \"branch\")\n+   (set_attr \"bbi\" \"yes\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1128,7 +1138,8 @@\n   \"\"\n   \"bb%A3\\\\t%0(31-%1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"branch\")])\n+   (set_attr \"type\" \"branch\")\n+   (set_attr \"bbi\" \"yes\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1142,7 +1153,8 @@\n   \"0\"\n   \"bb%A2\\\\t%0(31-%1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"branch\")])\n+   (set_attr \"type\" \"branch\")\n+   (set_attr \"bbi\" \"yes\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1156,7 +1168,8 @@\n   \"0\"\n   \"bb%A3\\\\t%0(31-%1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"branch\")])\n+   (set_attr \"type\" \"branch\")\n+   (set_attr \"bbi\" \"yes\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1169,7 +1182,8 @@\n   \"\"\n   \"bb%A3\\\\t%0(%p1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"branch\")])\n+   (set_attr \"type\" \"branch\")\n+   (set_attr \"bbi\" \"yes\")])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1182,7 +1196,8 @@\n   \"\"\n   \"bb%A2\\\\t%0(%p1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"branch\")])\n+   (set_attr \"type\" \"branch\")\n+   (set_attr \"bbi\" \"yes\")])\n \f\n ;;\n ;;  ...................."}]}