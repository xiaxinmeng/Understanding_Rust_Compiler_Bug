{"sha": "615ccdd3581c6702e259e045380878dd60c56123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE1Y2NkZDM1ODFjNjcwMmUyNTllMDQ1MzgwODc4ZGQ2MGM1NjEyMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-05-06T09:20:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-05-06T09:20:44Z"}, "message": "5500.md (ir_vr55_store): Set latency to 0.\n\n\t* config/mips/5500.md (ir_vr55_store): Set latency to 0.\n\t(ir_vr55_hilo): Split into...\n\t(ir_vr55_mfhilo, ir_vr55_mthilo): ...these new reservations.\n\t(ir_vr55_imul_si, ir_vr55_imadd): Change latency to 5.\n\t(ir_vr55_imul_di): Change latency to 9.  Reserve vr55_mac for 4 cycles.\n\tAdd various multiplication bypasses.\n\t* config/mips/mips.c (mips_rtx_costs): Adjust VR5500 costs for integer\n\tmultiplication.\n\nFrom-SVN: r81557", "tree": {"sha": "2db1b24ecc65b1b48a35b011fc1fb0ae2ad9b422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2db1b24ecc65b1b48a35b011fc1fb0ae2ad9b422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/615ccdd3581c6702e259e045380878dd60c56123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615ccdd3581c6702e259e045380878dd60c56123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615ccdd3581c6702e259e045380878dd60c56123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615ccdd3581c6702e259e045380878dd60c56123/comments", "author": null, "committer": null, "parents": [{"sha": "152e35652a93e5349342d6579ea2ce6b01976a14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152e35652a93e5349342d6579ea2ce6b01976a14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152e35652a93e5349342d6579ea2ce6b01976a14"}], "stats": {"total": 77, "additions": 63, "deletions": 14}, "files": [{"sha": "ebddaf54fd0f07c1eeb37366cf1d632696b7c84d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615ccdd3581c6702e259e045380878dd60c56123/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615ccdd3581c6702e259e045380878dd60c56123/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=615ccdd3581c6702e259e045380878dd60c56123", "patch": "@@ -1,3 +1,14 @@\n+2004-05-06  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/5500.md (ir_vr55_store): Set latency to 0.\n+\t(ir_vr55_hilo): Split into...\n+\t(ir_vr55_mfhilo, ir_vr55_mthilo): ...these new reservations.\n+\t(ir_vr55_imul_si, ir_vr55_imadd): Change latency to 5.\n+\t(ir_vr55_imul_di): Change latency to 9.  Reserve vr55_mac for 4 cycles.\n+\tAdd various multiplication bypasses.\n+\t* config/mips/mips.c (mips_rtx_costs): Adjust VR5500 costs for integer\n+\tmultiplication.\n+\n 2004-05-06  Uros Bizjak  <uros@kss-loka.si>\n \n \t* config/i386/i386.md (*fscalexf4): Correct insn \"mode\""}, {"sha": "d5344227d0a2af56b0b6a6418cf57438d93702ff", "filename": "gcc/config/mips/5500.md", "status": "modified", "additions": 49, "deletions": 11, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615ccdd3581c6702e259e045380878dd60c56123/gcc%2Fconfig%2Fmips%2F5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615ccdd3581c6702e259e045380878dd60c56123/gcc%2Fconfig%2Fmips%2F5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5500.md?ref=615ccdd3581c6702e259e045380878dd60c56123", "patch": "@@ -31,7 +31,12 @@\n        (eq_attr \"type\" \"load,fpload,fpidxload\"))\n   \"vr55_mem\")\n \n-(define_insn_reservation \"ir_vr55_store\" 1\n+(define_bypass 4\n+  \"ir_vr55_load\"\n+  \"ir_vr55_mthilo,ir_vr55_imul_si,ir_vr55_imul_di,ir_vr55_imadd,\n+   ir_vr55_idiv_si,ir_vr55_idiv_di\")\n+\n+(define_insn_reservation \"ir_vr55_store\" 0\n   (and (eq_attr \"cpu\" \"r5500\")\n        (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n   \"vr55_mem\")\n@@ -49,33 +54,66 @@\n        (eq_attr \"type\" \"xfer\"))\n   \"vr55_dp0|vr55_dp1\")\n \n-(define_insn_reservation \"ir_vr55_hilo\" 2\n-  (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"mthilo,mfhilo\"))\n-  \"vr55_dp0|vr55_dp1\")\n-\n (define_insn_reservation \"ir_vr55_arith\" 1\n   (and (eq_attr \"cpu\" \"r5500\")\n        (eq_attr \"type\" \"arith,shift,slt,clz,const,nop,trap\"))\n   \"vr55_dp0|vr55_dp1\")\n \n-(define_insn_reservation \"ir_vr55_imul_si\" 3\n+(define_bypass 2\n+  \"ir_vr55_arith\"\n+  \"ir_vr55_mthilo,ir_vr55_imul_si,ir_vr55_imul_di,ir_vr55_imadd,\n+   ir_vr55_idiv_si,ir_vr55_idiv_di\")\n+\n+(define_insn_reservation \"ir_vr55_mthilo\" 1\n+  (and (eq_attr \"cpu\" \"r5500\")\n+       (eq_attr \"type\" \"mthilo\"))\n+  \"vr55_mac\")\n+\n+(define_insn_reservation \"ir_vr55_mfhilo\" 5\n+  (and (eq_attr \"cpu\" \"r5500\")\n+       (eq_attr \"type\" \"mfhilo\"))\n+  \"vr55_mac\")\n+\n+;; The default latency is for the GPR result of a mul.  Bypasses handle the\n+;; latency of {mul,mult}->{mfhi,mflo}.\n+(define_insn_reservation \"ir_vr55_imul_si\" 5\n   (and (eq_attr \"cpu\" \"r5500\")\n        (and (eq_attr \"type\" \"imul\")\n             (eq_attr \"mode\" \"SI\")))\n   \"vr55_mac\")\n \n-(define_insn_reservation \"ir_vr55_imul_di\" 4\n+;; The default latency is for pre-reload scheduling and handles the case\n+;; where a pseudo destination will be stored in a GPR (as it usually is).\n+;; The delay includes the latency of the dmult itself and the anticipated\n+;; mflo or mfhi.\n+;;\n+;; Once the mflo or mfhi has been created, bypasses handle the latency\n+;; between it and the dmult.\n+(define_insn_reservation \"ir_vr55_imul_di\" 9\n   (and (eq_attr \"cpu\" \"r5500\")\n        (and (eq_attr \"type\" \"imul\")\n             (eq_attr \"mode\" \"DI\")))\n-  \"vr55_mac\")\n+  \"vr55_mac*4\")\n \n-(define_insn_reservation \"ir_vr55_imadd_si\" 3\n+;; The default latency is as for ir_vr55_imul_si.\n+(define_insn_reservation \"ir_vr55_imadd\" 5\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"imul\"))\n+       (eq_attr \"type\" \"imadd\"))\n   \"vr55_mac\")\n \n+(define_bypass 1\n+  \"ir_vr55_imul_si,ir_vr55_imadd\"\n+  \"ir_vr55_imadd\"\n+  \"mips_linked_madd_p\")\n+\n+(define_bypass 2\n+  \"ir_vr55_imul_si,ir_vr55_imadd\"\n+  \"ir_vr55_mfhilo\")\n+\n+(define_bypass 4\n+  \"ir_vr55_imul_di\"\n+  \"ir_vr55_mfhilo\")\n+\n ;; Divide algorithm is early out with best latency of 7 pcycles.\n ;; Use worst case for scheduling purposes.\n (define_insn_reservation \"ir_vr55_idiv_si\" 42"}, {"sha": "ad5a48e8a408e099964d1071d59ac68e7575629a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615ccdd3581c6702e259e045380878dd60c56123/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615ccdd3581c6702e259e045380878dd60c56123/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=615ccdd3581c6702e259e045380878dd60c56123", "patch": "@@ -2347,9 +2347,9 @@ mips_rtx_costs (rtx x, int code, int outer_code, int *total)\n         *total = COSTS_N_INSNS (12);\n       else if (TUNE_MIPS3900)\n         *total = COSTS_N_INSNS (2);\n-      else if (TUNE_MIPS5400 || TUNE_MIPS5500 || TUNE_SB1)\n-        *total = COSTS_N_INSNS ((mode == DImode) ? 4 : 3);\n-      else if (TUNE_MIPS7000)\n+      else if (TUNE_MIPS5400 || TUNE_SB1)\n+        *total = COSTS_N_INSNS (mode == DImode ? 4 : 3);\n+      else if (TUNE_MIPS5500 || TUNE_MIPS7000)\n         *total = COSTS_N_INSNS (mode == DImode ? 9 : 5);\n       else if (TUNE_MIPS9000)\n         *total = COSTS_N_INSNS (mode == DImode ? 8 : 3);"}]}