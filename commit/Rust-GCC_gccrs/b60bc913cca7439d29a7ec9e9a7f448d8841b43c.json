{"sha": "b60bc913cca7439d29a7ec9e9a7f448d8841b43c", "node_id": "C_kwDOANBUbNoAKGI2MGJjOTEzY2NhNzQzOWQyOWE3ZWM5ZTlhN2Y0NDhkODg0MWI0M2M", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-19T12:53:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-19T12:53:12Z"}, "message": "i386: Don't emit pushf;pop for __builtin_ia32_readeflags_u* with unused lhs [PR104971]\n\n__builtin_ia32_readeflags_u* aren't marked const or pure I think\nintentionally, so that they aren't CSEd from different regions of a function\netc. because we don't and can't easily track all dependencies between\nit and surrounding code (if somebody looks at the condition flags, it is\ndependent on the vast majority of instructions).\nBut the builtin itself doesn't have any side-effects, so if we ignore the\nresult of the builtin, there is no point to emit anything.\n\nThere is a LRA bug that miscompiles the testcase which this patch makes\nlatent, which is certainly worth fixing too, but IMHO this change\n(and maybe ix86_gimple_fold_builtin too which would fold it even earlier\nwhen it looses lhs) is worth it as well.\n\n2022-03-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/104971\n\t* config/i386/i386-expand.cc\n\t(ix86_expand_builtin) <case IX86_BUILTIN_READ_FLAGS>: If ignore,\n\tdon't push/pop anything and just return const0_rtx.\n\n\t* gcc.target/i386/pr104971.c: New test.", "tree": {"sha": "a615a4eed338252dc3952782ddc6ce65855f290e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a615a4eed338252dc3952782ddc6ce65855f290e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60bc913cca7439d29a7ec9e9a7f448d8841b43c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60bc913cca7439d29a7ec9e9a7f448d8841b43c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60bc913cca7439d29a7ec9e9a7f448d8841b43c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60bc913cca7439d29a7ec9e9a7f448d8841b43c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2663d18356b0a62f5a800c7e5596d814cd3c2c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2663d18356b0a62f5a800c7e5596d814cd3c2c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2663d18356b0a62f5a800c7e5596d814cd3c2c41"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "22728545b83b9d50c0ca6e5f0f3b585626524767", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60bc913cca7439d29a7ec9e9a7f448d8841b43c/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60bc913cca7439d29a7ec9e9a7f448d8841b43c/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=b60bc913cca7439d29a7ec9e9a7f448d8841b43c", "patch": "@@ -13556,6 +13556,9 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       return target;\n \n     case IX86_BUILTIN_READ_FLAGS:\n+      if (ignore)\n+\treturn const0_rtx;\n+\n       emit_insn (gen_push (gen_rtx_REG (word_mode, FLAGS_REG)));\n \n       if (optimize"}, {"sha": "80ac6b613f1aa581f6e23076a6c82d35654ff394", "filename": "gcc/testsuite/gcc.target/i386/pr104971.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60bc913cca7439d29a7ec9e9a7f448d8841b43c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104971.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60bc913cca7439d29a7ec9e9a7f448d8841b43c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104971.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104971.c?ref=b60bc913cca7439d29a7ec9e9a7f448d8841b43c", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/104971 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <x86intrin.h>\n+\n+__attribute__((noipa)) void\n+foo (void)\n+{\n+  __readeflags ();\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  return 0;\n+}"}]}