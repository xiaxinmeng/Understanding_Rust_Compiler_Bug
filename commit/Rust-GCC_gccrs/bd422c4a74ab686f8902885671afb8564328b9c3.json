{"sha": "bd422c4a74ab686f8902885671afb8564328b9c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ0MjJjNGE3NGFiNjg2Zjg5MDI4ODU2NzFhZmI4NTY0MzI4YjljMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-26T13:29:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-26T13:29:14Z"}, "message": "re PR tree-optimization/45056 (ICE: in refs_may_alias_p_1, at tree-ssa-alias.c:1023)\n\n2010-07-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/45056\n\t* gimple-fold.c (fold_stmt_1): Also fold references in\n\tdebug stmts.\n\n\t* g++.dg/pr45056.C: New testcase.\n\nFrom-SVN: r162536", "tree": {"sha": "d79fd31113105885baed67230b6f97b7bb452a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d79fd31113105885baed67230b6f97b7bb452a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd422c4a74ab686f8902885671afb8564328b9c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd422c4a74ab686f8902885671afb8564328b9c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd422c4a74ab686f8902885671afb8564328b9c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd422c4a74ab686f8902885671afb8564328b9c3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e093ffe3c293fb22b4d9715159b604f29bacdcb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e093ffe3c293fb22b4d9715159b604f29bacdcb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e093ffe3c293fb22b4d9715159b604f29bacdcb5"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "1b32e5051e0e7b1247981a2f98a4843fb217de9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd422c4a74ab686f8902885671afb8564328b9c3", "patch": "@@ -1,3 +1,9 @@\n+2010-07-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/45056\n+\t* gimple-fold.c (fold_stmt_1): Also fold references in\n+\tdebug stmts.\n+\n 2010-07-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45071"}, {"sha": "5953d6a7593c7f96f01b4d8dd5ebe157bb3ad770", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=bd422c4a74ab686f8902885671afb8564328b9c3", "patch": "@@ -1530,6 +1530,23 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace)\n \t}\n       break;\n \n+    case GIMPLE_DEBUG:\n+      if (gimple_debug_bind_p (stmt))\n+\t{\n+\t  tree val = gimple_debug_bind_get_value (stmt);\n+\t  if (val\n+\t      && REFERENCE_CLASS_P (val))\n+\t    {\n+\t      tree tem = maybe_fold_reference (val, false);\n+\t      if (tem)\n+\t\t{\n+\t\t  gimple_debug_bind_set_value (stmt, tem);\n+\t\t  changed = true;\n+\t\t}\n+\t    }\n+\t}\n+      break;\n+\n     default:;\n     }\n "}, {"sha": "52d94d2166df11336d06bfddd2ae905cc66aa430", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd422c4a74ab686f8902885671afb8564328b9c3", "patch": "@@ -1,3 +1,8 @@\n+2010-07-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/45056\n+\t* g++.dg/pr45056.C: New testcase.\n+\n 2010-07-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45071"}, {"sha": "a69107e35a463d0d9f301c8930db924d6e07eb03", "filename": "gcc/testsuite/g++.dg/pr45056.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45056.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd422c4a74ab686f8902885671afb8564328b9c3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45056.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45056.C?ref=bd422c4a74ab686f8902885671afb8564328b9c3", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fschedule-insns2 -fschedule-insns -g\" } */\n+\n+template < class _T1, class _T2 > struct pair\n+{\n+  _T1 first;\n+  _T2 second;\n+  pair (_T1 & __a, _T2 & __b)\n+      :first (__a), second (__b)   \n+    {    }\n+}\n+;\n+template < typename _Tp > struct _Vector_base\n+{\n+  ~_Vector_base ();\n+}\n+;\n+template < typename _Tp>struct vector\n+: _Vector_base < _Tp>\n+{\n+  template    <    typename     _ForwardIterator >   inline     void _Destroy (_ForwardIterator)   {  }\n+  _Tp * _M_finish;\n+  ~vector ()\n+    {\n+      _Destroy \t( this->_M_finish);\n+    }\n+}   ;\n+template < typename ITV > struct Box\n+{\n+  Box (const Box &);\n+  Box ();\n+  typedef vector < ITV > Sequence;\n+  Sequence seq;\n+};\n+template < typename D > struct Powerset\n+{\n+  Powerset (const Powerset &y) :reduced (y.reduced) {}\n+  bool reduced;\n+} ;\n+template < typename PS > struct Pointset_Powerset :Powerset <  int >\n+{\n+  Pointset_Powerset ();\n+  int space_dim;\n+} ;\n+pair\n+<\n+Box<int>,\n+Pointset_Powerset < int > >\n+linear_partition ()\n+{\n+  Pointset_Powerset < int > r ;\n+  Box<int> qq;\n+  return pair<Box<int>,Pointset_Powerset < int > >  (qq, r);\n+}"}]}