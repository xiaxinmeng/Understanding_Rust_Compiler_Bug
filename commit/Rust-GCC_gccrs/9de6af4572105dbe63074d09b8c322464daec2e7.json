{"sha": "9de6af4572105dbe63074d09b8c322464daec2e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRlNmFmNDU3MjEwNWRiZTYzMDc0ZDA5YjhjMzIyNDY0ZGFlYzJlNw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2018-11-13T12:51:41Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2018-11-13T12:51:41Z"}, "message": "[ARC] Add support for profiling in glibc.\n\nUse PROFILE_HOOK to add mcount library calls in each toolchain.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.h (FUNCTION_PROFILER): Redefine to empty.\n\t* config/arc/elf.h (PROFILE_HOOK): Define.\n\t* config/arc/linux.h (PROFILE_HOOK): Likewise.\n\nFrom-SVN: r266068", "tree": {"sha": "701d22462fb8e2e5f24ac4351555887d2e1be97e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701d22462fb8e2e5f24ac4351555887d2e1be97e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9de6af4572105dbe63074d09b8c322464daec2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9de6af4572105dbe63074d09b8c322464daec2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9de6af4572105dbe63074d09b8c322464daec2e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9de6af4572105dbe63074d09b8c322464daec2e7/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dddc18157283e3ab2a3a4c32ededae2386a54bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dddc18157283e3ab2a3a4c32ededae2386a54bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dddc18157283e3ab2a3a4c32ededae2386a54bb3"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "3f94aeb8080a2508e7dc623a3135d82fb6cba2ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9de6af4572105dbe63074d09b8c322464daec2e7", "patch": "@@ -1,3 +1,9 @@\n+2018-11-13  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.h (FUNCTION_PROFILER): Redefine to empty.\n+\t* config/arc/elf.h (PROFILE_HOOK): Define.\n+\t* config/arc/linux.h (PROFILE_HOOK): Likewise.\n+\n 2018-11-13  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (hwloop_optimize): Bailout when detecting a"}, {"sha": "b81b0e7ba33d3c48028bd96164d631b56e80b529", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=9de6af4572105dbe63074d09b8c322464daec2e7", "patch": "@@ -811,15 +811,9 @@ extern int arc_initial_elimination_offset(int from, int to);\n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET)                    \\\n   (OFFSET) = arc_initial_elimination_offset ((FROM), (TO))\n \n-/* Output assembler code to FILE to increment profiler label # LABELNO\n-   for profiling a function entry.  */\n-#define FUNCTION_PROFILER(FILE, LABELNO)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-  if (flag_pic)\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tbl\\t__mcount@plt\\n\");\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tbl\\t__mcount\\n\");\t\t\t\t\\\n-  } while (0)\n+/* All the work done in PROFILE_HOOK, but still required.  */\n+#undef FUNCTION_PROFILER\n+#define FUNCTION_PROFILER(STREAM, LABELNO) do { } while (0)\n \n #define NO_PROFILE_COUNTERS  1\n "}, {"sha": "3aabcf8c9e64896803a5ffa213750aacd8df6507", "filename": "gcc/config/arc/elf.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2Fconfig%2Farc%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2Fconfig%2Farc%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Felf.h?ref=9de6af4572105dbe63074d09b8c322464daec2e7", "patch": "@@ -78,3 +78,12 @@ along with GCC; see the file COPYING3.  If not see\n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC\t\t\t\t\\\n   \"--start-group %G %{!specs=*:%{!nolibc:-lc -lnosys}} --end-group\"\n+\n+/* Emit rtl for profiling.  Output assembler code to FILE\n+   to call \"_mcount\" for profiling a function entry.  */\n+#define PROFILE_HOOK(LABEL)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\\\n+    rtx fun;\t\t\t\t\t\t\t\\\n+    fun = gen_rtx_SYMBOL_REF (Pmode, \"__mcount\");\t\t\\\n+    emit_library_call (fun, LCT_NORMAL, VOIDmode);\t\t\\\n+  }"}, {"sha": "993f445d2a0ad0451ad1dae0f613d4b8c9e5abfd", "filename": "gcc/config/arc/linux.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2Fconfig%2Farc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9de6af4572105dbe63074d09b8c322464daec2e7/gcc%2Fconfig%2Farc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Flinux.h?ref=9de6af4572105dbe63074d09b8c322464daec2e7", "patch": "@@ -123,3 +123,13 @@ along with GCC; see the file COPYING3.  If not see\n \t\t    : \"=r\" (_beg)\t\t\t\t\t\\\n \t\t    : \"0\" (_beg), \"r\" (_end), \"r\" (_xtr), \"r\" (_scno));\t\\\n }\n+\n+/* Emit rtl for profiling.  Output assembler code to FILE\n+   to call \"_mcount\" for profiling a function entry.  */\n+#define PROFILE_HOOK(LABEL)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\\\n+   rtx fun, rt;\t\t\t\t\t\t\t\\\n+   rt = get_hard_reg_initial_val (Pmode, RETURN_ADDR_REGNUM);\t\\\n+   fun = gen_rtx_SYMBOL_REF (Pmode, \"_mcount\");\t\t\t\\\n+   emit_library_call (fun, LCT_NORMAL, VOIDmode, rt, Pmode);\t\\\n+  }"}]}