{"sha": "a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY0NmY2Y2NjMTExM2RiOGQxZmFlYjFhOTAyYjQ0YzFjNzc3NGU4Yw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2002-10-01T12:19:36Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2002-10-01T12:19:36Z"}, "message": "flow.c (insn_dead_p): When using non-call-exceptions, don't eliminate insns that may trap.\n\n2002-09-30  Andrew Haley  <aph@redhat.com>\n\n\t* flow.c (insn_dead_p): When using non-call-exceptions, don't\n\teliminate insns that may trap.\n\t* cse.c (insn_live_p): Likewise.\n\nFrom-SVN: r57688", "tree": {"sha": "150e6abd5f8f691ae4cd7d2c2f60135ff3b9682d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/150e6abd5f8f691ae4cd7d2c2f60135ff3b9682d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f7967e390a7cb0a06527a5ebf8a7f6a040b047b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7967e390a7cb0a06527a5ebf8a7f6a040b047b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f7967e390a7cb0a06527a5ebf8a7f6a040b047b"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "64fa602f84382a4a76cfc8a18010c67754c1f141", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "patch": "@@ -1,3 +1,9 @@\n+2002-09-30  Andrew Haley  <aph@redhat.com>\n+\n+\t* flow.c (insn_dead_p): When using non-call-exceptions, don't \n+\teliminate insns that may trap.\n+\t* cse.c (insn_live_p): Likewise.\n+\n 2002-10-01  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.h (PROCESSOR_R4121): Rename to PROCESSOR_R4120."}, {"sha": "29c771b93f6491ccf3835c48bbb848f6af9204e6", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "patch": "@@ -7582,7 +7582,9 @@ insn_live_p (insn, counts)\n      int *counts;\n {\n   int i;\n-  if (GET_CODE (PATTERN (insn)) == SET)\n+  if (flag_non_call_exceptions && may_trap_p (insn))\n+    return true;\n+  else if (GET_CODE (PATTERN (insn)) == SET)\n     return set_live_p (PATTERN (insn), insn, counts);\n   else if (GET_CODE (PATTERN (insn)) == PARALLEL)\n     {"}, {"sha": "d9e3ae3ce4022cd36ab16996868bf93a1bbdab08", "filename": "gcc/flow.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a646f6ccc1113db8d1faeb1a902b44c1c7774e8c/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=a646f6ccc1113db8d1faeb1a902b44c1c7774e8c", "patch": "@@ -2110,6 +2110,10 @@ insn_dead_p (pbi, x, call_ok, notes)\n {\n   enum rtx_code code = GET_CODE (x);\n \n+  /* Don't eliminate insns that may trap.  */\n+  if (flag_non_call_exceptions && may_trap_p (x))\n+    return 0;\n+\n #ifdef AUTO_INC_DEC\n   /* As flow is invoked after combine, we must take existing AUTO_INC\n      expressions into account.  */"}]}