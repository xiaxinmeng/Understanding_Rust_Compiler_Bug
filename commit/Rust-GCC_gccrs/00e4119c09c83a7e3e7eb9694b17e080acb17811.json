{"sha": "00e4119c09c83a7e3e7eb9694b17e080acb17811", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBlNDExOWMwOWM4M2E3ZTNlN2ViOTY5NGIxN2UwODBhY2IxNzgxMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-12-18T15:18:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-12-18T15:18:20Z"}, "message": "class.c (add_method): Do compare 'this' quals when trying to match a used function.\n\n        * class.c (add_method): Do compare 'this' quals when trying to match a\n        used function.  Don't defer to another used function.\n\nFrom-SVN: r48157", "tree": {"sha": "c0ee817603a2faad5389bdd26f4f18f291dc5b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0ee817603a2faad5389bdd26f4f18f291dc5b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00e4119c09c83a7e3e7eb9694b17e080acb17811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e4119c09c83a7e3e7eb9694b17e080acb17811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e4119c09c83a7e3e7eb9694b17e080acb17811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e4119c09c83a7e3e7eb9694b17e080acb17811/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27aeb83f88b0350b7875cc79ddcef7edbee0df43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27aeb83f88b0350b7875cc79ddcef7edbee0df43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27aeb83f88b0350b7875cc79ddcef7edbee0df43"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "aea8e22820859d5be4439f4bc2f5c6a602449c49", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e4119c09c83a7e3e7eb9694b17e080acb17811/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e4119c09c83a7e3e7eb9694b17e080acb17811/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=00e4119c09c83a7e3e7eb9694b17e080acb17811", "patch": "@@ -1,3 +1,8 @@\n+2001-12-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* class.c (add_method): Do compare 'this' quals when trying to match a\n+\tused function.  Don't defer to another used function.\n+\n 2001-12-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* pt.c (instantiate_clone): Remove, fold into ..."}, {"sha": "c335c0bd28239012e480dfcccdab4165aaa32629", "filename": "gcc/cp/class.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e4119c09c83a7e3e7eb9694b17e080acb17811/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e4119c09c83a7e3e7eb9694b17e080acb17811/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=00e4119c09c83a7e3e7eb9694b17e080acb17811", "patch": "@@ -972,22 +972,38 @@ add_method (type, method, error_p)\n \t      /* [over.load] Member function declarations with the\n \t\t same name and the same parameter types cannot be\n \t\t overloaded if any of them is a static member\n-\t\t function declaration.  */\n+\t\t function declaration.\n+\n+\t         [namespace.udecl] When a using-declaration brings names\n+\t\t from a base class into a derived class scope, member\n+\t\t functions in the derived class override and/or hide member\n+\t\t functions with the same name and parameter types in a base\n+\t\t class (rather than conflicting).  */\n \t      if ((DECL_STATIC_FUNCTION_P (fn)\n \t\t   != DECL_STATIC_FUNCTION_P (method))\n \t\t  || using)\n \t\t{\n \t\t  tree parms1 = TYPE_ARG_TYPES (TREE_TYPE (fn));\n \t\t  tree parms2 = TYPE_ARG_TYPES (TREE_TYPE (method));\n-\n+\t\t  int same = 1;\n+\n+\t\t  /* Compare the quals on the 'this' parm.  Don't compare\n+\t\t     the whole types, as used functions are treated as\n+\t\t     coming from the using class in overload resolution.  */\n+\t\t  if (using\n+\t\t      && ! DECL_STATIC_FUNCTION_P (fn)\n+\t\t      && ! DECL_STATIC_FUNCTION_P (method)\n+\t\t      && (TYPE_QUALS (TREE_TYPE (TREE_VALUE (parms1)))\n+\t\t\t  != TYPE_QUALS (TREE_TYPE (TREE_VALUE (parms2)))))\n+\t\t    same = 0;\n \t\t  if (! DECL_STATIC_FUNCTION_P (fn))\n \t\t    parms1 = TREE_CHAIN (parms1);\n \t\t  if (! DECL_STATIC_FUNCTION_P (method))\n \t\t    parms2 = TREE_CHAIN (parms2);\n \n-\t\t  if (compparms (parms1, parms2))\n+\t\t  if (same && compparms (parms1, parms2))\n \t\t    {\n-\t\t      if (using)\n+\t\t      if (using && DECL_CONTEXT (fn) == type)\n \t\t\t/* Defer to the local function.  */\n \t\t\treturn;\n \t\t      else"}]}