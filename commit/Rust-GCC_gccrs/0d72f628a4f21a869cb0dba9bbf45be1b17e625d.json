{"sha": "0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ3MmY2MjhhNGYyMWE4NjljYjBkYmE5YmJmNDViZTFiMTdlNjI1ZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-06-27T16:20:47Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-06-27T16:20:47Z"}, "message": "re PR libmudflap/38738 (libmudflap could be enabled for Solaris when using GNU ld)\n\n\tgcc:\n\tPR libmudflap/38738\n\t* config/sol2.h [!USE_GLD] (MFLIB_SPEC): Define.\n\n\tlibmudflap:\n\tPR libmudflap/38738\n\t* configure.ac: Check for sys/mnttab.h.\n\tCheck for library containing connect.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\t* mf-hooks2.c [HAVE_SYS_MNTTAB_H]: Include <sys/mnttab.h>.\n\t* testsuite/libmudflap.c/pass-stratcliff.c (main) [__sun__ &&\n\t__svr4__]: Disable rawmemchr, stpcpy, mempcpy tests.\n\nFrom-SVN: r175537", "tree": {"sha": "d89514234626fcbffa26732a65a9f1ddd47c0a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d89514234626fcbffa26732a65a9f1ddd47c0a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd"}], "stats": {"total": 97, "additions": 91, "deletions": 6}, "files": [{"sha": "9d3823a1a46d1e1bddacc616ac2c788d3cc531c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -1,3 +1,8 @@\n+2011-06-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libmudflap/38738\n+\t* config/sol2.h [!USE_GLD] (MFLIB_SPEC): Define.\n+\n 2011-06-27  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.md (clzsi2): Use XOR after BSCH to"}, {"sha": "d9c1fc99a40a14fd2999d7b3ebcbc33d48cdebd9", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -187,6 +187,11 @@ along with GCC; see the file COPYING3.  If not see\n #endif /* HAVE_LD_EH_FRAME && TARGET_DL_ITERATE_PHDR */\n #endif\n \n+#ifndef USE_GLD\n+/* The default MFLIB_SPEC is GNU ld specific.  */\n+#define MFLIB_SPEC \"\"\n+#endif\n+\n /* collect2.c can only parse GNU nm -n output.  Solaris nm needs -png to\n    produce the same format.  */\n #define NM_FLAGS \"-png\""}, {"sha": "f44f0ed18fe0084eeb6d5a26faaaea9f308632e0", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -1,3 +1,14 @@\n+2011-06-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libmudflap/38738\n+\t* configure.ac: Check for sys/mnttab.h.\n+\tCheck for library containing connect.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* mf-hooks2.c [HAVE_SYS_MNTTAB_H]: Include <sys/mnttab.h>.\n+\t* testsuite/libmudflap.c/pass-stratcliff.c (main) [__sun__ &&\n+\t__svr4__]: Disable rawmemchr, stpcpy, mempcpy tests.\n+\n 2011-02-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "16afd05efcdcc008654bc4a6af1c6db446c4a4a3", "filename": "libmudflap/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfig.h.in?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -210,6 +210,9 @@\n /* Define to 1 if you have the <sys/mman.h> header file. */\n #undef HAVE_SYS_MMAN_H\n \n+/* Define to 1 if you have the <sys/mnttab.h> header file. */\n+#undef HAVE_SYS_MNTTAB_H\n+\n /* Define to 1 if you have the <sys/sem.h> header file. */\n #undef HAVE_SYS_SEM_H\n "}, {"sha": "ebf8f2d9ce4cc11384e07eb1b3a745704c828339", "filename": "libmudflap/configure", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -4297,7 +4297,7 @@ done\n \n for ac_header in stdint.h execinfo.h signal.h dlfcn.h dirent.h pwd.h grp.h \\\n   netdb.h sys/ipc.h sys/sem.h sys/shm.h sys/wait.h ctype.h mntent.h \\\n-  sys/socket.h netinet/in.h arpa/inet.h dlfcn.h sys/mman.h\n+  sys/mnttab.h sys/socket.h netinet/in.h arpa/inet.h dlfcn.h sys/mman.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -11063,6 +11063,58 @@ _ACEOF\n fi\n \n \n+ac_fn_c_check_func \"$LINENO\" \"connect\" \"ac_cv_func_connect\"\n+if test \"x$ac_cv_func_connect\" = x\"\"yes; then :\n+\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for connect in -lsocket\" >&5\n+$as_echo_n \"checking for connect in -lsocket... \" >&6; }\n+if test \"${ac_cv_lib_socket_connect+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lsocket  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char connect ();\n+int\n+main ()\n+{\n+return connect ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_socket_connect=yes\n+else\n+  ac_cv_lib_socket_connect=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_socket_connect\" >&5\n+$as_echo \"$ac_cv_lib_socket_connect\" >&6; }\n+if test \"x$ac_cv_lib_socket_connect\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBSOCKET 1\n+_ACEOF\n+\n+  LIBS=\"-lsocket $LIBS\"\n+\n+fi\n+\n+fi\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in"}, {"sha": "b61b56f2708eb2405ec304c1afd0fba2ee471742", "filename": "libmudflap/configure.ac", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.ac?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -62,7 +62,7 @@ enable_shared=no])\n \n AC_CHECK_HEADERS(stdint.h execinfo.h signal.h dlfcn.h dirent.h pwd.h grp.h \\\n   netdb.h sys/ipc.h sys/sem.h sys/shm.h sys/wait.h ctype.h mntent.h \\\n-  sys/socket.h netinet/in.h arpa/inet.h dlfcn.h sys/mman.h)\n+  sys/mnttab.h sys/socket.h netinet/in.h arpa/inet.h dlfcn.h sys/mman.h)\n \n AC_CHECK_FUNCS(backtrace backtrace_symbols gettimeofday signal)\n AC_CHECK_FUNCS(fopen64 fseeko64 ftello64 stat64 freopen64)\n@@ -147,6 +147,8 @@ AC_SUBST(build_libmudflapth)\n \n AC_CHECK_LIB(dl, dlsym)\n \n+AC_CHECK_FUNC(connect,, AC_CHECK_LIB(socket, connect))\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in"}, {"sha": "77d58131bfa841e236abfd9df7e2bf11f21f1655", "filename": "libmudflap/mf-hooks2.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fmf-hooks2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Fmf-hooks2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks2.c?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -1,5 +1,5 @@\n /* Mudflap: narrow-pointer bounds-checking by tree rewriting.\n-   Copyright (C) 2002, 2003, 2004, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Frank Ch. Eigler <fche@redhat.com>\n    and Graydon Hoare <graydon@redhat.com>\n \n@@ -90,6 +90,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifdef HAVE_MNTENT_H\n #include <mntent.h>\n #endif\n+#ifdef HAVE_SYS_MNTTAB_H\n+#include <sys/mnttab.h>\n+#endif\n #ifdef HAVE_SYS_SOCKET_H\n #include <sys/socket.h>\n #endif\n@@ -2063,6 +2066,7 @@ WRAPPER2(const char *, gai_strerror, int errcode)\n \n \n #ifdef HAVE_GETMNTENT\n+#ifdef HAVE_MNTENT_H\n WRAPPER2(struct mntent *, getmntent, FILE *filep)\n {\n   struct mntent *m;\n@@ -2097,6 +2101,9 @@ WRAPPER2(struct mntent *, getmntent, FILE *filep)\n \n   return m;\n }\n+#elif defined HAVE_SYS_MNTTAB_H\n+/* FIXME: Implement.  */\n+#endif\n #endif\n \n "}, {"sha": "985c796e13c8ca834c2d6ad5aeae9e768b7aa5b5", "filename": "libmudflap/testsuite/libmudflap.c/pass-stratcliff.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Ftestsuite%2Flibmudflap.c%2Fpass-stratcliff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d72f628a4f21a869cb0dba9bbf45be1b17e625d/libmudflap%2Ftestsuite%2Flibmudflap.c%2Fpass-stratcliff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.c%2Fpass-stratcliff.c?ref=0d72f628a4f21a869cb0dba9bbf45be1b17e625d", "patch": "@@ -153,7 +153,7 @@ main (int argc, char *argv[])\n \t    }\n         }\n \n-#ifndef __FreeBSD__\n+#if !defined  __FreeBSD__ && !(defined __sun__ && defined __svr4__)\n       /* rawmemchr test */\n       for (outer = size - 1; outer >= MAX (0, size - 128); --outer)\n         {\n@@ -250,7 +250,7 @@ main (int argc, char *argv[])\n \t    }\n         }\n \n-#ifndef __FreeBSD__\n+#ifndef __FreeBSD__ && !(defined __sun__ && defined __svr4__)\n       /* stpcpy test */\n       for (outer = size - 1; outer >= MAX (0, size - 128); --outer)\n         {\n@@ -302,7 +302,7 @@ main (int argc, char *argv[])\n \t      result = 1;\n \t    }\n \n-#ifndef __FreeBSD__\n+#if !defined __FreeBSD__ && !(defined __sun__ && defined __svr4__)\n       /* mempcpy test */\n       for (outer = size - 1; outer >= MAX (0, size - 128); --outer)\n \tfor (inner = 0; inner < size - outer; ++inner)"}]}