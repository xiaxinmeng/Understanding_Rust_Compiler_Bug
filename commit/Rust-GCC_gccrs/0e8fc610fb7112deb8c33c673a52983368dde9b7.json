{"sha": "0e8fc610fb7112deb8c33c673a52983368dde9b7", "node_id": "C_kwDOANBUbNoAKDBlOGZjNjEwZmI3MTEyZGViOGMzM2M2NzNhNTI5ODMzNjhkZGU5Yjc", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-23T19:57:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-28T15:26:03Z"}, "message": "c-family: -Wsequence-point and COMPONENT_REF [PR107163]\n\nThe patch for PR91415 fixed -Wsequence-point to treat shifts and ARRAY_REF\nas sequenced in C++17, and COMPONENT_REF as well.  But this is unnecessary\nfor COMPONENT_REF, since the RHS is just a FIELD_DECL with no actual\nevaluation, and in this testcase handling COMPONENT_REF as sequenced blows\nup fast in a deep inheritance tree.  Instead, look through it.\n\n\tPR c++/107163\n\ngcc/c-family/ChangeLog:\n\n\t* c-common.cc (verify_tree): Don't use sequenced handling\n\tfor COMPONENT_REF.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/Wsequence-point-5.C: New test.", "tree": {"sha": "deaa252b7d72c7ef6414e4a4089ebca4017b5256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deaa252b7d72c7ef6414e4a4089ebca4017b5256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e8fc610fb7112deb8c33c673a52983368dde9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8fc610fb7112deb8c33c673a52983368dde9b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8fc610fb7112deb8c33c673a52983368dde9b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8fc610fb7112deb8c33c673a52983368dde9b7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a923516ae61ddc6dd863891db13189cbf392411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a923516ae61ddc6dd863891db13189cbf392411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a923516ae61ddc6dd863891db13189cbf392411"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "2b4c82facf7f95560f2d3b0aa50e8412f5809c5b", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8fc610fb7112deb8c33c673a52983368dde9b7/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8fc610fb7112deb8c33c673a52983368dde9b7/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=0e8fc610fb7112deb8c33c673a52983368dde9b7", "patch": "@@ -2154,12 +2154,17 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n \n     case LSHIFT_EXPR:\n     case RSHIFT_EXPR:\n-    case COMPONENT_REF:\n     case ARRAY_REF:\n       if (cxx_dialect >= cxx17)\n \tgoto sequenced_binary;\n       goto do_default;\n \n+    case COMPONENT_REF:\n+      /* Treat as unary, the other operands aren't evaluated.  */\n+      x = TREE_OPERAND (x, 0);\n+      writer = 0;\n+      goto restart;\n+\n     default:\n     do_default:\n       /* For other expressions, simply recurse on their operands."}, {"sha": "0354ab09f53136bf8168cc47e9e5933626a7855e", "filename": "gcc/testsuite/g++.dg/warn/Wsequence-point-5.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8fc610fb7112deb8c33c673a52983368dde9b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsequence-point-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8fc610fb7112deb8c33c673a52983368dde9b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsequence-point-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsequence-point-5.C?ref=0e8fc610fb7112deb8c33c673a52983368dde9b7", "patch": "@@ -0,0 +1,37 @@\n+// PR c++/107163\n+// { dg-additional-options \"-Wsequence-point\" }\n+\n+struct BaseType  {\n+  int i;\n+};\n+\n+template< int Seq >\n+class DerivedType : public DerivedType< Seq - 1 > { };\n+\n+template<>\n+class DerivedType< -1 > : public BaseType { };\n+\n+int main() {\n+  DerivedType< 400 > d;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  d.i = 42;\n+  return d.i;\n+}"}]}