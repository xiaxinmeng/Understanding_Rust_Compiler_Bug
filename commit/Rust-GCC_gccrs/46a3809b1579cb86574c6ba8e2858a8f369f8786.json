{"sha": "46a3809b1579cb86574c6ba8e2858a8f369f8786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZhMzgwOWIxNTc5Y2I4NjU3NGM2YmE4ZTI4NThhOGYzNjlmODc4Ng==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-06-22T19:23:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:08Z"}, "message": "[Ada] Ada2020: AI12-0180 Using subprograms and entries in invariants\n\ngcc/ada/\n\n\t* sem_ch13.adb (Visible_Component): Enable this code for task\n\tand protected types, as well as record and private types.\n\t* sem_ch13.ads (Replace_Type_References_Generic): Update\n\tcomment.  Move the efficiency comment into the body, because\n\tit's about the implementation.", "tree": {"sha": "fb25eeb56f4c5b11a0f9ad06e20da8e1ea6d9b57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb25eeb56f4c5b11a0f9ad06e20da8e1ea6d9b57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46a3809b1579cb86574c6ba8e2858a8f369f8786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a3809b1579cb86574c6ba8e2858a8f369f8786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46a3809b1579cb86574c6ba8e2858a8f369f8786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46a3809b1579cb86574c6ba8e2858a8f369f8786/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acc1708cf088b47919785e6a50fa7a636b3fb82b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc1708cf088b47919785e6a50fa7a636b3fb82b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc1708cf088b47919785e6a50fa7a636b3fb82b"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "28fd1ed080cd8897b4ee701bf2d577f6d8dbbf44", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a3809b1579cb86574c6ba8e2858a8f369f8786/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a3809b1579cb86574c6ba8e2858a8f369f8786/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=46a3809b1579cb86574c6ba8e2858a8f369f8786", "patch": "@@ -14498,11 +14498,9 @@ package body Sem_Ch13 is\n \n       function Visible_Component (Comp : Name_Id) return Entity_Id;\n       --  Given an identifier in the expression, check whether there is a\n-      --  discriminant or component of the type that is directy visible, and\n-      --  rewrite it as the corresponding selected component of the formal of\n-      --  the subprogram. The entity is located by a sequential search, which\n-      --  seems acceptable given the typical size of component lists and check\n-      --  expressions. Possible optimization ???\n+      --  discriminant, component, protected procedure, or entry of the type\n+      --  that is directy visible, and rewrite it as the corresponding selected\n+      --  component of the formal of the subprogram.\n \n       ----------------------\n       -- Replace_Type_Ref --\n@@ -14677,14 +14675,20 @@ package body Sem_Ch13 is\n \n       function Visible_Component (Comp : Name_Id) return Entity_Id is\n          E : Entity_Id;\n-\n       begin\n-         --  Types with nameable components are records and discriminated\n-         --  private types.\n+         --  Types with nameable components are record, task, and protected\n+         --  types, and discriminated private types.\n \n-         if Ekind (T) = E_Record_Type\n+         if Ekind (T) in E_Record_Type\n+                       | E_Task_Type\n+                       | E_Protected_Type\n            or else (Is_Private_Type (T) and then Has_Discriminants (T))\n          then\n+            --  This is a sequential search, which seems acceptable\n+            --  efficiency-wise, given the typical size of component\n+            --  lists, protected operation lists, task item lists, and\n+            --  check expressions.\n+\n             E := First_Entity (T);\n             while Present (E) loop\n                if Comes_From_Source (E) and then Chars (E) = Comp then\n@@ -14695,7 +14699,7 @@ package body Sem_Ch13 is\n             end loop;\n          end if;\n \n-         --  Nothing by that name, or the type has no components\n+         --  Nothing by that name\n \n          return Empty;\n       end Visible_Component;"}, {"sha": "525d3e4ad27804d1458bb32979a4523995e31c85", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46a3809b1579cb86574c6ba8e2858a8f369f8786/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46a3809b1579cb86574c6ba8e2858a8f369f8786/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=46a3809b1579cb86574c6ba8e2858a8f369f8786", "patch": "@@ -164,6 +164,11 @@ package Sem_Ch13 is\n    --  parameter does the actual replacement of node N, which is either a\n    --  simple direct reference to T, or a selected component that represents\n    --  an appropriately qualified occurrence of T.\n+   --\n+   --  This also replaces each reference to a component, entry, or protected\n+   --  procedure with a selected component whose prefix is the parameter.\n+   --  For example, Component_Name becomes Parameter.Component_Name, where\n+   --  Parameter is the parameter, which is of type T.\n \n    function Rep_Item_Too_Late\n      (T     : Entity_Id;"}]}