{"sha": "d6319811c1af2f2a36a83d2079eb986154060e60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYzMTk4MTFjMWFmMmYyYTM2YTgzZDIwNzllYjk4NjE1NDA2MGU2MA==", "commit": {"author": {"name": "Chenghua Xu", "email": "paul.hua.gm@gmail.com", "date": "2018-11-07T08:42:59Z"}, "committer": {"name": "Chenghua Xu", "email": "paulhua@gcc.gnu.org", "date": "2018-11-07T08:42:59Z"}, "message": "Add support for Loongson EXT2 instructions.\n\ngcc/\n\t* config/mips/mips-protos.h\n\t(mips_loongson_ext2_prefetch_cookie): New prototype.\n\t* config/mips/mips.c (mips_loongson_ext2_prefetch_cookie): New.\n\t(mips_option_override): Enable TARGET_LOONGSON_EXT when\n\tTARGET_LOONGSON_EXT2 is true.\n\t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Define\n\t__mips_loongson_ext2, __mips_loongson_ext_rev=2.\n\t(ISA_HAS_CTZ_CTO): New, true if TARGET_LOONGSON_EXT2.\n\t(ISA_HAS_PREFETCH): Include TARGET_LOONGSON_EXT and\n\tTARGET_LOONGSON_EXT2.\n\t(ASM_SPEC): Add mloongson-ext2 and mno-loongson-ext2.\n\t(define_insn \"ctz<mode>2\"): New insn pattern.\n\t(define_insn \"prefetch\"): Include TARGET_LOONGSON_EXT2.\n\t(define_insn \"prefetch_indexed_<mode>\"): Include\n\tTARGET_LOONGSON_EXT and TARGET_LOONGSON_EXT2.\n\t* config/mips/mips.opt (-mloongson-ext2): Add option.\n\t* gcc/doc/invoke.texi (-mloongson-ext2): Document.\n\ngcc/testsuite/\n\t* gcc.target/mips/loongson-ctz.c: New test.\n\t* gcc.target/mips/loongson-dctz.c: Likewise.\n\t* gcc.target/mips/mips.exp (mips_option_groups): Add\n\t-mloongson-ext2 option.\n\nFrom-SVN: r265864", "tree": {"sha": "3f722255f7e301897a38a5bbf0aa031b62f652fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f722255f7e301897a38a5bbf0aa031b62f652fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6319811c1af2f2a36a83d2079eb986154060e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6319811c1af2f2a36a83d2079eb986154060e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6319811c1af2f2a36a83d2079eb986154060e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6319811c1af2f2a36a83d2079eb986154060e60/comments", "author": {"login": "ChenghuaXu", "id": 87753117, "node_id": "MDQ6VXNlcjg3NzUzMTE3", "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChenghuaXu", "html_url": "https://github.com/ChenghuaXu", "followers_url": "https://api.github.com/users/ChenghuaXu/followers", "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}", "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions", "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs", "repos_url": "https://api.github.com/users/ChenghuaXu/repos", "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}", "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "375899d9e47d03f3f2fe6aa6c854ddc855f94d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375899d9e47d03f3f2fe6aa6c854ddc855f94d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375899d9e47d03f3f2fe6aa6c854ddc855f94d76"}], "stats": {"total": 152, "additions": 147, "deletions": 5}, "files": [{"sha": "6a997fd46c7080283bb0a2922adc70fbcad145e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -1,3 +1,23 @@\n+2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* config/mips/mips-protos.h\n+\t(mips_loongson_ext2_prefetch_cookie): New prototype.\n+\t* config/mips/mips.c (mips_loongson_ext2_prefetch_cookie): New.\n+\t(mips_option_override): Enable TARGET_LOONGSON_EXT when\n+\tTARGET_LOONGSON_EXT2 is true.\n+\t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Define\n+\t__mips_loongson_ext2, __mips_loongson_ext_rev=2.\n+\t(ISA_HAS_CTZ_CTO): New, true if TARGET_LOONGSON_EXT2.\n+\t(ISA_HAS_PREFETCH): Include TARGET_LOONGSON_EXT and\n+\tTARGET_LOONGSON_EXT2.\n+\t(ASM_SPEC): Add mloongson-ext2 and mno-loongson-ext2.\n+\t(define_insn \"ctz<mode>2\"): New insn pattern.\n+\t(define_insn \"prefetch\"): Include TARGET_LOONGSON_EXT2.\n+\t(define_insn \"prefetch_indexed_<mode>\"): Include\n+\tTARGET_LOONGSON_EXT and TARGET_LOONGSON_EXT2.\n+\t* config/mips/mips.opt (-mloongson-ext2): Add option.\n+\t* gcc/doc/invoke.texi (-mloongson-ext2): Document.\n+\n 2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Add"}, {"sha": "7cde2424016318330d058698b83aa16ee8a94b13", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -323,6 +323,7 @@ extern bool mips_linked_madd_p (rtx_insn *, rtx_insn *);\n extern bool mips_store_data_bypass_p (rtx_insn *, rtx_insn *);\n extern int mips_dspalu_bypass_p (rtx, rtx);\n extern rtx mips_prefetch_cookie (rtx, rtx);\n+extern rtx mips_loongson_ext2_prefetch_cookie (rtx, rtx);\n \n extern const char *current_section_name (void);\n extern unsigned int current_section_flags (void);"}, {"sha": "1c2075044d04e5d86a3807114d743b2eaa64d8e7", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -15142,6 +15142,22 @@ mips_prefetch_cookie (rtx write, rtx locality)\n   /* store_retained / load_retained.  */\n   return GEN_INT (INTVAL (write) + 6);\n }\n+\n+/* Loongson EXT2 only implements perf hint=0 (prefetch for load) and hint=1\n+   (prefetch for store), other hint just scale to hint = 0 and hint = 1.  */\n+\n+rtx\n+mips_loongson_ext2_prefetch_cookie (rtx write, rtx locality)\n+{\n+  /* store.  */\n+  if (INTVAL (write) == 1)\n+    return GEN_INT (INTVAL (write));\n+\n+  /* load.  */\n+  if (INTVAL (write) == 0)\n+    return GEN_INT (INTVAL (write));\n+}\n+\n \f\n /* Flags that indicate when a built-in function is available.\n \n@@ -20171,6 +20187,18 @@ mips_option_override (void)\n   if (TARGET_LOONGSON_MMI &&  !TARGET_HARD_FLOAT_ABI)\n     error (\"%<-mloongson-mmi%> must be used with %<-mhard-float%>\");\n \n+  /* If TARGET_LOONGSON_EXT2, enable TARGET_LOONGSON_EXT.  */\n+  if (TARGET_LOONGSON_EXT2)\n+    {\n+      /* Make sure that when TARGET_LOONGSON_EXT2 is true, TARGET_LOONGSON_EXT\n+\t is true.  If a user explicitly says -mloongson-ext2 -mno-loongson-ext\n+\t then that is an error.  */\n+      if (!TARGET_LOONGSON_EXT\n+\t  && !((target_flags_explicit & MASK_LOONGSON_EXT) == 0))\n+\terror (\"%<-mloongson-ext2%> must be used with %<-mloongson-ext%>\");\n+      target_flags |= MASK_LOONGSON_EXT;\n+    }\n+\n   /* .eh_frame addresses should be the same width as a C pointer.\n      Most MIPS ABIs support only one pointer size, so the assembler\n      will usually know exactly how big an .eh_frame address is."}, {"sha": "beeb4bcf20dea93592d049397b0f6c0b9ce34b7c", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -600,6 +600,13 @@ struct mips_cpu_info {\n       if (TARGET_LOONGSON_EXT)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  builtin_define (\"__mips_loongson_ext\");\t\t\t\\\n+\t  if (TARGET_LOONGSON_EXT2)\t\t\t\t\t\\\n+\t    {\t\t\t\t\t\t\t\t\\\n+\t      builtin_define (\"__mips_loongson_ext2\");\t\t\t\\\n+\t      builtin_define (\"__mips_loongson_ext_rev=2\");\t\t\\\n+\t    }\t\t\t\t\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\t\\\n+\t      builtin_define (\"__mips_loongson_ext_rev=1\");\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       /* Historical Octeon macro.  */\t\t\t\t\t\\\n@@ -1134,6 +1141,9 @@ struct mips_cpu_info {\n /* ISA has count leading zeroes/ones instruction (not implemented).  */\n #define ISA_HAS_CLZ_CLO\t\t(mips_isa_rev >= 1 && !TARGET_MIPS16)\n \n+/* ISA has count tailing zeroes/ones instruction.  */\n+#define ISA_HAS_CTZ_CTO\t\t(TARGET_LOONGSON_EXT2)\n+\n /* ISA has three operand multiply instructions that put\n    the high part in an accumulator: mulhi or mulhiu.  */\n #define ISA_HAS_MULHI\t\t((TARGET_MIPS5400\t\t\t \\\n@@ -1195,7 +1205,9 @@ struct mips_cpu_info {\n    'prefx', along with TARGET_HARD_FLOAT and TARGET_DOUBLE_FLOAT.\n    (prefx is a cop1x instruction, so can only be used if FP is\n    enabled.)  */\n-#define ISA_HAS_PREFETCHX\tISA_HAS_FP4\n+#define ISA_HAS_PREFETCHX\t(ISA_HAS_FP4\t\t\t\t\\\n+\t\t\t\t || TARGET_LOONGSON_EXT\t\t\t\\\n+\t\t\t\t || TARGET_LOONGSON_EXT2)\n \n /* True if trunc.w.s and trunc.w.d are real (not synthetic)\n    instructions.  Both require TARGET_HARD_FLOAT, and trunc.w.d\n@@ -1379,6 +1391,7 @@ struct mips_cpu_info {\n %{mmsa} %{mno-msa} \\\n %{mloongson-mmi} %{mno-loongson-mmi} \\\n %{mloongson-ext} %{mno-loongson-ext} \\\n+%{mloongson-ext2} %{mno-loongson-ext2} \\\n %{msmartmips} %{mno-smartmips} \\\n %{mmt} %{mno-mt} \\\n %{mfix-rm7000} %{mno-fix-rm7000} \\"}, {"sha": "8358218d8ac4de062925b8eee1b448a63122f55e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 43, "deletions": 4, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -3146,6 +3146,23 @@\n   [(set_attr \"type\" \"clz\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;;\n+;;  ...................\n+;;\n+;;  Count tailing zeroes.\n+;;\n+;;  ...................\n+;;\n+\n+(define_insn \"ctz<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+\t(ctz:GPR (match_operand:GPR 1 \"register_operand\" \"d\")))]\n+  \"ISA_HAS_CTZ_CTO\"\n+  \"<d>ctz\\t%0,%1\"\n+  [(set_attr \"type\" \"clz\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+\n ;;\n ;;  ...................\n ;;\n@@ -7136,13 +7153,20 @@\n \t     (match_operand 2 \"const_int_operand\" \"n\"))]\n   \"ISA_HAS_PREFETCH && TARGET_EXPLICIT_RELOCS\"\n {\n-  if (TARGET_LOONGSON_2EF || TARGET_LOONGSON_EXT)\n+  if (TARGET_LOONGSON_2EF || TARGET_LOONGSON_EXT || TARGET_LOONGSON_EXT2)\n     {\n-      /* Loongson 2[ef] and Loongson 3a use load to $0 for prefetching.  */\n+      /* Loongson ext2 implementation pref insnstructions.  */\n+      if (TARGET_LOONGSON_EXT2)\n+\t{\n+  \t  operands[1] = mips_loongson_ext2_prefetch_cookie (operands[1],\n+\t\t\t\t\t\t\t    operands[2]);\n+\t  return \"pref\\t%1, %a0\";\n+\t}\n+      /* Loongson 2[ef] and Loongson ext use load to $0 for prefetching.  */\n       if (TARGET_64BIT)\n-        return \"ld\\t$0,%a0\";\n+\treturn \"ld\\t$0,%a0\";\n       else\n-        return \"lw\\t$0,%a0\";\n+\treturn \"lw\\t$0,%a0\";\n     }\n   operands[1] = mips_prefetch_cookie (operands[1], operands[2]);\n   return \"pref\\t%1,%a0\";\n@@ -7156,6 +7180,21 @@\n \t     (match_operand 3 \"const_int_operand\" \"n\"))]\n   \"ISA_HAS_PREFETCHX && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n {\n+  if (TARGET_LOONGSON_EXT || TARGET_LOONGSON_EXT2)\n+    {\n+      /* Loongson ext2 implementation pref insnstructions.  */\n+      if (TARGET_LOONGSON_EXT2)\n+\t{\n+  \t  operands[2] = mips_loongson_ext2_prefetch_cookie (operands[2],\n+\t\t\t\t\t\t\t    operands[3]);\n+\t  return \"prefx\\t%2,%1(%0)\";\n+\t}\n+      /* Loongson Loongson ext use index load to $0 for prefetching.  */\n+      if (TARGET_64BIT)\n+\treturn \"gsldx\\t$0,0(%0,%1)\";\n+      else\n+\treturn \"gslwx\\t$0,0(%0,%1)\";\n+    }\n   operands[2] = mips_prefetch_cookie (operands[2], operands[3]);\n   return \"prefx\\t%2,%1(%0)\";\n }"}, {"sha": "c0c8005b025ed34a4fe488c5eee25268c6742010", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -467,3 +467,7 @@ Use Loongson MultiMedia extensions Instructions (MMI) instructions.\n mloongson-ext\n Target Report Mask(LOONGSON_EXT)\n Use Loongson EXTension (EXT) instructions.\n+\n+mloongson-ext2\n+Target Report Mask(LOONGSON_EXT2)\n+Use Loongson EXTension R2 (EXT2) instructions."}, {"sha": "7e5bc7e7ed2917cf6bc6a9496c858cf48e0c302d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -922,6 +922,7 @@ Objective-C and Objective-C++ Dialects}.\n -mmsa  -mno-msa @gol\n -mloongson-mmi  -mno-loongson-mmi @gol\n -mloongson-ext  -mno-loongson-ext @gol\n+-mloongson-ext2  -mno-loongson-ext2 @gol\n -mfpu=@var{fpu-type} @gol\n -msmartmips  -mno-smartmips @gol\n -mpaired-single  -mno-paired-single  -mdmx  -mno-mdmx @gol\n@@ -21300,6 +21301,12 @@ Use (do not use) the MIPS Loongson MultiMedia extensions Instructions (MMI).\n @opindex mno-loongson-ext\n Use (do not use) the MIPS Loongson EXTensions (EXT) instructions.\n \n+@item -mloongson-ext2\n+@itemx -mno-loongson-ext2\n+@opindex mloongson-ext2\n+@opindex mno-loongson-ext2\n+Use (do not use) the MIPS Loongson EXTensions r2 (EXT2) instructions.\n+\n @item -mlong64\n @opindex mlong64\n Force @code{long} types to be 64 bits wide.  See @option{-mlong32} for"}, {"sha": "b834e0480b7d22eef30704cd402fe70f5d0702c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -1,3 +1,10 @@\n+2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* gcc.target/mips/loongson-ctz.c: New test.\n+\t* gcc.target/mips/loongson-dctz.c: Likewise.\n+\t* gcc.target/mips/mips.exp (mips_option_groups): Add\n+\t-mloongson-ext2 option.\n+\n 2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \t* gcc.target/mips/mips.exp (mips_option_groups): Add"}, {"sha": "8df66a00dc1a4b96bc5fb6121101b7d061eef982", "filename": "gcc/testsuite/gcc.target/mips/loongson-ctz.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-ctz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-ctz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-ctz.c?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -0,0 +1,11 @@\n+/* Test cases for Loongson EXT2 instrutions.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-mloongson-ext2\" } */\n+\n+unsigned int foo(unsigned int x)\n+{\n+  return __builtin_ctz (x);\n+}\n+\n+/* { dg-final { scan-assembler \"ctz\\t\" } } */"}, {"sha": "8c47433459f2cb2be71dd2a69041cbb3f1d7bcdd", "filename": "gcc/testsuite/gcc.target/mips/loongson-dctz.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-dctz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-dctz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-dctz.c?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -0,0 +1,11 @@\n+/* Test cases for Loongson EXT2 instrutions.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-mloongson-ext2\" } */\n+\n+unsigned long long foo(unsigned long long x)\n+{\n+  return __builtin_ctzl (x);\n+}\n+\n+/* { dg-final { scan-assembler \"dctz\\t\" } } */"}, {"sha": "e70d416d0ddd2fb1dfeda3e0fffce9ea97f5a47a", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6319811c1af2f2a36a83d2079eb986154060e60/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=d6319811c1af2f2a36a83d2079eb986154060e60", "patch": "@@ -298,6 +298,7 @@ foreach option {\n     msa\n     loongson-mmi\n     loongson-ext\n+    loongson-ext2\n } {\n     lappend mips_option_groups $option \"-m(no-|)$option\"\n }"}]}