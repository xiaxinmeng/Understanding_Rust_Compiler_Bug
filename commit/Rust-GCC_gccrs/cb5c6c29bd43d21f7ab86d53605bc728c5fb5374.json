{"sha": "cb5c6c29bd43d21f7ab86d53605bc728c5fb5374", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1YzZjMjliZDQzZDIxZjdhYjg2ZDUzNjA1YmM3MjhjNWZiNTM3NA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-02-04T13:52:55Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-02-04T13:52:55Z"}, "message": "[AArch64] Use std::swap instead of manually swapping\n\n\t* config/aarch64/aarch64.c (aarch64_evpc_ext): Use std::swap instead\n\tof manual swapping implementation.\n\t(aarch64_expand_vec_perm_const_1): Likewise.\n\nFrom-SVN: r220402", "tree": {"sha": "b11f662cac955c9186605100a9cb74987098835c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b11f662cac955c9186605100a9cb74987098835c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd95e65526b16e3b1441f3a9e60a523b810e3e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd95e65526b16e3b1441f3a9e60a523b810e3e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd95e65526b16e3b1441f3a9e60a523b810e3e8a"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "165f521f806bf51c36595e3e645a6e1f95b1d667", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb5c6c29bd43d21f7ab86d53605bc728c5fb5374", "patch": "@@ -1,3 +1,9 @@\n+2015-02-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_evpc_ext): Use std::swap instead\n+\tof manual swapping implementation.\n+\t(aarch64_expand_vec_perm_const_1): Likewise.\n+\n 2015-02-04  James Greenhalgh <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.c (NAMED_PARAM): Delete it."}, {"sha": "c8e22d5e2c6ae16d495fc26eec3e96126a17febd", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb5c6c29bd43d21f7ab86d53605bc728c5fb5374/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=cb5c6c29bd43d21f7ab86d53605bc728c5fb5374", "patch": "@@ -9832,9 +9832,7 @@ aarch64_evpc_ext (struct expand_vec_perm_d *d)\n       /* After setup, we want the high elements of the first vector (stored\n          at the LSB end of the register), and the low elements of the second\n          vector (stored at the MSB end of the register). So swap.  */\n-      rtx temp = d->op0;\n-      d->op0 = d->op1;\n-      d->op1 = temp;\n+      std::swap (d->op0, d->op1);\n       /* location != 0 (above), so safe to assume (nelt - location) < nelt.  */\n       location = nelt - location;\n     }\n@@ -10005,15 +10003,12 @@ aarch64_expand_vec_perm_const_1 (struct expand_vec_perm_d *d)\n   if (d->perm[0] >= d->nelt)\n     {\n       unsigned i, nelt = d->nelt;\n-      rtx x;\n \n       gcc_assert (nelt == (nelt & -nelt));\n       for (i = 0; i < nelt; ++i)\n \td->perm[i] ^= nelt; /* Keep the same index, but in the other vector.  */\n \n-      x = d->op0;\n-      d->op0 = d->op1;\n-      d->op1 = x;\n+      std::swap (d->op0, d->op1);\n     }\n \n   if (TARGET_SIMD)"}]}