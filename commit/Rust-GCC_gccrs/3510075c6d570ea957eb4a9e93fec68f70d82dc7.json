{"sha": "3510075c6d570ea957eb4a9e93fec68f70d82dc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUxMDA3NWM2ZDU3MGVhOTU3ZWI0YTllOTNmZWM2OGY3MGQ4MmRjNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-07T03:31:24Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-07T03:31:24Z"}, "message": "Changes from official libiberty sources.\n\n\t* Missing ChangeLog entries.\n\t* Some java demangling stuff\n\t* More cygwin32->cygwin related changes.\n\nFrom-SVN: r26236", "tree": {"sha": "d879fa31a9294ce03833197bf3232bb97c173495", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d879fa31a9294ce03833197bf3232bb97c173495"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3510075c6d570ea957eb4a9e93fec68f70d82dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3510075c6d570ea957eb4a9e93fec68f70d82dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3510075c6d570ea957eb4a9e93fec68f70d82dc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3510075c6d570ea957eb4a9e93fec68f70d82dc7/comments", "author": null, "committer": null, "parents": [{"sha": "8df1d91ab88c0c26a57df49f46d3c9a734f0417d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df1d91ab88c0c26a57df49f46d3c9a734f0417d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df1d91ab88c0c26a57df49f46d3c9a734f0417d"}], "stats": {"total": 102, "additions": 86, "deletions": 16}, "files": [{"sha": "a5ef842ef8e5a31b6c93269ca6b87eef9ced18e7", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3510075c6d570ea957eb4a9e93fec68f70d82dc7/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3510075c6d570ea957eb4a9e93fec68f70d82dc7/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=3510075c6d570ea957eb4a9e93fec68f70d82dc7", "patch": "@@ -31,6 +31,13 @@\n \tnothing.  Don't bother with `strlen' sanity check; consume_count\n \tdoes it for us.\n \n+1999-03-16  Stan Shebs  <shebs@andros.cygnus.com>\n+\n+\tFrom Art Haas  <ahaas@neosoft.com>:\n+\t* cplus-dem.c (demangle_prefix): Don't grab all the '__' strings\n+\twhen doing arm or hp style.\n+\t(demangle_nested_args): Decr forgetting_types field when done.\n+\t\n Thu Mar 11 01:22:58 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n \t* pexecute.c (__CYGWIN32__): Rename to\n@@ -50,6 +57,10 @@ Thu Mar 11 01:07:55 1999  Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n \n \t* config.table: Cleanup and add mh-*pic handling for alpha, arm, powerpc\n \n+Sun Feb 28 22:30:44 1999  Geoffrey Noer  <noer@cygnus.com>\n+\n+\t* config.table: Check cygwin*, not cygwin32*.\n+\n Tue Feb  9 16:39:01 1999  Dave Brolley  <brolley@cygnus.com>\n \n \t* Makefile.in: Change mkstemp -> mkstemps.\n@@ -80,6 +91,15 @@ Wed Jan 13 14:16:36 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* xstrdup.c (xstrdup): Switch from strcpy to memcpy for speed.\n \n+Tue Jan  5 15:58:29 1999  Elena Zannoni  <ezannoni@kwikemart.cygnus.com>\n+\n+\t* Makefile.in (CFILES): fix typo, splay-tree.c instead of\n+\tsplay-tree.o.\n+\n+1999-01-04  Jason Molenda  (jsm@bugshack.cygnus.com)\n+\n+\t* configure.in: Require autoconf 2.12.1 or higher.\n+\n 1998-12-30  Michael Meissner  <meissner@cygnus.com>\n \n \t* random.c (NULL): Don't redefine NULL if it is already defined.\n@@ -118,13 +138,24 @@ Sun Dec 20 16:03:46 1998  Hans-Peter Nilsson  <hp@axis.se>\n \n \t* Makefile.in (CFILES): Fix typo: splay-tree.c, not splay-tree.o\n \n+Fri Dec 18 17:50:18 1998  David Taylor  <taylor@texas.cygnus.com>\n+\n+\t* cplus-dem.c (demangle_arm_pt): remove declaration -- function\n+ \tdoesn't exist.\n+\t(do_hpacc_template_literal): remove unused variable `i'.\n+\t\n Fri Dec 18 16:11:43 EST 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* cplus-dem.c (demangle_fund_type): Process CV and u codes before\n \tbumping the pointer we read from. Also prepend these codes,\n \tas we do in other places.\n \n-Mon Dec 14 09:55:50 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+1998-12-18  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* cplus-dem.c (demangle_arm_hp_template): Make variable 'args' be\n+\t'const char *' in order to match its usage when calling siblings.\n+\t(snarf_numeric_literal): Make first arg 'const char **' in order\n+\tto match usage.\n \n \t* choose-temp.c: Don't check IN_GCC anymore.\n \n@@ -228,6 +259,16 @@ Thu Nov 19 12:59:21 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* pexecute.c: Include sys/wait.h when !IN_GCC.\n \n+Thu Nov 19 14:38:20 1998  Geoffrey Noer  <noer@cygnus.com>\n+\n+\t* pexecute.c: revert back to checking old Cygwin\n+\tpreprocessor symbol until some time has passed.\n+\n+Wed Nov 18 08:52:26 1998  Christopher Faylor <cgf@cygnus.com>\n+\n+\t* pexecute.c: Reorganize WIN32 case to accomodate Cygwin\n+\tsince it will now support similar constructs.\n+\n Fri Nov 13 19:18:05 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in: Check for calloc.\n@@ -941,6 +982,12 @@ Tue Aug 19 17:10:56 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* cplus-dem.c: Add 'extern' to prepends_underscore.\n \n+Wed Jul 30 11:42:19 1997  Per Bothner  <bothner@cygnus.com>\n+\n+\t* cplus-dem.c: Various changes to produce Java output when passed\n+\tDMGL_JAVA.  Thus \"::\" becomes \".\" and \"JArray<Foo>\" becomes \"Foo[]\".\n+\t(main): Support --java and -j flags to set DMGL_JAVA.\n+\n Tue Jul 22 19:05:23 1997  Robert Hoehne <robert.hoehne@Mathematik.TU-Chemnitz.DE>\n \n \t* config/mh-go32 (CC, AR, RANLIB): Don't define."}, {"sha": "bc990413423ce7c86cb90337508bc889e5b17299", "filename": "libiberty/config.table", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3510075c6d570ea957eb4a9e93fec68f70d82dc7/libiberty%2Fconfig.table", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3510075c6d570ea957eb4a9e93fec68f70d82dc7/libiberty%2Fconfig.table", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.table?ref=3510075c6d570ea957eb4a9e93fec68f70d82dc7", "patch": "@@ -18,7 +18,7 @@ case \"${enable_shared}\" in\n esac\n if [ \"${shared}\" = \"yes\" ]; then\n   case \"${host}\" in\n-    *-*-cygwin32*)\t;;\n+    *-*-cygwin*)\t;;\n     alpha*-*-linux*)\tfrags=\"${frags} ../../config/mh-elfalphapic\" ;;\n     arm*-*-*)\t\tfrags=\"${frags} ../../config/mh-armpic\" ;;\n     hppa*-*-*)\t\tfrags=\"${frags} ../../config/mh-papic\" ;;"}, {"sha": "655db70a9bdd26c80d772b72292f2af1e905b497", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3510075c6d570ea957eb4a9e93fec68f70d82dc7/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3510075c6d570ea957eb4a9e93fec68f70d82dc7/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=3510075c6d570ea957eb4a9e93fec68f70d82dc7", "patch": "@@ -252,7 +252,8 @@ typedef enum type_kind_t\n #define LEN_STRING(str)         ( (STRING_EMPTY(str))?0:((str)->p - (str)->b))\n \n /* The scope separator appropriate for the language being demangled.  */\n-#define SCOPE_STRING(work) \"::\"\n+\n+#define SCOPE_STRING(work) ((work->options & DMGL_JAVA) ? \".\" : \"::\")\n \n #define ARM_VTABLE_STRING \"__vtbl__\"\t/* Lucid/ARM virtual table prefix */\n #define ARM_VTABLE_STRLEN 8\t\t/* strlen (ARM_VTABLE_STRING) */\n@@ -1548,6 +1549,7 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n   int need_comma = 0;\n   int success = 0;\n   const char *start;\n+  int is_java_array = 0;\n   string temp;\n   int bindex = 0;\n \n@@ -1592,13 +1594,19 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n \t    {\n \t      return (0);\n \t    }\n-\t  string_appendn (tname, *mangled, r);\n+\t  is_java_array = (work -> options & DMGL_JAVA)\n+\t    && strncmp (*mangled, \"JArray1Z\", 8) == 0;\n+\t  if (! is_java_array)\n+\t    {\n+\t      string_appendn (tname, *mangled, r);\n+\t    }\n \t  if (trawname)\n \t    string_appendn (trawname, *mangled, r);\n \t  *mangled += r;\n \t}\n     }\n-  string_append (tname, \"<\");\n+  if (!is_java_array)\n+    string_append (tname, \"<\");\n   /* get size of template parameter list */\n   if (!get_count (mangled, &r))\n     {\n@@ -1716,10 +1724,15 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n \t}\n       need_comma = 1;\n     }\n+  if (is_java_array)\n     {\n-  if (tname->p[-1] == '>')\n-    string_append (tname, \" \");\n-  string_append (tname, \">\");\n+      string_append (tname, \"[]\");\n+    }\n+  else\n+    {\n+      if (tname->p[-1] == '>')\n+\tstring_append (tname, \" \");\n+      string_append (tname, \">\");\n     }\n \n   if (is_type && remember)\n@@ -2234,13 +2247,17 @@ demangle_prefix (work, mangled, declp)\n \t    }\n \t  else\n \t    {\n-              const char *tmp;\n-              /* Look for the LAST occurrence of __, allowing names to have\n-                 the '__' sequence embedded in them.*/\n-              while ((tmp = mystrstr (scan+2, \"__\")) != NULL)\n-                scan = tmp;\n-              if (*(scan + 2) == '\\0')\n-                success = 0;\n+\t      const char *tmp;\n+\n+              /* Look for the LAST occurrence of __, allowing names to\n+                 have the '__' sequence embedded in them. */\n+\t      if (!(ARM_DEMANGLING || HP_DEMANGLING))\n+\t\t{\n+\t\t  while ((tmp = mystrstr (scan + 2, \"__\")) != NULL)\n+\t\t    scan = tmp;\n+\t\t}\n+\t      if (*(scan + 2) == '\\0')\n+\t\tsuccess = 0;\n               else\n                 demangle_function_name (work, mangled, declp, scan);\n \t    }\n@@ -2873,7 +2890,8 @@ do_type (work, mangled, result)\n \tcase 'P':\n \tcase 'p':\n \t  (*mangled)++;\n-\t  string_prepend (&decl, \"*\");\n+\t  if (! (work -> options & DMGL_JAVA))\n+\t    string_prepend (&decl, \"*\");\n \t  if (tk == tk_none)\n \t    tk = tk_pointer;\n \t  break;\n@@ -3889,6 +3907,7 @@ demangle_nested_args (work, mangled, declp)\n   if (work->previous_argument)\n     string_delete (work->previous_argument);\n   work->previous_argument = saved_previous_argument;\n+  --work->forgetting_types;\n   work->nrepeats = saved_nrepeats;\n \n   return result;\n@@ -4262,6 +4281,7 @@ static struct option long_options[] = {\n   {\"strip-underscores\", no_argument, 0, '_'},\n   {\"format\", required_argument, 0, 's'},\n   {\"help\", no_argument, 0, 'h'},\n+  {\"java\", no_argument, 0, 'j'},\n   {\"no-strip-underscores\", no_argument, 0, 'n'},\n   {\"version\", no_argument, 0, 'v'},\n   {0, no_argument, 0, 0}\n@@ -4306,6 +4326,9 @@ main (argc, argv)\n \tcase '_':\n \t  strip_underscore = 1;\n \t  break;\n+\tcase 'j':\n+\t  flags |= DMGL_JAVA;\n+\t  break;\n \tcase 's':\n \t  if (strcmp (optarg, \"gnu\") == 0)\n \t    {"}]}