{"sha": "2e4659199e814b7ee0f6bd925fd2c0a7610da856", "node_id": "C_kwDOANBUbNoAKDJlNDY1OTE5OWU4MTRiN2VlMGY2YmQ5MjVmZDJjMGE3NjEwZGE4NTY", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2021-10-21T06:56:20Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2021-10-21T06:57:25Z"}, "message": "openmp: Fortran strictly-structured blocks support\n\nThis implements strictly-structured blocks support for Fortran, as specified in\nOpenMP 5.2. This now allows using a Fortran BLOCK construct as the body of most\nOpenMP constructs, with a \"!$omp end ...\" ending directive optional for that\nform.\n\ngcc/fortran/ChangeLog:\n\n\t* decl.c (gfc_match_end): Add COMP_OMP_STRICTLY_STRUCTURED_BLOCK case\n\ttogether with COMP_BLOCK.\n\t* parse.c (parse_omp_structured_block): Change return type to\n\t'gfc_statement', add handling for strictly-structured block case, adjust\n\trecursive calls to parse_omp_structured_block.\n\t(parse_executable): Adjust calls to parse_omp_structured_block.\n\t* parse.h (enum gfc_compile_state): Add\n\tCOMP_OMP_STRICTLY_STRUCTURED_BLOCK.\n\t* trans-openmp.c (gfc_trans_omp_workshare): Add EXEC_BLOCK case\n\thandling.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/cancel-1.f90: Adjust testcase.\n\t* gfortran.dg/gomp/nesting-3.f90: Adjust testcase.\n\t* gfortran.dg/gomp/strictly-structured-block-1.f90: New test.\n\t* gfortran.dg/gomp/strictly-structured-block-2.f90: New test.\n\t* gfortran.dg/gomp/strictly-structured-block-3.f90: New test.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi (Support of strictly structured blocks in Fortran):\n\tAdjust to 'Y'.\n\t* testsuite/libgomp.fortran/task-reduction-16.f90: Adjust testcase.", "tree": {"sha": "476464a5472b16f0039b949a5e6102bb85bea92f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/476464a5472b16f0039b949a5e6102bb85bea92f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e4659199e814b7ee0f6bd925fd2c0a7610da856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4659199e814b7ee0f6bd925fd2c0a7610da856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e4659199e814b7ee0f6bd925fd2c0a7610da856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4659199e814b7ee0f6bd925fd2c0a7610da856/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af78e731feb9327a17c99ebaa19a4cca1125caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af78e731feb9327a17c99ebaa19a4cca1125caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af78e731feb9327a17c99ebaa19a4cca1125caf"}], "stats": {"total": 509, "additions": 484, "deletions": 25}, "files": [{"sha": "6043e100fbb9721a740c5d46f6c256933f138690", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -8429,6 +8429,7 @@ gfc_match_end (gfc_statement *st)\n       break;\n \n     case COMP_BLOCK:\n+    case COMP_OMP_STRICTLY_STRUCTURED_BLOCK:\n       *st = ST_END_BLOCK;\n       target = \" block\";\n       eos_ok = 0;"}, {"sha": "b1e73ee6801100ef1170667206546ec33b5b0b39", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 57, "deletions": 12, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -5459,7 +5459,7 @@ parse_oacc_loop (gfc_statement acc_st)\n \n /* Parse the statements of an OpenMP structured block.  */\n \n-static void\n+static gfc_statement\n parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n {\n   gfc_statement st, omp_end_st;\n@@ -5546,6 +5546,32 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n       gcc_unreachable ();\n     }\n \n+  bool block_construct = false;\n+  gfc_namespace *my_ns = NULL;\n+  gfc_namespace *my_parent = NULL;\n+\n+  st = next_statement ();\n+\n+  if (st == ST_BLOCK)\n+    {\n+      /* Adjust state to a strictly-structured block, now that we found that\n+\t the body starts with a BLOCK construct.  */\n+      s.state = COMP_OMP_STRICTLY_STRUCTURED_BLOCK;\n+\n+      block_construct = true;\n+      gfc_notify_std (GFC_STD_F2008, \"BLOCK construct at %C\");\n+\n+      my_ns = gfc_build_block_ns (gfc_current_ns);\n+      gfc_current_ns = my_ns;\n+      my_parent = my_ns->parent;\n+\n+      new_st.op = EXEC_BLOCK;\n+      new_st.ext.block.ns = my_ns;\n+      new_st.ext.block.assoc = NULL;\n+      accept_statement (ST_BLOCK);\n+      st = parse_spec (ST_NONE);\n+    }\n+\n   do\n     {\n       if (workshare_stmts_only)\n@@ -5562,7 +5588,6 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n \t     restrictions apply recursively.  */\n \t  bool cycle = true;\n \n-\t  st = next_statement ();\n \t  for (;;)\n \t    {\n \t      switch (st)\n@@ -5588,13 +5613,13 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n \t\tcase ST_OMP_PARALLEL_MASKED:\n \t\tcase ST_OMP_PARALLEL_MASTER:\n \t\tcase ST_OMP_PARALLEL_SECTIONS:\n-\t\t  parse_omp_structured_block (st, false);\n-\t\t  break;\n+\t\t  st = parse_omp_structured_block (st, false);\n+\t\t  continue;\n \n \t\tcase ST_OMP_PARALLEL_WORKSHARE:\n \t\tcase ST_OMP_CRITICAL:\n-\t\t  parse_omp_structured_block (st, true);\n-\t\t  break;\n+\t\t  st = parse_omp_structured_block (st, true);\n+\t\t  continue;\n \n \t\tcase ST_OMP_PARALLEL_DO:\n \t\tcase ST_OMP_PARALLEL_DO_SIMD:\n@@ -5617,7 +5642,7 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n \t    }\n \t}\n       else\n-\tst = parse_executable (ST_NONE);\n+\tst = parse_executable (st);\n       if (st == ST_NONE)\n \tunexpected_eof ();\n       else if (st == ST_OMP_SECTION\n@@ -5627,9 +5652,27 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n \t  np = new_level (np);\n \t  np->op = cp->op;\n \t  np->block = NULL;\n+\t  st = next_statement ();\n+\t}\n+      else if (block_construct && st == ST_END_BLOCK)\n+\t{\n+\t  accept_statement (st);\n+\t  gfc_current_ns = my_parent;\n+\t  pop_state ();\n+\n+\t  st = next_statement ();\n+\t  if (st == omp_end_st)\n+\t    {\n+\t      accept_statement (st);\n+\t      st = next_statement ();\n+\t    }\n+\t  return st;\n \t}\n       else if (st != omp_end_st)\n-\tunexpected_statement (st);\n+\t{\n+\t  unexpected_statement (st);\n+\t  st = next_statement ();\n+\t}\n     }\n   while (st != omp_end_st);\n \n@@ -5665,6 +5708,8 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n   gfc_commit_symbols ();\n   gfc_warning_check ();\n   pop_state ();\n+  st = next_statement ();\n+  return st;\n }\n \n \n@@ -5805,13 +5850,13 @@ parse_executable (gfc_statement st)\n \tcase ST_OMP_TEAMS:\n \tcase ST_OMP_TASK:\n \tcase ST_OMP_TASKGROUP:\n-\t  parse_omp_structured_block (st, false);\n-\t  break;\n+\t  st = parse_omp_structured_block (st, false);\n+\t  continue;\n \n \tcase ST_OMP_WORKSHARE:\n \tcase ST_OMP_PARALLEL_WORKSHARE:\n-\t  parse_omp_structured_block (st, true);\n-\t  break;\n+\t  st = parse_omp_structured_block (st, true);\n+\t  continue;\n \n \tcase ST_OMP_DISTRIBUTE:\n \tcase ST_OMP_DISTRIBUTE_PARALLEL_DO:"}, {"sha": "66b275de89bc0a37ea17818cc5456e5d80db5d58", "filename": "gcc/fortran/parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.h?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -31,7 +31,7 @@ enum gfc_compile_state\n   COMP_STRUCTURE, COMP_UNION, COMP_MAP,\n   COMP_DO, COMP_SELECT, COMP_FORALL, COMP_WHERE, COMP_CONTAINS, COMP_ENUM,\n   COMP_SELECT_TYPE, COMP_SELECT_RANK, COMP_OMP_STRUCTURED_BLOCK, COMP_CRITICAL,\n-  COMP_DO_CONCURRENT\n+  COMP_DO_CONCURRENT, COMP_OMP_STRICTLY_STRUCTURED_BLOCK\n };\n \n /* Stack element for the current compilation state.  These structures"}, {"sha": "e81c5588c53c1e20a78f165f558b712cc2d295cb", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -7000,7 +7000,11 @@ gfc_trans_omp_workshare (gfc_code *code, gfc_omp_clauses *clauses)\n \t  res = gfc_trans_omp_directive (code);\n \t  ompws_flags = saved_ompws_flags;\n \t  break;\n-\t\n+\n+\tcase EXEC_BLOCK:\n+\t  res = gfc_trans_block_construct (code);\n+\t  break;\n+\n \tdefault:\n \t  gfc_internal_error (\"gfc_trans_omp_workshare(): Bad statement code\");\n \t}"}, {"sha": "1bfddc7b9db0caadf5c3722e1c6478ff2a3be442", "filename": "gcc/testsuite/gfortran.dg/gomp/cancel-1.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-1.f90?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -265,6 +265,7 @@ subroutine f2\n     end do\n     !$omp end do\n     !$omp sections\n+      !$omp section\n       block\n         !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n         !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n@@ -417,6 +418,7 @@ subroutine f2\n     !$omp end ordered\n   end do\n   !$omp sections\n+    !$omp section\n     block\n       !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n       !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n@@ -515,6 +517,7 @@ subroutine f3\n   end do\n   !$omp end do nowait\n   !$omp sections\n+    !$omp section\n     block\n       !$omp cancel sections\t! { dg-warning \"nowait\" }\n     end block"}, {"sha": "5d0d20079a89b2e25dd14dd034bd611a249af78d", "filename": "gcc/testsuite/gfortran.dg/gomp/nesting-3.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-3.f90?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -7,7 +7,7 @@ subroutine f1\n         block; end block\n       end do\n       !$omp sections\t! { dg-error \"may not be closely nested\" }\n-        block; end block\n+        call do_work\n         !$omp section\n         block; end block\n       !$omp end sections\n@@ -33,7 +33,7 @@ subroutine f1\n   !$omp end sections\n   !$omp sections\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -72,7 +72,7 @@ subroutine f1\n   !$omp sections\n     !$omp section\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -105,7 +105,7 @@ subroutine f1\n       block; end block\n     end do\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -129,7 +129,7 @@ subroutine f1\n       block; end block\n     end do\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -150,7 +150,7 @@ subroutine f1\n       block; end block\n     end do\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -171,7 +171,7 @@ subroutine f1\n       block; end block\n     end do\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -195,7 +195,7 @@ subroutine f1\n       block; end block\n     end do\n     !$omp sections\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -224,7 +224,7 @@ subroutine f1\n       block; end block\n     end do\n     !$omp sections\n-      block; end block\n+      call do_work\n     !$omp section\n       block; end block\n     !$omp end sections\n@@ -257,7 +257,7 @@ subroutine f2\n       block; end block\n     end do\n     !$omp sections\t! { dg-error \"may not be closely nested\" }\n-      block; end block\n+      call do_work\n       !$omp section\n       block; end block\n     !$omp end sections"}, {"sha": "00a018c6145805c733984811ea8398f11bd733ed", "filename": "gcc/testsuite/gfortran.dg/gomp/strictly-structured-block-1.f90", "status": "added", "additions": 214, "deletions": 0, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-1.f90?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -0,0 +1,214 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+program main\n+  integer :: x, i, n\n+\n+  x = 0\n+  n = 10\n+\n+  !$omp parallel\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp parallel\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end parallel\n+\n+  !$omp teams\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp teams\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end teams\n+\n+  !$omp masked\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp masked\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end masked\n+\n+  !$omp scope\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp scope\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end scope\n+\n+  !$omp single\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp single\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end single\n+\n+  !$omp workshare\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp workshare\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end workshare\n+\n+  !$omp task\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp task\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end task\n+\n+  !$omp target data map(x)\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp target data map(x)\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end target data\n+\n+  !$omp target\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp target\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end target\n+\n+  !$omp parallel workshare\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp parallel workshare\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end parallel workshare\n+\n+  !$omp parallel masked\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp parallel masked\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end parallel masked\n+\n+  !$omp target parallel\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp target parallel\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end target parallel\n+\n+  !$omp target teams\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp target teams\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end target teams\n+\n+  !$omp critical\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp critical\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end critical\n+\n+  !$omp taskgroup\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp taskgroup\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end taskgroup\n+\n+  !$omp do ordered\n+  do i = 1, n\n+     !$omp ordered\n+     block\n+       x = x + 1\n+     end block\n+  end do\n+\n+  !$omp do ordered\n+  do i = 1, n\n+     !$omp ordered\n+     block\n+       x = x + 1\n+     end block\n+     !$omp end ordered\n+  end do\n+\n+  !$omp master\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp master\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end master\n+\n+  !$omp parallel master\n+  block\n+    x = x + 1\n+  end block\n+\n+  !$omp parallel master\n+  block\n+    x = x + 1\n+  end block\n+  !$omp end parallel master\n+\n+end program"}, {"sha": "a99616980c05b4f7b5dff2fd97f9755472a67d33", "filename": "gcc/testsuite/gfortran.dg/gomp/strictly-structured-block-2.f90", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-2.f90?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -0,0 +1,139 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+program main\n+  integer :: x, i, n\n+\n+  x = 0\n+  n = 10\n+\n+  !$omp parallel\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end parallel ! { dg-error \"Unexpected !.OMP END PARALLEL statement\" }\n+\n+  !$omp teams\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end teams ! { dg-error \"Unexpected !.OMP END TEAMS statement\" }\n+\n+  !$omp masked\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end masked ! { dg-error \"Unexpected !.OMP END MASKED statement\" }\n+\n+  !$omp scope\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end scope ! { dg-error \"Unexpected !.OMP END SCOPE statement\" }\n+\n+  !$omp single\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end single ! { dg-error \"Unexpected !.OMP END SINGLE statement\" }\n+\n+  !$omp workshare\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end workshare ! { dg-error \"Unexpected !.OMP END WORKSHARE statement\" }\n+\n+  !$omp task\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end task ! { dg-error \"Unexpected !.OMP END TASK statement\" }\n+\n+  !$omp target data map(x)\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end target data ! { dg-error \"Unexpected !.OMP END TARGET DATA statement\" }\n+\n+  !$omp target\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end target ! { dg-error \"Unexpected !.OMP END TARGET statement\" }\n+\n+  !$omp parallel workshare\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end parallel workshare ! { dg-error \"Unexpected !.OMP END PARALLEL WORKSHARE statement\" }\n+\n+  !$omp parallel masked\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end parallel masked ! { dg-error \"Unexpected !.OMP END PARALLEL MASKED statement\" }\n+\n+  !$omp target parallel\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end target parallel ! { dg-error \"Unexpected !.OMP END TARGET PARALLEL statement\" }\n+\n+  !$omp target teams\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end target teams ! { dg-error \"Unexpected !.OMP END TARGET TEAMS statement\" }\n+\n+  !$omp critical\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end critical ! { dg-error \"Unexpected !.OMP END CRITICAL statement\" }\n+\n+  !$omp taskgroup\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end taskgroup ! { dg-error \"Unexpected !.OMP END TASKGROUP statement\" }\n+\n+  !$omp do ordered\n+  do i = 1, n\n+     !$omp ordered\n+     block\n+       x = x + 1\n+     end block\n+     x = x + 1\n+     !$omp end ordered ! { dg-error \"Unexpected !.OMP END ORDERED statement\" }\n+  end do\n+\n+  !$omp master\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end master ! { dg-error \"Unexpected !.OMP END MASTER statement\" }\n+\n+  !$omp parallel master\n+  block\n+    x = x + 1\n+  end block\n+  x = x + 1\n+  !$omp end parallel master ! { dg-error \"Unexpected !.OMP END PARALLEL MASTER statement\" }\n+\n+end program"}, {"sha": "f9c76d641204fe74d6bb0500de33bde68ed18f9c", "filename": "gcc/testsuite/gfortran.dg/gomp/strictly-structured-block-3.f90", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fstrictly-structured-block-3.f90?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -0,0 +1,52 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+program main\n+  integer :: x, y\n+\n+  x = 0\n+  y = 0\n+\n+  !$omp parallel\n+    !$omp parallel\n+    block\n+      x = x + 1\n+    end block\n+    !$omp end parallel\n+  !$omp end parallel\n+\n+  !$omp workshare\n+  block\n+    x = 1\n+    !$omp critical\n+    block\n+      y = 3\n+    end block\n+  end block\n+\n+  !$omp sections\n+  block\n+    !$omp section\n+    block\n+      x = 1\n+    end block\n+    x = x + 2\n+    !$omp section\n+    x = x + 4\n+  end block\n+\n+  !$omp sections\n+    !$omp section\n+    block\n+    end block\n+    x = 1\n+  !$omp end sections\n+\n+  !$omp sections\n+  block\n+    block\n+    end block\n+    x = 1\n+  end block\n+\n+end program main"}, {"sha": "6306e97696eb43458f9370529edad5ebb337ebfa", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -337,7 +337,7 @@ The OpenMP 4.5 specification is fully supported.\n \n @multitable @columnfractions .60 .10 .25\n @headitem Description @tab Status @tab Comments\n-@item Support of strictly structured blocks in Fortran @tab N @tab\n+@item Support of strictly structured blocks in Fortran @tab Y @tab\n @item Support of structured block sequences in C/C++ @tab Y @tab\n @item @code{unconstrained} and @code{reproducible} modifiers on @code{order}\n       clause @tab Y @tab"}, {"sha": "5b8617a6f5d4d8a7cd368bb4003f7c1521194348", "filename": "libgomp/testsuite/libgomp.fortran/task-reduction-16.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4659199e814b7ee0f6bd925fd2c0a7610da856/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-reduction-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4659199e814b7ee0f6bd925fd2c0a7610da856/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-reduction-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-reduction-16.f90?ref=2e4659199e814b7ee0f6bd925fd2c0a7610da856", "patch": "@@ -20,6 +20,7 @@ subroutine foo (x)\n         !$omp scope reduction (task, iand: c)\n           !$omp barrier\n           !$omp sections\n+            !$omp section\n             block\n               a = a + 1; b(0) = b(0) * 2; call bar (2); b(2) = b(2) * 3\n               c(1) = iand(c(1), not(ishft(1_8, 2)))"}]}