{"sha": "7d006b0d3477fc9463edd970868107a5f98e5c57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QwMDZiMGQzNDc3ZmM5NDYzZWRkOTcwODY4MTA3YTVmOThlNWM1Nw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-11-16T15:51:33Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-11-16T15:51:33Z"}, "message": "simplify-rtx: Simplify sign_extend of lshiftrt to zero_extend (PR68330)\n\nSince r230164, in PR68330 combine ends up with a sign_extend of an\nlshiftrt by some constant, and it does not know to morph that into a\nzero_extract (the extend will always extend with zeroes).  I think\nit is best to let simplify-rtx always replace such a sign_extend by\na zero_extend, after which everything works as expected.\n\n\n2015-11-15  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\tPR rtl-optimization/68330\n\t* simplify-rtx.c (simplify_unary_operation_1): Simplify SIGN_EXTEND\n\tof LSHIFTRT by a non-zero constant integer.\n\nFrom-SVN: r230429", "tree": {"sha": "6c7dc8b0f682801f705190ef1105fa30834b1e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c7dc8b0f682801f705190ef1105fa30834b1e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d006b0d3477fc9463edd970868107a5f98e5c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d006b0d3477fc9463edd970868107a5f98e5c57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d006b0d3477fc9463edd970868107a5f98e5c57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d006b0d3477fc9463edd970868107a5f98e5c57/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "513ecaea6f71665e75458188d26432c627392cc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513ecaea6f71665e75458188d26432c627392cc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/513ecaea6f71665e75458188d26432c627392cc0"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "d318d58633c4a560c1f2f95bc5f4704fb83376e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d006b0d3477fc9463edd970868107a5f98e5c57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d006b0d3477fc9463edd970868107a5f98e5c57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d006b0d3477fc9463edd970868107a5f98e5c57", "patch": "@@ -1,3 +1,9 @@\n+2015-11-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/68330\n+\t* simplify-rtx.c (simplify_unary_operation_1): Simplify SIGN_EXTEND\n+\tof LSHIFTRT by a non-zero constant integer.\n+\n 2015-11-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68306"}, {"sha": "413d61b17590ca465d6af0ed31a2bc4e09bbeab5", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d006b0d3477fc9463edd970868107a5f98e5c57/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d006b0d3477fc9463edd970868107a5f98e5c57/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=7d006b0d3477fc9463edd970868107a5f98e5c57", "patch": "@@ -1462,6 +1462,13 @@ simplify_unary_operation_1 (enum rtx_code code, machine_mode mode, rtx op)\n \t    }\n \t}\n \n+      /* (sign_extend:M (lshiftrt:N <X> (const_int I))) is better as\n+         (zero_extend:M (lshiftrt:N <X> (const_int I))) if I is not 0.  */\n+      if (GET_CODE (op) == LSHIFTRT\n+\t  && CONST_INT_P (XEXP (op, 1))\n+\t  && XEXP (op, 1) != const0_rtx)\n+\treturn simplify_gen_unary (ZERO_EXTEND, mode, op, GET_MODE (op));\n+\n #if defined(POINTERS_EXTEND_UNSIGNED)\n       /* As we do not know which address space the pointer is referring to,\n \t we can do this only if the target does not support different pointer"}]}