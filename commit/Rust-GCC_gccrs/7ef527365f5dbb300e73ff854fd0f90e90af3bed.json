{"sha": "7ef527365f5dbb300e73ff854fd0f90e90af3bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmNTI3MzY1ZjVkYmIzMDBlNzNmZjg1NGZkMGY5MGU5MGFmM2JlZA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-11-24T12:19:42Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-11-24T12:19:42Z"}, "message": "2004-11-24  Michael Koch  <konqueror@gmx.de>\n\n\t* java/nio/DirectByteBufferImpl.java\n\t(ReadWrite.ReadWrite): New constructor.\n\t(DirectByteBufferImpl): Likewise.\n\t* jni.cc (_Jv_JNI_NewDirectByteBuffer):\n\tUse DirectByteBufferImpl.ReadWrite.\n\t* Makefile.am:\n\tGenerate java/nio/DirectByteBufferImpl$ReadWrite.h.\n\t* Makefile.in: Rgenerated.\n\nFrom-SVN: r91150", "tree": {"sha": "729b8f856369680c08ca2aeda398277d212dfe4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/729b8f856369680c08ca2aeda398277d212dfe4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef527365f5dbb300e73ff854fd0f90e90af3bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef527365f5dbb300e73ff854fd0f90e90af3bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef527365f5dbb300e73ff854fd0f90e90af3bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef527365f5dbb300e73ff854fd0f90e90af3bed/comments", "author": null, "committer": null, "parents": [{"sha": "16df8078b8ea2cf3ce37f47e62cdc66c69fe6c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16df8078b8ea2cf3ce37f47e62cdc66c69fe6c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16df8078b8ea2cf3ce37f47e62cdc66c69fe6c70"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "df476ec0d1a10c839a7cadccd059bf2e738e700e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7ef527365f5dbb300e73ff854fd0f90e90af3bed", "patch": "@@ -1,3 +1,14 @@\n+2004-11-24  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/nio/DirectByteBufferImpl.java\n+\t(ReadWrite.ReadWrite): New constructor.\n+\t(DirectByteBufferImpl): Likewise.\n+\t* jni.cc (_Jv_JNI_NewDirectByteBuffer):\n+\tUse DirectByteBufferImpl.ReadWrite.\n+\t* Makefile.am:\n+\tGenerate java/nio/DirectByteBufferImpl$ReadWrite.h.\n+\t* Makefile.in: Rgenerated.\n+\n 2004-11-24  Jeroen Frijters  <address@bogus.example.com>\n \n \t* java/nio/DirectByteBufferImpl.java"}, {"sha": "204425b59f5b189352b537f36df4e45bfba35f20", "filename": "libjava/Makefile.am", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=7ef527365f5dbb300e73ff854fd0f90e90af3bed", "patch": "@@ -621,6 +621,7 @@ ordinary_nat_headers = $(ordinary_java_source_files:.java=.h) \\\n \n inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tjava/io/ObjectInputStream$$GetField.h \\\n+\tjava/nio/DirectByteBufferImpl$$ReadWrite.h \\\n \tjava/nio/channels/Pipe$$SinkChannel.h \\\n \tjava/nio/channels/Pipe$$SourceChannel.h \\\n \tjava/lang/reflect/Proxy$$ProxyData.h \\\n@@ -736,6 +737,10 @@ java/io/ObjectOutputStream$$PutField.h: java/io/ObjectOutputStream.class\n \t$(GCJH) -classpath '' -bootclasspath $(top_builddir) \\\n \t'java/io/ObjectOutputStream$$PutField'\n \n+java/nio/DirectByteBufferImpl$$ReadWrite.h: java/nio/DirectByteBufferImpl.class\n+\t$(GCJH) -classpath '' -bootclasspath $(top_builddir) \\\n+\t'java/nio/DirectByteBufferImpl$$ReadWrite'\n+\n java/nio/channels/Pipe$$SinkChannel.h: java/nio/channels/Pipe.class\n \t$(GCJH) -classpath '' -bootclasspath $(top_builddir) \\\n \t'java/nio/channels/Pipe$$SinkChannel'\n@@ -806,6 +811,8 @@ install-data-local:\n \t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketOutputStream.h' $(DESTDIR)$(includedir)/gnu/java/net/\n \t$(INSTALL_DATA) 'gnu/java/nio/PipeImpl$$SinkChannelImpl.h' $(DESTDIR)$(includedir)/gnu/java/nio/\n \t$(INSTALL_DATA) 'gnu/java/nio/PipeImpl$$SourceChannelImpl.h' $(DESTDIR)$(includedir)/gnu/java/nio/\n+## Don't install java/nio/DirectByteBufferImpl$$ReadWrite.h here. It's for internal use only.\n+\n \n ## ################################################################\n "}, {"sha": "fbb42ae13f7846d813acf76c4824e0e841c6273f", "filename": "libjava/Makefile.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=7ef527365f5dbb300e73ff854fd0f90e90af3bed", "patch": "@@ -4818,6 +4818,7 @@ ordinary_nat_headers = $(ordinary_java_source_files:.java=.h) \\\n \n inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tjava/io/ObjectInputStream$$GetField.h \\\n+\tjava/nio/DirectByteBufferImpl$$ReadWrite.h \\\n \tjava/nio/channels/Pipe$$SinkChannel.h \\\n \tjava/nio/channels/Pipe$$SourceChannel.h \\\n \tjava/lang/reflect/Proxy$$ProxyData.h \\\n@@ -23907,6 +23908,10 @@ java/io/ObjectOutputStream$$PutField.h: java/io/ObjectOutputStream.class\n \t$(GCJH) -classpath '' -bootclasspath $(top_builddir) \\\n \t'java/io/ObjectOutputStream$$PutField'\n \n+java/nio/DirectByteBufferImpl$$ReadWrite.h: java/nio/DirectByteBufferImpl.class\n+\t$(GCJH) -classpath '' -bootclasspath $(top_builddir) \\\n+\t'java/nio/DirectByteBufferImpl$$ReadWrite'\n+\n java/nio/channels/Pipe$$SinkChannel.h: java/nio/channels/Pipe.class\n \t$(GCJH) -classpath '' -bootclasspath $(top_builddir) \\\n \t'java/nio/channels/Pipe$$SinkChannel'"}, {"sha": "d73f090cdb7ffbe31c9de0dff037146568734b31", "filename": "libjava/java/nio/DirectByteBufferImpl.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDirectByteBufferImpl.java?ref=7ef527365f5dbb300e73ff854fd0f90e90af3bed", "patch": "@@ -89,6 +89,11 @@ final static class ReadWrite extends DirectByteBufferImpl\n       super(capacity);\n     }\n \n+    ReadWrite(RawData address, int capacity)\n+    {\n+      super(address, capacity);\n+    }\n+    \n     ReadWrite(Object owner, RawData address,\n \t      int capacity, int limit,\n \t      int position)\n@@ -109,6 +114,13 @@ public boolean isReadOnly()\n     this.address = VMDirectByteBuffer.allocate(capacity);\n   }\n \n+  DirectByteBufferImpl(RawData address, int capacity)\n+  {\n+    super(capacity, capacity, 0, -1);\n+    this.owner = this;\n+    this.address = address;\n+  }\n+  \n   DirectByteBufferImpl(Object owner, RawData address,\n \t\t       int capacity, int limit,\n \t\t       int position)"}, {"sha": "6bfc4812d96eabbdea0a72a8150a34a4776c47c9", "filename": "libjava/jni.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef527365f5dbb300e73ff854fd0f90e90af3bed/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=7ef527365f5dbb300e73ff854fd0f90e90af3bed", "patch": "@@ -42,6 +42,7 @@ details.  */\n #include <java/lang/Thread.h>\n #include <java/lang/IllegalAccessError.h>\n #include <java/nio/DirectByteBufferImpl.h>\n+#include <java/nio/DirectByteBufferImpl$ReadWrite.h>\n #include <java/util/IdentityHashMap.h>\n #include <gnu/gcj/RawData.h>\n \n@@ -1723,8 +1724,8 @@ _Jv_JNI_NewDirectByteBuffer (JNIEnv *, void *address, jlong length)\n {\n   using namespace gnu::gcj;\n   using namespace java::nio;\n-  return new DirectByteBufferImpl (reinterpret_cast<RawData *> (address),\n-\t\t\t\t   length);\n+  return new DirectByteBufferImpl$ReadWrite\n+    (reinterpret_cast<RawData *> (address), length);\n }\n \n static void * JNICALL"}]}