{"sha": "1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "node_id": "C_kwDOANBUbNoAKDFlZjYwODVmMDliNTBlMGFhM2U1YTVkMTVlYmY4NzUyZThhYThhNzI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-08T15:57:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-08T21:04:14Z"}, "message": "libstdc++: Simplify resource management in directory iterators\n\nThis replaces the _Dir constructor that takes ownership of an existing\nDIR* resource with one that takes a _Dir_base rvalue instead. This means\na raw DIR* is never passed around, but is always owned by a _Dir_base\nobject.\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/c++17/fs_dir.cc (_Dir(DIR*, const path&)): Change first\n\tparameter to _Dir_base&&.\n\t* src/filesystem/dir-common.h (_Dir_base(DIR*)): Remove.\n\t* src/filesystem/dir.cc (_Dir(DIR*, const path&)): Change first\n\tparameter to _Dir_base&&.", "tree": {"sha": "253855afea390880347b9d54c264589da0e6fced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/253855afea390880347b9d54c264589da0e6fced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0d4601ccde3c4849f6e7244035f1a899d608cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0d4601ccde3c4849f6e7244035f1a899d608cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0d4601ccde3c4849f6e7244035f1a899d608cb7"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "c67fe76bc14f8c34c72caa6f9c64ea7a2ae6f0f7", "filename": "libstdc++-v3/src/c++17/fs_dir.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_dir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_dir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_dir.cc?ref=1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "patch": "@@ -57,7 +57,7 @@ struct fs::_Dir : _Dir_base\n       path = p;\n   }\n \n-  _Dir(posix::DIR* dirp, const path& p) : _Dir_base(dirp), path(p) { }\n+  _Dir(_Dir_base&& d, const path& p) : _Dir_base(std::move(d)), path(p) { }\n \n   _Dir(_Dir&&) = default;\n \n@@ -140,7 +140,7 @@ struct fs::_Dir : _Dir_base\n     _Dir_base d(dirfd, pathname, skip_permission_denied, nofollow, ec);\n     // If this->path is empty, the new _Dir should have an empty path too.\n     const fs::path& p = this->path.empty() ? this->path : this->entry.path();\n-    return _Dir(std::exchange(d.dirp, nullptr), p);\n+    return _Dir(std::move(d), p);\n   }\n \n   bool"}, {"sha": "511b988f1c79c0fa5e5c70a11d5654842cb84509", "filename": "libstdc++-v3/src/filesystem/dir-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fdir-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fdir-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fdir-common.h?ref=1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "patch": "@@ -89,8 +89,6 @@ is_permission_denied_error(int e)\n \n struct _Dir_base\n {\n-  _Dir_base(posix::DIR* dirp = nullptr) : dirp(dirp) { }\n-\n   // If no error occurs then dirp is non-null,\n   // otherwise null (even if a permission denied error is ignored).\n   _Dir_base(int fd, const posix::char_type* pathname,"}, {"sha": "b451902c4a1b1b63dfe880bab689f5e81957d5b4", "filename": "libstdc++-v3/src/filesystem/dir.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fdir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fdir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fdir.cc?ref=1ef6085f09b50e0aa3e5a5d15ebf8752e8aa8a72", "patch": "@@ -59,7 +59,7 @@ struct fs::_Dir : std::filesystem::_Dir_base\n       path = p;\n   }\n \n-  _Dir(posix::DIR* dirp, const path& p) : _Dir_base(dirp), path(p) { }\n+  _Dir(_Dir_base&& d, const path& p) : _Dir_base(std::move(d)), path(p) { }\n \n   _Dir(_Dir&&) = default;\n \n@@ -133,7 +133,7 @@ struct fs::_Dir : std::filesystem::_Dir_base\n   {\n     auto [dirfd, pathname] = dir_and_pathname();\n     _Dir_base d(dirfd, pathname, skip_permission_denied, nofollow, ec);\n-    return _Dir(std::exchange(d.dirp, nullptr), entry.path());\n+    return _Dir(std::move(d), entry.path());\n   }\n \n   fs::path\t\tpath;"}]}