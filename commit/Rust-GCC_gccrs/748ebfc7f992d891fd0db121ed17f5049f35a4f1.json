{"sha": "748ebfc7f992d891fd0db121ed17f5049f35a4f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ4ZWJmYzdmOTkyZDg5MWZkMGRiMTIxZWQxN2Y1MDQ5ZjM1YTRmMQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-09-23T12:13:07Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-09-23T12:13:07Z"}, "message": "optabs.c (emit_libcall_block): Use no_conflict_move_test.\n\n\t* optabs.c (emit_libcall_block): Use no_conflict_move_test.\n\t(no_conflict_move_test): Update comments.\n\nFrom-SVN: r104563", "tree": {"sha": "2cefe51ddfefada35befe678bc21db0925888586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cefe51ddfefada35befe678bc21db0925888586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/748ebfc7f992d891fd0db121ed17f5049f35a4f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748ebfc7f992d891fd0db121ed17f5049f35a4f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/748ebfc7f992d891fd0db121ed17f5049f35a4f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748ebfc7f992d891fd0db121ed17f5049f35a4f1/comments", "author": null, "committer": null, "parents": [{"sha": "9617ccfdc47aeb8e03f7c643df68bde7b06abcdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9617ccfdc47aeb8e03f7c643df68bde7b06abcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9617ccfdc47aeb8e03f7c643df68bde7b06abcdd"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "c21990d0c0af9e6e1568581a639fe182501270e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/748ebfc7f992d891fd0db121ed17f5049f35a4f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/748ebfc7f992d891fd0db121ed17f5049f35a4f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=748ebfc7f992d891fd0db121ed17f5049f35a4f1", "patch": "@@ -7,6 +7,9 @@\n \t*  optabs.c (no_conflict_move_test): Don't set must_stay for a\n \tclobber / clobber match between dest and p->first.\n \n+\t* optabs.c (emit_libcall_block): Use no_conflict_move_test.\n+\t(no_conflict_move_test): Update comments.\n+\n 2005-09-22  Ranjit Mathew  <rmathew@gcc.gnu.org>\n \n \t* doc/install.texi: Update URL for Jacks."}, {"sha": "7ca39167390f074998da687bd55a549645bd4cda", "filename": "gcc/optabs.c", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/748ebfc7f992d891fd0db121ed17f5049f35a4f1/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/748ebfc7f992d891fd0db121ed17f5049f35a4f1/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=748ebfc7f992d891fd0db121ed17f5049f35a4f1", "patch": "@@ -3004,9 +3004,10 @@ struct no_conflict_data\n   bool must_stay;\n };\n \n-/* Called via note_stores by emit_no_conflict_block.  Set P->must_stay\n-   if the currently examined clobber / store has to stay in the list of\n-   insns that constitute the actual no_conflict block.  */\n+/* Called via note_stores by emit_no_conflict_block and emit_libcall_block.\n+   Set P->must_stay if the currently examined clobber / store has to stay\n+   in the list of insns that constitute the actual no_conflict block /\n+   libcall block.  */\n static void\n no_conflict_move_test (rtx dest, rtx set, void *p0)\n {\n@@ -3248,23 +3249,27 @@ emit_libcall_block (rtx insns, rtx target, rtx result, rtx equiv)\n       next = NEXT_INSN (insn);\n \n       if (set != 0 && REG_P (SET_DEST (set))\n-\t  && REGNO (SET_DEST (set)) >= FIRST_PSEUDO_REGISTER\n-\t  && (insn == insns\n-\t      || ((! INSN_P(insns)\n-\t\t   || ! reg_mentioned_p (SET_DEST (set), PATTERN (insns)))\n-\t\t  && ! reg_used_between_p (SET_DEST (set), insns, insn)\n-\t\t  && ! modified_in_p (SET_SRC (set), insns)\n-\t\t  && ! modified_between_p (SET_SRC (set), insns, insn))))\n+\t  && REGNO (SET_DEST (set)) >= FIRST_PSEUDO_REGISTER)\n \t{\n-\t  if (PREV_INSN (insn))\n-\t    NEXT_INSN (PREV_INSN (insn)) = next;\n-\t  else\n-\t    insns = next;\n+\t  struct no_conflict_data data;\n+\n+\t  data.target = const0_rtx;\n+\t  data.first = insns;\n+\t  data.insn = insn;\n+\t  data.must_stay = 0;\n+\t  note_stores (PATTERN (insn), no_conflict_move_test, &data);\n+\t  if (! data.must_stay)\n+\t    {\n+\t      if (PREV_INSN (insn))\n+\t\tNEXT_INSN (PREV_INSN (insn)) = next;\n+\t      else\n+\t\tinsns = next;\n \n-\t  if (next)\n-\t    PREV_INSN (next) = PREV_INSN (insn);\n+\t      if (next)\n+\t\tPREV_INSN (next) = PREV_INSN (insn);\n \n-\t  add_insn (insn);\n+\t      add_insn (insn);\n+\t    }\n \t}\n \n       /* Some ports use a loop to copy large arguments onto the stack."}]}