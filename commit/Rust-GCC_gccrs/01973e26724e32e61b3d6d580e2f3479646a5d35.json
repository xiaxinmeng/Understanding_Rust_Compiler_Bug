{"sha": "01973e26724e32e61b3d6d580e2f3479646a5d35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5NzNlMjY3MjRlMzJlNjFiM2Q2ZDU4MGUyZjM0Nzk2NDZhNWQzNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-08-06T15:43:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-06T15:43:46Z"}, "message": "re PR middle-end/37010 (-mno-accumulate-outgoing-args doesn't work with stack alignment)\n\ngcc/\n\n2008-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/37010\n\t* calls.c (expand_call): Use the biggest preferred stack\n\tboundary.\n\ngcc/testsuite/\n\n2008-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/37010\n\t* gcc.dg/torture/stackalign/push-1.c: New.\n\nFrom-SVN: r138808", "tree": {"sha": "e84199e58cc946b8b39ac0bbb9cb066b09bd3779", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e84199e58cc946b8b39ac0bbb9cb066b09bd3779"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01973e26724e32e61b3d6d580e2f3479646a5d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01973e26724e32e61b3d6d580e2f3479646a5d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01973e26724e32e61b3d6d580e2f3479646a5d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01973e26724e32e61b3d6d580e2f3479646a5d35/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46662f25ea011aa367beab9b6dd6276a47c4e48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46662f25ea011aa367beab9b6dd6276a47c4e48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46662f25ea011aa367beab9b6dd6276a47c4e48a"}], "stats": {"total": 77, "additions": 75, "deletions": 2}, "files": [{"sha": "731839f76304d942404860b88397e5d6c3a96e84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01973e26724e32e61b3d6d580e2f3479646a5d35", "patch": "@@ -1,3 +1,9 @@\n+2008-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/37010\n+\t* calls.c (expand_call): Use the biggest preferred stack\n+\tboundary.\n+\n 2008-08-06  Michael Matz  <matz@suse.de>\n \n \tPR target/36613"}, {"sha": "146f251d5107453c3e7382db599785768c5244c1", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=01973e26724e32e61b3d6d580e2f3479646a5d35", "patch": "@@ -2319,10 +2319,13 @@ expand_call (tree exp, rtx target, int ignore)\n       || !lang_hooks.decls.ok_for_sibcall (fndecl))\n     try_tail_call = 0;\n \n-  /* Ensure current function's preferred stack\n-     boundary is at least what we need.  */\n+  /* Ensure current function's preferred stack boundary is at least\n+     what we need.  Stack alignment may also increase preferred stack\n+     boundary.  */\n   if (crtl->preferred_stack_boundary < preferred_stack_boundary)\n     crtl->preferred_stack_boundary = preferred_stack_boundary;\n+  else\n+    preferred_stack_boundary = crtl->preferred_stack_boundary;\n \n   preferred_unit_stack_boundary = preferred_stack_boundary / BITS_PER_UNIT;\n "}, {"sha": "a2f0d060844b4c4b3bc584ef1afef51c96b553db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01973e26724e32e61b3d6d580e2f3479646a5d35", "patch": "@@ -1,3 +1,8 @@\n+2008-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/37010\n+\t* gcc.dg/torture/stackalign/push-1.c: New.\n+\n 2008-08-06  Michael Matz  <matz@suse.de>\n \n \tPR target/36613"}, {"sha": "7417324e4bb49aa26b4046b441b68d9890d20534", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/push-1.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01973e26724e32e61b3d6d580e2f3479646a5d35/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c?ref=01973e26724e32e61b3d6d580e2f3479646a5d35", "patch": "@@ -0,0 +1,59 @@\n+/* PR middle-end/37010 */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-msse2 -mpreferred-stack-boundary=2\" } */\n+\n+#include <emmintrin.h>\n+#include \"cpuid.h\"\n+\n+typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));\n+typedef int aligned __attribute__((aligned(16)));\n+\n+extern void abort (void);\n+\n+__m128 r;\n+\n+int\n+__attribute__ ((noinline))\n+check_int (int *i, int align)\n+{\n+  *i = 20;\n+  if ((((ptrdiff_t) i) & (align - 1)) != 0)\n+    {\n+      abort ();\n+    }\n+  return *i;\n+}\n+\n+void\n+__attribute__ ((noinline))\n+foo (__m128 x, __m128 y ,__m128 z ,__m128 a, int size)\n+{\n+  aligned i;\n+\n+  if (size != 5 || check_int (&i, __alignof__(i)) != i)\n+    abort ();\n+\n+  r = a;\n+}\n+\n+int\n+main (void)\n+{\n+  __m128 x = { 1.0 };\n+  unsigned int eax, ebx, ecx, edx;\n+ \n+  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n+    return 0;\n+\n+  /* Run SSE2 test only if host has SSE2 support.  */\n+  if (edx & bit_SSE2)\n+    {\n+      foo (x, x, x, x, 5);\n+\n+      if (__builtin_memcmp (&r, &x, sizeof (r)))\n+\tabort ();\n+    }\n+\n+  return 0;\n+}"}]}