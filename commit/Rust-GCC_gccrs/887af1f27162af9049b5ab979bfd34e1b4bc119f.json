{"sha": "887af1f27162af9049b5ab979bfd34e1b4bc119f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg3YWYxZjI3MTYyYWY5MDQ5YjVhYjk3OWJmZDM0ZTFiNGJjMTE5Zg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2001-06-11T14:48:11Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2001-06-11T14:48:11Z"}, "message": "alpha.h (CPP_SPEC): Don't define __LANGUAGE_C and variants for .cpp/.cp/.c++ files.\n\n\t* config/alpha/alpha.h (CPP_SPEC): Don't define __LANGUAGE_C and\n\tvariants for .cpp/.cp/.c++ files.\n\tMove definition of __LANGUAGE_C_PLUS_PLUS ...\n\t(CPLUSPLUS_CPP_SPEC): ... here.\n\nFrom-SVN: r43190", "tree": {"sha": "d8184510a65eba36093710a23674d77bcbe84cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8184510a65eba36093710a23674d77bcbe84cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/887af1f27162af9049b5ab979bfd34e1b4bc119f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/887af1f27162af9049b5ab979bfd34e1b4bc119f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/887af1f27162af9049b5ab979bfd34e1b4bc119f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/887af1f27162af9049b5ab979bfd34e1b4bc119f/comments", "author": null, "committer": null, "parents": [{"sha": "4bb83350d48a512294f661a484353481b97e7360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb83350d48a512294f661a484353481b97e7360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb83350d48a512294f661a484353481b97e7360"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "a950d42035a5488eb51e389726b7bd19b80b0e69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/887af1f27162af9049b5ab979bfd34e1b4bc119f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/887af1f27162af9049b5ab979bfd34e1b4bc119f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=887af1f27162af9049b5ab979bfd34e1b4bc119f", "patch": "@@ -1,3 +1,10 @@\n+2001-06-11  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/alpha.h (CPP_SPEC): Don't define __LANGUAGE_C and\n+\tvariants for .cpp/.cp/.c++ files. \n+\tMove definition of __LANGUAGE_C_PLUS_PLUS ...\n+\t(CPLUSPLUS_CPP_SPEC): ... here.\n+\n Mon Jun 11 15:47:45 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* jump.c (duplicate_loop_exit_test): Fix loop header heuristics."}, {"sha": "148a6cffaebe806d1025ed7e02cdd3f2af9868d0", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/887af1f27162af9049b5ab979bfd34e1b4bc119f/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/887af1f27162af9049b5ab979bfd34e1b4bc119f/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=887af1f27162af9049b5ab979bfd34e1b4bc119f", "patch": "@@ -21,14 +21,20 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n+/* For C++ we need to ensure that __LANGUAGE_C_PLUS_PLUS is defined independent\n+   of the source file extension.  */\n+#define CPLUSPLUS_CPP_SPEC \"\\\n+-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS -D__cplusplus \\\n+%(cpp) \\\n+\"\n+\n /* Write out the correct language type definition for the header files.  \n    Unless we have assembler language, write out the symbols for C.  */\n #define CPP_SPEC \"\\\n %{!undef:\\\n %{.S:-D__LANGUAGE_ASSEMBLY__ -D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY }}\\\n-%{.cc|.cxx|.C:-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS -D__cplusplus }\\\n %{.m:-D__LANGUAGE_OBJECTIVE_C__ -D__LANGUAGE_OBJECTIVE_C }\\\n-%{!.S:%{!.cc:%{!.cxx:%{!.C:%{!.m:-D__LANGUAGE_C__ -D__LANGUAGE_C %{!ansi:-DLANGUAGE_C }}}}}}\\\n+%{!.S:%{!.cc:%{!.cxx:%{!.cpp:%{!.cp:%{!.c++:%{!.C:%{!.m:-D__LANGUAGE_C__ -D__LANGUAGE_C %{!ansi:-DLANGUAGE_C }}}}}}}}}\\\n %{mieee:-D_IEEE_FP }\\\n %{mieee-with-inexact:-D_IEEE_FP -D_IEEE_FP_INEXACT }}\\\n %(cpp_cpu) %(cpp_subtarget)\""}]}