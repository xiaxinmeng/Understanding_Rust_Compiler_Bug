{"sha": "713125282e264e5203f725ec969468d26cc966a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzMTI1MjgyZTI2NGU1MjAzZjcyNWVjOTY5NDY4ZDI2Y2M5NjZhMQ==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2019-01-08T09:52:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-01-08T09:52:32Z"}, "message": "[Ada] Revert recent changes in the generation of deps in ali files\n\nFollowing the discovery of regressions in GPRbuild, this reverts both\nr263100 and r264608:\n\n2019-01-08  Justin Squirek  <squirek@adacore.com>\n\n\tRevert:\n\n\t2018-07-31  Justin Squirek  <squirek@adacore.com>\n\n\tgcc/ada/\n\n\t\t* lib-writ.adb (Write_With_Lines): Modfiy the generation\n\t\tof dependencies within ali files so that source unit\n\t\tbodies are properly listed even if said bodies are\n\t\tmissing.  Perform legacy behavior in GNATprove mode.\n\t\t* lib-writ.ads: Modify documentation to reflect current\n\t\tbehavior.\n\n\tand:\n\n\t2018-09-26  Justin Squirek  <squirek@adacore.com>\n\n\tgcc/ada/\n\n\t\t* lib-writ.adb, lib-writ.ads (Write_With_Lines): Add\n\t\tdocumentation and an extra conditional check for RCI\n\t\tunits so that generated ali files will list the spec\n\t\tonly instead of a body when a body is not found.\n\nFrom-SVN: r267680", "tree": {"sha": "900b3f8f441df990d782b536fb2a8ed92c0522ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/900b3f8f441df990d782b536fb2a8ed92c0522ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713125282e264e5203f725ec969468d26cc966a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713125282e264e5203f725ec969468d26cc966a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713125282e264e5203f725ec969468d26cc966a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713125282e264e5203f725ec969468d26cc966a1/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30fa2068a3d4317b5b2282eb2e37e98aedfcbf4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fa2068a3d4317b5b2282eb2e37e98aedfcbf4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30fa2068a3d4317b5b2282eb2e37e98aedfcbf4e"}], "stats": {"total": 84, "additions": 42, "deletions": 42}, "files": [{"sha": "7995c202ee1a99ac5dae83b361c973bb1375d80c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713125282e264e5203f725ec969468d26cc966a1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713125282e264e5203f725ec969468d26cc966a1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=713125282e264e5203f725ec969468d26cc966a1", "patch": "@@ -1,3 +1,29 @@\n+2019-01-08  Justin Squirek  <squirek@adacore.com>\n+\n+\tRevert:\n+\n+\t2018-07-31  Justin Squirek  <squirek@adacore.com>\n+\n+\tgcc/ada/\n+\n+\t\t* lib-writ.adb (Write_With_Lines): Modfiy the generation\n+\t\tof dependencies within ali files so that source unit\n+\t\tbodies are properly listed even if said bodies are\n+\t\tmissing.  Perform legacy behavior in GNATprove mode.\n+\t\t* lib-writ.ads: Modify documentation to reflect current\n+\t\tbehavior.\n+\n+\tand:\n+\n+\t2018-09-26  Justin Squirek  <squirek@adacore.com>\n+\n+\tgcc/ada/\n+\n+\t\t* lib-writ.adb, lib-writ.ads (Write_With_Lines): Add\n+\t\tdocumentation and an extra conditional check for RCI\n+\t\tunits so that generated ali files will list the spec\n+\t\tonly instead of a body when a body is not found.\n+\n 2019-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnatvsn.ads: Bump copyright year."}, {"sha": "759f8479c807cc3ad1c54b36b7ffedd7dddacdb8", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 9, "deletions": 34, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713125282e264e5203f725ec969468d26cc966a1/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713125282e264e5203f725ec969468d26cc966a1/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=713125282e264e5203f725ec969468d26cc966a1", "patch": "@@ -953,42 +953,17 @@ package body Lib.Writ is\n                Write_Info_Tab (25);\n \n                if Is_Spec_Name (Uname) then\n+                  Body_Fname :=\n+                    Get_File_Name\n+                      (Uname    => Get_Body_Name (Uname),\n+                       Subunit  => False,\n+                       May_Fail => True);\n \n-                  --  In GNATprove mode we must write the spec of a unit which\n-                  --  requires a body if that body is not found. This will\n-                  --  allow partial analysis on incomplete sources. Also, in\n-                  --  the case of a unit that is a remote call interface, the\n-                  --  bodies of packages may not exist but still may form a\n-                  --  valid program - so we handle that here as well.\n-\n-                  if GNATprove_Mode\n-                    or else Is_Remote_Call_Interface (Cunit_Entity (Unum))\n-                  then\n-                     Body_Fname :=\n-                       Get_File_Name\n-                         (Uname    => Get_Body_Name (Uname),\n-                          Subunit  => False,\n-                          May_Fail => True);\n-\n-                     Body_Index := Get_Unit_Index (Get_Body_Name (Uname));\n-\n-                     if Body_Fname = No_File then\n-                        Body_Fname := Get_File_Name (Uname, Subunit => False);\n-                        Body_Index := Get_Unit_Index (Uname);\n-                     end if;\n-\n-                  --  In the normal path we don't allow failure in fetching the\n-                  --  name of the desired body unit so that it may be properly\n-                  --  referenced in the output ali - even if it is missing.\n-\n-                  else\n-                     Body_Fname :=\n-                       Get_File_Name\n-                         (Uname    => Get_Body_Name (Uname),\n-                          Subunit  => False,\n-                          May_Fail => False);\n+                  Body_Index := Get_Unit_Index (Get_Body_Name (Uname));\n \n-                     Body_Index := Get_Unit_Index (Get_Body_Name (Uname));\n+                  if Body_Fname = No_File then\n+                     Body_Fname := Get_File_Name (Uname, Subunit => False);\n+                     Body_Index := Get_Unit_Index (Uname);\n                   end if;\n                else\n                   Body_Fname := Get_File_Name (Uname, Subunit => False);"}, {"sha": "b8e92a35e50cc00f04f99d59d410ed4b0ddfac4b", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713125282e264e5203f725ec969468d26cc966a1/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713125282e264e5203f725ec969468d26cc966a1/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=713125282e264e5203f725ec969468d26cc966a1", "patch": "@@ -629,14 +629,13 @@ package Lib.Writ is\n    --      by the current unit. One Z line is present for each unit that is\n    --      only implicitly withed by the current unit. The first parameter is\n    --      the unit name in internal format. The second parameter is the file\n-   --      name of the body unit on which the current compilation unit depends,\n-   --      except when in GNATprove mode or when the unit is a remote call\n-   --      interface. In these cases, when packages that require a body have\n-   --      no associated source file, the file name of the spec is used instead\n-   --      to allow partial analysis of incomplete sources. The third parameter\n-   --      is the file name of the library information file that contains the\n-   --      results of compiling this unit. The optional modifiers are used as\n-   --      follows:\n+   --      name of the file that must be compiled to compile this unit. It is\n+   --      usually the file for the body, except for packages which have no\n+   --      body. For units that need a body, if the source file for the body\n+   --      cannot be found, the file name of the spec is used instead. The\n+   --      third parameter is the file name of the library information file\n+   --      that contains the results of compiling this unit. The optional\n+   --      modifiers are used as follows:\n \n    --        E   pragma Elaborate applies to this unit\n "}]}