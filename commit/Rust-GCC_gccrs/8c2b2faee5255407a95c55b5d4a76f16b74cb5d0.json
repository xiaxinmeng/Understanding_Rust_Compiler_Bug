{"sha": "8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMyYjJmYWVlNTI1NTQwN2E5NWM1NWI1ZDRhNzZmMTZiNzRjYjVkMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-09-16T06:34:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-09-16T06:34:12Z"}, "message": "* config/i386/i386.h (PUSH_ROUNDING): Redefine using UNITS_PER_WORD.\n\nFrom-SVN: r164328", "tree": {"sha": "7e97656b8cb474581e7aca22c1022f44c8f54019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e97656b8cb474581e7aca22c1022f44c8f54019"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/comments", "author": null, "committer": null, "parents": [{"sha": "a6a9438467d8e869befb56d274af594606ac24a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6a9438467d8e869befb56d274af594606ac24a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6a9438467d8e869befb56d274af594606ac24a4"}], "stats": {"total": 65, "additions": 30, "deletions": 35}, "files": [{"sha": "a56ebaf9d0d90b497ebf2fec6a97a0476d819023", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "patch": "@@ -1,3 +1,7 @@\n+2010-09-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (PUSH_ROUNDING): Redefine using UNITS_PER_WORD.\n+\n 2010-09-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/45593\n@@ -84,16 +88,15 @@\n \tis enabled, probe up to frame_size + STACK_CHECK_PROTECT bytes.\n \n 2010-09-15  Olivier Hainque  <hainque@adacore.com>\n-            Jose Ruiz  <ruiz@adacore.com>\n+\t    Jose Ruiz  <ruiz@adacore.com>\n \n \t* config/alpha/osf5.h (MD_UNWIND_SUPPORT): Define.\n \t* config/alpha/osf5-unwind.h: New file.\n \n 2010-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/45672\n-\t* config/mips/mips.c (mips_units_per_simd_word): Correct return\n-\ttype.\n+\t* config/mips/mips.c (mips_units_per_simd_word): Correct return type.\n \t* config/rs6000/rs6000.c (rs6000_units_per_simd_word): Likewise.\n \t* config/sparc/sparc.c (sparc_units_per_simd_word): Likewise.\n \n@@ -144,8 +147,7 @@\n \n \t* config/i386/i386-protos.h (ix86_units_per_simd_word): Removed.\n \n-\t* config/i386/i386.c (ix86_units_per_simd_word): Make it\n-\tstatic.\n+\t* config/i386/i386.c (ix86_units_per_simd_word): Make it static.\n \t(TARGET_VECTORIZE_UNITS_PER_SIMD_WORD): New.\n \n \t* doc/tm.texi.in: Remove UNITS_PER_SIMD_WORD.  Add\n@@ -207,7 +209,7 @@\n \tPR tree-optimization/45470\n \t* tree-vect-data-refs.c (vect_analyze_data_refs): Fail if a statement\n \tcan throw an exception.\n-\t* tree-vect-stmts.c (vectorizable_call): Likewise.\t\n+\t* tree-vect-stmts.c (vectorizable_call): Likewise.\n \n 2010-09-14  DJ Delorie  <dj@redhat.com>\n \n@@ -284,9 +286,9 @@\n 2010-09-13  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/arm/arm.md: (define_attr \"conds\"): Update comment.\n-\t* config/arm/sync.md (arm_sync_compare_and_swapsi): Change \n+\t* config/arm/sync.md (arm_sync_compare_and_swapsi): Change\n \tconds attribute to clob.\n-        (arm_sync_compare_and_swapsi): Likewise.\n+\t(arm_sync_compare_and_swapsi): Likewise.\n \t(arm_sync_compare_and_swap<mode>): Likewise.\n \t(arm_sync_lock_test_and_setsi): Likewise.\n \t(arm_sync_lock_test_and_set<mode>): Likewise.\n@@ -301,9 +303,9 @@\n \n 2010-09-13  Olivier Hainque  <hainque@adacore.com>\n \n-        * fwprop.c (forward_propagate_and_simplify): Only attach a\n+\t* fwprop.c (forward_propagate_and_simplify): Only attach a\n \tREG_EQUAL note to an insn if the destination is a register.\n-        * gcse.c (try_replace_reg): Likewise.\n+\t* gcse.c (try_replace_reg): Likewise.\n \n 2010-09-13  Richard Guenther  <rguenther@suse.de>\n \n@@ -379,8 +381,7 @@\n \n 2010-09-10  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree.c (type_hash_eq): For ARRAY_TYPEs also compare\n-\tTYPE_SIZE.\n+\t* tree.c (type_hash_eq): For ARRAY_TYPEs also compare TYPE_SIZE.\n \t(build_index_type): Implement in terms of build_range_type.\n \t(build_range_type): Do not allow NULL_TREE type, improve\n \thashing to cover more cases.  Set TYPE_STRUCTURAL_EQUALITY_P\n@@ -395,10 +396,9 @@\n \n 2010-09-10  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-        * config/arm/neon-schedgen.ml (allCores): Add support for\n-\tCortex-A9.\n-        * config/arm/cortex-a9-neon.md: New and partially generated.\n-        * config/arm/cortex-a9.md (cortex_a9_dp): Adjust for Neon.\n+\t* config/arm/neon-schedgen.ml (allCores): Add support for Cortex-A9.\n+\t* config/arm/cortex-a9-neon.md: New and partially generated.\n+\t* config/arm/cortex-a9.md (cortex_a9_dp): Adjust for Neon.\n \n 2010-09-10  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "1b735cb07205622f8760a843310012641cfb20c7", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "patch": "@@ -1456,26 +1456,21 @@ enum reg_class\n    of the first local allocated.  */\n #define STARTING_FRAME_OFFSET 0\n \n-/* If we generate an insn to push BYTES bytes,\n-   this says how many the stack pointer really advances by.\n-   On 386, we have pushw instruction that decrements by exactly 2 no\n-   matter what the position was, there is no pushb.\n-   But as CIE data alignment factor on this arch is -4, we need to make\n-   sure all stack pointer adjustments are in multiple of 4.\n-\n-   For 64bit ABI we round up to 8 bytes.\n- */\n+/* If we generate an insn to push BYTES bytes, this says how many the stack\n+   pointer really advances by.  On 386, we have pushw instruction that\n+   decrements by exactly 2 no matter what the position was, there is no pushb.\n+\n+   But as CIE data alignment factor on this arch is -4 for 32bit targets\n+   and -8 for 64bit targets, we need to make sure all stack pointer adjustments\n+   are in multiple of 4 for 32bit targets and 8 for 64bit targets.  */\n \n #define PUSH_ROUNDING(BYTES) \\\n-  (TARGET_64BIT\t\t     \\\n-   ? (((BYTES) + 7) & (-8))  \\\n-   : (((BYTES) + 3) & (-4)))\n-\n-/* If defined, the maximum amount of space required for outgoing arguments will\n-   be computed and placed into the variable\n-   `crtl->outgoing_args_size'.  No space will be pushed onto the\n-   stack for each call; instead, the function prologue should increase the stack\n-   frame size by this amount.  \n+  (((BYTES) + UNITS_PER_WORD - 1) & -UNITS_PER_WORD)\n+\n+/* If defined, the maximum amount of space required for outgoing arguments\n+   will be computed and placed into the variable `crtl->outgoing_args_size'.\n+   No space will be pushed onto the stack for each call; instead, the\n+   function prologue should increase the stack frame size by this amount.  \n    \n    MS ABI seem to require 16 byte alignment everywhere except for function\n    prologue and apilogue.  This is not possible without"}, {"sha": "6f8f84a11e1031f2d6fd839fd153784866fa67a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2b2faee5255407a95c55b5d4a76f16b74cb5d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c2b2faee5255407a95c55b5d4a76f16b74cb5d0", "patch": "@@ -38,7 +38,7 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n \n-\t2006-03-09 Fariborz Jahanian <fjahanian@apple.com>\n+\t2006-03-09  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4457381\n \t* objc.dg/msg-in-protocol.m: New."}]}