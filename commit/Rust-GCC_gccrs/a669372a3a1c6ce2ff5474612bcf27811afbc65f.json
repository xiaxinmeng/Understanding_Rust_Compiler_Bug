{"sha": "a669372a3a1c6ce2ff5474612bcf27811afbc65f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY2OTM3MmEzYTFjNmNlMmZmNTQ3NDYxMmJjZjI3ODExYWZiYzY1Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-02-18T21:03:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-02-18T21:03:05Z"}, "message": "revert accidental commit\n\nFrom-SVN: r144271", "tree": {"sha": "20dc5dd3e2fb5e8869a5c439f8d79be05bc7ee3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20dc5dd3e2fb5e8869a5c439f8d79be05bc7ee3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a669372a3a1c6ce2ff5474612bcf27811afbc65f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a669372a3a1c6ce2ff5474612bcf27811afbc65f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a669372a3a1c6ce2ff5474612bcf27811afbc65f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a669372a3a1c6ce2ff5474612bcf27811afbc65f/comments", "author": null, "committer": null, "parents": [{"sha": "98b806924df9a7bb913cc5cc2d2e7fdc7e2a5de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b806924df9a7bb913cc5cc2d2e7fdc7e2a5de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98b806924df9a7bb913cc5cc2d2e7fdc7e2a5de0"}], "stats": {"total": 39, "additions": 10, "deletions": 29}, "files": [{"sha": "c91cb15dc74469d1b066cf5682597578475ac213", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=a669372a3a1c6ce2ff5474612bcf27811afbc65f", "patch": "@@ -44,23 +44,7 @@ cxx_print_decl (FILE *file, tree node, int indent)\n   if (!CODE_CONTAINS_STRUCT (TREE_CODE (node), TS_DECL_COMMON)\n       || !DECL_LANG_SPECIFIC (node))\n     return;\n-  if (TREE_CODE (node) == FUNCTION_DECL)\n-    {\n-      int flags = TFF_DECL_SPECIFIERS|TFF_RETURN_TYPE\n-\t|TFF_FUNCTION_DEFAULT_ARGUMENTS|TFF_EXCEPTION_SPECIFICATION ;\n-      indent_to (file, indent + 3);\n-      fprintf (file, \" full-name \\\"%s\\\"\", decl_as_string (node, flags));\n-    }\n-  else if (TREE_CODE (node) == TEMPLATE_DECL)\n-    {\n-      indent_to (file, indent + 3);\n-      fprintf (file, \" full-name \\\"%s\\\"\",\n-\t       decl_as_string (node, TFF_TEMPLATE_HEADER));\n-    }\n-\n   indent_to (file, indent + 3);\n-  if (DECL_EXTERNAL (node) && DECL_NOT_REALLY_EXTERN (node))\n-    fprintf (file, \" not-really-extern\");\n   if (TREE_CODE (node) == FUNCTION_DECL\n       && DECL_PENDING_INLINE_INFO (node))\n     fprintf (file, \" pending-inline-info %p\",\n@@ -97,9 +81,6 @@ cxx_print_type (FILE *file, tree node, int indent)\n \n     case RECORD_TYPE:\n     case UNION_TYPE:\n-      indent_to (file, indent + 4);\n-      fprintf (file, \"full-name \\\"%s\\\"\",\n-\t       type_as_string (node, TFF_CLASS_KEY_OR_ENUM));\n       break;\n \n     default:\n@@ -116,7 +97,7 @@ cxx_print_type (FILE *file, tree node, int indent)\n   indent_to (file, indent + 3);\n \n   if (TYPE_NEEDS_CONSTRUCTING (node))\n-    fputs ( \" needs-constructor\", file);\n+    fputs ( \"needs-constructor\", file);\n   if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (node))\n     fputs (\" needs-destructor\", file);\n   if (TYPE_HAS_DEFAULT_CONSTRUCTOR (node))"}, {"sha": "348bd58d6905d44e2adf3952974191ff39c044b4", "filename": "gcc/testsuite/g++.dg/init/const7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C?ref=a669372a3a1c6ce2ff5474612bcf27811afbc65f", "patch": "@@ -9,5 +9,5 @@ short offsets[1] = {\n // This ensures that we get a dump whether or not the bug is present.\n void fn() { }\n \n-// { dg-final { scan-tree-dump-not \"initialization\"  \"gimple\" } }\n+// { dg-final { scan-tree-dump-not \"initialization\"  \"gimple\" { xfail *-*-* } } }\n // { dg-final { cleanup-tree-dump \"gimple\" } }"}, {"sha": "ff45ecc635d8a3d650b5847fcd5757c40421d6b8", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=a669372a3a1c6ce2ff5474612bcf27811afbc65f", "patch": "@@ -2585,20 +2585,18 @@ print_call_name (pretty_printer *buffer, const_tree node)\n   if (TREE_CODE (op0) == NON_LVALUE_EXPR)\n     op0 = TREE_OPERAND (op0, 0);\n \n- again:\n   switch (TREE_CODE (op0))\n     {\n     case VAR_DECL:\n     case PARM_DECL:\n-    case FUNCTION_DECL:\n       dump_function_name (buffer, op0);\n       break;\n \n     case ADDR_EXPR:\n     case INDIRECT_REF:\n     case NOP_EXPR:\n-      op0 = TREE_OPERAND (op0, 0);\n-      goto again;\n+      dump_generic_node (buffer, TREE_OPERAND (op0, 0), 0, 0, false);\n+      break;\n \n     case COND_EXPR:\n       pp_string (buffer, \"(\");"}, {"sha": "7fed3009b84a748237df9c23c5e04cbad4ec521d", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a669372a3a1c6ce2ff5474612bcf27811afbc65f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=a669372a3a1c6ce2ff5474612bcf27811afbc65f", "patch": "@@ -4316,10 +4316,12 @@ initializer_constant_valid_p (tree value, tree endtype)\n \t}\n \n       /* Support narrowing pointer differences.  */\n-      ret = narrowing_initializer_constant_valid_p (value, endtype);\n-      if (ret != NULL_TREE)\n-\treturn ret;\n-\n+      if (TREE_CODE (value) == POINTER_PLUS_EXPR)\n+\t{\n+\t  ret = narrowing_initializer_constant_valid_p (value, endtype);\n+\t  if (ret != NULL_TREE)\n+\t    return ret;\n+\t}\n       break;\n \n     case MINUS_EXPR:"}]}