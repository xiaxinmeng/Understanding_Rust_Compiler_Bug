{"sha": "63e96d44215b7b86eb2eb754dcf139437e40d850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNlOTZkNDQyMTViN2I4NmViMmViNzU0ZGNmMTM5NDM3ZTQwZDg1MA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-01T09:43:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-15T08:04:36Z"}, "message": "[Ada] Fix analysis of Relaxed_Initialization for bodies-as-specs\n\n2020-06-15  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_Aspect_Relaxed_Initialization): Fix\n\tdealing with scopes on subprogram bodies that act as specs.\n\t* sem_util.adb (Has_Relaxed_Initialization): Fix trivial\n\tmistake.", "tree": {"sha": "e71f2ef95b68d36acfbff6f2f3e8e7791c59e89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e71f2ef95b68d36acfbff6f2f3e8e7791c59e89a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e96d44215b7b86eb2eb754dcf139437e40d850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e96d44215b7b86eb2eb754dcf139437e40d850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e96d44215b7b86eb2eb754dcf139437e40d850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e96d44215b7b86eb2eb754dcf139437e40d850/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7837c085aa5538430cdc9ffc04fcfa1f581656f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7837c085aa5538430cdc9ffc04fcfa1f581656f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7837c085aa5538430cdc9ffc04fcfa1f581656f"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "19a0780cc1e27d0491eb2fd5fdcf5d24da20a34f", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e96d44215b7b86eb2eb754dcf139437e40d850/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e96d44215b7b86eb2eb754dcf139437e40d850/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=63e96d44215b7b86eb2eb754dcf139437e40d850", "patch": "@@ -2203,6 +2203,10 @@ package body Sem_Ch13 is\n                --  Items that appear in the relaxed initialization aspect\n                --  expression of a subprogram; for detecting duplicates.\n \n+               Restore_Scope : Boolean;\n+               --  Will be set to True if we need to restore the scope table\n+               --  after analyzing the aspect expression.\n+\n             --  Start of processing for Analyze_Aspect_Relaxed_Initialization\n \n             begin\n@@ -2231,17 +2235,23 @@ package body Sem_Ch13 is\n                elsif Is_Subprogram (E) then\n                   if Present (Expr) then\n \n-                     --  Subprogram and its formal parameters must be visible\n-                     --  when analyzing the aspect expression.\n-\n-                     pragma Assert (not In_Open_Scopes (E));\n+                     --  If we analyze subprogram body that acts as its own\n+                     --  spec, then the subprogram itself and its formals are\n+                     --  already installed; otherwise, we need to install them,\n+                     --  as they must be visible when analyzing the aspect\n+                     --  expression.\n \n-                     Push_Scope (E);\n-\n-                     if Is_Generic_Subprogram (E) then\n-                        Install_Generic_Formals (E);\n+                     if In_Open_Scopes (E) then\n+                        Restore_Scope := False;\n                      else\n-                        Install_Formals (E);\n+                        Restore_Scope := True;\n+                        Push_Scope (E);\n+\n+                        if Is_Generic_Subprogram (E) then\n+                           Install_Generic_Formals (E);\n+                        else\n+                           Install_Formals (E);\n+                        end if;\n                      end if;\n \n                      --  Aspect expression is either an aggregate with list of\n@@ -2281,7 +2291,9 @@ package body Sem_Ch13 is\n                         Analyze_Relaxed_Parameter (E, Expr, Seen);\n                      end if;\n \n-                     End_Scope;\n+                     if Restore_Scope then\n+                        End_Scope;\n+                     end if;\n                   else\n                      Error_Msg_N (\"missing expression for aspect %\", N);\n                   end if;"}, {"sha": "a3dbaaf34fa845094745cba1f6c7dd6206f2a9c9", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e96d44215b7b86eb2eb754dcf139437e40d850/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e96d44215b7b86eb2eb754dcf139437e40d850/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=63e96d44215b7b86eb2eb754dcf139437e40d850", "patch": "@@ -12511,7 +12511,8 @@ package body Sem_Util is\n \n                if Has_Aspect (Subp_Id, Aspect_Relaxed_Initialization) then\n                   Aspect_Expr :=\n-                    Find_Value_Of_Aspect (E, Aspect_Relaxed_Initialization);\n+                    Find_Value_Of_Aspect\n+                      (Subp_Id, Aspect_Relaxed_Initialization);\n \n                   --  Aspect expression is either an aggregate, e.g.:\n                   --"}]}