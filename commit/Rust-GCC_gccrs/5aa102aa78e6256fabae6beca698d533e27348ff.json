{"sha": "5aa102aa78e6256fabae6beca698d533e27348ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhMTAyYWE3OGU2MjU2ZmFiYWU2YmVjYTY5OGQ1MzNlMjczNDhmZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-09-06T05:20:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-09-06T05:20:25Z"}, "message": "re PR tree-optimization/64910 (tree reassociation results in poor code)\n\n\tPR tree-optimization/64910\n\t* tree-ssa-reassoc.c (reassociate_bb): Restrict last change to\n\tcases where we have 3 or more operands.\n\nFrom-SVN: r251751", "tree": {"sha": "dea5ae204ecf512a5da8667c9133f66b5b2ce877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dea5ae204ecf512a5da8667c9133f66b5b2ce877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aa102aa78e6256fabae6beca698d533e27348ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa102aa78e6256fabae6beca698d533e27348ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa102aa78e6256fabae6beca698d533e27348ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa102aa78e6256fabae6beca698d533e27348ff/comments", "author": null, "committer": null, "parents": [{"sha": "1d441507f7837bbff2c208e731940e6cc460194e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d441507f7837bbff2c208e731940e6cc460194e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d441507f7837bbff2c208e731940e6cc460194e"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "1b3bddbb8063091f99ba2e9f23a1a775f8a9ad8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa102aa78e6256fabae6beca698d533e27348ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa102aa78e6256fabae6beca698d533e27348ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5aa102aa78e6256fabae6beca698d533e27348ff", "patch": "@@ -1,3 +1,9 @@\n+2017-09-05  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/64910\n+\t* tree-ssa-reassoc.c (reassociate_bb): Restrict last change to\n+\tcases where we have 3 or more operands.\n+\n 2017-09-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/81768"}, {"sha": "2fb6aef51d7dfa085537996c99a259db3f1a4eb2", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa102aa78e6256fabae6beca698d533e27348ff/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa102aa78e6256fabae6beca698d533e27348ff/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=5aa102aa78e6256fabae6beca698d533e27348ff", "patch": "@@ -5763,14 +5763,15 @@ reassociate_bb (basic_block bb)\n \t\t\t     \"Width = %d was chosen for reassociation\\n\", width);\n \n \n-\t\t  /* For binary bit operations, if the last operand in\n-\t\t     OPS is a constant, move it to the front.  This\n-\t\t     helps ensure that we generate (X & Y) & C rather\n-\t\t     than (X & C) & Y.  The former will often match\n-\t\t     a canonical bit test when we get to RTL.  */\n-\t\t  if ((rhs_code == BIT_AND_EXPR\n-\t\t       || rhs_code == BIT_IOR_EXPR\n-\t\t       || rhs_code == BIT_XOR_EXPR)\n+\t\t  /* For binary bit operations, if there are at least 3\n+\t\t     operands and the last last operand in OPS is a constant,\n+\t\t     move it to the front.  This helps ensure that we generate\n+\t\t     (X & Y) & C rather than (X & C) & Y.  The former will\n+\t\t     often match a canonical bit test when we get to RTL.  */\n+\t\t  if (ops.length () != 2\n+\t\t      && (rhs_code == BIT_AND_EXPR\n+\t\t          || rhs_code == BIT_IOR_EXPR\n+\t\t          || rhs_code == BIT_XOR_EXPR)\n \t\t      && TREE_CODE (ops.last ()->op) == INTEGER_CST)\n \t\t    std::swap (*ops[0], *ops[ops_num - 1]);\n "}]}