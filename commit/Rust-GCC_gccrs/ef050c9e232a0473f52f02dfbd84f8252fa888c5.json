{"sha": "ef050c9e232a0473f52f02dfbd84f8252fa888c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwNTBjOWUyMzJhMDQ3M2Y1MmYwMmRmYmQ4NGY4MjUyZmE4ODhjNQ==", "commit": {"author": {"name": "Mohan Embar", "email": "gnustuff@thisiscool.com", "date": "2003-10-17T18:44:42Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2003-10-17T18:44:42Z"}, "message": "win32.cc: (_Jv_pipe) Implemented.\n\n\t* win32.cc: (_Jv_pipe) Implemented.\n\t* gnu/java/nio/natPipeImpl.cc: (nativeInit) Use\n\t_Jv_pipe instead of ::pipe.\n\t* include/posix.h: (_Jv_pipe) New inline.\n\t* include/win32.h: (_Jv_pipe) New declaration.\n\nFrom-SVN: r72616", "tree": {"sha": "2b0febcb84c6aa93d2e8ca245c90dcfe9dad78af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b0febcb84c6aa93d2e8ca245c90dcfe9dad78af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef050c9e232a0473f52f02dfbd84f8252fa888c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef050c9e232a0473f52f02dfbd84f8252fa888c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef050c9e232a0473f52f02dfbd84f8252fa888c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef050c9e232a0473f52f02dfbd84f8252fa888c5/comments", "author": null, "committer": null, "parents": [{"sha": "7260e9a0734fb94453101b05778e71d1d7995c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7260e9a0734fb94453101b05778e71d1d7995c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7260e9a0734fb94453101b05778e71d1d7995c84"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "03d60bd49bf1c3b4aa37cf7e52e6a1d5df4b2837", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ef050c9e232a0473f52f02dfbd84f8252fa888c5", "patch": "@@ -1,3 +1,11 @@\n+2003-10-17  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* win32.cc (_Jv_pipe): Implemented.\n+\t* gnu/java/nio/natPipeImpl.cc (nativeInit): Use\n+\t_Jv_pipe instead of ::pipe.\n+\t* include/posix.h (_Jv_pipe): New inline.\n+\t* include/win32.h (_Jv_pipe): New declaration.\n+\t\n 2003-10-17  Ralph Loader  <rcl@ihug.co.nz>\n \n \t* java/lang/StringBuffer.java (getChars): Fix array index checks."}, {"sha": "caae89cdd1ab7f706946e8b23a6843354babeffc", "filename": "libjava/gnu/java/nio/natPipeImpl.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImpl.cc?ref=ef050c9e232a0473f52f02dfbd84f8252fa888c5", "patch": "@@ -26,7 +26,7 @@ gnu::java::nio::PipeImpl::nativeInit (::java::nio::channels::spi::SelectorProvid\n {\n   int filedes [2];\n \n-  if (::pipe (filedes) < 0)\n+  if (_Jv_pipe (filedes) < 0)\n     throw new ::java::io::IOException (JvNewStringUTF (strerror (errno)));\n \n   /* FIXME"}, {"sha": "c8cd5e25e28dbc9184fc63025aabcf51f5772c0f", "filename": "libjava/include/posix.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Finclude%2Fposix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Finclude%2Fposix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix.h?ref=ef050c9e232a0473f52f02dfbd84f8252fa888c5", "patch": "@@ -178,4 +178,11 @@ _Jv_read(int s, void *buf, int len)\n \n #endif /* DISABLE_JAVA_NET */\n \n+// Wraps ::pipe\n+static inline int\n+_Jv_pipe (int filedes[2])\n+{\n+  return ::pipe (filedes);\n+}\n+\n #endif /* __JV_POSIX_H__ */"}, {"sha": "e169adf9b284a0e145392363bbc525f36b696676", "filename": "libjava/include/win32.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Finclude%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Finclude%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32.h?ref=ef050c9e232a0473f52f02dfbd84f8252fa888c5", "patch": "@@ -95,6 +95,7 @@ extern void _Jv_platform_initialize (void);\n extern void _Jv_platform_initProperties (java::util::Properties*);\n extern jlong _Jv_platform_gettimeofday ();\n extern int _Jv_select (int n, fd_set *, fd_set *, fd_set *, struct timeval *);\n+extern int _Jv_pipe (int filedes[2]);\n \n inline void\n _Jv_platform_close_on_exec (jint)"}, {"sha": "e44b7b28729629456ac4dbc66280cc07e6934b89", "filename": "libjava/win32.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Fwin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef050c9e232a0473f52f02dfbd84f8252fa888c5/libjava%2Fwin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32.cc?ref=ef050c9e232a0473f52f02dfbd84f8252fa888c5", "patch": "@@ -12,6 +12,7 @@ details.  */\n #include <platform.h>\n #include <sys/timeb.h>\n #include <stdlib.h>\n+#include <fcntl.h>\n \n #include <java/lang/ArithmeticException.h>\n #include <java/lang/UnsupportedOperationException.h>\n@@ -342,3 +343,9 @@ _Jv_select (int n, fd_set *readfds, fd_set  *writefds,\n     }\n   return r;      \n }\n+\n+int\n+_Jv_pipe (int filedes[2])\n+{\n+  return _pipe (filedes, 4096, _O_BINARY);\n+}"}]}