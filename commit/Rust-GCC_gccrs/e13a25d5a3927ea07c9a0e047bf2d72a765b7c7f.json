{"sha": "e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzYTI1ZDVhMzkyN2VhMDdjOWEwZTA0N2JmMmQ3MmE3NjViN2M3Zg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@tanya.rutgers.edu", "date": "1997-09-23T07:25:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-23T07:25:25Z"}, "message": "expmed.c (expand_divmod): If compute_mode is not the same as mode...\n\n        * expmed.c (expand_divmod): If compute_mode is not the same as\n        mode, handle the case where convert_modes() causes op1 to no\n        longer be a CONST_INT.\n\nFrom-SVN: r15672", "tree": {"sha": "82fc0cd6179b187b9c38df4ee7197638c2eb9aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82fc0cd6179b187b9c38df4ee7197638c2eb9aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f/comments", "author": null, "committer": null, "parents": [{"sha": "4fd10464e796a92bab1f9f30f913ef3b94676be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd10464e796a92bab1f9f30f913ef3b94676be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd10464e796a92bab1f9f30f913ef3b94676be1"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "9eb883e9e53a6980a058425d210362c9156aff96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f", "patch": "@@ -1,5 +1,9 @@\n Tue Sep 23 01:15:50 1997  David S. Miller  <davem@tanya.rutgers.edu>\n \n+\t* expmed.c (expand_divmod): If compute_mode is not the same as\n+\tmode, handle the case where convert_modes() causes op1 to no\n+\tlonger be a CONST_INT.\n+\n \t* reorg.c (dbr_schedule): At end of this pass, add REG_BR_PRED\n \tnote holding get_jump_flags() calculation to all JUMP_INSNs.\n \t* rtl.h (enum reg_note): New note types REG_BR_PRED and REG_SAVE_AREA."}, {"sha": "b6f77c813d2c7d5b87f28f6ffc5314131e55c0ea", "filename": "gcc/expmed.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e13a25d5a3927ea07c9a0e047bf2d72a765b7c7f", "patch": "@@ -2831,6 +2831,14 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n     {\n       op0 = convert_modes (compute_mode, mode, op0, unsignedp);\n       op1 = convert_modes (compute_mode, mode, op1, unsignedp);\n+\n+      /* convert_modes may have tossed op1 into a register, so we\n+\t absolutely must recompute the following.  */\n+      op1_is_constant = GET_CODE (op1) == CONST_INT;\n+      op1_is_pow2 = (op1_is_constant\n+\t\t     && ((EXACT_POWER_OF_2_OR_ZERO_P (INTVAL (op1))\n+\t\t\t  || (! unsignedp\n+\t\t\t      && EXACT_POWER_OF_2_OR_ZERO_P (-INTVAL (op1))))));\n     }\n \n   /* If one of the operands is a volatile MEM, copy it into a register.  */"}]}