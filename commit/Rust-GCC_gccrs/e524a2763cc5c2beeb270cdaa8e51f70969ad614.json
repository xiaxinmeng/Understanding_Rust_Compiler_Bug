{"sha": "e524a2763cc5c2beeb270cdaa8e51f70969ad614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUyNGEyNzYzY2M1YzJiZWViMjcwY2RhYThlNTFmNzA5NjlhZDYxNA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-08-15T23:14:03Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-08-15T23:14:03Z"}, "message": "re PR fortran/25828 ([f2003] ACCESS='STREAM' io support)\n\n2006-08-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/25828\n\t* gfortran.dg/streamio_1.f90: New test.\n\t* gfortran.dg/streamio_2.f90: New test.\n\t* gfortran.dg/streamio_3.f90: New test.\n\t* gfortran.dg/streamio_4.f90: New test.\n\t* gfortran.dg/streamio_5.f90: New test.\n\t* gfortran.dg/streamio_6.f90: New test.\n\t* gfortran.dg/streamio_7.f90: New test.\n\t* gfortran.dg/streamio_8.f90: New test.\n\nFrom-SVN: r116173", "tree": {"sha": "8e0f38df8fce02304a61b23a628fbd78e4634ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e0f38df8fce02304a61b23a628fbd78e4634ae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e524a2763cc5c2beeb270cdaa8e51f70969ad614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e524a2763cc5c2beeb270cdaa8e51f70969ad614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e524a2763cc5c2beeb270cdaa8e51f70969ad614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e524a2763cc5c2beeb270cdaa8e51f70969ad614/comments", "author": null, "committer": null, "parents": [{"sha": "91b30ee5b9c83187fe1d7459cbd29abe302d60ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b30ee5b9c83187fe1d7459cbd29abe302d60ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91b30ee5b9c83187fe1d7459cbd29abe302d60ed"}], "stats": {"total": 225, "additions": 225, "deletions": 0}, "files": [{"sha": "88c66dbc329f6f6daf7018a5ac9ba5e3ec5b3e23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -1,3 +1,15 @@\n+2006-08-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/25828\n+\t* gfortran.dg/streamio_1.f90: New test.\n+\t* gfortran.dg/streamio_2.f90: New test.\n+\t* gfortran.dg/streamio_3.f90: New test.\n+\t* gfortran.dg/streamio_4.f90: New test.\n+\t* gfortran.dg/streamio_5.f90: New test.\n+\t* gfortran.dg/streamio_6.f90: New test.\n+\t* gfortran.dg/streamio_7.f90: New test.\n+\t* gfortran.dg/streamio_8.f90: New test.\n+\n 2006-08-15  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR c/28287"}, {"sha": "5a853fc8e89d5631b7c24d8bbd2dd3e54a954c50", "filename": "gcc/testsuite/gfortran.dg/streamio_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_1.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 1\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+PROGRAM stream_io_1\n+  IMPLICIT NONE\n+  integer(kind=4) i\n+  real(kind=8) r\n+  OPEN(UNIT=11, ACCESS=\"stream\")\n+  WRITE(11) \"first\"\n+  WRITE(11) \"second\"\n+  WRITE(11) 1234567\n+  write(11) 3.14159_8\n+  read(11, pos=12)i\n+  if (i.ne.1234567) call abort()\n+  read(11) r\n+  if (r-3.14159 .gt. 0.00001) call abort()\n+  CLOSE(UNIT=11, status=\"delete\")\n+END PROGRAM stream_io_1\n\\ No newline at end of file"}, {"sha": "a7d5d3ccfaa262a1ca06992761dae1f1dee13953", "filename": "gcc/testsuite/gfortran.dg/streamio_2.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_2.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 2\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+PROGRAM readUstream\n+  IMPLICIT NONE\n+  CHARACTER*3 :: string\n+  INTEGER :: n\n+  string = \"123\"\n+  n = 13579\n+  OPEN(UNIT=11, FILE=\"streamio2\", ACCESS=\"STREAM\")\n+  WRITE(11) \"first\"\n+  WRITE(11) \"second\"\n+  WRITE(11) 7\n+  READ(11, POS=3) string\n+  READ(11, POS=12) n\n+  if (string.ne.\"rst\") call abort()\n+  if (n.ne.7) call abort()\n+  close(unit=11, status=\"delete\")\n+END PROGRAM readUstream\n\\ No newline at end of file"}, {"sha": "b96e5fc8e1d3709d44c9d7b0cc6938592b63e298", "filename": "gcc/testsuite/gfortran.dg/streamio_3.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_3.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 3, tests read_x and inquire.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+program streamio_3\n+  implicit none\n+  integer         :: i(6),j\n+  character(10)   :: myaccess\n+  open(10, access=\"stream\", form=\"formatted\")\n+  i = (/(j,j=1,6)/)\n+  write(10,'(3(2x,i4/)/3(3x,i6/))') i\n+  i = 0\n+  rewind(10)\n+  read(10,'(3(2x,i4/)/3(3x,i6/))') i\n+  if (any(i.ne.(/(j,j=1,6)/))) call abort()\n+  inquire(unit=10, access=myaccess)\n+  if (myaccess.ne.\"STREAM\") call abort()\n+  close(10,status=\"delete\")\n+end program streamio_3\n\\ No newline at end of file"}, {"sha": "871bafed2d66e1cbb48c7846cd1667edc64607e5", "filename": "gcc/testsuite/gfortran.dg/streamio_4.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_4.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 4, Tests string read and writes, single byte.\n+! Verifies buffering is working correctly and position=\"append\"\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+program streamtest\n+  implicit none\n+  character(1)   :: lf = char(10)\n+  character(1)   :: tchar\n+  integer        :: i,j,k\n+  integer, parameter :: lines = 5231\n+   \n+  open(10, file=\"teststream\", access=\"stream\", form=\"formatted\")\n+  \n+  do i=1,lines\n+    do j=0,9\n+      write(10,\"(i5)\") j\n+    end do\n+    write(10,\"(a)\") lf\n+  end do\n+  \n+  close(10)\n+  \n+  open(10, file=\"teststream\", access=\"stream\",&\n+  &form=\"formatted\", position=\"append\")\n+  do i=1,lines\n+    do j=0,9\n+      write(10,\"(i5)\") j\n+    end do\n+    write(10,\"(a)\") lf\n+  end do\n+  rewind(10)\n+  do i=1,lines\n+    do j=0,9\n+      read(10,\"(i5)\") k\n+      if (k.ne.j) call abort()\n+    end do\n+    read(10,\"(a)\") tchar\n+    if (tchar.ne.lf) call abort()\n+  end do\n+\n+  close(10,status=\"delete\")\n+end program streamtest\n\\ No newline at end of file"}, {"sha": "6fdf70779c0a5dda361aeb1385c7bb9f073c5178", "filename": "gcc/testsuite/gfortran.dg/streamio_5.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_5.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 5, unformatted single byte\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+program streamtest5\n+  implicit none\n+  character(1)   :: lf = char(10)\n+  character(1)   :: tchar\n+  integer        :: i,j,k\n+   \n+  open(10, file=\"teststream\", access=\"stream\", form=\"unformatted\")\n+  \n+  do i=1,1229\n+    do j=0,9\n+      write(10) j\n+    end do\n+    write(10) lf\n+  end do\n+  \n+  close(10)\n+  \n+  open(10, file=\"teststream\", access=\"stream\", form=\"unformatted\")\n+  \n+  do i=1,1229\n+    do j=0,9\n+      read(10) k\n+      if (k.ne.j) call abort()\n+    end do\n+    read(10) tchar\n+    if (tchar.ne.lf) call abort()\n+  end do\n+  close(10,status=\"delete\")\n+end program streamtest5\n\\ No newline at end of file"}, {"sha": "3857667b0d7c77fa3102e5f043411c132fc9489a", "filename": "gcc/testsuite/gfortran.dg/streamio_6.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_6.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 6, random writes and reads.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+program streamio_6\n+  implicit none\n+  integer, dimension(100) :: a\n+  character(1) :: c\n+  integer :: i,j,k,ier\n+  real    :: x\n+  data a / 13, 9, 34, 41, 25, 98, 6, 12, 11, 44, 79, 3,&\n+  &    64, 61, 77, 57, 59, 2, 92, 38, 71, 64, 31, 60, 28, 90, 26,&\n+  &    97, 47, 26, 48, 96, 95, 82, 100, 90, 45, 71, 71, 67, 72,&\n+  &    76, 94, 49, 85, 45, 100, 22, 96, 48, 13, 23, 40, 14, 76, 99,&\n+  &    96, 90, 65,  2, 8, 60, 96, 19, 45, 1, 100, 48, 91, 20, 92,&\n+  &    72, 81, 59, 24, 37, 43, 21, 54, 68, 31, 19, 79, 63, 41,&\n+  &    42, 12, 10, 62, 43, 9, 30, 9, 54, 35, 4, 5, 55, 3, 94 /\n+\n+  open(unit=15,file=\"teststream\",access=\"stream\",form=\"unformatted\")\n+  do i=1,100\n+    k = a(i)\n+    write(unit=15, pos=k) achar(k)\n+  enddo\n+  do j=1,100\n+    read(unit=15, pos=a(j), iostat=ier) c\n+    if (ier.ne.0) then\n+      call abort\n+    else\n+      if (achar(a(j)) /= c) call abort\n+    endif\n+  enddo\n+  close(unit=15, status=\"delete\")\n+end program streamio_6\n\\ No newline at end of file"}, {"sha": "7a7b2771282dc12ec29719ef71a1b2dbd602f3f2", "filename": "gcc/testsuite/gfortran.dg/streamio_7.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_7.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 7, Array writes and reads.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+program streamtest\n+  implicit none\n+  character(1)   :: lf = char(10)\n+  character(1)   :: tchar\n+  integer        :: i,j,k\n+  real(kind=4), dimension(100,100) :: anarray\n+  open(10, file=\"teststream\", access=\"stream\", form=\"unformatted\")\n+  anarray = 3.14159\n+  write(10) anarray\n+  anarray = 0.0\n+  read(10, pos=1) anarray\n+  anarray = abs(anarray - 3.14159)\n+  if (any(anarray.gt.0.00001)) call abort()\n+  close(10,status=\"delete\")\n+end program streamtest\n\\ No newline at end of file"}, {"sha": "1e5e16fdfc874ebc84274e4462a64a2f673fdd1e", "filename": "gcc/testsuite/gfortran.dg/streamio_8.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e524a2763cc5c2beeb270cdaa8e51f70969ad614/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_8.f90?ref=e524a2763cc5c2beeb270cdaa8e51f70969ad614", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+! PR25828 Stream IO test 8\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+PROGRAM stream_io_8\n+  IMPLICIT NONE\n+  integer(kind=8) mypos\n+  character(10) mystring\n+  real(kind=8) r\n+  mypos = 0\n+  mystring = \"not yet\"\n+  r = 12.25\n+  OPEN(UNIT=11, ACCESS=\"stream\")\n+  inquire(unit=11, pos=mypos)\n+  if (mypos.ne.1) call abort()\n+  WRITE(11) \"first\"\n+  inquire(unit=11, pos=mypos)\n+  if (mypos.ne.6) call abort()\n+  WRITE(11) \"second\"\n+  inquire(unit=11, pos=mypos)\n+  if (mypos.ne.12) call abort()\n+  WRITE(11) 1234567\n+  inquire(unit=11, pos=mypos)\n+  if (mypos.ne.16) call abort()\n+  write(11) r\n+  r = 0.0\n+  inquire (11, pos=mypos)\n+  read(11,pos=16)r\n+  if (r.ne.12.25) call abort()\n+  inquire(unit=11, pos=mypos)\n+  inquire(unit=11, access=mystring)\n+  if (mypos.ne.24) call abort()\n+  if (mystring.ne.\"STREAM\") call abort()\n+  CLOSE(UNIT=11, status=\"delete\")\n+END PROGRAM stream_io_8\n\\ No newline at end of file"}]}