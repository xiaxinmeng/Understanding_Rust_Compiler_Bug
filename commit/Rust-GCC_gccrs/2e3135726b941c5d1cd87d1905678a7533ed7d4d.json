{"sha": "2e3135726b941c5d1cd87d1905678a7533ed7d4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUzMTM1NzI2Yjk0MWM1ZDFjZDg3ZDE5MDU2NzhhNzUzM2VkN2Q0ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-11-06T17:51:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-11-06T17:51:20Z"}, "message": "re PR c++/41967 (gcc get into endless loop when compiling an openmp program)\n\n\tPR c++/41967\n\t* parser.c (cp_parser_omp_for_loop): After diagnosing not perfectly\n\tnested loop and parsing statements, don't cp_parser_require }, instead\n\texit the loop if next token is CPP_EOF.\n\n\t* g++.dg/gomp/pr41967.C: New test.\n\nFrom-SVN: r153972", "tree": {"sha": "fd226186e450455912c053a4fc79f6b80c4c606b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd226186e450455912c053a4fc79f6b80c4c606b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e3135726b941c5d1cd87d1905678a7533ed7d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3135726b941c5d1cd87d1905678a7533ed7d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3135726b941c5d1cd87d1905678a7533ed7d4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3135726b941c5d1cd87d1905678a7533ed7d4d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "21a2221538583cdb9a1426de4e6db13e4580b8f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2e3135726b941c5d1cd87d1905678a7533ed7d4d", "patch": "@@ -1,3 +1,10 @@\n+2009-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/41967\n+\t* parser.c (cp_parser_omp_for_loop): After diagnosing not perfectly\n+\tnested loop and parsing statements, don't cp_parser_require }, instead\n+\texit the loop if next token is CPP_EOF.\n+\n 2009-11-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/34180"}, {"sha": "1d677cb92ebe077cb0c05c576283e34d2e3a0e44", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2e3135726b941c5d1cd87d1905678a7533ed7d4d", "patch": "@@ -22424,7 +22424,8 @@ cp_parser_omp_for_loop (cp_parser *parser, tree clauses, tree *par_clauses)\n \t    }\n \t  collapse_err = true;\n \t  cp_parser_statement_seq_opt (parser, NULL);\n-\t  cp_parser_require (parser, CPP_CLOSE_BRACE, \"%<}%>\");\n+\t  if (cp_lexer_next_token_is (parser->lexer, CPP_EOF))\n+\t    break;\n \t}\n     }\n "}, {"sha": "5ea0e42aa0432ddb6606acac5eb82d1248cffd5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e3135726b941c5d1cd87d1905678a7533ed7d4d", "patch": "@@ -1,3 +1,8 @@\n+2009-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/41967\n+\t* g++.dg/gomp/pr41967.C: New test.\n+\n 2009-11-06  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/41963"}, {"sha": "0eb489e8beefd2dfc52b1323b92332b471b80451", "filename": "gcc/testsuite/g++.dg/gomp/pr41967.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr41967.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3135726b941c5d1cd87d1905678a7533ed7d4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr41967.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr41967.C?ref=2e3135726b941c5d1cd87d1905678a7533ed7d4d", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/41967\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+int\n+foo ()\n+{\n+  int sum = 0;\n+#pragma omp for collapse(2)\n+  for (int i = 0; i < 5; ++i)\n+    {\n+      for (int j = 0; j < 5; ++j)\n+\t++sum;\n+      ++sum;\t// { dg-error \"collapsed loops not perfectly nested\" }\n+    }\n+  return sum;\n+}"}]}