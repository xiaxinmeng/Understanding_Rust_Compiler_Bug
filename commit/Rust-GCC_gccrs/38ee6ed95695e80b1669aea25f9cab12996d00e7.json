{"sha": "38ee6ed95695e80b1669aea25f9cab12996d00e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhlZTZlZDk1Njk1ZTgwYjE2NjlhZWEyNWY5Y2FiMTI5OTZkMDBlNw==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-03-05T22:16:33Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-03-05T22:16:33Z"}, "message": "(expand_expr, case *_DECL): If we make a non-local reference from a function with DECL_NO_STATIC_CHAIN set, abort.\n\n(expand_expr, case *_DECL): If we make a non-local\n        reference from a function with DECL_NO_STATIC_CHAIN set, abort.\n        (expand_expr, case ADDR_EXPR): We don't need a trampoline for a\n        function with DECL_NO_STATIC_CHAIN set.\n\nFrom-SVN: r11461", "tree": {"sha": "5dac2507bbc99be1baffaabf877fe301b37600e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dac2507bbc99be1baffaabf877fe301b37600e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38ee6ed95695e80b1669aea25f9cab12996d00e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ee6ed95695e80b1669aea25f9cab12996d00e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ee6ed95695e80b1669aea25f9cab12996d00e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ee6ed95695e80b1669aea25f9cab12996d00e7/comments", "author": null, "committer": null, "parents": [{"sha": "e115e436ee2b1cac30275826e7bfa6221fa0efa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e115e436ee2b1cac30275826e7bfa6221fa0efa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e115e436ee2b1cac30275826e7bfa6221fa0efa5"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "890946c51b79745f9f3831179a13224b45d9efa6", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ee6ed95695e80b1669aea25f9cab12996d00e7/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ee6ed95695e80b1669aea25f9cab12996d00e7/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=38ee6ed95695e80b1669aea25f9cab12996d00e7", "patch": "@@ -4678,6 +4678,8 @@ expand_expr (exp, target, tmode, modifier)\n \n \t  /* Mark as non-local and addressable.  */\n \t  DECL_NONLOCAL (exp) = 1;\n+\t  if (DECL_NO_STATIC_CHAIN (current_function_decl))\n+\t    abort ();\n \t  mark_addressable (exp);\n \t  if (GET_CODE (DECL_RTL (exp)) != MEM)\n \t    abort ();\n@@ -6770,7 +6772,8 @@ expand_expr (exp, target, tmode, modifier)\n \n       /* Are we taking the address of a nested function?  */\n       if (TREE_CODE (TREE_OPERAND (exp, 0)) == FUNCTION_DECL\n-\t  && decl_function_context (TREE_OPERAND (exp, 0)) != 0)\n+\t  && decl_function_context (TREE_OPERAND (exp, 0)) != 0\n+\t  && ! DECL_NO_STATIC_CHAIN (TREE_OPERAND (exp, 0)))\n \t{\n \t  op0 = trampoline_address (TREE_OPERAND (exp, 0));\n \t  op0 = force_operand (op0, target);"}, {"sha": "bdbfa541c2935aed5138a052029cc1573c7ead0e", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ee6ed95695e80b1669aea25f9cab12996d00e7/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ee6ed95695e80b1669aea25f9cab12996d00e7/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=38ee6ed95695e80b1669aea25f9cab12996d00e7", "patch": "@@ -4379,9 +4379,10 @@ lookup_static_chain (decl)\n   tree context = decl_function_context (decl);\n   tree link;\n \n-  if (context == 0)\n+  if (context == 0\n+      || (TREE_CODE (decl) == FUNCTION_DECL && DECL_NO_STATIC_CHAIN (decl)))\n     return 0;\n-  \n+\n   /* We treat inline_function_decl as an alias for the current function\n      because that is the inline function whose vars, types, etc.\n      are being merged into the current function.\n@@ -4851,7 +4852,8 @@ init_function_start (subr, filename, line)\n   /* Nonzero if this is a nested function that uses a static chain.  */\n \n   current_function_needs_context\n-    = (decl_function_context (current_function_decl) != 0);\n+    = (decl_function_context (current_function_decl) != 0\n+       && ! DECL_NO_STATIC_CHAIN (current_function_decl));\n \n   /* Set if a call to setjmp is seen.  */\n   current_function_calls_setjmp = 0;"}]}