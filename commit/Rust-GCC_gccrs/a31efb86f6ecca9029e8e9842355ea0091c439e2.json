{"sha": "a31efb86f6ecca9029e8e9842355ea0091c439e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMxZWZiODZmNmVjY2E5MDI5ZThlOTg0MjM1NWVhMDA5MWM0MzllMg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-04-26T00:18:16Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-04-26T00:18:16Z"}, "message": "(NOTE_INSN_FUNCTION_BEG): Make non-zero.\n\nFrom-SVN: r4226", "tree": {"sha": "8e9b3486da22709f1180f4e31b668382c1c0f4e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e9b3486da22709f1180f4e31b668382c1c0f4e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a31efb86f6ecca9029e8e9842355ea0091c439e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31efb86f6ecca9029e8e9842355ea0091c439e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a31efb86f6ecca9029e8e9842355ea0091c439e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31efb86f6ecca9029e8e9842355ea0091c439e2/comments", "author": null, "committer": null, "parents": [{"sha": "0020519f3a37ac314f6f2e407c301b8dfbb53dd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0020519f3a37ac314f6f2e407c301b8dfbb53dd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0020519f3a37ac314f6f2e407c301b8dfbb53dd7"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "d5eea1239e584a0287baa88f0d39eba54ec815dd", "filename": "gcc/rtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31efb86f6ecca9029e8e9842355ea0091c439e2/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31efb86f6ecca9029e8e9842355ea0091c439e2/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=a31efb86f6ecca9029e8e9842355ea0091c439e2", "patch": "@@ -170,13 +170,13 @@ char rtx_class[] = {\n \n /* Names for kinds of NOTEs and REG_NOTEs.  */\n \n-char *note_insn_name[] = { \"NOTE_INSN_FUNCTION_BEG\", \"NOTE_INSN_DELETED\",\n+char *note_insn_name[] = { 0                    , \"NOTE_INSN_DELETED\",\n \t\t\t   \"NOTE_INSN_BLOCK_BEG\", \"NOTE_INSN_BLOCK_END\",\n \t\t\t   \"NOTE_INSN_LOOP_BEG\", \"NOTE_INSN_LOOP_END\",\n \t\t\t   \"NOTE_INSN_FUNCTION_END\", \"NOTE_INSN_SETJMP\",\n \t\t\t   \"NOTE_INSN_LOOP_CONT\", \"NOTE_INSN_LOOP_VTOP\",\n \t\t\t   \"NOTE_INSN_PROLOGUE_END\", \"NOTE_INSN_EPILOGUE_BEG\",\n-\t\t\t   \"NOTE_INSN_DELETED_LABEL\"};\n+\t\t\t   \"NOTE_INSN_DELETED_LABEL\", \"NOTE_INSN_FUNCTION_BEG\"};\n \n char *reg_note_name[] = { \"\", \"REG_DEAD\", \"REG_INC\", \"REG_EQUIV\", \"REG_WAS_0\",\n \t\t\t  \"REG_EQUAL\", \"REG_RETVAL\", \"REG_LIBCALL\","}, {"sha": "fbebd17f6557f26df6e55a97ed051345c64db14c", "filename": "gcc/rtl.h", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31efb86f6ecca9029e8e9842355ea0091c439e2/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31efb86f6ecca9029e8e9842355ea0091c439e2/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a31efb86f6ecca9029e8e9842355ea0091c439e2", "patch": "@@ -353,11 +353,17 @@ extern char *reg_note_name[];\n #define NOTE_LINE_NUMBER(INSN) ((INSN)->fld[4].rtint)\n \n /* Codes that appear in the NOTE_LINE_NUMBER field\n-   for kinds of notes that are not line numbers.  */\n+   for kinds of notes that are not line numbers.\n \n-/* This note indicates the end of the real body of the function,\n-   after moving the parms into their homes, etc.  */\n-#define NOTE_INSN_FUNCTION_BEG 0\n+   Notice that we do not try to use zero here for any of\n+   the special note codes because sometimes the source line\n+   actually can be zero!  This happens (for example) when we\n+   are generating code for the per-translation-unit constructor\n+   and destructor routines for some C++ translation unit.\n+\n+   If you should change any of the following values, or if you\n+   should add a new value here, don't forget to change the\n+   note_insn_name array in rtl.c.  */\n \n /* This note is used to get rid of an insn\n    when it isn't safe to patch the insn out of the chain.  */\n@@ -384,7 +390,10 @@ extern char *reg_note_name[];\n #define NOTE_INSN_EPILOGUE_BEG -11\n /* Generated in place of user-declared labels when they are deleted.  */\n #define NOTE_INSN_DELETED_LABEL -12\n-/* Don't forget to change note_insn_name in rtl.c.  */\n+/* This note indicates the start of the real body of the function,\n+   i.e. the point just after all of the parms have been moved into\n+   their homes, etc.  */\n+#define NOTE_INSN_FUNCTION_BEG -13\n \n \n #if 0 /* These are not used, and I don't know what they were for. --rms.  */"}]}