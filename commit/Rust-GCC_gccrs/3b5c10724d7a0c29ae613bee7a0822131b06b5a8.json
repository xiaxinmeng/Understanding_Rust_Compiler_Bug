{"sha": "3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I1YzEwNzI0ZDdhMGMyOWFlNjEzYmVlN2EwODIyMTMxYjA2YjVhOA==", "commit": {"author": {"name": "Jan Kratochvil", "email": "jan.kratochvil@redhat.com", "date": "2017-01-31T01:00:51Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2017-01-31T01:00:51Z"}, "message": "libcc1 base API: add set_verbose and new version of compile\n\nfor  include/ChangeLog\n\n\t* gcc-interface.h (enum gcc_base_api_version): Add comment to\n\tGCC_FE_VERSION_1.\n\t(struct gcc_base_vtable): Rename compile to compile_v0.\n\tUpdate comment for compile.  New methods set_verbose and\n\tcompile.\n\nfor  libcc1/ChangeLog\n\n\t* libcc1.cc: Include intl.h.\n\t(struct libcc1): Add field verbose.\n\t(libcc1::libcc1): Initialize it.\n\t(libcc1_set_verbose): New function.\n\t(libcc1_set_arguments): Print messages for VERBOSE.\n\t(libcc1_compile): Remove parameter verbose.  Use VERBOSE from\n\tSELF.\n\t(libcc1_compile_v0): New function.\n\t(vtable): Use libcc1_compile_v0 and add libcc1_compile and\n\tlibcc1_set_verbose.\n\nFrom-SVN: r245048", "tree": {"sha": "527bb62c7f3019515db3568acbcb3b35bd60842e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/527bb62c7f3019515db3568acbcb3b35bd60842e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/comments", "author": {"login": "jankratochvil", "id": 1223939, "node_id": "MDQ6VXNlcjEyMjM5Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1223939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankratochvil", "html_url": "https://github.com/jankratochvil", "followers_url": "https://api.github.com/users/jankratochvil/followers", "following_url": "https://api.github.com/users/jankratochvil/following{/other_user}", "gists_url": "https://api.github.com/users/jankratochvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankratochvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankratochvil/subscriptions", "organizations_url": "https://api.github.com/users/jankratochvil/orgs", "repos_url": "https://api.github.com/users/jankratochvil/repos", "events_url": "https://api.github.com/users/jankratochvil/events{/privacy}", "received_events_url": "https://api.github.com/users/jankratochvil/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "023721aab10f963e82eee27d732d2397c44af1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023721aab10f963e82eee27d732d2397c44af1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023721aab10f963e82eee27d732d2397c44af1de"}], "stats": {"total": 88, "additions": 76, "deletions": 12}, "files": [{"sha": "5284f104523ff371677dbb11f34bb2e129cf5f62", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "patch": "@@ -1,5 +1,11 @@\n 2017-01-30  Jan Kratochvil <jan.kratochvil@redhat.com>\n \n+\t* gcc-interface.h (enum gcc_base_api_version): Add comment to\n+\tGCC_FE_VERSION_1.\n+\t(struct gcc_base_vtable): Rename compile to compile_v0.\n+\tUpdate comment for compile.  New methods set_verbose and\n+\tcompile.\n+\n \t* gcc-interface.h (enum gcc_base_api_version): Add\n \tGCC_FE_VERSION_1.\n "}, {"sha": "c98f078454533c0b5b180b7bfbfe6525db9bd64f", "filename": "include/gcc-interface.h", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/include%2Fgcc-interface.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/include%2Fgcc-interface.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fgcc-interface.h?ref=3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "patch": "@@ -45,6 +45,8 @@ struct gcc_base_context;\n enum gcc_base_api_version\n {\n   GCC_FE_VERSION_0 = 0,\n+\n+  /* Deprecated method compile_v0.  Added method set_verbose and compile.  */\n   GCC_FE_VERSION_1 = 1,\n };\n \n@@ -94,18 +96,35 @@ struct gcc_base_vtable\n \t\t\t\t\t\t      const char *message),\n \t\t\t      void *datum);\n \n-  /* Perform the compilation.  FILENAME is the name of the resulting\n-     object file.  VERBOSE can be set to cause GCC to print some\n-     information as it works.  Returns true on success, false on\n-     error.  */\n+  /* Deprecated GCC_FE_VERSION_0 variant of the GCC_FE_VERSION_1\n+     compile method.  GCC_FE_VERSION_0 version verbose parameter has\n+     been replaced by the set_verbose method.  */\n \n-  int /* bool */ (*compile) (struct gcc_base_context *self,\n-\t\t\t     const char *filename,\n-\t\t\t     int /* bool */ verbose);\n+  int /* bool */ (*compile_v0) (struct gcc_base_context *self,\n+\t\t\t\tconst char *filename,\n+\t\t\t\tint /* bool */ verbose);\n \n   /* Destroy this object.  */\n \n   void (*destroy) (struct gcc_base_context *self);\n+\n+  /* VERBOSE can be set to non-zero to cause GCC to print some\n+     information as it works.  Calling this method overrides its\n+     possible previous calls.\n+\n+     This method is only available since GCC_FE_VERSION_1.  */\n+\n+  void (*set_verbose) (struct gcc_base_context *self,\n+\t\t       int /* bool */ verbose);\n+\n+  /* Perform the compilation.  FILENAME is the name of the resulting\n+     object file.  Either set_triplet_regexp or set_driver_filename must\n+     be called before.  Returns true on success, false on error.\n+\n+     This method is only available since GCC_FE_VERSION_1.  */\n+\n+  int /* bool */ (*compile) (struct gcc_base_context *self,\n+\t\t\t     const char *filename);\n };\n \n /* The GCC object.  */"}, {"sha": "d7c124a0d6d8ff147d4e163e73fd6d476bae52e1", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "patch": "@@ -1,5 +1,16 @@\n 2017-01-30  Jan Kratochvil <jan.kratochvil@redhat.com>\n \n+\t* libcc1.cc: Include intl.h.\n+\t(struct libcc1): Add field verbose.\n+\t(libcc1::libcc1): Initialize it.\n+\t(libcc1_set_verbose): New function.\n+\t(libcc1_set_arguments): Print messages for VERBOSE.\n+\t(libcc1_compile): Remove parameter verbose.  Use VERBOSE from\n+\tSELF.\n+\t(libcc1_compile_v0): New function.\n+\t(vtable): Use libcc1_compile_v0 and add libcc1_compile and\n+\tlibcc1_set_verbose.\n+\n \t* libcc1.cc (vtable): Update to GCC_FE_VERSION_1.\n \t(gcc_c_fe_context): Accept also GCC_FE_VERSION_1.\n "}, {"sha": "20f08cff0cc99a5431209258ae092111d2377e29", "filename": "libcc1/libcc1.cc", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/libcc1%2Flibcc1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5c10724d7a0c29ae613bee7a0822131b06b5a8/libcc1%2Flibcc1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Flibcc1.cc?ref=3b5c10724d7a0c29ae613bee7a0822131b06b5a8", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"xregex.h\"\n #include \"findcomp.hh\"\n #include \"compiler-name.h\"\n+#include \"intl.h\"\n \n struct libcc1;\n \n@@ -66,6 +67,9 @@ struct libcc1 : public gcc_c_context\n \n   std::vector<std::string> args;\n   std::string source_file;\n+\n+  /* Non-zero as an equivalent to gcc driver option \"-v\".  */\n+  bool verbose;\n };\n \n // A local subclass of connection that holds a back-pointer to the\n@@ -97,7 +101,8 @@ libcc1::libcc1 (const gcc_base_vtable *v,\n     print_function (NULL),\n     print_datum (NULL),\n     args (),\n-    source_file ()\n+    source_file (),\n+    verbose (false)\n {\n   base.ops = v;\n   c_ops = cv;\n@@ -306,6 +311,14 @@ make_regexp (const char *triplet_regexp, const char *compiler)\n   return buf.str ();\n }\n \n+static void\n+libcc1_set_verbose (struct gcc_base_context *s, int /* bool */ verbose)\n+{\n+  libcc1 *self = (libcc1 *) s;\n+\n+  self->verbose = verbose != 0;\n+}\n+\n static char *\n libcc1_set_arguments (struct gcc_base_context *s,\n \t\t      const char *triplet_regexp,\n@@ -316,6 +329,10 @@ libcc1_set_arguments (struct gcc_base_context *s,\n   int code;\n \n   std::string rx = make_regexp (triplet_regexp, COMPILER_NAME);\n+  // Simulate fnotice by fprintf.\n+  if (self->verbose)\n+    fprintf (stderr, _(\"searching for compiler matching regex %s\\n\"),\n+\t     rx.c_str());\n   code = regcomp (&triplet, rx.c_str (), REG_EXTENDED | REG_NOSUB);\n   if (code != 0)\n     {\n@@ -341,6 +358,8 @@ libcc1_set_arguments (struct gcc_base_context *s,\n \t\t     (char *) NULL);\n     }\n   regfree (&triplet);\n+  if (self->verbose)\n+    fprintf (stderr, _(\"found compiler %s\\n\"), compiler.c_str());\n \n   self->args.push_back (compiler);\n \n@@ -434,8 +453,7 @@ fork_exec (libcc1 *self, char **argv, int spair_fds[2], int stderr_fds[2])\n \n static int\n libcc1_compile (struct gcc_base_context *s,\n-\t\tconst char *filename,\n-\t\tint verbose)\n+\t\tconst char *filename)\n {\n   libcc1 *self = (libcc1 *) s;\n \n@@ -466,7 +484,7 @@ libcc1_compile (struct gcc_base_context *s,\n   self->args.push_back (\"-c\");\n   self->args.push_back (\"-o\");\n   self->args.push_back (filename);\n-  if (verbose)\n+  if (self->verbose)\n     self->args.push_back (\"-v\");\n \n   self->connection = new libcc1_connection (fds[0], stderr_fds[0], self);\n@@ -494,6 +512,14 @@ libcc1_compile (struct gcc_base_context *s,\n   return fork_exec (self, argv, fds, stderr_fds);\n }\n \n+static int\n+libcc1_compile_v0 (struct gcc_base_context *s, const char *filename,\n+\t\t   int verbose)\n+{\n+  libcc1_set_verbose (s, verbose);\n+  return libcc1_compile (s, filename);\n+}\n+\n static void\n libcc1_destroy (struct gcc_base_context *s)\n {\n@@ -508,8 +534,10 @@ static const struct gcc_base_vtable vtable =\n   libcc1_set_arguments,\n   libcc1_set_source_file,\n   libcc1_set_print_callback,\n+  libcc1_compile_v0,\n+  libcc1_destroy,\n+  libcc1_set_verbose,\n   libcc1_compile,\n-  libcc1_destroy\n };\n \n extern \"C\" gcc_c_fe_context_function gcc_c_fe_context;"}]}