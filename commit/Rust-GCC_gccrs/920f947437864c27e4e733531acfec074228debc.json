{"sha": "920f947437864c27e4e733531acfec074228debc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIwZjk0NzQzNzg2NGMyN2U0ZTczMzUzMWFjZmVjMDc0MjI4ZGViYw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-03-03T18:05:07Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-03-03T18:05:07Z"}, "message": "decl.c (cp_finish_decl): Remove obsolete obstack comments, fix typos.\n\n\t* decl.c (cp_finish_decl): Remove obsolete obstack comments, fix\n\ttypos.\n\nFrom-SVN: r32313", "tree": {"sha": "43fd689d64f29ed398e4990a12bb6eba5a8c590b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43fd689d64f29ed398e4990a12bb6eba5a8c590b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/920f947437864c27e4e733531acfec074228debc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920f947437864c27e4e733531acfec074228debc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/920f947437864c27e4e733531acfec074228debc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920f947437864c27e4e733531acfec074228debc/comments", "author": null, "committer": null, "parents": [{"sha": "6fdf191de4d5120eae162e0cc8d7af6d6a0c8dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdf191de4d5120eae162e0cc8d7af6d6a0c8dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fdf191de4d5120eae162e0cc8d7af6d6a0c8dc3"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "26f3733f1e0e479bc9700a729647361f07aa7d68", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/920f947437864c27e4e733531acfec074228debc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/920f947437864c27e4e733531acfec074228debc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=920f947437864c27e4e733531acfec074228debc", "patch": "@@ -1,3 +1,8 @@\n+2000-03-03  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl.c (cp_finish_decl): Remove obsolete obstack comments, fix\n+\ttypos.\n+\n 2000-03-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (TYPE_NEEDS_DESTRUCTOR): Rename to ..."}, {"sha": "8c8fc324841f962e06bbd5855a8bc916f4a4e802", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/920f947437864c27e4e733531acfec074228debc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/920f947437864c27e4e733531acfec074228debc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=920f947437864c27e4e733531acfec074228debc", "patch": "@@ -7598,14 +7598,10 @@ emit_local_var (decl)\n    If the length of an array type is not known before,\n    it must be determined now, from the initial value, or it is an error.\n \n-   For C++, `cp_finish_decl' must be fairly evasive:  it must keep initializers\n-   for aggregates that have constructors alive on the permanent obstack,\n-   so that the global initializing functions can be written at the end.\n-\n    INIT0 holds the value of an initializer that should be allowed to escape\n    the normal rules.\n \n-   FLAGS is LOOKUP_ONLYCONVERTING is the = init syntax was used, else 0\n+   FLAGS is LOOKUP_ONLYCONVERTING if the = init syntax was used, else 0\n    if the (init) syntax was used.\n \n    For functions that take default parameters, DECL points to its\n@@ -7624,7 +7620,6 @@ cp_finish_decl (decl, init, asmspec_tree, flags)\n   const char *asmspec = NULL;\n   int was_readonly = 0;\n \n-  /* If this is 0, then we did not change obstacks.  */\n   if (! decl)\n     {\n       if (init)\n@@ -7658,7 +7653,7 @@ cp_finish_decl (decl, init, asmspec_tree, flags)\n \n   if (init && TREE_CODE (init) == NAMESPACE_DECL)\n     {\n-      cp_error (\"Cannot initialize `%D' to namespace `%D'\",\n+      cp_error (\"cannot initialize `%D' to namespace `%D'\",\n \t\tdecl, init);\n       init = NULL_TREE;\n     }"}]}