{"sha": "56fc483e31987c2936dfee9e141702c848da7a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZmYzQ4M2UzMTk4N2MyOTM2ZGZlZTllMTQxNzAyYzg0OGRhN2E1MA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-06-13T15:49:51Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-06-13T15:49:51Z"}, "message": "Revert scc_operand patch.\n\n\t* config/rs6000/predicates.md (scc_operand): Delete.\n\t* config/rs6000/rs6000.md (scc_operand): Change to scc_eq_operand.\n\nFrom-SVN: r100879", "tree": {"sha": "a58a9d3d5452d75a261d15b9b8287be2b6853e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a58a9d3d5452d75a261d15b9b8287be2b6853e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56fc483e31987c2936dfee9e141702c848da7a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fc483e31987c2936dfee9e141702c848da7a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56fc483e31987c2936dfee9e141702c848da7a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fc483e31987c2936dfee9e141702c848da7a50/comments", "author": null, "committer": null, "parents": [{"sha": "dda895f9c6216d207d277770e221939f3a42e8ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda895f9c6216d207d277770e221939f3a42e8ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda895f9c6216d207d277770e221939f3a42e8ff"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "9fba87f5cb6cb65c289b12a5559f7d1895670d16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc483e31987c2936dfee9e141702c848da7a50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc483e31987c2936dfee9e141702c848da7a50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56fc483e31987c2936dfee9e141702c848da7a50", "patch": "@@ -1,3 +1,9 @@\n+2005-06-13  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tRevert scc_operand patch.\n+\t* config/rs6000/predicates.md (scc_operand): Delete.\n+\t* config/rs6000/rs6000.md (scc_operand): Change to scc_eq_operand.\n+\n 2005-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-expr.c (gfc_conv_function_call): Return int instead of\n@@ -164,6 +170,7 @@\n \ttag if VAR has just one in its may_aliases list.\n \n 2005-06-10  Fariborz Jahanian <fjahanian@apple.com>\n+\n \t* rs6000/predicates.md (scc_operand): New.\n \t* rs6000/rs6000.md : Use scc_operand for eq:SI compares.\n "}, {"sha": "664c7f0b05d57f0163a8ac0e59cbecc45e5b39b0", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc483e31987c2936dfee9e141702c848da7a50/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc483e31987c2936dfee9e141702c848da7a50/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=56fc483e31987c2936dfee9e141702c848da7a50", "patch": "@@ -132,17 +132,6 @@\n   (ior (match_code \"const_int\")\n        (match_operand 0 \"gpc_reg_operand\")))\n \n-;; Return 1 if op is an integer meeting one of 'I','J','O','L'(TARGET_32BIT)\n-;; or 'J'(TARGET_64BIT) constraints or if it is a non-special register.\n-(define_predicate \"scc_operand\"\n-  (if_then_else (match_code \"const_int\")\n-    (match_test \"CONST_OK_FOR_LETTER_P (INTVAL (op), 'I')\n-\t\t || CONST_OK_FOR_LETTER_P (INTVAL (op), 'K')\n-\t\t || CONST_OK_FOR_LETTER_P (INTVAL (op), 'O')\n-\t\t || CONST_OK_FOR_LETTER_P (INTVAL (op), \n-\t\t\t\t\t   (TARGET_32BIT ? 'L' : 'J'))\")\n-    (match_operand 0 \"gpc_reg_operand\")))\n-\n ;; Return 1 if op is a constant integer valid for addition\n ;; or non-special register.\n (define_predicate \"reg_or_add_cint_operand\""}, {"sha": "eee241010af0d7be0d1d4d1b5e1d00818b98e1de", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc483e31987c2936dfee9e141702c848da7a50/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc483e31987c2936dfee9e141702c848da7a50/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=56fc483e31987c2936dfee9e141702c848da7a50", "patch": "@@ -11246,7 +11246,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r,&r\")\n \t(plus:SI (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n-\t\t\t(match_operand:SI 2 \"scc_operand\" \"r,O,K,L,I\"))\n+\t\t\t(match_operand:SI 2 \"scc_eq_operand\" \"r,O,K,L,I\"))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r\")))]\n   \"TARGET_32BIT\"\n   \"@\n@@ -11263,7 +11263,7 @@\n \t(compare:CC\n \t (plus:SI\n \t  (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r,r,r,r,r,r\")\n-\t\t (match_operand:SI 2 \"scc_operand\" \"r,O,K,L,I,r,O,K,L,I\"))\n+\t\t (match_operand:SI 2 \"scc_eq_operand\" \"r,O,K,L,I,r,O,K,L,I\"))\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r,r,r,r,r,r\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r,&r,&r,&r,&r,&r,&r\"))]\n@@ -11287,7 +11287,7 @@\n \t(compare:CC\n \t (plus:SI\n \t  (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t (match_operand:SI 2 \"scc_operand\" \"\"))\n+\t\t (match_operand:SI 2 \"scc_eq_operand\" \"\"))\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"\"))]\n@@ -11306,7 +11306,7 @@\n \t(compare:CC\n \t (plus:SI\n \t  (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r,r,r,r,r,r\")\n-\t\t (match_operand:SI 2 \"scc_operand\" \"r,O,K,L,I,r,O,K,L,I\"))\n+\t\t (match_operand:SI 2 \"scc_eq_operand\" \"r,O,K,L,I,r,O,K,L,I\"))\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r,r,r,r,r,r\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r,&r,&r,&r,&r,&r,&r\")\n@@ -11331,7 +11331,7 @@\n \t(compare:CC\n \t (plus:SI\n \t  (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t (match_operand:SI 2 \"scc_operand\" \"\"))\n+\t\t (match_operand:SI 2 \"scc_eq_operand\" \"\"))\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n@@ -11347,7 +11347,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n \t(neg:SI (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n-\t\t       (match_operand:SI 2 \"scc_operand\" \"r,O,K,L,I\"))))]\n+\t\t       (match_operand:SI 2 \"scc_eq_operand\" \"r,O,K,L,I\"))))]\n   \"TARGET_32BIT\"\n   \"@\n    xor %0,%1,%2\\;{ai|addic} %0,%0,-1\\;{sfe|subfe} %0,%0,%0"}]}