{"sha": "fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI2MjBiMzdkZWM0YjBjMWU5ODU1YTU5YTBjNGRmYTI4ZmI1OGQwMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:21:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:21:28Z"}, "message": "[multiple changes]\n\n2013-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sinput.adb (Check_For_BOM): Avoid reading past end of file.\n\n2013-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb (Error_Msg_Ada_2012_Feature): New procedure.\n\t* errout.ads (Error_Msg_Ada_2012_Feature): New procedure.\n\t* inline.ads: Save/Restore Ada_Version_Pragma.\n\t* opt.adb: Save/Restore Ada_Version_Pragma.\n\t* opt.ads (Ada_Version_Pragma): New variable.\n\t* par-ch11.adb, par-ch12.adb, par-ch13.adb, par-ch4.adb, par-ch5.adb,\n\tpar-ch6.adb, par-ch8.adb, par-prag.adb: Use Error_Msg_Ada_2012_Feature.\n\t* prj.adb: Initialize Ada_Version_Pragma.\n\t* sem_attr.adb: Use Error_Msg_Ada_2012_Feature.\n\t* sem_ch12.adb, sem_ch8.adb: Save/restore Ada_Version_Pragma.\n\t* sem_prag.adb (Analyze_Pragma, cases Ada_xx): Set Ada_Version_Pragma.\n\t* switch-c.adb: Initialize Ada_Version_Pragma.\n\t* sem_ch12.adb: Minor reformatting.\n\n2013-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Process_Subtype): Discard constraint on access\n\tto class-wide type. Such constraints are not supported and are\n\tconsidered a language pathology.\n\nFrom-SVN: r202466", "tree": {"sha": "2aa1248d70e80464bb18ab1104c8321f79d18735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aa1248d70e80464bb18ab1104c8321f79d18735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/comments", "author": null, "committer": null, "parents": [{"sha": "ac4018917999464e601b2e675ac326cbbf0044da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4018917999464e601b2e675ac326cbbf0044da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4018917999464e601b2e675ac326cbbf0044da"}], "stats": {"total": 295, "additions": 183, "deletions": 112}, "files": [{"sha": "1ebe97ca45102a3271e6f39046eda2cfb40e58b2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -1,3 +1,29 @@\n+2013-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinput.adb (Check_For_BOM): Avoid reading past end of file.\n+\n+2013-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb (Error_Msg_Ada_2012_Feature): New procedure.\n+\t* errout.ads (Error_Msg_Ada_2012_Feature): New procedure.\n+\t* inline.ads: Save/Restore Ada_Version_Pragma.\n+\t* opt.adb: Save/Restore Ada_Version_Pragma.\n+\t* opt.ads (Ada_Version_Pragma): New variable.\n+\t* par-ch11.adb, par-ch12.adb, par-ch13.adb, par-ch4.adb, par-ch5.adb,\n+\tpar-ch6.adb, par-ch8.adb, par-prag.adb: Use Error_Msg_Ada_2012_Feature.\n+\t* prj.adb: Initialize Ada_Version_Pragma.\n+\t* sem_attr.adb: Use Error_Msg_Ada_2012_Feature.\n+\t* sem_ch12.adb, sem_ch8.adb: Save/restore Ada_Version_Pragma.\n+\t* sem_prag.adb (Analyze_Pragma, cases Ada_xx): Set Ada_Version_Pragma.\n+\t* switch-c.adb: Initialize Ada_Version_Pragma.\n+\t* sem_ch12.adb: Minor reformatting.\n+\n+2013-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Subtype): Discard constraint on access\n+\tto class-wide type. Such constraints are not supported and are\n+\tconsidered a language pathology.\n+\n 2013-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* gnatbind.adb: Correct starting date in --version string."}, {"sha": "a1e271469ffda861cc601482548e767d825c6dc2", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -476,6 +476,24 @@ package body Errout is\n       end;\n    end Error_Msg;\n \n+   --------------------------------\n+   -- Error_Msg_Ada_2012_Feature --\n+   --------------------------------\n+\n+   procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr) is\n+   begin\n+      if Ada_Version < Ada_2012 then\n+         Error_Msg (Feature & \" is an Ada 2012 feature\", Loc);\n+\n+         if No (Ada_Version_Pragma) then\n+            Error_Msg (\"\\unit must be compiled with -gnat2012 switch\", Loc);\n+         else\n+            Error_Msg_Sloc := Sloc (Ada_Version_Pragma);\n+            Error_Msg (\"\\incompatible with Ada version set#\", Loc);\n+         end if;\n+      end if;\n+   end Error_Msg_Ada_2012_Feature;\n+\n    ------------------\n    -- Error_Msg_AP --\n    ------------------"}, {"sha": "e267302327420878b3eb6695db4e0da1345db6d0", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -343,7 +343,8 @@ package Errout is\n    --      generation of code in the presence of the -gnatQ switch. If the\n    --      insertion character | appears, the message is considered to be\n    --      non-serious, and does not cause Serious_Errors_Detected to be\n-   --      incremented (so expansion is not prevented by such a msg).\n+   --      incremented (so expansion is not prevented by such a msg). This\n+   --      insertion character is ignored in continuation messages.\n \n    --    Insertion character ~ (Tilde: insert string)\n    --      Indicates that Error_Msg_String (1 .. Error_Msg_Strlen) is to be\n@@ -820,6 +821,14 @@ package Errout is\n    --  Posts an error on the protected type declaration Typ indicating wrong\n    --  mode of the first formal of protected type primitive Subp.\n \n+   procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr);\n+   --  If not operating in Ada 2012 mode, posts errors complaining that Feature\n+   --  is only supported in Ada 2012, with appropriate suggestions to fix this.\n+   --  Loc is the location at which the flag is to be posted. Feature, which\n+   --  appears at the start of the first generated message, may contain error\n+   --  message insertion characters in the normal manner, and in particular\n+   --  may start with | to flag a non-serious error.\n+\n    procedure dmsg (Id : Error_Msg_Id) renames Erroutc.dmsg;\n    --  Debugging routine to dump an error message\n "}, {"sha": "d34a7f17302e44d36f401d822127df003f80791c", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,6 +89,9 @@ package Inline is\n       --  The body must be compiled with the same language version as the\n       --  spec. The version may be set by a configuration pragma in a separate\n       --  file or in the current file, and may differ from body to body.\n+\n+      Version_Pragma : Node_Id;\n+      --  This is linked with the Version value\n    end record;\n \n    package Pending_Instantiations is new Table.Table ("}, {"sha": "9f1f2d84a80552124b688f398a9edfaca35d7f82", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -54,6 +54,7 @@ package body Opt is\n    procedure Register_Opt_Config_Switches is\n    begin\n       Ada_Version_Config                    := Ada_Version;\n+      Ada_Version_Pragma_Config             := Ada_Version_Pragma;\n       Ada_Version_Explicit_Config           := Ada_Version_Explicit;\n       Assertions_Enabled_Config             := Assertions_Enabled;\n       Assume_No_Invalid_Values_Config       := Assume_No_Invalid_Values;\n@@ -87,6 +88,7 @@ package body Opt is\n    procedure Restore_Opt_Config_Switches (Save : Config_Switches_Type) is\n    begin\n       Ada_Version                    := Save.Ada_Version;\n+      Ada_Version_Pragma             := Save.Ada_Version_Pragma;\n       Ada_Version_Explicit           := Save.Ada_Version_Explicit;\n       Assertions_Enabled             := Save.Assertions_Enabled;\n       Assume_No_Invalid_Values       := Save.Assume_No_Invalid_Values;\n@@ -122,6 +124,7 @@ package body Opt is\n    procedure Save_Opt_Config_Switches (Save : out Config_Switches_Type) is\n    begin\n       Save.Ada_Version                    := Ada_Version;\n+      Save.Ada_Version_Pragma             := Ada_Version_Pragma;\n       Save.Ada_Version_Explicit           := Ada_Version_Explicit;\n       Save.Assertions_Enabled             := Assertions_Enabled;\n       Save.Assume_No_Invalid_Values       := Assume_No_Invalid_Values;\n@@ -161,6 +164,7 @@ package body Opt is\n          --  the configuration setting even in a run time unit.\n \n          Ada_Version                 := Ada_Version_Runtime;\n+         Ada_Version_Pragma          := Empty;\n          Dynamic_Elaboration_Checks  := False;\n          Extensions_Allowed          := True;\n          External_Name_Exp_Casing    := As_Is;\n@@ -188,6 +192,7 @@ package body Opt is\n \n       else\n          Ada_Version                 := Ada_Version_Config;\n+         Ada_Version_Pragma          := Ada_Version_Pragma_Config;\n          Ada_Version_Explicit        := Ada_Version_Explicit_Config;\n          Assertions_Enabled          := Assertions_Enabled_Config;\n          Assume_No_Invalid_Values    := Assume_No_Invalid_Values_Config;"}, {"sha": "605dc89e83986f426c684940096a3fcd4de33fef", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -131,6 +131,10 @@ package Opt is\n    --  compiler switches, or implicitly (to Ada_Version_Runtime) when a\n    --  predefined or internal file is compiled.\n \n+   Ada_Version_Pragma : Node_Id := Empty;\n+   --  Reflects the Ada_xxx pragma that resulted in setting Ada_Version. Used\n+   --  to specialize error messages complaining about the Ada version in use.\n+\n    Ada_Version_Explicit : Ada_Version_Type := Ada_Version_Default;\n    --  GNAT\n    --  Like Ada_Version, but does not get set implicitly for predefined\n@@ -1737,6 +1741,9 @@ package Opt is\n    --  predefined units (which are always compiled in the most up to date\n    --  version of Ada).\n \n+   Ada_Version_Pragma_Config : Node_Id;\n+   --  This will be set non empty if it is set by a configuration pragma\n+\n    Ada_Version_Explicit_Config : Ada_Version_Type;\n    --  GNAT\n    --  This is set in the same manner as Ada_Version_Config. The difference is\n@@ -2019,6 +2026,7 @@ private\n    type Config_Switches_Type is record\n       Ada_Version                    : Ada_Version_Type;\n       Ada_Version_Explicit           : Ada_Version_Type;\n+      Ada_Version_Pragma             : Node_Id;\n       Assertions_Enabled             : Boolean;\n       Assume_No_Invalid_Values       : Boolean;\n       Check_Float_Overflow           : Boolean;"}, {"sha": "61df3ee2512a56e8a9e25969cd1243659d15c5fa", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -213,11 +213,7 @@ package body Ch11 is\n       Raise_Node : Node_Id;\n \n    begin\n-      if Ada_Version < Ada_2012 then\n-         Error_Msg_SC (\"raise expression is an Ada 2012 feature\");\n-         Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n-      end if;\n-\n+      Error_Msg_Ada_2012_Feature (\"raise expression\", Token_Ptr);\n       Raise_Node := New_Node (N_Raise_Expression, Token_Ptr);\n       Scan; -- past RAISE\n "}, {"sha": "cf75f04fa1500e47b8cbd9a78818e380e7f127c5", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -546,12 +546,8 @@ package body Ch12 is\n \n          Scan; -- past semicolon\n \n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_N\n-              (\"`formal incomplete type` is an Ada 2012 feature\", Decl_Node);\n-            Error_Msg_N\n-              (\"\\unit must be compiled with -gnat2012 switch\", Decl_Node);\n-         end if;\n+         Error_Msg_Ada_2012_Feature\n+           (\"formal incomplete type\", Sloc (Decl_Node));\n \n          Set_Formal_Type_Definition\n            (Decl_Node,\n@@ -564,13 +560,9 @@ package body Ch12 is\n \n       Def_Node := P_Formal_Type_Definition;\n \n-      if Nkind (Def_Node) = N_Formal_Incomplete_Type_Definition\n-        and then Ada_Version < Ada_2012\n-      then\n-         Error_Msg_N\n-           (\"`formal incomplete type` is an Ada 2012 feature\", Decl_Node);\n-         Error_Msg_N\n-           (\"\\unit must be compiled with -gnat2012 switch\", Decl_Node);\n+      if Nkind (Def_Node) = N_Formal_Incomplete_Type_Definition then\n+         Error_Msg_Ada_2012_Feature\n+           (\"formal incomplete type\", Sloc (Decl_Node));\n       end if;\n \n       if Def_Node /= Error then"}, {"sha": "26b8056f80fe18a2aa6e8722d98c3e5ea10a6fe0", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -128,8 +128,7 @@ package body Ch13 is\n \n             if Result then\n                Restore_Scan_State (Scan_State);\n-               Error_Msg_SC (\"|aspect specification is an Ada 2012 feature\");\n-               Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n+               Error_Msg_Ada_2012_Feature (\"|aspect specification\", Token_Ptr);\n                return True;\n             end if;\n          end if;"}, {"sha": "5766639816ab730ab5397e2a3d0ab5cfd97b4509", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 7, "deletions": 31, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -2672,18 +2672,12 @@ package body Ch4 is\n       Node1  : Node_Id;\n \n    begin\n-      if Ada_Version < Ada_2012 then\n-         Error_Msg_SC (\"quantified expression is an Ada 2012 feature\");\n-         Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n-      end if;\n-\n+      Error_Msg_Ada_2012_Feature (\"quantified expression\", Token_Ptr);\n       Scan;  --  past FOR\n-\n       Node1 := New_Node (N_Quantified_Expression, Prev_Token_Ptr);\n \n       if Token = Tok_All then\n          Set_All_Present (Node1);\n-\n       elsif Token /= Tok_Some then\n          Error_Msg_AP (\"missing quantifier\");\n          raise Error_Resync;\n@@ -2960,14 +2954,9 @@ package body Ch4 is\n          Set_Subpool_Handle_Name (Alloc_Node, P_Name);\n          T_Right_Paren;\n \n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_N\n-              (\"|subpool specification is an Ada 2012 feature\",\n-               Subpool_Handle_Name (Alloc_Node));\n-            Error_Msg_N\n-              (\"\\|unit must be compiled with -gnat2012 switch\",\n-               Subpool_Handle_Name (Alloc_Node));\n-         end if;\n+         Error_Msg_Ada_2012_Feature\n+           (\"|subpool specification\",\n+            Sloc (Subpool_Handle_Name (Alloc_Node)));\n       end if;\n \n       Null_Exclusion_Present := P_Null_Exclusion;\n@@ -3006,11 +2995,7 @@ package body Ch4 is\n       Save_State : Saved_Scan_State;\n \n    begin\n-      if Ada_Version < Ada_2012 then\n-         Error_Msg_SC (\"|case expression is an Ada 2012 feature\");\n-         Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n-      end if;\n-\n+      Error_Msg_Ada_2012_Feature (\"|case expression\", Token_Ptr);\n       Scan; -- past CASE\n       Case_Node :=\n         Make_Case_Expression (Loc,\n@@ -3096,12 +3081,7 @@ package body Ch4 is\n \n    begin\n       Inside_If_Expression := Inside_If_Expression + 1;\n-\n-      if Token = Tok_If and then Ada_Version < Ada_2012 then\n-         Error_Msg_SC (\"|if expression is an Ada 2012 feature\");\n-         Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n-      end if;\n-\n+      Error_Msg_Ada_2012_Feature (\"|if expression\", Token_Ptr);\n       Scan; -- past IF or ELSIF\n       Append_To (Exprs, P_Condition);\n       TF_Then;\n@@ -3182,11 +3162,7 @@ package body Ch4 is\n       --  Set case\n \n       if Token = Tok_Vertical_Bar then\n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_SC (\"set notation is an Ada 2012 feature\");\n-            Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n-         end if;\n-\n+         Error_Msg_Ada_2012_Feature (\"set notation\", Token_Ptr);\n          Set_Alternatives (N, New_List (Alt));\n          Set_Right_Opnd   (N, Empty);\n "}, {"sha": "94c5bd4d073ffddb04d0feb755863258a4e91447", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -1656,10 +1656,7 @@ package body Ch5 is\n       --  during analysis of the loop parameter specification.\n \n       if Token = Tok_Of or else Token = Tok_Colon then\n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_SC (\"iterator is an Ada 2012 feature\");\n-         end if;\n-\n+         Error_Msg_Ada_2012_Feature (\"iterator\", Token_Ptr);\n          return P_Iterator_Specification (ID_Node);\n       end if;\n "}, {"sha": "f060b3f282227aa997cc7128915c004d781b4c0a", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -834,12 +834,8 @@ package body Ch6 is\n \n                   --  Check we are in Ada 2012 mode\n \n-                  if Ada_Version < Ada_2012 then\n-                     Error_Msg_SC\n-                       (\"expression function is an Ada 2012 feature!\");\n-                     Error_Msg_SC\n-                       (\"\\unit must be compiled with -gnat2012 switch!\");\n-                  end if;\n+                  Error_Msg_Ada_2012_Feature\n+                    (\"!expression function\", Token_Ptr);\n \n                   --  Catch an illegal placement of the aspect specification\n                   --  list:\n@@ -1467,7 +1463,8 @@ package body Ch6 is\n \n                if Token = Tok_Aliased then\n                   if Ada_Version < Ada_2012 then\n-                     Error_Msg_SC (\"ALIASED parameter is an Ada 2012 feature\");\n+                     Error_Msg_Ada_2012_Feature\n+                       (\"ALIASED parameter\", Token_Ptr);\n                   else\n                      Set_Aliased_Present (Specification_Node);\n                   end if;"}, {"sha": "89a2bb4a22bd83b3ab3b0375ce9442bffd70de42", "filename": "gcc/ada/par-ch8.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch8.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -110,14 +110,9 @@ package body Ch8 is\n \n    begin\n       if Token = Tok_All then\n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_SC (\"|`USE ALL TYPE` is an Ada 2012 feature\");\n-            Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n-         end if;\n-\n+         Error_Msg_Ada_2012_Feature (\"|`USE ALL TYPE`\", Token_Ptr);\n          All_Present := True;\n          Scan; -- past ALL\n-\n       else\n          All_Present := False;\n       end if;"}, {"sha": "5de6ecc00817f10915e9b36210feb88b58a6d438", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -307,6 +307,7 @@ begin\n       when Pragma_Ada_83 =>\n          Ada_Version := Ada_83;\n          Ada_Version_Explicit := Ada_83;\n+         Ada_Version_Pragma := Pragma_Node;\n \n       ------------\n       -- Ada_95 --\n@@ -319,6 +320,7 @@ begin\n       when Pragma_Ada_95 =>\n          Ada_Version := Ada_95;\n          Ada_Version_Explicit := Ada_95;\n+         Ada_Version_Pragma := Pragma_Node;\n \n       ---------------------\n       -- Ada_05/Ada_2005 --\n@@ -333,6 +335,7 @@ begin\n          if Arg_Count = 0 then\n             Ada_Version := Ada_2005;\n             Ada_Version_Explicit := Ada_2005;\n+            Ada_Version_Pragma := Pragma_Node;\n          end if;\n \n       ---------------------\n@@ -348,6 +351,7 @@ begin\n          if Arg_Count = 0 then\n             Ada_Version := Ada_2012;\n             Ada_Version_Explicit := Ada_2012;\n+            Ada_Version_Pragma := Pragma_Node;\n          end if;\n \n       -----------"}, {"sha": "b98f711c5e7a580e37e8ff66b1e2d20de3320047", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -959,6 +959,7 @@ package body Prj is\n          --  identifiers.\n \n          Opt.Ada_Version := Opt.Ada_95;\n+         Opt.Ada_Version_Pragma := Empty;\n \n          Set_Name_Table_Byte (Name_Project,  Token_Type'Pos (Tok_Project));\n          Set_Name_Table_Byte (Name_Extends,  Token_Type'Pos (Tok_Extends));"}, {"sha": "ae58c9d25048f781a0d5ad0acdc04fb5b264c0b0", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -890,13 +890,8 @@ package body Sem_Attr is\n \n       procedure Check_Ada_2012_Attribute is\n       begin\n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_Name_1 := Aname;\n-            Error_Msg_N\n-              (\"attribute % is an Ada 2012 feature\", N);\n-            Error_Msg_N\n-              (\"\\unit must be compiled with -gnat2012 switch\", N);\n-         end if;\n+         Error_Msg_Name_1 := Aname;\n+         Error_Msg_Ada_2012_Feature (\"attribute %\", Sloc (N));\n       end Check_Ada_2012_Attribute;\n \n       --------------------------------"}, {"sha": "819f57361e398f69b0776135c3c49989f936c07e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -3592,8 +3592,8 @@ package body Sem_Ch12 is\n \n          Append (Unit_Renaming, Renaming_List);\n \n-         --  The renaming declarations are the first local declarations of\n-         --  the new unit.\n+         --  The renaming declarations are the first local declarations of the\n+         --  new unit.\n \n          if Is_Non_Empty_List (Visible_Declarations (Act_Spec)) then\n             Insert_List_Before\n@@ -3894,7 +3894,8 @@ package body Sem_Ch12 is\n                    Current_Sem_Unit         => Current_Sem_Unit,\n                    Scope_Suppress           => Scope_Suppress,\n                    Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-                   Version                  => Ada_Version));\n+                   Version                  => Ada_Version,\n+                   Version_Pragma           => Ada_Version_Pragma));\n             end if;\n          end if;\n \n@@ -4238,7 +4239,8 @@ package body Sem_Ch12 is\n                Current_Sem_Unit         => Current_Sem_Unit,\n                Scope_Suppress           => Scope_Suppress,\n                Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-               Version                  => Ada_Version)),\n+               Version                  => Ada_Version,\n+               Version_Pragma           => Ada_Version_Pragma)),\n             Inlined_Body => True);\n \n          Pop_Scope;\n@@ -4318,8 +4320,8 @@ package body Sem_Ch12 is\n             end  loop;\n          end if;\n \n-         --  Restore status of instances. If one of them is a body, make\n-         --  its local entities visible again.\n+         --  Restore status of instances. If one of them is a body, make its\n+         --  local entities visible again.\n \n          declare\n             E    : Entity_Id;\n@@ -4354,7 +4356,8 @@ package body Sem_Ch12 is\n                Current_Sem_Unit         => Current_Sem_Unit,\n                Scope_Suppress           => Scope_Suppress,\n                Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-               Version                  => Ada_Version)),\n+               Version                  => Ada_Version,\n+               Version_Pragma           => Ada_Version_Pragma)),\n             Inlined_Body => True);\n       end if;\n    end Inline_Instance_Body;\n@@ -4410,7 +4413,8 @@ package body Sem_Ch12 is\n              Current_Sem_Unit         => Current_Sem_Unit,\n              Scope_Suppress           => Scope_Suppress,\n              Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-             Version                  => Ada_Version));\n+             Version                  => Ada_Version,\n+             Version_Pragma           => Ada_Version_Pragma));\n          return True;\n \n       --  Here if not inlined, or we ignore the inlining\n@@ -4864,7 +4868,6 @@ package body Sem_Ch12 is\n             --  subsequent construction of the body.\n \n             if Need_Subprogram_Instance_Body (N, Act_Decl_Id) then\n-\n                Check_Forward_Instantiation (Gen_Decl);\n \n                --  The wrapper package is always delayed, because it does not\n@@ -9910,6 +9913,7 @@ package body Sem_Ch12 is\n       Local_Suppress_Stack_Top := Body_Info.Local_Suppress_Stack_Top;\n       Scope_Suppress           := Body_Info.Scope_Suppress;\n       Opt.Ada_Version          := Body_Info.Version;\n+      Opt.Ada_Version_Pragma   := Body_Info.Version_Pragma;\n \n       if No (Gen_Body_Id) then\n          Load_Parent_Of_Generic\n@@ -10196,6 +10200,7 @@ package body Sem_Ch12 is\n       Local_Suppress_Stack_Top := Body_Info.Local_Suppress_Stack_Top;\n       Scope_Suppress           := Body_Info.Scope_Suppress;\n       Opt.Ada_Version          := Body_Info.Version;\n+      Opt.Ada_Version_Pragma   := Body_Info.Version_Pragma;\n \n       if No (Gen_Body_Id) then\n \n@@ -10926,9 +10931,7 @@ package body Sem_Ch12 is\n \n          --  Ada 2005 (AI-251)\n \n-         if Ada_Version >= Ada_2005\n-           and then Is_Interface (Ancestor)\n-         then\n+         if Ada_Version >= Ada_2005 and then Is_Interface (Ancestor) then\n             if not Interface_Present_In_Ancestor (Act_T, Ancestor) then\n                Error_Msg_NE\n                  (\"(Ada 2005) expected type implementing & in instantiation\",\n@@ -12092,7 +12095,8 @@ package body Sem_Ch12 is\n                               Scope_Suppress           => Scope_Suppress,\n                               Local_Suppress_Stack_Top =>\n                                 Local_Suppress_Stack_Top,\n-                              Version                  => Ada_Version);\n+                              Version                  => Ada_Version,\n+                              Version_Pragma           => Ada_Version_Pragma);\n \n                            --  Package instance\n \n@@ -12128,12 +12132,12 @@ package body Sem_Ch12 is\n                        ((Inst_Node                => Inst_Node,\n                          Act_Decl                 => True_Parent,\n                          Expander_Status          => Exp_Status,\n-                         Current_Sem_Unit         =>\n-                           Get_Code_Unit (Sloc (Inst_Node)),\n+                         Current_Sem_Unit         => Get_Code_Unit\n+                                                       (Sloc (Inst_Node)),\n                          Scope_Suppress           => Scope_Suppress,\n-                         Local_Suppress_Stack_Top =>\n-                           Local_Suppress_Stack_Top,\n-                           Version                => Ada_Version)),\n+                         Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n+                         Version                  => Ada_Version,\n+                         Version_Pragma           => Ada_Version_Pragma)),\n                      Body_Optional => Body_Optional);\n                end;\n             end if;"}, {"sha": "2d8d5f798cc254c75049efc91172b7f3dc080d03", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -19043,6 +19043,27 @@ package body Sem_Ch3 is\n \n          case Ekind (Base_Type (Subtype_Mark_Id)) is\n             when Access_Kind =>\n+\n+               --  If this is a constraint on a class-wide type, discard it.\n+               --  There is currently no way to express a partial discriminant\n+               --  constraint on a type with unknown discriminants. This is\n+               --  a pathology that the ACATS wisely decides not to test.\n+\n+               if Is_Class_Wide_Type (Designated_Type (Subtype_Mark_Id)) then\n+                  if Comes_From_Source (S) then\n+                     Error_Msg_N\n+                       (\"constraint on class-wide type ignored?\",\n+                        Constraint (S));\n+                  end if;\n+\n+                  if Nkind (P) = N_Subtype_Declaration then\n+                     Set_Subtype_Indication (P,\n+                        New_Occurrence_Of (Subtype_Mark_Id, Sloc (S)));\n+                  end if;\n+\n+                  return Subtype_Mark_Id;\n+               end if;\n+\n                Constrain_Access (Def_Id, S, Related_Nod);\n \n                if Expander_Active"}, {"sha": "1e6470bf223e9177eb9714ee5af8ec423b20e523", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -1773,6 +1773,7 @@ package body Sem_Ch8 is\n       Old_S       : Entity_Id                 := Empty;\n       Rename_Spec : Entity_Id;\n       Save_AV     : constant Ada_Version_Type := Ada_Version;\n+      Save_AVP    : constant Node_Id          := Ada_Version_Pragma;\n       Save_AV_Exp : constant Ada_Version_Type := Ada_Version_Explicit;\n       Spec        : constant Node_Id          := Specification (N);\n \n@@ -2582,6 +2583,7 @@ package body Sem_Ch8 is\n       --  ???\n \n       Ada_Version := Ada_Version_Type'Max (Ada_Version, Ada_95);\n+      Ada_Version_Pragma := Empty;\n       Ada_Version_Explicit := Ada_Version;\n \n       if No (Old_S) then\n@@ -3039,6 +3041,7 @@ package body Sem_Ch8 is\n       end if;\n \n       Ada_Version := Save_AV;\n+      Ada_Version_Pragma := Save_AVP;\n       Ada_Version_Explicit := Save_AV_Exp;\n    end Analyze_Subprogram_Renaming;\n "}, {"sha": "8d716aa84543e624a919d34adff8893c70a6b105", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -8600,8 +8600,9 @@ package body Sem_Prag is\n \n             --  Now set Ada 83 mode\n \n-            Ada_Version := Ada_83;\n-            Ada_Version_Explicit := Ada_Version;\n+            Ada_Version          := Ada_83;\n+            Ada_Version_Explicit := Ada_83;\n+            Ada_Version_Pragma   := N;\n \n          ------------\n          -- Ada_95 --\n@@ -8631,8 +8632,9 @@ package body Sem_Prag is\n \n             --  Now set Ada 95 mode\n \n-            Ada_Version := Ada_95;\n-            Ada_Version_Explicit := Ada_Version;\n+            Ada_Version          := Ada_95;\n+            Ada_Version_Explicit := Ada_95;\n+            Ada_Version_Pragma   := N;\n \n          ---------------------\n          -- Ada_05/Ada_2005 --\n@@ -8679,6 +8681,7 @@ package body Sem_Prag is\n \n                Ada_Version          := Ada_2005;\n                Ada_Version_Explicit := Ada_2005;\n+               Ada_Version_Pragma   := N;\n             end if;\n          end;\n \n@@ -8728,6 +8731,7 @@ package body Sem_Prag is\n \n                Ada_Version          := Ada_2012;\n                Ada_Version_Explicit := Ada_2012;\n+               Ada_Version_Pragma   := N;\n             end if;\n          end;\n \n@@ -11602,6 +11606,7 @@ package body Sem_Prag is\n             else\n                Extensions_Allowed := False;\n                Ada_Version := Ada_Version_Explicit;\n+               Ada_Version_Pragma := Empty;\n             end if;\n \n          --------------"}, {"sha": "a01c045d91f1d1087985c9511020b88a40e45a0c", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -258,10 +258,20 @@ package body Sinput is\n       BOM : BOM_Kind;\n       Len : Natural;\n       Tst : String (1 .. 5);\n+      C   : Character;\n \n    begin\n       for J in 1 .. 5 loop\n-         Tst (J) := Source (Scan_Ptr + Source_Ptr (J) - 1);\n+         C := Source (Scan_Ptr + Source_Ptr (J) - 1);\n+\n+         --  Definitely no BOM if EOF character marks either end of file, or\n+         --  an illegal non-BOM character if not at the end of file.\n+\n+         if C = EOF then\n+            return;\n+         end if;\n+\n+         Tst (J) := C;\n       end loop;\n \n       Read_BOM (Tst, Len, BOM, False);"}, {"sha": "197be06a19ebe70f72f2d339946f0cab4cd2411d", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=fb620b37dec4b0c1e9855a59a0c4dfa28fb58d01", "patch": "@@ -781,8 +781,9 @@ package body Switch.C is\n                --  implicit setting here, since for example, we want\n                --  Preelaborate_05 treated as Preelaborate\n \n-               Ada_Version := Ada_2012;\n-               Ada_Version_Explicit := Ada_Version;\n+               Ada_Version          := Ada_2012;\n+               Ada_Version_Explicit := Ada_2012;\n+               Ada_Version_Pragma   := Empty;\n \n                --  Set default warnings and style checks for -gnatg\n \n@@ -1214,6 +1215,7 @@ package body Switch.C is\n                Extensions_Allowed   := True;\n                Ada_Version          := Ada_Version_Type'Last;\n                Ada_Version_Explicit := Ada_Version_Type'Last;\n+               Ada_Version_Pragma   := Empty;\n \n             --  -gnaty (style checks)\n \n@@ -1326,8 +1328,9 @@ package body Switch.C is\n                   Bad_Switch (\"-gnat8\" & Switch_Chars (Ptr .. Max));\n                else\n                   Ptr := Ptr + 1;\n-                  Ada_Version := Ada_83;\n-                  Ada_Version_Explicit := Ada_Version;\n+                  Ada_Version          := Ada_83;\n+                  Ada_Version_Explicit := Ada_83;\n+                  Ada_Version_Pragma   := Empty;\n                end if;\n \n             --  -gnat95\n@@ -1343,8 +1346,9 @@ package body Switch.C is\n                   Bad_Switch (\"-gnat9\" & Switch_Chars (Ptr .. Max));\n                else\n                   Ptr := Ptr + 1;\n-                  Ada_Version := Ada_95;\n-                  Ada_Version_Explicit := Ada_Version;\n+                  Ada_Version          := Ada_95;\n+                  Ada_Version_Explicit := Ada_95;\n+                  Ada_Version_Pragma   := Empty;\n                end if;\n \n             --  -gnat05\n@@ -1360,8 +1364,9 @@ package body Switch.C is\n                   Bad_Switch (\"-gnat0\" & Switch_Chars (Ptr .. Max));\n                else\n                   Ptr := Ptr + 1;\n-                  Ada_Version := Ada_2005;\n-                  Ada_Version_Explicit := Ada_Version;\n+                  Ada_Version          := Ada_2005;\n+                  Ada_Version_Explicit := Ada_2005;\n+                  Ada_Version_Pragma   := Empty;\n                end if;\n \n             --  -gnat12\n@@ -1377,8 +1382,9 @@ package body Switch.C is\n                   Bad_Switch (\"-gnat1\" & Switch_Chars (Ptr .. Max));\n                else\n                   Ptr := Ptr + 1;\n-                  Ada_Version := Ada_2012;\n-                  Ada_Version_Explicit := Ada_Version;\n+                  Ada_Version          := Ada_2012;\n+                  Ada_Version_Explicit := Ada_2012;\n+                  Ada_Version_Pragma   := Empty;\n                end if;\n \n             --  -gnat2005 and -gnat2012\n@@ -1398,6 +1404,7 @@ package body Switch.C is\n                end if;\n \n                Ada_Version_Explicit := Ada_Version;\n+               Ada_Version_Pragma   := Empty;\n                Ptr := Ptr + 4;\n \n             --  Switch cancellation, currently only -gnat-p is allowed."}]}