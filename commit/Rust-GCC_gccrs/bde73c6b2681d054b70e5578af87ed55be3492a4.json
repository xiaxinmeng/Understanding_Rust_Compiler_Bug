{"sha": "bde73c6b2681d054b70e5578af87ed55be3492a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlNzNjNmIyNjgxZDA1NGI3MGU1NTc4YWY4N2VkNTViZTM0OTJhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-07T17:05:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-07T17:05:06Z"}, "message": "[multiple changes]\n\n2012-03-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb, exp_ch4.adb, exp_ch6.adb, sem_ch6.adb: Minor\n\treformatting.\n\n2012-03-07  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* gnat_ugn.texi: gnatpp: fix paragraph about sources with\n\tpreprocessor directives.\n\n2012-03-07  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-osinte-linux.ads, s-taprop-linux.adb (prctl): New function.\n\t(Enter_Task): Call prctl when relevant.\n\n2012-03-07  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-osinte-vms.ads: pthread_mutex_setname_np: new function.\n\nFrom-SVN: r185065", "tree": {"sha": "e9906110a74bfb490e965fdd3792fb80d5604268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9906110a74bfb490e965fdd3792fb80d5604268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bde73c6b2681d054b70e5578af87ed55be3492a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde73c6b2681d054b70e5578af87ed55be3492a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde73c6b2681d054b70e5578af87ed55be3492a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde73c6b2681d054b70e5578af87ed55be3492a4/comments", "author": null, "committer": null, "parents": [{"sha": "b0d623bb216914a90b626439f4c96fba683bab2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d623bb216914a90b626439f4c96fba683bab2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d623bb216914a90b626439f4c96fba683bab2c"}], "stats": {"total": 102, "additions": 71, "deletions": 31}, "files": [{"sha": "74cd5cc571d810f232091891dddd5f7c96092d0e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -1,3 +1,22 @@\n+2012-03-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb, exp_ch4.adb, exp_ch6.adb, sem_ch6.adb: Minor\n+\treformatting.\n+\n+2012-03-07  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* gnat_ugn.texi: gnatpp: fix paragraph about sources with\n+\tpreprocessor directives.\n+\n+2012-03-07  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-osinte-linux.ads, s-taprop-linux.adb (prctl): New function.\n+\t(Enter_Task): Call prctl when relevant.\n+\n+2012-03-07  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-osinte-vms.ads: pthread_mutex_setname_np: new function.\n+\n 2012-03-07  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Process_Formals): a generic subprogram with"}, {"sha": "001b9ed06effa4fb24b43ba34a9f0ba17c666883", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -3529,17 +3529,15 @@ package body Exp_Ch4 is\n       --  Expand_Allocator_Expression inherit the proper type attributes.\n \n       if (Ekind (PtrT) = E_Anonymous_Access_Type\n-            or else\n-              (Is_Itype (PtrT) and then No (Finalization_Master (PtrT))))\n+           or else\n+             (Is_Itype (PtrT) and then No (Finalization_Master (PtrT))))\n         and then Needs_Finalization (Dtyp)\n       then\n          --  Anonymous access-to-controlled types allocate on the global pool.\n          --  Do not set this attribute on .NET/JVM since those targets do not\n          --  support pools.\n \n-         if No (Associated_Storage_Pool (PtrT))\n-           and then VM_Target = No_VM\n-         then\n+         if No (Associated_Storage_Pool (PtrT)) and then VM_Target = No_VM then\n             Set_Associated_Storage_Pool\n               (PtrT, Get_Global_Pool_For_Access_Type (PtrT));\n          end if;"}, {"sha": "5afb31c9ca1921fdf3de570980f1fb5348ffa6ff", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -2290,12 +2290,11 @@ package body Exp_Ch6 is\n       --------------------------\n \n       function In_Unfrozen_Instance (E : Entity_Id) return Boolean is\n-         S : Entity_Id := E;\n+         S : Entity_Id;\n \n       begin\n-         while Present (S)\n-           and then S /= Standard_Standard\n-         loop\n+         S := E;\n+         while Present (S) and then S /= Standard_Standard loop\n             if Is_Generic_Instance (S)\n               and then Present (Freeze_Node (S))\n               and then not Analyzed (Freeze_Node (S))\n@@ -2353,9 +2352,7 @@ package body Exp_Ch6 is\n          Res : constant Node_Id := Duplicate_Subexpr (From);\n       begin\n          if Is_Access_Type (Etype (From)) then\n-            return\n-              Make_Explicit_Dereference (Sloc (From),\n-                Prefix => Res);\n+            return Make_Explicit_Dereference (Sloc (From), Prefix => Res);\n          else\n             return Res;\n          end if;\n@@ -3702,7 +3699,6 @@ package body Exp_Ch6 is\n          --  Handle inlining (old semantics)\n \n          if Is_Inlined (Subp) and then not Debug_Flag_Dot_K then\n-\n             Inlined_Subprogram : declare\n                Bod         : Node_Id;\n                Must_Inline : Boolean := False;\n@@ -4078,7 +4074,7 @@ package body Exp_Ch6 is\n \n       Targ : Node_Id;\n       --  The target of the call. If context is an assignment statement then\n-      --  this is the left-hand side of the assignment; else it is a temporary\n+      --  this is the left-hand side of the assignment, else it is a temporary\n       --  to which the return value is assigned prior to rewriting the call.\n \n       Targ1 : Node_Id;\n@@ -4115,8 +4111,8 @@ package body Exp_Ch6 is\n       procedure Reset_Dispatching_Calls (N : Node_Id);\n       --  In subtree N search for occurrences of dispatching calls that use the\n       --  Ada 2005 Object.Operation notation and the object is a formal of the\n-      --  inlined subprogram; in all the found occurrences reset the entity\n-      --  associated with Operation.\n+      --  inlined subprogram. Reset the entity associated with Operation in all\n+      --  the found occurrences.\n \n       procedure Rewrite_Function_Call (N : Node_Id; Blk : Node_Id);\n       --  If the function body is a single expression, replace call with\n@@ -4355,9 +4351,10 @@ package body Exp_Ch6 is\n       procedure Reset_Dispatching_Calls (N : Node_Id) is\n \n          function Do_Reset (N : Node_Id) return Traverse_Result;\n+         --  Comment required ???\n \n          --------------\n-         -- Do_Check --\n+         -- Do_Reset --\n          --------------\n \n          function Do_Reset (N : Node_Id) return Traverse_Result is\n@@ -4377,10 +4374,13 @@ package body Exp_Ch6 is\n \n          function Do_Reset_Calls is new Traverse_Func (Do_Reset);\n \n-         --  Start of processing for Reset_Dispatching_Calls\n+         --  Local variables\n \n          Dummy : constant Traverse_Result := Do_Reset_Calls (N);\n          pragma Unreferenced (Dummy);\n+\n+         --  Start of processing for Reset_Dispatching_Calls\n+\n       begin\n          null;\n       end Reset_Dispatching_Calls;\n@@ -5073,8 +5073,7 @@ package body Exp_Ch6 is\n \n       if Is_Unc_Decl then\n \n-         --  No action needed since the return statement has been already\n-         --  removed!\n+         --  No action needed since return statement has been already removed!\n \n          null;\n "}, {"sha": "6885eed89d2e16ac1c3e82508a73c6e8849773dc", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -13045,12 +13045,8 @@ semantically legal.\n If this condition is not met, @command{gnatpp} will terminate with an\n error message; no output file will be generated.\n \n-If the source files presented to @command{gnatpp} contain\n-preprocessing directives, then the output file will\n-correspond to the generated source after all\n-preprocessing is carried out. There is no way\n-using @command{gnatpp} to obtain pretty printed files that\n-include the preprocessing directives.\n+@command{gnatpp} cannot process sources that contain\n+preprocessing directives.\n \n If the compilation unit\n contained in the input source depends semantically upon units located"}, {"sha": "31b4c7226b3a8e4ce4183e3dbb2520110ae47be0", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -255,6 +255,12 @@ package System.OS_Interface is\n    function getpid return pid_t;\n    pragma Import (C, getpid, \"getpid\");\n \n+   PR_SET_NAME : constant := 15;\n+\n+   function prctl\n+     (option : int; arg2, arg3, arg4, arg5 : unsigned_long := 0) return int;\n+   pragma Import (C, prctl);\n+\n    -------------\n    -- Threads --\n    -------------"}, {"sha": "cadc6526aca1c06008e3c2881f207e1b52548d5c", "filename": "gcc/ada/s-osinte-vms.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fs-osinte-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fs-osinte-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vms.ads?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -449,6 +449,12 @@ package System.OS_Interface is\n    function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n    pragma Import (C, pthread_mutex_unlock, \"PTHREAD_MUTEX_UNLOCK\");\n \n+   function pthread_mutex_setname_np\n+     (attr : access pthread_mutex_t;\n+      name : System.Address;\n+      mbz  : System.Address) return int;\n+   pragma Import (C, pthread_mutex_setname_np, \"PTHREAD_MUTEX_SETNAME_NP\");\n+\n    function pthread_condattr_init\n      (attr : access pthread_condattr_t) return int;\n    pragma Import (C, pthread_condattr_init, \"PTHREAD_CONDATTR_INIT\");"}, {"sha": "cf710822d3c5c2285775a19d88d60b203a570db5", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2012, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -767,6 +767,22 @@ package body System.Task_Primitives.Operations is\n       Self_ID.Common.LL.Thread := pthread_self;\n       Self_ID.Common.LL.LWP := lwp_self;\n \n+      if Self_ID.Common.Task_Image_Len > 0 then\n+         declare\n+            Task_Name : String (1 .. Parameters.Max_Task_Image_Length + 1);\n+            Result    : int;\n+         begin\n+            --  Set thread name to ease debugging\n+\n+            Task_Name (1 .. Self_ID.Common.Task_Image_Len) :=\n+              Self_ID.Common.Task_Image (1 .. Self_ID.Common.Task_Image_Len);\n+            Task_Name (Self_ID.Common.Task_Image_Len + 1) := ASCII.NUL;\n+\n+            Result := prctl (PR_SET_NAME, unsigned_long (Task_Name'Address));\n+            pragma Assert (Result = 0);\n+         end;\n+      end if;\n+\n       Specific.Set (Self_ID);\n \n       if Use_Alternate_Stack"}, {"sha": "57e0ccf886a97a7e86b249c38438d60ade584701", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -4119,7 +4119,8 @@ package body Sem_Ch6 is\n      (Msg        : String;\n       N          : Node_Id;\n       Subp       : Entity_Id;\n-      Is_Serious : Boolean := False) is\n+      Is_Serious : Boolean := False)\n+   is\n    begin\n       pragma Assert (Msg (Msg'Last) = '?');\n "}, {"sha": "87a9334a58b99a392182fd68db98ddbd53f438d4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde73c6b2681d054b70e5578af87ed55be3492a4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bde73c6b2681d054b70e5578af87ed55be3492a4", "patch": "@@ -9397,8 +9397,7 @@ package body Sem_Util is\n    begin\n       return Optimization_Level = 0\n         and then Has_Pragma_Inline (Subp)\n-        and then (Has_Pragma_Inline_Always (Subp)\n-                    or else Front_End_Inlining);\n+        and then (Has_Pragma_Inline_Always (Subp) or else Front_End_Inlining);\n    end Must_Inline;\n \n    ----------------------"}]}