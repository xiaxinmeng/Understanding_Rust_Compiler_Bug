{"sha": "15115f7aa839855a7f30f83b32070cee7f063c6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUxMTVmN2FhODM5ODU1YTdmMzBmODNiMzIwNzBjZWU3ZjA2M2M2ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-01-04T08:57:58Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-01-04T08:57:58Z"}, "message": "re PR fortran/55854 (ICE on intent(out) dummy argument with unlimited polymorphic component)\n\n2013-01-03  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55854\n        PR fortran/55763\n        * class.c (gfc_class_null_initializer): Fix finding the vtab.\n        (gfc_find_intrinsic_vtab): Use BT_VOID for some components.\n\n2013-01-03  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55854\n        PR fortran/55763\n        * gfortran.dg/unlimited_polymorphic_3.f03: Remove invalid code.\n        * gfortran.dg/unlimited_polymorphic_7.f90: New.\n        * gfortran.dg/unlimited_polymorphic_8.f90: New.\n\nFrom-SVN: r194885", "tree": {"sha": "60c0d24a866c648f2bab0750d1fba7855b784647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60c0d24a866c648f2bab0750d1fba7855b784647"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15115f7aa839855a7f30f83b32070cee7f063c6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15115f7aa839855a7f30f83b32070cee7f063c6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15115f7aa839855a7f30f83b32070cee7f063c6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15115f7aa839855a7f30f83b32070cee7f063c6d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e58d2e48e45ac4823248b3e8ddba96ec1ba401ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e58d2e48e45ac4823248b3e8ddba96ec1ba401ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e58d2e48e45ac4823248b3e8ddba96ec1ba401ae"}], "stats": {"total": 68, "additions": 58, "deletions": 10}, "files": [{"sha": "591a2891b2ad61ed848e58406c59bb6ac83f4cc2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=15115f7aa839855a7f30f83b32070cee7f063c6d", "patch": "@@ -1,3 +1,10 @@\n+2013-01-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55854\n+\tPR fortran/55763\n+\t* class.c (gfc_class_null_initializer): Fix finding the vtab.\n+\t(gfc_find_intrinsic_vtab): Use BT_VOID for some components.\n+\n 2013-01-03  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/55855"}, {"sha": "607af1090fd53e12bbc6cefd013e14ae250e8903", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=15115f7aa839855a7f30f83b32070cee7f063c6d", "patch": "@@ -1,5 +1,5 @@\n /* Implementation of Fortran 2003 Polymorphism.\n-   Copyright (C) 2009, 2010, 2011, 2012\n+   Copyright (C) 2009, 2010, 2011, 2012, 2013\n    Free Software Foundation, Inc.\n    Contributed by Paul Richard Thomas <pault@gcc.gnu.org>\n    and Janus Weil <janus@gcc.gnu.org>\n@@ -414,7 +414,7 @@ gfc_class_null_initializer (gfc_typespec *ts, gfc_expr *init_expr)\n       && ts->u.derived->components->ts.u.derived->attr.unlimited_polymorphic;\n \n   if (is_unlimited_polymorphic && init_expr)\n-    vtab = gfc_find_intrinsic_vtab (&(init_expr->ts));\n+    vtab = gfc_find_intrinsic_vtab (&ts->u.derived->components->ts);\n   else\n     vtab = gfc_find_derived_vtab (ts->u.derived);\n \n@@ -2224,19 +2224,15 @@ gfc_find_intrinsic_vtab (gfc_typespec *ts)\n \t\tgoto cleanup;\n \t      c->attr.pointer = 1;\n \t      c->attr.access = ACCESS_PRIVATE;\n-\t      /* Avoid segfaults because due to character length.   */\n-\t      c->ts.type = ts->type == BT_CHARACTER ? BT_VOID : ts->type;\n-\t      c->ts.kind = ts->kind;\n+\t      c->ts.type = BT_VOID;\n \t      c->initializer = gfc_get_null_expr (NULL);\n \n \t      /* Add component _def_init.  */\n \t      if (gfc_add_component (vtype, \"_def_init\", &c) == FAILURE)\n \t\tgoto cleanup;\n \t      c->attr.pointer = 1;\n \t      c->attr.access = ACCESS_PRIVATE;\n-\t      /* Avoid segfaults due to missing character length.   */\n-\t      c->ts.type = ts->type == BT_CHARACTER ? BT_VOID : ts->type;\n-\t      c->ts.kind = ts->kind;\n+\t      c->ts.type = BT_VOID;\n \t      c->initializer = gfc_get_null_expr (NULL);\n \n \t      /* Add component _copy.  */"}, {"sha": "5357e0bdab517a0537632962ab78632ee27e6f29", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15115f7aa839855a7f30f83b32070cee7f063c6d", "patch": "@@ -1,3 +1,11 @@\n+2013-01-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55854\n+\tPR fortran/55763\n+\t* gfortran.dg/unlimited_polymorphic_3.f03: Remove invalid code.\n+\t* gfortran.dg/unlimited_polymorphic_7.f90: New.\n+\t* gfortran.dg/unlimited_polymorphic_8.f90: New.\n+\n 2013-01-03  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.dg/torture/tls/tls-reload-1.c (main): Make testing more thorough."}, {"sha": "05a4b3f54ec801d518ccab54c225fe6d19e0c701", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_3.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_3.f03?ref=15115f7aa839855a7f30f83b32070cee7f063c6d", "patch": "@@ -28,9 +28,7 @@ subroutine bar\n     end type t\n     type(t), pointer :: x\n     class(*), pointer :: ptr1 => null() ! pointer initialization\n-    class(*), pointer :: ptr2 => null(x) ! pointer initialization\n     if (same_type_as (ptr1, x) .neqv. .FALSE.) call abort\n-    if (same_type_as (ptr2, x) .neqv. .TRUE.) call abort\n   end subroutine bar\n \n end program main"}, {"sha": "3bd4d4d734072d73fca2c917bdceddb908bda9ba", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_7.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_7.f90?ref=15115f7aa839855a7f30f83b32070cee7f063c6d", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+!\n+! PR fortran/55763\n+!\n+! Contributed by Harald Anlauf\n+!\n+\n+module gfcbug121\n+  implicit none\n+  type myobj\n+     class(*), allocatable :: x\n+   contains\n+     procedure :: print\n+  end type myobj\n+contains\n+  subroutine print(this)\n+    class(myobj) :: this\n+  end subroutine print\n+end module gfcbug121"}, {"sha": "e0fa931eb4a5b199de4b53ed2b5a6b7929361b0c", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_8.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15115f7aa839855a7f30f83b32070cee7f063c6d/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_8.f90?ref=15115f7aa839855a7f30f83b32070cee7f063c6d", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/55854\n+!\n+! Contributed by Damian Rouson\n+!\n+\n+  type foo\n+    class(*), allocatable :: x\n+  end type\n+contains\n+  subroutine bar(this)\n+    type(foo), intent(out) :: this\n+  end\n+end\n+\n+! { dg-final { scan-tree-dump-times \"foo.0.x._data = 0B;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"foo.0.x._vptr = .* &__vtab__.tar;\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"optimized\" } }"}]}