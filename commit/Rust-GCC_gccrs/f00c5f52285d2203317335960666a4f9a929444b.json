{"sha": "f00c5f52285d2203317335960666a4f9a929444b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwYzVmNTIyODVkMjIwMzMxNzMzNTk2MDY2NmE0ZjlhOTI5NDQ0Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:26:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:26:00Z"}, "message": "[multiple changes]\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Make_Build_In_Place_In_Object_Declaration): Use proper\n\tsloc for renaming declaration and set Comes_From_Source properly to\n\tensure that references are properly generated for an object declaration\n\tthat is built in place.\n\n2010-09-10  Tristan Gingold  <gingold@adacore.com>\n\n\t* symbols-processing-vms-alpha.adb: Allow gnatsym to work as a cross\n\ttool.\n\t* gcc-interface/Make-lang.in: Install gnatsym when cross compiling.\n\t* gcc-interface/Makefile.in: gnat.hlp is now generated by\n\tMake-generated.in\n\n2010-09-10  Bob Duff  <duff@adacore.com>\n\n\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): For things like \"\"X(J)\n\t:= ...;\", remove side effects from the right-hand side, because they\n\tmight affect the value of the left-hand side, but the left-hand side is\n\tfirst READ (so we can do shifting and masking) and then written back,\n\twhich would cause the side effects to be incorrectly overwritten.\n\nFrom-SVN: r164171", "tree": {"sha": "88c2b781de5c18323dd68c829a7e0615b44d7c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c2b781de5c18323dd68c829a7e0615b44d7c9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f00c5f52285d2203317335960666a4f9a929444b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00c5f52285d2203317335960666a4f9a929444b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f00c5f52285d2203317335960666a4f9a929444b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00c5f52285d2203317335960666a4f9a929444b/comments", "author": null, "committer": null, "parents": [{"sha": "199c6a1000df6695a1e4c7c041882db928b51221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199c6a1000df6695a1e4c7c041882db928b51221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199c6a1000df6695a1e4c7c041882db928b51221"}], "stats": {"total": 131, "additions": 115, "deletions": 16}, "files": [{"sha": "eb62a9c2e493fadc9d05f287bd8924c14f391969", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f00c5f52285d2203317335960666a4f9a929444b", "patch": "@@ -1,3 +1,26 @@\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Make_Build_In_Place_In_Object_Declaration): Use proper\n+\tsloc for renaming declaration and set Comes_From_Source properly to\n+\tensure that references are properly generated for an object declaration\n+\tthat is built in place.\n+\n+2010-09-10  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* symbols-processing-vms-alpha.adb: Allow gnatsym to work as a cross\n+\ttool.\n+\t* gcc-interface/Make-lang.in: Install gnatsym when cross compiling.\n+\t* gcc-interface/Makefile.in: gnat.hlp is now generated by\n+\tMake-generated.in\n+\n+2010-09-10  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): For things like \"\"X(J)\n+\t:= ...;\", remove side effects from the right-hand side, because they\n+\tmight affect the value of the left-hand side, but the left-hand side is\n+\tfirst READ (so we can do shifting and masking) and then written back,\n+\twhich would cause the side effects to be incorrectly overwritten.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch4.adb: Minor reformatting."}, {"sha": "553c8e1b4847460614574fbf66a810b6f6b1a056", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=f00c5f52285d2203317335960666a4f9a929444b", "patch": "@@ -5784,6 +5784,7 @@ package body Exp_Ch6 is\n            Make_Explicit_Dereference (Loc,\n              Prefix => New_Reference_To (Def_Id, Loc));\n \n+         Loc := Sloc (Object_Decl);\n          Rewrite (Object_Decl,\n            Make_Object_Renaming_Declaration (Loc,\n              Defining_Identifier => Make_Temporary (Loc, 'D'),\n@@ -5821,6 +5822,14 @@ package body Exp_Ch6 is\n             Set_Homonym     (Renaming_Def_Id, Homonym (Obj_Def_Id));\n \n             Exchange_Entities (Renaming_Def_Id, Obj_Def_Id);\n+\n+            --  Preserve source indication of original declaration, so that\n+            --  xref information is properly generated for the right entity.\n+\n+            Preserve_Comes_From_Source\n+              (Object_Decl, Original_Node (Object_Decl));\n+            Set_Comes_From_Source (Obj_Def_Id, True);\n+            Set_Comes_From_Source (Renaming_Def_Id, False);\n          end;\n       end if;\n "}, {"sha": "3b1a4cf0973c419a971e909912a9b1b5c86d4945", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=f00c5f52285d2203317335960666a4f9a929444b", "patch": "@@ -1340,6 +1340,14 @@ package body Exp_Pakd is\n       Ctyp := Component_Type (Atyp);\n       Csiz := UI_To_Int (Component_Size (Atyp));\n \n+      --  We remove side effects, in case the rhs modifies the lhs, because we\n+      --  are about to transform the rhs into an expression that first READS\n+      --  the lhs, so we can do the necessary shifting and masking. Example:\n+      --  \"X(2) := F(...);\" where F modifies X(3). Otherwise, the side effect\n+      --  will be lost.\n+\n+      Remove_Side_Effects (Rhs);\n+\n       --  We convert the right hand side to the proper subtype to ensure\n       --  that an appropriate range check is made (since the normal range\n       --  check from assignment will be lost in the transformations). This"}, {"sha": "787757b86326473fa5c428e6a5cda07e05dcfb72", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=f00c5f52285d2203317335960666a4f9a929444b", "patch": "@@ -841,8 +841,11 @@ ada.install-common:\n #\n \t-if [ -f gnat1$(exeext) ] ; \\\n \tthen \\\n-\t  if [ -f gnatsym$(exeext) ] ; \\\n+\t  if [ -f gnatsym-cross$(exeext) ] ; \\\n \t  then \\\n+\t    $(RM) $(DESTDIR)$(bindir)/$(target_noncanonical)-gnatsym$(exeext); \\\n+\t    $(INSTALL_PROGRAM) gnatsym-cross$(exeext) $(DESTDIR)$(bindir)/$(target_noncanonical)-gnatsym$(exeext); \\\n+\t  else \\\n \t    $(RM) $(DESTDIR)$(bindir)/gnatsym$(exeext); \\\n \t    $(INSTALL_PROGRAM) gnatsym$(exeext) $(DESTDIR)$(bindir)/gnatsym$(exeext); \\\n \t  fi ; \\"}, {"sha": "6eedaa58984b1e7fb48fd665ec0926ed97dceda9", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=f00c5f52285d2203317335960666a4f9a929444b", "patch": "@@ -1572,9 +1572,7 @@ adamsg.o: adamsg.msg\n   EXTRA_LIBGNAT_OBJS+=adamsg.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-tpopde.o\n   EXTRA_GNATTOOLS = \\\n-     ../../gnatsym$(exeext)  \\\n-     ../../vms_help$(exeext) \\\n-     ../../gnat.hlp\n+     ../../gnatsym$(exeext)\n   # This command transforms (YYYYMMDD) into YY,MMDD\n   GSMATCH_VERSION := $(shell grep \"^ *Gnat_Static_Version_String\" $(fsrcpfx)ada/gnatvsn.ads | sed -e 's/.*(\\(.*\\)).*/\\1/' -e 's/\\(..\\)\\(..\\)\\(....\\).*/\\2,\\3/')\n   TOOLS_LIBS_LO := --for-linker=sys\\\\$$\\$$library:trace.exe\n@@ -2795,14 +2793,3 @@ tracebak.o  : tracebak.c tb-alvms.c tb-alvxw.c tb-gcc.c\n .PHONY: risky-stage1 risky-stage2 risky-stage3 risky-stage4\n \n force:\n-\n-# Vms_help and Gnat.hlp are only used on VMS\n-\n-../../vms_help$(exeext):\n-\t$(GNATMAKE) -c $(ADA_INCLUDES) vms_help --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n-\t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) vms_help\n-\t$(GNATLINK) -v vms_help -o $@ --GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n-\n-../../gnat.hlp: ../../vms_help$(exeext)\n-\t../../vms_help$(exeext) $(fsrcdir)/ada/gnat.help_in \\\n-\t                        $(fsrcdir)/ada/vms_data.ads ../../gnat.hlp"}, {"sha": "668e473680b10512b1c14fd3b04a21d98c36174a", "filename": "gcc/ada/symbols-processing-vms-alpha.adb", "status": "modified", "additions": 70, "deletions": 1, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fsymbols-processing-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00c5f52285d2203317335960666a4f9a929444b/gcc%2Fada%2Fsymbols-processing-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols-processing-vms-alpha.adb?ref=f00c5f52285d2203317335960666a4f9a929444b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,9 @@ package body Processing is\n    type Number is mod 2**16;\n    --  16 bits unsigned number for number of characters\n \n+   EMH : constant Number := 8;\n+   --  Code for the Module Header section\n+\n    GSD : constant Number := 10;\n    --  Code for the Global Symbol Definition section\n \n@@ -45,6 +48,12 @@ package body Processing is\n    Number_Of_Characters : Natural := 0;\n    --  The number of characters of each section\n \n+   Native_Format : Boolean;\n+   --  True if records are decoded by the system (like on VMS).\n+\n+   Has_Pad : Boolean;\n+   --  If true, a pad byte must be skipped before reading the next record.\n+\n    --  The following variables are used by procedure Process when reading an\n    --  object file.\n \n@@ -114,12 +123,72 @@ package body Processing is\n \n       Success := True;\n \n+      --  Check the file format in case of cross-tool.\n+\n+      Get (Code);\n+      Get (Number_Of_Characters);\n+      Get (Dummy);\n+\n+      if Code = Dummy and then Number_Of_Characters = Natural (EMH) then\n+\n+         --  Looks like a cross tools.\n+\n+         Native_Format := False;\n+         Number_Of_Characters := Natural (Dummy) - 4;\n+         Has_Pad := (Number_Of_Characters mod 2) = 1;\n+\n+      elsif Code = EMH then\n+\n+         Native_Format := True;\n+         Number_Of_Characters := Number_Of_Characters - 6;\n+         Has_Pad := False;\n+\n+      else\n+\n+         Put_Line (\"file \"\"\" & Object_File & \"\"\" is not an object file\");\n+         Close (File);\n+         Success := False;\n+         return;\n+\n+      end if;\n+\n+      --  Skip the EMH section\n+\n+      for J in 1 .. Number_Of_Characters loop\n+         Read (File, B);\n+      end loop;\n+\n       --  Get the different sections one by one from the object file\n \n       while not End_Of_File (File) loop\n \n+         if not Native_Format then\n+            if Has_Pad then\n+               --  Skip pad byte\n+\n+               Get (B);\n+            end if;\n+\n+            --  Skip record length\n+\n+            Get (Dummy);\n+         end if;\n+\n          Get (Code);\n          Get (Number_Of_Characters);\n+\n+         if not Native_Format then\n+            if Natural (Dummy) /= Number_Of_Characters then\n+               --  Format error.\n+\n+               raise Constraint_Error;\n+            end if;\n+\n+            Has_Pad := (Number_Of_Characters mod 2) = 1;\n+         end if;\n+\n+         --  The header is 4 bytes length\n+\n          Number_Of_Characters := Number_Of_Characters - 4;\n \n          --  If this is not a Global Symbol Definition section, skip to the"}]}