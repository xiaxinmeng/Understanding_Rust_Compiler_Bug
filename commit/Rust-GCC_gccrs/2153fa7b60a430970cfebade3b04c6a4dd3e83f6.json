{"sha": "2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE1M2ZhN2I2MGE0MzA5NzBjZmViYWRlM2IwNGM2YTRkZDNlODNmNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-31T14:15:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-31T14:15:37Z"}, "message": "re PR tree-optimization/91293 (Wrong code with -O3 -mavx2)\n\n2019-07-31  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/91293\n\t* tree-vect-slp.c (vect_build_slp_tree_2): Do not swap operands\n\tof reduction stmts.\n\n\t* gcc.dg/vect/pr91293-1.c: New testcase.\n\t* gcc.dg/vect/pr91293-2.c: Likewise.\n\t* gcc.dg/vect/pr91293-3.c: Likewise.\n\nFrom-SVN: r273934", "tree": {"sha": "63dcee9137c897be3f86532c87d90d04734f9920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63dcee9137c897be3f86532c87d90d04734f9920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "428642b132a4f2ce6c368398ec7f2ff307f33f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428642b132a4f2ce6c368398ec7f2ff307f33f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428642b132a4f2ce6c368398ec7f2ff307f33f8a"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "ef8ee9fc2a57ff4617b0d4160ab348c546f2b2a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "patch": "@@ -1,3 +1,9 @@\n+2019-07-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91293\n+\t* tree-vect-slp.c (vect_build_slp_tree_2): Do not swap operands\n+\tof reduction stmts.\n+\n 2019-07-31  Matt Thomas  <matt@3am-software.com>\n \t    Nick Hudson <nick@nthcliff.demon.co.uk>\n \t    Matthew Green <mrg@eterna.com.au>"}, {"sha": "6cffdc28da99ab4db7df56829cb48feb4d740a13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "patch": "@@ -1,3 +1,10 @@\n+2019-07-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91293\n+\t* gcc.dg/vect/pr91293-1.c: New testcase.\n+\t* gcc.dg/vect/pr91293-2.c: Likewise.\n+\t* gcc.dg/vect/pr91293-3.c: Likewise.\n+\n 2019-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/91201"}, {"sha": "dc321f5726fd8fb5c66a8ce4111c66268782bfca", "filename": "gcc/testsuite/gcc.dg/vect/pr91293-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-1.c?ref=2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-msse4.1\" { target { sse4_runtime } } } */\n+\n+long long a;\n+unsigned b, c;\n+int d = 62;\n+void e(long long *f, int p2) { *f = p2; }\n+int main()\n+{\n+  for (int g = 2; g <= d; g++)\n+    {\n+      b += g + 4;\n+      c += 5 - g;\n+    }\n+  e(&a, b);\n+  if (a != 2196)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "b9354bbd5e8429b95dbc31ce8fc7112b96df64c2", "filename": "gcc/testsuite/gcc.dg/vect/pr91293-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-2.c?ref=2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-msse4.1\" { target { sse4_runtime } } } */\n+\n+long long a;\n+unsigned b, c;\n+int d = 62;\n+void e(long long *f, int p2) { *f = p2; }\n+int main()\n+{\n+  for (int g = 2; g <= d; g++)\n+    {\n+      c += 5 - g;\n+      b += g + 4;\n+    }\n+  e(&a, b);\n+  if (a != 2196)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c35bc3481cbef06b0b23a4bb99e705a9f279a421", "filename": "gcc/testsuite/gcc.dg/vect/pr91293-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91293-3.c?ref=2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-msse4.1\" { target { sse4_runtime } } } */\n+\n+long long a;\n+unsigned b, c;\n+int d = 62;\n+void e(long long *f, int p2) { *f = p2; }\n+int xx = 5, yy = 4;\n+int main()\n+{\n+  for (int g = 2; g <= d; g++)\n+    {\n+      c += xx - g;\n+      b += yy + g;\n+    }\n+  e(&a, b);\n+  if (a != 2196)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "52f2a06e3b824e5aec1530b3b008e0681766396e", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2153fa7b60a430970cfebade3b04c6a4dd3e83f6/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=2153fa7b60a430970cfebade3b04c6a4dd3e83f6", "patch": "@@ -1296,6 +1296,9 @@ vect_build_slp_tree_2 (vec_info *vinfo,\n \t  && nops == 2\n \t  && oprnds_info[1]->first_dt == vect_internal_def\n \t  && is_gimple_assign (stmt_info->stmt)\n+\t  /* Swapping operands for reductions breaks assumptions later on.  */\n+\t  && STMT_VINFO_DEF_TYPE (stmt_info) != vect_reduction_def\n+\t  && STMT_VINFO_DEF_TYPE (stmt_info) != vect_double_reduction_def\n \t  /* Do so only if the number of not successful permutes was nor more\n \t     than a cut-ff as re-trying the recursive match on\n \t     possibly each level of the tree would expose exponential"}]}