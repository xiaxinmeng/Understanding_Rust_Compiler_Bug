{"sha": "a5d137be06367ea715356dfd14b2683ac607e191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVkMTM3YmUwNjM2N2VhNzE1MzU2ZGZkMTRiMjY4M2FjNjA3ZTE5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-12-08T11:51:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-12-08T11:51:32Z"}, "message": "[multiple changes]\n\n2008-12-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/tr1_impl/cmath: Undef requof / remquol too; add using\n\tdeclarations.\n\t* acinclude.m4 [GLIBCXX_CHECK_C99_TR1]: Check remquof / remquol too.\n\t* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Adjust.\n\t* configure: Regenerate.\n\n2008-12-08  Edward Smith-Rowland  <3dw4rd@verizon.net>\n\n\t* include/bits/forward_list.h: Fixed spurious \"forward_swap\" in doxy.\n\nFrom-SVN: r142548", "tree": {"sha": "fe50cc296e06e72c48abca04f9d0af2e3e83e162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe50cc296e06e72c48abca04f9d0af2e3e83e162"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5d137be06367ea715356dfd14b2683ac607e191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d137be06367ea715356dfd14b2683ac607e191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d137be06367ea715356dfd14b2683ac607e191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d137be06367ea715356dfd14b2683ac607e191/comments", "author": null, "committer": null, "parents": [{"sha": "d9c194cb9ef4c1a9263af6c28267104f4ce3628e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c194cb9ef4c1a9263af6c28267104f4ce3628e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c194cb9ef4c1a9263af6c28267104f4ce3628e"}], "stats": {"total": 111, "additions": 59, "deletions": 52}, "files": [{"sha": "ed969fac669797f15d1ea33b5af892610242c9ff", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5d137be06367ea715356dfd14b2683ac607e191", "patch": "@@ -1,3 +1,15 @@\n+2008-12-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/tr1_impl/cmath: Undef remquof / remquol too; add using\n+\tdeclarations.\n+\t* acinclude.m4 [GLIBCXX_CHECK_C99_TR1]: Check remquof / remquol too.\n+\t* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Adjust.\n+\t* configure: Regenerate.\n+\n+2008-12-08  Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* include/bits/forward_list.h: Fixed spurious \"forward_swap\" in doxy.\n+\n 2008-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/38421"}, {"sha": "f4a83460aa9a4fd6298f1dda7517d0921b31b58f", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=a5d137be06367ea715356dfd14b2683ac607e191", "patch": "@@ -1523,8 +1523,8 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n \t          remainderf(0.0f, 0.0f);\n \t          remainderl(0.0l, 0.0l);\n \t          remquo(0.0, 0.0, 0);\n-\t          remquo(0.0f, 0.0f, 0);\n-\t          remquo(0.0l, 0.0l, 0);\n+\t          remquof(0.0f, 0.0f, 0);\n+\t          remquol(0.0l, 0.0l, 0);\n \t          rint(0.0);\n \t          rintf(0.0f);\n \t          rintl(0.0l);"}, {"sha": "23b050032d557ee13366bc639147e2e8be5582f6", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 35, "deletions": 40, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=a5d137be06367ea715356dfd14b2683ac607e191", "patch": "@@ -1075,10 +1075,10 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n-  --with-system-libunwind use installed libunwind\n   --with-gnu-ld           assume the C compiler uses GNU ld default=no\n   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib\n   --without-libiconv-prefix     don't search for libiconv in includedir and libdir\n+  --with-system-libunwind use installed libunwind\n   --with-gxx-include-dir=DIR\n                           installation directory for include files\n \n@@ -20965,8 +20965,8 @@ typedef double_t  my_double_t;\n \t          remainderf(0.0f, 0.0f);\n \t          remainderl(0.0l, 0.0l);\n \t          remquo(0.0, 0.0, 0);\n-\t          remquo(0.0f, 0.0f, 0);\n-\t          remquo(0.0l, 0.0l, 0);\n+\t          remquof(0.0f, 0.0f, 0);\n+\t          remquol(0.0l, 0.0l, 0);\n \t          rint(0.0);\n \t          rintf(0.0f);\n \t          rintl(0.0l);\n@@ -41961,40 +41961,6 @@ _ACEOF\n \n   fi\n \n-  # For _Unwind_GetIPInfo.\n-\n-\n-# Check whether --with-system-libunwind or --without-system-libunwind was given.\n-if test \"${with_system_libunwind+set}\" = set; then\n-  withval=\"$with_system_libunwind\"\n-\n-fi;\n-  # If system-libunwind was not specifically set, pick a default setting.\n-  if test x$with_system_libunwind = x; then\n-    case ${target} in\n-      ia64-*-hpux*) with_system_libunwind=yes ;;\n-      *) with_system_libunwind=no ;;\n-    esac\n-  fi\n-  # Based on system-libunwind and target, do we have ipinfo?\n-  if  test x$with_system_libunwind = xyes; then\n-    case ${target} in\n-      ia64-*-*) have_unwind_getipinfo=no ;;\n-      *) have_unwind_getipinfo=yes ;;\n-    esac\n-  else\n-     have_unwind_getipinfo=yes\n-  fi\n-\n-  if test x$have_unwind_getipinfo = xyes; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_GETIPINFO 1\n-_ACEOF\n-\n-  fi\n-\n-\n   # For iconv support.\n \n       if test \"X$prefix\" = \"XNONE\"; then\n@@ -104361,13 +104327,42 @@ _ACEOF\n _ACEOF\n \n   fi\n+fi\n+\n+# Check for _Unwind_GetIPInfo.\n \n-  # Assume we have _Unwind_GetIPInfo for cross-compiles.\n-  cat >>confdefs.h <<\\_ACEOF\n+\n+# Check whether --with-system-libunwind or --without-system-libunwind was given.\n+if test \"${with_system_libunwind+set}\" = set; then\n+  withval=\"$with_system_libunwind\"\n+\n+fi;\n+  # If system-libunwind was not specifically set, pick a default setting.\n+  if test x$with_system_libunwind = x; then\n+    case ${target} in\n+      ia64-*-hpux*) with_system_libunwind=yes ;;\n+      *) with_system_libunwind=no ;;\n+    esac\n+  fi\n+  # Based on system-libunwind and target, do we have ipinfo?\n+  if  test x$with_system_libunwind = xyes; then\n+    case ${target} in\n+      ia64-*-*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+  else\n+     have_unwind_getipinfo=yes\n+  fi\n+\n+  if test x$have_unwind_getipinfo = xyes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n #define HAVE_GETIPINFO 1\n _ACEOF\n \n-fi\n+  fi\n+\n+\n \n  # Check whether --enable-linux-futex or --disable-linux-futex was given.\n if test \"${enable_linux_futex+set}\" = set; then"}, {"sha": "473982c7e7868df0455a89ce1edbef3dc3b15f1a", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=a5d137be06367ea715356dfd14b2683ac607e191", "patch": "@@ -1311,21 +1311,21 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n                const forward_list<_Tp, _Alloc>& __ly)\n     { return !(__ly < __lx); }\n \n-  /// See std::forward_list::forward_swap().\n+  /// See std::forward_list::swap().\n   template<typename _Tp, typename _Alloc>\n     inline void\n     swap(forward_list<_Tp, _Alloc>& __lx,\n          forward_list<_Tp, _Alloc>& __ly)\n     { __lx.swap(__ly); }\n \n-  /// See std::forward_list::forward_swap().\n+  /// See std::forward_list::swap().\n   template<typename _Tp, typename _Alloc>\n     inline void\n     swap(forward_list<_Tp, _Alloc>&& __lx,\n          forward_list<_Tp, _Alloc>& __ly)\n     { __lx.swap(__ly); }\n \n-  /// See std::forward_list::forward_swap().\n+  /// See std::forward_list::swap().\n   template<typename _Tp, typename _Alloc>\n     inline void \n     swap(forward_list<_Tp, _Alloc>& __lx,"}, {"sha": "044d122e8af7ca75e82d9e93391beda567ff1f92", "filename": "libstdc++-v3/include/tr1_impl/cmath", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcmath?ref=a5d137be06367ea715356dfd14b2683ac607e191", "patch": "@@ -119,8 +119,8 @@\n #undef remainderf\n #undef remainderl\n #undef remquo\n-#undef remquo\n-#undef remquo\n+#undef remquof\n+#undef remquol\n #undef rint\n #undef rintf\n #undef rintl\n@@ -266,8 +266,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   using ::remainderl;\n \n   using ::remquo;\n-  using ::remquo;\n-  using ::remquo;\n+  using ::remquof;\n+  using ::remquol;\n \n   using ::rint;\n   using ::rintf;"}, {"sha": "6bbb1489d5316a26e30691648997d722cc202a20", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cmath/functions.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d137be06367ea715356dfd14b2683ac607e191/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ffunctions.cc?ref=a5d137be06367ea715356dfd14b2683ac607e191", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-07  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -156,8 +156,8 @@ void test01()\n   ldret = std::tr1::remainderl(ld0, ld0);\n \n   ret = std::tr1::remquo(d0, d0, pquo);\n-  fret = std::tr1::remquo(f0, f0, pquo);\n-  ldret = std::tr1::remquo(ld0, ld0, pquo);\n+  fret = std::tr1::remquof(f0, f0, pquo);\n+  ldret = std::tr1::remquol(ld0, ld0, pquo);\n \n   ret = std::tr1::rint(d0);\n   fret = std::tr1::rintf(f0);"}]}