{"sha": "c1bd46a8d430b61e107263387190f1677a59f526", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFiZDQ2YThkNDMwYjYxZTEwNzI2MzM4NzE5MGYxNjc3YTU5ZjUyNg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2001-12-14T12:39:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-14T12:39:08Z"}, "message": "alpha.c (vms_attribute_table): Add new attributes.\n\n\t* config/alpha/alpha.c (vms_attribute_table): Add new attributes.\n\t(alpha_write_linkage): Test for null alpha_links.\n\t(SECTION_VMS_GLOBAL, SECTION_VMS_INITIALIZE): New section attributes.\n\t(vms_section_type_flags, vms_asm_named_section): Handle them.\n\nFrom-SVN: r48000", "tree": {"sha": "8bc5d061c74b922073edee7acfbdfed303470549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bc5d061c74b922073edee7acfbdfed303470549"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1bd46a8d430b61e107263387190f1677a59f526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1bd46a8d430b61e107263387190f1677a59f526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1bd46a8d430b61e107263387190f1677a59f526", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1bd46a8d430b61e107263387190f1677a59f526/comments", "author": null, "committer": null, "parents": [{"sha": "965f5423cdab8320a22279d1e84bd3294d235184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965f5423cdab8320a22279d1e84bd3294d235184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/965f5423cdab8320a22279d1e84bd3294d235184"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "f3809bd537ee3b648572909222e64c6915fae1c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1bd46a8d430b61e107263387190f1677a59f526/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1bd46a8d430b61e107263387190f1677a59f526/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1bd46a8d430b61e107263387190f1677a59f526", "patch": "@@ -1,3 +1,10 @@\n+Fri Dec 14 07:29:52 2001  Douglas B. Rupp  <rupp@gnat.com>\n+\n+\t* config/alpha/alpha.c (vms_attribute_table): Add new attributes.\n+\t(alpha_write_linkage): Test for null alpha_links.\n+\t(SECTION_VMS_GLOBAL, SECTION_VMS_INITIALIZE): New section attributes.\n+\t(vms_section_type_flags, vms_asm_named_section): Handle them.\n+\n Fri Dec 14 12:05:14 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (ix86_fpmath, ix86_fpmath_string): New."}, {"sha": "7dcb4a6bc4dd51f03bad8583293c1bea4aec06e0", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1bd46a8d430b61e107263387190f1677a59f526/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1bd46a8d430b61e107263387190f1677a59f526/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=c1bd46a8d430b61e107263387190f1677a59f526", "patch": "@@ -5804,8 +5804,10 @@ alpha_using_fp ()\n const struct attribute_spec vms_attribute_table[] =\n {\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler } */\n-  { \"overlaid\", 0, 0, true,  false, false, NULL },\n-  { NULL,       0, 0, false, false, false, NULL }\n+  { \"overlaid\",   0, 0, true,  false, false, NULL },\n+  { \"global\",     0, 0, true,  false, false, NULL },\n+  { \"initialize\", 0, 0, true,  false, false, NULL },\n+  { NULL,         0, 0, false, false, false, NULL }\n };\n \n #endif\n@@ -7955,15 +7957,20 @@ void\n alpha_write_linkage (stream)\n     FILE *stream;\n {\n-  readonly_section ();\n-  fprintf (stream, \"\\t.align 3\\n\");\n-  splay_tree_foreach (alpha_links, alpha_write_one_linkage, stream);\n+  if (alpha_links)\n+    {\n+      readonly_section ();\n+      fprintf (stream, \"\\t.align 3\\n\");\n+      splay_tree_foreach (alpha_links, alpha_write_one_linkage, stream);\n+    }\n }\n \n /* Given a decl, a section name, and whether the decl initializer\n    has relocs, choose attributes for the section.  */\n \n #define SECTION_VMS_OVERLAY\tSECTION_FORGET\n+#define SECTION_VMS_GLOBAL SECTION_MACH_DEP\n+#define SECTION_VMS_INITIALIZE (SECTION_VMS_GLOBAL << 1)\n \n static unsigned int\n vms_section_type_flags (decl, name, reloc)\n@@ -7976,6 +7983,12 @@ vms_section_type_flags (decl, name, reloc)\n   if (decl && DECL_ATTRIBUTES (decl)\n       && lookup_attribute (\"overlaid\", DECL_ATTRIBUTES (decl)))\n     flags |= SECTION_VMS_OVERLAY;\n+  if (decl && DECL_ATTRIBUTES (decl)\n+      && lookup_attribute (\"global\", DECL_ATTRIBUTES (decl)))\n+    flags |= SECTION_VMS_GLOBAL;\n+  if (decl && DECL_ATTRIBUTES (decl)\n+      && lookup_attribute (\"initialize\", DECL_ATTRIBUTES (decl)))\n+    flags |= SECTION_VMS_INITIALIZE;\n \n   return flags;\n }\n@@ -7989,14 +8002,19 @@ vms_asm_named_section (name, flags)\n      const char *name;\n      unsigned int flags;\n {\n-  const char *flag_str = \"\";\n+  fputc ('\\n', asm_out_file);\n+  fprintf (asm_out_file, \".section\\t%s\", name);\n \n   if (flags & SECTION_VMS_OVERLAY)\n-    flag_str = \",OVR\";\n-  else if (flags & SECTION_DEBUG)\n-    flag_str = \",NOWRT\";\n-\n-  fprintf (asm_out_file, \".section\\t%s%s\\n\", name, flag_str);\n+    fprintf (asm_out_file, \",OVR\");\n+  if (flags & SECTION_VMS_GLOBAL)\n+    fprintf (asm_out_file, \",GBL\");\n+  if (flags & SECTION_VMS_INITIALIZE)\n+    fprintf (asm_out_file, \",NOMOD\");\n+  if (flags & SECTION_DEBUG)\n+    fprintf (asm_out_file, \",NOWRT\");\n+\n+  fputc ('\\n', asm_out_file);\n }\n \n /* Record an element in the table of global constructors.  SYMBOL is"}]}