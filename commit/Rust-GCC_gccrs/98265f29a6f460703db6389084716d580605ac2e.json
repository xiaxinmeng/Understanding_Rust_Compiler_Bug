{"sha": "98265f29a6f460703db6389084716d580605ac2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgyNjVmMjlhNmY0NjA3MDNkYjYzODkwODQ3MTZkNTgwNjA1YWMyZQ==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2007-05-15T21:35:28Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2007-05-15T21:35:28Z"}, "message": "interpret.cc (STOREA): Rewrite using temporary variable to avoid double-macro expansion side-effects.\n\n        * interpret.cc (STOREA): Rewrite using temporary variable to\n        avoid double-macro expansion side-effects.\n        (STOREI): Likewise.\n        (STOREF): Likewise.\n        (STOREL)[SIZEOF_VOID_P == 8]: Likewise.\n        (STORED)[SIZEOF_VOID_P == 8]: Likewise.\n        (STOREL)[SIZEOF_VOID_P != 8]: Likewise.\n        (STORED)[SIZEOF_VOID_P != 8]: Likewise.\n        (POKEI): Likewise.\n\nFrom-SVN: r124746", "tree": {"sha": "2b4b0ed67f5a06ee3b2b114ee04624ecca0df271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b4b0ed67f5a06ee3b2b114ee04624ecca0df271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98265f29a6f460703db6389084716d580605ac2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98265f29a6f460703db6389084716d580605ac2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98265f29a6f460703db6389084716d580605ac2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98265f29a6f460703db6389084716d580605ac2e/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11c004e7f0574bf0997f7fa96f52193a1d9642f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c004e7f0574bf0997f7fa96f52193a1d9642f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c004e7f0574bf0997f7fa96f52193a1d9642f0"}], "stats": {"total": 121, "additions": 77, "deletions": 44}, "files": [{"sha": "577ccc0e35da30fe71fe7db6772da9a703f75c47", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98265f29a6f460703db6389084716d580605ac2e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98265f29a6f460703db6389084716d580605ac2e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=98265f29a6f460703db6389084716d580605ac2e", "patch": "@@ -1,3 +1,15 @@\n+2007-05-15  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret.cc (STOREA): Rewrite using temporary variable to\n+\tavoid double-macro expansion side-effects.\n+\t(STOREI): Likewise.\n+\t(STOREF): Likewise.\n+\t(STOREL)[SIZEOF_VOID_P == 8]: Likewise.\n+\t(STORED)[SIZEOF_VOID_P == 8]: Likewise.\n+\t(STOREL)[SIZEOF_VOID_P != 8]: Likewise.\n+\t(STORED)[SIZEOF_VOID_P != 8]: Likewise.\n+\t(POKEI): Likewise.\n+\n 2007-05-12  David Daney  <ddaney@avtrex.com>\n \n \tPR libgcj/29324"}, {"sha": "b078676365b2477d1c03995e6360bc971d158633", "filename": "libjava/interpret.cc", "status": "modified", "additions": 65, "deletions": 44, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98265f29a6f460703db6389084716d580605ac2e/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98265f29a6f460703db6389084716d580605ac2e/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=98265f29a6f460703db6389084716d580605ac2e", "patch": "@@ -180,60 +180,81 @@ convert (FROM val, TO min, TO max)\n # define LOADD(I)  LOADL(I)\n #endif\n \n-#define STOREA(I)               \\\n-  do {                          \\\n-    DEBUG_LOCALS_INSN (I, 'o'); \\\n-    locals[I].o = (--sp)->o;    \\\n-  } while (0)\n-#define STOREI(I)               \\\n-  do {                          \\\n-    DEBUG_LOCALS_INSN (I, 'i'); \\\n-    locals[I].i = (--sp)->i;    \\\n-  } while (0)\n-#define STOREF(I)               \\\n-  do {                          \\\n-    DEBUG_LOCALS_INSN (I, 'f'); \\\n-    locals[I].f = (--sp)->f;    \\\n+#define STOREA(I)\t\t\t\\\n+  do\t\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'o');\t\\\n+      locals[__idx].o = (--sp)->o;\t\\\n+    }\t\t\t\t\t\\\n+  while (0)\n+#define STOREI(I)\t\t       \t\\\n+  do\t\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'i');\t\\\n+      locals[__idx].i = (--sp)->i;\t\\\n   } while (0)\n+#define STOREF(I)\t\t\t\\\n+  do\t\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'f');\t\\\n+      locals[__idx].f = (--sp)->f;\t\\\n+    }\t\t\t\t\t\\\n+  while (0)\n #if SIZEOF_VOID_P == 8\n-# define STOREL(I)                   \\\n-  do {                               \\\n-    DEBUG_LOCALS_INSN (I, 'l');      \\\n-    DEBUG_LOCALS_INSN (I + 1, 'x');  \\\n-    (sp -= 2, locals[I].l = sp->l);  \\\n-  } while (0)\n-# define STORED(I)                   \\\n-  do {                               \\\n-    DEBUG_LOCALS_INSN (I, 'd');      \\\n-    DEBUG_LOCALS_INSN (I + 1, 'x');  \\\n-    (sp -= 2, locals[I].d = sp->d);  \\\n-  } while (0)\n+# define STOREL(I) \\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'l');\t\t\\\n+      DEBUG_LOCALS_INSN (__idx + 1, 'x');\t\\\n+      (sp -= 2, locals[__idx].l = sp->l);\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+# define STORED(I)\t\t\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'd');\t\t\\\n+      DEBUG_LOCALS_INSN (__idx + 1, 'x');\t\\\n+      (sp -= 2, locals[__idx].d = sp->d);\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #else\n-# define STOREL(I)                   \\\n-  do {                               \\\n-    DEBUG_LOCALS_INSN (I, 'l');      \\\n-    DEBUG_LOCALS_INSN (I + 1, 'x');  \\\n-    jint __idx = (I);                \\\n-    locals[__idx+1].ia[0] = (--sp)->ia[0];  \\\n-    locals[__idx].ia[0] = (--sp)->ia[0];    \\\n-  } while (0)\n-# define STORED(I)                   \\\n-  do {                               \\\n-    DEBUG_LOCALS_INSN (I, 'd');      \\\n-    DEBUG_LOCALS_INSN (I + 1, 'x');  \\\n-    jint __idx = (I);                \\\n-    locals[__idx+1].ia[0] = (--sp)->ia[0];  \\\n-    locals[__idx].ia[0] = (--sp)->ia[0];    \\\n+# define STOREL(I)\t\t\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'l');\t\t\\\n+      DEBUG_LOCALS_INSN (__idx + 1, 'x');\t\\\n+      locals[__idx + 1].ia[0] = (--sp)->ia[0];\t\\\n+      locals[__idx].ia[0] = (--sp)->ia[0];\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+# define STORED(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    jint __idx = (I);\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (__idx, 'd');\t\t\\\n+    DEBUG_LOCALS_INSN (__idx + 1, 'x');\t\t\\\n+    locals[__idx + 1].ia[0] = (--sp)->ia[0];\t\\\n+    locals[__idx].ia[0] = (--sp)->ia[0];\t\\\n   } while (0)\n #endif\n \n #define PEEKI(I)  (locals+(I))->i\n #define PEEKA(I)  (locals+(I))->o\n \n-#define POKEI(I,V)\t\t\t\t\\\n-  DEBUG_LOCALS_INSN(I,'i');\t\t\t\\\n-  ((locals+(I))->i = (V))\n+#define POKEI(I,V)\t\t\t\\\n+  do\t\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      jint __idx = (I);\t\t\t\\\n+      DEBUG_LOCALS_INSN (__idx, 'i');\t\\\n+      ((locals + __idx)->i = (V));\t\\\n+    }\t\t\t\t\t\\\n+  while (0)\n \n \n #define BINOPI(OP) { \\"}]}