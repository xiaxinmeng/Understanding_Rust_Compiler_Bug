{"sha": "85776d6097f9bb01d70bf7da37d14a1210f4cd63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU3NzZkNjA5N2Y5YmIwMWQ3MGJmN2RhMzdkMTRhMTIxMGY0Y2Q2Mw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2008-07-07T16:05:11Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2008-07-07T16:05:11Z"}, "message": "function.c (assign_parm_remove_parallels): Check mode of entry_parm.\n\n\t* function.c (assign_parm_remove_parallels): Check mode of\n\tentry_parm.\n\t(assign_parm_setup_block_p): Also check mode of entry_parm.\n\nFrom-SVN: r137575", "tree": {"sha": "de7207a6081982f1a8d0a2629ab2852c122367da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de7207a6081982f1a8d0a2629ab2852c122367da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85776d6097f9bb01d70bf7da37d14a1210f4cd63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85776d6097f9bb01d70bf7da37d14a1210f4cd63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85776d6097f9bb01d70bf7da37d14a1210f4cd63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85776d6097f9bb01d70bf7da37d14a1210f4cd63/comments", "author": null, "committer": null, "parents": [{"sha": "bf87f41cae86459ab5028a664c737645c9f77bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf87f41cae86459ab5028a664c737645c9f77bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf87f41cae86459ab5028a664c737645c9f77bc3"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "3a74146f300e3eea6b323db6888d3b8adaea728a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85776d6097f9bb01d70bf7da37d14a1210f4cd63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85776d6097f9bb01d70bf7da37d14a1210f4cd63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85776d6097f9bb01d70bf7da37d14a1210f4cd63", "patch": "@@ -1,3 +1,9 @@\n+2008-07-07  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* function.c (assign_parm_remove_parallels): Check mode of\n+\tentry_parm.\n+\t(assign_parm_setup_block_p): Also check mode of entry_parm.\n+\n 2008-07-07  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.h (set_used_smts): Remove."}, {"sha": "69c2f68a4f9519a6e6bf91a9bbc20685b50339c7", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85776d6097f9bb01d70bf7da37d14a1210f4cd63/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85776d6097f9bb01d70bf7da37d14a1210f4cd63/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=85776d6097f9bb01d70bf7da37d14a1210f4cd63", "patch": "@@ -2364,8 +2364,7 @@ assign_parm_remove_parallels (struct assign_parm_data_one *data)\n      This can be done with register operations rather than on the\n      stack, even if we will store the reconstituted parameter on the\n      stack later.  */\n-  if (GET_CODE (entry_parm) == PARALLEL\n-      && data->passed_mode != BLKmode)\n+  if (GET_CODE (entry_parm) == PARALLEL && GET_MODE (entry_parm) != BLKmode)\n     {\n       rtx parmreg = gen_reg_rtx (GET_MODE (entry_parm));\n       emit_group_store (parmreg, entry_parm, NULL_TREE,\n@@ -2421,6 +2420,8 @@ assign_parm_setup_block_p (struct assign_parm_data_one *data)\n {\n   if (data->nominal_mode == BLKmode)\n     return true;\n+  if (GET_MODE (data->entry_parm) == BLKmode)\n+    return true;\n \n #ifdef BLOCK_REG_PADDING\n   /* Only assign_parm_setup_block knows how to deal with register arguments"}]}