{"sha": "4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "node_id": "C_kwDOANBUbNoAKDRhMGZlZDBjMGM3MjQxNTYyZWFhNWYxYTRjOTE2YjY4OTQyOWFkODY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-15T14:35:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-15T14:35:57Z"}, "message": "openmp: Handle OpenMP 5.1 simplified OMP_PLACES syntax\n\nIn addition to adding ll_caches and numa_domain abstract names\nto OMP_PLACES syntax, OpenMP 5.1 also added one syntax simplification:\nhttps://github.com/OpenMP/spec/issues/2080\nhttps://github.com/OpenMP/spec/pull/2081\nin particular that in the grammar place non-terminal is now\nnot only { res-list } but also res (i.e. a non-negative integer),\nwhich stands as a shortcut for { res }\nSo, one can specify OMP_PLACES=0,4,8,12 with the meaning\nOMP_PLACES={0},{4},{8},{12} or OMP_PLACES=0:4 instead of OMP_PLACES={0}:4\nor OMP_PLACES={0},{1},{2},{3} etc.\n\nThis patch implements that.\n\n2021-10-15  Jakub Jelinek  <jakub@redhat.com>\n\n\t* env.c (parse_one_place): Handle non-negative-number the same\n\tas { non-negative-number }.  Reject even !number:1 and\n\t!number:1:stride or !place:1 or !place:1:stride instead of just\n\tlength other than 1.\n\t* libgomp.texi (OpenMP 5.1): Document OMP_PLACES syntax extensions\n\tand OMP_NUM_TEAMS/OMP_TEAMS_THREAD_LIMIT and\n\tomp_{set_num,get_max}_teams/omp_{s,g}et_teams_thread_limit features\n\tas implemented.\n\t* testsuite/libgomp.c/affinity-1.c: Add a test for the 5.1 place\n\tsimplified syntax.", "tree": {"sha": "cff49bd757788e03aba0a3eadfc889d2ac35f348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cff49bd757788e03aba0a3eadfc889d2ac35f348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c057ed9c52c6a63a1a692268f916b1a9131cd4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c057ed9c52c6a63a1a692268f916b1a9131cd4b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c057ed9c52c6a63a1a692268f916b1a9131cd4b7"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "df10ff656b6bf598498f0186842999de54c4ca09", "filename": "libgomp/env.c", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/libgomp%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/libgomp%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fenv.c?ref=4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "patch": "@@ -546,6 +546,7 @@ parse_one_place (char **envp, bool *negatep, unsigned long *lenp,\n   long stride = 1;\n   int pass;\n   bool any_negate = false;\n+  bool has_braces = true;\n   *negatep = false;\n   while (isspace ((unsigned char) *env))\n     ++env;\n@@ -557,12 +558,28 @@ parse_one_place (char **envp, bool *negatep, unsigned long *lenp,\n \t++env;\n     }\n   if (*env != '{')\n-    return false;\n-  ++env;\n-  while (isspace ((unsigned char) *env))\n-    ++env;\n+    {\n+      char *end;\n+      unsigned long this_num;\n+\n+      errno = 0;\n+      this_num = strtoul (env, &end, 10);\n+      if (errno || end == env)\n+\treturn false;\n+      env = end - 1;\n+      has_braces = false;\n+      if (gomp_places_list\n+\t  && !gomp_affinity_add_cpus (p, this_num, 1, 1, false))\n+\treturn false;\n+    }\n+  else\n+    {\n+      ++env;\n+      while (isspace ((unsigned char) *env))\n+\t++env;\n+    }\n   start = env;\n-  for (pass = 0; pass < (any_negate ? 2 : 1); pass++)\n+  for (pass = 0; pass < (any_negate ? 2 : has_braces); pass++)\n     {\n       env = start;\n       do\n@@ -590,6 +607,8 @@ parse_one_place (char **envp, bool *negatep, unsigned long *lenp,\n \t  if (*env == ':')\n \t    {\n \t      ++env;\n+\t      if (this_negate)\n+\t\treturn false;\n \t      while (isspace ((unsigned char) *env))\n \t\t++env;\n \t      errno = 0;\n@@ -612,8 +631,6 @@ parse_one_place (char **envp, bool *negatep, unsigned long *lenp,\n \t\t    ++env;\n \t\t}\n \t    }\n-\t  if (this_negate && this_len != 1)\n-\t    return false;\n \t  if (gomp_places_list && pass == this_negate)\n \t    {\n \t      if (this_negate)\n@@ -640,6 +657,8 @@ parse_one_place (char **envp, bool *negatep, unsigned long *lenp,\n   if (*env == ':')\n     {\n       char *end;\n+      if (*negatep)\n+\treturn false;\n       ++env;\n       while (isspace ((unsigned char) *env))\n \t++env;\n@@ -663,8 +682,6 @@ parse_one_place (char **envp, bool *negatep, unsigned long *lenp,\n \t    ++env;\n \t}\n     }\n-  if (*negatep && len != 1)\n-    return false;\n   *envp = env;\n   *lenp = len;\n   *stridep = stride;"}, {"sha": "e9fa8ba0bf78e189582bf46231fdaf55ee2c93f4", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "patch": "@@ -309,7 +309,7 @@ The OpenMP 4.5 specification is fully supported.\n @item @code{present} argument to @code{defaultmap} clause @tab N @tab\n @item @code{omp_set_num_teams}, @code{omp_set_teams_thread_limit},\n       @code{omp_get_max_teams}, @code{omp_get_teams_thread_limit} runtime\n-      routines @tab N @tab\n+      routines @tab Y @tab\n @item @code{omp_target_is_accessible} runtime routine @tab N @tab\n @item @code{omp_target_memcpy_async} and @code{omp_target_memcpy_rect_async}\n       runtime routines @tab N @tab\n@@ -328,9 +328,9 @@ The OpenMP 4.5 specification is fully supported.\n       @code{ompt_callback_target_emi_t}, @code{ompt_callback_target_map_emi_t}\n       and @code{ompt_callback_target_submit_emi_t} @tab N @tab\n @item @code{ompt_callback_error_t} type @tab N @tab\n-@item @code{OMP_PLACES} syntax was extension @tab N @tab\n+@item @code{OMP_PLACES} syntax extensions @tab Y @tab\n @item @code{OMP_NUM_TEAMS} and @code{OMP_TEAMS_THREAD_LIMIT} environment\n-      variables @tab N @tab\n+      variables @tab Y @tab\n @end multitable\n \n @unnumberedsubsec Other new OpenMP 5.1 features"}, {"sha": "1039e3b9c968f07ca45e645e6dca1b1681eda301", "filename": "libgomp/testsuite/libgomp.c/affinity-1.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/libgomp%2Ftestsuite%2Flibgomp.c%2Faffinity-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0fed0c0c7241562eaa5f1a4c916b689429ad86/libgomp%2Ftestsuite%2Flibgomp.c%2Faffinity-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Faffinity-1.c?ref=4a0fed0c0c7241562eaa5f1a4c916b689429ad86", "patch": "@@ -48,7 +48,7 @@ struct place\n };\n struct places\n {\n-  char name[40];\n+  char name[50];\n   int count;\n   struct place places[8];\n } places_array[] = {\n@@ -62,7 +62,9 @@ struct places\n     { { 1, 1 }, { 2, 1 }, { 3, 1 },\n       { 4, 1 }, { 5, 1 }, { 6, 1 }, { 7, 1 } } },\n   { \"{0,1},{3,2,4},{6,5,!6},{6},{7:2:-1,!6}\", 5,\n-    { { 0, 2 }, { 2, 3 }, { 5, 1 }, { 6, 1 }, { 7, 1 } } }\n+    { { 0, 2 }, { 2, 3 }, { 5, 1 }, { 6, 1 }, { 7, 1 } } },\n+  { \"1,2,{2,3,!2},3,3,!3,!{5:3:-1,!4,!5},{4},5,!4,!5\", 3,\n+    { { 1, 1 }, { 2, 1 }, { 3, 1 } } }\n };\n \n unsigned long contig_cpucount;"}]}