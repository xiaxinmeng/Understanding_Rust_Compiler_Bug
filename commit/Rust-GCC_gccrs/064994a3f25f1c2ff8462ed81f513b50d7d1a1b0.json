{"sha": "064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY0OTk0YTNmMjVmMWMyZmY4NDYyZWQ4MWY1MTNiNTBkN2QxYTFiMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-02-01T16:37:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-02-01T16:37:20Z"}, "message": "Const correctness issue: http://gcc.gnu.org/ml/libstdc++/2003-01/msg00370.html\n\n2003-02-01  Paolo Carlini  <pcarlini@unitus.it>\n\t    Benjamin Kosnik  <bkoz@redhat.com>\n\n\tConst correctness issue:\n\thttp://gcc.gnu.org/ml/libstdc++/2003-01/msg00370.html\n\t* include/bits/locale_classes.h\n\t(locale::_Impl::_M_facets): Change type to const facet**.\n\t(locale::_Impl::_M_install_facet): Change declaration to\n\ttake const facet*.\n\t(locale::facet::_M_references): Make mutable.\n\t(locale::facet::_M_add_reference): Declare const.\n\t(locale::facet::_M_remove_reference): Likewise.\n\t* include/bits/locale_facets.tcc\n\t(use_facet(const locale&)): Tweak for const facet** _M_facets.\n\t(has_facet(const locale&)): Likewise.\n\t* src/locale.cc\n\t(locale::facet::_M_add_reference): Adjust definition.\n\t(locale::facet::_M_remove_reference): Likewise.\n\t* src/localename.cc\n\t(locale::_Impl::_Impl(const _Impl&, size_t)): Tweak for\n\tconst facet** _M_facets.\n\t(locale::_Impl::_Impl(const char*, size_t)): Likewise.\n\t(locale::_Impl::_Impl(facet**, size_t, bool)): Likewise.\n\t(locale::_Impl::_M_install_facet): Adjust definition to take\n\tconst facet* and for const facet** _M_facets.\n\t* testsuite/22_locale/locale/cons/8.cc: Add.\n\nCo-Authored-By: Benjamin Kosnik <bkoz@redhat.com>\n\nFrom-SVN: r62248", "tree": {"sha": "acb5e18efe0ce7f8e02ae5ae9c902a43ad4bcf8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb5e18efe0ce7f8e02ae5ae9c902a43ad4bcf8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/comments", "author": null, "committer": null, "parents": [{"sha": "434c87d422b306c985a1c4e67ebba27d24bd50b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434c87d422b306c985a1c4e67ebba27d24bd50b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/434c87d422b306c985a1c4e67ebba27d24bd50b7"}], "stats": {"total": 104, "additions": 87, "deletions": 17}, "files": [{"sha": "58e008e6838d5a814d8c87c7a2bd0e06b7d3b3cd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "patch": "@@ -1,3 +1,30 @@\n+2003-02-01  Paolo Carlini  <pcarlini@unitus.it>\n+            Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tConst correctness issue:\n+\thttp://gcc.gnu.org/ml/libstdc++/2003-01/msg00370.html\n+\t* include/bits/locale_classes.h\n+\t(locale::_Impl::_M_facets): Change type to const facet**.\n+\t(locale::_Impl::_M_install_facet): Change declaration to\n+\ttake const facet*.\n+\t(locale::facet::_M_references): Make mutable.\n+\t(locale::facet::_M_add_reference): Declare const.\n+\t(locale::facet::_M_remove_reference): Likewise.\n+\t* include/bits/locale_facets.tcc\n+\t(use_facet(const locale&)): Tweak for const facet** _M_facets.\n+\t(has_facet(const locale&)): Likewise.\n+\t* src/locale.cc\n+\t(locale::facet::_M_add_reference): Adjust definition.\n+\t(locale::facet::_M_remove_reference): Likewise.\n+\t* src/localename.cc\n+\t(locale::_Impl::_Impl(const _Impl&, size_t)): Tweak for\n+\tconst facet** _M_facets.\n+\t(locale::_Impl::_Impl(const char*, size_t)): Likewise.\n+\t(locale::_Impl::_Impl(facet**, size_t, bool)): Likewise.\n+\t(locale::_Impl::_M_install_facet): Adjust definition to take\n+\tconst facet* and for const facet** _M_facets.\n+\t* testsuite/22_locale/locale/cons/8.cc: Add.\n+\n 2003-01-29  Mark Mitchell  <mark@codesourcery.com>\n \n \t* include/std/std_limits.h (numeric_limits<float>::has_infinity):"}, {"sha": "5e6d5f1f868b7e8662b1708b7ce65ab1ea05f224", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "patch": "@@ -199,7 +199,7 @@ namespace std\n   private:\n     // Data Members.\n     _Atomic_word\t\t\t_M_references;\n-    facet** \t\t\t\t_M_facets;\n+    const facet**\t\t\t_M_facets;\n     size_t \t\t\t\t_M_facets_size;\n \n     char* \t\t\t\t_M_names[_S_categories_size\n@@ -260,7 +260,7 @@ namespace std\n     _M_replace_facet(const _Impl*, const locale::id*);\n \n     void \n-    _M_install_facet(const locale::id*, facet*);\n+    _M_install_facet(const locale::id*, const facet*);\n \n     template<typename _Facet>\n       inline void \n@@ -291,7 +291,7 @@ namespace std\n     friend class locale;\n     friend class locale::_Impl;\n \n-    _Atomic_word \t\t\t_M_references;\n+    mutable _Atomic_word\t\t_M_references;\n \n   protected:\n     // Contains data from the underlying \"C\" library for the classic locale.\n@@ -318,10 +318,10 @@ namespace std\n \n   private:\n     void \n-    _M_add_reference() throw();\n+    _M_add_reference() const throw();\n \n     void \n-    _M_remove_reference() throw();\n+    _M_remove_reference() const throw();\n \n     facet(const facet&);  // Not defined.\n "}, {"sha": "c5263a1ed5a2c955acdd84e7bf1c1e00fc40da34", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "patch": "@@ -71,7 +71,7 @@ namespace std\n     use_facet(const locale& __loc)\n     {\n       size_t __i = _Facet::id._M_id();\n-      locale::facet** __facets = __loc._M_impl->_M_facets;\n+      const locale::facet** __facets = __loc._M_impl->_M_facets;\n       if (!(__i < __loc._M_impl->_M_facets_size && __facets[__i]))\n         __throw_bad_cast();\n       return static_cast<const _Facet&>(*__facets[__i]);\n@@ -82,7 +82,7 @@ namespace std\n     has_facet(const locale& __loc) throw()\n     {\n       size_t __i = _Facet::id._M_id();\n-      locale::facet** __facets = __loc._M_impl->_M_facets;\n+      const locale::facet** __facets = __loc._M_impl->_M_facets;\n       return (__i < __loc._M_impl->_M_facets_size && __facets[__i]);\n     }\n "}, {"sha": "42972e9de40c56ebc5674686e7243fa2b485ddc0", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "patch": "@@ -461,12 +461,12 @@ namespace std\n \n   void  \n   locale::facet::\n-  _M_add_reference() throw()\n+  _M_add_reference() const throw()\n   { __atomic_add(&_M_references, 1); }\n \n   void  \n   locale::facet::\n-  _M_remove_reference() throw()\n+  _M_remove_reference() const throw()\n   {\n     if (__exchange_and_add(&_M_references, -1) == 1)\n       {"}, {"sha": "c9528d00c9879fd7bf219cdd09292eb3c605ac49", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "patch": "@@ -94,7 +94,7 @@ namespace std\n   {\n     try\n       { \n-\t_M_facets = new facet*[_M_facets_size]; \n+\t_M_facets = new const facet*[_M_facets_size]; \n \tfor (size_t __i = 0; __i < _M_facets_size; ++__i)\n \t  _M_facets[__i] = 0;\n       }\n@@ -130,7 +130,7 @@ namespace std\n \n     try\n       { \n-\t_M_facets = new facet*[_M_facets_size]; \n+\t_M_facets = new const facet*[_M_facets_size]; \n \tfor (size_t __i = 0; __i < _M_facets_size; ++__i)\n \t  _M_facets[__i] = 0;\n       }\n@@ -214,7 +214,7 @@ namespace std\n     locale::facet::_S_create_c_locale(locale::facet::_S_c_locale, \n \t\t\t\t      locale::facet::_S_c_name);\n \n-    _M_facets = new(&facet_vec) facet*[_M_facets_size];\n+    _M_facets = new(&facet_vec) const facet*[_M_facets_size];\n     for (size_t __i = 0; __i < _M_facets_size; ++__i)\n       _M_facets[__i] = 0;\n \n@@ -310,7 +310,7 @@ namespace std\n \n   void\n   locale::_Impl::\n-  _M_install_facet(const locale::id* __idp, facet* __fp)\n+  _M_install_facet(const locale::id* __idp, const facet* __fp)\n   {\n     if (__fp)\n       {\n@@ -319,10 +319,10 @@ namespace std\n \t// Check size of facet vector to ensure adequate room.\n \tif (__index > _M_facets_size - 1)\n \t  {\n-\t    facet** __old = _M_facets;\n-\t    facet** __new;\n+\t    const facet** __old = _M_facets;\n+\t    const facet** __new;\n \t    const size_t __new_size = __index + 4;\n-\t    __new = new facet*[__new_size]; \n+\t    __new = new const facet*[__new_size]; \n \t    for (size_t __i = 0; __i < _M_facets_size; ++__i)\n \t      __new[__i] = _M_facets[__i];\n \t    for (size_t __i2 = _M_facets_size; __i2 < __new_size; ++__i2)\n@@ -334,7 +334,7 @@ namespace std\n \t  }\n \n \t__fp->_M_add_reference();\n-\tfacet*& __fpr = _M_facets[__index];\n+\tconst facet*& __fpr = _M_facets[__index];\n \tif (__fpr)\n \t  {\n \t    // Replacing an existing facet. Order matters."}, {"sha": "433fc1fe9ba1fd7c91b821d6bc20e7836077f481", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/8.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064994a3f25f1c2ff8462ed81f513b50d7d1a1b0/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F8.cc?ref=064994a3f25f1c2ff8462ed81f513b50d7d1a1b0", "patch": "@@ -0,0 +1,43 @@\n+// 2003-02-01 Paolo Carlini <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.1.1.2 locale constructors and destructors [lib.locale.cons]\n+\n+#include <locale>\n+\n+// Const correctness issue:\n+// http://gcc.gnu.org/ml/libstdc++/2003-01/msg00370.html\n+void\n+test01()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  const locale l1(\"C\");\n+  const locale l2 =\n+    locale(locale::classic(), &use_facet<time_get<char> >(l1));\n+}\n+\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}