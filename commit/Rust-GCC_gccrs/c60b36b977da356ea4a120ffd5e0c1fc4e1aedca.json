{"sha": "c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "node_id": "C_kwDOANBUbNoAKGM2MGIzNmI5NzdkYTM1NmVhNGExMjBmZmQ1ZTBjMWZjNGUxYWVkY2E", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-05-23T14:45:08Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-06-08T12:32:35Z"}, "message": "libproc_macro: Fix Tokenstream growth\n\nTokenStream did not copy back enough old data to the new location. This\ncommit also add more explicit memcpy usages in order to facilitate\nchange to utf-8 later.\n\nChangeLog:\n\n\t* libgrust/libproc_macro/ffistring.cc (FFIString::make_ffistring):\n\tAdd explicit sizeof and utf-8 warning.\n\t(FFIString::clone): Add explicit sizeof and utf-8 warning.\n\t* libgrust/libproc_macro/ident.cc (Ident::clone): Likewise.\n\t(Ident::make_ident): Likewise.\n\t* libgrust/libproc_macro/tokenstream.cc (TokenStream::grow):\n\tFix vector growth.\n\t(TokenStream__clone): Add explicit sizeof.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "9f971190bf13af1ec5cc636ff04aa8d267f191f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f971190bf13af1ec5cc636ff04aa8d267f191f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f13da289f1c330e280b7f992aca275c9dad8a511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13da289f1c330e280b7f992aca275c9dad8a511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f13da289f1c330e280b7f992aca275c9dad8a511"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "2de674cfcfbc5d0b7acb0a87ef23b0d7790950a9", "filename": "libgrust/libproc_macro/ffistring.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/libgrust%2Flibproc_macro%2Fffistring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/libgrust%2Flibproc_macro%2Fffistring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fffistring.cc?ref=c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "patch": "@@ -42,15 +42,17 @@ FFIString\n FFIString::make_ffistring (const unsigned char *data, std::uint64_t len)\n {\n   unsigned char *inner = new unsigned char[len];\n-  std::memcpy (inner, data, len);\n+  // FIXME: UTF-8 Update this with sizeof codepoint instead\n+  std::memcpy (inner, data, len * sizeof (unsigned char));\n   return {inner, len};\n }\n \n FFIString\n FFIString::clone () const\n {\n   unsigned char *inner = new unsigned char[this->len];\n-  std::memcpy (inner, this->data, this->len);\n+  // FIXME: UTF-8 Update this with sizeof codepoint instead\n+  std::memcpy (inner, this->data, this->len * sizeof (unsigned char));\n   return {inner, this->len};\n }\n "}, {"sha": "6c8472dad208cdb706bcca41ba117af90d2aa7e2", "filename": "libgrust/libproc_macro/ident.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/libgrust%2Flibproc_macro%2Fident.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/libgrust%2Flibproc_macro%2Fident.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fident.cc?ref=c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "patch": "@@ -56,8 +56,9 @@ Ident\n Ident::clone () const\n {\n   unsigned char *val = new unsigned char[this->len];\n-  std::memcpy (val, this->val, this->len);\n-  return {this->is_raw, val, this->len, this->span};\n+  // FIXME: UTF-8 Update this with sizeof codepoint instead\n+  std::memcpy (val, this->val, this->len * sizeof (char));\n+  return {this->is_raw, val, this->len};\n }\n \n Ident\n@@ -73,8 +74,9 @@ Ident::make_ident (const unsigned char *str, std::uint64_t len, Span span,\n \t\t   bool raw)\n {\n   unsigned char *val = new unsigned char[len];\n-  std::memcpy (val, str, len);\n-  return {raw, val, len, span};\n+  // FIXME: UTF-8 Update this with sizeof codepoint instead\n+  std::memcpy (val, str, len * sizeof (char));\n+  return {raw, val, len};\n }\n \n void"}, {"sha": "d1116fff7ee6a65ff947f2069751151e3ddc0289", "filename": "libgrust/libproc_macro/tokenstream.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/libgrust%2Flibproc_macro%2Ftokenstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c60b36b977da356ea4a120ffd5e0c1fc4e1aedca/libgrust%2Flibproc_macro%2Ftokenstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokenstream.cc?ref=c60b36b977da356ea4a120ffd5e0c1fc4e1aedca", "patch": "@@ -51,7 +51,7 @@ TokenStream::grow (std::uint64_t delta)\n   auto new_capacity = capacity + (delta != 0 ? delta : 1);\n   auto *new_data = new TokenTree[new_capacity];\n   capacity = new_capacity;\n-  std::memcpy (new_data, data, size);\n+  std::memcpy (new_data, data, size * sizeof (TokenTree));\n   delete[] data;\n   data = new_data;\n }\n@@ -107,7 +107,7 @@ extern \"C\" TokenStream\n TokenStream__clone (const TokenStream *ts)\n {\n   auto *data = new TokenTree[ts->capacity];\n-  std::memcpy (data, ts->data, ts->size);\n+  std::memcpy (data, ts->data, ts->size * sizeof (TokenTree));\n   return {data, ts->size, ts->capacity};\n }\n "}]}