{"sha": "3350e59f2985469b2472e4d9a6d387337da4519b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1MGU1OWYyOTg1NDY5YjI0NzJlNGQ5YTZkMzg3MzM3ZGE0NTE5Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-29T15:27:35Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-29T15:27:35Z"}, "message": "Detect unused parameters in ipa-modref\n\n\t* ipa-modref.c (modref_lattice::merge): Do nothing if F is EAF_UNUSED.\n\t(analyze_parms): Detect unused params.\n\t(modref_merge_call_site_flags): Merge correct EAF_UNUSED.", "tree": {"sha": "18dd9648cfcb5d38c93364cb1b2526ded9db7699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18dd9648cfcb5d38c93364cb1b2526ded9db7699"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3350e59f2985469b2472e4d9a6d387337da4519b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3350e59f2985469b2472e4d9a6d387337da4519b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3350e59f2985469b2472e4d9a6d387337da4519b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3350e59f2985469b2472e4d9a6d387337da4519b/comments", "author": null, "committer": null, "parents": [{"sha": "f59be8dfbd85a7f8face7340950503750a8bfddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f59be8dfbd85a7f8face7340950503750a8bfddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f59be8dfbd85a7f8face7340950503750a8bfddb"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "5ba8ff000f040c35f80bc9d76dc8b34d323915ae", "filename": "gcc/ipa-modref.c", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3350e59f2985469b2472e4d9a6d387337da4519b/gcc%2Fipa-modref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3350e59f2985469b2472e4d9a6d387337da4519b/gcc%2Fipa-modref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.c?ref=3350e59f2985469b2472e4d9a6d387337da4519b", "patch": "@@ -1437,6 +1437,8 @@ modref_lattice::add_escape_point (gcall *call, int arg, int min_flags,\n bool\n modref_lattice::merge (int f)\n {\n+  if (f & EAF_UNUSED)\n+    return false;\n   if ((flags & f) != flags)\n     {\n       flags &= f;\n@@ -1825,8 +1827,26 @@ analyze_parms (modref_summary *summary, modref_summary_lto *summary_lto,\n        parm = TREE_CHAIN (parm))\n     {\n       tree name = ssa_default_def (cfun, parm);\n-      if (!name)\n-\tcontinue;\n+      if (!name || has_zero_uses (name))\n+\t{\n+\t  /* We do not track non-SSA parameters,\n+\t     but we want to track unused gimple_regs.  */\n+\t  if (!is_gimple_reg (parm))\n+\t    continue;\n+\t  if (summary)\n+\t    {\n+\t      if (parm_index >= summary->arg_flags.length ())\n+\t\tsummary->arg_flags.safe_grow_cleared (count, true);\n+\t      summary->arg_flags[parm_index] = EAF_UNUSED;\n+\t    }\n+\t  else if (summary_lto)\n+\t    {\n+\t      if (parm_index >= summary_lto->arg_flags.length ())\n+\t\tsummary_lto->arg_flags.safe_grow_cleared (count, true);\n+\t      summary_lto->arg_flags[parm_index] = EAF_UNUSED;\n+\t    }\n+\t  continue;\n+\t}\n       analyze_ssa_name_flags (name, lattice, 0, ipa);\n       int flags = lattice[SSA_NAME_VERSION (name)].flags;\n \n@@ -3636,7 +3656,8 @@ modref_merge_call_site_flags (escape_summary *sum,\n \t}\n       flags |= ee->min_flags;\n       flags_lto |= ee->min_flags;\n-      if (cur_summary && ee->parm_index < cur_summary->arg_flags.length ())\n+      if (!(flags & EAF_UNUSED)\n+\t  && cur_summary && ee->parm_index < cur_summary->arg_flags.length ())\n \t{\n \t  int f = cur_summary->arg_flags[ee->parm_index];\n \t  if ((f & flags) != f)\n@@ -3648,7 +3669,8 @@ modref_merge_call_site_flags (escape_summary *sum,\n \t      changed = true;\n \t    }\n \t}\n-      if (cur_summary_lto\n+      if (!(flags_lto & EAF_UNUSED)\n+\t  && cur_summary_lto\n \t  && ee->parm_index < cur_summary_lto->arg_flags.length ())\n \t{\n \t  int f = cur_summary_lto->arg_flags[ee->parm_index];"}]}