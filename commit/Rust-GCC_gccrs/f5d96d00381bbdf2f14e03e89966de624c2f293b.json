{"sha": "f5d96d00381bbdf2f14e03e89966de624c2f293b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkOTZkMDAzODFiYmRmMmYxNGUwM2U4OTk2NmRlNjI0YzJmMjkzYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-04T13:53:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-04T13:53:10Z"}, "message": "[multiple changes]\n\n2010-10-04  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taprop-vxworks.adb, sem_res.adb: Minor reformatting.\n\n2010-10-04  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_cg.adb (Write_Call_Info): Code clean up.\n\nFrom-SVN: r164938", "tree": {"sha": "7ae55711277fcb735520f67dfdc77c9f5ac69055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ae55711277fcb735520f67dfdc77c9f5ac69055"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d96d00381bbdf2f14e03e89966de624c2f293b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d96d00381bbdf2f14e03e89966de624c2f293b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d96d00381bbdf2f14e03e89966de624c2f293b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d96d00381bbdf2f14e03e89966de624c2f293b/comments", "author": null, "committer": null, "parents": [{"sha": "39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39eb65425dcfa87ebbd42cd7f9091b13fef281ee"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "cf8515144c396cda3fc0cf5a651ca2c74464fe09", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f5d96d00381bbdf2f14e03e89966de624c2f293b", "patch": "@@ -1,3 +1,11 @@\n+2010-10-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-taprop-vxworks.adb, sem_res.adb: Minor reformatting.\n+\n+2010-10-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_cg.adb (Write_Call_Info): Code clean up.\n+\n 2010-10-04  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-taprop-mingw.adb (Create_Task): Initialize Thread_Id field to 0."}, {"sha": "1addb9407eed7525082ca5755f79c477e6216d73", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=f5d96d00381bbdf2f14e03e89966de624c2f293b", "patch": "@@ -579,9 +579,14 @@ package body Exp_CG is\n          Prim := Node (Elmt);\n \n          --  Skip internal entities associated with overridden interface\n-         --  primitives\n+         --  primitives, and also inherited primitives.\n \n-         if Present (Interface_Alias (Prim)) then\n+         if Present (Interface_Alias (Prim))\n+           or else\n+            (Present (Alias (Prim))\n+               and then Find_Dispatching_Type (Prim)\n+                          /= Find_Dispatching_Type (Alias (Prim)))\n+         then\n             goto Continue;\n          end if;\n "}, {"sha": "d5726ec66c63633bcacfdc37c7c1f889ac9eb532", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=f5d96d00381bbdf2f14e03e89966de624c2f293b", "patch": "@@ -1099,9 +1099,9 @@ package body System.Task_Primitives.Operations is\n       Result : STATUS;\n \n    begin\n-\n       --  Set_True can be called from an interrupt context, in which case\n       --  Abort_Defer is undefined.\n+\n       if Is_Task_Context then\n          SSL.Abort_Defer.all;\n       end if;\n@@ -1129,6 +1129,7 @@ package body System.Task_Primitives.Operations is\n \n       --  Set_True can be called from an interrupt context, in which case\n       --  Abort_Undefer is undefined.\n+\n       if Is_Task_Context then\n          SSL.Abort_Undefer.all;\n       end if;\n@@ -1336,9 +1337,9 @@ package body System.Task_Primitives.Operations is\n \n    function Is_Task_Context return Boolean is\n       function intContext return int;\n+      pragma Import (C, intContext, \"intContext\");\n       --  Binding to the C routine intContext. This function returns 1 only\n       --  if the current execution state is an interrupt context.\n-      pragma Import (C, intContext, \"intContext\");\n    begin\n       return intContext /= 1;\n    end Is_Task_Context;"}, {"sha": "54c317a17306f1000edd2202063141f230605b8a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d96d00381bbdf2f14e03e89966de624c2f293b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=f5d96d00381bbdf2f14e03e89966de624c2f293b", "patch": "@@ -8856,13 +8856,11 @@ package body Sem_Res is\n             --  newer language version.\n \n             elsif Nkind (Orig_N) = N_Qualified_Expression\n-              and then Nkind_In\n-                         (Parent (N),\n-                          N_Attribute_Reference,\n-                          N_Indexed_Component,\n-                          N_Selected_Component,\n-                          N_Slice,\n-                          N_Explicit_Dereference)\n+              and then Nkind_In (Parent (N), N_Attribute_Reference,\n+                                             N_Indexed_Component,\n+                                             N_Selected_Component,\n+                                             N_Slice,\n+                                             N_Explicit_Dereference)\n             then\n                null;\n "}]}