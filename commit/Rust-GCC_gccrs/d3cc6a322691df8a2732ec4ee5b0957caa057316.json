{"sha": "d3cc6a322691df8a2732ec4ee5b0957caa057316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNjYzZhMzIyNjkxZGY4YTI3MzJlYzRlZTViMDk1N2NhYTA1NzMxNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:37:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:37:41Z"}, "message": "lib-writ.adb: Handle Convention_CIL in addition to Convention_Java, since both are separated.\n\n2007-04-20  Arnaud Charlet  <charlet@adacore.com>\n\t    Vincent Celier  <celier@adacore.com>\n\n\t* lib-writ.adb: Handle Convention_CIL in addition to Convention_Java,\n\tsince both are separated.\n\tAdd support for imported CIL packages.\n\tAdd further special handling of \"value_type\" for CIL.\n\tAdd special handling of pragma Import for CIL.\n\n\t* make.ads, make.adb: When switch -eS is used, direct all outputs to\n\tstandard output instead of standard error, except errors.\n\t(Absolute_Path): Use untouched casing for the parent directory.\n\t(Add_Library_Search_Dir): Use the untouched directory name.\n\t(Add_Source_Search_Dir): Idem.\n\t(Change_To_Object_Directory): Update output to use proper casing.\n\t(Create_Binder_Mapping_File): Use the untouched filename to set\n\tALI_Name.\n\t(Gnatmake): Use untouched library and executable directory names.\n\t(Insert_Project_Sources): Use untouched filename for spec and body.\n\t(Is_In_Object_Directory): Use untouched object directory.\n\t(Mark_Directory): Idem.\n\t(Collect_Arguments_And_Compile): Ensure that Full_Source_File always\n\tcontains the non-canonical filename in all cases.\n\t(Change_To_Object_Directory): In verbose mode, display the name of the\n\tobject directory we're changing to.\n\t(Compile_Sources): Make sure, when a project file is used, to compile\n\tthe body of the unit, when there is one, even when only the spec is\n\trecorded in an ALI file.\n\t(Gcc_Switches, Binder_Switches, Linker_Switches): Tables moved from the\n\tspec to the body.\n\t(Report_Compilation_Failed): New procedure\n\t(Bind, Display_Commands, Compile_Sources, Initialize, Scan_Make_Arg):\n\tprocedures moved from the spec to the body.\n\t(Extract_Failure): Removed, not used\n\tReplace explicit raises of exception Bind_Failed and Link_Failed with\n\tcalls to Make_Failed with the proper message.\n\tReplace explicit raises of exception Compilation_Failed with calls to\n\tprocedure Report_Compilation_Failed.\n\t(Initialize): Create mapping files unconditionally when using project\n\tfiles.\n\n\t* sem_mech.adb: (Name_CIL, Name_CIL_Constructor, Convention_CIL,\n\tPragma_CIL_Constructor): New names.\n\n\t* targparm.ads, targparm.adb\n\t(Compiler_System_Version): Removed, no longer used.\n\t(Get_Target_Parameters): Relax checks on system.ads validity. Add\n\thandling of two new system flags: JVM and CLI.\n\nFrom-SVN: r125432", "tree": {"sha": "a8498719c9b6fae7520643f6460dafa368f13ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8498719c9b6fae7520643f6460dafa368f13ec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3cc6a322691df8a2732ec4ee5b0957caa057316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cc6a322691df8a2732ec4ee5b0957caa057316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cc6a322691df8a2732ec4ee5b0957caa057316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cc6a322691df8a2732ec4ee5b0957caa057316/comments", "author": null, "committer": null, "parents": [{"sha": "437bae3f742fc7f73ca0755a9e23c503aea872e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437bae3f742fc7f73ca0755a9e23c503aea872e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437bae3f742fc7f73ca0755a9e23c503aea872e1"}], "stats": {"total": 1323, "additions": 693, "deletions": 630}, "files": [{"sha": "d62b70d95af306ce3a4919e7cfdea2fe9829b2b1", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=d3cc6a322691df8a2732ec4ee5b0957caa057316", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,7 +33,6 @@ with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Lib.Util; use Lib.Util;\n with Lib.Xref; use Lib.Xref;\n-with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Gnatvsn;  use Gnatvsn;\n with Opt;      use Opt;\n@@ -45,6 +44,7 @@ with Rident;   use Rident;\n with Scn;      use Scn;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n+with Snames;   use Snames;\n with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n with Uname;    use Uname;\n@@ -71,8 +71,8 @@ package body Lib.Writ is\n       Units.Increment_Last;\n       Units.Table (Units.Last) :=\n         (Unit_File_Name  => File_Name (S),\n-         Unit_Name       => No_Name,\n-         Expected_Unit   => No_Name,\n+         Unit_Name       => No_Unit_Name,\n+         Expected_Unit   => No_Unit_Name,\n          Source_Index    => S,\n          Cunit           => Empty,\n          Cunit_Entity    => Empty,\n@@ -427,7 +427,16 @@ package body Lib.Writ is\n                              (Declaration_Node\n                                (Body_Entity (Uent))))))\n          then\n-            Write_Info_Str (\" EE\");\n+            if Convention (Uent) = Convention_CIL then\n+\n+               --  Special case for generic CIL packages which never have\n+               --  elaboration code\n+\n+               Write_Info_Str (\" NE\");\n+\n+            else\n+               Write_Info_Str (\" EE\");\n+            end if;\n          end if;\n \n          if Has_No_Elaboration_Code (Unode) then\n@@ -672,7 +681,7 @@ package body Lib.Writ is\n             --  For preproc. data and def. files, there is no Unit_Name,\n             --  check for that first.\n \n-            if Unit_Name (J) /= No_Name\n+            if Unit_Name (J) /= No_Unit_Name\n               and then (With_Flags (J) or else Unit_Name (J) = Pname)\n             then\n                Num_Withs := Num_Withs + 1;"}, {"sha": "7fe2d28d8c5c018bcd91aa2f1486baced1e03da2", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 634, "deletions": 322, "changes": 956, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d3cc6a322691df8a2732ec4ee5b0957caa057316", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,15 +54,18 @@ with Sinput.P;\n with Snames;   use Snames;\n with Switch;   use Switch;\n with Switch.M; use Switch.M;\n-with Targparm;\n+with Targparm; use Targparm;\n+with Table;\n with Tempdir;\n+with Types;    use Types;\n \n with Ada.Exceptions;            use Ada.Exceptions;\n with Ada.Command_Line;          use Ada.Command_Line;\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-with GNAT.Case_Util;            use GNAT.Case_Util;\n \n+with System.Case_Util;          use System.Case_Util;\n+with System.OS_Lib;             use System.OS_Lib;\n with System.HTable;\n \n package body Make is\n@@ -123,7 +126,7 @@ package body Make is\n \n    procedure Insert_Q\n      (Source_File : File_Name_Type;\n-      Source_Unit : Unit_Name_Type := No_Name;\n+      Source_Unit : Unit_Name_Type := No_Unit_Name;\n       Index       : Int            := 0);\n    --  Inserts Source_File at the end of Q. Provide Source_Unit when possible\n    --  for external use (gnatdist). Provide index for multi-unit sources.\n@@ -176,13 +179,40 @@ package body Make is\n \n    package Q is new Table.Table (\n      Table_Component_Type => Q_Record,\n-     Table_Index_Type     => Natural,\n+     Table_Index_Type     => Integer,\n      Table_Low_Bound      => 0,\n      Table_Initial        => 4000,\n      Table_Increment      => 100,\n      Table_Name           => \"Make.Q\");\n    --  This is the actual Q\n \n+   --  The 3 following packages are used to store gcc, gnatbind and gnatlink\n+   --  switches found in the project files.\n+\n+   package Gcc_Switches is new Table.Table (\n+     Table_Component_Type => String_Access,\n+     Table_Index_Type     => Integer,\n+     Table_Low_Bound      => 1,\n+     Table_Initial        => 20,\n+     Table_Increment      => 100,\n+     Table_Name           => \"Make.Gcc_Switches\");\n+\n+   package Binder_Switches is new Table.Table (\n+     Table_Component_Type => String_Access,\n+     Table_Index_Type     => Integer,\n+     Table_Low_Bound      => 1,\n+     Table_Initial        => 20,\n+     Table_Increment      => 100,\n+     Table_Name           => \"Make.Binder_Switches\");\n+\n+   package Linker_Switches is new Table.Table (\n+     Table_Component_Type => String_Access,\n+     Table_Index_Type     => Integer,\n+     Table_Low_Bound      => 1,\n+     Table_Initial        => 20,\n+     Table_Increment      => 100,\n+     Table_Name           => \"Make.Linker_Switches\");\n+\n    --  The following instantiations and variables are necessary to save what\n    --  is found on the command line, in case there is a project file specified.\n \n@@ -279,7 +309,7 @@ package body Make is\n    Main_Project : Prj.Project_Id := No_Project;\n    --  The project id of the main project file, if any\n \n-   Project_Object_Directory : Project_Id := No_Project;\n+   Project_Of_Current_Object_Directory : Project_Id := No_Project;\n    --  The object directory of the project for the last compilation. Avoid\n    --  calling Change_Dir if the current working directory is already this\n    --  directory\n@@ -399,30 +429,30 @@ package body Make is\n    type Header_Num is range 1 .. Max_Header;\n    --  Header_Num for the hash table Obsoleted below\n \n-   function Hash (F : Name_Id) return Header_Num;\n+   function Hash (F : File_Name_Type) return Header_Num;\n    --  Hash function for the hash table Obsoleted below\n \n    package Obsoleted is new System.HTable.Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n-      Key        => Name_Id,\n+      Key        => File_Name_Type,\n       Hash       => Hash,\n       Equal      => \"=\");\n    --  A hash table to keep all files that have been compiled, to detect\n    --  if an executable is up to date or not.\n \n-   procedure Enter_Into_Obsoleted (F : Name_Id);\n+   procedure Enter_Into_Obsoleted (F : File_Name_Type);\n    --  Enter a file name, without directory information, into the hash table\n    --  Obsoleted.\n \n-   function Is_In_Obsoleted (F : Name_Id) return Boolean;\n+   function Is_In_Obsoleted (F : File_Name_Type) return Boolean;\n    --  Check if a file name, without directory information, has already been\n    --  entered into the hash table Obsoleted.\n \n    type Dependency is record\n-      This       : Name_Id;\n-      Depends_On : Name_Id;\n+      This       : File_Name_Type;\n+      Depends_On : File_Name_Type;\n    end record;\n    --  Components of table Dependencies below\n \n@@ -434,10 +464,7 @@ package body Make is\n      Table_Increment      => 100,\n      Table_Name           => \"Make.Dependencies\");\n    --  A table to keep dependencies, to be able to decide if an executable\n-   --  is obsolete.\n-\n-   procedure Add_Dependency (S : Name_Id; On : Name_Id);\n-   --  Add one entry in table Dependencies\n+   --  is obsolete. More explanation needed ???\n \n    ----------------------------\n    -- Arguments and Switches --\n@@ -485,8 +512,10 @@ package body Make is\n    --  no additional ALI files should be scanned between the two calls (i.e.\n    --  between the call to Compile_Sources and List_Depend.)\n \n-   procedure Inform (N : Name_Id := No_Name; Msg : String);\n-   --  Prints out the program name followed by a colon, N and S\n+   procedure Inform (N : Name_Id; Msg : String);\n+   procedure Inform (N : File_Name_Type; Msg : String);\n+   procedure Inform (Msg : String);\n+   --  Prints out the program name followed by a colon, N (if present) and Msg\n \n    procedure List_Bad_Compilations;\n    --  Prints out the list of all files for which the compilation failed\n@@ -498,6 +527,13 @@ package body Make is\n       S2                : String  := \"\";\n       Prefix            : String  := \"  -> \";\n       Minimum_Verbosity : Verbosity_Level_Type := Opt.Low);\n+   procedure Verbose_Msg\n+     (N1                : File_Name_Type;\n+      S1                : String;\n+      N2                : File_Name_Type := No_File;\n+      S2                : String  := \"\";\n+      Prefix            : String  := \"  -> \";\n+      Minimum_Verbosity : Verbosity_Level_Type := Opt.Low);\n    --  If the verbose flag (Verbose_Mode) is set and the verbosity level is\n    --  at least equal to Minimum_Verbosity, then print Prefix to standard\n    --  output followed by N1 and S1. If N2 /= No_Name then N2 is printed after\n@@ -511,6 +547,8 @@ package body Make is\n    --  Set Usage_Needed to False.\n \n    procedure Debug_Msg (S : String; N : Name_Id);\n+   procedure Debug_Msg (S : String; N : File_Name_Type);\n+   procedure Debug_Msg (S : String; N : Unit_Name_Type);\n    --  If Debug.Debug_Flag_W is set outputs string S followed by name N\n \n    procedure Recursive_Compute_Depth\n@@ -554,7 +592,7 @@ package body Make is\n    --  Check what steps (Compile, Bind, Link) must be executed.\n    --  Set the step flags accordingly.\n \n-   function In_Ada_Lib_Dir  (File : File_Name_Type) return Boolean;\n+   function In_Ada_Lib_Dir (File : File_Name_Type) return Boolean;\n    --  Get directory prefix of this file and get lib mark stored in name\n    --  table for this directory. Then check if an Ada lib mark has been set.\n \n@@ -577,7 +615,7 @@ package body Make is\n    --  compiler.\n \n    function Switches_Of\n-     (Source_File      : Name_Id;\n+     (Source_File      : File_Name_Type;\n       Source_File_Name : String;\n       Source_Index     : Int;\n       Naming           : Naming_Data;\n@@ -612,11 +650,11 @@ package body Make is\n    --  Given by the command line. Will be used, if non null\n \n    Gcc_Path        : String_Access :=\n-                       GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n+                       System.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n    Gnatbind_Path   : String_Access :=\n-                       GNAT.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n+                       System.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n    Gnatlink_Path   : String_Access :=\n-                       GNAT.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n+                       System.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n    --  Path for compiler, binder, linker programs, defaulted now for gnatdist.\n    --  Changed later if overridden on command line.\n \n@@ -721,14 +759,17 @@ package body Make is\n    --  Displays Program followed by the arguments in Args if variable\n    --  Display_Executed_Programs is set. The lower bound of Args must be 1.\n \n+   procedure Report_Compilation_Failed;\n+   --  Delete all temporary files and fail graciously\n+\n    -----------------\n    --  Mapping files\n    -----------------\n \n-   type Temp_File_Names is\n-     array (Project_Id range <>, Positive range <>) of Name_Id;\n+   type Temp_Path_Names is\n+     array (Project_Id range <>, Positive range <>) of Path_Name_Type;\n \n-   type Temp_Files_Ptr is access Temp_File_Names;\n+   type Temp_Path_Ptr is access Temp_Path_Names;\n \n    type Indices is array (Project_Id range <>) of Natural;\n \n@@ -739,7 +780,7 @@ package body Make is\n \n    type Free_Indices_Ptr is access Free_File_Indices;\n \n-   The_Mapping_File_Names : Temp_Files_Ptr;\n+   The_Mapping_File_Names : Temp_Path_Ptr;\n    --  For each project, the name ids of the temporary mapping files used\n \n    Last_Mapping_File_Names : Indices_Ptr;\n@@ -771,6 +812,186 @@ package body Make is\n    procedure Delete_All_Temp_Files;\n    --  Delete all temp files (config files, mapping files, path files)\n \n+   -------------------------------------------------\n+   -- Subprogram declarations moved from the spec --\n+   -------------------------------------------------\n+\n+   procedure Bind (ALI_File : File_Name_Type; Args : Argument_List);\n+   --  Binds ALI_File. Args are the arguments to pass to the binder.\n+   --  Args must have a lower bound of 1.\n+\n+   procedure Display_Commands (Display : Boolean := True);\n+   --  The default behavior of Make commands (Compile_Sources, Bind, Link)\n+   --  is to display them on stderr. This behavior can be changed repeatedly\n+   --  by invoking this procedure.\n+\n+   --  If a compilation, bind or link failed one of the following 3 exceptions\n+   --  is raised. These need to be handled by the calling routines.\n+\n+   procedure Compile_Sources\n+     (Main_Source           : File_Name_Type;\n+      Args                  : Argument_List;\n+      First_Compiled_File   : out File_Name_Type;\n+      Most_Recent_Obj_File  : out File_Name_Type;\n+      Most_Recent_Obj_Stamp : out Time_Stamp_Type;\n+      Main_Unit             : out Boolean;\n+      Compilation_Failures  : out Natural;\n+      Main_Index            : Int      := 0;\n+      Check_Readonly_Files  : Boolean  := False;\n+      Do_Not_Execute        : Boolean  := False;\n+      Force_Compilations    : Boolean  := False;\n+      Keep_Going            : Boolean  := False;\n+      In_Place_Mode         : Boolean  := False;\n+      Initialize_ALI_Data   : Boolean  := True;\n+      Max_Process           : Positive := 1);\n+   --  Compile_Sources will recursively compile all the sources needed by\n+   --  Main_Source. Before calling this routine make sure Namet has been\n+   --  initialized. This routine can be called repeatedly with different\n+   --  Main_Source file as long as all the source (-I flags), library\n+   --  (-B flags) and ada library (-A flags) search paths between calls are\n+   --  *exactly* the same. The default directory must also be the same.\n+   --\n+   --    Args contains the arguments to use during the compilations.\n+   --    The lower bound of Args must be 1.\n+   --\n+   --    First_Compiled_File is set to the name of the first file that is\n+   --    compiled or that needs to be compiled. This is set to No_Name if no\n+   --    compilations were needed.\n+   --\n+   --    Most_Recent_Obj_File is set to the full name of the most recent\n+   --    object file found when no compilations are needed, that is when\n+   --    First_Compiled_File is set to No_Name. When First_Compiled_File\n+   --    is set then Most_Recent_Obj_File is set to No_Name.\n+   --\n+   --    Most_Recent_Obj_Stamp is the time stamp of Most_Recent_Obj_File.\n+   --\n+   --    Main_Unit is set to True if Main_Source can be a main unit.\n+   --    If Do_Not_Execute is False and First_Compiled_File /= No_Name\n+   --    the value of Main_Unit is always False.\n+   --    Is this used any more??? It is certainly not used by gnatmake???\n+   --\n+   --    Compilation_Failures is a count of compilation failures. This count\n+   --    is used to extract compilation failure reports with Extract_Failure.\n+   --\n+   --    Main_Index, when not zero, is the index of the main unit in source\n+   --    file Main_Source which is a multi-unit source.\n+   --    Zero indicates that Main_Source is a single unit source file.\n+   --\n+   --    Check_Readonly_Files set it to True to compile source files\n+   --    which library files are read-only. When compiling GNAT predefined\n+   --    files the \"-gnatg\" flag is used.\n+   --\n+   --    Do_Not_Execute set it to True to find out the first source that\n+   --    needs to be recompiled, but without recompiling it. This file is\n+   --    saved in First_Compiled_File.\n+   --\n+   --    Force_Compilations forces all compilations no matter what but\n+   --    recompiles read-only files only if Check_Readonly_Files\n+   --    is set.\n+   --\n+   --    Keep_Going when True keep compiling even in the presence of\n+   --    compilation errors.\n+   --\n+   --    In_Place_Mode when True save library/object files in their object\n+   --    directory if they already exist; otherwise, in the source directory.\n+   --\n+   --    Initialize_ALI_Data set it to True when you want to initialize ALI\n+   --    data-structures. This is what you should do most of the time.\n+   --    (especially the first time around when you call this routine).\n+   --    This parameter is set to False to preserve previously recorded\n+   --    ALI file data.\n+   --\n+   --    Max_Process is the maximum number of processes that should be spawned\n+   --    to carry out compilations.\n+   --\n+   --  Flags in Package Opt Affecting Compile_Sources\n+   --  -----------------------------------------------\n+   --\n+   --    Check_Object_Consistency set it to False to omit all consistency\n+   --      checks between an .ali file and its corresponding object file.\n+   --      When this flag is set to true, every time an .ali is read,\n+   --      package Osint checks that the corresponding object file\n+   --      exists and is more recent than the .ali.\n+   --\n+   --  Use of Name Table Info\n+   --  ----------------------\n+   --\n+   --  All file names manipulated by Compile_Sources are entered into the\n+   --  Names table. The Byte field of a source file is used to mark it.\n+   --\n+   --  Calling Compile_Sources Several Times\n+   --  -------------------------------------\n+   --\n+   --  Upon return from Compile_Sources all the ALI data structures are left\n+   --  intact for further browsing. HOWEVER upon entry to this routine ALI\n+   --  data structures are re-initialized if parameter Initialize_ALI_Data\n+   --  above is set to true. Typically this is what you want the first time\n+   --  you call Compile_Sources. You should not load an ali file, call this\n+   --  routine with flag Initialize_ALI_Data set to True and then expect\n+   --  that ALI information to be around after the call. Note that the first\n+   --  time you call Compile_Sources you better set Initialize_ALI_Data to\n+   --  True unless you have called Initialize_ALI yourself.\n+   --\n+   --  Compile_Sources ALGORITHM : Compile_Sources (Main_Source)\n+   --  -------------------------\n+   --\n+   --  1. Insert Main_Source in a Queue (Q) and mark it.\n+   --\n+   --  2. Let unit.adb be the file at the head of the Q. If unit.adb is\n+   --     missing but its corresponding ali file is in an Ada library directory\n+   --     (see below) then, remove unit.adb from the Q and goto step 4.\n+   --     Otherwise, look at the files under the D (dependency) section of\n+   --     unit.ali. If unit.ali does not exist or some of the time stamps do\n+   --     not match, (re)compile unit.adb.\n+   --\n+   --     An Ada library directory is a directory containing Ada specs, ali\n+   --     and object files but no source files for the bodies. An Ada library\n+   --     directory is communicated to gnatmake by means of some switch so that\n+   --     gnatmake can skip the sources whole ali are in that directory.\n+   --     There are two reasons for skipping the sources in this case. Firstly,\n+   --     Ada libraries typically come without full sources but binding and\n+   --     linking against those libraries is still possible. Secondly, it would\n+   --     be very wasteful for gnatmake to systematically check the consistency\n+   --     of every external Ada library used in a program. The binder is\n+   --     already in charge of catching any potential inconsistencies.\n+   --\n+   --  3. Look into the W section of unit.ali and insert into the Q all\n+   --     unmarked source files. Mark all files newly inserted in the Q.\n+   --     Specifically, assuming that the W section looks like\n+   --\n+   --     W types%s               types.adb               types.ali\n+   --     W unchecked_deallocation%s\n+   --     W xref_tab%s            xref_tab.adb            xref_tab.ali\n+   --\n+   --     Then xref_tab.adb and types.adb are inserted in the Q if they are not\n+   --     already marked.\n+   --     Note that there is no file listed under W unchecked_deallocation%s\n+   --     so no generic body should ever be explicitly compiled (unless the\n+   --     Main_Source at the start was a generic body).\n+   --\n+   --  4. Repeat steps 2 and 3 above until the Q is empty\n+   --\n+   --  Note that the above algorithm works because the units withed in\n+   --  subunits are transitively included in the W section (with section) of\n+   --  the main unit. Likewise the withed units in a generic body needed\n+   --  during a compilation are also transitively included in the W section\n+   --  of the originally compiled file.\n+\n+   procedure Initialize;\n+   --  Performs default and package initialization. Therefore,\n+   --  Compile_Sources can be called by an external unit.\n+\n+   procedure Link\n+     (ALI_File : File_Name_Type;\n+      Args     : Argument_List;\n+      Success  : out Boolean);\n+   --  Links ALI_File. Args are the arguments to pass to the linker.\n+   --  Args must have a lower bound of 1. Success indicates if the link\n+   --  succeeded or not.\n+\n+   procedure Scan_Make_Arg (Argv : String; And_Save : Boolean);\n+   --  Scan make arguments. Argv is a single argument to be processed\n+\n    -------------------\n    -- Add_Arguments --\n    -------------------\n@@ -797,16 +1018,6 @@ package body Make is\n       Last_Argument := Last_Argument + Args'Length;\n    end Add_Arguments;\n \n-   --------------------\n-   -- Add_Dependency --\n-   --------------------\n-\n-   procedure Add_Dependency (S : Name_Id; On : Name_Id) is\n-   begin\n-      Dependencies.Increment_Last;\n-      Dependencies.Table (Dependencies.Last) := (S, On);\n-   end Add_Dependency;\n-\n    ----------------------------\n    -- Add_Library_Search_Dir --\n    ----------------------------\n@@ -817,15 +1028,13 @@ package body Make is\n    is\n    begin\n       if On_Command_Line then\n-         Add_Lib_Search_Dir\n-           (Normalize_Pathname (Path));\n+         Add_Lib_Search_Dir (Normalize_Pathname (Path));\n \n       else\n          Get_Name_String\n-           (Project_Tree.Projects.Table (Main_Project).Directory);\n+           (Project_Tree.Projects.Table (Main_Project).Display_Directory);\n          Add_Lib_Search_Dir\n-           (Normalize_Pathname\n-              (Path, Name_Buffer (1 .. Name_Len)));\n+           (Normalize_Pathname (Path, Name_Buffer (1 .. Name_Len)));\n       end if;\n    end Add_Library_Search_Dir;\n \n@@ -871,15 +1080,13 @@ package body Make is\n    is\n    begin\n       if On_Command_Line then\n-         Add_Src_Search_Dir\n-           (Normalize_Pathname (Path));\n+         Add_Src_Search_Dir (Normalize_Pathname (Path));\n \n       else\n          Get_Name_String\n-           (Project_Tree.Projects.Table (Main_Project).Directory);\n+           (Project_Tree.Projects.Table (Main_Project).Display_Directory);\n          Add_Src_Search_Dir\n-           (Normalize_Pathname\n-              (Path, Name_Buffer (1 .. Name_Len)));\n+           (Normalize_Pathname (Path, Name_Buffer (1 .. Name_Len)));\n       end if;\n    end Add_Source_Search_Dir;\n \n@@ -1027,8 +1234,7 @@ package body Make is\n                Switch_List := Switches.Values;\n \n                while Switch_List /= Nil_String loop\n-                  Element :=\n-                    Project_Tree.String_Elements.Table (Switch_List);\n+                  Element := Project_Tree.String_Elements.Table (Switch_List);\n                   Get_Name_String (Element.Value);\n \n                   if Name_Len > 0 then\n@@ -1109,19 +1315,19 @@ package body Make is\n       Bind_Last := Bind_Last + 1;\n       Bind_Args (Bind_Last) := new String'(Name_Buffer (1 .. Name_Len));\n \n-      GNAT.OS_Lib.Normalize_Arguments (Bind_Args (Args'First .. Bind_Last));\n+      System.OS_Lib.Normalize_Arguments (Bind_Args (Args'First .. Bind_Last));\n \n       Display (Gnatbind.all, Bind_Args (Args'First .. Bind_Last));\n \n       if Gnatbind_Path = null then\n          Make_Failed (\"error, unable to locate \", Gnatbind.all);\n       end if;\n \n-      GNAT.OS_Lib.Spawn\n+      System.OS_Lib.Spawn\n         (Gnatbind_Path.all, Bind_Args (Args'First .. Bind_Last), Success);\n \n       if not Success then\n-         raise Bind_Failed;\n+         Make_Failed (\"*** bind failed.\");\n       end if;\n    end Bind;\n \n@@ -1130,7 +1336,8 @@ package body Make is\n    --------------------------------\n \n    procedure Change_To_Object_Directory (Project : Project_Id) is\n-      Actual_Project : Project_Id;\n+      Actual_Project   : Project_Id;\n+      Object_Directory : Path_Name_Type;\n \n    begin\n       --  For sources outside of any project, compilation occurs in the object\n@@ -1145,17 +1352,24 @@ package body Make is\n       --  Nothing to do if the current working directory is already the correct\n       --  object directory.\n \n-      if Project_Object_Directory /= Actual_Project then\n-         Project_Object_Directory := Actual_Project;\n+      if Project_Of_Current_Object_Directory /= Actual_Project then\n+         Project_Of_Current_Object_Directory := Actual_Project;\n+         Object_Directory :=\n+           Project_Tree.Projects.Table (Actual_Project).Object_Directory;\n \n          --  Set the working directory to the object directory of the actual\n          --  project.\n \n-         Change_Dir\n-           (Get_Name_String\n-              (Project_Tree.Projects.Table\n-                 (Actual_Project).Object_Directory));\n+         if Verbose_Mode then\n+            Write_Str  (\"Changing to object directory of \"\"\");\n+            Write_Name\n+              (Project_Tree.Projects.Table (Actual_Project).Display_Name);\n+            Write_Str  (\"\"\": \"\"\");\n+            Write_Name (Object_Directory);\n+            Write_Line (\"\"\"\");\n+         end if;\n \n+         Change_Dir (Get_Name_String (Object_Directory));\n       end if;\n \n    exception\n@@ -1209,7 +1423,7 @@ package body Make is\n          function New_Spec (Uname : Unit_Name_Type) return Boolean;\n          --  Uname is the name of the spec or body of some ada unit. This\n          --  function returns True if the Uname is the name of a body which has\n-         --  a spec not mentioned inali file A. If True is returned\n+         --  a spec not mentioned in ALI file A. If True is returned\n          --  Spec_File_Name above is set to the name of this spec file.\n \n          --------------\n@@ -1310,7 +1524,7 @@ package body Make is\n       --  appear in the Sdep section of Lib_File, New_Spec contains the file\n       --  name of this new spec.\n \n-      Source_Name : Name_Id;\n+      Source_Name : File_Name_Type;\n       Text        : Text_Buffer_Ptr;\n \n       Prev_Switch : String_Access;\n@@ -1733,7 +1947,7 @@ package body Make is\n       --  Process linker options from the ALI files\n \n       for Opt in 1 .. Linker_Options.Last loop\n-         Check_File (Linker_Options.Table (Opt).Name);\n+         Check_File (File_Name_Type (Linker_Options.Table (Opt).Name));\n       end loop;\n \n       --  Process options given on the command line\n@@ -1831,8 +2045,7 @@ package body Make is\n \n                while Data.Extended_By /= No_Project loop\n                   Arguments_Project := Data.Extended_By;\n-                  Data :=\n-                    Project_Tree.Projects.Table (Arguments_Project);\n+                  Data := Project_Tree.Projects.Table (Arguments_Project);\n                end loop;\n \n                --  If building a dynamic or relocatable library, compile with\n@@ -1856,8 +2069,8 @@ package body Make is\n                     Data;\n                end if;\n \n-               --  We now look for package Compiler\n-               --  and get the switches from this package.\n+               --  We now look for package Compiler and get the switches from\n+               --  this package.\n \n                Compiler_Package :=\n                  Prj.Util.Value_Of\n@@ -1867,17 +2080,18 @@ package body Make is\n \n                if Compiler_Package /= No_Package then\n \n-                  --  If package Gnatmake.Compiler exists, we get\n-                  --  the specific switches for the current source,\n-                  --  or the global switches, if any.\n+                  --  If package Gnatmake.Compiler exists, we get the specific\n+                  --  switches for the current source, or the global switches,\n+                  --  if any.\n \n-                  Switches := Switches_Of\n-                    (Source_File      => Source_File,\n-                     Source_File_Name => Source_File_Name,\n-                     Source_Index     => Source_Index,\n-                     Naming           => Data.Naming,\n-                     In_Package       => Compiler_Package,\n-                     Allow_ALI        => False);\n+                  Switches :=\n+                    Switches_Of\n+                      (Source_File      => Source_File,\n+                       Source_File_Name => Source_File_Name,\n+                       Source_Index     => Source_Index,\n+                       Naming           => Data.Naming,\n+                       In_Package       => Compiler_Package,\n+                       Allow_ALI        => False);\n \n                end if;\n \n@@ -1978,8 +2192,8 @@ package body Make is\n    procedure Compile_Sources\n      (Main_Source           : File_Name_Type;\n       Args                  : Argument_List;\n-      First_Compiled_File   : out Name_Id;\n-      Most_Recent_Obj_File  : out Name_Id;\n+      First_Compiled_File   : out File_Name_Type;\n+      Most_Recent_Obj_File  : out File_Name_Type;\n       Most_Recent_Obj_Stamp : out Time_Stamp_Type;\n       Main_Unit             : out Boolean;\n       Compilation_Failures  : out Natural;\n@@ -2035,6 +2249,9 @@ package body Make is\n       Sfile : File_Name_Type;\n       --  Contains the source file of the units withed by Source_File\n \n+      Uname : Unit_Name_Type;\n+      --  Contains the unit name of the units withed by Source_File\n+\n       ALI : ALI_Id;\n       --  ALI Id of the current ALI file\n \n@@ -2097,14 +2314,14 @@ package body Make is\n       --  Collect arguments from project file (if any) and compile\n \n       function Compile\n-        (S            : Name_Id;\n-         L            : Name_Id;\n+        (S            : File_Name_Type;\n+         L            : File_Name_Type;\n          Source_Index : Int;\n          Args         : Argument_List) return Process_Id;\n-      --  Compiles S using Args. If S is a GNAT predefined source\n-      --  \"-gnatpg\" is added to Args. Non blocking call. L corresponds to the\n-      --  expected library file name. Process_Id of the process spawned to\n-      --  execute the compile.\n+      --  Compiles S using Args. If S is a GNAT predefined source \"-gnatpg\" is\n+      --  added to Args. Non blocking call. L corresponds to the expected\n+      --  library file name. Process_Id of the process spawned to execute the\n+      --  compilation.\n \n       package Good_ALI is new Table.Table (\n         Table_Component_Type => ALI_Id,\n@@ -2172,18 +2389,18 @@ package body Make is\n       procedure Await_Compile\n         (Sfile  : out File_Name_Type;\n          Afile  : out File_Name_Type;\n-         Uname  : out File_Name_Type;\n+         Uname  : out Unit_Name_Type;\n          OK     : out Boolean)\n       is\n-         Pid : Process_Id;\n+         Pid     : Process_Id;\n          Project : Project_Id;\n \n       begin\n          pragma Assert (Outstanding_Compiles > 0);\n \n          Sfile := No_File;\n          Afile := No_File;\n-         Uname := No_Name;\n+         Uname := No_Unit_Name;\n          OK    := False;\n \n          --  The loop here is a work-around for a problem on VMS; in some\n@@ -2262,7 +2479,7 @@ package body Make is\n \n          if not Targparm.Suppress_Standard_Library_On_Target then\n             declare\n-               Sfile  : Name_Id;\n+               Sfile  : File_Name_Type;\n                Add_It : Boolean := True;\n \n             begin\n@@ -2350,8 +2567,7 @@ package body Make is\n             if not Project_Tree.Projects.Table\n                      (Arguments_Project).Externally_Built\n             then\n-               Prj.Env.Set_Ada_Paths\n-                 (Arguments_Project, Project_Tree, True);\n+               Prj.Env.Set_Ada_Paths (Arguments_Project, Project_Tree, True);\n \n                if not Unique_Compile\n                  and then MLib.Tgt.Support_For_Libraries /= MLib.Tgt.None\n@@ -2395,6 +2611,11 @@ package body Make is\n \n                Pid := Compile (Arguments_Path_Name, Lib_File, Source_Index,\n                                Arguments (1 .. Last_Argument));\n+\n+               --  Register compiled unit into Full_Source_File as this is the\n+               --  variable used to report errors.\n+\n+               Full_Source_File := Arguments_Path_Name;\n                Process_Created := True;\n             end if;\n \n@@ -2417,8 +2638,8 @@ package body Make is\n       -------------\n \n       function Compile\n-        (S            : Name_Id;\n-         L            : Name_Id;\n+        (S            : File_Name_Type;\n+         L            : File_Name_Type;\n          Source_Index : Int;\n          Args         : Argument_List) return Process_Id\n       is\n@@ -2427,15 +2648,15 @@ package body Make is\n          Comp_Last : Integer;\n          Arg_Index : Integer;\n \n-         function Ada_File_Name (Name : Name_Id) return Boolean;\n+         function Ada_File_Name (Name : File_Name_Type) return Boolean;\n          --  Returns True if Name is the name of an ada source file\n          --  (i.e. suffix is .ads or .adb)\n \n          -------------------\n          -- Ada_File_Name --\n          -------------------\n \n-         function Ada_File_Name (Name : Name_Id) return Boolean is\n+         function Ada_File_Name (Name : File_Name_Type) return Boolean is\n          begin\n             Get_Name_String (Name);\n             return\n@@ -2552,9 +2773,9 @@ package body Make is\n             end;\n          end if;\n \n-         if Source_Index /= 0 or else\n-           L /= Strip_Directory (L) or else\n-           Object_Directory_Path /= null\n+         if Source_Index /= 0\n+           or else L /= Strip_Directory (L)\n+           or else Object_Directory_Path /= null\n          then\n             --  Build -o argument\n \n@@ -2596,7 +2817,8 @@ package body Make is\n          Comp_Last := Comp_Last + 1;\n          Comp_Args (Comp_Last) := new String'(Name_Buffer (1 .. Name_Len));\n \n-         GNAT.OS_Lib.Normalize_Arguments (Comp_Args (Args'First .. Comp_Last));\n+         System.OS_Lib.Normalize_Arguments\n+           (Comp_Args (Args'First .. Comp_Last));\n \n          Comp_Last := Comp_Last + 1;\n          Comp_Args (Comp_Last) := new String'(\"-gnatez\");\n@@ -2608,7 +2830,7 @@ package body Make is\n          end if;\n \n          return\n-           GNAT.OS_Lib.Non_Blocking_Spawn\n+           System.OS_Lib.Non_Blocking_Spawn\n              (Gcc_Path.all, Comp_Args (Args'First .. Comp_Last));\n       end Compile;\n \n@@ -2697,7 +2919,6 @@ package body Make is\n       --  Package and Queue initializations\n \n       Good_ALI.Init;\n-      Output.Set_Standard_Error;\n \n       if First_Q_Initialization then\n          Init_Q;\n@@ -2877,9 +3098,9 @@ package body Make is\n                         --  Check that switch -x has been used if a source\n                         --  outside of project files need to be compiled.\n \n-                        if Main_Project /= No_Project and then\n-                          Arguments_Project = No_Project and then\n-                          not External_Unit_Compilation_Allowed\n+                        if Main_Project /= No_Project\n+                          and then Arguments_Project = No_Project\n+                          and then not External_Unit_Compilation_Allowed\n                         then\n                            Make_Failed (\"external source (\",\n                                         Get_Name_String (Source_File),\n@@ -2929,6 +3150,7 @@ package body Make is\n                         if Process_Created then\n                            if Pid = Invalid_Pid then\n                               Record_Failure (Full_Source_File, Source_Unit);\n+\n                            else\n                               Add_Process\n                                 (Pid,\n@@ -3078,7 +3300,49 @@ package body Make is\n                        Units.Table (J).First_With .. Units.Table (J).Last_With\n                      loop\n                         Sfile := Withs.Table (K).Sfile;\n-                        Add_Dependency (ALIs.Table (ALI).Sfile, Sfile);\n+                        Uname := Withs.Table (K).Uname;\n+\n+                        --  If project files are used, find the proper source\n+                        --  to compile, in case Sfile is the spec, but there\n+                        --  is a body.\n+\n+                        if Main_Project /= No_Project then\n+                           declare\n+                              Unit_Name : Name_Id;\n+                              Uid       : Prj.Unit_Id;\n+                              Udata     : Unit_Data;\n+\n+                           begin\n+                              Get_Name_String (Uname);\n+                              Name_Len := Name_Len - 2;\n+                              Unit_Name := Name_Find;\n+                              Uid :=\n+                                Units_Htable.Get\n+                                  (Project_Tree.Units_HT, Unit_Name);\n+\n+                              if Uid /= Prj.No_Unit then\n+                                 Udata := Project_Tree.Units.Table (Uid);\n+\n+                                 if Udata.File_Names (Body_Part).Name /=\n+                                                                     No_File\n+                                 then\n+                                    Sfile := Udata.File_Names (Body_Part).Name;\n+                                    Source_Index :=\n+                                      Udata.File_Names (Body_Part).Index;\n+\n+                                 elsif Udata.File_Names (Specification).Name /=\n+                                                                     No_File\n+                                 then\n+                                    Sfile :=\n+                                      Udata.File_Names (Specification).Name;\n+                                    Source_Index :=\n+                                      Udata.File_Names (Specification).Index;\n+                                 end if;\n+                              end if;\n+                           end;\n+                        end if;\n+\n+                        Dependencies.Append ((ALIs.Table (ALI).Sfile, Sfile));\n \n                         if Is_In_Obsoleted (Sfile) then\n                            Executable_Obsolete := True;\n@@ -3101,8 +3365,7 @@ package body Make is\n                               Debug_Msg (\"Skipping internal file:\", Sfile);\n \n                            else\n-                              Insert_Q\n-                                (Sfile, Withs.Table (K).Uname, Source_Index);\n+                              Insert_Q (Sfile, Uname, Source_Index);\n                               Mark (Sfile, Source_Index);\n                            end if;\n                         end if;\n@@ -3244,7 +3507,7 @@ package body Make is\n       Last   : Natural := 0;\n \n       function Absolute_Path\n-        (Path    : Name_Id;\n+        (Path    : File_Name_Type;\n          Project : Project_Id) return String;\n       --  Returns an absolute path for a configuration pragmas file\n \n@@ -3253,7 +3516,7 @@ package body Make is\n       -------------------\n \n       function Absolute_Path\n-        (Path    : Name_Id;\n+        (Path    : File_Name_Type;\n          Project : Project_Id) return String\n       is\n       begin\n@@ -3271,7 +3534,7 @@ package body Make is\n                   Parent_Directory : constant String :=\n                     Get_Name_String\n                       (Project_Tree.Projects.Table\n-                           (Project).Directory);\n+                           (Project).Display_Directory);\n \n                begin\n                   if Parent_Directory (Parent_Directory'Last) =\n@@ -3294,7 +3557,7 @@ package body Make is\n         (For_Project, Main_Project, Project_Tree);\n \n       if Project_Tree.Projects.Table\n-           (For_Project).Config_File_Name /= No_Name\n+           (For_Project).Config_File_Name /= No_Path\n       then\n          Temporary_Config_File :=\n            Project_Tree.Projects.Table (For_Project).Config_File_Temp;\n@@ -3334,7 +3597,9 @@ package body Make is\n             declare\n                Path : constant String :=\n                         Absolute_Path\n-                          (Global_Attribute.Value, Global_Attribute.Project);\n+                          (File_Name_Type (Global_Attribute.Value),\n+                           Global_Attribute.Project);\n+\n             begin\n                if not Is_Regular_File (Path) then\n                   Make_Failed\n@@ -3371,7 +3636,9 @@ package body Make is\n             declare\n                Path : constant String :=\n                         Absolute_Path\n-                          (Local_Attribute.Value, Local_Attribute.Project);\n+                          (File_Name_Type (Local_Attribute.Value),\n+                           Local_Attribute.Project);\n+\n             begin\n                if not Is_Regular_File (Path) then\n                   Make_Failed\n@@ -3402,6 +3669,16 @@ package body Make is\n       end if;\n    end Debug_Msg;\n \n+   procedure Debug_Msg (S : String; N : File_Name_Type) is\n+   begin\n+      Debug_Msg (S, Name_Id (N));\n+   end Debug_Msg;\n+\n+   procedure Debug_Msg (S : String; N : Unit_Name_Type) is\n+   begin\n+      Debug_Msg (S, Name_Id (N));\n+   end Debug_Msg;\n+\n    ---------------------------\n    -- Delete_All_Temp_Files --\n    ---------------------------\n@@ -3472,7 +3749,7 @@ package body Make is\n                Project_Tree.Projects.Table (Project).\n                  Config_Checked := False;\n                Project_Tree.Projects.Table (Project).\n-                 Config_File_Name := No_Name;\n+                 Config_File_Name := No_Path;\n                Project_Tree.Projects.Table (Project).\n                  Config_File_Temp := False;\n             end if;\n@@ -3489,10 +3766,6 @@ package body Make is\n       pragma Assert (Args'First = 1);\n \n       if Display_Executed_Programs then\n-         if Commands_To_Stdout then\n-            Set_Standard_Output;\n-         end if;\n-\n          Write_Str (Program);\n \n          for J in Args'Range loop\n@@ -3540,7 +3813,6 @@ package body Make is\n          end loop;\n \n          Write_Eol;\n-         Set_Standard_Error;\n       end if;\n    end Display;\n \n@@ -3580,12 +3852,13 @@ package body Make is\n    -- Enter_Into_Obsoleted --\n    --------------------------\n \n-   procedure Enter_Into_Obsoleted (F : Name_Id) is\n+   procedure Enter_Into_Obsoleted (F : File_Name_Type) is\n       Name  : constant String := Get_Name_String (F);\n-      First : Natural := Name'Last;\n-      F2    : Name_Id := F;\n+      First : Natural;\n+      F2    : File_Name_Type;\n \n    begin\n+      First := Name'Last;\n       while First > Name'First\n         and then Name (First - 1) /= Directory_Separator\n         and then Name (First - 1) /= '/'\n@@ -3597,28 +3870,14 @@ package body Make is\n          Name_Len := 0;\n          Add_Str_To_Name_Buffer (Name (First .. Name'Last));\n          F2 := Name_Find;\n+      else\n+         F2 := F;\n       end if;\n \n       Debug_Msg (\"New entry in Obsoleted table:\", F2);\n       Obsoleted.Set (F2, True);\n    end Enter_Into_Obsoleted;\n \n-   ---------------------\n-   -- Extract_Failure --\n-   ---------------------\n-\n-   procedure Extract_Failure\n-     (File  : out File_Name_Type;\n-      Unit  : out Unit_Name_Type;\n-      Found : out Boolean)\n-   is\n-   begin\n-      File  := Bad_Compilation.Table (Bad_Compilation.Last).File;\n-      Unit  := Bad_Compilation.Table (Bad_Compilation.Last).Unit;\n-      Found := Bad_Compilation.Table (Bad_Compilation.Last).Found;\n-      Bad_Compilation.Decrement_Last;\n-   end Extract_Failure;\n-\n    --------------------\n    -- Extract_From_Q --\n    --------------------\n@@ -3690,7 +3949,7 @@ package body Make is\n       --  Set to True when there are Stand-Alone Libraries, so that gnatbind\n       --  is invoked with the -F switch to force checking of elaboration flags.\n \n-      Mapping_Path : Name_Id := No_Name;\n+      Mapping_Path : Path_Name_Type := No_Path;\n       --  The path name of the mapping file\n \n       Discard : Boolean;\n@@ -3808,6 +4067,7 @@ package body Make is\n \n                         if Normed_Path /= Proj_Path then\n                            if Verbose_Mode then\n+                              Set_Standard_Error;\n                               Write_Str (Normed_Path);\n                               Write_Str (\" /= \");\n                               Write_Line (Proj_Path);\n@@ -3863,19 +4123,19 @@ package body Make is\n          Mapping_FD : File_Descriptor := Invalid_FD;\n          --  A File Descriptor for an eventual mapping file\n \n-         ALI_Unit     : Name_Id := No_Name;\n+         ALI_Unit : Unit_Name_Type := No_Unit_Name;\n          --  The unit name of an ALI file\n \n-         ALI_Name     : Name_Id := No_Name;\n+         ALI_Name : File_Name_Type := No_File;\n          --  The file name of the ALI file\n \n-         ALI_Project  : Project_Id := No_Project;\n+         ALI_Project : Project_Id := No_Project;\n          --  The project of the ALI file\n \n-         Bytes        : Integer;\n-         OK           : Boolean := True;\n+         Bytes : Integer;\n+         OK    : Boolean := True;\n \n-         Status       : Boolean;\n+         Status : Boolean;\n          --  For call to Close\n \n       begin\n@@ -3889,49 +4149,46 @@ package body Make is\n                      Unit_Table.Last (Project_Tree.Units)\n             loop\n                declare\n-                  Unit : constant Unit_Data :=\n-                           Project_Tree.Units.Table (J);\n+                  Unit : constant Unit_Data := Project_Tree.Units.Table (J);\n+\n                begin\n                   if Unit.Name /= No_Name then\n \n                      --  If there is a body, put it in the mapping\n \n-                     if Unit.File_Names (Body_Part).Name /= No_Name\n+                     if Unit.File_Names (Body_Part).Name /= No_File\n                        and then Unit.File_Names (Body_Part).Project\n                        /= No_Project\n                      then\n                         Get_Name_String (Unit.Name);\n-                        Name_Buffer\n-                          (Name_Len + 1 .. Name_Len + 2) := \"%b\";\n+                        Name_Buffer (Name_Len + 1 .. Name_Len + 2) := \"%b\";\n                         Name_Len := Name_Len + 2;\n                         ALI_Unit := Name_Find;\n                         ALI_Name :=\n                           Lib_File_Name\n-                            (Unit.File_Names (Body_Part).Name);\n+                            (Unit.File_Names (Body_Part).Display_Name);\n                         ALI_Project :=\n                           Unit.File_Names (Body_Part).Project;\n \n                         --  Otherwise, if there is a spec, put it\n                         --  in the mapping.\n \n-                     elsif Unit.File_Names (Specification).Name\n-                       /= No_Name\n-                       and then Unit.File_Names\n-                         (Specification).Project\n-                         /= No_Project\n+                     elsif Unit.File_Names (Specification).Name /= No_File\n+                       and then Unit.File_Names (Specification).Project /=\n+                                                          No_Project\n                      then\n                         Get_Name_String (Unit.Name);\n-                        Name_Buffer\n-                          (Name_Len + 1 .. Name_Len + 2) := \"%s\";\n+                        Name_Buffer (Name_Len + 1 .. Name_Len + 2) := \"%s\";\n                         Name_Len := Name_Len + 2;\n                         ALI_Unit := Name_Find;\n-                        ALI_Name := Lib_File_Name\n-                          (Unit.File_Names (Specification).Name);\n+                        ALI_Name :=\n+                          Lib_File_Name\n+                           (Unit.File_Names (Specification).Display_Name);\n                         ALI_Project :=\n                           Unit.File_Names (Specification).Project;\n \n                      else\n-                        ALI_Name := No_Name;\n+                        ALI_Name := No_File;\n                      end if;\n \n                      --  If we have something to put in the mapping\n@@ -3942,7 +4199,7 @@ package body Make is\n                      --  ended project obj dir as well as in the\n                      --  extending project obj dir.\n \n-                     if ALI_Name /= No_Name\n+                     if ALI_Name /= No_File\n                        and then\n                          Project_Tree.Projects.Table\n                            (ALI_Project).Extended_By = No_Project\n@@ -4021,7 +4278,7 @@ package body Make is\n \n                                  exit when not OK;\n \n-                                 --  Third line it the ALI path name.\n+                                 --  Third line it the ALI path name\n \n                                  Bytes :=\n                                    Write\n@@ -4081,17 +4338,6 @@ package body Make is\n       Failed_Links.Set_Last (0);\n       Successful_Links.Set_Last (0);\n \n-      if Hostparm.Java_VM then\n-         Gcc := new String'(\"jgnat\");\n-         Gnatbind := new String'(\"jgnatbind\");\n-         Gnatlink := new String'(\"jgnatlink\");\n-\n-         --  Do not check for an object file (\".o\") when compiling to\n-         --  Java bytecode since \".class\" files are generated instead.\n-\n-         Check_Object_Consistency := False;\n-      end if;\n-\n       --  Special case when switch -B was specified\n \n       if Build_Bind_And_Link_Full_Project then\n@@ -4178,7 +4424,7 @@ package body Make is\n \n             declare\n                Value : String_List_Id :=\n-                 Project_Tree.Projects.Table (Main_Project).Mains;\n+                         Project_Tree.Projects.Table (Main_Project).Mains;\n \n             begin\n                --  The attribute Main is an empty list or not specified,\n@@ -4389,7 +4635,7 @@ package body Make is\n          Do_Not_Execute := True;\n       end if;\n \n-      --  Note that Osint.Next_Main_Source will always return the (possibly\n+      --  Note that Osint.M.Next_Main_Source will always return the (possibly\n       --  abbreviated file) without any directory information.\n \n       Main_Source_File := Next_Main_Source;\n@@ -4439,11 +4685,11 @@ package body Make is\n       if Main_Project /= No_Project then\n \n          if Project_Tree.Projects.Table\n-              (Main_Project).Object_Directory /= No_Name\n+              (Main_Project).Object_Directory /= No_Path\n          then\n             --  Change current directory to object directory of main project\n \n-            Project_Object_Directory := No_Project;\n+            Project_Of_Current_Object_Directory := No_Project;\n             Change_To_Object_Directory (Main_Project);\n          end if;\n \n@@ -4466,25 +4712,26 @@ package body Make is\n                                            not Unique_Compile);\n \n             The_Packages : constant Package_Id :=\n-              Project_Tree.Projects.Table (Main_Project).Decl.Packages;\n+                                      Project_Tree.Projects.Table\n+                                        (Main_Project).Decl.Packages;\n \n             Builder_Package : constant Prj.Package_Id :=\n-                         Prj.Util.Value_Of\n-                           (Name        => Name_Builder,\n-                            In_Packages => The_Packages,\n-                            In_Tree     => Project_Tree);\n+                                      Prj.Util.Value_Of\n+                                        (Name        => Name_Builder,\n+                                         In_Packages => The_Packages,\n+                                         In_Tree     => Project_Tree);\n \n             Binder_Package : constant Prj.Package_Id :=\n-                         Prj.Util.Value_Of\n-                           (Name        => Name_Binder,\n-                            In_Packages => The_Packages,\n-                            In_Tree     => Project_Tree);\n+                                      Prj.Util.Value_Of\n+                                        (Name        => Name_Binder,\n+                                         In_Packages => The_Packages,\n+                                         In_Tree     => Project_Tree);\n \n             Linker_Package : constant Prj.Package_Id :=\n-                         Prj.Util.Value_Of\n-                           (Name        => Name_Linker,\n-                            In_Packages => The_Packages,\n-                            In_Tree     => Project_Tree);\n+                                      Prj.Util.Value_Of\n+                                        (Name        => Name_Linker,\n+                                         In_Packages => The_Packages,\n+                                         In_Tree     => Project_Tree);\n \n          begin\n             --  We fail if we cannot find the main source file\n@@ -4655,12 +4902,36 @@ package body Make is\n \n       begin\n          Targparm.Get_Target_Parameters;\n-\n       exception\n          when Unrecoverable_Error =>\n             Make_Failed (\"*** make failed.\");\n       end;\n \n+      --  Special processing for VM targets\n+\n+      if Targparm.VM_Target /= No_VM then\n+\n+         --  Do not check for an object file (\".o\") when compiling to VM\n+         --  machine since \".class\" files are generated instead.\n+\n+         Check_Object_Consistency := False;\n+\n+         --  Set proper processing commands\n+\n+         case Targparm.VM_Target is\n+            when Targparm.JVM_Target =>\n+               Gcc := new String'(\"jgnat\");\n+               Gnatbind := new String'(\"jgnatbind\");\n+               Gnatlink := new String'(\"jgnatlink\");\n+\n+            when Targparm.CLI_Target =>\n+               Gcc := new String'(\"dotnet-gnatcompile\");\n+\n+            when Targparm.No_VM =>\n+               raise Program_Error;\n+         end case;\n+      end if;\n+\n       Display_Commands (not Quiet_Output);\n \n       Check_Steps;\n@@ -4684,14 +4955,13 @@ package body Make is\n                     and then (not Project_Tree.Projects.Table\n                                 (Proj).Externally_Built);\n \n-                  if Project_Tree.Projects.Table\n-                       (Proj).Need_To_Build_Lib\n-                  then\n+                  if Project_Tree.Projects.Table (Proj).Need_To_Build_Lib then\n+\n                      --  If there is no object directory, then it will be\n                      --  impossible to build the library. So fail immediately.\n \n-                     if Project_Tree.Projects.Table\n-                       (Proj).Object_Directory = No_Name\n+                     if Project_Tree.Projects.Table (Proj).Object_Directory =\n+                                                                 No_Path\n                      then\n                         Make_Failed\n                           (\"no object files to build library for project \"\"\",\n@@ -4729,7 +4999,7 @@ package body Make is\n             if Saved_Linker_Switches.Table (J).all = Output_Flag.all then\n                declare\n                   Exec_File_Name : constant String :=\n-                    Saved_Linker_Switches.Table (J + 1).all;\n+                                     Saved_Linker_Switches.Table (J + 1).all;\n \n                begin\n                   if not Is_Absolute_Path (Exec_File_Name) then\n@@ -4762,9 +5032,9 @@ package body Make is\n \n          declare\n             Dir_Path : constant String_Access :=\n-              new String'(Get_Name_String\n-                            (Project_Tree.Projects.Table\n-                               (Main_Project).Directory));\n+                         new String'(Get_Name_String\n+                           (Project_Tree.Projects.Table\n+                              (Main_Project).Directory));\n          begin\n             for J in 1 .. Binder_Switches.Last loop\n                Test_If_Relative_Path\n@@ -4865,9 +5135,9 @@ package body Make is\n          Gnatlink := Saved_Gnatlink;\n       end if;\n \n-      Gcc_Path       := GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n-      Gnatbind_Path  := GNAT.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n-      Gnatlink_Path  := GNAT.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n+      Gcc_Path       := System.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n+      Gnatbind_Path  := System.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n+      Gnatlink_Path  := System.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n \n       --  If we have specified -j switch both from the project file\n       --  and on the command line, the one from the command line takes\n@@ -4881,7 +5151,7 @@ package body Make is\n       --  number of compilation processed, for each possible project.\n \n       The_Mapping_File_Names :=\n-        new Temp_File_Names\n+        new Temp_Path_Names\n           (No_Project .. Project_Table.Last (Project_Tree.Projects),\n            1 .. Saved_Maximum_Processes);\n       Last_Mapping_File_Names :=\n@@ -4966,13 +5236,13 @@ package body Make is\n          if Main_Project /= No_Project then\n             declare\n                Exec_File_Name : constant String :=\n-                 Get_Name_String (Executable);\n+                                  Get_Name_String (Executable);\n \n             begin\n                if not Is_Absolute_Path (Exec_File_Name) then\n \n                   Get_Name_String (Project_Tree.Projects.Table\n-                                     (Main_Project).Exec_Directory);\n+                                     (Main_Project).Display_Exec_Dir);\n \n                   if\n                     Name_Buffer (Name_Len) /= Directory_Separator\n@@ -4995,16 +5265,16 @@ package body Make is\n \n          if Do_Compile_Step then\n             Recursive_Compilation_Step : declare\n-               Args : Argument_List (1 .. Gcc_Switches.Last);\n+               Args                : Argument_List (1 .. Gcc_Switches.Last);\n \n-               First_Compiled_File : Name_Id;\n-               Youngest_Obj_File   : Name_Id;\n+               First_Compiled_File : File_Name_Type;\n+               Youngest_Obj_File   : File_Name_Type;\n                Youngest_Obj_Stamp  : Time_Stamp_Type;\n \n-               Executable_Stamp : Time_Stamp_Type;\n+               Executable_Stamp    : Time_Stamp_Type;\n                --  Executable is the final executable program\n \n-               Library_Rebuilt : Boolean := False;\n+               Library_Rebuilt     : Boolean := False;\n \n             begin\n                for J in 1 .. Gcc_Switches.Last loop\n@@ -5047,7 +5317,7 @@ package body Make is\n                      goto Next_Main;\n                   else\n                      List_Bad_Compilations;\n-                     raise Compilation_Failed;\n+                     Report_Compilation_Failed;\n                   end if;\n                end if;\n \n@@ -5076,7 +5346,7 @@ package body Make is\n                      --------------------------\n \n                      procedure Add_To_Library_Projs (Proj : Project_Id) is\n-                        Prj   : Project_Id;\n+                        Prj : Project_Id;\n \n                      begin\n                         Library_Projs.Increment_Last;\n@@ -5269,10 +5539,10 @@ package body Make is\n                --  since there is currently no simple way to check the\n                --  up-to-date status of objects\n \n-               if not Hostparm.Java_VM\n+               if Targparm.VM_Target = No_VM\n                  and then First_Compiled_File = No_File\n                then\n-                  Executable_Stamp    := File_Stamp (Executable);\n+                  Executable_Stamp := File_Stamp (Executable);\n \n                   if not Executable_Obsolete then\n                      Executable_Obsolete :=\n@@ -5327,9 +5597,7 @@ package body Make is\n \n                   elsif Youngest_Obj_Stamp (1) = ' ' then\n                      Verbose_Msg\n-                       (Youngest_Obj_File,\n-                        \"missing.\",\n-                        Prefix => \"  \");\n+                       (Youngest_Obj_File, \"missing.\", Prefix => \"  \");\n \n                   elsif Youngest_Obj_Stamp > Executable_Stamp then\n                      Verbose_Msg\n@@ -5340,8 +5608,7 @@ package body Make is\n \n                   else\n                      Verbose_Msg\n-                       (Executable, \"needs to be rebuild.\",\n-                        Prefix => \"  \");\n+                       (Executable, \"needs to be rebuilt\", Prefix => \"  \");\n \n                   end if;\n                end if;\n@@ -5402,8 +5669,7 @@ package body Make is\n                --  Check if there are shared libraries, so that gnatbind is\n                --  called with -shared. Check also if gnatbind is called with\n                --  -shared, so that gnatlink is called with -shared-libgcc\n-               --  for GCC version 3 and above, ensuring that the shared\n-               --  version of libgcc will be used.\n+               --  ensuring that the shared version of libgcc will be used.\n \n                if Main_Project /= No_Project\n                  and then MLib.Tgt.Support_For_Libraries /= MLib.Tgt.None\n@@ -5434,9 +5700,9 @@ package body Make is\n                end if;\n \n                --  If there are shared libraries, invoke gnatlink with\n-               --  -shared-libgcc if GCC version is 3 or more.\n+               --  -shared-libgcc.\n \n-               if Shared_Libs and then GCC_Version >= 3 then\n+               if Shared_Libs then\n                   Link_With_Shared_Libgcc := Shared_Libgcc_Switch'Access;\n                end if;\n \n@@ -5477,7 +5743,7 @@ package body Make is\n                      --  file, if one was created.\n \n                      if not Debug.Debug_Flag_N\n-                       and then Mapping_Path /= No_Name\n+                       and then Mapping_Path /= No_Path\n                      then\n                         Delete_File (Get_Name_String (Mapping_Path), Discard);\n                      end if;\n@@ -5490,21 +5756,21 @@ package body Make is\n                --  If -dn was not specified, delete the temporary mapping file,\n                --  if one was created.\n \n-               if not Debug.Debug_Flag_N and then Mapping_Path /= No_Name then\n+               if not Debug.Debug_Flag_N and then Mapping_Path /= No_Path then\n                   Delete_File (Get_Name_String (Mapping_Path), Discard);\n                end if;\n             end Bind_Step;\n          end if;\n \n          if Do_Link_Step then\n             Link_Step : declare\n-               There_Are_Libraries  : Boolean := False;\n                Linker_Switches_Last : constant Integer := Linker_Switches.Last;\n-               Path_Option : constant String_Access :=\n-                               MLib.Linker_Library_Path_Option;\n-               Current : Natural;\n-               Proj2   : Project_Id;\n-               Depth   : Natural;\n+               Path_Option          : constant String_Access :=\n+                                        MLib.Linker_Library_Path_Option;\n+               There_Are_Libraries  : Boolean := False;\n+               Current              : Natural;\n+               Proj2                : Project_Id;\n+               Depth                : Natural;\n \n             begin\n                if not Run_Path_Option then\n@@ -5530,8 +5796,7 @@ package body Make is\n                            --  Add this project to table Library_Projs\n \n                            There_Are_Libraries := True;\n-                           Depth :=\n-                             Project_Tree.Projects.Table (Proj1).Depth;\n+                           Depth := Project_Tree.Projects.Table (Proj1).Depth;\n                            Library_Projs.Increment_Last;\n                            Current := Library_Projs.Last;\n \n@@ -5560,7 +5825,7 @@ package body Make is\n                                 new String'\n                                   (Get_Name_String\n                                        (Project_Tree.Projects.Table\n-                                            (Proj1).Library_Dir));\n+                                            (Proj1).Display_Library_Dir));\n                            end if;\n                         end if;\n                      end loop;\n@@ -5574,7 +5839,7 @@ package body Make is\n                                       Get_Name_String\n                                         (Project_Tree.Projects.Table\n                                            (Library_Projs.Table (Index)).\n-                                              Library_Dir));\n+                                              Display_Library_Dir));\n \n                         --  Add the -l switch\n \n@@ -5712,25 +5977,34 @@ package body Make is\n \n                   --  And invoke the linker\n \n+                  declare\n+                     Success : Boolean := False;\n                   begin\n                      Link (Main_ALI_File,\n                            Link_With_Shared_Libgcc.all &\n-                           Args (Args'First .. Last_Arg));\n-                     Successful_Links.Increment_Last;\n-                     Successful_Links.Table (Successful_Links.Last) :=\n-                       Main_ALI_File;\n+                           Args (Args'First .. Last_Arg),\n+                           Success);\n \n-                  exception\n-                     when Link_Failed =>\n-                        if Osint.Number_Of_Files = 1 or not Keep_Going then\n-                           raise;\n+                     if Success then\n+                        Successful_Links.Increment_Last;\n+                        Successful_Links.Table (Successful_Links.Last) :=\n+                          Main_ALI_File;\n \n-                        else\n-                           Write_Line (\"*** link failed\");\n-                           Failed_Links.Increment_Last;\n-                           Failed_Links.Table (Failed_Links.Last) :=\n-                             Main_ALI_File;\n+                     elsif Osint.Number_Of_Files = 1 or not Keep_Going then\n+                        Make_Failed (\"*** link failed.\");\n+\n+                     else\n+                        Set_Standard_Error;\n+                        Write_Line (\"*** link failed\");\n+\n+                        if Commands_To_Stdout then\n+                           Set_Standard_Output;\n                         end if;\n+\n+                        Failed_Links.Increment_Last;\n+                        Failed_Links.Table (Failed_Links.Last) :=\n+                          Main_ALI_File;\n+                     end if;\n                   end;\n                end;\n \n@@ -5924,20 +6198,26 @@ package body Make is\n             Write_Line (\"\"\" succeeded.\");\n          end loop;\n \n+         Set_Standard_Error;\n+\n          for Index in 1 .. Failed_Links.Last loop\n             Write_Str (\"Linking of \"\"\");\n             Write_Str (Get_Name_String (Failed_Links.Table (Index)));\n             Write_Line (\"\"\" failed.\");\n          end loop;\n \n+         if Commands_To_Stdout then\n+            Set_Standard_Output;\n+         end if;\n+\n          if Total_Compilation_Failures = 0 then\n-            raise Compilation_Failed;\n+            Report_Compilation_Failed;\n          end if;\n       end if;\n \n       if Total_Compilation_Failures /= 0 then\n          List_Bad_Compilations;\n-         raise Compilation_Failed;\n+         Report_Compilation_Failed;\n       end if;\n \n       --  Delete the temporary mapping file that was created if we are\n@@ -5948,24 +6228,9 @@ package body Make is\n          Prj.Env.Delete_All_Path_Files (Project_Tree);\n       end if;\n \n-      Exit_Program (E_Success);\n-\n    exception\n-      when Bind_Failed =>\n-         Make_Failed (\"*** bind failed.\");\n-\n-      when Compilation_Failed =>\n-         if not Debug.Debug_Flag_N then\n-            Delete_Mapping_Files;\n-            Prj.Env.Delete_All_Path_Files (Project_Tree);\n-         end if;\n-\n-         Exit_Program (E_Fatal);\n-\n-      when Link_Failed =>\n-         Make_Failed (\"*** link failed.\");\n-\n       when X : others =>\n+         Set_Standard_Error;\n          Write_Line (Exception_Information (X));\n          Make_Failed (\"INTERNAL ERROR. Please report.\");\n    end Gnatmake;\n@@ -5974,7 +6239,7 @@ package body Make is\n    -- Hash --\n    ----------\n \n-   function Hash (F : Name_Id) return Header_Num is\n+   function Hash (F : File_Name_Type) return Header_Num is\n    begin\n       return Header_Num (1 + F mod Max_Header);\n    end Hash;\n@@ -5984,8 +6249,8 @@ package body Make is\n    --------------------\n \n    function In_Ada_Lib_Dir (File : File_Name_Type) return Boolean is\n-      D : constant Name_Id := Get_Directory (File);\n-      B : constant Byte    := Get_Name_Table_Byte (D);\n+      D : constant File_Name_Type := Get_Directory (File);\n+      B : constant Byte           := Get_Name_Table_Byte (D);\n    begin\n       return (B and Ada_Lib_Dir) /= 0;\n    end In_Ada_Lib_Dir;\n@@ -5994,7 +6259,7 @@ package body Make is\n    -- Inform --\n    ------------\n \n-   procedure Inform (N : Name_Id := No_Name; Msg : String) is\n+   procedure Inform (N : Name_Id; Msg : String) is\n    begin\n       Osint.Write_Program_Name;\n \n@@ -6010,6 +6275,19 @@ package body Make is\n       Write_Eol;\n    end Inform;\n \n+   procedure Inform (N : File_Name_Type; Msg : String) is\n+   begin\n+      Inform (Name_Id (N), Msg);\n+   end Inform;\n+\n+   procedure Inform (Msg : String) is\n+   begin\n+      Osint.Write_Program_Name;\n+      Write_Str (\": \");\n+      Write_Str (Msg);\n+      Write_Eol;\n+   end Inform;\n+\n    -----------------------\n    -- Init_Mapping_File --\n    -----------------------\n@@ -6018,8 +6296,7 @@ package body Make is\n      (Project    : Project_Id;\n       File_Index : in out Natural)\n    is\n-      FD : File_Descriptor;\n-\n+      FD     : File_Descriptor;\n       Status : Boolean;\n       --  For call to Close\n \n@@ -6155,6 +6432,10 @@ package body Make is\n          Scan_Make_Arg (Argument (Next_Arg), And_Save => True);\n       end loop Scan_Args;\n \n+      if Commands_To_Stdout then\n+         Set_Standard_Output;\n+      end if;\n+\n       if Usage_Requested then\n          Usage;\n       end if;\n@@ -6209,7 +6490,7 @@ package body Make is\n \n          if Verbose_Mode then\n             Write_Eol;\n-            Write_Str (\"Parsing Project File \"\"\");\n+            Write_Str (\"Parsing project file \"\"\");\n             Write_Str (Project_File_Name.all);\n             Write_Str (\"\"\".\");\n             Write_Eol;\n@@ -6237,9 +6518,11 @@ package body Make is\n             Make_Failed (\"\"\"\", Project_File_Name.all, \"\"\" processing failed\");\n          end if;\n \n+         Create_Mapping_File := True;\n+\n          if Verbose_Mode then\n             Write_Eol;\n-            Write_Str (\"Parsing of Project File \"\"\");\n+            Write_Str (\"Parsing of project file \"\"\");\n             Write_Str (Project_File_Name.all);\n             Write_Str (\"\"\" is finished.\");\n             Write_Eol;\n@@ -6297,8 +6580,7 @@ package body Make is\n \n       --  Make sure no project object directory is recorded\n \n-      Project_Object_Directory := No_Project;\n-\n+      Project_Of_Current_Object_Directory := No_Project;\n    end Initialize;\n \n    ----------------------------\n@@ -6312,7 +6594,7 @@ package body Make is\n    is\n       Put_In_Q : Boolean := Into_Q;\n       Unit     : Unit_Data;\n-      Sfile    : Name_Id;\n+      Sfile    : File_Name_Type;\n \n       Extending : constant Boolean :=\n                     Project_Tree.Projects.Table\n@@ -6359,12 +6641,12 @@ package body Make is\n                 Unit_Table.Last (Project_Tree.Units)\n       loop\n          Unit  := Project_Tree.Units.Table (Id);\n-         Sfile := No_Name;\n+         Sfile := No_File;\n \n          --  If there is a source for the body, and the body has not been\n          --  locally removed,\n \n-         if Unit.File_Names (Body_Part).Name /= No_Name\n+         if Unit.File_Names (Body_Part).Name /= No_File\n            and then Unit.File_Names (Body_Part).Path /= Slash\n          then\n             --  And it is a source for the specified project\n@@ -6374,7 +6656,7 @@ package body Make is\n                --  If we don't have a spec, we cannot consider the source\n                --  if it is a subunit\n \n-               if Unit.File_Names (Specification).Name = No_Name then\n+               if Unit.File_Names (Specification).Name = No_File then\n                   declare\n                      Src_Ind : Source_File_Index;\n \n@@ -6383,8 +6665,8 @@ package body Make is\n                      --  (Atree, Sinfo, ...). So, we pretend that it is a\n                      --  project file, and we use Sinput.P.\n \n-                     --  Source_File_Is_Subunit is just scanning through\n-                     --  the file until it finds one of the reserved words\n+                     --  Source_File_Is_Subunit is just scanning through the\n+                     --  file until it finds one of the reserved words\n                      --  separate, procedure, function, generic or package.\n                      --  Fortunately, these Ada reserved words are also\n                      --  reserved for project files.\n@@ -6397,26 +6679,26 @@ package body Make is\n                      --  If it is a subunit, discard it\n \n                      if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n-                        Sfile := No_Name;\n+                        Sfile := No_File;\n                      else\n-                        Sfile := Unit.File_Names (Body_Part).Name;\n+                        Sfile := Unit.File_Names (Body_Part).Display_Name;\n                      end if;\n                   end;\n \n                else\n-                  Sfile := Unit.File_Names (Body_Part).Name;\n+                  Sfile := Unit.File_Names (Body_Part).Display_Name;\n                end if;\n             end if;\n \n-         elsif Unit.File_Names (Specification).Name /= No_Name\n+         elsif Unit.File_Names (Specification).Name /= No_File\n            and then Unit.File_Names (Specification).Path /= Slash\n            and then Check_Project (Unit.File_Names (Specification).Project)\n          then\n             --  If there is no source for the body, but there is a source\n             --  for the spec which has not been locally removed, then we take\n             --  this one.\n \n-            Sfile := Unit.File_Names (Specification).Name;\n+            Sfile := Unit.File_Names (Specification).Display_Name;\n          end if;\n \n          --  If Put_In_Q is True, we insert into the Q\n@@ -6433,7 +6715,7 @@ package body Make is\n             --  And of course, we only insert in the Q if the source is not\n             --  marked.\n \n-            if Sfile /= No_Name and then not Is_Marked (Sfile) then\n+            if Sfile /= No_File and then not Is_Marked (Sfile) then\n                if Verbose_Mode then\n                   Write_Str (\"Adding \"\"\");\n                   Write_Str (Get_Name_String (Sfile));\n@@ -6444,7 +6726,7 @@ package body Make is\n                Mark (Sfile);\n             end if;\n \n-         elsif Sfile /= No_Name then\n+         elsif Sfile /= No_File then\n \n             --  If Put_In_Q is False, we add the source as it it were specified\n             --  on the command line, and we set Put_In_Q to True, so that the\n@@ -6476,7 +6758,7 @@ package body Make is\n \n    procedure Insert_Q\n      (Source_File : File_Name_Type;\n-      Source_Unit : Unit_Name_Type := No_Name;\n+      Source_Unit : Unit_Name_Type := No_Unit_Name;\n       Index       : Int            := 0)\n    is\n    begin\n@@ -6504,18 +6786,19 @@ package body Make is\n    -- Is_In_Obsoleted --\n    ---------------------\n \n-   function Is_In_Obsoleted (F : Name_Id) return Boolean is\n+   function Is_In_Obsoleted (F : File_Name_Type) return Boolean is\n    begin\n       if F = No_File then\n          return False;\n \n       else\n          declare\n             Name  : constant String := Get_Name_String (F);\n-            First : Natural := Name'Last;\n-            F2    : Name_Id := F;\n+            First : Natural;\n+            F2    : File_Name_Type;\n \n          begin\n+            First := Name'Last;\n             while First > Name'First\n               and then Name (First - 1) /= Directory_Separator\n               and then Name (First - 1) /= '/'\n@@ -6527,6 +6810,8 @@ package body Make is\n                Name_Len := 0;\n                Add_Str_To_Name_Buffer (Name (First .. Name'Last));\n                F2 := Name_Find;\n+            else\n+               F2 := F;\n             end if;\n \n             return Obsoleted.Get (F2);\n@@ -6551,8 +6836,8 @@ package body Make is\n             Source_File_Name : constant String :=\n                                  Get_Name_String (Source_File);\n             Saved_Verbosity  : constant Verbosity := Current_Verbosity;\n-            Project          : Project_Id := No_Project;\n-            Path_Name        : Name_Id := No_Name;\n+            Project          : Project_Id         := No_Project;\n+            Path_Name        : File_Name_Type     := No_File;\n             Data             : Project_Data;\n \n          begin\n@@ -6561,8 +6846,7 @@ package body Make is\n             --  messages.\n \n             Current_Verbosity := Default;\n-            Prj.Env.\n-              Get_Reference\n+            Prj.Env.Get_Reference\n               (Source_File_Name => Source_File_Name,\n                Project          => Project,\n                In_Tree          => Project_Tree,\n@@ -6580,7 +6864,7 @@ package body Make is\n                   Object_Directory : constant String :=\n                                        Normalize_Pathname\n                                          (Get_Name_String\n-                                           (Data.Object_Directory));\n+                                           (Data.Display_Object_Dir));\n \n                   Olast : Natural := Object_Directory'Last;\n \n@@ -6620,29 +6904,28 @@ package body Make is\n    -- Link --\n    ----------\n \n-   procedure Link (ALI_File : File_Name_Type; Args : Argument_List) is\n+   procedure Link\n+     (ALI_File : File_Name_Type;\n+      Args     : Argument_List;\n+      Success  : out Boolean)\n+   is\n       Link_Args : Argument_List (1 .. Args'Length + 1);\n-      Success   : Boolean;\n \n    begin\n       Get_Name_String (ALI_File);\n       Link_Args (1) := new String'(Name_Buffer (1 .. Name_Len));\n \n       Link_Args (2 .. Args'Length + 1) :=  Args;\n \n-      GNAT.OS_Lib.Normalize_Arguments (Link_Args);\n+      System.OS_Lib.Normalize_Arguments (Link_Args);\n \n       Display (Gnatlink.all, Link_Args);\n \n       if Gnatlink_Path = null then\n          Make_Failed (\"error, unable to locate \", Gnatlink.all);\n       end if;\n \n-      GNAT.OS_Lib.Spawn (Gnatlink_Path.all, Link_Args, Success);\n-\n-      if not Success then\n-         raise Link_Failed;\n-      end if;\n+      System.OS_Lib.Spawn (Gnatlink_Path.all, Link_Args, Success);\n    end Link;\n \n    ---------------------------\n@@ -6667,9 +6950,9 @@ package body Make is\n    -----------------\n \n    procedure List_Depend is\n-      Lib_Name  : Name_Id;\n-      Obj_Name  : Name_Id;\n-      Src_Name  : Name_Id;\n+      Lib_Name  : File_Name_Type;\n+      Obj_Name  : File_Name_Type;\n+      Src_Name  : File_Name_Type;\n \n       Len       : Natural;\n       Line_Pos  : Natural;\n@@ -6726,7 +7009,9 @@ package body Make is\n          Write_Eol;\n       end loop;\n \n-      Set_Standard_Error;\n+      if not Commands_To_Stdout then\n+         Set_Standard_Error;\n+      end if;\n    end List_Depend;\n \n    -----------------\n@@ -6754,8 +7039,7 @@ package body Make is\n    begin\n       if On_Command_Line then\n          declare\n-            Real_Path : constant String :=\n-              Normalize_Pathname (Dir);\n+            Real_Path : constant String := Normalize_Pathname (Dir);\n \n          begin\n             if Real_Path'Length = 0 then\n@@ -6772,9 +7056,9 @@ package body Make is\n          declare\n             Real_Path : constant String :=\n               Normalize_Pathname\n-                (Dir,\n-                 Get_Name_String\n-                   (Project_Tree.Projects.Table (Main_Project).Directory));\n+                (Dir, Get_Name_String\n+                   (Project_Tree.Projects.Table\n+                                  (Main_Project).Display_Directory));\n \n          begin\n             if Real_Path'Length = 0 then\n@@ -6839,7 +7123,7 @@ package body Make is\n          List := Project_Tree.Project_Lists.Table (List).Next;\n          Recursive_Compute_Depth\n            (Project => Proj,\n-            Depth => Depth + 1);\n+            Depth   => Depth + 1);\n       end loop;\n \n       --  Visit a project being extended, if any\n@@ -6853,12 +7137,27 @@ package body Make is\n       Project_Tree.Projects.Table (Project).Seen := False;\n    end Recursive_Compute_Depth;\n \n+   -------------------------------\n+   -- Report_Compilation_Failed --\n+   -------------------------------\n+\n+   procedure Report_Compilation_Failed is\n+   begin\n+      if not Debug.Debug_Flag_N then\n+         Delete_Mapping_Files;\n+         Prj.Env.Delete_All_Path_Files (Project_Tree);\n+      end if;\n+\n+      Exit_Program (E_Fatal);\n+   end Report_Compilation_Failed;\n+\n    -----------------------\n    -- Sigint_Intercpted --\n    -----------------------\n \n    procedure Sigint_Intercepted is\n    begin\n+      Set_Standard_Error;\n       Write_Line (\"*** Interrupted ***\");\n       Delete_All_Temp_Files;\n       OS_Exit (1);\n@@ -7297,7 +7596,7 @@ package body Make is\n          then\n             Unique_Compile_All_Projects := True;\n             Unique_Compile   := True;\n-            Compile_Only := True;\n+            Compile_Only     := True;\n             Do_Bind_Step     := False;\n             Do_Link_Step     := False;\n \n@@ -7381,8 +7680,8 @@ package body Make is\n             Operating_Mode := Check_Semantics;\n             Check_Object_Consistency := False;\n             Compile_Only             := True;\n-            Do_Bind_Step                 := False;\n-            Do_Link_Step                 := False;\n+            Do_Bind_Step             := False;\n+            Do_Link_Step             := False;\n \n          elsif Argv (2 .. Argv'Last) = \"nostdlib\" then\n \n@@ -7427,7 +7726,7 @@ package body Make is\n    -----------------\n \n    function Switches_Of\n-     (Source_File      : Name_Id;\n+     (Source_File      : File_Name_Type;\n       Source_File_Name : String;\n       Source_Index     : Int;\n       Naming           : Naming_Data;\n@@ -7455,7 +7754,7 @@ package body Make is\n    begin\n       Switches :=\n         Prj.Util.Value_Of\n-          (Index     => Source_File,\n+          (Index     => Name_Id (Source_File),\n            Src_Index => Source_Index,\n            In_Array  => Switches_Array,\n            In_Tree   => Project_Tree);\n@@ -7580,6 +7879,19 @@ package body Make is\n       Write_Eol;\n    end Verbose_Msg;\n \n+   procedure Verbose_Msg\n+     (N1                : File_Name_Type;\n+      S1                : String;\n+      N2                : File_Name_Type := No_File;\n+      S2                : String  := \"\";\n+      Prefix            : String := \"  -> \";\n+      Minimum_Verbosity : Verbosity_Level_Type := Opt.Low)\n+   is\n+   begin\n+      Verbose_Msg\n+        (Name_Id (N1), S1, Name_Id (N2), S2, Prefix, Minimum_Verbosity);\n+   end Verbose_Msg;\n+\n begin\n    --  Make sure that in case of failure, the temp files will be deleted\n "}, {"sha": "1c92c99c1a8b4f0ef087d869b83d0ff93e38d9c1", "filename": "gcc/ada/make.ads", "status": "modified", "additions": 4, "deletions": 246, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Fmake.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Fmake.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.ads?ref=d3cc6a322691df8a2732ec4ee5b0957caa057316", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,254 +25,12 @@\n ------------------------------------------------------------------------------\n \n --  The following package implements the facilities to recursively\n---  compile (a la make), bind and/or link a set of sources. This package\n---  gives the individual routines for performing such tasks as well as\n---  the routine gnatmake below that puts it all together.\n-\n-with Table;\n-with Types; use Types;\n-\n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n+--  compile (a la make), bind and/or link a set of sources.\n \n package Make is\n \n-   --  The 3 following packages are used to store gcc, gnatbind and gnatbl\n-   --  switches passed on the gnatmake or gnatdist command line.\n-   --  Note that the lower bounds definitely need to be 1 to match the\n-   --  requirement that the argument array prepared for Spawn must have\n-   --  a lower bound of 1.\n-\n-   package Gcc_Switches is new Table.Table (\n-     Table_Component_Type => String_Access,\n-     Table_Index_Type     => Integer,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 20,\n-     Table_Increment      => 100,\n-     Table_Name           => \"Make.Gcc_Switches\");\n-\n-   package Binder_Switches is new Table.Table (\n-     Table_Component_Type => String_Access,\n-     Table_Index_Type     => Integer,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 20,\n-     Table_Increment      => 100,\n-     Table_Name           => \"Make.Binder_Switches\");\n-\n-   package Linker_Switches is new Table.Table (\n-     Table_Component_Type => String_Access,\n-     Table_Index_Type     => Integer,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 20,\n-     Table_Increment      => 100,\n-     Table_Name           => \"Make.Linker_Switches\");\n-\n-   procedure Display_Commands (Display : Boolean := True);\n-   --  The default behavior of Make commands (Compile_Sources, Bind, Link)\n-   --  is to display them on stderr. This behavior can be changed repeatedly\n-   --  by invoking this procedure.\n-\n-   --  If a compilation, bind or link failed one of the following 3 exceptions\n-   --  is raised. These need to be handled by the calling routines.\n-\n-   Compilation_Failed : exception;\n-   --  Raised by Compile_Sources if a compilation failed\n-\n-   Bind_Failed : exception;\n-   --  Raised by Bind below if the bind failed\n-\n-   Link_Failed : exception;\n-   --  Raised by Link below if the link failed\n-\n-   procedure Bind (ALI_File : File_Name_Type; Args : Argument_List);\n-   --  Binds ALI_File. Args are the arguments to pass to the binder.\n-   --  Args must have a lower bound of 1.\n-\n-   procedure Link (ALI_File : File_Name_Type; Args : Argument_List);\n-   --  Links ALI_File. Args are the arguments to pass to the linker.\n-   --  Args must have a lower bound of 1.\n-\n-   procedure Initialize;\n-   --  Performs default and package initialization. Therefore,\n-   --  Compile_Sources can be called by an external unit.\n-\n-   procedure Scan_Make_Arg (Argv : String; And_Save : Boolean);\n-   --  Scan make arguments. Argv is a single argument to be processed\n-\n-   procedure Extract_Failure\n-     (File  : out File_Name_Type;\n-      Unit  : out Unit_Name_Type;\n-      Found : out Boolean);\n-   --  Extracts the first failure report from Bad_Compilation table\n-\n-   procedure Compile_Sources\n-     (Main_Source           : File_Name_Type;\n-      Args                  : Argument_List;\n-      First_Compiled_File   : out Name_Id;\n-      Most_Recent_Obj_File  : out Name_Id;\n-      Most_Recent_Obj_Stamp : out Time_Stamp_Type;\n-      Main_Unit             : out Boolean;\n-      Compilation_Failures  : out Natural;\n-      Main_Index            : Int      := 0;\n-      Check_Readonly_Files  : Boolean  := False;\n-      Do_Not_Execute        : Boolean  := False;\n-      Force_Compilations    : Boolean  := False;\n-      Keep_Going            : Boolean  := False;\n-      In_Place_Mode         : Boolean  := False;\n-      Initialize_ALI_Data   : Boolean  := True;\n-      Max_Process           : Positive := 1);\n-   --  Compile_Sources will recursively compile all the sources needed by\n-   --  Main_Source. Before calling this routine make sure Namet has been\n-   --  initialized. This routine can be called repeatedly with different\n-   --  Main_Source file as long as all the source (-I flags), library\n-   --  (-B flags) and ada library (-A flags) search paths between calls are\n-   --  *exactly* the same. The default directory must also be the same.\n-   --\n-   --    Args contains the arguments to use during the compilations.\n-   --    The lower bound of Args must be 1.\n-   --\n-   --    First_Compiled_File is set to the name of the first file that is\n-   --    compiled or that needs to be compiled. This is set to No_Name if no\n-   --    compilations were needed.\n-   --\n-   --    Most_Recent_Obj_File is set to the full name of the most recent\n-   --    object file found when no compilations are needed, that is when\n-   --    First_Compiled_File is set to No_Name. When First_Compiled_File\n-   --    is set then Most_Recent_Obj_File is set to No_Name.\n-   --\n-   --    Most_Recent_Obj_Stamp is the time stamp of Most_Recent_Obj_File.\n-   --\n-   --    Main_Unit is set to True if Main_Source can be a main unit.\n-   --    If Do_Not_Execute is False and First_Compiled_File /= No_Name\n-   --    the value of Main_Unit is always False.\n-   --    Is this used any more??? It is certainly not used by gnatmake???\n-   --\n-   --    Compilation_Failures is a count of compilation failures. This count\n-   --    is used to extract compilation failure reports with Extract_Failure.\n-   --\n-   --    Main_Index, when not zero, is the index of the main unit in source\n-   --    file Main_Source which is a multi-unit source.\n-   --    Zero indicates that Main_Source is a single unit source file.\n-   --\n-   --    Check_Readonly_Files set it to True to compile source files\n-   --    which library files are read-only. When compiling GNAT predefined\n-   --    files the \"-gnatg\" flag is used.\n-   --\n-   --    Do_Not_Execute set it to True to find out the first source that\n-   --    needs to be recompiled, but without recompiling it. This file is\n-   --    saved in First_Compiled_File.\n-   --\n-   --    Force_Compilations forces all compilations no matter what but\n-   --    recompiles read-only files only if Check_Readonly_Files\n-   --    is set.\n-   --\n-   --    Keep_Going when True keep compiling even in the presence of\n-   --    compilation errors.\n-   --\n-   --    In_Place_Mode when True save library/object files in their object\n-   --    directory if they already exist; otherwise, in the source directory.\n-   --\n-   --    Initialize_ALI_Data set it to True when you want to initialize ALI\n-   --    data-structures. This is what you should do most of the time.\n-   --    (especially the first time around when you call this routine).\n-   --    This parameter is set to False to preserve previously recorded\n-   --    ALI file data.\n-   --\n-   --    Max_Process is the maximum number of processes that should be spawned\n-   --    to carry out compilations.\n-   --\n-   --  Flags in Package Opt Affecting Compile_Sources\n-   --  -----------------------------------------------\n-   --\n-   --    Check_Object_Consistency set it to False to omit all consistency\n-   --      checks between an .ali file and its corresponding object file.\n-   --      When this flag is set to true, every time an .ali is read,\n-   --      package Osint checks that the corresponding object file\n-   --      exists and is more recent than the .ali.\n-   --\n-   --  Use of Name Table Info\n-   --  ----------------------\n-   --\n-   --  All file names manipulated by Compile_Sources are entered into the\n-   --  Names table. The Byte field of a source file is used to mark it.\n-   --\n-   --  Calling Compile_Sources Several Times\n-   --  -------------------------------------\n-   --\n-   --  Upon return from Compile_Sources all the ALI data structures are left\n-   --  intact for further browsing. HOWEVER upon entry to this routine ALI\n-   --  data structures are re-initialized if parameter Initialize_ALI_Data\n-   --  above is set to true. Typically this is what you want the first time\n-   --  you call Compile_Sources. You should not load an ali file, call this\n-   --  routine with flag Initialize_ALI_Data set to True and then expect\n-   --  that ALI information to be around after the call. Note that the first\n-   --  time you call Compile_Sources you better set Initialize_ALI_Data to\n-   --  True unless you have called Initialize_ALI yourself.\n-   --\n-   --  Compile_Sources ALGORITHM : Compile_Sources (Main_Source)\n-   --  -------------------------\n-   --\n-   --  1. Insert Main_Source in a Queue (Q) and mark it.\n-   --\n-   --  2. Let unit.adb be the file at the head of the Q. If unit.adb is\n-   --     missing but its corresponding ali file is in an Ada library directory\n-   --     (see below) then, remove unit.adb from the Q and goto step 4.\n-   --     Otherwise, look at the files under the D (dependency) section of\n-   --     unit.ali. If unit.ali does not exist or some of the time stamps do\n-   --     not match, (re)compile unit.adb.\n-   --\n-   --     An Ada library directory is a directory containing Ada specs, ali\n-   --     and object files but no source files for the bodies. An Ada library\n-   --     directory is communicated to gnatmake by means of some switch so that\n-   --     gnatmake can skip the sources whole ali are in that directory.\n-   --     There are two reasons for skipping the sources in this case. Firstly,\n-   --     Ada libraries typically come without full sources but binding and\n-   --     linking against those libraries is still possible. Secondly, it would\n-   --     be very wasteful for gnatmake to systematically check the consistency\n-   --     of every external Ada library used in a program. The binder is\n-   --     already in charge of catching any potential inconsistencies.\n-   --\n-   --  3. Look into the W section of unit.ali and insert into the Q all\n-   --     unmarked source files. Mark all files newly inserted in the Q.\n-   --     Specifically, assuming that the W section looks like\n-   --\n-   --     W types%s               types.adb               types.ali\n-   --     W unchecked_deallocation%s\n-   --     W xref_tab%s            xref_tab.adb            xref_tab.ali\n-   --\n-   --     Then xref_tab.adb and types.adb are inserted in the Q if they are not\n-   --     already marked.\n-   --     Note that there is no file listed under W unchecked_deallocation%s\n-   --     so no generic body should ever be explicitly compiled (unless the\n-   --     Main_Source at the start was a generic body).\n-   --\n-   --  4. Repeat steps 2 and 3 above until the Q is empty\n-   --\n-   --  Note that the above algorithm works because the units withed in\n-   --  subunits are transitively included in the W section (with section) of\n-   --  the main unit. Likewise the withed units in a generic body needed\n-   --  during a compilation are also transitively included in the W section\n-   --  of the originally compiled file.\n-\n    procedure Gnatmake;\n-   --  The driver of gnatmake. This routine puts it all together.\n-   --  This utility can be used to automatically (re)compile (using\n-   --  Compile_Sources), bind (using Bind) and link (using Link) a set of\n-   --  ada sources. For more information on gnatmake and its precise usage\n-   --  please refer to the gnat documentation.\n-   --\n-   --  Flags in Package Opt Affecting Gnatmake\n-   --  ---------------------------------------\n-   --\n-   --    Check_Readonly_Files:     True  when -a present in command line\n-   --    Check_Object_Consistency: Set to True by Gnatmake\n-   --    Compile_Only:             True  when -c present in command line\n-   --    Force_Compilations:       True  when -f present in command line\n-   --    Maximum_Processes:        Number of processes given by -jnum\n-   --    Keep_Going:               True  when -k present in command line\n-   --    List_Dependencies:        True  when -l present in command line\n-   --    Do_Not_Execute            True  when -n present in command line\n-   --    Quiet_Output:             True  when -q present in command line\n-   --    Minimal_Recompilation:    True  when -m present in command line\n-   --    Verbose_Mode:             True  when -v present in command line\n+   --  The driver of gnatmake. For more information on gnatmake and its\n+   --  precise usage please refer to the gnat documentation.\n \n end Make;"}, {"sha": "8dd5f3f5d805093fdf4daa4ee032f21b41857cfe", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=d3cc6a322691df8a2732ec4ee5b0957caa057316", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,13 +27,14 @@\n with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Errout;   use Errout;\n-with Targparm; use Targparm;\n+with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Sem;      use Sem;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;\n+with Targparm; use Targparm;\n \n package body Sem_Mech is\n \n@@ -274,6 +275,7 @@ package body Sem_Mech is\n \n                when Convention_Assembler |\n                     Convention_C         |\n+                    Convention_CIL       |\n                     Convention_CPP       |\n                     Convention_Java      |\n                     Convention_Stdcall   =>"}, {"sha": "b24dfb06e29e13e3627c602ff1a418f9b76f3e80", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 17, "deletions": 30, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=d3cc6a322691df8a2732ec4ee5b0957caa057316", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,6 @@\n ------------------------------------------------------------------------------\n \n with Csets;    use Csets;\n-with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -44,13 +43,14 @@ package body Targparm is\n       BDC,  --   Backend_Divide_Checks\n       BOC,  --   Backend_Overflow_Checks\n       CLA,  --   Command_Line_Args\n+      CLI,  --   CLI (.NET)\n       CRT,  --   Configurable_Run_Times\n-      CSV,  --   Compiler_System_Version\n       D32,  --   Duration_32_Bits\n       DEN,  --   Denorm\n       EXS,  --   Exit_Status_Supported\n       FEL,  --   Frontend_Layout\n       FFO,  --   Fractional_Fixed_Ops\n+      JVM,  --   JVM\n       MOV,  --   Machine_Overflows\n       MRN,  --   Machine_Rounds\n       PAS,  --   Preallocated_Stacks\n@@ -68,9 +68,6 @@ package body Targparm is\n       ZCD,  --   ZCX_By_Default\n       ZCG); --   GCC_ZCX_Support\n \n-   subtype Targparm_Tags_OK is Targparm_Tags range AAM .. ZCG;\n-   --  Range excluding obsolete entries\n-\n    Targparm_Flags : array (Targparm_Tags) of Boolean := (others => False);\n    --  Flag is set True if corresponding parameter is scanned\n \n@@ -80,13 +77,14 @@ package body Targparm is\n    BDC_Str : aliased constant Source_Buffer := \"Backend_Divide_Checks\";\n    BOC_Str : aliased constant Source_Buffer := \"Backend_Overflow_Checks\";\n    CLA_Str : aliased constant Source_Buffer := \"Command_Line_Args\";\n+   CLI_Str : aliased constant Source_Buffer := \"CLI\";\n    CRT_Str : aliased constant Source_Buffer := \"Configurable_Run_Time\";\n-   CSV_Str : aliased constant Source_Buffer := \"Compiler_System_Version\";\n    D32_Str : aliased constant Source_Buffer := \"Duration_32_Bits\";\n    DEN_Str : aliased constant Source_Buffer := \"Denorm\";\n    EXS_Str : aliased constant Source_Buffer := \"Exit_Status_Supported\";\n    FEL_Str : aliased constant Source_Buffer := \"Frontend_Layout\";\n    FFO_Str : aliased constant Source_Buffer := \"Fractional_Fixed_Ops\";\n+   JVM_Str : aliased constant Source_Buffer := \"JVM\";\n    MOV_Str : aliased constant Source_Buffer := \"Machine_Overflows\";\n    MRN_Str : aliased constant Source_Buffer := \"Machine_Rounds\";\n    PAS_Str : aliased constant Source_Buffer := \"Preallocated_Stacks\";\n@@ -113,13 +111,14 @@ package body Targparm is\n       BDC_Str'Access,\n       BOC_Str'Access,\n       CLA_Str'Access,\n+      CLI_Str'Access,\n       CRT_Str'Access,\n-      CSV_Str'Access,\n       D32_Str'Access,\n       DEN_Str'Access,\n       EXS_Str'Access,\n       FEL_Str'Access,\n       FFO_Str'Access,\n+      JVM_Str'Access,\n       MOV_Str'Access,\n       MRN_Str'Access,\n       PAS_Str'Access,\n@@ -549,13 +548,22 @@ package body Targparm is\n                      when BDC => Backend_Divide_Checks_On_Target     := Result;\n                      when BOC => Backend_Overflow_Checks_On_Target   := Result;\n                      when CLA => Command_Line_Args_On_Target         := Result;\n+                     when CLI =>\n+                        if Result then\n+                           VM_Target := CLI_Target;\n+                        end if;\n+\n                      when CRT => Configurable_Run_Time_On_Target     := Result;\n-                     when CSV => Compiler_System_Version             := Result;\n                      when D32 => Duration_32_Bits_On_Target          := Result;\n                      when DEN => Denorm_On_Target                    := Result;\n                      when EXS => Exit_Status_Supported_On_Target     := Result;\n                      when FEL => Frontend_Layout_On_Target           := Result;\n                      when FFO => Fractional_Fixed_Ops_On_Target      := Result;\n+                     when JVM =>\n+                        if Result then\n+                           VM_Target := JVM_Target;\n+                        end if;\n+\n                      when MOV => Machine_Overflows_On_Target         := Result;\n                      when MRN => Machine_Rounds_On_Target            := Result;\n                      when PAS => Preallocated_Stacks_On_Target       := Result;\n@@ -614,27 +622,6 @@ package body Targparm is\n          Multi_Unit_Index_Character := '$';\n       end if;\n \n-      --  Check no missing target parameter settings (skip for compiler vsn)\n-\n-      if not Compiler_System_Version then\n-         for K in Targparm_Tags_OK loop\n-            if not Targparm_Flags (K) then\n-               Set_Standard_Error;\n-               Write_Line\n-                 (\"fatal error: system.ads is incorrectly formatted\");\n-               Write_Str (\"missing line for parameter: \");\n-\n-               for J in Targparm_Str (K)'Range loop\n-                  Write_Char (Targparm_Str (K).all (J));\n-               end loop;\n-\n-               Write_Eol;\n-               Set_Standard_Output;\n-               Fatal := True;\n-            end if;\n-         end loop;\n-      end if;\n-\n       if Fatal then\n          raise Unrecoverable_Error;\n       end if;"}, {"sha": "7f17dd5681852b84ca865e74f35ceb30a249f753", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cc6a322691df8a2732ec4ee5b0957caa057316/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=d3cc6a322691df8a2732ec4ee5b0957caa057316", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,6 +77,7 @@\n --        only item in this category is whether type Address is private.\n \n with Rident; use Rident;\n+with Namet;  use Namet;\n with Types;  use Types;\n \n package Targparm is\n@@ -166,11 +167,11 @@ package Targparm is\n    --------------------------\n \n    Executable_Extension_On_Target : Name_Id := No_Name;\n-   --  Executable extension on the target.\n-   --  This name is useful for setting the executable extension in a\n-   --  dynamic way, e.g. depending on the run-time used, rather than\n-   --  using a configure-time macro as done by Get_Target_Executable_Suffix.\n-   --  If not set (No_Name), use GNAT.OS_Lib.Get_Target_Executable_Suffix.\n+   --  Executable extension on the target. This name is useful for setting\n+   --  the executable extension in a dynamic way, e.g. depending on the\n+   --  run time used, rather than using a configure-time macro as done by\n+   --  Get_Target_Executable_Suffix. If not set (No_Name), instead use\n+   --  System.OS_Lib.Get_Target_Executable_Suffix.\n \n    -----------------------\n    -- Target Parameters --\n@@ -187,24 +188,14 @@ package Targparm is\n    --  text buffer containing the source of the system package.\n \n    --  The default values here are used if no value is found in system.ads.\n-   --  This should normally happen only if the special version of system.ads\n-   --  used by the compiler itself is in use. The default values are suitable\n-   --  for use by the compiler itself in normal environments. This approach\n-   --  allows the possibility of new versions of the compiler (possibly with\n-   --  new system parameters added) being used to compile older versions of\n-   --  the compiler sources. This is not guaranteed to work, but often will\n-   --  and by setting appropriate default values, we make it more likely that\n-   --  this can succeed.\n-\n-   Compiler_System_Version : Boolean := True;\n-   --  This is set False in all target dependent versions of System. In the\n-   --  compiler default version, it is omitted entirely, meaning that the\n-   --  above default value of True will be set. If the flag is False, then\n-   --  the scanning circuits in the body of this package do an error check to\n-   --  ensure that all parameters other than this one are specified and not\n-   --  defaulted. If the parameter is set True, then this check is omitted,\n-   --  and any parameters not present in system.ads are left set to their\n-   --  default value as described above.\n+   --  This should normally happen if the special version of system.ads used\n+   --  by the compiler itself is in use or if the value is only relevant to\n+   --  a particular target (e.g. OpenVMS, AAMP). The default values are\n+   --  suitable for use in normal environments. This approach allows the\n+   --  possibility of new versions of the compiler (possibly with new system\n+   --  parameters added) being used to compile older versions of the compiler\n+   --  sources, as well as avoiding duplicating values in all system-*.ads\n+   --  files for flags that are used on a few platforms only.\n \n    ----------------------------\n    -- Special Target Control --\n@@ -220,6 +211,10 @@ package Targparm is\n    OpenVMS_On_Target : Boolean := False;\n    --  Set to True if target is OpenVMS\n \n+   type Virtual_Machine_Kind is (No_VM, JVM_Target, CLI_Target);\n+   VM_Target : Virtual_Machine_Kind := No_VM;\n+   --  Kind of virtual machine targetted\n+\n    -------------------------------\n    -- Backend Arithmetic Checks --\n    -------------------------------"}]}