{"sha": "843b691524dbbb03fdcc541d2cfadb9f5ed84342", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzYjY5MTUyNGRiYmIwM2ZkY2M1NDFkMmNmYWRiOWY1ZWQ4NDM0Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-04T10:05:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-04T10:05:20Z"}, "message": "re PR target/48860 (r173265 breaks bootstrap on x86_64-apple-darwin10)\n\n\tPR target/48860\n\t* config/i386/i386.md (*movdi_internal_rex64) Use %vmovd\n\tfor reg<->xmm moves.\n\t* config/i386/sse.md (*vec_concatv2di_rex64_sse4_1): Ditto.\n\t(vec_concatv2di_rex64_sse): Ditto.\n\t(*sse2_storeq_rex64): Do not emit %v prefix for mov{q} mnemonic.\n\t(*vec_extractv2di_1_rex64): Ditto.\n\n\tRevert:\n\t2011-05-02  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/i386/mmx.md (*mov<mode>_internal_rex64): Use %vmovq for\n\treg<->xmm moves.\n\t(*movv2sf_internal_rex64): Use %vmovq for reg<->xmm moves.\n\nFrom-SVN: r173361", "tree": {"sha": "ec6539e73094a4957ad4096496df6faa4479a72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec6539e73094a4957ad4096496df6faa4479a72f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/843b691524dbbb03fdcc541d2cfadb9f5ed84342", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843b691524dbbb03fdcc541d2cfadb9f5ed84342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/843b691524dbbb03fdcc541d2cfadb9f5ed84342", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843b691524dbbb03fdcc541d2cfadb9f5ed84342/comments", "author": null, "committer": null, "parents": [{"sha": "fbcf0dcae3e74f3f82e5aefef116c9d4f96bc48f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbcf0dcae3e74f3f82e5aefef116c9d4f96bc48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbcf0dcae3e74f3f82e5aefef116c9d4f96bc48f"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "97c6bcb1cfd19fb65aab66f6a8c1c45c5ee31848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=843b691524dbbb03fdcc541d2cfadb9f5ed84342", "patch": "@@ -1,3 +1,20 @@\n+2011-05-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/48860\n+\t* config/i386/i386.md (*movdi_internal_rex64) Use %vmovd\n+\tfor reg<->xmm moves.\n+\t* config/i386/sse.md (*vec_concatv2di_rex64_sse4_1): Ditto.\n+\t(vec_concatv2di_rex64_sse): Ditto.\n+\t(*sse2_storeq_rex64): Do not emit %v prefix for mov{q} mnemonic.\n+\t(*vec_extractv2di_1_rex64): Ditto.\n+\n+\tRevert:\n+\t2011-05-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (*mov<mode>_internal_rex64): Use %vmovq for\n+\treg<->xmm moves.\n+\t(*movv2sf_internal_rex64): Use %vmovq for reg<->xmm moves.\n+\n 2011-05-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.h (int_const_binop): Remove notrunc argument.\n@@ -79,8 +96,7 @@\n \t* config/mips/mips.h (enum mips_code_readable_setting): Move to\n \tmips-opts.h.\n \t(mips_abi, mips_code_readable): Don't declare.\n-\t* config/mips/mips.opt (config/mips/mips-opts.h): New\n-\tHeaderInclude.\n+\t* config/mips/mips.opt (config/mips/mips-opts.h): New HeaderInclude.\n \t(mabi=): Use Enum and Var.\n \t(mips_abi): New Enum and EnumValue entries.\n \t(mcode-readable=): Use Enum and Var."}, {"sha": "3b9b7f562520bac21eea2f8b923b62bb584630d7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=843b691524dbbb03fdcc541d2cfadb9f5ed84342", "patch": "@@ -2001,11 +2001,13 @@\n     case TYPE_SSEMOV:\n       if (get_attr_mode (insn) == MODE_TI)\n \treturn \"%vmovdqa\\t{%1, %0|%0, %1}\";\n+      /* Handle broken assemblers that reqire movd instead of movq.  */\n+      if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n+\treturn \"%vmovd\\t{%1, %0|%0, %1}\";\n       return \"%vmovq\\t{%1, %0|%0, %1}\";\n \n     case TYPE_MMXMOV:\n-      /* Moves from and into integer register is done using movd\n-\t opcode with REX prefix.  */\n+      /* Handle broken assemblers that reqire movd instead of movq.  */\n       if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n \treturn \"movd\\t{%1, %0|%0, %1}\";\n       return \"movq\\t{%1, %0|%0, %1}\";\n@@ -3018,7 +3020,8 @@\n \n     case 11:\n     case 12:\n-    return \"%vmovd\\t{%1, %0|%0, %1}\";\n+      /* Handle broken assemblers that reqire movd instead of movq.  */\n+      return \"%vmovd\\t{%1, %0|%0, %1}\";\n \n     default:\n       gcc_unreachable();\n@@ -3494,12 +3497,13 @@\n \n     case 9: case 10: case 14: case 15:\n       return \"movd\\t{%1, %0|%0, %1}\";\n-    case 12: case 13:\n-      return \"%vmovd\\t{%1, %0|%0, %1}\";\n \n     case 11:\n       return \"movq\\t{%1, %0|%0, %1}\";\n \n+    case 12: case 13:\n+      return \"%vmovd\\t{%1, %0|%0, %1}\";\n+\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "fc3b8a9c2cf65984e2bc442a92631cabf86685aa", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=843b691524dbbb03fdcc541d2cfadb9f5ed84342", "patch": "@@ -63,6 +63,7 @@\n   DONE;\n })\n \n+;; movd instead of movq is required to handle broken assemblers.\n (define_insn \"*mov<mode>_internal_rex64\"\n   [(set (match_operand:MMXMODEI8 0 \"nonimmediate_operand\"\n \t \"=rm,r,!?y,!y,!?y,m  ,!y ,*Y2,x,x ,m,r ,Yi\")\n@@ -82,8 +83,8 @@\n     %vpxor\\t%0, %d0\n     %vmovq\\t{%1, %0|%0, %1}\n     %vmovq\\t{%1, %0|%0, %1}\n-    %vmovq\\t{%1, %0|%0, %1}\n-    %vmovq\\t{%1, %0|%0, %1}\"\n+    %vmovd\\t{%1, %0|%0, %1}\n+    %vmovd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"imov,imov,mmx,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,ssemov,ssemov\")\n    (set_attr \"unit\" \"*,*,*,*,*,*,mmx,mmx,*,*,*,*,*\")\n    (set_attr \"prefix_rep\" \"*,*,*,*,*,*,1,1,*,1,*,*,*\")\n@@ -155,6 +156,7 @@\n   DONE;\n })\n \n+;; movd instead of movq is required to handle broken assemblers.\n (define_insn \"*movv2sf_internal_rex64\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n \t \"=rm,r,!?y,!y,!?y,m  ,!y ,*Y2,x,x,x,m,r ,Yi\")\n@@ -175,8 +177,8 @@\n     %vmovaps\\t{%1, %0|%0, %1}\n     %vmovlps\\t{%1, %d0|%d0, %1}\n     %vmovlps\\t{%1, %0|%0, %1}\n-    %vmovq\\t{%1, %0|%0, %1}\n-    %vmovq\\t{%1, %0|%0, %1}\"\n+    %vmovd\\t{%1, %0|%0, %1}\n+    %vmovd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"imov,imov,mmx,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,sselog1,ssemov,ssemov,ssemov,ssemov\")\n    (set_attr \"unit\" \"*,*,*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"prefix_rep\" \"*,*,*,*,*,*,1,1,*,*,*,*,*,*\")"}, {"sha": "99dfeab62d93c6aedab95f377c6560133671bf4b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843b691524dbbb03fdcc541d2cfadb9f5ed84342/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=843b691524dbbb03fdcc541d2cfadb9f5ed84342", "patch": "@@ -6479,9 +6479,8 @@\n   \"@\n    #\n    #\n-   %vmov{q}\\t{%1, %0|%0, %1}\"\n+   mov{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"*,*,imov\")\n-   (set_attr \"prefix\" \"*,*,maybe_vex\")\n    (set_attr \"mode\" \"*,*,DI\")])\n \n (define_insn \"*sse2_storeq\"\n@@ -6516,12 +6515,12 @@\n    psrldq\\t{$8, %0|%0, 8}\n    vpsrldq\\t{$8, %1, %0|%0, %1, 8}\n    %vmovq\\t{%H1, %0|%0, %H1}\n-   %vmov{q}\\t{%H1, %0|%0, %H1}\"\n+   mov{q}\\t{%H1, %0|%0, %H1}\"\n   [(set_attr \"isa\" \"base,noavx,avx,base,base\")\n    (set_attr \"type\" \"ssemov,sseishft1,sseishft1,ssemov,imov\")\n    (set_attr \"length_immediate\" \"*,1,1,*,*\")\n    (set_attr \"memory\" \"*,none,none,*,*\")\n-   (set_attr \"prefix\" \"maybe_vex,orig,vex,maybe_vex,maybe_vex\")\n+   (set_attr \"prefix\" \"maybe_vex,orig,vex,maybe_vex,orig\")\n    (set_attr \"mode\" \"V2SF,TI,TI,TI,DI\")])\n \n (define_insn \"*vec_extractv2di_1_sse2\"\n@@ -6687,6 +6686,7 @@\n   [(set_attr \"type\" \"sselog,ssemov,ssemov\")\n    (set_attr \"mode\" \"TI,V4SF,V2SF\")])\n \n+;; movd instead of movq is required to handle broken assemblers.\n (define_insn \"*vec_concatv2di_rex64_sse4_1\"\n   [(set (match_operand:V2DI 0 \"register_operand\"\n \t  \"=x, x, x,Yi,!x,x,x,x,x\")\n@@ -6700,7 +6700,7 @@\n    pinsrq\\t{$0x1, %2, %0|%0, %2, 0x1}\n    vpinsrq\\t{$0x1, %2, %1, %0|%0, %1, %2, 0x1}\n    %vmovq\\t{%1, %0|%0, %1}\n-   %vmovq\\t{%1, %0|%0, %1}\n+   %vmovd\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}\n    vpunpcklqdq\\t{%2, %1, %0|%0, %1, %2}\n@@ -6719,6 +6719,7 @@\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,maybe_vex,orig,orig,vex,orig,vex\")\n    (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,TI,V2SF,V2SF\")])\n \n+;; movd instead of movq is required to handle broken assemblers.\n (define_insn \"*vec_concatv2di_rex64_sse\"\n   [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2,Yi,!Y2,Y2,x,x\")\n \t(vec_concat:V2DI\n@@ -6727,7 +6728,7 @@\n   \"TARGET_64BIT && TARGET_SSE\"\n   \"@\n    movq\\t{%1, %0|%0, %1}\n-   movq\\t{%1, %0|%0, %1}\n+   movd\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}\n    movlhps\\t{%2, %0|%0, %2}"}]}