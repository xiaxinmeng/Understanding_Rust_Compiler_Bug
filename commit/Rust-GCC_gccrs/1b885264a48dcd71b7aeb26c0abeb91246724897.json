{"sha": "1b885264a48dcd71b7aeb26c0abeb91246724897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4ODUyNjRhNDhkY2Q3MWI3YWViMjZjMGFiZWI5MTI0NjcyNDg5Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-07T22:27:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-08T12:51:57Z"}, "message": "x86-64: Use R10 for profiling large model\n\nR10 is caller-saved.  Although it can be used as a static chain register,\nit is preserved when calling mcount for nested functions.  Use R10 as a\nscratch register to call mcount in large model.\n\ngcc/\n\n\tPR target/98482\n\t* config/i386/i386.c (x86_function_profiler): Use R10 to call\n\tmcount in large model.  Sorry for large model with PIC.\n\ngcc/testsuite/\n\n\tPR target/98482\n\t* gcc.target/i386/pr98482-1.c: New test.\n\t* gcc.target/i386/pr98482-1.c: Likewise.", "tree": {"sha": "312f19cb7205606a2260efd56bfd81ec7c1fb59f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/312f19cb7205606a2260efd56bfd81ec7c1fb59f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b885264a48dcd71b7aeb26c0abeb91246724897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b885264a48dcd71b7aeb26c0abeb91246724897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b885264a48dcd71b7aeb26c0abeb91246724897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b885264a48dcd71b7aeb26c0abeb91246724897/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1cb70d7ca6a8da7f6bc7f43fb5e758c0ce88b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1cb70d7ca6a8da7f6bc7f43fb5e758c0ce88b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1cb70d7ca6a8da7f6bc7f43fb5e758c0ce88b5"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "d3068462fcd4f06aa89df1f459e8fde9a58c815b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b885264a48dcd71b7aeb26c0abeb91246724897/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b885264a48dcd71b7aeb26c0abeb91246724897/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1b885264a48dcd71b7aeb26c0abeb91246724897", "patch": "@@ -20794,8 +20794,30 @@ x86_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n       fprintf (file, \"\\tleaq\\t%sP%d(%%rip),%%r11\\n\", LPREFIX, labelno);\n #endif\n \n-      if (!TARGET_PECOFF && flag_pic)\n-\tfprintf (file, \"1:\\tcall\\t*%s@GOTPCREL(%%rip)\\n\", mcount_name);\n+      if (!TARGET_PECOFF)\n+\t{\n+\t  switch (ix86_cmodel)\n+\t    {\n+\t    case CM_LARGE:\n+\t      /* NB: R10 is caller-saved.  Although it can be used as a\n+\t\t static chain register, it is preserved when calling\n+\t\t mcount for nested functions.  */\n+\t      fprintf (file, \"1:\\tmovabsq\\t$%s, %%r10\\n\\tcall\\t*%%r10\\n\",\n+\t\t       mcount_name);\n+\t      break;\n+\t    case CM_LARGE_PIC:\n+\t      sorry (\"profiling %<-mcmodel=large%> with PIC is not supported\");\n+\t      break;\n+\t    case CM_SMALL_PIC:\n+\t    case CM_MEDIUM_PIC:\n+\t      fprintf (file, \"1:\\tcall\\t*%s@GOTPCREL(%%rip)\\n\",\n+\t\t       mcount_name);\n+\t      break;\n+\t    default:\n+\t      x86_print_call_or_nop (file, mcount_name);\n+\t      break;\n+\t    }\n+\t}\n       else\n \tx86_print_call_or_nop (file, mcount_name);\n     }"}, {"sha": "72d5ccb269c2cc38b5b93e37fbfde89db8d82d31", "filename": "gcc/testsuite/gcc.target/i386/pr98482-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b885264a48dcd71b7aeb26c0abeb91246724897/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b885264a48dcd71b7aeb26c0abeb91246724897/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-1.c?ref=1b885264a48dcd71b7aeb26c0abeb91246724897", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { *-*-linux* && { ! ia32 } } } } */\n+/* { dg-require-effective-target mfentry } */\n+/* { dg-options \"-fprofile -mfentry -O2 -mcmodel=large\" } */\n+/* { dg-final { scan-assembler \"movabsq\\t\\\\\\$__fentry__, %r10\\n\\tcall\\t\\\\*%r10\" } } */\n+\n+void\n+func (void)\n+{\n+}"}, {"sha": "aed3ca4b6ff1b553c23028b06f9666b30a56c406", "filename": "gcc/testsuite/gcc.target/i386/pr98482-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b885264a48dcd71b7aeb26c0abeb91246724897/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b885264a48dcd71b7aeb26c0abeb91246724897/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-2.c?ref=1b885264a48dcd71b7aeb26c0abeb91246724897", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { *-*-linux* && { ! ia32 } } } } */\n+/* { dg-require-effective-target mfentry } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-fpic -fprofile -mfentry -O2 -mcmodel=large\" } */\n+\n+void\n+func (void)\n+{\n+} /* { dg-message \"sorry, unimplemented: profiling '-mcmodel=large' with PIC is not supported\" } */"}]}