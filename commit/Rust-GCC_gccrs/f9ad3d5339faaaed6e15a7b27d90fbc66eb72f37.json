{"sha": "f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlhZDNkNTMzOWZhYWFlZDZlMTVhN2IyN2Q5MGZiYzY2ZWI3MmYzNw==", "commit": {"author": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2021-08-03T00:12:04Z"}, "committer": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2021-08-03T21:25:47Z"}, "message": "Fixes for AutoFDO tests\n\n* Changed several tests to use -fdump-ipa-afdo-optimized instead of -fdump-ipa-afdo\nin dg-options so that the expected output can be found\n\n* Increased the number of iterations in several tests so that perf can have\nenough sampling events\n\nContributes to fixing PR gcov-profile/71672.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/tree-prof/indir-call-prof.C: Fix options, increase the number of iterations.\n\t* g++.dg/tree-prof/morefunc.C: Fix options, increase the number of iterations.\n\t* g++.dg/tree-prof/reorder.C: Fix options, increase the number of iterations.\n\t* gcc.dg/tree-prof/indir-call-prof-2.c: Fix options, increase the number of iterations.\n\t* gcc.dg/tree-prof/indir-call-prof.c: Fix options.", "tree": {"sha": "66f41e2162aab83c0fafdd1229b84b0b91cee7a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66f41e2162aab83c0fafdd1229b84b0b91cee7a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/comments", "author": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aabf07cd5dc314135adde89830a86be157d7596b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aabf07cd5dc314135adde89830a86be157d7596b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aabf07cd5dc314135adde89830a86be157d7596b"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "b45417106d0f751cab5cff62cd0be6568cd303a2", "filename": "gcc/testsuite/g++.dg/tree-prof/indir-call-prof.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C?ref=f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized -fdump-ipa-afdo\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized -fdump-ipa-afdo-optimized\" } */\n \n struct A {\n   A () {}\n@@ -26,7 +26,7 @@ main (void)\n \n   int i;\n \n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < 10000000; i++)\n     {\n       p = (A *)wrap ((void *)&a);\n       p->AA ();"}, {"sha": "96e0073ca8f9b1b61f2bc073f0a733d66e1c025e", "filename": "gcc/testsuite/g++.dg/tree-prof/morefunc.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C?ref=f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile-optimized -fdump-ipa-afdo -Wno-attributes -Wno-coverage-mismatch -Wno-missing-profile\" } */\n+/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile-optimized -fdump-ipa-afdo-optimized -Wno-attributes -Wno-coverage-mismatch -Wno-missing-profile\" } */\n+\n #include \"reorder_class1.h\"\n #include \"reorder_class2.h\"\n \n@@ -19,7 +20,7 @@ static __attribute__((always_inline))\n void test1 (A *tc)\n {\n   int i;\n-  for (i = 0; i < 1000; i++)\n+  for (i = 0; i < 10000000; i++)\n      g += tc->foo(); \n    if (g<100) g++;\n }\n@@ -28,7 +29,7 @@ static __attribute__((always_inline))\n void test2 (B *tc)\n {\n   int i;\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < 10000000; i++)\n      g += tc->foo();\n }\n "}, {"sha": "504909633698834ea5e20460c83ff775339ca4cd", "filename": "gcc/testsuite/g++.dg/tree-prof/reorder.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C?ref=f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile-optimized -fdump-ipa-afdo -Wno-coverage-mismatch -Wno-attributes\" } */\n+/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile-optimized -fdump-ipa-afdo-optimized -Wno-coverage-mismatch -Wno-attributes\" } */\n \n #ifdef _PROFILE_USE\n #include \"reorder_class1.h\"\n@@ -13,7 +13,7 @@ static __attribute__((always_inline))\n void test1 (A *tc)\n {\n   int i;\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < 10000000; i++)\n      g += tc->foo(); \n    if (g<100) g++;\n }\n@@ -22,7 +22,7 @@ static __attribute__((always_inline))\n void test2 (B *tc)\n {\n   int i;\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < 10000000; i++)\n      g += tc->foo();\n }\n "}, {"sha": "258532654223ac2678c31472ab11f928e98995e9", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c?ref=f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "patch": "@@ -22,7 +22,7 @@ int\n main (void)\n {\n   int i, val = 0;\n-  for (i = 0; i < 100000; i++)\n+  for (i = 0; i < 10000000; i++)\n     {\n       val = do_op (val, add1);\n       val = do_op (val, sub1);"}, {"sha": "702045239f3f383ccb652ba35d7a495e2dd6e334", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c?ref=f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized -fdump-ipa-afdo\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized -fdump-ipa-afdo-optimized\" } */\n \n static int a1 (void)\n {"}]}