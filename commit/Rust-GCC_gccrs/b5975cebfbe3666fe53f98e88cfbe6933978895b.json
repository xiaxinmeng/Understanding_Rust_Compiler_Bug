{"sha": "b5975cebfbe3666fe53f98e88cfbe6933978895b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU5NzVjZWJmYmUzNjY2ZmU1M2Y5OGU4OGNmYmU2OTMzOTc4ODk1Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-08-05T03:11:17Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-08-05T03:11:17Z"}, "message": "re PR go/61308 (gccgo: ICE in Expression::check_bounds [GoSmith])\n\n\tPR go/61308\n\ncompiler: Handle enclosing vars for function type in function lit.\n\nThis fixes a dumb bug in which the enclosing vars were\nincorrectly cleared when a function literal contains a\nreference to a function type.  The test for this will go into\nthe master repository in the change at\nhttp://codereview.appspot.com/121200043 .\n\nFrom-SVN: r213618", "tree": {"sha": "915b12a29efd7e317841857d2c7277c76f9f8f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/915b12a29efd7e317841857d2c7277c76f9f8f91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5975cebfbe3666fe53f98e88cfbe6933978895b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5975cebfbe3666fe53f98e88cfbe6933978895b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5975cebfbe3666fe53f98e88cfbe6933978895b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5975cebfbe3666fe53f98e88cfbe6933978895b/comments", "author": null, "committer": null, "parents": [{"sha": "6e4f9a957e22aaed58cf628e34d420fdfa21a3d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4f9a957e22aaed58cf628e34d420fdfa21a3d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e4f9a957e22aaed58cf628e34d420fdfa21a3d8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fd54edfadfa93fa398a9036ce5576acccc21e46a", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5975cebfbe3666fe53f98e88cfbe6933978895b/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5975cebfbe3666fe53f98e88cfbe6933978895b/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=b5975cebfbe3666fe53f98e88cfbe6933978895b", "patch": "@@ -2870,7 +2870,10 @@ Parse::function_lit()\n   // For a function literal, the next token must be a '{'.  If we\n   // don't see that, then we may have a type expression.\n   if (!this->peek_token()->is_op(OPERATOR_LCURLY))\n-    return Expression::make_type(type, location);\n+    {\n+      hold_enclosing_vars.swap(this->enclosing_vars_);\n+      return Expression::make_type(type, location);\n+    }\n \n   bool hold_is_erroneous_function = this->is_erroneous_function_;\n   if (fntype_is_error)"}]}