{"sha": "04c452f40ba95e15a76762e4bb5767d15cf8b322", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRjNDUyZjQwYmE5NWUxNWE3Njc2MmU0YmI1NzY3ZDE1Y2Y4YjMyMg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2016-12-02T14:31:10Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-12-02T14:31:10Z"}, "message": "[Patch 2/2 PR78561] Recalculate constant pool size before emitting it\n\ngcc/\n\n\tPR rtl-optimization/78561\n\t* varasm.c (recompute_pool_offsets): New.\n\t(output_constant_pool): Call it.\n\ngcc/testsuite/\n\n\tPR rtl-optimization/78561\n\t* gcc.target/aarch64/pr78561.c: New.\n\nFrom-SVN: r243183", "tree": {"sha": "0805d0e50f69a67e6af48f94b97693ba9dfc5282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0805d0e50f69a67e6af48f94b97693ba9dfc5282"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04c452f40ba95e15a76762e4bb5767d15cf8b322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04c452f40ba95e15a76762e4bb5767d15cf8b322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04c452f40ba95e15a76762e4bb5767d15cf8b322", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04c452f40ba95e15a76762e4bb5767d15cf8b322/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "474bbda1675d35ab6f78ffdf20ee091f8402d185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474bbda1675d35ab6f78ffdf20ee091f8402d185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474bbda1675d35ab6f78ffdf20ee091f8402d185"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "92501fc213cc314ca05a8c1f425ff6ae901aa687", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c452f40ba95e15a76762e4bb5767d15cf8b322/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c452f40ba95e15a76762e4bb5767d15cf8b322/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04c452f40ba95e15a76762e4bb5767d15cf8b322", "patch": "@@ -1,3 +1,9 @@\n+2016-12-02  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\tPR rtl-optimization/78561\n+\t* varasm.c (recompute_pool_offsets): New.\n+\t(output_constant_pool): Call it.\n+\n 2016-12-02  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \tPR rtl-optimization/78561"}, {"sha": "99708060b38ff6981b1e7cd09ba73e2e460a63cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c452f40ba95e15a76762e4bb5767d15cf8b322/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c452f40ba95e15a76762e4bb5767d15cf8b322/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04c452f40ba95e15a76762e4bb5767d15cf8b322", "patch": "@@ -1,3 +1,8 @@\n+2016-12-02  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\tPR rtl-optimization/78561\n+\t* gcc.target/aarch64/pr78561.c: New.\n+\n 2016-12-02  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/fold-bopcond-1.c: New test."}, {"sha": "f3cd70aecca4a3026a0f8f76a681f8856e4255d2", "filename": "gcc/varasm.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c452f40ba95e15a76762e4bb5767d15cf8b322/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c452f40ba95e15a76762e4bb5767d15cf8b322/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=04c452f40ba95e15a76762e4bb5767d15cf8b322", "patch": "@@ -3942,6 +3942,29 @@ output_constant_pool_1 (struct constant_descriptor_rtx *desc,\n   return;\n }\n \n+/* Recompute the offsets of entries in POOL, and the overall size of\n+   POOL.  Do this after calling mark_constant_pool to ensure that we\n+   are computing the offset values for the pool which we will actually\n+   emit.  */\n+\n+static void\n+recompute_pool_offsets (struct rtx_constant_pool *pool)\n+{\n+  struct constant_descriptor_rtx *desc;\n+  pool->offset = 0;\n+\n+  for (desc = pool->first; desc ; desc = desc->next)\n+    if (desc->mark)\n+      {\n+\t  /* Recalculate offset.  */\n+\tunsigned int align = desc->align;\n+\tpool->offset += (align / BITS_PER_UNIT) - 1;\n+\tpool->offset &= ~ ((align / BITS_PER_UNIT) - 1);\n+\tdesc->offset = pool->offset;\n+\tpool->offset += GET_MODE_SIZE (desc->mode);\n+      }\n+}\n+\n /* Mark all constants that are referenced by SYMBOL_REFs in X.\n    Emit referenced deferred strings.  */\n \n@@ -4060,6 +4083,11 @@ output_constant_pool (const char *fnname ATTRIBUTE_UNUSED,\n      case we do not need to output the constant.  */\n   mark_constant_pool ();\n \n+  /* Having marked the constant pool entries we'll actually emit, we\n+     now need to rebuild the offset information, which may have become\n+     stale.  */\n+  recompute_pool_offsets (pool);\n+\n #ifdef ASM_OUTPUT_POOL_PROLOGUE\n   ASM_OUTPUT_POOL_PROLOGUE (asm_out_file, fnname, fndecl, pool->offset);\n #endif"}]}