{"sha": "815f15d3384edbdd73cc54536f30947e15183151", "node_id": "C_kwDOANBUbNoAKDgxNWYxNWQzMzg0ZWRiZGQ3M2NjNTQ1MzZmMzA5NDdlMTUxODMxNTE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-18T09:30:55Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-18T11:12:29Z"}, "message": "gcov: return proper exit code when error happens\n\n\tPR gcov-profile/102746\n\tPR gcov-profile/102747\n\ngcc/ChangeLog:\n\n\t* gcov.c (main): Return return_code.\n\t(output_gcov_file): Mark return_code when error happens.\n\t(generate_results): Likewise.\n\t(read_graph_file): Likewise.\n\t(read_count_file): Likewise.", "tree": {"sha": "fe5edbc009661648b0dc8f32287df17a36d43e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe5edbc009661648b0dc8f32287df17a36d43e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/815f15d3384edbdd73cc54536f30947e15183151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815f15d3384edbdd73cc54536f30947e15183151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815f15d3384edbdd73cc54536f30947e15183151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815f15d3384edbdd73cc54536f30947e15183151/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fecda57e60488d15a180b8dde02cf7a4d978ebc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fecda57e60488d15a180b8dde02cf7a4d978ebc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fecda57e60488d15a180b8dde02cf7a4d978ebc7"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "34f53ac2d787d713533b8ba3d2899b2f5382598b", "filename": "gcc/gcov.c", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815f15d3384edbdd73cc54536f30947e15183151/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815f15d3384edbdd73cc54536f30947e15183151/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=815f15d3384edbdd73cc54536f30947e15183151", "patch": "@@ -638,6 +638,9 @@ static int flag_preserve_paths = 0;\n \n static int flag_counts = 0;\n \n+/* Return code of the tool invocation.  */\n+static int return_code = 0;\n+\n /* Forward declarations.  */\n static int process_args (int, char **);\n static void print_usage (int) ATTRIBUTE_NORETURN;\n@@ -907,7 +910,7 @@ main (int argc, char **argv)\n   if (!flag_use_stdout)\n     executed_summary (total_lines, total_executed);\n \n-  return 0;\n+  return return_code;\n }\n \f\n /* Print a usage message and exit.  If ERROR_P is nonzero, this is an error,\n@@ -1467,12 +1470,18 @@ output_gcov_file (const char *file_name, source_info *src)\n \t  fnotice (stdout, \"Creating '%s'\\n\", gcov_file_name);\n \t  output_lines (gcov_file, src);\n \t  if (ferror (gcov_file))\n-\t    fnotice (stderr, \"Error writing output file '%s'\\n\",\n-\t\t     gcov_file_name);\n+\t    {\n+\t      fnotice (stderr, \"Error writing output file '%s'\\n\",\n+\t\t       gcov_file_name);\n+\t      return_code = 6;\n+\t    }\n \t  fclose (gcov_file);\n \t}\n       else\n-\tfnotice (stderr, \"Could not open output file '%s'\\n\", gcov_file_name);\n+\t{\n+\t  fnotice (stderr, \"Could not open output file '%s'\\n\", gcov_file_name);\n+\t  return_code = 6;\n+\t}\n     }\n   else\n     {\n@@ -1594,6 +1603,7 @@ generate_results (const char *file_name)\n \t    {\n \t      fnotice (stderr, \"Cannot open JSON output file %s\\n\",\n \t\t       gcov_intermediate_filename.c_str ());\n+\t      return_code = 6;\n \t      return;\n \t    }\n \n@@ -1602,6 +1612,7 @@ generate_results (const char *file_name)\n \t    {\n \t      fnotice (stderr, \"Error writing JSON output file %s\\n\",\n \t\t       gcov_intermediate_filename.c_str ());\n+\t      return_code = 6;\n \t      return;\n \t    }\n \t}\n@@ -1790,12 +1801,14 @@ read_graph_file (void)\n   if (!gcov_open (bbg_file_name, 1))\n     {\n       fnotice (stderr, \"%s:cannot open notes file\\n\", bbg_file_name);\n+      return_code = 1;\n       return;\n     }\n   bbg_file_time = gcov_time ();\n   if (!gcov_magic (gcov_read_unsigned (), GCOV_NOTE_MAGIC))\n     {\n       fnotice (stderr, \"%s:not a gcov notes file\\n\", bbg_file_name);\n+      return_code = 2;\n       gcov_close ();\n       return;\n     }\n@@ -1810,6 +1823,7 @@ read_graph_file (void)\n \n       fnotice (stderr, \"%s:version '%.4s', prefer '%.4s'\\n\",\n \t       bbg_file_name, v, e);\n+      return_code = 3;\n     }\n   bbg_stamp = gcov_read_unsigned ();\n   /* Read checksum.  */\n@@ -1977,6 +1991,7 @@ read_graph_file (void)\n \t{\n \tcorrupt:;\n \t  fnotice (stderr, \"%s:corrupted\\n\", bbg_file_name);\n+\t  return_code = 4;\n \t  break;\n \t}\n     }\n@@ -2009,6 +2024,7 @@ read_count_file (void)\n   if (!gcov_magic (gcov_read_unsigned (), GCOV_DATA_MAGIC))\n     {\n       fnotice (stderr, \"%s:not a gcov data file\\n\", da_file_name);\n+      return_code = 2;\n     cleanup:;\n       gcov_close ();\n       return 1;\n@@ -2023,11 +2039,13 @@ read_count_file (void)\n \n       fnotice (stderr, \"%s:version '%.4s', prefer version '%.4s'\\n\",\n \t       da_file_name, v, e);\n+      return_code = 3;\n     }\n   tag = gcov_read_unsigned ();\n   if (tag != bbg_stamp)\n     {\n       fnotice (stderr, \"%s:stamp mismatch with notes file\\n\", da_file_name);\n+      return_code = 5;\n       goto cleanup;\n     }\n \n@@ -2088,6 +2106,7 @@ read_count_file (void)\n \t\t   ? N_(\"%s:overflowed\\n\")\n \t\t   : N_(\"%s:corrupted\\n\"),\n \t\t   da_file_name);\n+\t  return_code = 4;\n \t  goto cleanup;\n \t}\n     }"}]}