{"sha": "53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3MjMxOTBhYTIyNzE2ODZlOWVjOGIzZGQwMzBhNGJkZWViOGExNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-03-15T16:05:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-03-15T16:05:56Z"}, "message": "2002-03-15  Paolo Carlini  <pcarlini@unitus.it>\n\n        * testsuite/22_locale/collate_members_char.cc\n\t(test01): compare the result of collate::compare with\n\tthat of collate::transform + string::compare, not with\n\tthat of collate::transform + collate::compare.\n\t(test01): values returned by collate::compare are\n\tnormalized, therefore test against +-1.\n\t* testsuite/22_locale/collate_members_wchar_t.cc: Ditto.\n\nFrom-SVN: r50808", "tree": {"sha": "ccc21d0899c149b2529476428643acc053447f08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccc21d0899c149b2529476428643acc053447f08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/comments", "author": null, "committer": null, "parents": [{"sha": "190f491640e073c03fbdfa3c4f830331f9e9262b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/190f491640e073c03fbdfa3c4f830331f9e9262b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/190f491640e073c03fbdfa3c4f830331f9e9262b"}], "stats": {"total": 70, "additions": 40, "deletions": 30}, "files": [{"sha": "910c04c1891702e2a01ec6b14ecfc488b51becbe", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "patch": "@@ -1,3 +1,13 @@\n+2002-03-15  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* testsuite/22_locale/collate_members_char.cc\n+\t(test01): compare the result of collate::compare with\n+\tthat of collate::transform + string::compare, not with\n+\tthat of collate::transform + collate::compare.\n+\t(test01): values returned by collate::compare are\n+\tnormalized, therefore test against +-1.\n+\t* testsuite/22_locale/collate_members_wchar_t.cc: Ditto.\n+\n 2002-03-12  Loren Rittle  <ljrittle@acm.org>\n \n \treported by Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>"}, {"sha": "f45ffd9d4aa90a80aa0c29ed1cdddbdccb40fac3", "filename": "libstdc++-v3/testsuite/22_locale/collate_members_char.cc", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate_members_char.cc?ref=53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "patch": "@@ -60,18 +60,18 @@ void test01()\n   int i1;\n   int size1 = strlen(strlit1) - 1;\n   i1 = coll_c.compare(strlit1, strlit1 + size1, strlit1, strlit1 + 7);\n-  VERIFY ( i1 > 0 );\n+  VERIFY ( i1 == 1 );\n   i1 = coll_c.compare(strlit1, strlit1 + 7, strlit1, strlit1 + size1);\n-  VERIFY ( i1 < 0 );\n+  VERIFY ( i1 == -1 );\n   i1 = coll_c.compare(strlit1, strlit1 + 7, strlit1, strlit1 + 7);\n   VERIFY ( i1 == 0 );\n \n   int i2;\n   int size2 = strlen(strlit2) - 1;\n   i2 = coll_c.compare(strlit2, strlit2 + size2, strlit2, strlit2 + 13);\n-  VERIFY ( i2 > 0 );\n+  VERIFY ( i2 == 1 );\n   i2 = coll_c.compare(strlit2, strlit2 + 13, strlit2, strlit2 + size2);\n-  VERIFY ( i2 < 0 );\n+  VERIFY ( i2 == -1 );\n   i2 = coll_c.compare(strlit2, strlit2 + size2, strlit2, strlit2 + size2);\n   VERIFY ( i2 == 0 );\n \n@@ -86,31 +86,31 @@ void test01()\n \n   string str1 = coll_c.transform(strlit1, strlit1 + size1);\n   string str2 = coll_c.transform(strlit2, strlit2 + size2);\n-  i1 = coll_c.compare(str1.c_str(), str1.c_str() + size1,\n-\t\t       str2.c_str(), str2.c_str() + size2);\n+  i1 = str1.compare(str2);\n   i2 = coll_c.compare(strlit1, strlit1 + size1, strlit2, strlit2 + size2);\n-  VERIFY(i1 == i2);\n+  VERIFY ( i2 == 1 );\n+  VERIFY ( i1 * i2 > 0 );\n \n   // Check German \"de_DE\" locale.\n   const char* strlit3 = \"\ufffduglein Augment\"; // \"C\" == \"Augment \ufffduglein\"\n   const char* strlit4 = \"Base ba\ufffd Ba\ufffd Bast\"; // \"C\" == \"Base ba\ufffd Ba\ufffd Bast\"\n \n   int size3 = strlen(strlit3) - 1;\n   i1 = coll_de.compare(strlit3, strlit3 + size3, strlit3, strlit3 + 7);\n-  VERIFY ( i1 > 0 );\n+  VERIFY ( i1 == 1 );\n   i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + size1);\n-  VERIFY ( i1 < 0 );\n+  VERIFY ( i1 == -1 );\n   i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + 7);\n   VERIFY ( i1 == 0 );\n \n   i1 = coll_de.compare(strlit3, strlit3 + 6, strlit3 + 8, strlit3 + 14);\n-  VERIFY ( i1 < 0 );\n+  VERIFY ( i1 == -1 );\n \n   int size4 = strlen(strlit4) - 1;\n   i2 = coll_de.compare(strlit4, strlit4 + size4, strlit4, strlit4 + 13);\n-  VERIFY ( i2 > 0 );\n+  VERIFY ( i2 == 1 );\n   i2 = coll_de.compare(strlit4, strlit4 + 13, strlit4, strlit4 + size4);\n-  VERIFY ( i2 < 0 );\n+  VERIFY ( i2 == -1 );\n   i2 = coll_de.compare(strlit4, strlit4 + size4, strlit4, strlit4 + size4);\n   VERIFY ( i2 == 0 );\n \n@@ -123,10 +123,10 @@ void test01()\n \n   string str3 = coll_de.transform(strlit3, strlit3 + size3);\n   string str4 = coll_de.transform(strlit4, strlit4 + size4);\n-  i1 = coll_de.compare(str3.c_str(), str3.c_str() + size3,\n-\t\t       str4.c_str(), str4.c_str() + size4);\n+  i1 = str3.compare(str4);\n   i2 = coll_de.compare(strlit3, strlit3 + size3, strlit4, strlit4 + size4);\n-  VERIFY(i1 == i2);\n+  VERIFY ( i2 == -1 );\n+  VERIFY ( i1 * i2 > 0 );\n }\n \n // libstdc++/5280"}, {"sha": "5df42fe15d93cef4cbad48cd48980d2d56fc7456", "filename": "libstdc++-v3/testsuite/22_locale/collate_members_wchar_t.cc", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53723190aa2271686e9ec8b3dd030a4bdeeb8a15/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate_members_wchar_t.cc?ref=53723190aa2271686e9ec8b3dd030a4bdeeb8a15", "patch": "@@ -60,18 +60,18 @@ void test01()\n   int i1;\n   int size1 = char_traits<wchar_t>::length(strlit1) - 1;\n   i1 = coll_c.compare(strlit1, strlit1 + size1, strlit1, strlit1 + 7);\n-  VERIFY ( i1 > 0 );\n+  VERIFY ( i1 == 1 );\n   i1 = coll_c.compare(strlit1, strlit1 + 7, strlit1, strlit1 + size1);\n-  VERIFY ( i1 < 0 );\n+  VERIFY ( i1 == -1 );\n   i1 = coll_c.compare(strlit1, strlit1 + 7, strlit1, strlit1 + 7);\n   VERIFY ( i1 == 0 );\n \n   int i2;\n   int size2 = char_traits<wchar_t>::length(strlit2) - 1;\n   i2 = coll_c.compare(strlit2, strlit2 + size2, strlit2, strlit2 + 13);\n-  VERIFY ( i2 > 0 );\n+  VERIFY ( i2 == 1 );\n   i2 = coll_c.compare(strlit2, strlit2 + 13, strlit2, strlit2 + size2);\n-  VERIFY ( i2 < 0 );\n+  VERIFY ( i2 == -1 );\n   i2 = coll_c.compare(strlit2, strlit2 + size2, strlit2, strlit2 + size2);\n   VERIFY ( i2 == 0 );\n \n@@ -86,31 +86,31 @@ void test01()\n \n   wstring str1 = coll_c.transform(strlit1, strlit1 + size1);\n   wstring str2 = coll_c.transform(strlit2, strlit2 + size2);\n-  i1 = coll_c.compare(str1.c_str(), str1.c_str() + size1,\n-\t\t      str2.c_str(), str2.c_str() + size2);\n+  i1 = str1.compare(str2);\n   i2 = coll_c.compare(strlit1, strlit1 + size1, strlit2, strlit2 + size2);\n-  VERIFY(i1 == i2);\n+  VERIFY ( i2 == 1 );\n+  VERIFY ( i1 * i2 > 0 );\n \n   // Check German \"de_DE\" locale.\n   const wchar_t* strlit3 = L\"\ufffduglein Augment\"; // \"C\" == \"Augment \ufffduglein\"\n   const wchar_t* strlit4 = L\"Base ba\ufffd Ba\ufffd Bast\"; // \"C\" == \"Base ba\ufffd Ba\ufffd Bast\"\n \n   int size3 = char_traits<wchar_t>::length(strlit3) - 1;\n   i1 = coll_de.compare(strlit3, strlit3 + size3, strlit3, strlit3 + 7);\n-  VERIFY ( i1 > 0 );\n+  VERIFY ( i1 == 1 );\n   i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + size1);\n-  VERIFY ( i1 < 0 );\n+  VERIFY ( i1 == -1 );\n   i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + 7);\n   VERIFY ( i1 == 0 );\n \n   i1 = coll_de.compare(strlit3, strlit3 + 6, strlit3 + 8, strlit3 + 14);\n-  VERIFY ( i1 < 0 );\n+  VERIFY ( i1 == -1 );\n \n   int size4 = char_traits<wchar_t>::length(strlit4) - 1;\n   i2 = coll_de.compare(strlit4, strlit4 + size4, strlit4, strlit4 + 13);\n-  VERIFY ( i2 > 0 );\n+  VERIFY ( i2 == 1 );\n   i2 = coll_de.compare(strlit4, strlit4 + 13, strlit4, strlit4 + size4);\n-  VERIFY ( i2 < 0 );\n+  VERIFY ( i2 == -1 );\n   i2 = coll_de.compare(strlit4, strlit4 + size4, strlit4, strlit4 + size4);\n   VERIFY ( i2 == 0 );\n \n@@ -123,10 +123,10 @@ void test01()\n \n   wstring str3 = coll_de.transform(strlit3, strlit3 + size3);\n   wstring str4 = coll_de.transform(strlit4, strlit4 + size4);\n-  i1 = coll_de.compare(str3.c_str(), str3.c_str() + size3,\n-\t\t       str4.c_str(), str4.c_str() + size4);\n+  i1 = str3.compare(str4);\n   i2 = coll_de.compare(strlit3, strlit3 + size3, strlit4, strlit4 + size4);\n-  VERIFY(i1 == i2);\n+  VERIFY ( i2 == -1 );\n+  VERIFY ( i1 * i2 > 0 );\n }\n \n // libstdc++/5280"}]}