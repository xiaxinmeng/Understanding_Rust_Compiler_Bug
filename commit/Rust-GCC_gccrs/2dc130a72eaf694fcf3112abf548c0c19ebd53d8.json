{"sha": "2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRjMTMwYTcyZWFmNjk0ZmNmMzExMmFiZjU0OGMwYzE5ZWJkNTNkOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-06-24T20:41:47Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-06-24T20:41:47Z"}, "message": "[multiple changes]\n\n1999-06-24  Tom Tromey  <tromey@cygnus.com>\n\t* java/lang/e_asin.c: Don't use __int32_t or __uint32_t.\n\t* java/lang/fdlibm.h (HUGE): Conditionally define.\nFri May 28 22:20:03 1999  Anthony Green  <green@cygnus.com>\n\t* java/lang/fdlibm.h: Don't use __uint32_t.  Include mprec.h.\n\t* java/lang/e_log.c: Don't use __uint32_t.\n\nFrom-SVN: r27733", "tree": {"sha": "236886989f945f9aadca4d894a8fec0ec9b77037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/236886989f945f9aadca4d894a8fec0ec9b77037"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/comments", "author": null, "committer": null, "parents": [{"sha": "0d16618c58103a8956b58e7d7476b7262828d93e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d16618c58103a8956b58e7d7476b7262828d93e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d16618c58103a8956b58e7d7476b7262828d93e"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "98b50af0c73be6559c1c564c5e030bf9b215d501", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "patch": "@@ -1,3 +1,8 @@\n+1999-06-24  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* java/lang/e_asin.c: Don't use __int32_t or __uint32_t.\n+\t* java/lang/fdlibm.h (HUGE): Conditionally define.\n+\n Fri May 28 22:20:03 1999  Anthony Green  <green@cygnus.com>\n \n \t* java/lang/fdlibm.h: Don't use __uint32_t.  Include mprec.h."}, {"sha": "6b131e65a266968db0a120609ea87c2aa443776f", "filename": "libjava/java/lang/e_asin.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/libjava%2Fjava%2Flang%2Fe_asin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/libjava%2Fjava%2Flang%2Fe_asin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Fe_asin.c?ref=2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "patch": "@@ -76,11 +76,11 @@ qS4 =  7.70381505559019352791e-02; /* 0x3FB3B8C5, 0xB12E9282 */\n #endif\n {\n \tdouble t,w,p,q,c,r,s;\n-\t__int32_t hx,ix;\n+\tint32_t hx,ix;\n \tGET_HIGH_WORD(hx,x);\n \tix = hx&0x7fffffff;\n \tif(ix>= 0x3ff00000) {\t\t/* |x|>= 1 */\n-\t    __uint32_t lx;\n+\t    uint32_t lx;\n \t    GET_LOW_WORD(lx,x);\n \t    if(((ix-0x3ff00000)|lx)==0)\n \t\t    /* asin(1)=+-pi/2 with inexact */"}, {"sha": "00d43e552384d3c12eacc56f8af87c8e17dfc4df", "filename": "libjava/java/lang/fdlibm.h", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/libjava%2Fjava%2Flang%2Ffdlibm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc130a72eaf694fcf3112abf548c0c19ebd53d8/libjava%2Fjava%2Flang%2Ffdlibm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Ffdlibm.h?ref=2dc130a72eaf694fcf3112abf548c0c19ebd53d8", "patch": "@@ -22,6 +22,8 @@ extern \"C\" {\n /* CYGNUS LOCAL: Include files.  */\n #include \"ieeefp.h\"\n \n+#include \"mprec.h\"\n+\n /* CYGNUS LOCAL: Default to XOPEN_MODE.  */\n #define _XOPEN_MODE\n \n@@ -31,7 +33,9 @@ extern \"C\" {\n #define\t__P(p)\t()\n #endif\n \n+#ifndef HUGE\n #define\tHUGE\t((float)3.40282346638528860e+38)\n+#endif\n \n /* \n  * set X_TLOSS = pi*2**52, which is possibly defined in <values.h>\n@@ -42,11 +46,6 @@ extern \"C\" {\n \n /* These typedefs are true for the targets running Java. */\n \n-#ifndef HAVE_INT32_DEFINED\n-typedef int __int32_t;\n-typedef unsigned int __uint32_t;\n-#endif\n-\n #define _IEEE_LIBM\n \n /*\n@@ -135,7 +134,7 @@ extern double __ieee754_y1 __P((double));\n extern double __ieee754_jn __P((int,double));\n extern double __ieee754_yn __P((int,double));\n extern double __ieee754_remainder __P((double,double));\n-extern __int32_t __ieee754_rem_pio2 __P((double,double*));\n+extern int32_t __ieee754_rem_pio2 __P((double,double*));\n #ifdef _SCALB_INT\n extern double __ieee754_scalb __P((double,int));\n #else\n@@ -147,7 +146,7 @@ extern double __kernel_standard __P((double,double,int));\n extern double __kernel_sin __P((double,double,int));\n extern double __kernel_cos __P((double,double));\n extern double __kernel_tan __P((double,double,int));\n-extern int    __kernel_rem_pio2 __P((double*,double*,int,int,int,const __int32_t*));\n+extern int    __kernel_rem_pio2 __P((double*,double*,int,int,int,const int32_t*));\n \n /* Undocumented float functions.  */\n extern float logbf __P((float));\n@@ -191,7 +190,7 @@ extern float __ieee754_y1f __P((float));\n extern float __ieee754_jnf __P((int,float));\n extern float __ieee754_ynf __P((int,float));\n extern float __ieee754_remainderf __P((float,float));\n-extern __int32_t __ieee754_rem_pio2f __P((float,float*));\n+extern int32_t __ieee754_rem_pio2f __P((float,float*));\n #ifdef _SCALB_INT\n extern float __ieee754_scalbf __P((float,int));\n #else\n@@ -202,7 +201,7 @@ extern float __ieee754_scalbf __P((float,float));\n extern float __kernel_sinf __P((float,float,int));\n extern float __kernel_cosf __P((float,float));\n extern float __kernel_tanf __P((float,float,int));\n-extern int   __kernel_rem_pio2f __P((float*,float*,int,int,int,const __int32_t*));\n+extern int   __kernel_rem_pio2f __P((float*,float*,int,int,int,const int32_t*));\n \n /* The original code used statements like\n \tn0 = ((*(int*)&one)>>29)^1;\t\t* index of high word *\n@@ -231,8 +230,8 @@ typedef union\n   double value;\n   struct \n   {\n-    __uint32_t msw;\n-    __uint32_t lsw;\n+    uint32_t msw;\n+    uint32_t lsw;\n   } parts;\n } ieee_double_shape_type;\n \n@@ -245,8 +244,8 @@ typedef union\n   double value;\n   struct \n   {\n-    __uint32_t lsw;\n-    __uint32_t msw;\n+    uint32_t lsw;\n+    uint32_t msw;\n   } parts;\n } ieee_double_shape_type;\n \n@@ -316,7 +315,7 @@ do {\t\t\t\t\t\t\t\t\\\n typedef union\n {\n   float value;\n-  __uint32_t word;\n+  uint32_t word;\n } ieee_float_shape_type;\n \n /* Get a 32 bit int from a float.  */"}]}