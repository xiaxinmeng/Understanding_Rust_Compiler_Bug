{"sha": "ddb92ab95f6ba681423ba55db9910821735544c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiOTJhYjk1ZjZiYTY4MTQyM2JhNTVkYjk5MTA4MjE3MzU1NDRjMQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-10-27T10:19:27Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-10-27T10:19:27Z"}, "message": "Enable ARMv8-M atomic and synchronization support for ARMv8-M Baseline\n\n2016-10-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.h (TARGET_HAVE_LDREX): Define for ARMv8-M Baseline.\n    (TARGET_HAVE_LDREXBH): Likewise.\n    (TARGET_HAVE_LDACQ): Likewise.\n\n    gcc/testsuite/\n    * gcc.target/arm/atomic-comp-swap-release-acquire-3.c: New test.\n    * gcc.target/arm/atomic-op-acq_rel-3.c: Likewise.\n    * gcc.target/arm/atomic-op-acquire-3.c: Likewise.\n    * gcc.target/arm/atomic-op-char-3.c: Likewise.\n    * gcc.target/arm/atomic-op-consume-3.c: Likewise.\n    * gcc.target/arm/atomic-op-int-3.c: Likewise.\n    * gcc.target/arm/atomic-op-relaxed-3.c: Likewise.\n    * gcc.target/arm/atomic-op-release-3.c: Likewise.\n    * gcc.target/arm/atomic-op-seq_cst-3.c: Likewise.\n    * gcc.target/arm/atomic-op-short-3.c: Likewise.\n\nFrom-SVN: r241615", "tree": {"sha": "dc19465bb22dad76890b8479bf1e991d20871f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc19465bb22dad76890b8479bf1e991d20871f24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddb92ab95f6ba681423ba55db9910821735544c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb92ab95f6ba681423ba55db9910821735544c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb92ab95f6ba681423ba55db9910821735544c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb92ab95f6ba681423ba55db9910821735544c1/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33cab74617734fdda5b39bd645d13361cd92af23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33cab74617734fdda5b39bd645d13361cd92af23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33cab74617734fdda5b39bd645d13361cd92af23"}], "stats": {"total": 130, "additions": 127, "deletions": 3}, "files": [{"sha": "c93a12e4f2a72c7d3f44c338be835b7fcce018c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -1,3 +1,9 @@\n+2016-10-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.h (TARGET_HAVE_LDREX): Define for ARMv8-M Baseline.\n+\t(TARGET_HAVE_LDREXBH): Likewise.\n+\t(TARGET_HAVE_LDACQ): Likewise.\n+\n 2016-10-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config/arm/arm.c (arm_split_atomic_op): Add function comment.  Add"}, {"sha": "b2d8422d494b84003239a14eb5196c1b5967ce50", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -252,21 +252,25 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n #define TARGET_HAVE_MEMORY_BARRIER (TARGET_HAVE_DMB || TARGET_HAVE_DMB_MCR)\n \n /* Nonzero if this chip supports ldrex and strex */\n-#define TARGET_HAVE_LDREX        ((arm_arch6 && TARGET_ARM) || arm_arch7)\n+#define TARGET_HAVE_LDREX        ((arm_arch6 && TARGET_ARM)\t\\\n+\t\t\t\t  || arm_arch7\t\t\t\\\n+\t\t\t\t  || (arm_arch8 && !arm_arch_notm))\n \n /* Nonzero if this chip supports LPAE.  */\n #define TARGET_HAVE_LPAE\t\t\t\t\t\t\\\n   (arm_arch7 && ARM_FSET_HAS_CPU1 (insn_flags, FL_FOR_ARCH7VE))\n \n /* Nonzero if this chip supports ldrex{bh} and strex{bh}.  */\n-#define TARGET_HAVE_LDREXBH ((arm_arch6k && TARGET_ARM) || arm_arch7)\n+#define TARGET_HAVE_LDREXBH ((arm_arch6k && TARGET_ARM)\t\t\\\n+\t\t\t     || arm_arch7\t\t\t\\\n+\t\t\t     || (arm_arch8 && !arm_arch_notm))\n \n /* Nonzero if this chip supports ldrexd and strexd.  */\n #define TARGET_HAVE_LDREXD (((arm_arch6k && TARGET_ARM) \\\n \t\t\t     || arm_arch7) && arm_arch_notm)\n \n /* Nonzero if this chip supports load-acquire and store-release.  */\n-#define TARGET_HAVE_LDACQ\t(TARGET_ARM_ARCH >= 8 && TARGET_32BIT)\n+#define TARGET_HAVE_LDACQ\t(TARGET_ARM_ARCH >= 8)\n \n /* Nonzero if this chip supports LDAEXD and STLEXD.  */\n #define TARGET_HAVE_LDACQEXD\t(TARGET_ARM_ARCH >= 8\t\\"}, {"sha": "9e37729f4b7e8adc94110dab6014fb6597248ae0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -1,3 +1,16 @@\n+2016-10-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gcc.target/arm/atomic-comp-swap-release-acquire-3.c: New test.\n+\t* gcc.target/arm/atomic-op-acq_rel-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-acquire-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-char-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-consume-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-int-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-relaxed-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-release-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-seq_cst-3.c: Likewise.\n+\t* gcc.target/arm/atomic-op-short-3.c: Likewise.\n+\n 2016-10-27  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/fold-convmaxconv-1.c: New test."}, {"sha": "0191f7af3a4656cb21c79c0f853f9e5a8aa44e86", "filename": "gcc/testsuite/gcc.target/arm/atomic-comp-swap-release-acquire-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2 -fno-ipa-icf\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-comp-swap-release-acquire.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\" 4 } } */\n+/* { dg-final { scan-assembler-times \"stlex\" 4 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "f2ed32d01977466bd0afac013e8490beaf2a3691", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acq_rel-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-acq_rel.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "bba1c2709e74fd220275f35bda858aa805f8d080", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acquire-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-acquire.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "17117eebf70b99ca2651520366563dc7043b9ddf", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-char-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-char.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrexb\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strexb\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "8352f0c3af81c9ad25d7c9cda7e92fdd0e3ba0fe", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-consume-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-consume.x\"\n+\n+/* Scan for ldaex is a PR59448 consume workaround.  */\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "d4f1db34a1f1851b5d3bfa277ff106bb24e25f73", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-int-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-int.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "09b5ea9f6d3bf0c324ee532ccae002d41b687105", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-relaxed-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-relaxed.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "2b136f5ca2e7881cba218fa4980684f2ed082d30", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-release-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-release.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "7f38d42fa630819080171deee98fbc287e6957fc", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-seq_cst-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-seq_cst.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "60ae42ebc34802391761d2e6cd286bbe475b646b", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-short-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb92ab95f6ba681423ba55db9910821735544c1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-3.c?ref=ddb92ab95f6ba681423ba55db9910821735544c1", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_base_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_base } */\n+\n+#include \"../aarch64/atomic-op-short.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrexh\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strexh\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}]}