{"sha": "ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYzYjU5YWNlOTQwMGFmYzRiZWJhNTFmN2NhOTFhMWRmY2MzY2EzOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-16T11:27:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-16T11:27:34Z"}, "message": "re PR tree-optimization/66894 (wrong code at -Os and above on x86_64-linux-gnu)\n\n2015-07-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66894\n\t* tree-vrp.c (register_edge_assert_for_2): Fix bad assumption\n\tabout deriving NE_EXPR from truncated values.\n\n\t* gcc.dg/torture/pr66894.c: New testcase.\n\nFrom-SVN: r225870", "tree": {"sha": "a442c599fd189235da985453491c9d264689e929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a442c599fd189235da985453491c9d264689e929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb0b291494898e922f9b8def65da1702d2ae756e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0b291494898e922f9b8def65da1702d2ae756e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0b291494898e922f9b8def65da1702d2ae756e"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "1d5434c3bb9127e2725a450fa8d53b25a3c63993", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "patch": "@@ -1,3 +1,9 @@\n+2015-07-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66894\n+\t* tree-vrp.c (register_edge_assert_for_2): Fix bad assumption\n+\tabout deriving NE_EXPR from truncated values.\n+\n 2015-07-16  Martin Liska  <mliska@suse.cz>\n \n \t* alloc-pool.h"}, {"sha": "9bace80590df9647bb4fb6c7e2f0cfa1cb32ae1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "patch": "@@ -1,3 +1,8 @@\n+2015-07-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66894\n+\t* gcc.dg/torture/pr66894.c: New testcase.\n+\n 2015-07-16  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/pr21031.c: Adjust."}, {"sha": "b54494002b644eab1e4d7578a9515f6bf218eb0c", "filename": "gcc/testsuite/gcc.dg/torture/pr66894.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66894.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66894.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66894.c?ref=ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run } */\n+\n+short a, b;\n+\n+int\n+main ()\n+{\n+  for (; a != 1; a += 3)\n+    {\n+      int c = 0;\n+      for (; c < 2; c++)\n+\tif (a)\n+\t  {\n+\t    char d = a;\n+\t    b = d ? 1 / d : 0; \n+\t  }\n+\telse\n+\t  break;\n+    }\n+  return 0;\n+}"}, {"sha": "d96268314c4177c6adc35d6c51e97432db66a3f2", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=ef3b59ace9400afc4beba51f7ca91a1dfcc3ca38", "patch": "@@ -5382,13 +5382,11 @@ register_edge_assert_for_2 (tree name, edge e, gimple_stmt_iterator bsi,\n \t    }\n \t  else if (CONVERT_EXPR_CODE_P (code))\n \t    {\n-\t      /* For truncating conversions require that the constant\n-\t         fits in the truncated type if we are going to record\n+\t      /* For truncating conversions we cannot record\n \t\t an inequality.  */\n \t      if (comp_code == NE_EXPR\n \t\t  && (TYPE_PRECISION (TREE_TYPE (name2))\n-\t\t      < TYPE_PRECISION (TREE_TYPE (name)))\n-\t\t  && ! int_fits_type_p (val, TREE_TYPE (name2)))\n+\t\t      < TYPE_PRECISION (TREE_TYPE (name))))\n \t\tcontinue;\n \t      cst = fold_convert (TREE_TYPE (name2), val);\n \t    }"}]}