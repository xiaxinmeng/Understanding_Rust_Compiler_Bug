{"sha": "4288b57affe34fbc60badf798eb0c19892e69980", "node_id": "C_kwDOANBUbNoAKDQyODhiNTdhZmZlMzRmYmM2MGJhZGY3OThlYjBjMTk4OTJlNjk5ODA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-18T11:17:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-18T13:33:01Z"}, "message": "pack fields in line-map data structures\n\nAs pointed out by pahole.\n\n2022-01-18  Richard Biener  <rguenther@suse.de>\n\nlibcpp/\n\t* include/line-map.h (class line_maps): Re-arrange fields\n\tto minimize padding.\n\t(class rich_location): Likewise.\n\t* line-map.cc (rich_location::rich_location): Adjust.", "tree": {"sha": "51b10f6e3c01ec773fd9fca53af918413e4e24b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51b10f6e3c01ec773fd9fca53af918413e4e24b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4288b57affe34fbc60badf798eb0c19892e69980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4288b57affe34fbc60badf798eb0c19892e69980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4288b57affe34fbc60badf798eb0c19892e69980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4288b57affe34fbc60badf798eb0c19892e69980/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0efc551e59f544ab25aeb527ccb2c8b82a03c108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0efc551e59f544ab25aeb527ccb2c8b82a03c108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0efc551e59f544ab25aeb527ccb2c8b82a03c108"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "80335721e037adf62bb77ad0b5046a6a7542f9db", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288b57affe34fbc60badf798eb0c19892e69980/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288b57affe34fbc60badf798eb0c19892e69980/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=4288b57affe34fbc60badf798eb0c19892e69980", "patch": "@@ -792,6 +792,9 @@ class GTY(()) line_maps {\n   /* If true, prints an include trace a la -H.  */\n   bool trace_includes;\n \n+  /* True if we've seen a #line or # 44 \"file\" directive.  */\n+  bool seen_line_directive;\n+\n   /* Highest location_t \"given out\".  */\n   location_t highest_location;\n \n@@ -815,9 +818,6 @@ class GTY(()) line_maps {\n      built-in tokens.  */\n   location_t builtin_location;\n \n-  /* True if we've seen a #line or # 44 \"file\" directive.  */\n-  bool seen_line_directive;\n-\n   /* The default value of range_bits in ordinary line maps.  */\n   unsigned int default_range_bits;\n \n@@ -1816,16 +1816,16 @@ class rich_location\n   int m_column_override;\n \n   bool m_have_expanded_location;\n+  bool m_seen_impossible_fixit;\n+  bool m_fixits_cannot_be_auto_applied;\n+  bool m_escape_on_output;\n+\n   expanded_location m_expanded_location;\n \n   static const int MAX_STATIC_FIXIT_HINTS = 2;\n   semi_embedded_vec <fixit_hint *, MAX_STATIC_FIXIT_HINTS> m_fixit_hints;\n \n-  bool m_seen_impossible_fixit;\n-  bool m_fixits_cannot_be_auto_applied;\n-\n   const diagnostic_path *m_path;\n-  bool m_escape_on_output;\n };\n \n /* A struct for the result of range_label::get_text: a NUL-terminated buffer"}, {"sha": "62077c3857c0ffaf759052b3c0bdc58685d490f0", "filename": "libcpp/line-map.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288b57affe34fbc60badf798eb0c19892e69980/libcpp%2Fline-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288b57affe34fbc60badf798eb0c19892e69980/libcpp%2Fline-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.cc?ref=4288b57affe34fbc60badf798eb0c19892e69980", "patch": "@@ -2083,11 +2083,11 @@ rich_location::rich_location (line_maps *set, location_t loc,\n   m_ranges (),\n   m_column_override (0),\n   m_have_expanded_location (false),\n-  m_fixit_hints (),\n   m_seen_impossible_fixit (false),\n   m_fixits_cannot_be_auto_applied (false),\n-  m_path (NULL),\n-  m_escape_on_output (false)\n+  m_escape_on_output (false),\n+  m_fixit_hints (),\n+  m_path (NULL)\n {\n   add_range (loc, SHOW_RANGE_WITH_CARET, label);\n }"}]}