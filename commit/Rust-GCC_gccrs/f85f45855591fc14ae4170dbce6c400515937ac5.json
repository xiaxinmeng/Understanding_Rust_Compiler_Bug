{"sha": "f85f45855591fc14ae4170dbce6c400515937ac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1ZjQ1ODU1NTkxZmMxNGFlNDE3MGRiY2U2YzQwMDUxNTkzN2FjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-09T22:19:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-09T22:19:34Z"}, "message": "(MASK_NO_FPR, TARGET_NO_FPR): Define.\n\n(TARGET_SWITCHES): Add \"fp-regs\" and \"no-fp-regs\".\n(CONDITIONAL_REGISTER_USAGE): Set FPRs fixed and call_used if TARGET_NO_FPR.\n\nFrom-SVN: r8635", "tree": {"sha": "e3599968380ec04149b3f15a035a25f6e2005a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3599968380ec04149b3f15a035a25f6e2005a11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f85f45855591fc14ae4170dbce6c400515937ac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85f45855591fc14ae4170dbce6c400515937ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f85f45855591fc14ae4170dbce6c400515937ac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85f45855591fc14ae4170dbce6c400515937ac5/comments", "author": null, "committer": null, "parents": [{"sha": "68c6b3a925e4432121539692ccb69b76f0cf2529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c6b3a925e4432121539692ccb69b76f0cf2529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c6b3a925e4432121539692ccb69b76f0cf2529"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "c58cf41922ccb6bde8f798ab88b95be50c983cad", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85f45855591fc14ae4170dbce6c400515937ac5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85f45855591fc14ae4170dbce6c400515937ac5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=f85f45855591fc14ae4170dbce6c400515937ac5", "patch": "@@ -137,6 +137,9 @@ extern int target_flags;\n /* Nonzero for the 64bit model: ints, longs, and pointers are 64 bits.  */\n #define MASK_64BIT\t\t0x400\n \n+/* Disable use of FPRs.  */\n+#define MASK_NO_FPR\t\t0x800\n+\n #define TARGET_POWER\t\t\t(target_flags & MASK_POWER)\n #define TARGET_POWER2\t\t\t(target_flags & MASK_POWER2)\n #define TARGET_POWERPC\t\t\t(target_flags & MASK_POWERPC)\n@@ -148,6 +151,7 @@ extern int target_flags;\n #define TARGET_NO_SUM_IN_TOC\t\t(target_flags & MASK_NO_SUM_IN_TOC)\n #define TARGET_MINIMAL_TOC\t\t(target_flags & MASK_MINIMAL_TOC)\n #define TARGET_64BIT\t\t\t(target_flags & MASK_64BIT)\n+#define TARGET_NO_FPR\t\t\t(target_flags & MASK_NO_FPR)\n \n /* Run-time compilation parameters selecting different hardware subsets.\n \n@@ -180,6 +184,8 @@ extern int target_flags;\n   {\"minimal-toc\",\tMASK_MINIMAL_TOC},\t\t\t\\\n   {\"minimal-toc\",\t- (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC)}, \\\n   {\"no-minimal-toc\",\t- MASK_MINIMAL_TOC},\t\t\t\\\n+  {\"fp-regs\",\t\t- MASK_NO_FPR},\t\t\t\t\\\n+  {\"no-fp-regs\",\tMASK_NO_FPR},\t\t\t\t\\\n   {\"\",\t\t\tTARGET_DEFAULT}}\n \n #define TARGET_DEFAULT MASK_POWER\n@@ -566,11 +572,17 @@ extern char *rs6000_cpu_string;\n \n /* Define this macro to change register usage conditional on target flags.\n    Set MQ register fixed (already call_used) if not POWER architecture\n-   (RIOS1, RIOS2, RSC, and PPC601) so that it will not be allocated.  */\n-\n-#define CONDITIONAL_REGISTER_USAGE\t\t\t\t\t\\\n-    if (!TARGET_POWER)\t\t\t\t\t\t\t\\\n-\tfixed_regs[64] = 1;\n+   (RIOS1, RIOS2, RSC, and PPC601) so that it will not be allocated.\n+   Conditionally disable FPRs.  */\n+\n+#define CONDITIONAL_REGISTER_USAGE\t\\\n+{\t\t\t\t\t\\\n+  if (! TARGET_POWER)\t\t\t\\\n+    fixed_regs[64] = 1;\t\t\t\\\n+  if (TARGET_NO_FPR)\t\t\t\\\n+    for (i = 32; i < 64; i++)\t\t\t\\\n+      fixed_regs[i] = call_used_regs[i] = 1; \\\n+}\n \n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */"}]}