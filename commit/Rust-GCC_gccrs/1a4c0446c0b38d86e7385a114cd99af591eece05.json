{"sha": "1a4c0446c0b38d86e7385a114cd99af591eece05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE0YzA0NDZjMGIzOGQ4NmU3Mzg1YTExNGNkOTlhZjU5MWVlY2UwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-13T10:12:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-13T10:12:55Z"}, "message": "re PR target/92908 (wrong code with -Og -fno-tree-fre -mavx512bw and vector compare)\n\n\tPR target/92908\n\t* simplify-rtx.c (simplify_relational_operation): Punt for vector\n\tcmp_mode and scalar mode, if simplify_relational_operation returned\n\tconst_true_rtx.\n\t(simplify_const_relational_operation): Change VOID_mode in function\n\tcomment to VOIDmode.\n\n\t* gcc.target/i386/avx512bw-pr92908.c: New test.\n\nFrom-SVN: r279369", "tree": {"sha": "fe5a9231bd4e0eef6bfe437193ec3494df557a48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe5a9231bd4e0eef6bfe437193ec3494df557a48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a4c0446c0b38d86e7385a114cd99af591eece05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4c0446c0b38d86e7385a114cd99af591eece05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4c0446c0b38d86e7385a114cd99af591eece05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4c0446c0b38d86e7385a114cd99af591eece05/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "814db0c199fb9c050008f9f1e12534425ccc40c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/814db0c199fb9c050008f9f1e12534425ccc40c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/814db0c199fb9c050008f9f1e12534425ccc40c8"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "b3d8398ca5f4bd4c1e2ccff519c879e1847d7490", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a4c0446c0b38d86e7385a114cd99af591eece05", "patch": "@@ -1,3 +1,12 @@\n+2019-12-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92908\n+\t* simplify-rtx.c (simplify_relational_operation): Punt for vector\n+\tcmp_mode and scalar mode, if simplify_relational_operation returned\n+\tconst_true_rtx.\n+\t(simplify_const_relational_operation): Change VOID_mode in function\n+\tcomment to VOIDmode.\n+\n 2019-12-13  Kewen Lin  <linkw@gcc.gnu.org>\n \n \t* config/rs6000/rs6000.c (adjust_vectorization_cost): New function."}, {"sha": "d7046ed662d6af3ff3c3c573f7f8db91692f8148", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=1a4c0446c0b38d86e7385a114cd99af591eece05", "patch": "@@ -5037,6 +5037,15 @@ simplify_relational_operation (enum rtx_code code, machine_mode mode,\n \t  return NULL_RTX;\n #endif\n \t}\n+      /* For vector comparison with scalar int result, it is unknown\n+\t if the target means here a comparison into an integral bitmask,\n+\t or comparison where all comparisons true mean const_true_rtx\n+\t whole result, or where any comparisons true mean const_true_rtx\n+\t whole result.  For const0_rtx all the cases are the same.  */\n+      if (VECTOR_MODE_P (cmp_mode)\n+\t  && SCALAR_INT_MODE_P (mode)\n+\t  && tem == const_true_rtx)\n+\treturn NULL_RTX;\n \n       return tem;\n     }\n@@ -5383,7 +5392,7 @@ comparison_result (enum rtx_code code, int known_results)\n }\n \n /* Check if the given comparison (done in the given MODE) is actually\n-   a tautology or a contradiction.  If the mode is VOID_mode, the\n+   a tautology or a contradiction.  If the mode is VOIDmode, the\n    comparison is done in \"infinite precision\".  If no simplification\n    is possible, this function returns zero.  Otherwise, it returns\n    either const_true_rtx or const0_rtx.  */"}, {"sha": "66ed72003e4af403eae53c717843d2af59a4db6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a4c0446c0b38d86e7385a114cd99af591eece05", "patch": "@@ -1,3 +1,8 @@\n+2019-12-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92908\n+\t* gcc.target/i386/avx512bw-pr92908.c: New test.\n+\n 2019-12-13  Andrew Pinski  <apinski@marvell.com>\n \n \t* gcc.c-torture/execute/pr86659-1.c: New test."}, {"sha": "88275929f35278b1ca0f65ca3a0be773d793e86a", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr92908.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr92908.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4c0446c0b38d86e7385a114cd99af591eece05/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr92908.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr92908.c?ref=1a4c0446c0b38d86e7385a114cd99af591eece05", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/92908 */\n+/* { dg-do run } */\n+/* { dg-options \"-Og -fno-tree-fre -mavx512bw\" } */\n+/* { dg-require-effective-target avx512bw } */\n+\n+#define AVX512BW\n+#include \"avx512f-helper.h\"\n+\n+typedef unsigned short V __attribute__ ((__vector_size__ (64)));\n+\n+V v;\n+\n+void\n+TEST (void)\n+{\n+  int i;\n+  v = (V) v == v;\n+  for (i = 0; i < 32; i++)\n+    if (v[i] != 0xffff)\n+      abort ();\n+}"}]}