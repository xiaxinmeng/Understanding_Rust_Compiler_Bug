{"sha": "136029059686fed2d99c755baf35f98553fc0232", "node_id": "C_kwDOANBUbNoAKDEzNjAyOTA1OTY4NmZlZDJkOTljNzU1YmFmMzVmOTg1NTNmYzAyMzI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-16T09:23:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-16T09:23:22Z"}, "message": "c++: Implement CWG 2654 - Un-deprecation of compound volatile assignments\n\nThe following patch implements CWG 2654.\n\n2022-11-16  Jakub Jelinek  <jakub@redhat.com>\n\n\t* typeck.cc (cp_build_modify_expr): Implement CWG 2654\n\t- Un-deprecation of compound volatile assignments.  Remove\n\t-Wvolatile warning about compound volatile assignments.\n\n\t* g++.dg/cpp2a/volatile1.C (fn2, fn3, racoon): Adjust expected\n\tdiagnostics.\n\t* g++.dg/cpp2a/volatile3.C (fn2, fn3, racoon): Likewise.\n\t* g++.dg/cpp2a/volatile5.C (f): Likewise.\n\t* g++.dg/ext/vector25.C (foo): Don't expect a warning.\n\t* g++.dg/cpp1y/new1.C (test_unused): Likewise.", "tree": {"sha": "c285d86a0438a319be1d6e541b471ac6c2c3a494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c285d86a0438a319be1d6e541b471ac6c2c3a494"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/136029059686fed2d99c755baf35f98553fc0232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136029059686fed2d99c755baf35f98553fc0232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136029059686fed2d99c755baf35f98553fc0232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136029059686fed2d99c755baf35f98553fc0232/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d59858f6ee7f356f27ccc2d29129826781f9483f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59858f6ee7f356f27ccc2d29129826781f9483f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59858f6ee7f356f27ccc2d29129826781f9483f"}], "stats": {"total": 51, "additions": 19, "deletions": 32}, "files": [{"sha": "6c911827778c7e36e4b34b59126cce40f4594dbe", "filename": "gcc/cp/typeck.cc", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136029059686fed2d99c755baf35f98553fc0232/gcc%2Fcp%2Ftypeck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136029059686fed2d99c755baf35f98553fc0232/gcc%2Fcp%2Ftypeck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.cc?ref=136029059686fed2d99c755baf35f98553fc0232", "patch": "@@ -9513,19 +9513,6 @@ cp_build_modify_expr (location_t loc, tree lhs, enum tree_code modifycode,\n \t\t\t && MAYBE_CLASS_TYPE_P (TREE_TYPE (lhstype)))\n \t\t\t|| MAYBE_CLASS_TYPE_P (lhstype)));\n \n-\t  /* An expression of the form E1 op= E2.  [expr.ass] says:\n-\t     \"Such expressions are deprecated if E1 has volatile-qualified\n-\t     type and op is not one of the bitwise operators |, &, ^.\"\n-\t     We warn here rather than in cp_genericize_r because\n-\t     for compound assignments we are supposed to warn even if the\n-\t     assignment is a discarded-value expression.  */\n-\t  if (modifycode != BIT_AND_EXPR\n-\t      && modifycode != BIT_IOR_EXPR\n-\t      && modifycode != BIT_XOR_EXPR\n-\t      && (TREE_THIS_VOLATILE (lhs) || CP_TYPE_VOLATILE_P (lhstype)))\n-\t    warning_at (loc, OPT_Wvolatile,\n-\t\t\t\"compound assignment with %<volatile%>-qualified left \"\n-\t\t\t\"operand is deprecated\");\n \t  /* Preevaluate the RHS to make sure its evaluation is complete\n \t     before the lvalue-to-rvalue conversion of the LHS:\n "}, {"sha": "21f225cc84733af3f6fbb78a786c0a2cb4a0a586", "filename": "gcc/testsuite/g++.dg/cpp1y/new1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C?ref=136029059686fed2d99c755baf35f98553fc0232", "patch": "@@ -65,7 +65,7 @@ void\n test_unused() {\n   volatile double d = 0.0;\n   double *p = new double ();\n-  d += 1.0; // { dg-warning \"deprecated\" \"\" { target c++2a } }\n+  d += 1.0;\n   delete p;\n }\n "}, {"sha": "fc9d5e06c59992b5782d30d691b882aeeb379006", "filename": "gcc/testsuite/g++.dg/cpp2a/volatile1.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile1.C?ref=136029059686fed2d99c755baf35f98553fc0232", "patch": "@@ -74,17 +74,17 @@ fn2 ()\n   decltype(i = vi = 42) x3 = i;\n \n   // Compound assignments.\n-  vi += i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  vi -= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  vi %= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  vi += i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi -= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi %= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi ^= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi |= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi &= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  vi /= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  vi /= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi = vi += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   vi += vi = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   i *= vi;\n-  decltype(vi -= 42) x2 = vi; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  decltype(vi -= 42) x2 = vi; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n \n   // Structured bindings.\n   int a[] = { 10, 5 };\n@@ -107,12 +107,12 @@ fn3 ()\n   volatile U u;\n   u.c = 42;\n   i = u.c = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  u.c += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  u.c += 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n \n   volatile T t;\n   t.a = 3;\n   j = t.a = 3; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  t.a += 3; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  t.a += 3; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n \n   volatile int *src = &i;\n   *src; // No assignment, don't warn.\n@@ -135,7 +135,7 @@ void raccoon ()\n   volatile T t, u;\n   t = 42;\n   u = t = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  t += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  t += 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   t &= 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n }\n "}, {"sha": "9f1a8dcd3eb983221e66da18eb0040a406955476", "filename": "gcc/testsuite/g++.dg/cpp2a/volatile3.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile3.C?ref=136029059686fed2d99c755baf35f98553fc0232", "patch": "@@ -75,17 +75,17 @@ fn2 ()\n   decltype(i = vi = 42) x3 = i;\n \n   // Compound assignments.\n-  vi += i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  vi -= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  vi %= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi += i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi -= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi %= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi ^= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi |= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi &= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  vi /= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi /= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi = vi += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi += vi = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   i *= vi;\n-  decltype(vi -= 42) x2 = vi; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  decltype(vi -= 42) x2 = vi; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n \n   // Structured bindings.\n   int a[] = { 10, 5 };\n@@ -108,12 +108,12 @@ fn3 ()\n   volatile U u;\n   u.c = 42;\n   i = u.c = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  u.c += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  u.c += 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n \n   volatile T t;\n   t.a = 3;\n   j = t.a = 3; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  t.a += 3; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  t.a += 3; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n \n   volatile int *src = &i;\n   *src; // No assignment, don't warn.\n@@ -136,7 +136,7 @@ void raccoon ()\n   volatile T t, u;\n   t = 42;\n   u = t = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  t += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  t += 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   t &= 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n }\n "}, {"sha": "291b9bc894acfc38a6374748e1103e913cb0ba87", "filename": "gcc/testsuite/g++.dg/cpp2a/volatile5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile5.C?ref=136029059686fed2d99c755baf35f98553fc0232", "patch": "@@ -7,7 +7,7 @@ void\n f (bool b)\n {\n   (b ? x : y) = 1;\n-  (b ? x : y) += 1; // { dg-warning \"compound assignment\" \"\" { target c++20 } }\n+  (b ? x : y) += 1; // { dg-bogus \"compound assignment\" }\n   z = (b ? x : y) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }\n   ((z = 2) ? x : y) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }\n   (b ? (x = 2) : y) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }"}, {"sha": "71eaac5d639f345f282ab413b8dfbfaaa77f3e1e", "filename": "gcc/testsuite/g++.dg/ext/vector25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136029059686fed2d99c755baf35f98553fc0232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector25.C?ref=136029059686fed2d99c755baf35f98553fc0232", "patch": "@@ -2,5 +2,5 @@ volatile int i __attribute__((vector_size(8)));\n \n void foo()\n {\n-  i += i; // { dg-warning \"deprecated\" \"\" { target c++2a } }\n+  i += i; // { dg-bogus \"deprecated\" }\n }"}]}