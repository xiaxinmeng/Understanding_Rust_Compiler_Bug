{"sha": "3050859f62af5940c29de64d72aa7df2983d5a86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1MDg1OWY2MmFmNTk0MGMyOWRlNjRkNzJhYTdkZjI5ODNkNWE4Ng==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-15T09:55:57Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-15T09:55:57Z"}, "message": "* config/m32r/m32r.c: Remove unused variables frame_size and insn.\n\nFrom-SVN: r166746", "tree": {"sha": "80b7549d2174a738403ae2b5f878d763c61e2017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80b7549d2174a738403ae2b5f878d763c61e2017"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3050859f62af5940c29de64d72aa7df2983d5a86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3050859f62af5940c29de64d72aa7df2983d5a86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3050859f62af5940c29de64d72aa7df2983d5a86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3050859f62af5940c29de64d72aa7df2983d5a86/comments", "author": null, "committer": null, "parents": [{"sha": "c18a9bc4618e4fe64d5ca06361b9ced764565104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c18a9bc4618e4fe64d5ca06361b9ced764565104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c18a9bc4618e4fe64d5ca06361b9ced764565104"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "660694f0f80ad70e1565d93088c512863f23f5cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3050859f62af5940c29de64d72aa7df2983d5a86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3050859f62af5940c29de64d72aa7df2983d5a86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3050859f62af5940c29de64d72aa7df2983d5a86", "patch": "@@ -7,6 +7,8 @@\n \t(TEXI_GCCINT_FILES): Depend on $(srcdir)/doc/tm.texi instead of on\n \ttm.texi .\n \n+\t* config/m32r/m32r.c: Remove unused variables frame_size and insn.\n+\n 2010-11-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/44150"}, {"sha": "d17742dc9e4645b019d8485ecd28c1808ea70ef1", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3050859f62af5940c29de64d72aa7df2983d5a86/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3050859f62af5940c29de64d72aa7df2983d5a86/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=3050859f62af5940c29de64d72aa7df2983d5a86", "patch": "@@ -1584,7 +1584,7 @@ m32r_compute_frame_size (int size)\t/* # of var. bytes allocated.  */\n {\n   unsigned int regno;\n   unsigned int total_size, var_size, args_size, pretend_size, extra_size;\n-  unsigned int reg_size, frame_size;\n+  unsigned int reg_size;\n   unsigned int gmask;\n   enum m32r_function_type fn_type;\n   int interrupt_p;\n@@ -1626,7 +1626,7 @@ m32r_compute_frame_size (int size)\t/* # of var. bytes allocated.  */\n      handler will do the right thing if this changes total_size.  */\n   total_size = M32R_STACK_ALIGN (total_size);\n \n-  frame_size = total_size - (pretend_size + reg_size);\n+  /* frame_size = total_size - (pretend_size + reg_size); */\n \n   /* Save computed information.  */\n   current_frame_info.total_size   = total_size;\n@@ -1974,7 +1974,6 @@ m32r_legitimize_pic_address (rtx orig, rtx reg)\n   if (GET_CODE (orig) == SYMBOL_REF || GET_CODE (orig) == LABEL_REF)\n     {\n       rtx pic_ref, address;\n-      rtx insn;\n       int subregs = 0;\n \n       if (reg == 0)\n@@ -2004,12 +2003,7 @@ m32r_legitimize_pic_address (rtx orig, rtx reg)\n \n       emit_insn (gen_addsi3 (address, address, pic_offset_table_rtx));\n       pic_ref = gen_const_mem (Pmode, address);\n-      insn = emit_move_insn (reg, pic_ref);\n-#if 0\n-      /* Put a REG_EQUAL note on this insn, so that it can be optimized\n-         by loop.  */\n-      set_unique_reg_note (insn, REG_EQUAL, orig);\n-#endif\n+      emit_move_insn (reg, pic_ref);\n       return reg;\n     }\n   else if (GET_CODE (orig) == CONST)"}]}