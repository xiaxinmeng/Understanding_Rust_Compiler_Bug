{"sha": "2d14501c4714ef2b4ab848d52d22a1c700804197", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQxNDUwMWM0NzE0ZWYyYjRhYjg0OGQ1MmQyMmExYzcwMDgwNDE5Nw==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2008-08-13T10:57:43Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-08-13T10:57:43Z"}, "message": "re PR ada/36777 (Protected type cannot have access taken from its body.)\n\n    gcc/ada/\n\tPR ada/36777\n\t* sem_util.ads, sem_util.adb (Is_Protected_Self_Reference): New.\n\t* sem_attr.adb (Check_Type): The current instance of a protected\n\tobject is not a type name.\n\t(Analyze_Access_Attribute): Accept instances of protected objects.\n\t(Analyze_Attribute, Attribute_Address clause): Ditto.\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Rewrite\n\tthe prefix as being the current instance if needed.\n\n    gcc/testsuite/\n\tPR ada/36777\n\t* gnat.dg/protected_self_ref1.adb, gnat.dg/protected_self_ref2.adb:\n\tNew.\n\nFrom-SVN: r139051", "tree": {"sha": "c41ab659ced89553be1789d5dab8a19dc9465c2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c41ab659ced89553be1789d5dab8a19dc9465c2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d14501c4714ef2b4ab848d52d22a1c700804197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d14501c4714ef2b4ab848d52d22a1c700804197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d14501c4714ef2b4ab848d52d22a1c700804197", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d14501c4714ef2b4ab848d52d22a1c700804197/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85790e667775932ee784b9c1636dafcc66ac32d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85790e667775932ee784b9c1636dafcc66ac32d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85790e667775932ee784b9c1636dafcc66ac32d3"}], "stats": {"total": 127, "additions": 126, "deletions": 1}, "files": [{"sha": "bf3c7dd903d504e94c3442c1e4c34940c54e68d5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -1,3 +1,14 @@\n+2008-08-13  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\tPR ada/36777\n+\t* sem_util.ads, sem_util.adb (Is_Protected_Self_Reference): New.\n+\t* sem_attr.adb (Check_Type): The current instance of a protected\n+\tobject is not a type name.\n+\t(Analyze_Access_Attribute): Accept instances of protected objects.\n+\t(Analyze_Attribute, Attribute_Address clause): Ditto.\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Rewrite\n+\tthe prefix as being the current instance if needed.\n+\n 2008-08-12  Danny Smith  <danyssmith@users.sourceforge.net>\n \n \t* gcc-interface/Makefile.in (EXTRA_GNATRTL_NONTASKING_OBJS) [WINDOWS]: Remove"}, {"sha": "80cd34d5593e35ff0a0526d2aebc6222574c071d", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -636,6 +636,14 @@ package body Exp_Attr is\n          Make_Build_In_Place_Call_In_Anonymous_Context (Pref);\n       end if;\n \n+      --  If prefix is a protected type name, this is a reference to\n+      --  the current instance of the type.\n+\n+      if Is_Protected_Self_Reference (Pref) then\n+         Rewrite (Pref, Concurrent_Ref (Pref));\n+         Analyze (Pref);\n+      end if;\n+\n       --  Remaining processing depends on specific attribute\n \n       case Id is"}, {"sha": "6a77fd1160c87245d8a6306c5b04e9735ba29474", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -713,6 +713,12 @@ package body Sem_Attr is\n                then\n                   null;\n \n+               --  OK if reference to the current instance of a protected\n+               --  object.\n+\n+               elsif Is_Protected_Self_Reference (P) then\n+                  null;\n+\n                --  Otherwise we have an error case\n \n                else\n@@ -1643,6 +1649,11 @@ package body Sem_Attr is\n          then\n             Error_Attr_P (\"prefix of % attribute must be a type\");\n \n+         elsif Is_Protected_Self_Reference (P) then\n+            Error_Attr_P\n+              (\"prefix of % attribute denotes current instance \" &\n+                 \"(RM 9.4(21/2))\");\n+\n          elsif Ekind (Entity (P)) = E_Incomplete_Type\n             and then Present (Full_View (Entity (P)))\n          then\n@@ -2009,7 +2020,13 @@ package body Sem_Attr is\n          --  An Address attribute created by expansion is legal even when it\n          --  applies to other entity-denoting expressions.\n \n-         if Is_Entity_Name (P) then\n+         if Is_Protected_Self_Reference (P) then\n+            --  An Address attribute on a protected object self reference\n+            --  is legal.\n+\n+            null;\n+\n+         elsif Is_Entity_Name (P) then\n             declare\n                Ent : constant Entity_Id := Entity (P);\n "}, {"sha": "e1d042c92c235fa53ec703005da0193f05e257fa", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -6372,6 +6372,42 @@ package body Sem_Util is\n       end if;\n    end Is_Potentially_Persistent_Type;\n \n+   ---------------------------------\n+   -- Is_Protected_Self_Reference --\n+   ---------------------------------\n+\n+   function Is_Protected_Self_Reference (N : Node_Id) return Boolean\n+   is\n+      function In_Access_Definition (N : Node_Id) return Boolean;\n+      --  Returns true if N belongs to an access definition\n+\n+      --------------------------\n+      -- In_Access_Definition --\n+      --------------------------\n+\n+      function In_Access_Definition (N : Node_Id) return Boolean\n+      is\n+         P : Node_Id := Parent (N);\n+      begin\n+         while Present (P) loop\n+            if Nkind (P) = N_Access_Definition then\n+               return True;\n+            end if;\n+            P := Parent (P);\n+         end loop;\n+         return False;\n+      end In_Access_Definition;\n+\n+   --  Start of processing for Is_Protected_Self_Reference\n+\n+   begin\n+      return Ada_Version >= Ada_05\n+        and then Is_Entity_Name (N)\n+        and then Is_Protected_Type (Entity (N))\n+        and then In_Open_Scopes (Entity (N))\n+        and then not In_Access_Definition (N);\n+   end Is_Protected_Self_Reference;\n+\n    -----------------------------\n    -- Is_RCI_Pkg_Spec_Or_Body --\n    -----------------------------"}, {"sha": "a8f7fc8dc333bf98b378d4951fa5575cb9f76c3c", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -726,6 +726,10 @@ package Sem_Util is\n    --  persistent. A private type is potentially persistent if the full type\n    --  is potentially persistent.\n \n+   function Is_Protected_Self_Reference (N : Node_Id) return Boolean;\n+   --  Return True if node N denotes a protected type name which represents\n+   --  the current instance of a protected object according to RM 9.4(21/2).\n+\n    function Is_RCI_Pkg_Spec_Or_Body (Cunit : Node_Id) return Boolean;\n    --  Return True if a compilation unit is the specification or the\n    --  body of a remote call interface package."}, {"sha": "d036b781439eafa35e8e68fb47302e04535bd089", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -1,3 +1,9 @@\n+2008-08-13  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\tPR ada/36777\n+\t* gnat.dg/protected_self_ref1.adb, gnat.dg/protected_self_ref2.adb:\n+\tNew.\n+\n 2008-08-13  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c/15236"}, {"sha": "b6c2aef6809bcf65fc22a9f48c3cb94f9d4e29de", "filename": "gcc/testsuite/gnat.dg/protected_self_ref1.adb", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Ftestsuite%2Fgnat.dg%2Fprotected_self_ref1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Ftestsuite%2Fgnat.dg%2Fprotected_self_ref1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprotected_self_ref1.adb?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -0,0 +1,25 @@\n+--  { dg-do run }\n+with System;\n+\n+procedure Protected_Self_Ref1 is\n+\n+   protected type P is\n+      procedure Foo;\n+   end P;\n+\n+   protected body P is\n+      procedure Foo is\n+         Ptr : access P;  -- here P denotes the type P\n+\t T   : Integer;\n+\t A   : System.Address;\n+      begin\n+         Ptr := P'Access; -- here P denotes the \"this\" instance of P\n+\t T := P'Size;\n+\t A := P'Address;\n+      end;\n+   end P;\n+\n+   O : P;\n+begin\n+   O.Foo;\n+end Protected_Self_Ref1;"}, {"sha": "825c0cc40e79bc5b2c98c5776529e18c6a5aaa5d", "filename": "gcc/testsuite/gnat.dg/protected_self_ref2.adb", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Ftestsuite%2Fgnat.dg%2Fprotected_self_ref2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d14501c4714ef2b4ab848d52d22a1c700804197/gcc%2Ftestsuite%2Fgnat.dg%2Fprotected_self_ref2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprotected_self_ref2.adb?ref=2d14501c4714ef2b4ab848d52d22a1c700804197", "patch": "@@ -0,0 +1,18 @@\n+--  { dg-do compile }\n+procedure Protected_Self_Ref2 is\n+\n+   protected type P is\n+      procedure Foo;\n+   end P;\n+\n+   protected body P is\n+      procedure Foo is\n+\t D : Integer;\n+      begin\n+         D := P'Digits;  -- { dg-error \"denotes current instance\" }\n+      end;\n+   end P;\n+\n+begin\n+   null;\n+end Protected_Self_Ref2;"}]}