{"sha": "ce4d1f632ff3f680550d3b186b60176022f41190", "node_id": "C_kwDOANBUbNoAKGNlNGQxZjYzMmZmM2Y2ODA1NTBkM2IxODZiNjAxNzYwMjJmNDExOTA", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-10-19T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-10-19T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "8bc406ebf9d1f6d743e44279191397768f353247", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bc406ebf9d1f6d743e44279191397768f353247"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4d1f632ff3f680550d3b186b60176022f41190", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4d1f632ff3f680550d3b186b60176022f41190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4d1f632ff3f680550d3b186b60176022f41190", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4d1f632ff3f680550d3b186b60176022f41190/comments", "author": null, "committer": null, "parents": [{"sha": "4d92a69fc5882c86aab63d52382b393d4f20b3ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d92a69fc5882c86aab63d52382b393d4f20b3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d92a69fc5882c86aab63d52382b393d4f20b3ed"}], "stats": {"total": 397, "additions": 396, "deletions": 1}, "files": [{"sha": "c2fcf56bab2afef1d190e1f474fbeaf64702a654", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,9 @@\n+2021-10-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Update location of\n+\t'bad parentheses wrapping'.\n+\t* gcc-changelog/test_email.py: Test it.\n+\n 2021-10-02  Martin Liska  <mliska@suse.cz>\n \n \t* filter-clang-warnings.py: Filter out -Wtautological-compare"}, {"sha": "fd3526b4b01fcc1a8ad552db4e1b126f2eda438a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,151 @@\n+2021-10-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/102796\n+\t* gimple-range.cc (gimple_ranger::range_on_edge): Process EH edges\n+\tnormally.  Return get_tree_range for non gimple_range_ssa_p names.\n+\t(gimple_ranger::range_of_stmt): Use get_tree_range for non\n+\tgimple_range_ssa_p names.\n+\n+2021-10-18  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/102761\n+\t* config/i386/i386.c (ix86_print_operand_address):\n+\tError out for non-address_operand asm operands.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_peeling_hash_insert): Do\n+\tnot auto-convert dr_alignment_support to bool.\n+\t(vect_peeling_supportable): Likewise.\n+\t(vect_enhance_data_refs_alignment): Likewise.\n+\t(vect_supportable_dr_alignment): Commonize read/write case.\n+\t* tree-vect-stmts.c (vect_get_store_cost): Use\n+\tdr_alignment_support, not int, for the vect_supportable_dr_alignment\n+\tresult.\n+\t(vect_get_load_cost): Likewise.\n+\n+2021-10-18  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* tree-object-size.c (object_sizes_execute): Consolidate LHS\n+\tnull check and do it early.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-stmts.c (vectorizable_store): Use the\n+\tcomputed alignment scheme instead of querying\n+\taligned_access_p.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-stmts.c (vectorizable_store): Do not recompute\n+\talignment scheme already determined by get_load_store_type.\n+\n+2021-10-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-ssa-threadbackward.c (class pass_thread_jumps_full):\n+\tClone corresponding pass.\n+\n+2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* combine.c (recog_for_combine): For an unrecognized move/set of\n+\ta constant, try force_const_mem to place it in the constant pool.\n+\t* cse.c (constant_pool_entries_cost, constant_pool_entries_regcost):\n+\tDelete global variables (that are no longer assigned a cost value).\n+\t(cse_insn): Simplify logic for deciding whether to place a folded\n+\tconstant in the constant pool using force_const_mem.\n+\t(cse_main): Remove zero initialization of constant_pool_entries_cost\n+\tand constant_pool_entries_regcost.\n+\t* config/i386/i386.c (ix86_rtx_costs): Make memory accesses\n+\tfractionally more expensive, when optimizing for speed.\n+\n+2021-10-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/102746\n+\tPR gcov-profile/102747\n+\t* gcov.c (main): Return return_code.\n+\t(output_gcov_file): Mark return_code when error happens.\n+\t(generate_results): Likewise.\n+\t(read_graph_file): Likewise.\n+\t(read_count_file): Likewise.\n+\n+2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/bfin/bfin.md (define_constants): Remove UNSPEC_ONES.\n+\t(define_insn \"ones\"): Replace UNSPEC_ONES with a truncate of\n+\ta popcount, allowing compile-time evaluation/simplification.\n+\t(popcountsi2, popcounthi2): New expanders using a \"ones\" insn.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102788\n+\t* tree-vect-patterns.c (vect_init_pattern_stmt): Allow\n+\ta NULL vectype.\n+\t(vect_pattern_recog_1): Likewise.\n+\t(vect_recog_bool_pattern): Continue matching the pattern\n+\teven if we do not have a vector type for a conversion\n+\tresult.\n+\n+2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* simplify-rtx.c (simplify_const_unary_operation) [SS_NEG, SS_ABS]:\n+\tEvalute SS_NEG and SS_ABS of a constant argument.\n+\n+2021-10-18  prathamesh.kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR target/93183\n+\t* gimple-match-head.c (try_conditional_simplification): Add case for single operand.\n+\t* internal-fn.def: Add entry for COND_NEG internal function.\n+\t* internal-fn.c (FOR_EACH_CODE_MAPPING): Add entry for\n+\tNEGATE_EXPR, COND_NEG mapping.\n+\t* optabs.def: Add entry for cond_neg_optab.\n+\t* match.pd (UNCOND_UNARY, COND_UNARY): New operator lists.\n+\t(vec_cond COND (foo A) B) -> (IFN_COND_FOO COND A B): New pattern.\n+\t(vec_cond COND B (foo A)) -> (IFN_COND_FOO ~COND A B): Likewise.\n+\n+2021-10-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-ssa-strlen.c (class strlen_pass): Rename from\n+\tstrlen_dom_walker.\n+\t(handle_builtin_stxncpy_strncat): Move to strlen_pass.\n+\t(handle_assign): Same.\n+\t(adjust_last_stmt): Same.\n+\t(maybe_warn_overflow): Same.\n+\t(handle_builtin_strlen): Same.\n+\t(handle_builtin_strchr): Same.\n+\t(handle_builtin_strcpy): Same.\n+\t(handle_builtin_strncat): Same.\n+\t(handle_builtin_stxncpy_strncat): Same.\n+\t(handle_builtin_memcpy): Same.\n+\t(handle_builtin_strcat): Same.\n+\t(handle_alloc_call): Same.\n+\t(handle_builtin_memset): Same.\n+\t(handle_builtin_memcmp): Same.\n+\t(get_len_or_size): Same.\n+\t(strxcmp_eqz_result): Same.\n+\t(handle_builtin_string_cmp): Same.\n+\t(handle_pointer_plus): Same.\n+\t(count_nonzero_bytes_addr): Same.\n+\t(count_nonzero_bytes): Same.\n+\t(handle_store): Same.\n+\t(strlen_check_and_optimize_call): Same.\n+\t(handle_integral_assign): Same.\n+\t(check_and_optimize_stmt): Same.\n+\t(printf_strlen_execute): Rename strlen_dom_walker to strlen_pass.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102798\n+\t* tree-vect-data-refs.c (vect_create_addr_base_for_vector_ref):\n+\tOnly copy points-to info to newly generated SSA names.\n+\n+2021-10-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* dbgcnt.c (dbg_cnt_process_opt): Remove unused but set variable.\n+\t* gcov.c (get_cycles_count): Likewise.\n+\t* lto-compress.c (lto_compression_zlib): Likewise.\n+\t(lto_uncompression_zlib): Likewise.\n+\t* targhooks.c (default_pch_valid_p): Likewise.\n+\n 2021-10-17  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-pass.h (make_pass_thread_jumps_full): New."}, {"sha": "24ba235acac914e36a96c35e65b4ca832af736ce", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1 +1 @@\n-20211018\n+20211019"}, {"sha": "ea21a1eec881630cd93baacfc659ebb6189b7924", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,82 @@\n+2021-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102086\n+\tPR fortran/92189\n+\tPR fortran/92621\n+\tPR fortran/101308\n+\tPR fortran/101309\n+\tPR fortran/101635\n+\tPR fortran/92482\n+\t* decl.c (gfc_verify_c_interop_param): Remove 'sorry' for\n+\tscalar allocatable/pointer and len=*.\n+\t* expr.c (is_CFI_desc): Return true for for those.\n+\t* gfortran.h (CFI_type_kind_shift, CFI_type_mask,\n+\tCFI_type_from_type_kind, CFI_VERSION, CFI_MAX_RANK,\n+\tCFI_attribute_pointer, CFI_attribute_allocatable,\n+\tCFI_attribute_other, CFI_type_Integer, CFI_type_Logical,\n+\tCFI_type_Real, CFI_type_Complex, CFI_type_Character,\n+\tCFI_type_ucs4_char, CFI_type_struct, CFI_type_cptr,\n+\tCFI_type_cfunptr, CFI_type_other): New #define.\n+\t* trans-array.c (CFI_FIELD_BASE_ADDR, CFI_FIELD_ELEM_LEN,\n+\tCFI_FIELD_VERSION, CFI_FIELD_RANK, CFI_FIELD_ATTRIBUTE,\n+\tCFI_FIELD_TYPE, CFI_FIELD_DIM, CFI_DIM_FIELD_LOWER_BOUND,\n+\tCFI_DIM_FIELD_EXTENT, CFI_DIM_FIELD_SM,\n+\tgfc_get_cfi_descriptor_field, gfc_get_cfi_desc_base_addr,\n+\tgfc_get_cfi_desc_elem_len, gfc_get_cfi_desc_version,\n+\tgfc_get_cfi_desc_rank, gfc_get_cfi_desc_type,\n+\tgfc_get_cfi_desc_attribute, gfc_get_cfi_dim_item,\n+\tgfc_get_cfi_dim_lbound, gfc_get_cfi_dim_extent, gfc_get_cfi_dim_sm):\n+\tNew define/functions to access the CFI array descriptor.\n+\t(gfc_conv_descriptor_type): New function for the GFC descriptor.\n+\t(gfc_get_array_span): Handle expr of CFI descriptors and\n+\tassumed-type descriptors.\n+\t(gfc_trans_array_bounds): Remove 'static'.\n+\t(gfc_conv_expr_descriptor): For assumed type, use the dtype of\n+\tthe actual argument.\n+\t(structure_alloc_comps): Remove ' ' inside tabs.\n+\t* trans-array.h (gfc_trans_array_bounds, gfc_conv_descriptor_type,\n+\tgfc_get_cfi_desc_base_addr, gfc_get_cfi_desc_elem_len,\n+\tgfc_get_cfi_desc_version, gfc_get_cfi_desc_rank,\n+\tgfc_get_cfi_desc_type, gfc_get_cfi_desc_attribute,\n+\tgfc_get_cfi_dim_lbound, gfc_get_cfi_dim_extent, gfc_get_cfi_dim_sm):\n+\tNew prototypes.\n+\t* trans-decl.c (gfor_fndecl_cfi_to_gfc, gfor_fndecl_gfc_to_cfi):\n+\tRemove global vars.\n+\t(gfc_build_builtin_function_decls): Remove their initialization.\n+\t(gfc_get_symbol_decl, create_function_arglist,\n+\tgfc_trans_deferred_vars): Update for CFI.\n+\t(convert_CFI_desc): Remove and replace by ...\n+\t(gfc_conv_cfi_to_gfc): ... this function\n+\t(gfc_generate_function_code): Call it; create local GFC var for CFI.\n+\t* trans-expr.c (gfc_maybe_dereference_var): Handle CFI.\n+\t(gfc_conv_subref_array_arg): Handle the if-noncontigous-only copy in\n+\twhen the result should be a descriptor.\n+\t(gfc_conv_gfc_desc_to_cfi_desc): Completely rewritten.\n+\t(gfc_conv_procedure_call): CFI fixes.\n+\t* trans-openmp.c (gfc_omp_is_optional_argument,\n+\tgfc_omp_check_optional_argument): Handle optional\n+\tCFI.\n+\t* trans-stmt.c (gfc_trans_select_rank_cases): Cleanup, avoid invalid\n+\tcode for allocatable/pointer dummies, which cannot be assumed size.\n+\t* trans-types.c (gfc_cfi_descriptor_base): New global var.\n+\t(gfc_get_dtype_rank_type): Skip rank init for rank < 0.\n+\t(gfc_sym_type): Handle CFI dummies.\n+\t(gfc_get_function_type): Update call.\n+\t(gfc_get_cfi_dim_type, gfc_get_cfi_type): New.\n+\t* trans-types.h (gfc_sym_type): Update prototype.\n+\t(gfc_get_cfi_type): New prototype.\n+\t* trans.c (gfc_trans_runtime_check): Make conditions more consistent\n+\tto avoid '<logical> AND_THEN <long int>' in conditions.\n+\t* trans.h (gfor_fndecl_cfi_to_gfc, gfor_fndecl_gfc_to_cfi): Remove\n+\tglobal-var declaration.\n+\n+2021-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102745\n+\t* intrinsic.c (gfc_convert_type_warn): Fix checks by checking CLASS\n+\tand do typcheck in correct order for type extension.\n+\t* misc.c (gfc_typename): Print proper not internal CLASS type name.\n+\n 2021-10-15  Harald Anlauf  <anlauf@gmx.de>\n \t    Tobias Burnus  <tobias@codesourcery.com>\n "}, {"sha": "c8dcf858f7edc8274497309c0215f1f70fa44ddf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,131 @@\n+2021-10-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/102796\n+\t* g++.dg/pr102796.C: New.\n+\n+2021-10-18  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/declare-variant-15.f90 (variant2, base2, test2):\n+\tAdd tests.\n+\t* gfortran.dg/gomp/declare-variant-16.f90 (base2, variant2, test2):\n+\tAdd tests.\n+\n+2021-10-18  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/102761\n+\t* gcc.target/i386/pr102761.c: New test.\n+\n+2021-10-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/template/crash90.C: Check location of pedwarn.\n+\n+2021-10-18  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc.target/i386/387-12.c (dg-do compile): Require ia32.\n+\t(dg-options): Remove -m32.\n+\n+2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/i386/387-12.c: Add explicit -m32 option.\n+\n+2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/bfin/ones.c: New test case.\n+\t* gcc.target/bfin/parity.c: New test case.\n+\t* gcc.target/bfin/popcount.c: New test case.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102788\n+\t* g++.dg/vect/pr102788.cc: New testcase.\n+\n+2021-10-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/bfin/ssabs.c: New test case.\n+\t* gcc.target/bfin/ssneg.c: New test case.\n+\n+2021-10-18  prathamesh.kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR target/93183\n+\t* gcc.target/aarch64/sve/cond_unary_4.c: Adjust.\n+\t* gcc.target/aarch64/sve/pr93183.c: New test.\n+\n+2021-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102086\n+\tPR fortran/92189\n+\tPR fortran/92621\n+\tPR fortran/101308\n+\tPR fortran/101309\n+\tPR fortran/101635\n+\tPR fortran/92482\n+\t* gfortran.dg/ISO_Fortran_binding_4.f90: Extend testcase.\n+\t* gfortran.dg/PR100914.f90: Remove xfail.\n+\t* gfortran.dg/PR100915.c: Expect CFI_type_cfunptr.\n+\t* gfortran.dg/PR100915.f90: Handle CFI_type_cfunptr != CFI_type_cptr.\n+\t* gfortran.dg/PR93963.f90: Extend select-rank tests.\n+\t* gfortran.dg/bind-c-intent-out.f90: Change to dg-do run,\n+\tupdate scan-dump.\n+\t* gfortran.dg/bind_c_array_params_2.f90: Update/extend scan-dump.\n+\t* gfortran.dg/bind_c_char_10.f90: Update scan-dump.\n+\t* gfortran.dg/bind_c_char_8.f90: Remove dg-error \"sorry\".\n+\t* gfortran.dg/c-interop/allocatable-dummy.f90: Remove xfail.\n+\t* gfortran.dg/c-interop/c1255-1.f90: Likewise.\n+\t* gfortran.dg/c-interop/c407c-1.f90: Update dg-error.\n+\t* gfortran.dg/c-interop/cf-descriptor-5.f90: Remove xfail.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-3.f90: Likewise.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-4.f90: Likewise.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-5.f90: Likewise.\n+\t* gfortran.dg/c-interop/contiguous-2.f90: Likewise.\n+\t* gfortran.dg/c-interop/contiguous-3.f90: Likewise.\n+\t* gfortran.dg/c-interop/deferred-character-1.f90: Likewise.\n+\t* gfortran.dg/c-interop/deferred-character-2.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-descriptor-3.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-descriptor-5.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-descriptor-6.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-3.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-4.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-5.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-6.f90: Likewise.\n+\t* gfortran.dg/c-interop/ff-descriptor-5.f90: Likewise.\n+\t* gfortran.dg/c-interop/ff-descriptor-6.f90: Likewise.\n+\t* gfortran.dg/c-interop/fc-descriptor-7.f90: Remove xfail + extend.\n+\t* gfortran.dg/c-interop/fc-descriptor-7-c.c: Update for changes.\n+\t* gfortran.dg/c-interop/shape.f90: Add implicit none.\n+\t* gfortran.dg/c-interop/typecodes-array-char-c.c: Add kind=4 char.\n+\t* gfortran.dg/c-interop/typecodes-array-char.f90: Likewise.\n+\t* gfortran.dg/c-interop/typecodes-array-float128.f90: Remove xfail.\n+\t* gfortran.dg/c-interop/typecodes-scalar-basic.f90: Likewise.\n+\t* gfortran.dg/c-interop/typecodes-scalar-float128.f90: Likewise.\n+\t* gfortran.dg/c-interop/typecodes-scalar-int128.f90: Likewise.\n+\t* gfortran.dg/c-interop/typecodes-scalar-longdouble.f90: Likewise.\n+\t* gfortran.dg/iso_c_binding_char_1.f90: Remove dg-error \"sorry\".\n+\t* gfortran.dg/pr93792.f90: Turn XFAIL into PASS.\n+\t* gfortran.dg/ISO_Fortran_binding_19.f90: New test.\n+\t* gfortran.dg/assumed_type_12.f90: New test.\n+\t* gfortran.dg/assumed_type_13.c: New test.\n+\t* gfortran.dg/assumed_type_13.f90: New test.\n+\t* gfortran.dg/bind-c-char-descr.f90: New test.\n+\t* gfortran.dg/bind-c-contiguous-1.c: New test.\n+\t* gfortran.dg/bind-c-contiguous-1.f90: New test.\n+\t* gfortran.dg/bind-c-contiguous-2.f90: New test.\n+\t* gfortran.dg/bind-c-contiguous-3.c: New test.\n+\t* gfortran.dg/bind-c-contiguous-3.f90: New test.\n+\t* gfortran.dg/bind-c-contiguous-4.c: New test.\n+\t* gfortran.dg/bind-c-contiguous-4.f90: New test.\n+\t* gfortran.dg/bind-c-contiguous-5.c: New test.\n+\t* gfortran.dg/bind-c-contiguous-5.f90: New test.\n+\n+2021-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102798\n+\t* gcc.dg/pr102798.c: New testcase.\n+\n+2021-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102745\n+\t* gfortran.dg/class_72.f90: New.\n+\n 2021-10-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51851"}, {"sha": "67d866d7b4eb08b36b58805768ede2fe22f0b3e1", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,7 @@\n+2021-10-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* charset.c (convert_oct): Remove unused but set variable.\n+\n 2021-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* init.c (lang_defaults): Implement P2334R1, enable elifdef for"}, {"sha": "ccad9a355ee17ab16612b38e5563ad232f816dd3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,17 @@\n+2021-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102086\n+\tPR fortran/92189\n+\tPR fortran/92621\n+\tPR fortran/101308\n+\tPR fortran/101309\n+\tPR fortran/101635\n+\tPR fortran/92482\n+\t* ISO_Fortran_binding.h (CFI_type_cfunptr): Make unique type again.\n+\t* runtime/ISO_Fortran_binding.c (cfi_desc_to_gfc_desc,\n+\tgfc_desc_to_cfi_desc): Add comment that those are no longer called\n+\tby new code.\n+\n 2021-09-27  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/94070"}, {"sha": "8a616fdfdc6a4feaab19e2dc5aa9857fd34516e4", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d1f632ff3f680550d3b186b60176022f41190/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d1f632ff3f680550d3b186b60176022f41190/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ce4d1f632ff3f680550d3b186b60176022f41190", "patch": "@@ -1,3 +1,19 @@\n+2021-10-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/linux/affinity.c (gomp_affinity_init_numa_domains): Add\n+\t&& gomp_places_list_len < count after nfirst <= nlast loop condition.\n+\n+2021-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/102086\n+\tPR fortran/92189\n+\tPR fortran/92621\n+\tPR fortran/101308\n+\tPR fortran/101309\n+\tPR fortran/101635\n+\tPR fortran/92482\n+\t* testsuite/libgomp.fortran/optional-bind-c.f90: New test.\n+\n 2021-10-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/libgomp.c/affinity-1.c (struct places): Change name field"}]}