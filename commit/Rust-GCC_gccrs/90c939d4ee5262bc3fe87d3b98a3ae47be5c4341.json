{"sha": "90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBjOTM5ZDRlZTUyNjJiYzNmZTg3ZDNiOThhM2FlNDdiZTVjNDM0MQ==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-12T21:10:27Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-12T21:10:27Z"}, "message": "(unsigned_conversion_warning): Just use `warning',\n\nnot `pedwarn'; these diagnostics are not required by Standard C.\n\nFrom-SVN: r4909", "tree": {"sha": "45cee5741e1f3cee9340e7983068f09502d3b1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45cee5741e1f3cee9340e7983068f09502d3b1d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341/comments", "author": null, "committer": null, "parents": [{"sha": "c5a3d53f118578145df68c3224f63201def14fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a3d53f118578145df68c3224f63201def14fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a3d53f118578145df68c3224f63201def14fdd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fae1e44550b000c8a072dbef6f76cedcab2cff11", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "patch": "@@ -387,9 +387,9 @@ unsigned_conversion_warning (result, operand)\n     {\n       if (!int_fits_type_p (operand, signed_type (TREE_TYPE (result))))\n \t/* This detects cases like converting -129 or 256 to unsigned char.  */\n-\tpedwarn (\"large integer implicitly truncated to unsigned type\");\n+\twarning (\"large integer implicitly truncated to unsigned type\");\n       else if (warn_conversion)\n-\tpedwarn (\"negative integer implicitly converted to unsigned type\");\n+\twarning (\"negative integer implicitly converted to unsigned type\");\n     }\n }\n "}]}