{"sha": "16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1MTVlNWMxOTgxMjdiZDlkOWM0ZTMxM2I2ZTA2MWYyOWMzZTNkNQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-12-17T00:25:16Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-12-17T00:25:16Z"}, "message": "re PR target/19041 (-fvisibility=hidden causes bad codegen for common symbols)\n\n2004-12-16  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR target/19041\n        * config/darwin.c (machopic_symbol_defined_p): Return false\n        if the binds local and is a common symbol.\n\n2004-12-16  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR target/19041\n        * gcc.dg/visibility-c.c: New test.\n\nFrom-SVN: r92292", "tree": {"sha": "c058662cf524322a32e75bb25f7fb217c41f764e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c058662cf524322a32e75bb25f7fb217c41f764e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/comments", "author": null, "committer": null, "parents": [{"sha": "67ba1be668b25ae8d52d6e22d4a78f9b8f197cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ba1be668b25ae8d52d6e22d4a78f9b8f197cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67ba1be668b25ae8d52d6e22d4a78f9b8f197cc3"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "c323cbf4626dcf0025372fdcdbf966d75b04b1aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "patch": "@@ -1,3 +1,9 @@\n+2004-12-16  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR target/19041\n+\t* config/darwin.c (machopic_symbol_defined_p): Return false\n+\tif the binds local and is a common symbol.\n+\n 2004-12-16  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.md (extv, extzv, insv): Revalidate the"}, {"sha": "7b4943b5a159962a178fd3d8ae88d4d6db5c75d3", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "patch": "@@ -90,16 +90,30 @@ name_needs_quotes (const char *name)\n   return 0;\n }\n \n-/*\n- * flag_pic = 1 ... generate only indirections\n- * flag_pic = 2 ... generate indirections and pure code\n- */\n-\n+/* Return true if SYM_REF can be used without an indirection.  */\n static int\n machopic_symbol_defined_p (rtx sym_ref)\n {\n-  return (SYMBOL_REF_FLAGS (sym_ref) & MACHO_SYMBOL_FLAG_DEFINED)\n-    || (SYMBOL_REF_LOCAL_P (sym_ref) && ! SYMBOL_REF_EXTERNAL_P (sym_ref));\n+  if (SYMBOL_REF_FLAGS (sym_ref) & MACHO_SYMBOL_FLAG_DEFINED)\n+    return true;\n+\n+  /* If a symbol references local and is not an extern to this\n+     file, then the symbol might be able to declared as defined.  */\n+  if (SYMBOL_REF_LOCAL_P (sym_ref) && ! SYMBOL_REF_EXTERNAL_P (sym_ref))\n+    {\n+      /* If the symbol references a variable and the variable is a\n+\t common symbol, then this symbol is not defined.  */\n+      if (SYMBOL_REF_FLAGS (sym_ref) & MACHO_SYMBOL_FLAG_VARIABLE)\n+\t{\n+\t  tree decl = SYMBOL_REF_DECL (sym_ref);\n+\t  if (!decl)\n+\t    return true;\n+\t  if (DECL_COMMON (decl))\n+\t    return false;\n+\t}\n+      return true;\n+    }\n+  return false;\n }\n \n /* This module assumes that (const (symbol_ref \"foo\")) is a legal pic"}, {"sha": "c5530fad3a4847792f64d313ddbb6266e865ed50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "patch": "@@ -1,3 +1,8 @@\n+2004-12-16  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR target/19041\n+\t* gcc.dg/visibility-c.c: New test.\n+\n 2004-12-16  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/18493"}, {"sha": "66b4d2547c63d71dc950b3969f96befc429499fc", "filename": "gcc/testsuite/gcc.dg/visibility-c.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16515e5c198127bd9d9c4e313b6e061f29c3e3d5/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-c.c?ref=16515e5c198127bd9d9c4e313b6e061f29c3e3d5", "patch": "@@ -0,0 +1,11 @@\n+/* Test that visibility works on common symbols also. */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-hidden \"options\" } } */\n+\n+int options  __attribute__((__visibility__(\"hidden\")));\n+\n+void f(void)\n+{\n+  options = 0;\n+}"}]}