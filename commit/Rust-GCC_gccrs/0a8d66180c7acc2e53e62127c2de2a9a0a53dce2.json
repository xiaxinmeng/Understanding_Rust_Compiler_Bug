{"sha": "0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE4ZDY2MTgwYzdhY2MyZTUzZTYyMTI3YzJkZTJhOWEwYTUzZGNlMg==", "commit": {"author": {"name": "Ben Collins", "email": "bcollins@debian.org", "date": "2000-03-06T18:05:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-03-06T18:05:52Z"}, "message": "Makefile.in: Pass a new MULTILIB_EXCLUSIONS option as the sixth argument to genmultilib.\n\n\t* Makefile.in: Pass a new MULTILIB_EXCLUSIONS option as the sixth\n\targument to genmultilib.\n\t* genmultilib: accept new MULTILIB_EXCLUSIONS option and output\n\tthe contents into the multilib.h header.\n\t* gcc.c: Declare multilib_exclusions for the specs file.\n\t(set_multilib_dir): Use it.\n\t(print_multilib_info): Likewise.\n\t* t-linux64: Declare arguments for new MULTILIB_EXCLUSIONS option\n\tto pass to genmultilib.\n\nFrom-SVN: r32365", "tree": {"sha": "222bb1ec57e5b5560e626764100e5afd5f9e13f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/222bb1ec57e5b5560e626764100e5afd5f9e13f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/comments", "author": null, "committer": null, "parents": [{"sha": "fd05eb8097447db2163a7900a2db30be7aaf9851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd05eb8097447db2163a7900a2db30be7aaf9851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd05eb8097447db2163a7900a2db30be7aaf9851"}], "stats": {"total": 264, "additions": 233, "deletions": 31}, "files": [{"sha": "82f31b6cdd44c416fa3040a46062af9ccc261a39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "patch": "@@ -1,3 +1,15 @@\n+1999-12-16  Ben Collins  <bcollins@debian.org>\n+\n+\t* Makefile.in: Pass a new MULTILIB_EXCLUSIONS option as the sixth\n+\targument to genmultilib.\n+\t* genmultilib: accept new MULTILIB_EXCLUSIONS option and output\n+\tthe contents into the multilib.h header.\n+\t* gcc.c: Declare multilib_exclusions for the specs file.\n+\t(set_multilib_dir): Use it.\n+\t(print_multilib_info): Likewise.\n+\t* t-linux64: Declare arguments for new MULTILIB_EXCLUSIONS option\n+\tto pass to genmultilib.\n+\n 2000-03-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (built_in_class_names, built_in_names): Constify a"}, {"sha": "7817ed141cc876b09431d2fb6324b8663633aab2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "patch": "@@ -1182,7 +1182,8 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \t  \"$(MULTILIB_DIRNAMES)\" \\\n \t  \"$(MULTILIB_MATCHES)\" \\\n \t  \"$(MULTILIB_EXCEPTIONS)\" \\\n-\t  \"$(MULTILIB_EXTRA_OPTS)\" > tmp-mlib.h\n+\t  \"$(MULTILIB_EXTRA_OPTS)\" \\\n+\t  \"$(MULTILIB_EXCLUSIONS)\" > tmp-mlib.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-mlib.h multilib.h\n \ttouch s-mlib\n "}, {"sha": "bf81219d07e34a5ac56a177e19a72468bca6bfb7", "filename": "gcc/config/sparc/t-linux64", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2Fconfig%2Fsparc%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2Fconfig%2Fsparc%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-linux64?ref=0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "patch": "@@ -1,7 +1,8 @@\n MULTILIB_OPTIONS = m64/m32 mno-app-regs|mcmodel=medany\n MULTILIB_DIRNAMES = 64 32 alt \n MULTILIB_MATCHES = mcmodel?medany=mcmodel?medmid\n-MULTILIB_EXCEPTIONS = *m32/*medany *m32/*mno-app-regs\n+MULTILIB_EXCEPTIONS = m32/mno-app-regs* m32/mcmodel=*\n+MULTILIB_EXCLUSIONS = m32/!m64/mno-app-regs m32/!m64/mcmodel=medany\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}, {"sha": "1e1b15408c9a0d98d46b4b3b78b2f7e391997f4e", "filename": "gcc/gcc.c", "status": "modified", "additions": 175, "deletions": 14, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "patch": "@@ -511,6 +511,7 @@ static struct obstack multilib_obstack;\n static char *multilib_select;\n static char *multilib_matches;\n static char *multilib_defaults;\n+static char *multilib_exclusions;\n #include \"multilib.h\"\n \n /* Check whether a particular argument is a default argument.  */\n@@ -1143,6 +1144,7 @@ static struct spec_list static_specs[] = {\n   INIT_STATIC_SPEC (\"multilib_defaults\",\t&multilib_defaults),\n   INIT_STATIC_SPEC (\"multilib_extra\",\t\t&multilib_extra),\n   INIT_STATIC_SPEC (\"multilib_matches\",\t\t&multilib_matches),\n+  INIT_STATIC_SPEC (\"multilib_exclusions\",\t&multilib_exclusions),\n   INIT_STATIC_SPEC (\"linker\",\t\t\t&linker_name_spec),\n };\n \n@@ -5083,6 +5085,13 @@ main (argc, argv)\n     obstack_1grow (&multilib_obstack, 0);\n     multilib_matches = obstack_finish (&multilib_obstack);\n \n+    q = multilib_exclusions_raw;\n+    while ((p = *q++) != (char *) 0)\n+\tobstack_grow (&multilib_obstack, p, strlen (p));\n+\n+    obstack_1grow (&multilib_obstack, 0);\n+    multilib_exclusions = obstack_finish (&multilib_obstack);\n+    \n     need_space = FALSE;\n     for (i = 0;\n \t i < sizeof (multilib_defaults_raw) / sizeof (multilib_defaults_raw[0]);\n@@ -5929,23 +5938,82 @@ default_arg (p, len)\n   return 0;\n }\n \n-/* Work out the subdirectory to use based on the\n-   options.  The format of multilib_select is a list of elements.\n-   Each element is a subdirectory name followed by a list of options\n-   followed by a semicolon.  gcc will consider each line in turn.  If\n-   none of the options beginning with an exclamation point are\n-   present, and all of the other options are present, that\n-   subdirectory will be used.  */\n+/* Work out the subdirectory to use based on the options. The format of\n+   multilib_select is a list of elements. Each element is a subdirectory\n+   name followed by a list of options followed by a semicolon. The format\n+   of multilib_exclusions is the same, but without the preceding\n+   directory. First gcc will check the exclusions, if none of the options\n+   beginning with an exclamation point are present, and all of the other\n+   options are present, then we will ignore this completely. Passing\n+   that, gcc will consider each multilib_select in turn using the same\n+   rules for matching the options. If a match is found, that subdirectory\n+   will be used.  */\n \n static void\n set_multilib_dir ()\n {\n-  char *p = multilib_select;\n+  char *p;\n   int this_path_len;\n   char *this_path, *this_arg;\n   int not_arg;\n   int ok;\n \n+  p = multilib_exclusions;\n+  while (*p != '\\0')\n+    {\n+      /* Ignore newlines.  */\n+      if (*p == '\\n')\n+        {\n+          ++p;\n+          continue;\n+        }\n+\n+      /* Check the arguments.  */\n+      ok = 1;\n+      while (*p != ';')\n+        {\n+          if (*p == '\\0')\n+            abort ();\n+\n+          if (! ok)\n+            {\n+              ++p;\n+              continue;\n+            }\n+\n+          this_arg = p;\n+          while (*p != ' ' && *p != ';')\n+            {\n+              if (*p == '\\0')\n+                abort ();\n+              ++p;\n+            }\n+\n+          if (*this_arg != '!')\n+            not_arg = 0;\n+          else\n+            {\n+              not_arg = 1;\n+              ++this_arg;\n+            }\n+  \n+\t  ok = used_arg (this_arg, p - this_arg);\n+\t  if (not_arg)\n+\t    ok = ! ok;\n+\n+          if (*p == ' ')\n+            ++p;\n+        }\n+\n+      if (ok)\n+        {\n+\t  return;\n+        }\n+\n+      ++p;\n+    }\n+\n+  p = multilib_select;\n   while (*p != '\\0')\n     {\n       /* Ignore newlines.  */\n@@ -6037,7 +6105,8 @@ set_multilib_dir ()\n    matches.  The options are print without a leading dash.  There are\n    no spaces to make it easy to use the information in the shell.\n    Each subdirectory is printed only once.  This assumes the ordering\n-   generated by the genmultilib script.  */\n+   generated by the genmultilib script. Also, we leave out ones that match\n+   the exclusions.  */\n \n static void\n print_multilib_info ()\n@@ -6049,6 +6118,7 @@ print_multilib_info ()\n \n   while (*p != '\\0')\n     {\n+      skip = 0;\n       /* Ignore newlines.  */\n       if (*p == '\\n')\n \t{\n@@ -6065,12 +6135,103 @@ print_multilib_info ()\n \t  ++p;\n \t}\n \n-      /* If this is a duplicate, skip it.  */\n-      skip = (last_path != 0 && p - this_path == last_path_len\n-\t      && ! strncmp (last_path, this_path, last_path_len));\n+      /* Check for matches with the multilib_exclusions. We don't bother\n+         with the '!' in either list. If any of the exclusion rules match\n+         all of its options with the select rule, we skip it.  */\n+        {\n+          char *e = multilib_exclusions;\n+\t  char *this_arg;\n+\n+\t  while (*e != '\\0')\n+\t    {\n+\t      int m = 1;\t\n+\t      /* Ignore newlines.  */\n+\t      if (*e == '\\n')\n+\t        {\n+\t          ++e;\n+\t          continue;\n+\t        }\n+\t      \n+\t      /* Check the arguments.  */\n+\t      while (*e != ';')\n+\t        {\n+\t\t  char *q;\n+\t\t  int mp = 0;\n+\n+\t          if (*e == '\\0')\n+\t            abort ();\n+\n+\t\t  if (! m)\n+\t\t    {\n+\t\t      ++e;\n+\t\t      continue;\n+\t\t    }\n+\n+\t          this_arg = e;\n+\n+\t          while (*e != ' ' && *e != ';')\n+\t            {\n+\t              if (*e == '\\0')\n+\t                abort ();\n+\t              ++e;\n+\t            }\n+\t\t  \n+  \t\t  q = p + 1;\n+\t\t  while (*q != ';')\n+\t\t    {\n+\t\t      char *arg;\n+\t\t      int len = e - this_arg;\n+\n+\t\t      if (*q == '\\0')\n+\t\t\tabort ();\n+\t\n+\t\t      arg = q;\n+\n+\t\t      while (*q != ' ' && *q != ';')\n+\t\t\t{\n+\t\t\t  if (*q == '\\0')\n+\t\t\t    abort ();\n+\t\t\t    ++q;\n+\t\t\t}\n \n-      last_path = this_path;\n-      last_path_len = p - this_path;\n+\t\t      if (! strncmp(arg, this_arg, (len < q - arg) ? q - arg : len) ||\n+\t\t\t  default_arg(this_arg, e - this_arg))\n+\t\t        {\n+\t\t\t  mp = 1;\n+\t\t\t  break;\n+\t\t\t}\n+\n+\t\t      if (*q == ' ')\n+\t\t\t++q;\n+\t\t      \n+\t    \t    }\n+\n+\t\t  if (! mp)\n+\t\t    m = 0;\n+\n+\t          if (*e == ' ')\n+\t            ++e;\n+\t        }\n+\t      if (m)\n+\t        {\n+\t\t  skip = 1;\n+\t\t  break;\n+\t\t}\n+\n+\t      if (*e != '\\0')\n+\t\t++e;\n+\t    }\n+\t}\n+\n+      if (! skip)\n+        {\n+          /* If this is a duplicate, skip it.  */\n+          skip = (last_path != 0 && p - this_path == last_path_len\n+                  && ! strncmp (last_path, this_path, last_path_len));\n+\n+          last_path = this_path;\n+          last_path_len = p - this_path;\n+\t}\n \n       /* If this directory requires any default arguments, we can skip\n \t it.  We will already have printed a directory identical to"}, {"sha": "6610b7bd032912e1e201b6dd5238aef5b91acc1e", "filename": "gcc/genmultilib", "status": "modified", "additions": 42, "deletions": 15, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8d66180c7acc2e53e62127c2de2a9a0a53dce2/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=0a8d66180c7acc2e53e62127c2de2a9a0a53dce2", "patch": "@@ -53,6 +53,16 @@\n # The optional fifth argument is a list of options that should be\n # used whenever building multilib libraries.\n \n+# The optional sixth argument is a list of exclusions used internally by\n+# the compiler similar to exceptions. The difference being that exclusions\n+# allow matching default options that genmultilib does not know about and\n+# is done at runtime as opposed to being sorted out at compile time.\n+# Each element in the list is a seperate exclusion rule. Each rule is\n+# a list of options (sans preceding '-') seperated by a '/'. The options\n+# on the rule are grouped as an AND operation, and all options much match\n+# for the rule to exclude a set. Options can be preceded with a '!' to\n+# match a logical NOT.\n+\n # The output looks like\n #   #define MULTILIB_MATCHES \"\\\n #   SUBDIRECTORY OPTIONS;\\\n@@ -66,30 +76,36 @@\n # The order of the subdirectories is such that they can be created in\n # order; that is, a subdirectory is preceded by all its parents.\n \n-# Here is a example (this is simplified from the actual 680x0 case):\n-#   genmultilib \"m68000/m68020 msoft-float\" \"m68000 m68020 msoft-float\"\n-#\t\t\"m68000=mc68000\"\n+# Here is an example (this is from the actual sparc64 case):\n+#   genmultilib 'm64/m32 mno-app-regs|mcmodel=medany' '64 32 alt'\n+#\t\t'mcmodel?medany=mcmodel?medmid' 'm32/mno-app-regs* m32/mcmodel=*'\n+#\t\t'm32/!m64/mno-app-regs m32/!m64/mcmodel=medany'\n # This produces:\n-#   \". !m68000 !mc68000 !m68020 !msoft-float;\",\n-#   \"m68000 m68000 !m68020 !msoft-float;\",\n-#   \"m68000 mc60000 !m68020 !msoft-float;\",\n-#   \"m68020 !m68000 !mc68000 m68020 !msoft-float;\",\n-#   \"msoft-float !m68000 !mc68000 !m68020 msoft-float;\",\n-#   \"m68000/msoft-float m68000 !m68020 msoft-float;\",\n-#   \"m68000/msoft-float mc68000 !m68020 msoft-float;\",\n-#   \"m68020/msoft-float !m68000 !mc68000 m68020 msoft-float;\",\n+#   \". !m64 !m32 !mno-app-regs !mcmodel=medany;\",\n+#   \"64 m64 !m32 !mno-app-regs !mcmodel=medany;\",\n+#   \"32 !m64 m32 !mno-app-regs !mcmodel=medany;\",\n+#   \"alt !m64 !m32 mno-app-regs mcmodel=medany;\",\n+#   \"alt !m64 !m32 mno-app-regs !mcmodel=medany;\",\n+#   \"alt !m64 !m32 !mno-app-regs mcmodel=medany;\",\n+#   \"64/alt m64 !m32 mno-app-regs mcmodel=medany;\",\n+#   \"64/alt m64 !m32 mno-app-regs !mcmodel=medany;\",\n+#   \"64/alt m64 !m32 !mno-app-regs mcmodel=medany;\",\n #\n-# The effect is that `gcc -msoft-float' (for example) will append\n-# msoft-float to the directory name when searching for libraries or\n-# startup files, and `gcc -m68000 -msoft-float' (for example) will\n-# append m68000/msoft-float.\n+# The effect is that `gcc -mno-app-regs' (for example) will append \"alt\"\n+# to the directory name when searching for libraries or startup files and\n+# `gcc -m32 -mcmodel=medany' (for example) will append \"32/alt\". Also note\n+# that exclusion above is moot, unless the compiler had a default of -m32,\n+# which would mean that all of the \"alt\" directories (not the 64/alt ones)\n+# would be ignored (not generated, nor used) since the exclusion also\n+# matches the multilib_default args.\n \n # Copy the positional parameters into variables.\n options=$1\n dirnames=$2\n matches=$3\n exceptions=$4\n extra=$5\n+exclusions=$6\n \n echo \"static char *multilib_raw[] = {\"\n \n@@ -286,6 +302,17 @@ echo \"};\"\n # Output the default options now\n echo \"\"\n echo \"static char *multilib_extra = \\\"${extra}\\\";\"\n+\n+# Output the exclusion rules now\n+echo \"\"\n+echo \"static char *multilib_exclusions_raw[] = {\"\n+for rule in ${exclusions}; do\n+  s=`echo ${rule} | sed -e 's,/, ,g'`\n+  echo \"\\\"${s};\\\",\"\n+done\n+echo \"NULL\"\n+echo \"};\"\n+\n rm -f tmpmultilib2\n \n exit 0"}]}