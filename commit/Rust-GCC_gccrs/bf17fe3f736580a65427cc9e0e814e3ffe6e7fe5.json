{"sha": "bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYxN2ZlM2Y3MzY1ODBhNjU0MjdjYzllMGU4MTRlM2ZmZTZlN2ZlNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-02-17T09:08:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-02-17T09:08:09Z"}, "message": "utils2.c (gnat_protect_expr): Make a SAVE_EXPR only for fat pointer or scalar types.\n\n\t* gcc-interface/utils2.c (gnat_protect_expr): Make a SAVE_EXPR only\n\tfor fat pointer or scalar types.\n\nFrom-SVN: r233484", "tree": {"sha": "df70e4758110251ef340a136d8439f15b3847d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df70e4758110251ef340a136d8439f15b3847d6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/comments", "author": null, "committer": null, "parents": [{"sha": "244901a5721d5bf5597ac71117e50b190337da44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244901a5721d5bf5597ac71117e50b190337da44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244901a5721d5bf5597ac71117e50b190337da44"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "60ff796610222dd7f86c87c759d8a60b7c011ea4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "patch": "@@ -1,3 +1,8 @@\n+2016-02-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.c (gnat_protect_expr): Make a SAVE_EXPR only\n+\tfor fat pointer or scalar types.\n+\n 2016-02-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/gigi.h (maybe_debug_type): New inline function."}, {"sha": "44a05fb012d4fcc95d0a3881e40872f664f010a5", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "patch": "@@ -2559,12 +2559,11 @@ gnat_protect_expr (tree exp)\n     return build3 (code, type, gnat_protect_expr (TREE_OPERAND (exp, 0)),\n \t\t   TREE_OPERAND (exp, 1), TREE_OPERAND (exp, 2));\n \n-  /* If this is a fat pointer or something that can be placed in a register,\n-     just make a SAVE_EXPR.  Likewise for a CALL_EXPR as large objects are\n-     returned via invisible reference in most ABIs so the temporary will\n-     directly be filled by the callee.  */\n+  /* If this is a fat pointer or a scalar, just make a SAVE_EXPR.  Likewise\n+     for a CALL_EXPR as large objects are returned via invisible reference\n+     in most ABIs so the temporary will directly be filled by the callee.  */\n   if (TYPE_IS_FAT_POINTER_P (type)\n-      || TYPE_MODE (type) != BLKmode\n+      || !AGGREGATE_TYPE_P (type)\n       || code == CALL_EXPR)\n     return save_expr (exp);\n "}, {"sha": "397b40f4049d22c9ddb748eb400b1032cac62cc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "patch": "@@ -1,3 +1,7 @@\n+2016-02-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr46.ad[sb]: New test.\n+\n 2016-02-16  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR Target/48344"}, {"sha": "84ac91d413df587e496ee1566129d1cebc77dffd", "filename": "gcc/testsuite/gnat.dg/discr46.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr46.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr46.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr46.adb?ref=bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "patch": "@@ -0,0 +1,14 @@\n+-- { dg-do compile }\n+\n+package body Discr46 is\n+\n+   function F (Id : Enum) return Integer is\n+      Node : Integer := 0;\n+   begin\n+      if A (Id).R.D = True then\n+         Node := A (Id).R.T;\n+      end if;\n+      return Node;\n+   end; \n+\n+end Discr46;"}, {"sha": "18b0de13876c93791059f74d66dd167d0ac96f61", "filename": "gcc/testsuite/gnat.dg/discr46.ads", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr46.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr46.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr46.ads?ref=bf17fe3f736580a65427cc9e0e814e3ffe6e7fe5", "patch": "@@ -0,0 +1,24 @@\n+package Discr46 is\n+\n+   type Enum is (One, Two, Three);\n+   for Enum use (One => 1, Two => 2, Three => 3);\n+\n+   type Rec1 (D : Boolean := False) is record\n+      case D is\n+         when False => null;\n+         when True => T : Integer;\n+      end case;\n+   end record;\n+\n+   type Rec2 is record\n+      R : Rec1;\n+      C : Character;\n+   end record;\n+\n+   type Arr is array (Enum) of Rec2;\n+\n+   A : Arr; \n+\n+   function F (Id : Enum) return Integer;  \n+\n+end Discr46;"}]}