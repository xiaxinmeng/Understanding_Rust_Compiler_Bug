{"sha": "c5db54583f5bdfa19d2b64599e78e98821924193", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVkYjU0NTgzZjViZGZhMTlkMmI2NDU5OWU3OGU5ODgyMTkyNDE5Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-21T00:07:16Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-21T00:07:16Z"}, "message": "sel_bb_{head|end} return rtx_insn\n\n2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n\n\t* sel-sched-ir.h (exit_insn): Strengthen from rtx to rtx_insn *.\n\t(sel_bb_head): Strengthen return type insn_t (currently just an\n\trtx) to rtx_insn *.\n\t(sel_bb_end): Likewise.\n\n\t* sel-sched-ir.c (exit_insn): Strengthen from rtx to rtx_insn *.\n\t(sel_bb_head): Strengthen return type and local \"head\" from\n\tinsn_t (currently just an rtx) to rtx_insn *.\n\t(sel_bb_end): Likewise for return type.\n\t(free_nop_and_exit_insns): Replace use of NULL_RTX with NULL when\n\tworking with insn.\n\nFrom-SVN: r214247", "tree": {"sha": "0286356e9b2d0b926d2ac15105ab41fae492bc17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0286356e9b2d0b926d2ac15105ab41fae492bc17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5db54583f5bdfa19d2b64599e78e98821924193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5db54583f5bdfa19d2b64599e78e98821924193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5db54583f5bdfa19d2b64599e78e98821924193", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5db54583f5bdfa19d2b64599e78e98821924193/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "636eb204a40ea20df022fca65156bfb667da93ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636eb204a40ea20df022fca65156bfb667da93ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636eb204a40ea20df022fca65156bfb667da93ec"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "ccef56806d705ba6ab762dabff9d8388e2275a82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5db54583f5bdfa19d2b64599e78e98821924193/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5db54583f5bdfa19d2b64599e78e98821924193/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5db54583f5bdfa19d2b64599e78e98821924193", "patch": "@@ -1,3 +1,17 @@\n+2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sel-sched-ir.h (exit_insn): Strengthen from rtx to rtx_insn *.\n+\t(sel_bb_head): Strengthen return type insn_t (currently just an\n+\trtx) to rtx_insn *.\n+\t(sel_bb_end): Likewise.\n+\n+\t* sel-sched-ir.c (exit_insn): Strengthen from rtx to rtx_insn *.\n+\t(sel_bb_head): Strengthen return type and local \"head\" from\n+\tinsn_t (currently just an rtx) to rtx_insn *.\n+\t(sel_bb_end): Likewise for return type.\n+\t(free_nop_and_exit_insns): Replace use of NULL_RTX with NULL when\n+\tworking with insn.\n+\n 2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n \n \t* basic-block.h (get_last_bb_insn): Strengthen return type from"}, {"sha": "7dffb535bf9a66bc5fb6dd7d47dc29c2d8b77548", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5db54583f5bdfa19d2b64599e78e98821924193/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5db54583f5bdfa19d2b64599e78e98821924193/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=c5db54583f5bdfa19d2b64599e78e98821924193", "patch": "@@ -132,7 +132,7 @@ static vec<rtx_note *> bb_note_pool;\n rtx nop_pattern = NULL_RTX;\n /* A special instruction that resides in EXIT_BLOCK.\n    EXIT_INSN is successor of the insns that lead to EXIT_BLOCK.  */\n-rtx exit_insn = NULL_RTX;\n+rtx_insn *exit_insn = NULL;\n \n /* TRUE if while scheduling current region, which is loop, its preheader\n    was removed.  */\n@@ -4530,10 +4530,10 @@ static struct\n /* Functions to work with control-flow graph.  */\n \n /* Return basic block note of BB.  */\n-insn_t\n+rtx_insn *\n sel_bb_head (basic_block bb)\n {\n-  insn_t head;\n+  rtx_insn *head;\n \n   if (bb == EXIT_BLOCK_PTR_FOR_FN (cfun))\n     {\n@@ -4548,7 +4548,7 @@ sel_bb_head (basic_block bb)\n       head = next_nonnote_insn (note);\n \n       if (head && (BARRIER_P (head) || BLOCK_FOR_INSN (head) != bb))\n-\thead = NULL_RTX;\n+\thead = NULL;\n     }\n \n   return head;\n@@ -4562,11 +4562,11 @@ sel_bb_head_p (insn_t insn)\n }\n \n /* Return last insn of BB.  */\n-insn_t\n+rtx_insn *\n sel_bb_end (basic_block bb)\n {\n   if (sel_bb_empty_p (bb))\n-    return NULL_RTX;\n+    return NULL;\n \n   gcc_assert (bb != EXIT_BLOCK_PTR_FOR_FN (cfun));\n \n@@ -5853,7 +5853,7 @@ setup_nop_and_exit_insns (void)\n void\n free_nop_and_exit_insns (void)\n {\n-  exit_insn = NULL_RTX;\n+  exit_insn = NULL;\n   nop_pattern = NULL_RTX;\n }\n "}, {"sha": "16e78067e3eef6de5ef3206dd28328b43d6eed34", "filename": "gcc/sel-sched-ir.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5db54583f5bdfa19d2b64599e78e98821924193/gcc%2Fsel-sched-ir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5db54583f5bdfa19d2b64599e78e98821924193/gcc%2Fsel-sched-ir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.h?ref=c5db54583f5bdfa19d2b64599e78e98821924193", "patch": "@@ -809,7 +809,7 @@ extern flist_t fences;\n extern rtx nop_pattern;\n \n /* An insn that 'contained' in EXIT block.  */\n-extern rtx exit_insn;\n+extern rtx_insn *exit_insn;\n \n /* Provide a separate luid for the insn.  */\n #define INSN_INIT_TODO_LUID (1)\n@@ -1012,8 +1012,8 @@ struct succs_info\n /* Some needed definitions.  */\n extern basic_block after_recovery;\n \n-extern insn_t sel_bb_head (basic_block);\n-extern insn_t sel_bb_end (basic_block);\n+extern rtx_insn *sel_bb_head (basic_block);\n+extern rtx_insn *sel_bb_end (basic_block);\n extern bool sel_bb_empty_p (basic_block);\n extern bool in_current_region_p (basic_block);\n \n@@ -1583,9 +1583,9 @@ extern bool insn_at_boundary_p (insn_t);\n \n /* Basic block and CFG functions.  */\n \n-extern insn_t sel_bb_head (basic_block);\n+extern rtx_insn *sel_bb_head (basic_block);\n extern bool sel_bb_head_p (insn_t);\n-extern insn_t sel_bb_end (basic_block);\n+extern rtx_insn *sel_bb_end (basic_block);\n extern bool sel_bb_end_p (insn_t);\n extern bool sel_bb_empty_p (basic_block);\n "}]}