{"sha": "0040ecb07f44769025a4d8e4952e8dd7b6d5149e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0MGVjYjA3ZjQ0NzY5MDI1YTRkOGU0OTUyZThkZDdiNmQ1MTQ5ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-04-13T11:51:28Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-13T11:51:28Z"}, "message": "Do not call memcpy with a NULL argument (PR gcov-profile/80413).\n\n2017-04-13  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/80413\n\t* gcov-io.c (gcov_write_string): Copy to buffer just when\n\tallocated size is greater than zero.\n\nFrom-SVN: r246903", "tree": {"sha": "fe6e31ea3731424b2034de5ecca201c14bee2789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe6e31ea3731424b2034de5ecca201c14bee2789"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0040ecb07f44769025a4d8e4952e8dd7b6d5149e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0040ecb07f44769025a4d8e4952e8dd7b6d5149e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0040ecb07f44769025a4d8e4952e8dd7b6d5149e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0040ecb07f44769025a4d8e4952e8dd7b6d5149e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43a3aa03aca20c7d641cf76354c3572f2a7e5864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a3aa03aca20c7d641cf76354c3572f2a7e5864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a3aa03aca20c7d641cf76354c3572f2a7e5864"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "740ca6664561f20b3810217655e227cf1d690f5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0040ecb07f44769025a4d8e4952e8dd7b6d5149e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0040ecb07f44769025a4d8e4952e8dd7b6d5149e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0040ecb07f44769025a4d8e4952e8dd7b6d5149e", "patch": "@@ -1,3 +1,9 @@\n+2017-04-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/80413\n+\t* gcov-io.c (gcov_write_string): Copy to buffer just when\n+\tallocated size is greater than zero.\n+\n 2017-04-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/80321"}, {"sha": "64dedd5528edd7399974890a35a6b1ce80fb1182", "filename": "gcc/gcov-io.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0040ecb07f44769025a4d8e4952e8dd7b6d5149e/gcc%2Fgcov-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0040ecb07f44769025a4d8e4952e8dd7b6d5149e/gcc%2Fgcov-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.c?ref=0040ecb07f44769025a4d8e4952e8dd7b6d5149e", "patch": "@@ -347,8 +347,12 @@ gcov_write_string (const char *string)\n   buffer = gcov_write_words (1 + alloc);\n \n   buffer[0] = alloc;\n-  buffer[alloc] = 0;\n-  memcpy (&buffer[1], string, length);\n+\n+  if (alloc > 0)\n+    {\n+      buffer[alloc] = 0; /* place nul terminators.  */\n+      memcpy (&buffer[1], string, length);\n+    }\n }\n #endif\n "}]}