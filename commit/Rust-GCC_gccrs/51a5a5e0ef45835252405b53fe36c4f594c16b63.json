{"sha": "51a5a5e0ef45835252405b53fe36c4f594c16b63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhNWE1ZTBlZjQ1ODM1MjUyNDA1YjUzZmUzNmM0ZjU5NGMxNmI2Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-06-26T11:07:20Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-06-26T11:07:20Z"}, "message": "syntax1.C: New test.\n\n\t* g++.old-deja/g++.pt/syntax1.C: New test.\n\t* g++.old-deja/g++.pt/syntax2.C: New test.\n\t* g++.old-deja/g++.other/syntax3.C: New test.\n\t* g++.old-deja/g++.other/syntax4.C: New test.\n\nFrom-SVN: r34708", "tree": {"sha": "a7af437d969a46399d450598d091450f1e8058df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7af437d969a46399d450598d091450f1e8058df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51a5a5e0ef45835252405b53fe36c4f594c16b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a5a5e0ef45835252405b53fe36c4f594c16b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a5a5e0ef45835252405b53fe36c4f594c16b63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a5a5e0ef45835252405b53fe36c4f594c16b63/comments", "author": null, "committer": null, "parents": [{"sha": "0404d86f340f43e55c2a62a59462311fbaef3d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0404d86f340f43e55c2a62a59462311fbaef3d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0404d86f340f43e55c2a62a59462311fbaef3d57"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "24233c120d9193de2aa90720be7ed303b83cf8a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51a5a5e0ef45835252405b53fe36c4f594c16b63", "patch": "@@ -1,3 +1,10 @@\n+2000-06-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.pt/syntax1.C: New test.\n+\t* g++.old-deja/g++.pt/syntax2.C: New test.\n+\t* g++.old-deja/g++.other/syntax3.C: New test.\n+\t* g++.old-deja/g++.other/syntax4.C: New test.\n+\n 2000-06-25  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* gcc.dg/20000623-1.c: Prototype exit and abort."}, {"sha": "9869333f6c41b50e832f89d9d8f1506caeb362ad", "filename": "gcc/testsuite/g++.old-deja/g++.other/syntax3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax3.C?ref=51a5a5e0ef45835252405b53fe36c4f594c16b63", "patch": "@@ -0,0 +1,21 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 June 2000 <nathan@codesourcery.com>\n+\n+// Origin GNATS bug report 262 from Jeremy Sanders <jss@ast.cam.ac.uk>\n+// and several others. With templates, it's very easy to say something\n+// erroneous like\n+//    template class X::X<whatever>\n+// The culprit\n+//    ... class X::X ...\n+// caused us to ICE as we got confused about pushing and popping scopes.\n+\n+class X\n+{\n+  public:\n+  X();\n+};\n+\n+class X::X () {}    // ERROR - parse error\n+X::X () {}"}, {"sha": "ee8e1a9ed740f17243500b109451a77ce45fecd1", "filename": "gcc/testsuite/g++.old-deja/g++.other/syntax4.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsyntax4.C?ref=51a5a5e0ef45835252405b53fe36c4f594c16b63", "patch": "@@ -0,0 +1,26 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 June 2000 <nathan@codesourcery.com>\n+\n+// Origin GNATS bug report 262 from Jeremy Sanders <jss@ast.cam.ac.uk>\n+// and several others. With templates, it's very easy to say something\n+// erroneous like\n+//    template class X::X<whatever>\n+// The culprit\n+//    ... class X::X ...\n+// caused us to ICE as we got confused about pushing and popping scopes.\n+\n+class X {\n+  X ();\n+};\n+\n+class Y {\n+  public:\n+  typedef ::X W;\n+  class Z;\n+};\n+\n+class Y::Z {};\n+class Y::W  () {}  // ERROR - parse error\n+Y::W::X () {}"}, {"sha": "787df529fcd18c81811caad697292bb18fe1947f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/syntax1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fsyntax1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fsyntax1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fsyntax1.C?ref=51a5a5e0ef45835252405b53fe36c4f594c16b63", "patch": "@@ -0,0 +1,26 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 June 2000 <nathan@codesourcery.com>\n+\n+// Origin GNATS bug report 262 from Jeremy Sanders <jss@ast.cam.ac.uk>\n+// and several others. With templates, it's very easy to say something\n+// erroneous like\n+//    template class X::X<whatever>\n+// The culprit\n+//    ... class X::X ...\n+// caused us to ICE as we got confused about pushing and popping scopes.\n+\n+\n+\n+class Y\n+{\n+  public:\n+  template <class T> Y(T &);\n+};\n+template <class T> Y::Y(T &) {}\n+\n+template class Y::Y (int);  // ERROR - parse error\n+template Y::Y (int);        // ERROR - template-id does not match\n+template Y::Y (int &);\n+"}, {"sha": "78e356c67975a4fa2c1b06ac5871dfba38e1385c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/syntax2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fsyntax2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5a5e0ef45835252405b53fe36c4f594c16b63/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fsyntax2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fsyntax2.C?ref=51a5a5e0ef45835252405b53fe36c4f594c16b63", "patch": "@@ -0,0 +1,27 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 June 2000 <nathan@codesourcery.com>\n+\n+// Origin GNATS bug report 262 from Jeremy Sanders <jss@ast.cam.ac.uk>\n+// and several others. With templates, it's very easy to say something\n+// erroneous like\n+//    template class X::X<whatever>\n+// The culprit\n+//    ... class X::X ...\n+// caused us to ICE as we got confused about pushing and popping scopes.\n+\n+template <class T> class image\n+{\n+public:   \n+  template <class U> image(const image<U> &copy);\n+};\n+\n+template <class T> template <class U> image<T>::image(const image<U> &copy)\n+{\n+}\n+\n+template class image<double>;\n+template class image<double>::image (const image<int> &); // ERROR - parse error\n+template class image<double>::image (image<int>); // ERROR - specified as declarator-id\n+template image<double>::image (const image<int> &);"}]}