{"sha": "79005df529ad1071e5f0f512fb4d63ec817c4935", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwMDVkZjUyOWFkMTA3MWU1ZjBmNTEyZmI0ZDYzZWM4MTdjNDkzNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-27T14:54:15Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-27T14:54:15Z"}, "message": "i386.md (movsf, movdf): Use movaps for reg-reg moves if TARGET_PARTIAL_REG_DEPENDENCY.\n\n\t* i386.md (movsf, movdf): Use movaps for reg-reg moves if\n\tTARGET_PARTIAL_REG_DEPENDENCY.\n\t(truncdfsf2_1_sse, truncdfsf2_2): Penalize the fpreg->mem case.\n\nFrom-SVN: r40093", "tree": {"sha": "18eaa8c3247a7ac379c1b976c779ca82124a1eef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18eaa8c3247a7ac379c1b976c779ca82124a1eef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79005df529ad1071e5f0f512fb4d63ec817c4935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79005df529ad1071e5f0f512fb4d63ec817c4935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79005df529ad1071e5f0f512fb4d63ec817c4935", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79005df529ad1071e5f0f512fb4d63ec817c4935/comments", "author": null, "committer": null, "parents": [{"sha": "7ada6625cd3a7e6940248cbb4e60a7e68b3b7f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ada6625cd3a7e6940248cbb4e60a7e68b3b7f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ada6625cd3a7e6940248cbb4e60a7e68b3b7f12"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "1546b8072cb4248f5f951472973e74c209d59cdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79005df529ad1071e5f0f512fb4d63ec817c4935/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79005df529ad1071e5f0f512fb4d63ec817c4935/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79005df529ad1071e5f0f512fb4d63ec817c4935", "patch": "@@ -1,3 +1,9 @@\n+Tue Feb 27 15:51:35 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movsf, movdf): Use movaps for reg-reg moves if\n+\tTARGET_PARTIAL_REG_DEPENDENCY.\n+\t(truncdfsf2_1_sse, truncdfsf2_2): Penalize the fpreg->mem case.\n+\n Tue Feb 27 15:36:48 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (mins*, maxs*): New patterns, expanders and splitters."}, {"sha": "25a283f4e96b5edf32313d700415efa93af1cefb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79005df529ad1071e5f0f512fb4d63ec817c4935/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79005df529ad1071e5f0f512fb4d63ec817c4935/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=79005df529ad1071e5f0f512fb4d63ec817c4935", "patch": "@@ -2238,6 +2238,10 @@\n       return \\\"mov{l}\\\\t{%1, %0|%0, %1}\\\";\n     case 5:\n     case 6:\n+      if (TARGET_PARTIAL_REG_DEPENDENCY\n+\t  && register_operand (operands[0], VOIDmode)\n+\t  && register_operand (operands[1], VOIDmode))\n+\treturn \\\"movaps\\\\t{%1, %0|%0, %1}\\\";\n       return \\\"movss\\\\t{%1, %0|%0, %1}\\\";\n \n     default:\n@@ -2412,6 +2416,10 @@\n       return \\\"#\\\";\n     case 5:\n     case 6:\n+      if (TARGET_PARTIAL_REG_DEPENDENCY\n+\t  && register_operand (operands[0], VOIDmode)\n+\t  && register_operand (operands[1], VOIDmode))\n+\treturn \\\"movapd\\\\t{%1, %0|%0, %1}\\\";\n       return \\\"movsd\\\\t{%1, %0|%0, %1}\\\";\n \n     default:\n@@ -3626,7 +3634,7 @@\n    (set_attr \"mode\" \"SF,SF\")])\n \n (define_insn \"*truncdfsf2_1_sse\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f,Y\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=*!m,?f,Y\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"nonimmediate_operand\" \"f,0,mY\")))\n    (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,X\"))]\n@@ -3652,26 +3660,26 @@\n    (set_attr \"mode\" \"SF,SF,DF\")])\n \n (define_insn \"*truncdfsf2_2\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,Y\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=Y,!m\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"nonimmediate_operand\" \"f,mY\")))]\n-  \"TARGET_80387 && TARGET_SSE2\"\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"mY,f\")))]\n+  \"TARGET_80387 && TARGET_SSE2\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n   \"*\n {\n   switch (which_alternative)\n     {\n     case 0:\n+      return \\\"cvtsd2ss\\\\t{%1, %0|%0, %1}\\\";\n+    case 1:\n       if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n \treturn \\\"fstp%z0\\\\t%y0\\\";\n       else\n \treturn \\\"fst%z0\\\\t%y0\\\";\n-    case 1:\n-    case 2:\n-      return \\\"cvtsd2ss\\\\t{%1, %0|%0, %1}\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"fmov,sse\")\n-   (set_attr \"mode\" \"SF,DF\")])\n+  [(set_attr \"type\" \"sse,fmov\")\n+   (set_attr \"mode\" \"DF,SF\")])\n \n (define_insn \"truncdfsf2_3\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m\")"}]}