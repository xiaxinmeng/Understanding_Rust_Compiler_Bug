{"sha": "da06a0e93f5067d32144beb67b3453e865b9394d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEwNmEwZTkzZjUwNjdkMzIxNDRiZWI2N2IzNDUzZTg2NWI5Mzk0ZA==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2018-11-01T18:59:40Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2018-11-01T18:59:40Z"}, "message": "20010904-1.c: Align 2 if pdp11.\n\n\t* gcc.c-torture/execute/20010904-1.c: Align 2 if pdp11.\n\t* gcc.c-torture/execute/20010904-2.c: Ditto.\n\t* c-c++-common/builtin-arith-overflow-2.c: Skip if pdp11.\n\t* gcc.dg/Walloc-size-larger-than-4.c: Ditto.\n\t* gcc.dg/Walloc-size-larger-than-5.c: Ditto.\n\t* gcc.dg/Walloc-size-larger-than-6.c: Ditto.\n\t* gcc.dg/Walloc-size-larger-than-7.c: Ditto.\n\t* gcc.dg/Walloca-14.c: Ditto.\n\t* gcc.dg/Wlarger-than3.c: Ditto.\n\t* gcc.dg/compat/pr83487-1_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-2_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-3_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-4_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-5b_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-6b_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-7b_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-8_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-9_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-10_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-11_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-12_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-13_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-14_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-15_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-16_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-17_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-18_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-22_x.c: Ditto.\n\t* gcc.dg/compat/struct-return-2_x.c: Ditto.\n\t* gcc.dg/falign-labels-1.c: Ditto.\n\t* gcc.dg/long_branch.c: Ditto.\n\t* gcc.dg/nextafter-1.c: Ditto.\n\t* gcc.dg/pr35045.c: Ditto.\n\t* gcc.dg/pr48616.c: Ditto.\n\t* gcc.dg/pr84100.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-9.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-warn-10.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf.c: Ditto.\n\t* gcc.dg/Wattributes-10.c: Expect error if pdp11.\n\t* gcc.dg/attr-alloc_size-11.c: Don't XFAIL if pdp11.\n\t* gcc.dg/builtin-inf-1.c: Add pdp11 to warnings about INF.\n\t* gcc.dg/builtins-1.c: Ditto.\n\nFrom-SVN: r265728", "tree": {"sha": "a0b6ea0e069305ec94c06179988ea2fed1a359d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0b6ea0e069305ec94c06179988ea2fed1a359d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da06a0e93f5067d32144beb67b3453e865b9394d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da06a0e93f5067d32144beb67b3453e865b9394d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da06a0e93f5067d32144beb67b3453e865b9394d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da06a0e93f5067d32144beb67b3453e865b9394d/comments", "author": null, "committer": null, "parents": [{"sha": "c92e96fa1a5289dfe4cd493d25bd952a66e2b634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c92e96fa1a5289dfe4cd493d25bd952a66e2b634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c92e96fa1a5289dfe4cd493d25bd952a66e2b634"}], "stats": {"total": 137, "additions": 127, "deletions": 10}, "files": [{"sha": "2fd83f08bbfc97d525a9d43296c37243844002d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,48 @@\n+2018-11-01  Paul Koning  <ni1d@arrl.net>\n+\n+\t* gcc.c-torture/execute/20010904-1.c: Align 2 if pdp11.\n+\t* gcc.c-torture/execute/20010904-2.c: Ditto.\n+\t* c-c++-common/builtin-arith-overflow-2.c: Skip if pdp11.\n+\t* gcc.dg/Walloc-size-larger-than-4.c: Ditto.\n+\t* gcc.dg/Walloc-size-larger-than-5.c: Ditto.\n+\t* gcc.dg/Walloc-size-larger-than-6.c: Ditto.\n+\t* gcc.dg/Walloc-size-larger-than-7.c: Ditto.\n+\t* gcc.dg/Walloca-14.c: Ditto.\n+\t* gcc.dg/Wlarger-than3.c: Ditto.\n+\t* gcc.dg/compat/pr83487-1_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-2_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-3_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-4_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-5b_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-6b_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-7b_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-8_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-9_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-10_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-11_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-12_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-13_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-14_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-15_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-16_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-17_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-18_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-22_x.c: Ditto.\n+\t* gcc.dg/compat/struct-return-2_x.c: Ditto.\n+\t* gcc.dg/falign-labels-1.c: Ditto.\n+\t* gcc.dg/long_branch.c: Ditto.\n+\t* gcc.dg/nextafter-1.c: Ditto.\n+\t* gcc.dg/pr35045.c: Ditto.\n+\t* gcc.dg/pr48616.c: Ditto.\n+\t* gcc.dg/pr84100.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-9.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-warn-10.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf.c: Ditto.\n+\t* gcc.dg/Wattributes-10.c: Expect error if pdp11.\n+\t* gcc.dg/attr-alloc_size-11.c: Don't XFAIL if pdp11.\n+\t* gcc.dg/builtin-inf-1.c: Add pdp11 to warnings about INF.\n+\t* gcc.dg/builtins-1.c: Ditto.\n+\n 2018-11-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/46020"}, {"sha": "5f4db2d3743e17a2228ca637a924a58246149de5", "filename": "gcc/testsuite/c-c++-common/builtin-arith-overflow-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-arith-overflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-arith-overflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-arith-overflow-2.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,7 +1,7 @@\n /* PR c/68120 - can't easily deal with integer overflow at compile time */\n /* { dg-do run } */\n /* { dg-additional-options \"-Wno-long-long\" } */\n-/* { dg-skip-if \"Program too big\" { \"avr-*-*\" } } */\n+/* { dg-skip-if \"Program too big\" { \"avr-*-* pdp11*-*-*\" } } */\n \n #define SCHAR_MAX    __SCHAR_MAX__\n #define SHRT_MAX     __SHRT_MAX__"}, {"sha": "cb4d759e6b87df1902525b3455ae132903fab04b", "filename": "gcc/testsuite/gcc.c-torture/execute/20010904-1.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010904-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010904-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010904-1.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,4 +1,12 @@\n-typedef struct x { int a; int b; } __attribute__((aligned(32))) X;\n+/* If some target has a Max alignment less than 32, please create\n+   a #ifdef around the alignment and add your alignment.  */\n+#ifdef __pdp11__\n+#define alignment 2\n+#else\n+#define alignment 32\n+#endif\n+\n+typedef struct x { int a; int b; } __attribute__((aligned(alignment))) X;\n typedef struct y { X x[32]; int c; } Y;\n \n Y y[2];"}, {"sha": "7f3affe10fe13352161a698fde5fb1aba9cfd9a1", "filename": "gcc/testsuite/gcc.c-torture/execute/20010904-2.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010904-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010904-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010904-2.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,4 +1,12 @@\n-typedef struct x { int a; int b; } __attribute__((aligned(32))) X;\n+/* If some target has a Max alignment less than 32, please create\n+   a #ifdef around the alignment and add your alignment.  */\n+#ifdef __pdp11__\n+#define alignment 2\n+#else\n+#define alignment 32\n+#endif\n+\n+typedef struct x { int a; int b; } __attribute__((aligned(aligned))) X;\n typedef struct y { X x; X y[31]; int c; } Y;\n \n Y y[2];"}, {"sha": "4b3a64b56abbeab66e6f1443c07a8961e5c6bbec", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-4.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n+   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n    { dg-options \"-O -Walloc-size-larger-than=1MiB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "4217ad651102d8d56e5353c8c2e47d84bb2bb538", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-5.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n+   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n    { dg-options \"-O -Walloc-size-larger-than=1MB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "a46fce7d0ca69046746ac5e9b348b9f4ccb53ec7", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-6.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n+   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n    { dg-options \"-O -Walloc-size-larger-than=1GiB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "4d9aafd661e05e1a3e70288c90b04cd0428a837b", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-7.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n+   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n    { dg-options \"-O -Walloc-size-larger-than=1GB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "657402f3891afaa216cbd453c7045ac3702519e1", "filename": "gcc/testsuite/gcc.dg/Walloca-14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-14.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,6 +1,7 @@\n /* PR tree-optimization/80109 */\n /* { dg-do compile } */\n /* { dg-require-effective-target alloca } */\n+/* { dg-skip-if \"small address space\" { \"pdp11-*-*\" } } */\n /* { dg-options \"-O2 -Walloca-larger-than=126812070\" } */\n \n void"}, {"sha": "37fd2c1b7552dd94aadc84d28aa1b4b7cf0c86ba", "filename": "gcc/testsuite/gcc.dg/Wattributes-10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-10.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -12,7 +12,8 @@ struct S\n \n   int* __attribute__ ((aligned (16), packed)) qaligned;   /* { dg-warning \"ignoring attribute .packed. because it conflicts with attribute .aligned.\" } */\n   int* __attribute__ ((packed, aligned (16))) qpacked;    /* { dg-warning \".packed. attribute ignored for type .int \\\\\\*.\" } */\n-} s;\n+} s;    /* { dg-error \"alignment of 's' is greater\" { target pdp11*-*-* } } */\n+\n \n void test (void)\n {"}, {"sha": "ebac525ed62d05e5617131b57e4c8bea8b800a9f", "filename": "gcc/testsuite/gcc.dg/Wlarger-than3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than3.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* Exercise -Wlarger-than= with a byte-size suffix.\n    { dg-do compile }\n+   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n    { dg-options \"-Wlarger-than=1MiB\" } */\n \n #define MB (1000 * 1000)    /* MegaByte */"}, {"sha": "301a06fd46443bb0774e86b668b283ef25de0b98", "filename": "gcc/testsuite/gcc.dg/attr-alloc_size-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -47,8 +47,8 @@ typedef __SIZE_TYPE__    size_t;\n \n /* The following tests fail because of missing range information.  The xfail\n    exclusions are PR79356.  */\n-TEST (signed char, SCHAR_MIN + 2, ALLOC_MAX);   /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for signed char\" { xfail { ! { aarch64*-*-* arm*-*-* avr-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390*-*-* visium-*-* } } } } */\n-TEST (short, SHRT_MIN + 2, ALLOC_MAX); /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for short\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* avr-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390x-*-* visium-*-* } } } } */\n+TEST (signed char, SCHAR_MIN + 2, ALLOC_MAX);   /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for signed char\" { xfail { ! { aarch64*-*-* arm*-*-* avr-*-* alpha*-*-* ia64-*-* mips*-*-* pdp11*-*-* powerpc*-*-* sparc*-*-* s390*-*-* visium-*-* } } } } */\n+TEST (short, SHRT_MIN + 2, ALLOC_MAX); /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for short\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* avr-*-* ia64-*-* mips*-*-* pdp11*-*-* powerpc*-*-* sparc*-*-* s390x-*-* visium-*-* } } } } */\n TEST (int, INT_MIN + 2, ALLOC_MAX);    /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */\n TEST (int, -3, ALLOC_MAX);             /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */\n TEST (int, -2, ALLOC_MAX);             /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */"}, {"sha": "4b7dcd8ecb1e448765b483b3b80c1b22d673a43f", "filename": "gcc/testsuite/gcc.dg/builtin-inf-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-inf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-inf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-inf-1.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n \n float fi = __builtin_inff();\n-/* { dg-error \"does not support infinity\" \"INF unsupported\" { target vax-*-* spu-*-* } .-1 } */\n+/* { dg-error \"does not support infinity\" \"INF unsupported\" { target pdp11*-*-* vax-*-* spu-*-* } .-1 } */\n double di = __builtin_inf();\n-/* { dg-error \"does not support infinity\" \"INF unsupported\" { target vax-*-* } .-1 } */\n+/* { dg-error \"does not support infinity\" \"INF unsupported\" { target pdp11*-*-* vax-*-* } .-1 } */\n long double li = __builtin_infl();\n-/* { dg-error \"does not support infinity\" \"INF unsupported\" { target vax-*-* } .-1 } */\n+/* { dg-error \"does not support infinity\" \"INF unsupported\" { target pdp11*-*-* vax-*-* } .-1 } */\n \n float fh = __builtin_huge_valf();\n double dh = __builtin_huge_val();"}, {"sha": "26e8a05229a0c46a1cd8136d493eac2a834d7c27", "filename": "gcc/testsuite/gcc.dg/builtins-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-1.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -144,7 +144,7 @@ FPTEST2ARG2_REENT (gamma, int *) /* gamma_r */\n FPTEST0     (huge_val)\n FPTEST2     (hypot)\n FPTEST1     (ilogb)\n-FPTEST0     (inf)  /* { dg-warning \"target format does not support infinity\" \"inf\" {target spu-*-*} } */\n+FPTEST0     (inf)  /* { dg-warning \"target format does not support infinity\" \"inf\" {target pdp11*-*-* spu-*-*} } */\n FPTEST1     (j0)\n FPTEST1     (j1)\n FPTEST2ARG1 (jn, int)"}, {"sha": "7b8db0ee1c8c4369fb1d1e7cae74b6ccc258d9fd", "filename": "gcc/testsuite/gcc.dg/compat/pr83487-1_y.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr83487-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr83487-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr83487-1_y.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"no large alignment\" { pdp11-*-* } } */\n+\n #include \"pr83487-1.h\"\n \n struct A a;"}, {"sha": "c09b343885c332df49feff5e1b21343ed5b8a794", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-10_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp2-struct-defs.h\""}, {"sha": "bbc84d0daabe203edaf03f4328feb129ca96a2ad", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-11_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "234112d712298eb38cb68cda93d94c617f117d27", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-12_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "7cf149f1257a69aa6f77bc33f2ecce0a946de1cf", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-13_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "181375ff11013740f8a2e5b322c8064c6db1df88", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-14_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "d36ee1e7c0da352bd76b67d5edac7957a037ef62", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-15_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "ddec5fbc9e6be080c6664b9ffe918dfec5e0cf1c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "782de70ca8d4aa49b3a111ded9be4cc60b0dba01", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "331007351e51f82b16855b75d795a25e02ec4432", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "9384c15e7d88a86d78c56a652cb79a2f82afc0ba", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-22_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-22_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-22_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-22_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #ifndef SKIP_VLA_IN_STRUCT\n \n #ifndef T"}, {"sha": "165744411060ca0cfa909e9b3d844169420fa218", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-2_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #define T(N, NAME, TYPE)\t\t\t\t\t\\"}, {"sha": "e5a43afc58cbf31874ef2701b3e1a408b2f2dcda", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #define T(TYPE)\t\t\t\t\t\t\t\\"}, {"sha": "55c8bc73fa3061bf14b4f7b1b7039dfe37433ec8", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-4_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #define T(N, TYPE)\t\t\t\t\t\t\\"}, {"sha": "3612413422a5b2f49302f6b59180be95f71dff6c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5b_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5b_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5b_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5b_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "68062d911cbe4cd0a619ee956268b2e09ca4c5c6", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6b_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6b_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6b_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6b_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "587bc27709e966ff66b1c93cd9a94245ec0edfed", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7b_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7b_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7b_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7b_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\""}, {"sha": "aadba93c191c40cb3730816b12fd56bc8c01cf9c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-8_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #define T(N, TYPE)\t\t\t\t\t\t\\"}, {"sha": "cf83e7d3951bbcb5b5a90c84bca19c65f956c572", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-9_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #define T(N, TYPE)\t\t\t\t\t\t\\"}, {"sha": "34d1e64ca6fcc5f7910d85fe2a0cd1422ccf2b37", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n+\n #include \"compat-common.h\"\n \n #ifdef SKIP_VA"}, {"sha": "e4c61c8b1930a2abcdd9eaefb16dd837d7746d03", "filename": "gcc/testsuite/gcc.dg/falign-labels-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ffalign-labels-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ffalign-labels-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffalign-labels-1.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-falign-labels=8\" } */\n+/* { dg-skip-if \"no label alignment > 2\" { \"pdp11-*-*\" } } */\n \n /* On ARMv7-A CPUs, this test resulted in incorrect code generation.\n    The code generated for the switch statement expected the jump table"}, {"sha": "97fb169b0431be7c397cb0b69b0b28b08aa3782d", "filename": "gcc/testsuite/gcc.dg/long_branch.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Flong_branch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Flong_branch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flong_branch.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fno-reorder-blocks\" } */\n+/* { dg-skip-if \"limited code space\" { pdp11-*-* } } */\n \n void abort ();\n "}, {"sha": "1916ac29ad94b49c0faf4f9d0f7230fb8e10ff3c", "filename": "gcc/testsuite/gcc.dg/nextafter-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-1.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fno-math-errno -fno-trapping-math -fdump-tree-optimized\" } */\n /* { dg-add-options ieee } */\n+/* { dg-skip-if \"not IEEE float\" { \"pdp11-*-*\" } } */\n /* { dg-final { scan-tree-dump-not \"nextafter\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"nexttoward\" \"optimized\" } } */\n "}, {"sha": "9cf649393eda8a20b87c2778cd55a9c6cc4608ac", "filename": "gcc/testsuite/gcc.dg/pr35045.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35045.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35045.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35045.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ia32 && { ! nonpic } } } } */\n+/* { dg-skip-if \"Not enough registers\" { \"pdp11-*-*\" } } */\n /* { dg-options \"-O2 -fgcse-after-reload\" } */\n \n extern void abort (void);"}, {"sha": "555532c641c63251a39aafb53430647d8af71a2e", "filename": "gcc/testsuite/gcc.dg/pr48616.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48616.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48616.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48616.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -ftree-vectorize\" } */\n /* { dg-additional-options \"-fno-common\" { target hppa*-*-hpux* } } */\n+/* { dg-skip-if \"no alignment > 2\" { \"pdp11-*-*\" } } */\n \n extern void abort (void);\n int a[4] __attribute__((aligned (32)));"}, {"sha": "fd157ac34a6a78b40458fb62fbf6f6ab4e1c9f3d", "filename": "gcc/testsuite/gcc.dg/pr84100.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84100.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84100.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84100.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,6 +1,7 @@\n /* PR c/84100 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+/* { dg-skip-if \"no code alignment > 2\" { \"pdp11-*-*\" } } */\n \n void bar (void);\n "}, {"sha": "b4a05bbd38af738fda1a02f5f624ebf5babaf15e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-9.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -1,5 +1,6 @@\n /* PR tree-optimization/86274 - SEGFAULT when logging std::to_string(NAN)\n    { dg-do compile }\n+   { dg-skip-if \"not IEEE float layout\" { \"pdp11-*-*\" } }\n    { dg-options \"-O2 -Wall -fdump-tree-optimized\" }  */\n \n typedef __SIZE_TYPE__ size_t;"}, {"sha": "facc023da83dd7b84c4723ff88ae9df7808d1c6c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-10.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -3,6 +3,7 @@\n    point directives.\n    { dg-do compile }\n    { dg-require-effective-target double64plus }\n+   { dg-skip-if \"not IEEE float layout\" { \"pdp11-*-*\" } }\n    { dg-options \"-O2 -Wformat -Wformat-overflow -ftrack-macro-expansion=0\" } */\n \n typedef __builtin_va_list va_list;"}, {"sha": "f90558e9b7ee9905e2faadaa81357b47029f80e7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da06a0e93f5067d32144beb67b3453e865b9394d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf.c?ref=da06a0e93f5067d32144beb67b3453e865b9394d", "patch": "@@ -4,6 +4,7 @@\n    link if any of the assertions fails.  Without optimization the test\n    aborts at runtime if any of the assertions fails.  */\n /* { dg-do run } */\n+/* { dg-skip-if \"not IEEE float layout\" { \"pdp11-*-*\" } } */\n /* { dg-additional-options \"-O2 -Wall -Wno-pedantic -fprintf-return-value\" } */\n \n #ifndef LINE"}]}