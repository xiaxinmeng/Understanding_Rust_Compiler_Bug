{"sha": "5b450ae52870699823d0a64361d4dfb61fa8a99e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI0NTBhZTUyODcwNjk5ODIzZDBhNjQzNjFkNGRmYjYxZmE4YTk5ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-27T19:09:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-27T19:09:40Z"}, "message": "(check_newline): #line updates input_file_stack->name.\n\nFrom-SVN: r3556", "tree": {"sha": "c99a228c8c5d701f3e7e8621112b5e14d6ad299c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c99a228c8c5d701f3e7e8621112b5e14d6ad299c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b450ae52870699823d0a64361d4dfb61fa8a99e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b450ae52870699823d0a64361d4dfb61fa8a99e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b450ae52870699823d0a64361d4dfb61fa8a99e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b450ae52870699823d0a64361d4dfb61fa8a99e/comments", "author": null, "committer": null, "parents": [{"sha": "89d7540d7bd16a0b664be710db1159f5e8763572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d7540d7bd16a0b664be710db1159f5e8763572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d7540d7bd16a0b664be710db1159f5e8763572"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "111cf9235d0bc9818e18906b18dddf6c6a89de01", "filename": "gcc/c-lex.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b450ae52870699823d0a64361d4dfb61fa8a99e/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b450ae52870699823d0a64361d4dfb61fa8a99e/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=5b450ae52870699823d0a64361d4dfb61fa8a99e", "patch": "@@ -659,7 +659,13 @@ check_newline ()\n       while (c == ' ' || c == '\\t')\n \tc = getc (finput);\n       if (c == '\\n')\n-\treturn c;\n+\t{\n+\t  /* Update the name in the top element of input_file_stack.  */\n+\t  if (input_file_stack)\n+\t    input_file_stack->name = input_filename;\n+\n+\t  return c;\n+\t}\n       ungetc (c, finput);\n \n       token = yylex ();\n@@ -711,6 +717,11 @@ check_newline ()\n \t    }\n \t}\n \n+      /* Now that we've pushed or popped the input stack,\n+\t update the name in the top element.  */\n+      if (input_file_stack)\n+\tinput_file_stack->name = input_filename;\n+\n       /* If we have handled a `1' or a `2',\n \t see if there is another number to read.  */\n       if (used_up)"}]}