{"sha": "2e8038898376b841205a146ef34dcd72d9eec07b", "node_id": "C_kwDOANBUbNoAKDJlODAzODg5ODM3NmI4NDEyMDVhMTQ2ZWYzNGRjZDcyZDllZWMwN2I", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-18T10:38:59Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-18T10:39:41Z"}, "message": "build: regenerate gcc/configure\n\nAfter the change 71f068a9b3332a2179dfc807cf9138f691d77461, gcc/configure\nneeds to re-generated.\n\ngcc/ChangeLog:\n\n\t* configure: Regenerate.", "tree": {"sha": "7b2df2fb21057b21589d9d6e34313aa439ff7d3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b2df2fb21057b21589d9d6e34313aa439ff7d3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e8038898376b841205a146ef34dcd72d9eec07b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8038898376b841205a146ef34dcd72d9eec07b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8038898376b841205a146ef34dcd72d9eec07b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8038898376b841205a146ef34dcd72d9eec07b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d2d38a4686cb0f4cc0a7ce252503dd8090ab322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d2d38a4686cb0f4cc0a7ce252503dd8090ab322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d2d38a4686cb0f4cc0a7ce252503dd8090ab322"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "da7a45066b5ce7a90a301b5670c8c734b5bdc4b5", "filename": "gcc/configure", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8038898376b841205a146ef34dcd72d9eec07b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8038898376b841205a146ef34dcd72d9eec07b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2e8038898376b841205a146ef34dcd72d9eec07b", "patch": "@@ -5226,12 +5226,16 @@ else\n   GNATMAKE=\"$ac_cv_prog_GNATMAKE\"\n fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether compiler driver understands Ada\" >&5\n-$as_echo_n \"checking whether compiler driver understands Ada... \" >&6; }\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether compiler driver understands Ada and is recent enough\" >&5\n+$as_echo_n \"checking whether compiler driver understands Ada and is recent enough... \" >&6; }\n if ${acx_cv_cc_gcc_supports_ada+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   cat >conftest.adb <<EOF\n+pragma Warnings (Off);\n+with System.CRTL;\n+pragma Warnings (On);\n+use type System.CRTL.int64;\n procedure conftest is begin null; end conftest;\n EOF\n acx_cv_cc_gcc_supports_ada=no\n@@ -19674,7 +19678,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19677 \"configure\"\n+#line 19681 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19780,7 +19784,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19783 \"configure\"\n+#line 19787 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}