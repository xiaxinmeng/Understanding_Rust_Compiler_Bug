{"sha": "006f28aefeb3be575239beddc7febe56dff463a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA2ZjI4YWVmZWIzYmU1NzUyMzliZWRkYzdmZWJlNTZkZmY0NjNhMg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-06-09T18:17:14Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-06-09T19:52:34Z"}, "message": "coroutines: Ensure distinct DTOR trees [PR95137].\n\nPart of the PR notes that there are UBSAN fails for the coroutines\ntest suite.  These are primarily related to the use of the same DTOR\ntree in the two edges from the await block.  Fixed by building a new\ntree for each.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/95137\n\t* coroutines.cc (expand_one_await_expression): Build separate\n\tDTOR trees for the awaitable object on the destroy and resume\n\tpaths.", "tree": {"sha": "ce7205dac1694b22b3057ff47a863c35edb530d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce7205dac1694b22b3057ff47a863c35edb530d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/006f28aefeb3be575239beddc7febe56dff463a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006f28aefeb3be575239beddc7febe56dff463a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/006f28aefeb3be575239beddc7febe56dff463a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006f28aefeb3be575239beddc7febe56dff463a2/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62963c60fc19d07615afe9d4f1b897b2f60801b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62963c60fc19d07615afe9d4f1b897b2f60801b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62963c60fc19d07615afe9d4f1b897b2f60801b2"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "3c8c70f531750c0d2ead7a5eeaa5d25e21a7c6f8", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006f28aefeb3be575239beddc7febe56dff463a2/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006f28aefeb3be575239beddc7febe56dff463a2/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=006f28aefeb3be575239beddc7febe56dff463a2", "patch": "@@ -1488,19 +1488,13 @@ expand_one_await_expression (tree *stmt, tree *await_expr, void *d)\n   tree resume_label = create_named_label_with_ctx (loc, buf, actor);\n   tree empty_list = build_empty_stmt (loc);\n \n-  tree dtor = NULL_TREE;\n   tree await_type = TREE_TYPE (var);\n-  if (needs_dtor)\n-    dtor = build_special_member_call (var, complete_dtor_identifier, NULL,\n-\t\t\t\t      await_type, LOOKUP_NORMAL,\n-\t\t\t\t      tf_warning_or_error);\n-\n   tree stmt_list = NULL;\n   tree t_expr = STRIP_NOPS (expr);\n   tree r;\n   tree *await_init = NULL;\n   if (t_expr == var)\n-    dtor = NULL_TREE;\n+    needs_dtor = false;\n   else\n     {\n       /* Initialize the var from the provided 'o' expression.  */\n@@ -1615,7 +1609,12 @@ expand_one_await_expression (tree *stmt, tree *await_expr, void *d)\n   destroy_label = build_stmt (loc, LABEL_EXPR, destroy_label);\n   append_to_statement_list (destroy_label, &body_list);\n   if (needs_dtor)\n-    append_to_statement_list (dtor, &body_list);\n+    {\n+      tree dtor = build_special_member_call (var, complete_dtor_identifier,\n+\t\t\t\t\t     NULL, await_type, LOOKUP_NORMAL,\n+\t\t\t\t\t     tf_warning_or_error);\n+      append_to_statement_list (dtor, &body_list);\n+    }\n   r = build1_loc (loc, GOTO_EXPR, void_type_node, data->cleanup);\n   append_to_statement_list (r, &body_list);\n \n@@ -1650,7 +1649,12 @@ expand_one_await_expression (tree *stmt, tree *await_expr, void *d)\n   /* Get a pointer to the revised statment.  */\n   tree *revised = tsi_stmt_ptr (tsi_last (stmt_list));\n   if (needs_dtor)\n-    append_to_statement_list (dtor, &stmt_list);\n+    {\n+      tree dtor = build_special_member_call (var, complete_dtor_identifier,\n+\t\t\t\t\t     NULL, await_type, LOOKUP_NORMAL,\n+\t\t\t\t\t     tf_warning_or_error);\n+      append_to_statement_list (dtor, &stmt_list);\n+    }\n   data->index += 2;\n \n   /* Replace the original statement with the expansion.  */"}]}