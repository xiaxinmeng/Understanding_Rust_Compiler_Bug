{"sha": "15e92535d343dd4ae92150270f6d393f74595d4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVlOTI1MzVkMzQzZGQ0YWU5MjE1MDI3MGY2ZDM5M2Y3NDU5NWQ0ZA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2007-01-19T07:12:16Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-01-19T07:12:16Z"}, "message": "re PR libfortran/26893 ([4.1 only] kinds.h not generated, causing failure)\n\n\tPR libfortran/26893\n\t* acinclude.m4 (LIBGFOR_WORKING_GFORTRAN): New check.\n\t* configure.ac: Add call to LIBGFOR_WORKING_GFORTRAN.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate because it was forgottent in the last\n\tcommit.\n\nCo-Authored-By: Tobias Burnus <burnus@net-b.de>\n\nFrom-SVN: r120949", "tree": {"sha": "00f928e37d415ce07b3907a3f41321acc0f74628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00f928e37d415ce07b3907a3f41321acc0f74628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15e92535d343dd4ae92150270f6d393f74595d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e92535d343dd4ae92150270f6d393f74595d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e92535d343dd4ae92150270f6d393f74595d4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e92535d343dd4ae92150270f6d393f74595d4d/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe30b1f37e48fcae87f5525f53d7509620c57329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe30b1f37e48fcae87f5525f53d7509620c57329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe30b1f37e48fcae87f5525f53d7509620c57329"}], "stats": {"total": 100, "additions": 97, "deletions": 3}, "files": [{"sha": "bc303f30cd1d761b1bc46539b8c9d02163c36221", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=15e92535d343dd4ae92150270f6d393f74595d4d", "patch": "@@ -1,13 +1,23 @@\n+2007-01-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26893\n+\t* acinclude.m4 (LIBGFOR_WORKING_GFORTRAN): New check.\n+\t* configure.ac: Add call to LIBGFOR_WORKING_GFORTRAN.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate because it was forgottent in the last\n+\tcommit.\n+\n 2007-01-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \t    Tobias Burnus  <burnus@net-b.de>\n \n \tPR libfortran/29649\n \t* runtime/environ.c (variable_table): New GFORTRAN_ERROR_DUMPCORE\n-\t  environment variable.\n+\tenvironment variable.\n \t* runtime/compile_options.c (set_std): Add new argument.\n-\t* runtime/error.c (sys_exit): Move from io/unix.c. Add coredump functionality.\n+\t* runtime/error.c (sys_exit): Move from io/unix.c. Add coredump\n+\tfunctionality.\n \t* libgfortran.h (options_t): New dump_core and backtrace members.\n-\t  (sys_exit): Move prototype.\n+\t(sys_exit): Move prototype.\n \t* io/unix.c (sys_exit): Move to runtime/error.c.\n \t* configure.ac: Add check for getrlimit.\n \t* configure: Regenerate."}, {"sha": "3c849faca198b7801e5cf7ed263bb7789ed6eded", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=15e92535d343dd4ae92150270f6d393f74595d4d", "patch": "@@ -1,6 +1,22 @@\n m4_include(../config/acx.m4)\n m4_include(../config/no-executables.m4)\n \n+dnl Check that we have a working GNU Fortran compiler\n+AC_DEFUN([LIBGFOR_WORKING_GFORTRAN], [\n+AC_MSG_CHECKING([whether the GNU Fortran compiler is working])\n+AC_LANG_PUSH([Fortran])\n+AC_COMPILE_IFELSE([[\n+      program foo\n+      real, parameter :: bar = sin (12.34 / 2.5)\n+      end program foo]],\n+    [AC_MSG_RESULT([yes])],\n+    [AC_MSG_RESULT([no])\n+     AC_MSG_ERROR([GNU Fortran is not working; please report a bug in http://gcc.gnu.org/bugzilla, attaching $PWD/config.log])\n+    ])\n+AC_LANG_POP([Fortran])\n+])\n+\n+\n dnl Check:\n dnl * If we have gettimeofday;\n dnl * If we have struct timezone for use in calling it;"}, {"sha": "c67365fd20c6b588cd5a9b53889dcf02b068dfec", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=15e92535d343dd4ae92150270f6d393f74595d4d", "patch": "@@ -375,6 +375,9 @@\n /* libc includes getpid */\n #undef HAVE_GETPID\n \n+/* Define to 1 if you have the `getrlimit' function. */\n+#undef HAVE_GETRLIMIT\n+\n /* Define to 1 if you have the `getrusage' function. */\n #undef HAVE_GETRUSAGE\n "}, {"sha": "3b3ed6a039e15ad3335d86a5621728f69f78f4a1", "filename": "libgfortran/configure", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=15e92535d343dd4ae92150270f6d393f74595d4d", "patch": "@@ -4896,6 +4896,67 @@ case \"${host}\" in\n esac\n \n \n+# We need a working compiler at that point, otherwise give a clear\n+# error message and bail out.\n+\n+\n+echo \"$as_me:$LINENO: checking whether the GNU Fortran compiler is working\" >&5\n+echo $ECHO_N \"checking whether the GNU Fortran compiler is working... $ECHO_C\" >&6\n+ac_ext=${FC_SRCEXT-f}\n+ac_compile='$FC -c $FCFLAGS $FCFLAGS_SRCEXT conftest.$ac_ext >&5'\n+ac_link='$FC -o conftest$ac_exeext $FCFLAGS $LDFLAGS $FCFLAGS_SRCEXT conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_fc_compiler_gnu\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+\n+      program foo\n+      real, parameter :: bar = sin (12.34 / 2.5)\n+      end program foo\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_fc_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+     { { echo \"$as_me:$LINENO: error: GNU Fortran is not working; please report a bug in http://gcc.gnu.org/bugzilla, attaching $PWD/config.log\" >&5\n+echo \"$as_me: error: GNU Fortran is not working; please report a bug in http://gcc.gnu.org/bugzilla, attaching $PWD/config.log\" >&2;}\n+   { (exit 1); exit 1; }; }\n+\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n # Check whether --enable-largefile or --disable-largefile was given.\n if test \"${enable_largefile+set}\" = set; then\n   enableval=\"$enable_largefile\""}, {"sha": "802d5ad3e089928832ad1f8f4ac20ae4b92bf77e", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15e92535d343dd4ae92150270f6d393f74595d4d/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=15e92535d343dd4ae92150270f6d393f74595d4d", "patch": "@@ -151,6 +151,10 @@ case \"${host}\" in\n esac\n AC_SUBST(extra_ldflags_libgfortran)\n \n+# We need a working compiler at that point, otherwise give a clear\n+# error message and bail out.\n+LIBGFOR_WORKING_GFORTRAN\n+\n AC_SYS_LARGEFILE\n AC_TYPE_OFF_T\n "}]}