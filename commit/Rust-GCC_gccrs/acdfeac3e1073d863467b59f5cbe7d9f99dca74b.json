{"sha": "acdfeac3e1073d863467b59f5cbe7d9f99dca74b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNkZmVhYzNlMTA3M2Q4NjM0NjdiNTlmNWNiZTdkOWY5OWRjYTc0Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-30T19:58:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-30T19:58:30Z"}, "message": "builtins.c (build_string_literal): Avoid generating a non-gimple_val result.\n\n2008-05-30  Richard Guenther  <rguenther@suse.de>\n\n\t* builtins.c (build_string_literal): Avoid generating\n\ta non-gimple_val result.\n\nFrom-SVN: r136222", "tree": {"sha": "f3bb4d7db7f0a91324dcbe197825b92e718c759d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3bb4d7db7f0a91324dcbe197825b92e718c759d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acdfeac3e1073d863467b59f5cbe7d9f99dca74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acdfeac3e1073d863467b59f5cbe7d9f99dca74b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acdfeac3e1073d863467b59f5cbe7d9f99dca74b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acdfeac3e1073d863467b59f5cbe7d9f99dca74b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97c3860d8070502a581cf20b8a256d1b1a515a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c3860d8070502a581cf20b8a256d1b1a515a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c3860d8070502a581cf20b8a256d1b1a515a79"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "82739e03eff3666f1ae3821ef76fb1d57976524f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acdfeac3e1073d863467b59f5cbe7d9f99dca74b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acdfeac3e1073d863467b59f5cbe7d9f99dca74b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acdfeac3e1073d863467b59f5cbe7d9f99dca74b", "patch": "@@ -1,3 +1,8 @@\n+2008-05-30  Richard Guenther  <rguenther@suse.de>\n+\n+\t* builtins.c (build_string_literal): Avoid generating\n+\ta non-gimple_val result.\n+\n 2008-05-30  DJ Delorie  <dj@redhat.com>\n \n \t* exec-tool.in: Use an environment variable (private) instead of a"}, {"sha": "77cd48beaed6924dcf602e0500e517ec5ea04d01", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acdfeac3e1073d863467b59f5cbe7d9f99dca74b/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acdfeac3e1073d863467b59f5cbe7d9f99dca74b/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=acdfeac3e1073d863467b59f5cbe7d9f99dca74b", "patch": "@@ -5249,18 +5249,17 @@ build_string_literal (int len, const char *str)\n \n   t = build_string (len, str);\n   elem = build_type_variant (char_type_node, 1, 0);\n-  index = build_index_type (build_int_cst (NULL_TREE, len - 1));\n+  index = build_index_type (size_int (len - 1));\n   type = build_array_type (elem, index);\n   TREE_TYPE (t) = type;\n   TREE_CONSTANT (t) = 1;\n   TREE_READONLY (t) = 1;\n   TREE_STATIC (t) = 1;\n \n-  type = build_pointer_type (type);\n-  t = build1 (ADDR_EXPR, type, t);\n-\n   type = build_pointer_type (elem);\n-  t = build1 (NOP_EXPR, type, t);\n+  t = build1 (ADDR_EXPR, type,\n+\t      build4 (ARRAY_REF, elem,\n+\t\t      t, integer_zero_node, NULL_TREE, NULL_TREE));\n   return t;\n }\n "}]}