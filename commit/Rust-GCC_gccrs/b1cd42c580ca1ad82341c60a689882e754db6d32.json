{"sha": "b1cd42c580ca1ad82341c60a689882e754db6d32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjZDQyYzU4MGNhMWFkODIzNDFjNjBhNjg5ODgyZTc1NGRiNmQzMg==", "commit": {"author": {"name": "Barry Tannenbaum", "email": "barry.m.tannenbaum@intel.com", "date": "2014-04-11T19:56:42Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2014-04-11T19:56:42Z"}, "message": "re PR bootstrap/60644 (Build of i686-pc-linux-android is broken)\n\nFix for PR other/60644.\n+2014-04-11  Barry Tannenbaum  <barry.m.tannenbaum@intel.com>\n+\n+       PR other/60644\n+       * runtime/os-unix.c: Replaced all occurrances of ANDROID with\n+       __ANDROID__.\n+       * runtime/bug.h: Likewise.\n+       * include/cilk/metaprogramming.h: Likewise.\n+       * include/cilk/reducer_min_max.h: Likewise.\n+\n\nFrom-SVN: r209324", "tree": {"sha": "645d772791aebf2bf1350cf0a61a68575075b730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/645d772791aebf2bf1350cf0a61a68575075b730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1cd42c580ca1ad82341c60a689882e754db6d32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cd42c580ca1ad82341c60a689882e754db6d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1cd42c580ca1ad82341c60a689882e754db6d32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cd42c580ca1ad82341c60a689882e754db6d32/comments", "author": {"login": "bmtannen-intel", "id": 59894771, "node_id": "MDQ6VXNlcjU5ODk0Nzcx", "avatar_url": "https://avatars.githubusercontent.com/u/59894771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmtannen-intel", "html_url": "https://github.com/bmtannen-intel", "followers_url": "https://api.github.com/users/bmtannen-intel/followers", "following_url": "https://api.github.com/users/bmtannen-intel/following{/other_user}", "gists_url": "https://api.github.com/users/bmtannen-intel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmtannen-intel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmtannen-intel/subscriptions", "organizations_url": "https://api.github.com/users/bmtannen-intel/orgs", "repos_url": "https://api.github.com/users/bmtannen-intel/repos", "events_url": "https://api.github.com/users/bmtannen-intel/events{/privacy}", "received_events_url": "https://api.github.com/users/bmtannen-intel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4de3afd97262723a676861080ba9c6d93d104dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de3afd97262723a676861080ba9c6d93d104dca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de3afd97262723a676861080ba9c6d93d104dca"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "bb3913b10d91ebde635d1c2b8deb72f3bdd60d1a", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=b1cd42c580ca1ad82341c60a689882e754db6d32", "patch": "@@ -1,3 +1,12 @@\n+2014-04-11  Barry Tannenbaum  <barry.m.tannenbaum@intel.com>\n+\n+\tPR other/60644\n+\t* runtime/os-unix.c: Replaced all occurrances of ANDROID with\n+\t__ANDROID__.\n+\t* runtime/bug.h: Likewise.\n+\t* include/cilk/metaprogramming.h: Likewise.\n+\t* include/cilk/reducer_min_max.h: Likewise.\n+\n 2014-03-26  Tobias Burnus  <burnus@net-b.de>\n \n \t* libcilkrts.spec.in: New."}, {"sha": "29b0839e788555fc79690b99a16d49c8b74b8f9d", "filename": "libcilkrts/include/cilk/metaprogramming.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Finclude%2Fcilk%2Fmetaprogramming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Finclude%2Fcilk%2Fmetaprogramming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Finclude%2Fcilk%2Fmetaprogramming.h?ref=b1cd42c580ca1ad82341c60a689882e754db6d32", "patch": "@@ -468,7 +468,7 @@ inline void* allocate_aligned(std::size_t size, std::size_t alignment)\n #ifdef _WIN32\n     return _aligned_malloc(size, alignment);\n #else\n-#if defined(ANDROID) || defined(__ANDROID__)\n+#if defined(__ANDROID__)\n     return memalign(std::max(alignment, sizeof(void*)), size);\n #else\n     void* ptr;"}, {"sha": "7fe09e8d605e0436c4e641770f98b8bd25760f20", "filename": "libcilkrts/include/cilk/reducer_min_max.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Finclude%2Fcilk%2Freducer_min_max.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Finclude%2Fcilk%2Freducer_min_max.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Finclude%2Fcilk%2Freducer_min_max.h?ref=b1cd42c580ca1ad82341c60a689882e754db6d32", "patch": "@@ -3025,7 +3025,7 @@ struct legacy_reducer_downcast< reducer< op_min_index<Index, Type, Compare, Alig\n #include <limits.h>\n \n /* Wchar_t min/max constants */\n-#if defined(_MSC_VER) || defined(ANDROID)\n+#if defined(_MSC_VER) || defined(__ANDROID__)\n #   include <wchar.h>\n #else\n #   include <stdint.h>"}, {"sha": "1a64bea3a54af6a9df6e843b0194448e992e8a19", "filename": "libcilkrts/runtime/bug.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Fruntime%2Fbug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Fruntime%2Fbug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fruntime%2Fbug.h?ref=b1cd42c580ca1ad82341c60a689882e754db6d32", "patch": "@@ -90,7 +90,7 @@ COMMON_PORTABLE extern const char *const __cilkrts_assertion_failed;\n  * GPL V3 licensed.\n  */\n COMMON_PORTABLE void cilkbug_assert_no_uncaught_exception(void);\n-#if defined(_WIN32) || defined(ANDROID)\n+#if defined(_WIN32) || defined(__ANDROID__)\n #  define CILKBUG_ASSERT_NO_UNCAUGHT_EXCEPTION()\n #else\n #  define CILKBUG_ASSERT_NO_UNCAUGHT_EXCEPTION() \\"}, {"sha": "c9ddbbc59612ff8cf6649b30db20322f3c068bda", "filename": "libcilkrts/runtime/os-unix.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Fruntime%2Fos-unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cd42c580ca1ad82341c60a689882e754db6d32/libcilkrts%2Fruntime%2Fos-unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fruntime%2Fos-unix.c?ref=b1cd42c580ca1ad82341c60a689882e754db6d32", "patch": "@@ -282,7 +282,7 @@ void __cilkrts_init_tls_variables(void)\n }\n #endif\n \n-#if defined (__linux__) && ! defined(ANDROID)\n+#if defined (__linux__) && ! defined(__ANDROID__)\n /*\n  * Get the thread id, rather than the pid. In the case of MIC offload, it's\n  * possible that we have multiple threads entering Cilk, and each has a\n@@ -343,7 +343,7 @@ static int linux_get_affinity_count (int tid)\n     return available_procs;\n #endif\n }\n-#endif\n+#endif  //  defined (__linux__) && ! defined(__ANDROID__)\n \n /*\n  * __cilkrts_hardware_cpu_count\n@@ -354,7 +354,7 @@ static int linux_get_affinity_count (int tid)\n \n COMMON_SYSDEP int __cilkrts_hardware_cpu_count(void)\n {\n-#if defined ANDROID || (defined(__sun__) && defined(__svr4__))\n+#if defined __ANDROID__ || (defined(__sun__) && defined(__svr4__))\n     return sysconf (_SC_NPROCESSORS_ONLN);\n #elif defined __MIC__\n     /// HACK: Usually, the 3rd and 4th hyperthreads are not beneficial\n@@ -409,7 +409,7 @@ COMMON_SYSDEP void __cilkrts_yield(void)\n     // giving up the processor and latency starting up when work becomes\n     // available\n     _mm_delay_32(1024);\n-#elif defined(ANDROID) || (defined(__sun__) && defined(__svr4__))\n+#elif defined(__ANDROID__) || (defined(__sun__) && defined(__svr4__))\n     // On Android and Solaris, call sched_yield to yield quantum.  I'm not\n     // sure why we don't do this on Linux also.\n     sched_yield();"}]}