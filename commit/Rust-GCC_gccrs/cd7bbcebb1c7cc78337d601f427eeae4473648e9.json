{"sha": "cd7bbcebb1c7cc78337d601f427eeae4473648e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3YmJjZWJiMWM3Y2M3ODMzN2Q2MDFmNDI3ZWVhZTQ0NzM2NDhlOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-02-24T14:21:52Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-02-24T14:21:52Z"}, "message": "[ARM] Tests for arm_restrict_it patterns in thumb2.md\n\n\t* gcc.target/arm/cond_sub_restrict_it.c: New test.\n\t* gcc.target/arm/condarith_restrict_it.c: Likewise.\n\t* gcc.target/arm/movcond_restrict_it.c: Likewise.\n\t* gcc.target/arm/negscc_restrict_it.c: Likewise.\n\nFrom-SVN: r233667", "tree": {"sha": "bc0aa9e6c135c424d9881727a635c9733296c60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0aa9e6c135c424d9881727a635c9733296c60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd7bbcebb1c7cc78337d601f427eeae4473648e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7bbcebb1c7cc78337d601f427eeae4473648e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7bbcebb1c7cc78337d601f427eeae4473648e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7bbcebb1c7cc78337d601f427eeae4473648e9/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86715b09177c4e58c6561fabc34241da5f129a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86715b09177c4e58c6561fabc34241da5f129a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86715b09177c4e58c6561fabc34241da5f129a95"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "bbc005e60ae4295718105512c4520cb463533946", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd7bbcebb1c7cc78337d601f427eeae4473648e9", "patch": "@@ -1,3 +1,10 @@\n+2016-02-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/cond_sub_restrict_it.c: New test.\n+\t* gcc.target/arm/condarith_restrict_it.c: Likewise.\n+\t* gcc.target/arm/movcond_restrict_it.c: Likewise.\n+\t* gcc.target/arm/negscc_restrict_it.c: Likewise.\n+\n 2016-02-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/69915"}, {"sha": "8411643e95782876b71b3beccc699a2e85022e5c", "filename": "gcc/testsuite/gcc.target/arm/cond_sub_restrict_it.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcond_sub_restrict_it.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcond_sub_restrict_it.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcond_sub_restrict_it.c?ref=cd7bbcebb1c7cc78337d601f427eeae4473648e9", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-options \"-mthumb -O -mrestrict-it\" }  */\n+\n+int a;\n+\n+__attribute__((noinline, noclone)) int\n+fn1 (int c, int d)\n+{\n+  a -= c == d;\n+  return a;\n+}\n+\n+int\n+main (void)\n+{\n+  a = 10;\n+  if (fn1 (4, 4) != 9)\n+    __builtin_abort ();\n+\n+  a = 5;\n+  if (fn1 (3, 4) != 5)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "ad0d15b0ebdb09988fa7ca11abb1e096edf3bcf1", "filename": "gcc/testsuite/gcc.target/arm/condarith_restrict_it.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcondarith_restrict_it.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcondarith_restrict_it.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcondarith_restrict_it.c?ref=cd7bbcebb1c7cc78337d601f427eeae4473648e9", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-options \"-mthumb -O2 -mrestrict-it\" }  */\n+\n+__attribute__ ((noinline, noclone)) void\n+fn2 ()\n+{\n+  __builtin_printf (\"4\");\n+}\n+\n+enum\n+{\n+  ONE = 1,\n+  TWO\n+} a;\n+\n+int b;\n+\n+__attribute__ ((noinline, noclone)) int\n+fn1 ()\n+{\n+  int c = b == 0;\n+  if (a <= ONE)\n+    if (b == 0)\n+      fn2 ();\n+  if (a)\n+    if (c)\n+      a = 0;\n+\n+  return a;\n+}\n+\n+int\n+main (void)\n+{\n+  a = ONE;\n+  b = 1;\n+  if (fn1 () != ONE)\n+    __builtin_abort ();\n+\n+  a = TWO;\n+  b = 0;\n+  if (fn1 () != 0)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "f1f9cfa351bb8c2732c3dced30d8bc17f0aa573d", "filename": "gcc/testsuite/gcc.target/arm/movcond_restrict_it.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovcond_restrict_it.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovcond_restrict_it.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovcond_restrict_it.c?ref=cd7bbcebb1c7cc78337d601f427eeae4473648e9", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-options \"-mthumb -O3 -mrestrict-it\" }  */\n+\n+int a;\n+\n+__attribute__ ((noinline, noclone)) int\n+fn1 (int c, int d)\n+{\n+  if (c > d)\n+    a = 1;\n+  else\n+    a = -1;\n+  return a;\n+}\n+\n+int\n+main (void)\n+{\n+  if (fn1 (4, 5) != -1)\n+    __builtin_abort ();\n+\n+  if (fn1 (5, 4) != 1)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "b24c6ece7271dc4cfbb718155841282ff8f63bf7", "filename": "gcc/testsuite/gcc.target/arm/negscc_restrict_it.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fnegscc_restrict_it.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7bbcebb1c7cc78337d601f427eeae4473648e9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fnegscc_restrict_it.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fnegscc_restrict_it.c?ref=cd7bbcebb1c7cc78337d601f427eeae4473648e9", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-options \"-mthumb -O2 -mrestrict-it\" }  */\n+\n+__attribute__ ((noinline, noclone)) int\n+fn1 (int a, int b)\n+{\n+  return (a == b ? 0 : -1);\n+}\n+\n+int\n+main (void)\n+{\n+  if (fn1 (3, 3) != 0)\n+    __builtin_abort ();\n+\n+  if (fn1 (6, 7) != -1)\n+    __builtin_abort ();\n+}"}]}