{"sha": "6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhYjgzZmRiZjlmOWU1ZDdhYmU4YWM2MGQ4ODFkYzIwNmQzZTYzYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-04-18T00:10:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-18T00:10:06Z"}, "message": "alpha.h (GO_IF_LEGITIMATE_SIMPLE_ADDRESS): Correct last change -- make sure FP_BASE_P registers are only used with an integer.\n\n        * alpha.h (GO_IF_LEGITIMATE_SIMPLE_ADDRESS): Correct last change --\n        make sure FP_BASE_P registers are only used with an integer.\n\nFrom-SVN: r26531", "tree": {"sha": "60bd23b79740165238a1802bb3995680340abf2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60bd23b79740165238a1802bb3995680340abf2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c/comments", "author": null, "committer": null, "parents": [{"sha": "5d02b6c26134b170071255fad492963561dfbd50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d02b6c26134b170071255fad492963561dfbd50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d02b6c26134b170071255fad492963561dfbd50"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "8a0c13d04c079145cea65041b3800728c8f79175", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c", "patch": "@@ -1,3 +1,8 @@\n+Sun Apr 18 00:08:45 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.h (GO_IF_LEGITIMATE_SIMPLE_ADDRESS): Correct last change --\n+\tmake sure FP_BASE_P registers are only used with an integer.\n+\n Sat Apr 17 22:54:17 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.h (REG_OK_FP_BASE_P): New macro."}, {"sha": "e676faf185ea0ae74d5d105bf76cd730b88e408b", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=6fab83fdbf9f9e5d7abe8ac60d881dc206d3e63c", "patch": "@@ -1426,20 +1426,21 @@ extern void alpha_init_expanders ();\n \n    First define the basic valid address.  */\n \n-#define GO_IF_LEGITIMATE_SIMPLE_ADDRESS(MODE, X, ADDR) \\\n-{ if (REG_P (X) && REG_OK_FOR_BASE_P (X))\t\\\n-    goto ADDR;\t\t\t\t\t\\\n-  if (CONSTANT_ADDRESS_P (X))\t\t\t\\\n-    goto ADDR;\t\t\t\t\t\\\n-  if (GET_CODE (X) == PLUS\t\t\t\\\n-      && REG_P (XEXP (X, 0)))\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      if (REG_OK_FP_BASE_P (XEXP (X, 0)))\t\\\n-\tgoto ADDR;\t\t\t\t\\\n-      if (REG_OK_FOR_BASE_P (XEXP (X, 0))\t\\\n-\t  && CONSTANT_ADDRESS_P (XEXP (X, 1)))\t\\\n-\tgoto ADDR;\t\t\t\t\\\n-    }\t\t\t\t\t\t\\\n+#define GO_IF_LEGITIMATE_SIMPLE_ADDRESS(MODE, X, ADDR)\t\\\n+{ if (REG_P (X) && REG_OK_FOR_BASE_P (X))\t\t\\\n+    goto ADDR;\t\t\t\t\t\t\\\n+  if (CONSTANT_ADDRESS_P (X))\t\t\t\t\\\n+    goto ADDR;\t\t\t\t\t\t\\\n+  if (GET_CODE (X) == PLUS\t\t\t\t\\\n+      && REG_P (XEXP (X, 0)))\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (REG_OK_FP_BASE_P (XEXP (X, 0))\t\t\\\n+\t  && GET_CODE (XEXP (X, 1)) == CONST_INT)\t\\\n+\tgoto ADDR;\t\t\t\t\t\\\n+      if (REG_OK_FOR_BASE_P (XEXP (X, 0))\t\t\\\n+\t  && CONSTANT_ADDRESS_P (XEXP (X, 1)))\t\t\\\n+\tgoto ADDR;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n }\n \n /* Now accept the simple address, or, for DImode only, an AND of a simple"}]}