{"sha": "66839ef65ef900d409a19b269f60731224f55275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4MzllZjY1ZWY5MDBkNDA5YTE5YjI2OWY2MDczMTIyNGY1NTI3NQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2002-01-08T20:00:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-01-08T20:00:50Z"}, "message": "natMethod.cc: Don't include alloca.h.\n\n2002-01-07  Andreas Tobler <a.tobler@schweiz.ch>\n\n\t* java/lang/reflect/natMethod.cc: Don't include alloca.h.\n\t(_Jv_CallAnyMethodA): Convert alloca to __builtin_alloca.\n\nFrom-SVN: r48656", "tree": {"sha": "049c029fcf7a9381d8b3fc3b76f1fd4ac567ed03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/049c029fcf7a9381d8b3fc3b76f1fd4ac567ed03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66839ef65ef900d409a19b269f60731224f55275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66839ef65ef900d409a19b269f60731224f55275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66839ef65ef900d409a19b269f60731224f55275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66839ef65ef900d409a19b269f60731224f55275/comments", "author": null, "committer": null, "parents": [{"sha": "24dbb44039f6a5937936c2f59181bd0d5608ef16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dbb44039f6a5937936c2f59181bd0d5608ef16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24dbb44039f6a5937936c2f59181bd0d5608ef16"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "3e7c1ce83340c02f0c6085bd2af7f6613e6e9c53", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66839ef65ef900d409a19b269f60731224f55275/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66839ef65ef900d409a19b269f60731224f55275/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=66839ef65ef900d409a19b269f60731224f55275", "patch": "@@ -1,3 +1,8 @@\n+2002-01-07  Andreas Tobler <a.tobler@schweiz.ch>\n+\n+\t* java/lang/reflect/natMethod.cc: Don't include alloca.h.\n+\t(_Jv_CallAnyMethodA): Convert alloca to __builtin_alloca.\n+\n 2002-01-08  Chris Sears  <cbsears_sf@yahoo.com>\n \n \t* interpret.cc (ARRAYBOUNDSCHECK): New macro."}, {"sha": "1fab48ab311d2bac5cbb14f07950044131f6e1ff", "filename": "libjava/java/lang/reflect/natMethod.cc", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66839ef65ef900d409a19b269f60731224f55275/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66839ef65ef900d409a19b269f60731224f55275/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc?ref=66839ef65ef900d409a19b269f60731224f55275", "patch": "@@ -1,6 +1,6 @@\n // natMethod.cc - Native code for Method class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001 , 2002 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -10,10 +10,6 @@ details.  */\n \n #include <config.h>\n \n-#if HAVE_ALLOCA_H\n-#include <alloca.h>\n-#endif\n-\n #include <gcj/cni.h>\n #include <jvm.h>\n #include <jni.h>\n@@ -348,8 +344,8 @@ _Jv_CallAnyMethodA (jobject obj,\n     rtype = &ffi_type_void;\n   else\n     rtype = get_ffi_type (return_type);\n-  ffi_type **argtypes = (ffi_type **) alloca (param_count\n-\t\t\t\t\t      * sizeof (ffi_type *));\n+  ffi_type **argtypes = (ffi_type **) __builtin_alloca (param_count\n+\t\t\t\t\t\t\t* sizeof (ffi_type *));\n \n   jclass *paramelts = elements (parameter_types);\n \n@@ -392,8 +388,8 @@ _Jv_CallAnyMethodA (jobject obj,\n       // FIXME: throw some kind of VirtualMachineError here.\n     }\n \n-  char *p = (char *) alloca (size);\n-  void **values = (void **) alloca (param_count * sizeof (void *));\n+  char *p = (char *) __builtin_alloca (size);\n+  void **values = (void **) __builtin_alloca (param_count * sizeof (void *));\n \n   i = 0;\n   if (needs_this)"}]}