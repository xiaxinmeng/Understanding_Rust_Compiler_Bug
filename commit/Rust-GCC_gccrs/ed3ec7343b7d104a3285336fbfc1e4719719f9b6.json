{"sha": "ed3ec7343b7d104a3285336fbfc1e4719719f9b6", "node_id": "C_kwDOANBUbNoAKGVkM2VjNzM0M2I3ZDEwNGEzMjg1MzM2ZmJmYzFlNDcxOTcxOWY5YjY", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-09-25T21:03:41Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-09-30T13:07:19Z"}, "message": "libphobos: Print stacktrace before terminating program due to uncaught exception.\n\nBy default, D run-time has a top level exception handler to catch\nanything that was uncaught by user code.  However when the\n`rt_trapExceptions' flag is cleared, this handler would not be enabled,\nand this termination would occur, aborting the program, but without any\ninformation about the exception.\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/gcc/deh.d (_d_print_throwable): Declare.\n\t(_d_throw): Print stacktrace before terminating program due to\n\tuncaught exception.", "tree": {"sha": "6953149589798af518e0a53f1956fa26f037fd87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6953149589798af518e0a53f1956fa26f037fd87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed3ec7343b7d104a3285336fbfc1e4719719f9b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3ec7343b7d104a3285336fbfc1e4719719f9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3ec7343b7d104a3285336fbfc1e4719719f9b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3ec7343b7d104a3285336fbfc1e4719719f9b6/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0111153234120de7f87b050df78f0d9819ca4214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0111153234120de7f87b050df78f0d9819ca4214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0111153234120de7f87b050df78f0d9819ca4214"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "a7eb37cfd9e564766c68e3771c759fb9e15e2376", "filename": "libphobos/libdruntime/gcc/deh.d", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ec7343b7d104a3285336fbfc1e4719719f9b6/libphobos%2Flibdruntime%2Fgcc%2Fdeh.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ec7343b7d104a3285336fbfc1e4719719f9b6/libphobos%2Flibdruntime%2Fgcc%2Fdeh.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fdeh.d?ref=ed3ec7343b7d104a3285336fbfc1e4719719f9b6", "patch": "@@ -34,6 +34,7 @@ extern(C)\n {\n     int _d_isbaseof(ClassInfo, ClassInfo);\n     void _d_createTrace(Object, void*);\n+    void _d_print_throwable(Throwable t);\n }\n \n /**\n@@ -510,7 +511,11 @@ extern(C) void _d_throw(Throwable object)\n     // things, almost certainly we will have crashed before now, rather than\n     // actually being able to diagnose the problem.\n     if (r == _URC_END_OF_STACK)\n+    {\n+        __gdc_begin_catch(&eh.unwindHeader);\n+        _d_print_throwable(object);\n         terminate(\"uncaught exception\", __LINE__);\n+    }\n \n     terminate(\"unwind error\", __LINE__);\n }"}]}