{"sha": "d17cd69f66c1c0cb10074efa10252deea1ad260e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE3Y2Q2OWY2NmMxYzBjYjEwMDc0ZWZhMTAyNTJkZWVhMWFkMjYwZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-10-04T15:39:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-10-04T15:39:11Z"}, "message": "re PR fortran/33646 (Gcc 4.3 revision 128954 failed tonto in SPEC CPU 2006)\n\n2007-10-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR fortran/33646\n\t* gfortran.dg/pr33646.f90: New file.\n\nFrom-SVN: r129015", "tree": {"sha": "b025b6cf25a01e095632feb6336c25948dc4a171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b025b6cf25a01e095632feb6336c25948dc4a171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d17cd69f66c1c0cb10074efa10252deea1ad260e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d17cd69f66c1c0cb10074efa10252deea1ad260e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d17cd69f66c1c0cb10074efa10252deea1ad260e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d17cd69f66c1c0cb10074efa10252deea1ad260e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34e366b39cde963eef58a75227bcbb655e4b1a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34e366b39cde963eef58a75227bcbb655e4b1a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34e366b39cde963eef58a75227bcbb655e4b1a20"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "3e921470bbfdb6514974c48e624e3a9c1dbe5197", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17cd69f66c1c0cb10074efa10252deea1ad260e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17cd69f66c1c0cb10074efa10252deea1ad260e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d17cd69f66c1c0cb10074efa10252deea1ad260e", "patch": "@@ -1,3 +1,8 @@\n+2007-10-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR fortran/33646\n+\t* gfortran.dg/pr33646.f90: New file.\n+\n 2007-10-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33529"}, {"sha": "13f65cb06a5617490cc470d06b6451195d461ba7", "filename": "gcc/testsuite/gfortran.dg/pr33646.f90", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17cd69f66c1c0cb10074efa10252deea1ad260e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr33646.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17cd69f66c1c0cb10074efa10252deea1ad260e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr33646.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr33646.f90?ref=d17cd69f66c1c0cb10074efa10252deea1ad260e", "patch": "@@ -0,0 +1,59 @@\n+! { dg-do compile }\n+! PR fortran/33646\n+!\n+!\n+\n+module BAR_MODULE\n+   implicit none\n+   private\n+   public    create_\n+   interface create_\n+      module procedure create\n+   end interface\n+   type system_type\n+       integer(kind=kind(1)) :: max_memory_used\n+   end type\n+\n+contains\n+\n+   subroutine create(self)\n+    type(system_type) :: self\n+      pointer :: self\n+      allocate(self)\n+   end subroutine\n+\n+end\n+\n+module FOO_MODULE\n+   use BAR_MODULE\n+   implicit none\n+   private\n+   public    create_\n+   interface create_\n+      module procedure create\n+   end interface\n+\n+   public    create_copy_\n+   interface create_copy_\n+      module procedure create_copy\n+   end interface\n+contains\n+\n+   subroutine create(self)\n+    character(*) :: self\n+      pointer :: self\n+      nullify(self)\n+      allocate(self)\n+\n+      self = \" \"\n+   end subroutine\n+\n+   subroutine create_copy(self,s)\n+    character(*) :: self\n+      pointer :: self\n+      character(*) :: s\n+      call create_(self)\n+   end subroutine\n+end\n+\n+! { dg-final { cleanup-modules \"BAR_MODULE FOO_MODULE\" } }"}]}