{"sha": "d67dd0be9467f0a2842abf163254abf1c6cabaab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3ZGQwYmU5NDY3ZjBhMjg0MmFiZjE2MzI1NGFiZjFjNmNhYmFhYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-13T16:59:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-13T16:59:19Z"}, "message": "Avoid #include <functional> in other headers\n\n\t* include/bits/shared_ptr_base.h: Include <functional>.\n\t[!__cpp_rtti]: Do not include <typeinfo>.\n\t* include/experimental/array: Do not include <functional>.\n\t* include/experimental/memory: Include <bits/functional_hash.h>\n\tinstead of <functional>.\n\t* include/experimental/propagate_const: Include <bits/stl_function.h>,\n\t<bits/functional_hash.h>, and <bits/move.h> instead of <functional>.\n\t* include/experimental/tuple: Do not include <functional>.\n\t* include/std/future: Include <functional>.\n\t* include/std/memory: Do not include <functional>.\n\t* include/std/mutex: [_GLIBCXX_HAVE_TLS]: Likewise.\n\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc: Add\n\tmissing includes.\n\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n\t* testsuite/20_util/specialized_algorithms/memory_management_tools/\n\t1.cc: Likewise.\n\t* testsuite/30_threads/call_once/60497.cc: Likewise.\n\t* testsuite/30_threads/lock/2.cc: Likewise.\n\t* testsuite/30_threads/thread/native_handle/cancel.cc: Likewise.\n\t* testsuite/experimental/algorithm/sample.cc: Likewise.\n\t* testsuite/experimental/array/make_array.cc: Likewise.\n\t* testsuite/experimental/array/neg.cc: Likewise. Adjust dg-error line.\n\t* testsuite/experimental/propagate_const/assignment/move_neg.cc:\n\tAdjust dg-error lines.\n\t* testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements2.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements3.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements4.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements5.cc: Likewise.\n\nFrom-SVN: r241131", "tree": {"sha": "f140647350774241339aac4f46131e73a3d45bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f140647350774241339aac4f46131e73a3d45bb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d67dd0be9467f0a2842abf163254abf1c6cabaab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67dd0be9467f0a2842abf163254abf1c6cabaab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67dd0be9467f0a2842abf163254abf1c6cabaab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67dd0be9467f0a2842abf163254abf1c6cabaab/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40799fe51fa1fc67d4fad71c335437166234f9fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40799fe51fa1fc67d4fad71c335437166234f9fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40799fe51fa1fc67d4fad71c335437166234f9fc"}], "stats": {"total": 88, "additions": 66, "deletions": 22}, "files": [{"sha": "c421111daac1fc1dac7ab5487746e3855e9b1ee6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -1,5 +1,35 @@\n 2016-10-13  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/shared_ptr_base.h: Include <functional>.\n+\t[!__cpp_rtti]: Do not include <typeinfo>.\n+\t* include/experimental/array: Do not include <functional>.\n+\t* include/experimental/memory: Include <bits/functional_hash.h>\n+\tinstead of <functional>.\n+\t* include/experimental/propagate_const: Include <bits/stl_function.h>,\n+\t<bits/functional_hash.h>, and <bits/move.h> instead of <functional>.\n+\t* include/experimental/tuple: Do not include <functional>.\n+\t* include/std/future: Include <functional>.\n+\t* include/std/memory: Do not include <functional>.\n+\t* include/std/mutex: [_GLIBCXX_HAVE_TLS]: Likewise.\n+\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc: Add\n+\tmissing includes.\n+\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n+\t* testsuite/20_util/specialized_algorithms/memory_management_tools/\n+\t1.cc: Likewise.\n+\t* testsuite/30_threads/call_once/60497.cc: Likewise.\n+\t* testsuite/30_threads/lock/2.cc: Likewise.\n+\t* testsuite/30_threads/thread/native_handle/cancel.cc: Likewise.\n+\t* testsuite/experimental/algorithm/sample.cc: Likewise.\n+\t* testsuite/experimental/array/make_array.cc: Likewise.\n+\t* testsuite/experimental/array/neg.cc: Likewise. Adjust dg-error line.\n+\t* testsuite/experimental/propagate_const/assignment/move_neg.cc:\n+\tAdjust dg-error lines.\n+\t* testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements2.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements3.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements4.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements5.cc: Likewise.\n+\n \t* testsuite/experimental/algorithm/sample.cc: Add missing header.\n \n \t* include/experimental/propagate_const (element_type): Qualify"}, {"sha": "422e3b5b9594bbc15b7c1d67c86318382574247d", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -49,7 +49,10 @@\n #ifndef _SHARED_PTR_BASE_H\n #define _SHARED_PTR_BASE_H 1\n \n-#include <typeinfo>\n+#include <functional>\n+#if __cpp_rtti\n+# include <typeinfo>\n+#endif\n #include <bits/allocated_ptr.h>\n #include <ext/aligned_buffer.h>\n "}, {"sha": "34d75cc2017933df2046aabd1964a725469ddf25", "filename": "libstdc++-v3/include/experimental/array", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -36,7 +36,6 @@\n #else\n \n #include <array>\n-#include <functional>\n #include <experimental/type_traits>\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "81def241515a37d018a6a7d527065ab6beaf7da2", "filename": "libstdc++-v3/include/experimental/memory", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -42,8 +42,8 @@\n #include <memory>\n #include <type_traits>\n #include <utility>\n-#include <functional>\n #include <experimental/bits/shared_ptr.h>\n+#include <bits/functional_hash.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "5f32111fbba241105f7a581cb6bf0f41a3e94867", "filename": "libstdc++-v3/include/experimental/propagate_const", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fpropagate_const", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fpropagate_const", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fpropagate_const?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -36,7 +36,9 @@\n #else\n \n #include <type_traits>\n-#include <functional>\n+#include <bits/functional_hash.h>\n+#include <bits/move.h>\n+#include <bits/stl_function.h>\n #include <experimental/bits/lfts_config.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "e83a0ed9b637226c34a9be048f49bf6a5ed0c570", "filename": "libstdc++-v3/include/experimental/tuple", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -36,7 +36,6 @@\n #else\n \n #include <tuple>\n-#include <functional>\n #include <bits/invoke.h>\n #include <experimental/bits/lfts_config.h>\n "}, {"sha": "31a21f976eed4126bce1f16fd9e24d79eb1ea8dd", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -40,6 +40,7 @@\n #include <condition_variable>\n #include <system_error>\n #include <atomic>\n+#include <functional>\n #include <bits/atomic_futex.h>\n #include <bits/functexcept.h>\n #include <bits/invoke.h>"}, {"sha": "0f6d8bc945f72113cfded1d3fc621c1eb9538e39", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -76,7 +76,6 @@\n #  include <bits/stl_function.h>  // std::less\n #  include <bits/uses_allocator.h>\n #  include <type_traits>\n-#  include <functional>\n #  include <debug/debug.h>\n #  include <bits/unique_ptr.h>\n #  include <bits/shared_ptr.h>"}, {"sha": "0e1bc7fd412f44b26aa2e8e44b9369bc6b4450ae", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -39,13 +39,15 @@\n #include <chrono>\n #include <exception>\n #include <type_traits>\n-#include <functional>\n #include <system_error>\n #include <bits/std_mutex.h>\n #if ! _GTHREAD_USE_MUTEX_TIMEDLOCK\n # include <condition_variable>\n # include <thread>\n #endif\n+#ifndef _GLIBCXX_HAVE_TLS\n+# include <functional>\n+#endif\n \n #ifdef _GLIBCXX_USE_C99_STDINT_TR1\n "}, {"sha": "e78093fe4bf4fb132bd6b4958c73ec0c91f3ba15", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -28,6 +28,7 @@\n #include <cstdlib>\n #include <thread>\n #include <atomic>\n+#include <functional>\n #include <testsuite_hooks.h>\n \n #ifdef _GLIBCXX_HAVE_UNISTD_H"}, {"sha": "96a5cf86653942decdaf4f14eb9ea14bb7f39ec0", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -28,6 +28,7 @@\n #include <cstdlib>\n #include <thread>\n #include <atomic>\n+#include <functional>\n #include <testsuite_hooks.h>\n \n #ifdef _GLIBCXX_HAVE_UNISTD_H"}, {"sha": "a84776751a71b4964996e5c09364f63158fc31b7", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/memory_management_tools/1.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -21,6 +21,7 @@\n #include <testsuite_hooks.h>\n #include <string>\n #include <array>\n+#include <vector>\n #include <sstream>\n \n int del_count = 0;"}, {"sha": "a9e6449080e3cc348adc3358b6e7323f0ea89c90", "filename": "libstdc++-v3/testsuite/30_threads/call_once/60497.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F60497.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F60497.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F60497.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -25,6 +25,7 @@\n \n #include <mutex>\n #include <memory>\n+#include <functional>\n \n struct A;\n template<typename T> struct B { T t; };"}, {"sha": "c17442081e6f73833bec6575b09b46721f5dba3f", "filename": "libstdc++-v3/testsuite/30_threads/lock/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F2.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -24,6 +24,7 @@\n \n #include <mutex>\n #include <thread>\n+#include <functional>\n #include <testsuite_hooks.h>\n \n void locker(std::mutex& m1, std::mutex& m2, std::mutex& m3)"}, {"sha": "db04b0521e654bda3fe6b493ee464bba90e30dcd", "filename": "libstdc++-v3/testsuite/30_threads/thread/native_handle/cancel.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fnative_handle%2Fcancel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fnative_handle%2Fcancel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fnative_handle%2Fcancel.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -24,6 +24,7 @@\n #include <pthread.h>\n #include <thread>\n #include <atomic>\n+#include <functional>\n \n void f(std::atomic<bool>& started)\n {"}, {"sha": "16e6a74f38cf53cdde879eed3d64a28b370e2157", "filename": "libstdc++-v3/testsuite/experimental/algorithm/sample.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Falgorithm%2Fsample.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Falgorithm%2Fsample.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Falgorithm%2Fsample.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -23,6 +23,7 @@\n #include <forward_list>\n #include <vector>\n #include <random>\n+#include <algorithm>\n #include <testsuite_hooks.h>\n \n std::mt19937 rng;"}, {"sha": "e91a5d826e71d106bb4d7d7fce3bcd29d24ee203", "filename": "libstdc++-v3/testsuite/experimental/array/make_array.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fmake_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fmake_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fmake_array.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -18,6 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <experimental/array>\n+#include <functional>\n \n struct MoveOnly\n {"}, {"sha": "cd086577657f72dac0070eccea283e5b2d8b4bd7", "filename": "libstdc++-v3/testsuite/experimental/array/neg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -18,10 +18,11 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <experimental/array>\n+#include <functional>\n \n int main()\n {\n   int dummy;\n   auto bad = std::experimental::make_array(std::ref(dummy));\n-  // { dg-error \"make_array cannot be used without an explicit target type if any of the types given is a reference_wrapper\" \"\" { target *-*-* } 77 }\n+  // { dg-error \"make_array cannot be used without an explicit target type if any of the types given is a reference_wrapper\" \"\" { target *-*-* } 76 }\n }"}, {"sha": "6dc0e2e5ed969577bad6b9b3c078855a43d0a46d", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/assignment/move_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fassignment%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fassignment%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fassignment%2Fmove_neg.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -25,7 +25,7 @@\n using std::experimental::propagate_const;\n using std::unique_ptr;\n \n-// { dg-error \"no type\" \"\" { target *-*-* } 159 }\n+// { dg-error \"no type\" \"\" { target *-*-* } 161 }\n \n int main()\n {"}, {"sha": "abfc62dc0096cd658a5c30f302a18a779f3120d6", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/cons/move_neg.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fcons%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fcons%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fcons%2Fmove_neg.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -25,10 +25,10 @@\n using std::experimental::propagate_const;\n using std::unique_ptr;\n \n-// { dg-error \"no type\" \"\" { target *-*-* } 118 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 125 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 134 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 143 }\n+// { dg-error \"no type\" \"\" { target *-*-* } 120 }\n+// { dg-error \"no type\" \"\" { target *-*-* } 127 }\n+// { dg-error \"no type\" \"\" { target *-*-* } 136 }\n+// { dg-error \"no type\" \"\" { target *-*-* } 145 }\n \n int main()\n {"}, {"sha": "5f46dc4052b91f4b26a684554a4fe832d8614d88", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements2.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements2.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -21,9 +21,9 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 105 }\n-// { dg-error \"not a pointer-to-object type\" \"\" { target *-*-* } 66 }\n-// { dg-error \"forming pointer to reference type\" \"\" { target *-*-* } 185 }\n-// { dg-error \"forming pointer to reference type\" \"\" { target *-*-* } 211 }\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n+// { dg-error \"not a pointer-to-object type\" \"\" { target *-*-* } 68 }\n+// { dg-error \"forming pointer to reference type\" \"\" { target *-*-* } 187 }\n+// { dg-error \"forming pointer to reference type\" \"\" { target *-*-* } 213 }\n \n propagate_const<void*> test1;"}, {"sha": "abc48391ff8aa8af0ef6f5a61446942b3889dc61", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements3.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -21,6 +21,6 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 105 }\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n \n propagate_const<void (*)()> test1;"}, {"sha": "1c3c653a9a18fd21fec06ea1d42e96061855a437", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements4.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements4.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -21,8 +21,8 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 105 }\n-// { dg-error \"invalid type\" \"\" { target *-*-* } 66 }\n-// { dg-error \"uninitialized reference member\" \"\" { target *-*-* } 112 }\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n+// { dg-error \"invalid type\" \"\" { target *-*-* } 68 }\n+// { dg-error \"uninitialized reference member\" \"\" { target *-*-* } 114 }\n \n propagate_const<int&> test1; // { dg-error \"use of deleted function\" }"}, {"sha": "72844fa2a2efabecb2f367029ed39cbb34bfb180", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements5.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dd0be9467f0a2842abf163254abf1c6cabaab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements5.cc?ref=d67dd0be9467f0a2842abf163254abf1c6cabaab", "patch": "@@ -21,6 +21,6 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 105 }\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n \n propagate_const<int[1]> test1;"}]}