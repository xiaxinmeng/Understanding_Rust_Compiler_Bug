{"sha": "d69f1ec7d19f3770450a6215395073dd911e5d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5ZjFlYzdkMTlmMzc3MDQ1MGE2MjE1Mzk1MDczZGQ5MTFlNWQyMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-11-23T22:11:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-11-23T22:11:21Z"}, "message": "Add [[nodiscard]] attribute to C++17 components\n\n\t* include/bits/fs_path.h (path::empty): Add nodiscard attribute.\n\t* include/bits/range_access.h (empty): Likewise.\n\t* include/std/string_view (basic_string_view::empty): Likewise.\n\t* testsuite/21_strings/basic_string_view/capacity/empty_neg.cc: New\n\ttest.\n\t* testsuite/24_iterators/range_access_cpp17_neg.cc: New test.\n\t* testsuite/27_io/filesystem/path/query/empty_neg.cc: New test.\n\nFrom-SVN: r255124", "tree": {"sha": "af98d60a7a26651eb974872fce8e8a47e0647e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af98d60a7a26651eb974872fce8e8a47e0647e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d69f1ec7d19f3770450a6215395073dd911e5d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69f1ec7d19f3770450a6215395073dd911e5d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69f1ec7d19f3770450a6215395073dd911e5d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69f1ec7d19f3770450a6215395073dd911e5d20/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9840f230d4f8f4964639f776073821672fb1a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9840f230d4f8f4964639f776073821672fb1a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9840f230d4f8f4964639f776073821672fb1a7"}], "stats": {"total": 120, "additions": 114, "deletions": 6}, "files": [{"sha": "3b2dad016fdd6967baf90f14f9c59f94684a97e4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -1,5 +1,13 @@\n 2017-11-23  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/fs_path.h (path::empty): Add nodiscard attribute.\n+\t* include/bits/range_access.h (empty): Likewise.\n+\t* include/std/string_view (basic_string_view::empty): Likewise.\n+\t* testsuite/21_strings/basic_string_view/capacity/empty_neg.cc: New\n+\ttest.\n+\t* testsuite/24_iterators/range_access_cpp17_neg.cc: New test.\n+\t* testsuite/27_io/filesystem/path/query/empty_neg.cc: New test.\n+\n \tPR libstdc++/83134\n \t* include/std/type_traits (__not_): Explicitly convert to bool.\n \t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error."}, {"sha": "99740c9b383b0a090f1510a6543b782993698fbf", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -370,7 +370,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n     // query\n \n-    bool empty() const noexcept { return _M_pathname.empty(); }\n+    [[nodiscard]] bool empty() const noexcept { return _M_pathname.empty(); }\n     bool has_root_name() const;\n     bool has_root_directory() const;\n     bool has_root_path() const;"}, {"sha": "0d8dbeb411076c687c37b94facf0bb3902bb7730", "filename": "libstdc++-v3/include/bits/node_handle.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fnode_handle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fnode_handle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fnode_handle.h?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -62,7 +62,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       explicit operator bool() const noexcept { return _M_ptr != nullptr; }\n \n-      bool empty() const noexcept { return _M_ptr == nullptr; }\n+      [[nodiscard]] bool empty() const noexcept { return _M_ptr == nullptr; }\n \n     protected:\n       constexpr _Node_handle_common() noexcept : _M_ptr(), _M_alloc() {}"}, {"sha": "a5044f11976aef4214ab90880030b9869f9cc3db", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -257,7 +257,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @param  __cont  Container.\n    */\n   template <typename _Container>\n-    constexpr auto\n+    [[nodiscard]] constexpr auto\n     empty(const _Container& __cont) noexcept(noexcept(__cont.empty()))\n     -> decltype(__cont.empty())\n     { return __cont.empty(); }\n@@ -267,7 +267,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @param  __array  Container.\n    */\n   template <typename _Tp, size_t _Nm>\n-    constexpr bool\n+    [[nodiscard]] constexpr bool\n     empty(const _Tp (&/*__array*/)[_Nm]) noexcept\n     { return false; }\n \n@@ -276,7 +276,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @param  __il  Initializer list.\n    */\n   template <typename _Tp>\n-    constexpr bool\n+    [[nodiscard]] constexpr bool\n     empty(initializer_list<_Tp> __il) noexcept\n     { return __il.size() == 0;}\n "}, {"sha": "fa834002726e81def579bdd1b053c6e92157ab1f", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -160,7 +160,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t/ sizeof(value_type) / 4;\n       }\n \n-      constexpr bool\n+      [[nodiscard]] constexpr bool\n       empty() const noexcept\n       { return this->_M_len == 0; }\n "}, {"sha": "59c87d007d88f48280a36ace7b22fc650f0c6a1f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/capacity/empty_neg.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcapacity%2Fempty_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcapacity%2Fempty_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcapacity%2Fempty_neg.cc?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <string_view>\n+\n+void\n+test01()\n+{\n+  std::string_view s;\n+  s.empty();  // { dg-warning \"ignoring return value\" }\n+}"}, {"sha": "12de34eb6e443ca62dff7a43621add3fda228fe6", "filename": "libstdc++-v3/testsuite/24_iterators/range_access_cpp17_neg.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access_cpp17_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access_cpp17_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access_cpp17_neg.cc?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -0,0 +1,44 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <iterator>\n+#include <initializer_list>\n+\n+void\n+test01()\n+{\n+  struct A { bool empty() const { return true; } };\n+  A a;\n+  std::empty(a);  // { dg-warning \"ignoring return value\" }\n+}\n+\n+void\n+test02()\n+{\n+  int a[2];\n+  std::empty(a);  // { dg-warning \"ignoring return value\" }\n+}\n+\n+void\n+test03()\n+{\n+  std::initializer_list<int> a{};\n+  std::empty(a);  // { dg-warning \"ignoring return value\" }\n+}"}, {"sha": "7d38b494e9ea8bcdea3ba2da7740233ae4aced8f", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/query/empty_neg.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fquery%2Fempty_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69f1ec7d19f3770450a6215395073dd911e5d20/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fquery%2Fempty_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fquery%2Fempty_neg.cc?ref=d69f1ec7d19f3770450a6215395073dd911e5d20", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <filesystem>\n+\n+void\n+test01()\n+{\n+  std::filesystem::path p;\n+  p.empty();  // { dg-warning \"ignoring return value\" }\n+}"}]}