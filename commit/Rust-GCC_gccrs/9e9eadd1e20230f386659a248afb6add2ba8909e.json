{"sha": "9e9eadd1e20230f386659a248afb6add2ba8909e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5ZWFkZDFlMjAyMzBmMzg2NjU5YTI0OGFmYjZhZGQyYmE4OTA5ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-29T14:17:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-29T14:17:49Z"}, "message": "gimple-fold.c (fold_gimple_cond): Remove.\n\n2015-07-29  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-fold.c (fold_gimple_cond): Remove.\n\t(fold_stmt_1): Do not call it.\n\nFrom-SVN: r226351", "tree": {"sha": "d8c0b5569fe68a33bc0d6b00c4646e3e79ed6607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8c0b5569fe68a33bc0d6b00c4646e3e79ed6607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e9eadd1e20230f386659a248afb6add2ba8909e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9eadd1e20230f386659a248afb6add2ba8909e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9eadd1e20230f386659a248afb6add2ba8909e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9eadd1e20230f386659a248afb6add2ba8909e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4347617fdfc02088ac9f15ecc3af0ff9e7b9e1d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4347617fdfc02088ac9f15ecc3af0ff9e7b9e1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4347617fdfc02088ac9f15ecc3af0ff9e7b9e1d3"}], "stats": {"total": 36, "additions": 5, "deletions": 31}, "files": [{"sha": "f014786da12bf1d891e96ecb4f6e918f622390e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9eadd1e20230f386659a248afb6add2ba8909e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9eadd1e20230f386659a248afb6add2ba8909e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e9eadd1e20230f386659a248afb6add2ba8909e", "patch": "@@ -1,3 +1,8 @@\n+2015-07-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.c (fold_gimple_cond): Remove.\n+\t(fold_stmt_1): Do not call it.\n+\n 2015-07-29  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (aarch64_fp16_type_node): New."}, {"sha": "789fd227d13c21763c9c3a92d0e4a5f231acd737", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9eadd1e20230f386659a248afb6add2ba8909e/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9eadd1e20230f386659a248afb6add2ba8909e/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=9e9eadd1e20230f386659a248afb6add2ba8909e", "patch": "@@ -529,33 +529,6 @@ fold_gimple_assign (gimple_stmt_iterator *si)\n   return NULL_TREE;\n }\n \n-/* Attempt to fold a conditional statement. Return true if any changes were\n-   made. We only attempt to fold the condition expression, and do not perform\n-   any transformation that would require alteration of the cfg.  It is\n-   assumed that the operands have been previously folded.  */\n-\n-static bool\n-fold_gimple_cond (gcond *stmt)\n-{\n-  tree result = fold_binary_loc (gimple_location (stmt),\n-\t\t\t     gimple_cond_code (stmt),\n-                             boolean_type_node,\n-                             gimple_cond_lhs (stmt),\n-                             gimple_cond_rhs (stmt));\n-\n-  if (result)\n-    {\n-      STRIP_USELESS_TYPE_CONVERSION (result);\n-      if (is_gimple_condexpr (result))\n-        {\n-          gimple_cond_set_condition_from_tree (stmt, result);\n-          return true;\n-        }\n-    }\n-\n-  return false;\n-}\n-\n \n /* Replace a statement at *SI_P with a sequence of statements in STMTS,\n    adjusting the replacement stmts location and virtual operands.\n@@ -3711,10 +3684,6 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace, tree (*valueize) (tree))\n \tbreak;\n       }\n \n-    case GIMPLE_COND:\n-      changed |= fold_gimple_cond (as_a <gcond *> (stmt));\n-      break;\n-\n     case GIMPLE_CALL:\n       changed |= gimple_fold_call (gsi, inplace);\n       break;"}]}