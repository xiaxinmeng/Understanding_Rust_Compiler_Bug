{"sha": "a9a54fe80d50adac44457f49bc0b67524ed04c05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlhNTRmZTgwZDUwYWRhYzQ0NDU3ZjQ5YmMwYjY3NTI0ZWQwNGMwNQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-03-17T20:57:22Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-03-17T20:57:22Z"}, "message": "(pc_or_label_operand): New predicate.\n\nFrom-SVN: r3765", "tree": {"sha": "6159c23d426adcdc81b411fb2df62c15b6da3e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6159c23d426adcdc81b411fb2df62c15b6da3e55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9a54fe80d50adac44457f49bc0b67524ed04c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a54fe80d50adac44457f49bc0b67524ed04c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a54fe80d50adac44457f49bc0b67524ed04c05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a54fe80d50adac44457f49bc0b67524ed04c05/comments", "author": null, "committer": null, "parents": [{"sha": "e19ee6593aa1659a51cffd84139131f6922c52b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19ee6593aa1659a51cffd84139131f6922c52b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19ee6593aa1659a51cffd84139131f6922c52b3"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fa93c66cf1feee77076d2c9592d39820412dcbf0", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9a54fe80d50adac44457f49bc0b67524ed04c05/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9a54fe80d50adac44457f49bc0b67524ed04c05/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=a9a54fe80d50adac44457f49bc0b67524ed04c05", "patch": "@@ -442,6 +442,14 @@ arith32_operand (op, mode)\n {\n   return register_operand (op, mode) || GET_CODE (op) == CONST_INT;\n }\n+\n+int\n+pc_or_label_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  return (GET_CODE (op) == PC || GET_CODE (op) == LABEL_REF);\n+}\n \f\n /* Legitimize PIC addresses.  If the address is already\n    position-independent, we return ORIG.  Newly generated"}]}