{"sha": "de80110b8836fd153e11d858b904b396f4b8960d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU4MDExMGI4ODM2ZmQxNTNlMTFkODU4YjkwNGIzOTZmNGI4OTYwZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-04-19T14:02:06Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-04-19T14:02:06Z"}, "message": "i386.md (movsi_1, movhi_1): Force reload to use more flexible alternative.\n\n\t* i386.md (movsi_1, movhi_1): Force reload to use more flexible\n\talternative.\n\nFrom-SVN: r52519", "tree": {"sha": "709580ad599c255f4ffb112a6c23b9fbe4e83107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/709580ad599c255f4ffb112a6c23b9fbe4e83107"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de80110b8836fd153e11d858b904b396f4b8960d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de80110b8836fd153e11d858b904b396f4b8960d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de80110b8836fd153e11d858b904b396f4b8960d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de80110b8836fd153e11d858b904b396f4b8960d/comments", "author": null, "committer": null, "parents": [{"sha": "eea18a4a73a6ff4eab49ddd7bbe1da5747b24686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea18a4a73a6ff4eab49ddd7bbe1da5747b24686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eea18a4a73a6ff4eab49ddd7bbe1da5747b24686"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "0571b4e0ad248bcc64e698a31330baf48a095439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de80110b8836fd153e11d858b904b396f4b8960d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de80110b8836fd153e11d858b904b396f4b8960d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de80110b8836fd153e11d858b904b396f4b8960d", "patch": "@@ -1,3 +1,8 @@\n+Fri Apr 19 15:53:03 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (movsi_1, movhi_1): Force reload to use more flexible\n+\talternative.\n+\n 2002-04-19  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* builtins.c: Include langhooks.h."}, {"sha": "868f4b0127e0fc6c742cea31cf72a39f66f65804", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de80110b8836fd153e11d858b904b396f4b8960d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de80110b8836fd153e11d858b904b396f4b8960d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=de80110b8836fd153e11d858b904b396f4b8960d", "patch": "@@ -1733,8 +1733,13 @@\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"length_immediate\" \"1\")])\n \n+; The first alternative is used only to compute proper length of instruction.\n+; Reload's algorithm does not take into account the cost of spill instructions\n+; needed to free register in given class, so avoid it from choosing the first\n+; alternative when eax is not available.\n+\n (define_insn \"*movsi_1\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=*a,r,*a,m,!*y,!rm,!*y,!*Y,!rm,!*Y\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=*?a,r,*?a,m,!*y,!rm,!*y,!*Y,!rm,!*Y\")\n \t(match_operand:SI 1 \"general_operand\" \"im,rinm,rinm,rin,rm,*y,*y,rm,*Y,*Y\"))]\n   \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n {\n@@ -1843,8 +1848,13 @@\n   [(set_attr \"type\" \"push\")\n    (set_attr \"mode\" \"QI\")])\n \n+; The first alternative is used only to compute proper length of instruction.\n+; Reload's algorithm does not take into account the cost of spill instructions\n+; needed to free register in given class, so avoid it from choosing the first\n+; alternative when eax is not available.\n+\n (define_insn \"*movhi_1\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=*a,r,r,*a,r,m\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=*?a,r,r,*?a,r,m\")\n \t(match_operand:HI 1 \"general_operand\" \"i,r,rn,rm,rm,rn\"))]\n   \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n {"}]}