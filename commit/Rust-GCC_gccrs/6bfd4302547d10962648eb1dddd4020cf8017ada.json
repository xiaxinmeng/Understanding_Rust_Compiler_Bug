{"sha": "6bfd4302547d10962648eb1dddd4020cf8017ada", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJmZDQzMDI1NDdkMTA5NjI2NDhlYjFkZGRkNDAyMGNmODAxN2FkYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-06-26T13:24:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-06-26T13:24:57Z"}, "message": "re PR tree-optimization/44674 (ICE: in refs_may_alias_p_1, at tree-ssa-alias.c:953 with -fprofile-generate)\n\n2010-06-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/44674\n\t* tree-ssa-alias.c (refs_may_alias_p_1): Allow all kind of\n\tdecls.  Handle LABEL_DECLs like FUNCTION_DECLs.\n\n\t* gcc.dg/pr44674.c: New testcase.\n\nFrom-SVN: r161431", "tree": {"sha": "104b2d207cbd261c891afcb11e15abb3824be693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/104b2d207cbd261c891afcb11e15abb3824be693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bfd4302547d10962648eb1dddd4020cf8017ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfd4302547d10962648eb1dddd4020cf8017ada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfd4302547d10962648eb1dddd4020cf8017ada", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfd4302547d10962648eb1dddd4020cf8017ada/comments", "author": null, "committer": null, "parents": [{"sha": "922e18828a123733841dd652f8a78bfd13ac9856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922e18828a123733841dd652f8a78bfd13ac9856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922e18828a123733841dd652f8a78bfd13ac9856"}], "stats": {"total": 56, "additions": 39, "deletions": 17}, "files": [{"sha": "5a2bbac92ef58bc4ba722cc00fddfc4f6e3680c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bfd4302547d10962648eb1dddd4020cf8017ada", "patch": "@@ -1,3 +1,9 @@\n+2010-06-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44674\n+\t* tree-ssa-alias.c (refs_may_alias_p_1): Allow all kind of\n+\tdecls.  Handle LABEL_DECLs like FUNCTION_DECLs.\n+\n 2010-06-26  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.c (n_switches_alloc, n_infiles_alloc, alloc_infile,\n@@ -10,8 +16,8 @@\n 2010-06-26  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/44671\n-\t* cgraphunit.c (cgraph_function_versioning): Remove wrong cgraph_make_decl_local\n-\tcall; fix typo copying RTL data.\n+\t* cgraphunit.c (cgraph_function_versioning): Remove wrong\n+\tcgraph_make_decl_local call; fix typo copying RTL data.\n \n 2010-06-25  DJ Delorie  <dj@redhat.com>\n "}, {"sha": "ae6ce361483750a71420198cf99f83cf7622c500", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bfd4302547d10962648eb1dddd4020cf8017ada", "patch": "@@ -1,3 +1,8 @@\n+2010-06-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44674\n+\t* gcc.dg/pr44674.c: New testcase.\n+\n 2010-06-26  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/opts-3.c: New test."}, {"sha": "c3f16ff20ee61a5a11c2217b3e8a8acd60dc6cbb", "filename": "gcc/testsuite/gcc.dg/pr44674.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44674.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44674.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44674.c?ref=6bfd4302547d10962648eb1dddd4020cf8017ada", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fprofile-generate\" } */\n+\n+void\n+jumpfunc (void *p)\n+{\n+  void *l = &&jumplabel;\n+jumplabel:\n+  __builtin_memcpy (p, l, 1);\n+}"}, {"sha": "95f26f1ed0a79a61a96a9e7e4342c03428024e82", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfd4302547d10962648eb1dddd4020cf8017ada/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=6bfd4302547d10962648eb1dddd4020cf8017ada", "patch": "@@ -800,18 +800,16 @@ refs_may_alias_p_1 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n   bool var1_p, var2_p, ind1_p, ind2_p;\n   alias_set_type set;\n \n-  gcc_assert ((!ref1->ref\n-\t       || SSA_VAR_P (ref1->ref)\n-\t       || handled_component_p (ref1->ref)\n-\t       || INDIRECT_REF_P (ref1->ref)\n-\t       || TREE_CODE (ref1->ref) == TARGET_MEM_REF\n-\t       || TREE_CODE (ref1->ref) == CONST_DECL)\n-\t      && (!ref2->ref\n-\t\t  || SSA_VAR_P (ref2->ref)\n-\t\t  || handled_component_p (ref2->ref)\n-\t\t  || INDIRECT_REF_P (ref2->ref)\n-\t\t  || TREE_CODE (ref2->ref) == TARGET_MEM_REF\n-\t\t  || TREE_CODE (ref2->ref) == CONST_DECL));\n+  gcc_checking_assert ((!ref1->ref\n+\t\t\t|| DECL_P (ref1->ref)\n+\t\t\t|| handled_component_p (ref1->ref)\n+\t\t\t|| INDIRECT_REF_P (ref1->ref)\n+\t\t\t|| TREE_CODE (ref1->ref) == TARGET_MEM_REF)\n+\t\t       && (!ref2->ref\n+\t\t\t   || DECL_P (ref2->ref)\n+\t\t\t   || handled_component_p (ref2->ref)\n+\t\t\t   || INDIRECT_REF_P (ref2->ref)\n+\t\t\t   || TREE_CODE (ref2->ref) == TARGET_MEM_REF));\n \n   /* Decompose the references into their base objects and the access.  */\n   base1 = ao_ref_base (ref1);\n@@ -832,10 +830,13 @@ refs_may_alias_p_1 (ao_ref *ref1, ao_ref *ref2, bool tbaa_p)\n       || is_gimple_min_invariant (base2))\n     return false;\n \n-  /* We can end up refering to code via function decls.  As we likely\n-     do not properly track code aliases conservatively bail out.  */\n+  /* We can end up refering to code via function and label decls.\n+     As we likely do not properly track code aliases conservatively\n+     bail out.  */\n   if (TREE_CODE (base1) == FUNCTION_DECL\n-      || TREE_CODE (base2) == FUNCTION_DECL)\n+      || TREE_CODE (base2) == FUNCTION_DECL\n+      || TREE_CODE (base1) == LABEL_DECL\n+      || TREE_CODE (base2) == LABEL_DECL)\n     return true;\n \n   /* Defer to simple offset based disambiguation if we have"}]}