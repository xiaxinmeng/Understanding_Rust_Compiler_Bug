{"sha": "20b11fd41a51d669eec3601571e21e0081f5c5e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBiMTFmZDQxYTUxZDY2OWVlYzM2MDE1NzFlMjFlMDA4MWY1YzVlMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-06-04T07:27:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-06-04T07:27:52Z"}, "message": "re PR c++/86025 (ICE with -Wduplicated-branches and OpenMP critical)\n\n\tPR c++/86025\n\t* tree.c (inchash::add_expr): Handle IDENTIFIER_NODE.\n\n\t* c-c++-common/gomp/pr86025.c: New test.\n\nFrom-SVN: r261137", "tree": {"sha": "88fa3aee13c4b4623128a5cdf6ce114ad96b7366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88fa3aee13c4b4623128a5cdf6ce114ad96b7366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20b11fd41a51d669eec3601571e21e0081f5c5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b11fd41a51d669eec3601571e21e0081f5c5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b11fd41a51d669eec3601571e21e0081f5c5e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b11fd41a51d669eec3601571e21e0081f5c5e0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea4767995f4e2cc46a697e09e954c6649d8cf515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4767995f4e2cc46a697e09e954c6649d8cf515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea4767995f4e2cc46a697e09e954c6649d8cf515"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "3882e6098cfc7f9a1950974152a1ecae699c003a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20b11fd41a51d669eec3601571e21e0081f5c5e0", "patch": "@@ -1,3 +1,8 @@\n+2018-06-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/86025\n+\t* tree.c (inchash::add_expr): Handle IDENTIFIER_NODE.\n+\n 2018-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/86034"}, {"sha": "7352e41c3fcd5f5a9e5acbdbed802c44bec2f4b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20b11fd41a51d669eec3601571e21e0081f5c5e0", "patch": "@@ -1,3 +1,8 @@\n+2018-06-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/86025\n+\t* c-c++-common/gomp/pr86025.c: New test.\n+\n 2018-06-03  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* gcc.target/powerpc/altivec-7.c: Remove extra brace."}, {"sha": "c1c507994138161df3e968aed48924c66940b5ee", "filename": "gcc/testsuite/c-c++-common/gomp/pr86025.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr86025.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr86025.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr86025.c?ref=20b11fd41a51d669eec3601571e21e0081f5c5e0", "patch": "@@ -0,0 +1,20 @@\n+/* PR c++/86025 */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wduplicated-branches\" } */\n+\n+int i;\n+\n+void\n+foo (int x)\n+{\n+  if (x)\n+    {\n+      #pragma omp critical (foo)\n+      i++;\n+    }\n+  else\n+    {\n+      #pragma omp critical\n+      i++;\n+    }\n+}"}, {"sha": "2c75953542b1db4aa638882252f87eb76c3ba1cc", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b11fd41a51d669eec3601571e21e0081f5c5e0/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=20b11fd41a51d669eec3601571e21e0081f5c5e0", "patch": "@@ -7360,6 +7360,9 @@ add_expr (const_tree t, inchash::hash &hstate, unsigned int flags)\n       for (i = 0; i < TREE_VEC_LENGTH (t); ++i)\n \tinchash::add_expr (TREE_VEC_ELT (t, i), hstate, flags);\n       return;\n+    case IDENTIFIER_NODE:\n+      hstate.add_object (IDENTIFIER_HASH_VALUE (t));\n+      return;\n     case FUNCTION_DECL:\n       /* When referring to a built-in FUNCTION_DECL, use the __builtin__ form.\n \t Otherwise nodes that compare equal according to operand_equal_p might"}]}