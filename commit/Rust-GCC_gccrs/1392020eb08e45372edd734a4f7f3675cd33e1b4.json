{"sha": "1392020eb08e45372edd734a4f7f3675cd33e1b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM5MjAyMGViMDhlNDUzNzJlZGQ3MzRhNGY3ZjM2NzVjZDMzZTFiNA==", "commit": {"author": {"name": "Eric Raskin", "email": "ehr@listworks.com", "date": "1999-05-28T21:33:05Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-05-28T21:33:05Z"}, "message": "fixinc.dgux:  Use modified _int_varargs.h\n\nFrom-SVN: r27231", "tree": {"sha": "279ab12b2fceb621c07ecbfec1cc230a1a016029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/279ab12b2fceb621c07ecbfec1cc230a1a016029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1392020eb08e45372edd734a4f7f3675cd33e1b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1392020eb08e45372edd734a4f7f3675cd33e1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1392020eb08e45372edd734a4f7f3675cd33e1b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1392020eb08e45372edd734a4f7f3675cd33e1b4/comments", "author": null, "committer": null, "parents": [{"sha": "07515641a55ffacad7a289e32702831f54630d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07515641a55ffacad7a289e32702831f54630d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07515641a55ffacad7a289e32702831f54630d07"}], "stats": {"total": 65, "additions": 49, "deletions": 16}, "files": [{"sha": "a3f885a496a16768d7f890cb555c340792ef7d0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1392020eb08e45372edd734a4f7f3675cd33e1b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1392020eb08e45372edd734a4f7f3675cd33e1b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1392020eb08e45372edd734a4f7f3675cd33e1b4", "patch": "@@ -2,6 +2,7 @@ Fri May 28 03:47:03 1999  Eric Raskin (ehr@listworks.com)\n \n \t* i386/t-dgux (EXTRA_PARTS): Add crti.o\n \t(crti.o): Add build rule and dependencies.\n+\t* fixinc/fixinc.dgux:  Use modified _int_varargs.h\n \n Fri May 28 03:41:02 1999  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n "}, {"sha": "23f63da086036314ac159cde2eec15cf4eeabdcd", "filename": "gcc/fixinc/fixinc.dgux", "status": "modified", "additions": 48, "deletions": 16, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1392020eb08e45372edd734a4f7f3675cd33e1b4/gcc%2Ffixinc%2Ffixinc.dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1392020eb08e45372edd734a4f7f3675cd33e1b4/gcc%2Ffixinc%2Ffixinc.dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.dgux?ref=1392020eb08e45372edd734a4f7f3675cd33e1b4", "patch": "@@ -142,24 +142,56 @@ if [ -r ${INPUT}/$file ]; then\n #ifndef __INT_VARARGS_H\n #define __INT_VARARGS_H\n \n-#if defined(__m88k__) && defined (__DGUX__)\n-#ifndef __GNUC_VA_LIST\n-#define __GNUC_VA_LIST\n-typedef struct\n-{\n-  int  __va_arg;\t\t/* argument number */\n-  int *__va_stk;\t\t/* start of args passed on stack */\n-  int *__va_reg;\t\t/* start of args passed in regs */\n-} __gnuc_va_list;\n-#endif /* not __GNUC_VA_LIST */\n-#endif /* 88k && dgux */\n-\n-#ifndef _VA_LIST_\n+#ifndef ___int_features_h\n+#include <sys/_int_features.h>\n+#endif\n+\n+#if !(defined(_VA_LIST) || defined(_VA_LIST_))\n+#define _VA_LIST\n #define _VA_LIST_\n-typedef __gnuc_va_list va_list;\n-#endif /* _VA_LIST_ */\n \n-#endif /* __INT_VARARGS_H */\n+#ifdef __LINT__\n+\n+#ifdef __STDC__\n+typedef void * va_list;\n+#else\n+typedef char * va_list;\n+#endif\n+\n+#else\n+#if _M88K_ANY\n+\n+#if defined(__DCC__)\n+\n+typedef struct {\n+       int     next_arg;\n+       int     *mem_ptr;\n+       int     *reg_ptr;\n+} va_list;\n+\n+#else  /* ! defined(__DCC__) */\n+\n+typedef struct {\n+       int  __va_arg;          /* argument number */\n+       int *__va_stk;          /* start of args passed on stack */\n+       int *__va_reg;          /* start of args passed in regs */\n+} va_list;\n+\n+#endif  /* ! defined(__DCC__) */\n+\n+#elif _IX86_ANY\n+\n+#if defined(__GNUC__) || defined(__STDC__)\n+typedef void * va_list;\n+#else\n+typedef char * va_list;\n+#endif\n+\n+#endif  /*  _IX86_ANY */\n+\n+#endif /* __LINT__ */\n+#endif /*  !(defined(_VA_LIST) || defined(_VA_LIST_)) */\n+#endif /*  #ifndef __INT_VARARGS_H  */\n \n EOF\n   chmod a+r ${LIB}/$file"}]}