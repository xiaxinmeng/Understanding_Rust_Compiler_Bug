{"sha": "01e7bd9ad266390ee411603018a015a4cd2a0d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFlN2JkOWFkMjY2MzkwZWU0MTE2MDMwMThhMDE1YTRjZDJhMGQ0Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-05-17T21:53:11Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-05-17T21:53:11Z"}, "message": "(unroll_loop): Increment copy_start_luid if copy_start\nis loop_start.\n\nFrom-SVN: r9736", "tree": {"sha": "ea8baa9d98c9436015adaa2cc31f61771e648ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8baa9d98c9436015adaa2cc31f61771e648ac3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01e7bd9ad266390ee411603018a015a4cd2a0d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e7bd9ad266390ee411603018a015a4cd2a0d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e7bd9ad266390ee411603018a015a4cd2a0d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e7bd9ad266390ee411603018a015a4cd2a0d4c/comments", "author": null, "committer": null, "parents": [{"sha": "a25ee33216ab0b3c0ace1cb717d2434a0a7ddd8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25ee33216ab0b3c0ace1cb717d2434a0a7ddd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25ee33216ab0b3c0ace1cb717d2434a0a7ddd8f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6dd9760fa26d58270509186e64d1172ec142eefc", "filename": "gcc/unroll.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01e7bd9ad266390ee411603018a015a4cd2a0d4c/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01e7bd9ad266390ee411603018a015a4cd2a0d4c/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=01e7bd9ad266390ee411603018a015a4cd2a0d4c", "patch": "@@ -735,6 +735,12 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n        since it will also be used outside the loop.  */\n     if (GET_CODE (copy_end) == JUMP_INSN)\n       copy_end_luid--;\n+    /* If copy_start points to the NOTE that starts the loop, then we must\n+       use the next luid, because invariant pseudo-regs moved out of the loop\n+       have their lifetimes modified to start here, but they are not safe\n+       to duplicate.  */\n+    if (copy_start == loop_start)\n+      copy_start_luid++;\n \n     for (j = FIRST_PSEUDO_REGISTER; j < max_reg_before_loop; ++j)\n       if (regno_first_uid[j] > 0 && regno_first_uid[j] <= max_uid_for_loop"}]}