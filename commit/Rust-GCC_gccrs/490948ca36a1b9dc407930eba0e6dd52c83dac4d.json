{"sha": "490948ca36a1b9dc407930eba0e6dd52c83dac4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwOTQ4Y2EzNmExYjlkYzQwNzkzMGViYTBlNmRkNTJjODNkYWM0ZA==", "commit": {"author": {"name": "Jim Wilson", "email": "jim.wilson@linaro.org", "date": "2015-06-19T17:22:38Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2015-06-19T17:22:38Z"}, "message": "aarch64.md (mov<mode>:GPF): Don't call force_reg if op1 is an fp zero.\n\ngcc/\n\t* config/aarch64/aarch64.md (mov<mode>:GPF): Don't call force_reg if\n\top1 is an fp zero.\n\t(movsf_aarch64): Change condition from register_operand to\n\taarch64_reg_or_fp_zero for op1.  Change type for alternative 6 to\n\tload1.  Change type for alternative 7 to store1.\n\t(movdf_aarch64): Likewise.\ngcc/testsuite/\n\t* gcc.target/aarch64/fmovd-zero-mem.c: New.\n\t* gcc.target/aarch64/fmovd-zero-reg.c: New.\n\t* gcc.target/aarch64/fmovf-zero-mem.c: New.\n\t* gcc.target/aarch64/fmovf-zero-reg.c: New.\n\t* gcc.target/aarch64/fmovld-zero-mem.c: New.\n\t* gcc.target/aarch64/fmovld-zero-mem.c: New.\n\t* gcc.target/aarch64/fmovd-zero.c: Delete.\n\t* gcc.target/aarch64/fmovf-zero.c: Delete.\n\nFrom-SVN: r224673", "tree": {"sha": "dd73baf67c8ce5485b478e5f8cbef72b8bac78cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd73baf67c8ce5485b478e5f8cbef72b8bac78cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/490948ca36a1b9dc407930eba0e6dd52c83dac4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490948ca36a1b9dc407930eba0e6dd52c83dac4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/490948ca36a1b9dc407930eba0e6dd52c83dac4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490948ca36a1b9dc407930eba0e6dd52c83dac4d/comments", "author": null, "committer": null, "parents": [{"sha": "590f5d5125c96aa8e6e29463e37f23502f0bd673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590f5d5125c96aa8e6e29463e37f23502f0bd673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/590f5d5125c96aa8e6e29463e37f23502f0bd673"}], "stats": {"total": 79, "additions": 72, "deletions": 7}, "files": [{"sha": "d33ca138c60a54fbd68b2125a2b3dcf0fe92c05f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -1,3 +1,12 @@\n+2015-06-19  Jim Wilson  <jim.wilson@linaro.org>\n+\n+\t* config/aarch64/aarch64.md (mov<mode>:GPF): Don't call force_reg if\n+\top1 is an fp zero.\n+\t(movsf_aarch64): Change condition from register_operand to\n+\taarch64_reg_or_fp_zero for op1.  Change type for alternative 6 to\n+\tload1.  Change type for alternative 7 to store1.\n+\t(movdf_aarch64): Likewise.\n+\n 2015-06-19  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/vax/vax.md: Adjust sign/zero extend patterns to"}, {"sha": "d3f5d5b20632b412d028416591ca7c449d885e08", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -986,7 +986,9 @@\n \tFAIL;\n      }\n \n-    if (GET_CODE (operands[0]) == MEM)\n+    if (GET_CODE (operands[0]) == MEM\n+        && ! (GET_CODE (operands[1]) == CONST_DOUBLE\n+\t      && aarch64_float_const_zero_rtx_p (operands[1])))\n       operands[1] = force_reg (<MODE>mode, operands[1]);\n   \"\n )\n@@ -995,7 +997,7 @@\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=w, ?r,w,w  ,w,m,r,m ,r\")\n \t(match_operand:SF 1 \"general_operand\"      \"?rY, w,w,Ufc,m,w,m,rY,r\"))]\n   \"TARGET_FLOAT && (register_operand (operands[0], SFmode)\n-    || register_operand (operands[1], SFmode))\"\n+    || aarch64_reg_or_fp_zero (operands[1], SFmode))\"\n   \"@\n    fmov\\\\t%s0, %w1\n    fmov\\\\t%w0, %s1\n@@ -1007,14 +1009,14 @@\n    str\\\\t%w1, %0\n    mov\\\\t%w0, %w1\"\n   [(set_attr \"type\" \"f_mcr,f_mrc,fmov,fconsts,\\\n-                     f_loads,f_stores,f_loads,f_stores,mov_reg\")]\n+                     f_loads,f_stores,load1,store1,mov_reg\")]\n )\n \n (define_insn \"*movdf_aarch64\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=w, ?r,w,w  ,w,m,r,m ,r\")\n \t(match_operand:DF 1 \"general_operand\"      \"?rY, w,w,Ufc,m,w,m,rY,r\"))]\n   \"TARGET_FLOAT && (register_operand (operands[0], DFmode)\n-    || register_operand (operands[1], DFmode))\"\n+    || aarch64_reg_or_fp_zero (operands[1], DFmode))\"\n   \"@\n    fmov\\\\t%d0, %x1\n    fmov\\\\t%x0, %d1\n@@ -1026,7 +1028,7 @@\n    str\\\\t%x1, %0\n    mov\\\\t%x0, %x1\"\n   [(set_attr \"type\" \"f_mcr,f_mrc,fmov,fconstd,\\\n-                     f_loadd,f_stored,f_loadd,f_stored,mov_reg\")]\n+                     f_loadd,f_stored,load1,store1,mov_reg\")]\n )\n \n (define_expand \"movtf\""}, {"sha": "657f167de0bb4f886261499ee318d592ce03f881", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -1,3 +1,14 @@\n+2015-06-19  Jim Wilson  <jim.wilson@linaro.org>\n+\n+\t* gcc.target/aarch64/fmovd-zero-mem.c: New.\n+\t* gcc.target/aarch64/fmovd-zero-reg.c: New.\n+\t* gcc.target/aarch64/fmovf-zero-mem.c: New.\n+\t* gcc.target/aarch64/fmovf-zero-reg.c: New.\n+\t* gcc.target/aarch64/fmovld-zero-mem.c: New.\n+\t* gcc.target/aarch64/fmovld-zero-mem.c: New.\n+\t* gcc.target/aarch64/fmovd-zero.c: Delete.\n+\t* gcc.target/aarch64/fmovf-zero.c: Delete.\n+\n 2015-06-19  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/vax/bswapdi-1.c: New."}, {"sha": "9245c4822656b85b20240563f9e69eb890df732c", "filename": "gcc/testsuite/gcc.target/aarch64/fmovd-zero-mem.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovd-zero-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovd-zero-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovd-zero-mem.c?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -7,4 +7,4 @@ foo (double *output)\n   *output = 0.0;\n }\n \n-/* { dg-final { scan-assembler \"fmov\\\\td\\[0-9\\]+, xzr\" } } */\n+/* { dg-final { scan-assembler \"str\\\\txzr, \\\\\\[x0\\\\\\]\" } } */", "previous_filename": "gcc/testsuite/gcc.target/aarch64/fmovd-zero.c"}, {"sha": "0a3e5940297629a1643c4520ddfbd9a3cab2f80c", "filename": "gcc/testsuite/gcc.target/aarch64/fmovd-zero-reg.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovd-zero-reg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovd-zero-reg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovd-zero-reg.c?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar (double);\n+void\n+foo (void)\n+{\n+  bar (0.0);\n+}\n+\n+/* { dg-final { scan-assembler \"fmov\\\\td0, xzr\" } } */"}, {"sha": "518eff0626f375cc9117161152cb0e9044c7397a", "filename": "gcc/testsuite/gcc.target/aarch64/fmovf-zero-mem.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovf-zero-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovf-zero-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovf-zero-mem.c?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -7,4 +7,4 @@ foo (float *output)\n   *output = 0.0;\n }\n \n-/* { dg-final { scan-assembler \"fmov\\\\ts\\[0-9\\]+, wzr\" } } */\n+/* { dg-final { scan-assembler \"str\\\\twzr, \\\\\\[x0\\\\\\]\" } } */", "previous_filename": "gcc/testsuite/gcc.target/aarch64/fmovf-zero.c"}, {"sha": "4213450d6e563c81156447e9093bd7b56a8405c8", "filename": "gcc/testsuite/gcc.target/aarch64/fmovf-zero-reg.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovf-zero-reg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovf-zero-reg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovf-zero-reg.c?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar (float);\n+void\n+foo (void)\n+{\n+  bar (0.0);\n+}\n+\n+/* { dg-final { scan-assembler \"fmov\\\\ts0, wzr\" } } */"}, {"sha": "e649404ae07a78a028327e89f5fa9ee2e51e37ee", "filename": "gcc/testsuite/gcc.target/aarch64/fmovld-zero-mem.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovld-zero-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovld-zero-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovld-zero-mem.c?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void\n+foo (long double *output)\n+{\n+  *output = 0.0;\n+}\n+\n+/* { dg-final { scan-assembler \"stp\\\\txzr, xzr, \\\\\\[x0\\\\\\]\" } } */"}, {"sha": "ca602cb381fb12ef7340d43f18a80eb6c7ce3e3f", "filename": "gcc/testsuite/gcc.target/aarch64/fmovld-zero-reg.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovld-zero-reg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490948ca36a1b9dc407930eba0e6dd52c83dac4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovld-zero-reg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffmovld-zero-reg.c?ref=490948ca36a1b9dc407930eba0e6dd52c83dac4d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar (long double);\n+void\n+foo (void)\n+{\n+  bar (0.0);\n+}\n+\n+/* { dg-final { scan-assembler \"movi\\\\tv0\\.2d, #0\" } } */"}]}