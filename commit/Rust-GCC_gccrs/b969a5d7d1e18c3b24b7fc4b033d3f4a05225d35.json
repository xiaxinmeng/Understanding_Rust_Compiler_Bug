{"sha": "b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2OWE1ZDdkMWUxOGMzYjI0YjdmYzRiMDMzZDNmNGEwNTIyNWQzNQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-08-27T19:40:02Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-08-27T19:40:02Z"}, "message": "re PR libstdc++/4143 (--disable == --enable for version-specific-runtime-libs)\n\n2001-08-27  Phil Edwards  <pme@sources.redhat.com>\n\n\tPR libstdc++/4143\n\t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO):  Handle enable/disable\n\tcorrectly for version-specific-runtime-libs.\n\t* aclocal.m4:  Regenerate.\n\t* configure:  Regenerate.\n\nFrom-SVN: r45206", "tree": {"sha": "c72f0457722955f64c7db0249f4f088a183ec62d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c72f0457722955f64c7db0249f4f088a183ec62d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/comments", "author": null, "committer": null, "parents": [{"sha": "90d925d3b284f8d9e4653cdde9096bf46769b72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d925d3b284f8d9e4653cdde9096bf46769b72c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d925d3b284f8d9e4653cdde9096bf46769b72c"}], "stats": {"total": 1987, "additions": 1011, "deletions": 976}, "files": [{"sha": "5b2a8eacb2efc78b8a336fdeb64191d129359868", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "patch": "@@ -1,3 +1,11 @@\n+2001-08-27  Phil Edwards  <pme@sources.redhat.com>\n+\n+\tPR libstdc++/4143\n+\t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO):  Handle enable/disable\n+\tcorrectly for version-specific-runtime-libs.\n+\t* aclocal.m4:  Regenerate.\n+\t* configure:  Regenerate.\n+\n 2001-08-24  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* config/cpu/i386/bits/limits.h (__glibcpp_long_double_bits): Only"}, {"sha": "6fba2931e4bd9d05b8cd1c28a2206b5a6f516b60", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "patch": "@@ -1683,24 +1683,32 @@ AC_MSG_RESULT($gxx_include_dir)\n AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n AC_ARG_ENABLE(version-specific-runtime-libs,\n [  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n-[  version_specific_libs=yes\n-# Need the gcc compiler version to know where to install libraries\n-# and header files if --enable-version-specific-runtime-libs option\n-# is selected.\n-changequote(,)dnl\n-gcc_version_trigger=${srcdir}/../gcc/version.c\n-gcc_version_full=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^\\\"]*\\)\\\".*/\\1/'`\n-gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n-gxx_include_dir='$(libdir)/gcc-lib/$(target_alias)/'${gcc_version}/include/g++\n-glibcpp_toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n-glibcpp_toolexeclibdir='$(toolexecdir)/'${gcc_version}'$(MULTISUBDIR)'\n-changequote([,])dnl\n-],version_specific_libs=no)\n+[case \"$enableval\" in\n+ yes) version_specific_libs=yes ;;\n+ no)  version_specific_libs=no ;;\n+ *)   AC_MSG_ERROR([Unknown argument to enable/disable version-specific libs]);;\n+ esac],\n+version_specific_libs=no)dnl\n+# Option set, now we can test it.\n AC_MSG_RESULT($version_specific_libs)\n \n+if test $version_specific_libs = yes; then\n+  # Need the gcc compiler version to know where to install libraries\n+  # and header files if --enable-version-specific-runtime-libs option\n+  # is selected.\n+  changequote(,)dnl\n+  gcc_version_trigger=${srcdir}/../gcc/version.c\n+  gcc_version_full=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^\\\"]*\\)\\\".*/\\1/'`\n+  gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n+  gxx_include_dir='$(libdir)/gcc-lib/$(target_alias)/'${gcc_version}/include/g++\n+  glibcpp_toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n+  glibcpp_toolexeclibdir='$(toolexecdir)/'${gcc_version}'$(MULTISUBDIR)'\n+  changequote([,])dnl\n+fi\n+\n # Default case for install directory for include files.\n-if test x\"$version_specific_libs\" = x\"no\" \\\n-   && test x\"$gxx_include_dir\" = x\"no\"; then\n+if test $version_specific_libs = no &&\n+   test $gxx_include_dir = no; then\n   gxx_include_dir='$(prefix)'/include/g++-${libstdcxx_interface}\n fi\n "}, {"sha": "ecce1c4becfbdd72def46058caba34be8ad53850", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 35, "deletions": 33, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35", "patch": "@@ -1695,24 +1695,32 @@ AC_MSG_RESULT($gxx_include_dir)\n AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n AC_ARG_ENABLE(version-specific-runtime-libs,\n [  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n-[  version_specific_libs=yes\n-# Need the gcc compiler version to know where to install libraries\n-# and header files if --enable-version-specific-runtime-libs option\n-# is selected.\n-changequote(,)dnl\n-gcc_version_trigger=${srcdir}/../gcc/version.c\n-gcc_version_full=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^\\\"]*\\)\\\".*/\\1/'`\n-gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n-gxx_include_dir='$(libdir)/gcc-lib/$(target_alias)/'${gcc_version}/include/g++\n-glibcpp_toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n-glibcpp_toolexeclibdir='$(toolexecdir)/'${gcc_version}'$(MULTISUBDIR)'\n-changequote([,])dnl\n-],version_specific_libs=no)\n+[case \"$enableval\" in\n+ yes) version_specific_libs=yes ;;\n+ no)  version_specific_libs=no ;;\n+ *)   AC_MSG_ERROR([Unknown argument to enable/disable version-specific libs]);;\n+ esac],\n+version_specific_libs=no)dnl\n+# Option set, now we can test it.\n AC_MSG_RESULT($version_specific_libs)\n \n+if test $version_specific_libs = yes; then\n+  # Need the gcc compiler version to know where to install libraries\n+  # and header files if --enable-version-specific-runtime-libs option\n+  # is selected.\n+  changequote(,)dnl\n+  gcc_version_trigger=${srcdir}/../gcc/version.c\n+  gcc_version_full=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^\\\"]*\\)\\\".*/\\1/'`\n+  gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n+  gxx_include_dir='$(libdir)/gcc-lib/$(target_alias)/'${gcc_version}/include/g++\n+  glibcpp_toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n+  glibcpp_toolexeclibdir='$(toolexecdir)/'${gcc_version}'$(MULTISUBDIR)'\n+  changequote([,])dnl\n+fi\n+\n # Default case for install directory for include files.\n-if test x\"$version_specific_libs\" = x\"no\" \\\n-   && test x\"$gxx_include_dir\" = x\"no\"; then\n+if test $version_specific_libs = no &&\n+   test $gxx_include_dir = no; then\n   gxx_include_dir='$(prefix)'/include/g++-${libstdcxx_interface}\n fi\n \n@@ -1951,12 +1959,12 @@ fi])\n # Macro to add for using GNU gettext.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #\n-# This file can be copied and used freely without restrictions.  It can\n+# This file file be copied and used freely without restrictions.  It can\n # be used in projects which are not available under the GNU Public License\n # but which still want to provide support for the GNU gettext functionality.\n # Please note that the actual code is *not* freely available.\n \n-# serial 5\n+# serial 3\n \n AC_DEFUN(AM_WITH_NLS,\n   [AC_MSG_CHECKING([whether NLS is requested])\n@@ -1998,10 +2006,9 @@ AC_DEFUN(AM_WITH_NLS,\n \t     AC_CHECK_LIB(intl, bindtextdomain,\n \t       [AC_CACHE_CHECK([for gettext in libintl],\n \t\t gt_cv_func_gettext_libintl,\n-\t\t [AC_CHECK_LIB(intl, gettext,\n-\t\t  gt_cv_func_gettext_libintl=yes,\n-\t\t  gt_cv_func_gettext_libintl=no)],\n-\t\t gt_cv_func_gettext_libintl=no)])\n+\t\t [AC_TRY_LINK([], [return (int) gettext (\"\")],\n+\t\t gt_cv_func_gettext_libintl=yes,\n+\t\t gt_cv_func_gettext_libintl=no)])])\n \t   fi\n \n \t   if test \"$gt_cv_func_gettext_libc\" = \"yes\" \\\n@@ -2095,7 +2102,7 @@ AC_DEFUN(AM_WITH_NLS,\n \t  : ;\n \telse\n \t  AC_MSG_RESULT(\n-\t    [found xgettext program is not GNU xgettext; ignore it])\n+\t    [found xgettext programs is not GNU xgettext; ignore it])\n \t  XGETTEXT=\":\"\n \tfi\n       fi\n@@ -2107,12 +2114,6 @@ AC_DEFUN(AM_WITH_NLS,\n       nls_cv_header_intl=intl/libintl.h\n       nls_cv_header_libgt=intl/libgettext.h\n     fi\n-    AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)\n-    AC_OUTPUT_COMMANDS(\n-     [case \"$CONFIG_FILES\" in *po/Makefile.in*)\n-        sed -e \"/POTFILES =/r po/POTFILES\" po/Makefile.in > po/Makefile\n-      esac])\n-\n \n     # If this is used in GNU gettext we have to set USE_NLS to `yes'\n     # because some of the sources are only built for this goal.\n@@ -2157,9 +2158,9 @@ AC_DEFUN(AM_GNU_GETTEXT,\n    AC_REQUIRE([AC_FUNC_MMAP])dnl\n \n    AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h string.h \\\n-unistd.h sys/param.h])\n+unistd.h values.h sys/param.h])\n    AC_CHECK_FUNCS([getcwd munmap putenv setenv setlocale strchr strcasecmp \\\n-strdup __argz_count __argz_stringify __argz_next])\n+__argz_count __argz_stringify __argz_next])\n \n    if test \"${ac_cv_func_stpcpy+set}\" != \"set\"; then\n      AC_CHECK_FUNCS(stpcpy)\n@@ -2267,7 +2268,7 @@ strdup __argz_count __argz_stringify __argz_next])\n # Search path for a program which passes the given test.\n # Ulrich Drepper <drepper@cygnus.com>, 1996.\n #\n-# This file can be copied and used freely without restrictions.  It can\n+# This file file be copied and used freely without restrictions.  It can\n # be used in projects which are not available under the GNU Public License\n # but which still want to provide support for the GNU gettext functionality.\n # Please note that the actual code is *not* freely available.\n@@ -2315,7 +2316,7 @@ AC_SUBST($1)dnl\n # Check whether LC_MESSAGES is available in <locale.h>.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #\n-# This file can be copied and used freely without restrictions.  It can\n+# This file file be copied and used freely without restrictions.  It can\n # be used in projects which are not available under the GNU Public License\n # but which still want to provide support for the GNU gettext functionality.\n # Please note that the actual code is *not* freely available.\n@@ -2328,7 +2329,8 @@ AC_DEFUN(AM_LC_MESSAGES,\n       [AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],\n        am_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])\n     if test $am_cv_val_LC_MESSAGES = yes; then\n-      AC_DEFINE(HAVE_LC_MESSAGES)\n+      AC_DEFINE(HAVE_LC_MESSAGES, 1,\n+\t\t[Define if your locale.h file contains LC_MESSAGES.])\n     fi\n   fi])\n "}, {"sha": "b7d2c8dc1ced5702781db2a8751063d6c72b3315", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 945, "deletions": 928, "changes": 1873, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=b969a5d7d1e18c3b24b7fc4b033d3f4a05225d35"}]}