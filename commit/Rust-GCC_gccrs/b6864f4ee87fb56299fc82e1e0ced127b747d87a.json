{"sha": "b6864f4ee87fb56299fc82e1e0ced127b747d87a", "node_id": "C_kwDOANBUbNoAKGI2ODY0ZjRlZTg3ZmI1NjI5OWZjODJlMWUwY2VkMTI3Yjc0N2Q4N2E", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-23T12:05:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-24T06:47:23Z"}, "message": "Speedup path discovery in predicate::use_cannot_happen\n\nThe following reverts a hunk from r8-5789-g11ef0b22d68cd1 that\nmade compute_control_dep_chain start from function entry rather\nthan the immediate dominator of the source block of the edge with\nthe undefined value on the PHI node.  Reverting at that point\ndoes not reveal any testsuite FAIL, in particular the added\ntestcase still passes.  The following adjusts this to the other\nfunction that computes predicates that hold on the PHI incoming\nedges with undefined values, predicate::init_from_phi_def, which\nstarts at the immediate dominator of the PHI.  That's much less\nlikely to run into the CFG walking limit.\n\n\t* gimple-predicate-analysis.cc (predicate::use_cannot_happen):\n\tStart the compute_control_dep_chain walk from the immediate\n\tdominator of the PHI.", "tree": {"sha": "d48a187a5058d81a73ec4aa53301bfd213fff3fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d48a187a5058d81a73ec4aa53301bfd213fff3fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6864f4ee87fb56299fc82e1e0ced127b747d87a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6864f4ee87fb56299fc82e1e0ced127b747d87a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6864f4ee87fb56299fc82e1e0ced127b747d87a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6864f4ee87fb56299fc82e1e0ced127b747d87a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82d46ad79e79394f374bc0ddb7591d166b0b61eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d46ad79e79394f374bc0ddb7591d166b0b61eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d46ad79e79394f374bc0ddb7591d166b0b61eb"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "ea81daacd4f6ad78b20b59a98c6c63c2c4d7a52e", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6864f4ee87fb56299fc82e1e0ced127b747d87a/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6864f4ee87fb56299fc82e1e0ced127b747d87a/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=b6864f4ee87fb56299fc82e1e0ced127b747d87a", "patch": "@@ -1293,6 +1293,12 @@ predicate::use_cannot_happen (gphi *phi, unsigned opnds)\n       use_guard = &phi_use_guard_intersection;\n     }\n \n+  basic_block phi_bb = gimple_bb (phi);\n+  /* Find the closest dominating bb to be the control dependence root.  */\n+  basic_block cd_root = get_immediate_dominator (CDI_DOMINATORS, phi_bb);\n+  if (!cd_root)\n+    return false;\n+\n   /* Look for the control dependencies of all the interesting operands\n      and build guard predicates describing them.  */\n   unsigned n = gimple_phi_num_args (phi);\n@@ -1308,7 +1314,7 @@ predicate::use_cannot_happen (gphi *phi, unsigned opnds)\n       unsigned num_calls = 0;\n \n       /* Build the control dependency chain for the PHI argument...  */\n-      if (!compute_control_dep_chain (ENTRY_BLOCK_PTR_FOR_FN (cfun),\n+      if (!compute_control_dep_chain (cd_root,\n \t\t\t\t      e->src, dep_chains, &num_chains,\n \t\t\t\t      cur_chain, &num_calls))\n \t{"}]}