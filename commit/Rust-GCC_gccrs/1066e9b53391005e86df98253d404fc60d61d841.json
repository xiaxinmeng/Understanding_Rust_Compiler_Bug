{"sha": "1066e9b53391005e86df98253d404fc60d61d841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2NmU5YjUzMzkxMDA1ZTg2ZGY5ODI1M2Q0MDRmYzYwZDYxZDg0MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-04T22:17:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-04T22:17:05Z"}, "message": "re PR c/69669 (ICE with enum __attribute__((mode(QI))))\n\n\tPR c/69669\n\t* c-decl.c (finish_enum): When honoring mode attribute,\n\tmake sure to use proper TYPE_MIN_VALUE and TYPE_MAX_VALUE.\n\n\t* c-c++-common/pr69669.c: New test.\n\nFrom-SVN: r233154", "tree": {"sha": "0c6d6e6c7c4474708b293d53101ea2650fe22948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c6d6e6c7c4474708b293d53101ea2650fe22948"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1066e9b53391005e86df98253d404fc60d61d841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1066e9b53391005e86df98253d404fc60d61d841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1066e9b53391005e86df98253d404fc60d61d841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1066e9b53391005e86df98253d404fc60d61d841/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25f738f21021b3af025800f4481d402570d603ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f738f21021b3af025800f4481d402570d603ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25f738f21021b3af025800f4481d402570d603ef"}], "stats": {"total": 52, "additions": 40, "deletions": 12}, "files": [{"sha": "931e51d03d86de3fc089319925ce9da5c1fe44f2", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=1066e9b53391005e86df98253d404fc60d61d841", "patch": "@@ -1,3 +1,9 @@\n+2016-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/69669\n+\t* c-decl.c (finish_enum): When honoring mode attribute,\n+\tmake sure to use proper TYPE_MIN_VALUE and TYPE_MAX_VALUE.\n+\n 2016-01-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/69518"}, {"sha": "5f6f3ee2ad7d47824e3acbf52cb198a50a0320d4", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=1066e9b53391005e86df98253d404fc60d61d841", "patch": "@@ -8037,7 +8037,24 @@ finish_enum (tree enumtype, tree values, tree attributes)\n   precision = MAX (tree_int_cst_min_precision (minnode, sign),\n \t\t   tree_int_cst_min_precision (maxnode, sign));\n \n-  if (TYPE_PACKED (enumtype) || precision > TYPE_PRECISION (integer_type_node))\n+  /* If the precision of the type was specified with an attribute and it\n+     was too small, give an error.  Otherwise, use it.  */\n+  if (TYPE_PRECISION (enumtype) && lookup_attribute (\"mode\", attributes))\n+    {\n+      if (precision > TYPE_PRECISION (enumtype))\n+\t{\n+\t  TYPE_PRECISION (enumtype) = 0;\n+\t  error (\"specified mode too small for enumeral values\");\n+\t}\n+      else\n+\tprecision = TYPE_PRECISION (enumtype);\n+    }\n+  else\n+    TYPE_PRECISION (enumtype) = 0;\n+\n+  if (TYPE_PACKED (enumtype)\n+      || precision > TYPE_PRECISION (integer_type_node)\n+      || TYPE_PRECISION (enumtype))\n     {\n       tem = c_common_type_for_size (precision, sign == UNSIGNED ? 1 : 0);\n       if (tem == NULL)\n@@ -8054,17 +8071,7 @@ finish_enum (tree enumtype, tree values, tree attributes)\n   TYPE_UNSIGNED (enumtype) = TYPE_UNSIGNED (tem);\n   TYPE_ALIGN (enumtype) = TYPE_ALIGN (tem);\n   TYPE_SIZE (enumtype) = 0;\n-\n-  /* If the precision of the type was specified with an attribute and it\n-     was too small, give an error.  Otherwise, use it.  */\n-  if (TYPE_PRECISION (enumtype)\n-      && lookup_attribute (\"mode\", attributes))\n-    {\n-      if (precision > TYPE_PRECISION (enumtype))\n-\terror (\"specified mode too small for enumeral values\");\n-    }\n-  else\n-    TYPE_PRECISION (enumtype) = TYPE_PRECISION (tem);\n+  TYPE_PRECISION (enumtype) = TYPE_PRECISION (tem);\n \n   layout_type (enumtype);\n "}, {"sha": "924b0fbefb568537c3de772ada19e0aa822f612e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1066e9b53391005e86df98253d404fc60d61d841", "patch": "@@ -1,3 +1,8 @@\n+2016-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/69669\n+\t* c-c++-common/pr69669.c: New test.\n+\n 2016-02-04  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/69667"}, {"sha": "9940afe8ffb8a67cccde8db1146852da01a69379", "filename": "gcc/testsuite/c-c++-common/pr69669.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr69669.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1066e9b53391005e86df98253d404fc60d61d841/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr69669.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr69669.c?ref=1066e9b53391005e86df98253d404fc60d61d841", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/69669 */\n+/* { dg-do compile } */\n+\n+enum __attribute__((mode(QI))) E { F = 1 };\n+\n+void\n+foo (enum E *x, int y)\n+{\n+  *x = (enum E) y;\n+}"}]}