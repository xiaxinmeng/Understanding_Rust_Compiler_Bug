{"sha": "0254f29ad9610a3e11ee89d56b4a21c48db147d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1NGYyOWFkOTYxMGEzZTExZWU4OWQ1NmI0YTIxYzQ4ZGIxNDdkOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-01T18:35:23Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-01T18:35:23Z"}, "message": "rs6000.md (neg<mode>2): Make this a parameterized name.\n\n@neg<mode>2\n\n\n\t* config/rs6000/rs6000.md (neg<mode>2): Make this a parameterized name.\n\t(allocate_stack): Use that name.  Simplify.\n\nFrom-SVN: r272894", "tree": {"sha": "b878956e39f89b954c1615824fbb70270816c800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b878956e39f89b954c1615824fbb70270816c800"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0254f29ad9610a3e11ee89d56b4a21c48db147d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0254f29ad9610a3e11ee89d56b4a21c48db147d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0254f29ad9610a3e11ee89d56b4a21c48db147d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0254f29ad9610a3e11ee89d56b4a21c48db147d8/comments", "author": null, "committer": null, "parents": [{"sha": "7b8795a138d0baa3b0505baee2ed05ae266977cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b8795a138d0baa3b0505baee2ed05ae266977cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b8795a138d0baa3b0505baee2ed05ae266977cd"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "c158a0880d929e74bc7cd78ac4c1422fb52d9083", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254f29ad9610a3e11ee89d56b4a21c48db147d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254f29ad9610a3e11ee89d56b4a21c48db147d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0254f29ad9610a3e11ee89d56b4a21c48db147d8", "patch": "@@ -1,11 +1,16 @@\n+2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (neg<mode>2): Make this a parameterized name.\n+\t(allocate_stack): Use that name.  Simplify.\n+\n 2019-07-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/90923\n \t* hash-map.h (hash_map::put): On insertion invoke element ctor.\n \t(hash_map::get_or_insert): Same.  Reformat comment.\n \t* hash-set.h (hash_set::add): On insertion invoke element ctor.\n \t* hash-map-tests.c (test_map_of_type_with_ctor_and_dtor): New.\n- \t* hash-set-tests.c (test_map_of_type_with_ctor_and_dtor): New.\n+\t* hash-set-tests.c (test_map_of_type_with_ctor_and_dtor): New.\n \t* hash-table.h (hash_table::operator=): Prevent copy assignment.\n \t (hash_table::hash_table (const hash_table&)): Use copy ctor\n \t instead of assignment to copy elements."}, {"sha": "233b896472ddcc167c878dabd5d85a96d7c97d41", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254f29ad9610a3e11ee89d56b4a21c48db147d8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254f29ad9610a3e11ee89d56b4a21c48db147d8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0254f29ad9610a3e11ee89d56b4a21c48db147d8", "patch": "@@ -2249,7 +2249,7 @@\n   [(set_attr \"type\" \"add\")])\n \n \n-(define_insn \"neg<mode>2\"\n+(define_insn \"@neg<mode>2\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n@@ -9816,10 +9816,7 @@\n     {\n       operands[1] = force_reg (Pmode, operands[1]);\n       neg_op0 = gen_reg_rtx (Pmode);\n-      if (TARGET_32BIT)\n-\temit_insn (gen_negsi2 (neg_op0, operands[1]));\n-      else\n-\temit_insn (gen_negdi2 (neg_op0, operands[1]));\n+      emit_insn (gen_neg2 (Pmode, neg_op0, operands[1]));\n     }\n   else\n     neg_op0 = GEN_INT (-INTVAL (operands[1]));"}]}