{"sha": "9cf18af8ee7223e45d74836ae5eb64931671b96b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNmMThhZjhlZTcyMjNlNDVkNzQ4MzZhZTVlYjY0OTMxNjcxYjk2Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-10-07T08:10:27Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-10-07T08:10:27Z"}, "message": "decl.c (gnat_to_gnu_entity): Move code dealing with volatileness to after code dealing with renaming.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Move code\n\tdealing with volatileness to after code dealing with renaming.\n\nFrom-SVN: r140924", "tree": {"sha": "baeca85921b26fda20dbf28f5e0942d2c7f5f446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baeca85921b26fda20dbf28f5e0942d2c7f5f446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cf18af8ee7223e45d74836ae5eb64931671b96b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf18af8ee7223e45d74836ae5eb64931671b96b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf18af8ee7223e45d74836ae5eb64931671b96b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf18af8ee7223e45d74836ae5eb64931671b96b/comments", "author": null, "committer": null, "parents": [{"sha": "4c6f9770100ef079f2ce2743b320f6705b03dd4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6f9770100ef079f2ce2743b320f6705b03dd4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6f9770100ef079f2ce2743b320f6705b03dd4f"}], "stats": {"total": 96, "additions": 64, "deletions": 32}, "files": [{"sha": "d384ff538b2a3603d5fff1cbcf7cfb55a8c11d7a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9cf18af8ee7223e45d74836ae5eb64931671b96b", "patch": "@@ -1,3 +1,8 @@\n+2008-10-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Move code\n+\tdealing with volatileness to after code dealing with renaming.\n+\n 2008-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Minor tweaks."}, {"sha": "cdee227760825eda9ee9b87a3b946534545924f0", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=9cf18af8ee7223e45d74836ae5eb64931671b96b", "patch": "@@ -828,22 +828,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t     \"PAD\", false, definition,\n \t\t\t\t     gnu_size ? true : false);\n \n-\t/* Make a volatile version of this object's type if we are to make\n-\t   the object volatile.  We also interpret 13.3(19) conservatively\n-\t   and disallow any optimizations for an object covered by it.  */\n-\tif ((Treat_As_Volatile (gnat_entity)\n-\t     || (Is_Exported (gnat_entity)\n-\t\t /* Exclude exported constants created by the compiler,\n-\t\t    which should boil down to static dispatch tables and\n-\t\t    make it possible to put them in read-only memory.  */\n-\t\t && (Comes_From_Source (gnat_entity) || !const_flag))\n-\t     || Is_Imported (gnat_entity)\n-\t     || Present (Address_Clause (gnat_entity)))\n-\t    && !TYPE_VOLATILE (gnu_type))\n-\t  gnu_type = build_qualified_type (gnu_type,\n-\t\t\t\t\t   (TYPE_QUALS (gnu_type)\n-\t\t\t\t\t    | TYPE_QUAL_VOLATILE));\n-\n \t/* If this is a renaming, avoid as much as possible to create a new\n \t   object.  However, in several cases, creating it is required.\n \t   This processing needs to be applied to the raw expression so\n@@ -991,22 +975,38 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      }\n \t  }\n \n-\t/* If this is an aliased object whose nominal subtype is unconstrained,\n-\t   the object is a record that contains both the template and\n-\t   the object.  If there is an initializer, it will have already\n-\t   been converted to the right type, but we need to create the\n-\t   template if there is no initializer.  */\n-\telse if (definition\n-\t\t && TREE_CODE (gnu_type) == RECORD_TYPE\n-\t\t && (TYPE_CONTAINS_TEMPLATE_P (gnu_type)\n-\t\t     /* Beware that padding might have been introduced\n-\t\t\tvia maybe_pad_type above.  */\n-\t\t     || (TYPE_IS_PADDING_P (gnu_type)\n-\t\t\t && TREE_CODE (TREE_TYPE (TYPE_FIELDS (gnu_type)))\n-\t\t\t    == RECORD_TYPE\n-\t\t\t && TYPE_CONTAINS_TEMPLATE_P\n-\t\t\t    (TREE_TYPE (TYPE_FIELDS (gnu_type)))))\n-\t\t && !gnu_expr)\n+\t/* Make a volatile version of this object's type if we are to make\n+\t   the object volatile.  We also interpret 13.3(19) conservatively\n+\t   and disallow any optimizations for an object covered by it.  */\n+\tif ((Treat_As_Volatile (gnat_entity)\n+\t     || (Is_Exported (gnat_entity)\n+\t\t /* Exclude exported constants created by the compiler,\n+\t\t    which should boil down to static dispatch tables and\n+\t\t    make it possible to put them in read-only memory.  */\n+\t\t && (Comes_From_Source (gnat_entity) || !const_flag))\n+\t     || Is_Imported (gnat_entity)\n+\t     || Present (Address_Clause (gnat_entity)))\n+\t    && !TYPE_VOLATILE (gnu_type))\n+\t  gnu_type = build_qualified_type (gnu_type,\n+\t\t\t\t\t   (TYPE_QUALS (gnu_type)\n+\t\t\t\t\t    | TYPE_QUAL_VOLATILE));\n+\n+\t/* If we are defining an aliased object whose nominal subtype is\n+\t   unconstrained, the object is a record that contains both the\n+\t   template and the object.  If there is an initializer, it will\n+\t   have already been converted to the right type, but we need to\n+\t   create the template if there is no initializer.  */\n+\tif (definition\n+\t    && !gnu_expr\n+\t    && TREE_CODE (gnu_type) == RECORD_TYPE\n+\t    && (TYPE_CONTAINS_TEMPLATE_P (gnu_type)\n+\t        /* Beware that padding might have been introduced\n+\t\t   via maybe_pad_type above.  */\n+\t\t|| (TYPE_IS_PADDING_P (gnu_type)\n+\t\t    && TREE_CODE (TREE_TYPE (TYPE_FIELDS (gnu_type)))\n+\t\t       == RECORD_TYPE\n+\t\t    && TYPE_CONTAINS_TEMPLATE_P\n+\t\t       (TREE_TYPE (TYPE_FIELDS (gnu_type))))))\n \t  {\n \t    tree template_field\n \t      = TYPE_IS_PADDING_P (gnu_type)"}, {"sha": "1c76fb09b99582c7d6d88328cb4c3cc572a66646", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9cf18af8ee7223e45d74836ae5eb64931671b96b", "patch": "@@ -1,3 +1,8 @@\n+2008-10-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/addr4.adb: New test.\n+\t* gnat.dg/addr5.adb: Likewise.\n+\n 2008-10-06  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.target/mips/mips.exp (dg-mips-options): Set mips_new_gp to"}, {"sha": "8bb3f2c97233df35cd5ae58d94f6084ad9ca9d91", "filename": "gcc/testsuite/gnat.dg/addr4.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Ftestsuite%2Fgnat.dg%2Faddr4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Ftestsuite%2Fgnat.dg%2Faddr4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddr4.adb?ref=9cf18af8ee7223e45d74836ae5eb64931671b96b", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+procedure Addr4 is\n+   function F return String is begin return \"\"; end F;\n+   S1 : String renames F;\n+   subtype ST is String (1 .. S1'Length);\n+   S2 : ST;\n+   for S2'Address use S1'Address;\n+begin\n+   null;\n+end;"}, {"sha": "e331dfdc09eeac60fd3fa951308f5784ad54a3d9", "filename": "gcc/testsuite/gnat.dg/addr5.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Ftestsuite%2Fgnat.dg%2Faddr5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf18af8ee7223e45d74836ae5eb64931671b96b/gcc%2Ftestsuite%2Fgnat.dg%2Faddr5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddr5.adb?ref=9cf18af8ee7223e45d74836ae5eb64931671b96b", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+procedure Addr5 (Len : Integer) is\n+  S : aliased String (1 .. Len) := (others => ' ');\n+  C : Character;\n+  for C'Address use S'Address;\n+begin\n+  null;\n+end;"}]}