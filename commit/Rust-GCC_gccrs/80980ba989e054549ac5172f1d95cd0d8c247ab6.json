{"sha": "80980ba989e054549ac5172f1d95cd0d8c247ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA5ODBiYTk4OWUwNTQ1NDlhYzUxNzJmMWQ5NWNkMGQ4YzI0N2FiNg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-05-21T01:56:04Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-05-21T01:56:04Z"}, "message": "re PR libfortran/24459 ([4.1 Only] gfortran namelist problem)\n\n2006-05-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/24459\n\t* gfortran.dg/namelist_24.f90: New test.\n\t* gfortran.dg/namelist_12.f: Fix typo in comment.\n\nFrom-SVN: r113948", "tree": {"sha": "06d640962953017db240b1b3a130e56c1008951f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06d640962953017db240b1b3a130e56c1008951f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80980ba989e054549ac5172f1d95cd0d8c247ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80980ba989e054549ac5172f1d95cd0d8c247ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80980ba989e054549ac5172f1d95cd0d8c247ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80980ba989e054549ac5172f1d95cd0d8c247ab6/comments", "author": null, "committer": null, "parents": [{"sha": "39431b5516db609485f0b7b74a44e807203cfc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39431b5516db609485f0b7b74a44e807203cfc6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39431b5516db609485f0b7b74a44e807203cfc6c"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "ea6e5a54f74e692ee5e269ca66ea47a6e93897c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80980ba989e054549ac5172f1d95cd0d8c247ab6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80980ba989e054549ac5172f1d95cd0d8c247ab6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80980ba989e054549ac5172f1d95cd0d8c247ab6", "patch": "@@ -1,3 +1,9 @@\n+2006-05-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/24459\n+\t* gfortran.dg/namelist_24.f90: New test.\n+\t* gfortran.dg/namelist_12.f: Fix typo in comment.\n+\n 2006-05-20  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/25776"}, {"sha": "69fe3d8ac430368ec3910b9912b9641baeb4a614", "filename": "gcc/testsuite/gfortran.dg/namelist_12.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80980ba989e054549ac5172f1d95cd0d8c247ab6/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80980ba989e054549ac5172f1d95cd0d8c247ab6/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f?ref=80980ba989e054549ac5172f1d95cd0d8c247ab6", "patch": "@@ -1,7 +1,7 @@\n c{ dg-do run }\n c This program repeats many of the same tests as test_nml_1 but for integer\n c instead of real. It also tests repeat nulls, comma delimited character read,\n-c a triplet qualifier, a range with and assumed start, a quote delimited string,\n+c a triplet qualifier, a range with an assumed start, a quote delimited string,\n c a qualifier with an assumed end and a fully explicit range.  It also tests\n c that integers and characters are successfully read back by namelist.\n c Provided by Paul Thomas - pault@gcc.gnu.org"}, {"sha": "4e60269c1da289dfcb29746227eb517311ddc490", "filename": "gcc/testsuite/gfortran.dg/namelist_24.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80980ba989e054549ac5172f1d95cd0d8c247ab6/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80980ba989e054549ac5172f1d95cd0d8c247ab6/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_24.f90?ref=80980ba989e054549ac5172f1d95cd0d8c247ab6", "patch": "@@ -0,0 +1,42 @@\n+!{ dg-do run }\n+!{ dg-options -std=gnu }\n+! Tests namelist read when more data is provided then specified by \n+! array qualifier in list.\n+! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>.\n+      program pr24459\n+      implicit none\n+      integer nd, ier, i, j\n+      parameter ( nd = 5 )\n+      character*(8) names(nd,nd)\n+      character*(8) names2(nd,nd)\n+      character*(8) names3(nd,nd)\n+      namelist / mynml /  names, names2, names3\n+      open(unit=20,status='scratch')\n+      write (20, '(a)') \"&MYNML\"\n+      write (20, '(a)') \"NAMES = 25*'0'\"\n+      write (20, '(a)') \"NAMES2 = 25*'0'\"\n+      write (20, '(a)') \"NAMES3 = 25*'0'\"\n+      write (20, '(a)') \"NAMES(2,2) = 'frogger'\"\n+      write (20, '(a)') \"NAMES(1,1) = 'E123' 'E456' 'D789' 'P135' 'P246'\"\n+      write (20, '(a)') \"NAMES2(1:5:2,2) = 'abcde' 'fghij' 'klmno'\"\n+      write (20, '(a)') \"NAMES3 = 'E123' 'E456' 'D789' 'P135' 'P246' '0' 'frogger'\"\n+      write (20, '(a)') \"/\"\n+      rewind(20)\n+      read(20,nml=mynml, iostat=ier)\n+      if (ier.ne.0) call abort()\n+      if (any(names(:,3:5).ne.\"0\")) call abort()\n+      if (names(2,2).ne.\"frogger\") call abort()\n+      if (names(1,1).ne.\"E123\") call abort()\n+      if (names(2,1).ne.\"E456\") call abort()\n+      if (names(3,1).ne.\"D789\") call abort()\n+      if (names(4,1).ne.\"P135\") call abort()\n+      if (names(5,1).ne.\"P246\") call abort()\n+      if (any(names2(:,1).ne.\"0\")) call abort()\n+      if (any(names2(:,3:5).ne.\"0\")) call abort()\n+      if (names2(1,2).ne.\"abcde\") call abort()\n+      if (names2(2,2).ne.\"0\") call abort()\n+      if (names2(3,2).ne.\"fghij\") call abort()\n+      if (names2(4,2).ne.\"0\") call abort()\n+      if (names2(5,2).ne.\"klmno\") call abort()\n+      if (any(names3.ne.names)) call abort()\n+      end"}]}