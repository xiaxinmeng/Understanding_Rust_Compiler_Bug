{"sha": "fef3106c7b8594f390ab8760328c8209cdf84384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVmMzEwNmM3Yjg1OTRmMzkwYWI4NzYwMzI4YzgyMDljZGY4NDM4NA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-05-31T21:18:21Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-05-31T21:18:21Z"}, "message": "Makefile.in (c-opts.o, [...]): Update dependencies.\n\n\t* Makefile.in (c-opts.o, c-options.h): Update dependencies.\n\t* c-opts.c: Include c-options.h and c-options.c.\n\t(CL_C_ONLY, CL_OBJC_ONLY, CL_CXX_ONLY, CL_OBJCXX_ONLY):\n\tRename CL_C, CL_OBJC, CL_CXX, CL_OBJCXX.\n\t(CL_ARG, CL_ALL, COMMAND_LINE_OPTIONS, struct cl_option,\n\tOPT, opt_comp): Remove.\n\t(missing_arg, c_common_init_options, c_common_decode_option,\n\twrite_langs): Update for macro redefinitions and enumeration\n\tname changes.\n\t* c.opt, opts.sh: New files.\n\t* doc/passes.texi: Update.\n\nFrom-SVN: r67278", "tree": {"sha": "4efb771182902702bc32fd8942e4572221f9a440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4efb771182902702bc32fd8942e4572221f9a440"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fef3106c7b8594f390ab8760328c8209cdf84384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fef3106c7b8594f390ab8760328c8209cdf84384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fef3106c7b8594f390ab8760328c8209cdf84384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fef3106c7b8594f390ab8760328c8209cdf84384/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f90145a64544ef262d1ff6a8ffb178471f688ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f90145a64544ef262d1ff6a8ffb178471f688ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f90145a64544ef262d1ff6a8ffb178471f688ea"}], "stats": {"total": 1057, "additions": 745, "deletions": 312}, "files": [{"sha": "2c2ce7b7f58c3cc2ef1ad8a44aeeb7dc443e53dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fef3106c7b8594f390ab8760328c8209cdf84384", "patch": "@@ -1,3 +1,17 @@\n+2003-05-31  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* Makefile.in (c-opts.o, c-options.h): Update dependencies.\n+\t* c-opts.c: Include c-options.h and c-options.c.\n+\t(CL_C_ONLY, CL_OBJC_ONLY, CL_CXX_ONLY, CL_OBJCXX_ONLY):\n+\tRename CL_C, CL_OBJC, CL_CXX, CL_OBJCXX.\n+\t(CL_ARG, CL_ALL, COMMAND_LINE_OPTIONS, struct cl_option,\n+\tOPT, opt_comp): Remove.\n+\t(missing_arg, c_common_init_options, c_common_decode_option,\n+\twrite_langs): Update for macro redefinitions and enumeration\n+\tname changes.\n+\t* c.opt, opts.sh: New files.\n+\t* doc/passes.texi: Update.\n+\n 2003-05-31  Andreas Jaeger  <aj@suse.de>\n \n \t* function.c (trampoline_address): Remove ALLOCATE_TRAMPOLINE"}, {"sha": "fb9c7886c2ca719150b6c3916c6a1038381eaec1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=fef3106c7b8594f390ab8760328c8209cdf84384", "patch": "@@ -1316,10 +1316,13 @@ c-pretty-print.o : c-pretty-print.c c-pretty-print.h pretty-print.h \\\n \n c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n         c-pragma.h flags.h toplev.h langhooks.h tree-inline.h diagnostic.h \\\n-\tintl.h debug.h $(C_COMMON_H)\n+\tintl.h debug.h $(C_COMMON_H) c-options.h c-options.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n+c-options.h c-options.c: c.opt $(srcdir)/opts.sh\n+\t$(SHELL) $(srcdir)/opts.sh c-options.c c-options.h $(srcdir)/c.opt\n+\n c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(C_COMMON_H) c-pragma.h flags.h toplev.h langhooks.h \\\n \toutput.h except.h real.h $(TM_P_H)"}, {"sha": "8cb0b83f21043ba60fbca3b540d17598ecebb5c6", "filename": "gcc/c-opts.c", "status": "modified", "additions": 48, "deletions": 311, "changes": 359, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=fef3106c7b8594f390ab8760328c8209cdf84384", "patch": "@@ -35,6 +35,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"cppdefault.h\"\n #include \"c-incpath.h\"\n #include \"debug.h\"\t\t/* For debug_hooks.  */\n+#include \"c-options.h\"\n \n #ifndef DOLLARS_IN_IDENTIFIERS\n # define DOLLARS_IN_IDENTIFIERS true\n@@ -118,259 +119,27 @@ static void finish_options PARAMS ((void));\n #define STDC_0_IN_SYSTEM_HEADERS 0\n #endif\n \n-#define CL_C_ONLY\t(1 << 0) /* Only C.  */\n-#define CL_OBJC_ONLY\t(1 << 1) /* Only ObjC.  */\n-#define CL_CXX_ONLY\t(1 << 2) /* Only C++.  */\n-#define CL_OBJCXX_ONLY\t(1 << 3) /* Only ObjC++.  */\n+#define CL_C\t\t(1 << 0) /* Only C.  */\n+#define CL_OBJC\t\t(1 << 1) /* Only ObjC.  */\n+#define CL_CXX\t\t(1 << 2) /* Only C++.  */\n+#define CL_OBJCXX\t(1 << 3) /* Only ObjC++.  */\n #define CL_JOINED\t(1 << 4) /* If takes joined argument.  */\n #define CL_SEPARATE\t(1 << 5) /* If takes a separate argument.  */\n \n-#define CL_ARG\t\t(CL_JOINED | CL_SEPARATE)\n-#define CL_C\t\t(CL_C_ONLY | CL_OBJC_ONLY)\n-#define CL_OBJC\t\t(CL_OBJC_ONLY | CL_OBJCXX_ONLY)\n-#define CL_CXX\t\t(CL_CXX_ONLY | CL_OBJCXX_ONLY)\n-#define CL_ALL\t\t(CL_C | CL_CXX)\n-\n-/* This is the list of all command line options, with the leading \"-\"\n-   removed.  It must be sorted in ASCII collating order.  All options\n-   beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n-   form; this form should not be listed.  The variable \"on\" is true if\n-   the positive form is given, otherwise it is false.  If you don't\n-   want to allow a \"no-\" form, your handler should reject \"on\" being\n-   false by returning zero.  See, for example, the handling of\n-   -ftabstop=.\n-\n-   If the user gives an option to a front end that doesn't support it,\n+#include \"c-options.c\"\n+\n+/* If the user gives an option to a front end that doesn't support it,\n    an error is output, mentioning which front ends the option is valid\n    for.  If you don't want this, you must accept it for all front\n    ends, and test for the front end in the option handler.  See, for\n-   example, the handling of -Wno-strict-prototypes for C++.\n-\n-   If you request an argument with CL_JOINED, CL_SEPARATE or their\n-   combination CL_ARG, it is stored in the variable \"arg\", which is\n-   guaranteed to be non-NULL and to not be an empty string.  It points\n-   to the argument either within the argv[] vector or within one of\n-   that vector's strings, and so the text is permanent and copies need\n-   not be made.  Be sure to add an error message in missing_arg() if\n-   the default is not appropriate.  */\n-\n-#define COMMAND_LINE_OPTIONS\t\t\t\t\t\t     \\\n-  OPT(\"-help\",                  CL_ALL,   OPT__help)\t\t\t     \\\n-  OPT(\"-output-pch=\",\t\tCL_ALL | CL_ARG, OPT__output_pch)\t     \\\n-  OPT(\"A\",                      CL_ALL | CL_ARG, OPT_A)\t\t\t     \\\n-  OPT(\"C\",                      CL_ALL,   OPT_C)\t\t\t     \\\n-  OPT(\"CC\",                     CL_ALL,   OPT_CC)\t\t\t     \\\n-  OPT(\"D\",                      CL_ALL | CL_ARG, OPT_D)\t\t\t     \\\n-  OPT(\"E\",\t\t\tCL_ALL,   OPT_E)\t\t\t     \\\n-  OPT(\"H\",                      CL_ALL,   OPT_H)\t\t\t     \\\n-  OPT(\"I\",                      CL_ALL | CL_ARG, OPT_I)\t\t\t     \\\n-  OPT(\"M\",                      CL_ALL,   OPT_M)\t\t\t     \\\n-  OPT(\"MD\",                     CL_ALL | CL_SEPARATE, OPT_MD)\t\t     \\\n-  OPT(\"MF\",                     CL_ALL | CL_ARG, OPT_MF)\t\t     \\\n-  OPT(\"MG\",                     CL_ALL,   OPT_MG)\t\t\t     \\\n-  OPT(\"MM\",                     CL_ALL,   OPT_MM)\t\t\t     \\\n-  OPT(\"MMD\",                    CL_ALL | CL_SEPARATE, OPT_MMD)\t\t     \\\n-  OPT(\"MP\",                     CL_ALL,   OPT_MP)\t\t\t     \\\n-  OPT(\"MQ\",                     CL_ALL | CL_ARG, OPT_MQ)\t\t     \\\n-  OPT(\"MT\",                     CL_ALL | CL_ARG, OPT_MT)\t\t     \\\n-  OPT(\"P\",                      CL_ALL,   OPT_P)\t\t\t     \\\n-  OPT(\"U\",                      CL_ALL | CL_ARG, OPT_U)\t\t\t     \\\n-  OPT(\"Wabi\",                   CL_CXX,   OPT_Wabi)                          \\\n-  OPT(\"Wall\",\t\t\tCL_ALL,   OPT_Wall)\t\t\t     \\\n-  OPT(\"Wbad-function-cast\",\tCL_C,     OPT_Wbad_function_cast)\t     \\\n-  OPT(\"Wcast-qual\",\t\tCL_ALL,   OPT_Wcast_qual)\t\t     \\\n-  OPT(\"Wchar-subscripts\",\tCL_ALL,   OPT_Wchar_subscripts)\t\t     \\\n-  OPT(\"Wcomment\",\t\tCL_ALL,   OPT_Wcomment)\t\t\t     \\\n-  OPT(\"Wcomments\",              CL_ALL,   OPT_Wcomments)\t\t     \\\n-  OPT(\"Wconversion\",\t\tCL_ALL,   OPT_Wconversion)\t\t     \\\n-  OPT(\"Wctor-dtor-privacy\",\tCL_CXX,   OPT_Wctor_dtor_privacy)\t     \\\n-  OPT(\"Wdeprecated\",\t\tCL_CXX,   OPT_Wdeprecated)\t\t     \\\n-  OPT(\"Wdiv-by-zero\",\t\tCL_C,     OPT_Wdiv_by_zero)\t\t     \\\n-  OPT(\"Weffc++\",\t\tCL_CXX,   OPT_Weffcxx)\t\t\t     \\\n-  OPT(\"Wendif-labels\",\t\tCL_ALL,   OPT_Wendif_labels)\t\t     \\\n-  OPT(\"Werror\",                 CL_ALL,   OPT_Werror)\t\t\t     \\\n-  OPT(\"Werror-implicit-function-declaration\",\t\t\t\t     \\\n-\t     \t\t\tCL_C,     OPT_Werror_implicit_function_decl) \\\n-  OPT(\"Wfloat-equal\",\t\tCL_ALL,   OPT_Wfloat_equal)\t\t     \\\n-  OPT(\"Wformat\",\t\tCL_ALL,   OPT_Wformat)\t\t\t     \\\n-  OPT(\"Wformat-extra-args\",\tCL_ALL,   OPT_Wformat_extra_args)\t     \\\n-  OPT(\"Wformat-nonliteral\",\tCL_ALL,   OPT_Wformat_nonliteral)\t     \\\n-  OPT(\"Wformat-security\",\tCL_ALL,   OPT_Wformat_security)\t\t     \\\n-  OPT(\"Wformat-y2k\",\t\tCL_ALL,   OPT_Wformat_y2k)\t\t     \\\n-  OPT(\"Wformat-zero-length\",\tCL_C,     OPT_Wformat_zero_length)\t     \\\n-  OPT(\"Wformat=\",\t\tCL_ALL | CL_JOINED, OPT_Wformat_eq)\t     \\\n-  OPT(\"Wimplicit\",\t\tCL_ALL,   OPT_Wimplicit)\t\t     \\\n-  OPT(\"Wimplicit-function-declaration\",\tCL_C, OPT_Wimplicit_function_decl)   \\\n-  OPT(\"Wimplicit-int\",\t\tCL_C,\t  OPT_Wimplicit_int)\t\t     \\\n-  OPT(\"Wimport\",                CL_ALL,   OPT_Wimport)\t\t\t     \\\n-  OPT(\"Winvalid-offsetof\",      CL_CXX,   OPT_Winvalid_offsetof)             \\\n-  OPT(\"Winvalid-pch\",           CL_ALL,   OPT_Winvalid_pch)\t\t     \\\n-  OPT(\"Wlong-long\",\t\tCL_ALL,   OPT_Wlong_long)\t\t     \\\n-  OPT(\"Wmain\",\t\t\tCL_C,     OPT_Wmain)\t\t\t     \\\n-  OPT(\"Wmissing-braces\",\tCL_ALL,   OPT_Wmissing_braces)\t\t     \\\n-  OPT(\"Wmissing-declarations\",\tCL_C,     OPT_Wmissing_declarations)\t     \\\n-  OPT(\"Wmissing-format-attribute\",CL_ALL, OPT_Wmissing_format_attribute)     \\\n-  OPT(\"Wmissing-prototypes\",\tCL_C,     OPT_Wmissing_prototypes)\t     \\\n-  OPT(\"Wmultichar\",\t\tCL_ALL,   OPT_Wmultichar)\t\t     \\\n-  OPT(\"Wnested-externs\",\tCL_C,     OPT_Wnested_externs)\t\t     \\\n-  OPT(\"Wnon-template-friend\",\tCL_CXX,   OPT_Wnon_template_friend)\t     \\\n-  OPT(\"Wnon-virtual-dtor\",\tCL_CXX,   OPT_Wnon_virtual_dtor)\t     \\\n-  OPT(\"Wnonnull\",\t\tCL_C,     OPT_Wnonnull)\t\t\t     \\\n-  OPT(\"Wold-style-cast\",\tCL_CXX,   OPT_Wold_style_cast)\t\t     \\\n-  OPT(\"Woverloaded-virtual\",\tCL_CXX,   OPT_Woverloaded_virtual)\t     \\\n-  OPT(\"Wparentheses\",\t\tCL_ALL,   OPT_Wparentheses)\t\t     \\\n-  OPT(\"Wpmf-conversions\",\tCL_CXX,   OPT_Wpmf_conversions)\t\t     \\\n-  OPT(\"Wpointer-arith\",\t\tCL_ALL,   OPT_Wpointer_arith)\t\t     \\\n-  OPT(\"Wprotocol\",\t\tCL_OBJC,  OPT_Wprotocol)\t\t     \\\n-  OPT(\"Wredundant-decls\",\tCL_ALL,   OPT_Wredundant_decls)\t\t     \\\n-  OPT(\"Wreorder\",\t\tCL_CXX,   OPT_Wreorder)\t\t\t     \\\n-  OPT(\"Wreturn-type\",\t\tCL_ALL,   OPT_Wreturn_type)\t\t     \\\n-  OPT(\"Wselector\",\t\tCL_OBJC,  OPT_Wselector)\t\t     \\\n-  OPT(\"Wsequence-point\",\tCL_C,     OPT_Wsequence_point)\t\t     \\\n-  OPT(\"Wsign-compare\",\t\tCL_ALL,   OPT_Wsign_compare)\t\t     \\\n-  OPT(\"Wsign-promo\",\t\tCL_CXX,   OPT_Wsign_promo)\t\t     \\\n-  OPT(\"Wstrict-prototypes\",\tCL_C,     OPT_Wstrict_prototypes)\t     \\\n-  OPT(\"Wsynth\",\t\t\tCL_CXX,   OPT_Wsynth)\t\t\t     \\\n-  OPT(\"Wsystem-headers\",\tCL_ALL,   OPT_Wsystem_headers)\t\t     \\\n-  OPT(\"Wtraditional\",\t\tCL_C,     OPT_Wtraditional)\t\t     \\\n-  OPT(\"Wtrigraphs\",\t\tCL_ALL,   OPT_Wtrigraphs)\t\t     \\\n-  OPT(\"Wundeclared-selector\",\tCL_OBJC,  OPT_Wundeclared_selector)\t     \\\n-  OPT(\"Wundef\",\t\t\tCL_ALL,   OPT_Wundef)\t\t\t     \\\n-  OPT(\"Wunknown-pragmas\",\tCL_ALL,   OPT_Wunknown_pragmas)\t\t     \\\n-  OPT(\"Wunused-macros\",\t\tCL_ALL,   OPT_Wunused_macros)\t\t     \\\n-  OPT(\"Wwrite-strings\",\t\tCL_ALL,   OPT_Wwrite_strings)\t\t     \\\n-  OPT(\"ansi\",\t\t\tCL_ALL,   OPT_ansi)\t\t\t     \\\n-  OPT(\"d\",                      CL_ALL | CL_JOINED, OPT_d)\t\t     \\\n-  OPT(\"fabi-version=\",          CL_CXX | CL_JOINED, OPT_fabi_version)        \\\n-  OPT(\"faccess-control\",\tCL_CXX,   OPT_faccess_control)\t\t     \\\n-  OPT(\"fall-virtual\",\t\tCL_CXX,   OPT_fall_virtual)\t\t     \\\n-  OPT(\"falt-external-templates\",CL_CXX,   OPT_falt_external_templates)\t     \\\n-  OPT(\"fasm\",\t\t\tCL_ALL,   OPT_fasm)\t\t\t     \\\n-  OPT(\"fbuiltin\",\t\tCL_ALL,   OPT_fbuiltin)\t\t\t     \\\n-  OPT(\"fbuiltin-\",\t\tCL_ALL | CL_JOINED, OPT_fbuiltin_)\t     \\\n-  OPT(\"fcheck-new\",\t\tCL_CXX,   OPT_fcheck_new)\t\t     \\\n-  OPT(\"fcond-mismatch\",\t\tCL_ALL,   OPT_fcond_mismatch)\t\t     \\\n-  OPT(\"fconserve-space\",\tCL_CXX,   OPT_fconserve_space)\t\t     \\\n-  OPT(\"fconst-strings\",\t\tCL_CXX,   OPT_fconst_strings)\t\t     \\\n-  OPT(\"fconstant-string-class=\", CL_OBJC | CL_JOINED,\t\t\t     \\\n-\t\t\t\t\t  OPT_fconstant_string_class)\t     \\\n-  OPT(\"fdefault-inline\",\tCL_CXX,   OPT_fdefault_inline)\t\t     \\\n-  OPT(\"fdollars-in-identifiers\",CL_ALL,   OPT_fdollars_in_identifiers)\t     \\\n-  OPT(\"fdump-\",\t\t\tCL_ALL | CL_JOINED, OPT_fdump)\t\t     \\\n-  OPT(\"felide-constructors\",\tCL_CXX,   OPT_felide_constructors)\t     \\\n-  OPT(\"fenforce-eh-specs\",\tCL_CXX,   OPT_fenforce_eh_specs)\t     \\\n-  OPT(\"fenum-int-equiv\",\tCL_CXX,   OPT_fenum_int_equiv)\t\t     \\\n-  OPT(\"fexternal-templates\",\tCL_CXX,   OPT_fexternal_templates)\t     \\\n-  OPT(\"ffixed-form\",\t\tCL_C,\t  OPT_ffixed_form)\t\t     \\\n-  OPT(\"ffixed-line-length-\",\tCL_C | CL_JOINED, OPT_ffixed_line_length)    \\\n-  OPT(\"ffor-scope\",\t\tCL_CXX,   OPT_ffor_scope)\t\t     \\\n-  OPT(\"ffreestanding\",\t\tCL_C,     OPT_ffreestanding)\t\t     \\\n-  OPT(\"fgnu-keywords\",\t\tCL_CXX,   OPT_fgnu_keywords)\t\t     \\\n-  OPT(\"fgnu-runtime\",\t\tCL_OBJC,  OPT_fgnu_runtime)\t\t     \\\n-  OPT(\"fguiding-decls\",\t\tCL_CXX,   OPT_fguiding_decls)\t\t     \\\n-  OPT(\"fhandle-exceptions\",\tCL_CXX,   OPT_fhandle_exceptions)\t     \\\n-  OPT(\"fhonor-std\",\t\tCL_CXX,   OPT_fhonor_std)\t\t     \\\n-  OPT(\"fhosted\",\t\tCL_C,     OPT_fhosted)\t\t\t     \\\n-  OPT(\"fhuge-objects\",\t\tCL_CXX,   OPT_fhuge_objects)\t\t     \\\n-  OPT(\"fimplement-inlines\",\tCL_CXX,   OPT_fimplement_inlines)\t     \\\n-  OPT(\"fimplicit-inline-templates\", CL_CXX, OPT_fimplicit_inline_templates)  \\\n-  OPT(\"fimplicit-templates\",\tCL_CXX,   OPT_fimplicit_templates)\t     \\\n-  OPT(\"flabels-ok\",\t\tCL_CXX,   OPT_flabels_ok)\t\t     \\\n-  OPT(\"fms-extensions\",\t\tCL_ALL,   OPT_fms_extensions)\t\t     \\\n-  OPT(\"fname-mangling-version-\",CL_CXX | CL_JOINED, OPT_fname_mangling)\t     \\\n-  OPT(\"fnew-abi\",\t\tCL_CXX,   OPT_fnew_abi)\t\t\t     \\\n-  OPT(\"fnext-runtime\",\t\tCL_OBJC,  OPT_fnext_runtime)\t\t     \\\n-  OPT(\"fnonansi-builtins\",\tCL_CXX,   OPT_fnonansi_builtins)\t     \\\n-  OPT(\"fnonnull-objects\",\tCL_CXX,   OPT_fnonnull_objects)\t\t     \\\n-  OPT(\"foperator-names\",\tCL_CXX,   OPT_foperator_names)\t\t     \\\n-  OPT(\"foptional-diags\",\tCL_CXX,   OPT_foptional_diags)\t\t     \\\n-  OPT(\"fpch-deps\",\t\tCL_ALL,\t  OPT_fpch_deps)\t\t     \\\n-  OPT(\"fpermissive\",\t\tCL_CXX,   OPT_fpermissive)\t\t     \\\n-  OPT(\"fpreprocessed\",\t\tCL_ALL,   OPT_fpreprocessed)\t\t     \\\n-  OPT(\"frepo\",\t\t\tCL_CXX,   OPT_frepo)\t\t\t     \\\n-  OPT(\"frtti\",\t\t\tCL_CXX,   OPT_frtti)\t\t\t     \\\n-  OPT(\"fshort-double\",\t\tCL_ALL,   OPT_fshort_double)\t\t     \\\n-  OPT(\"fshort-enums\",\t\tCL_ALL,   OPT_fshort_enums)\t\t     \\\n-  OPT(\"fshort-wchar\",\t\tCL_ALL,   OPT_fshort_wchar)\t\t     \\\n-  OPT(\"fshow-column\",\t\tCL_ALL,   OPT_fshow_column)\t\t     \\\n-  OPT(\"fsigned-bitfields\",\tCL_ALL,   OPT_fsigned_bitfields)\t     \\\n-  OPT(\"fsigned-char\",\t\tCL_ALL,   OPT_fsigned_char)\t\t     \\\n-  OPT(\"fsquangle\",\t\tCL_CXX,   OPT_fsquangle)\t\t     \\\n-  OPT(\"fstats\",\t\t\tCL_CXX,   OPT_fstats)\t\t\t     \\\n-  OPT(\"fstrict-prototype\",\tCL_CXX,   OPT_fstrict_prototype)\t     \\\n-  OPT(\"ftabstop=\",              CL_ALL | CL_JOINED, OPT_ftabstop)\t     \\\n-  OPT(\"ftemplate-depth-\",\tCL_CXX | CL_JOINED, OPT_ftemplate_depth)     \\\n-  OPT(\"fthis-is-variable\",\tCL_CXX,   OPT_fthis_is_variable)\t     \\\n-  OPT(\"funsigned-bitfields\",\tCL_ALL,   OPT_funsigned_bitfields)\t     \\\n-  OPT(\"funsigned-char\",\t\tCL_ALL,   OPT_funsigned_char)\t\t     \\\n-  OPT(\"fuse-cxa-atexit\",\tCL_CXX,   OPT_fuse_cxa_atexit)\t\t     \\\n-  OPT(\"fvtable-gc\",\t\tCL_CXX,   OPT_fvtable_gc)\t\t     \\\n-  OPT(\"fvtable-thunks\",\t\tCL_CXX,   OPT_fvtable_thunks)\t\t     \\\n-  OPT(\"fweak\",\t\t\tCL_CXX,   OPT_fweak)\t\t\t     \\\n-  OPT(\"fxref\",\t\t\tCL_CXX,   OPT_fxref)\t\t\t     \\\n-  OPT(\"gen-decls\",\t\tCL_OBJC,  OPT_gen_decls)\t\t     \\\n-  OPT(\"idirafter\",              CL_ALL | CL_ARG, OPT_idirafter)              \\\n-  OPT(\"imacros\",                CL_ALL | CL_ARG, OPT_imacros)\t\t     \\\n-  OPT(\"include\",                CL_ALL | CL_ARG, OPT_include)\t\t     \\\n-  OPT(\"iprefix\",\t\tCL_ALL | CL_ARG, OPT_iprefix)\t\t     \\\n-  OPT(\"isysroot\",               CL_ALL | CL_ARG, OPT_isysroot)               \\\n-  OPT(\"isystem\",                CL_ALL | CL_ARG, OPT_isystem)                \\\n-  OPT(\"iwithprefix\",            CL_ALL | CL_ARG, OPT_iwithprefix)            \\\n-  OPT(\"iwithprefixbefore\",      CL_ALL | CL_ARG, OPT_iwithprefixbefore)\t     \\\n-  OPT(\"lang-asm\",\t\tCL_C_ONLY, OPT_lang_asm)\t\t     \\\n-  OPT(\"lang-objc\",              CL_ALL,   OPT_lang_objc)\t\t     \\\n-  OPT(\"nostdinc\",               CL_ALL,   OPT_nostdinc)\t\t\t     \\\n-  OPT(\"nostdinc++\",             CL_ALL,   OPT_nostdincplusplus)\t\t     \\\n-  OPT(\"o\",\t\t\tCL_ALL | CL_ARG, OPT_o)                      \\\n-  OPT(\"pedantic\",\t\tCL_ALL,   OPT_pedantic)\t\t\t     \\\n-  OPT(\"pedantic-errors\",\tCL_ALL,   OPT_pedantic_errors)\t\t     \\\n-  OPT(\"print-objc-runtime-info\", CL_OBJC, OPT_print_objc_runtime_info)\t     \\\n-  OPT(\"remap\",\t\t\tCL_ALL,   OPT_remap)                         \\\n-  OPT(\"std=c++98\",\t\tCL_CXX,\t  OPT_std_cplusplus98)\t\t     \\\n-  OPT(\"std=c89\",\t\tCL_C,     OPT_std_c89)\t\t\t     \\\n-  OPT(\"std=c99\",\t\tCL_C,     OPT_std_c99)\t\t\t     \\\n-  OPT(\"std=c9x\",\t\tCL_C,     OPT_std_c9x)\t\t\t     \\\n-  OPT(\"std=gnu++98\",\t\tCL_CXX,\t  OPT_std_gnuplusplus98)\t     \\\n-  OPT(\"std=gnu89\",\t\tCL_C,     OPT_std_gnu89)\t\t     \\\n-  OPT(\"std=gnu99\",\t\tCL_C,     OPT_std_gnu99)\t\t     \\\n-  OPT(\"std=gnu9x\",\t\tCL_C,     OPT_std_gnu9x)\t\t     \\\n-  OPT(\"std=iso9899:1990\",\tCL_C,     OPT_std_iso9899_1990)\t\t     \\\n-  OPT(\"std=iso9899:199409\",\tCL_C,     OPT_std_iso9899_199409)\t     \\\n-  OPT(\"std=iso9899:1999\",\tCL_C,     OPT_std_iso9899_1999)\t\t     \\\n-  OPT(\"std=iso9899:199x\",\tCL_C,     OPT_std_iso9899_199x)\t\t     \\\n-  OPT(\"traditional-cpp\",\tCL_ALL,   OPT_traditional_cpp)\t\t     \\\n-  OPT(\"trigraphs\",              CL_ALL,   OPT_trigraphs)\t\t     \\\n-  OPT(\"undef\",\t\t\tCL_ALL,   OPT_undef)\t\t\t     \\\n-  OPT(\"v\",                      CL_ALL,   OPT_v)\t\t\t     \\\n-  OPT(\"w\",                      CL_ALL,   OPT_w)\n-\n-#define OPT(text, flags, code) code,\n-enum opt_code\n-{\n-  COMMAND_LINE_OPTIONS\n-  N_OPTS\n-};\n-#undef OPT\n+   example, the handling of -fcond-mismatch.\n \n-struct cl_option\n-{\n-  const char *opt_text;\n-  unsigned char opt_len;\n-  unsigned char flags;\n-  ENUM_BITFIELD (opt_code) opt_code : 2 * CHAR_BIT;\n-};\n-\n-#define OPT(text, flags, code) { text, sizeof(text) - 1, flags, code },\n-#ifdef HOST_EBCDIC\n-static struct cl_option cl_options[] =\n-#else\n-static const struct cl_option cl_options[] =\n-#endif\n-{\n-  COMMAND_LINE_OPTIONS\n-};\n-#undef OPT\n-#undef COMMAND_LINE_OPTIONS\n+   If you requested a joined or separate argument, it is stored in the\n+   variable \"arg\", which is guaranteed to be non-NULL and to not be an\n+   empty string.  It points to the argument either within the argv[]\n+   vector or within one of that vector's strings, and so the text is\n+   permanent and copies need not be made.  Be sure to add an error\n+   message in missing_arg() if the default is not appropriate.  */\n \n /* Holds switches parsed by c_common_decode_option (), but whose\n    handling is deferred to c_common_post_options ().  */\n@@ -381,20 +150,6 @@ static struct deferred_opt\n   const char *arg;\n } *deferred_opts;\n \n-\n-#ifdef HOST_EBCDIC\n-static int opt_comp PARAMS ((const void *, const void *));\n-\n-/* Run-time sorting of options array.  */\n-static int\n-opt_comp (p1, p2)\n-     const void *p1, *p2;\n-{\n-  return strcmp (((struct cl_option *) p1)->opt_text,\n-\t\t ((struct cl_option *) p2)->opt_text);\n-}\n-#endif\n-\n /* Complain that switch OPT_INDEX expects an argument but none was\n    provided.  */\n static void\n@@ -403,25 +158,25 @@ missing_arg (opt_index)\n {\n   const char *opt_text = cl_options[opt_index].opt_text;\n \n-  switch (cl_options[opt_index].opt_code)\n+  switch (opt_index)\n     {\n-    case OPT__output_pch:\n-    case OPT_Wformat_eq:\n+    case OPT__output_pch_:\n+    case OPT_Wformat_:\n     case OPT_d:\n-    case OPT_fabi_version:\n+    case OPT_fabi_version_:\n     case OPT_fbuiltin_:\n-    case OPT_fdump:\n-    case OPT_fname_mangling:\n-    case OPT_ftabstop:\n-    case OPT_ftemplate_depth:\n+    case OPT_fdump_:\n+    case OPT_fname_mangling_version_:\n+    case OPT_ftabstop_:\n+    case OPT_ftemplate_depth_:\n     case OPT_iprefix:\n     case OPT_iwithprefix:\n     case OPT_iwithprefixbefore:\n     default:\n       error (\"missing argument to \\\"-%s\\\"\", opt_text);\n       break;\n \n-    case OPT_fconstant_string_class:\n+    case OPT_fconstant_string_class_:\n       error (\"no class name specified with \\\"-%s\\\"\", opt_text);\n       break;\n \n@@ -575,22 +330,6 @@ void\n c_common_init_options (lang)\n      enum c_language_kind lang;\n {\n-#ifdef HOST_EBCDIC\n-  /* For non-ASCII hosts, the cl_options array needs to be sorted at\n-     runtime.  */\n-  qsort (cl_options, N_OPTS, sizeof (struct cl_option), opt_comp);\n-#endif\n-#if ENABLE_CHECKING\n- {\n-  size_t i;\n-\n-  for (i = 1; i < N_OPTS; i++)\n-    if (strcmp (cl_options[i - 1].opt_text, cl_options[i].opt_text) >= 0)\n-      error (\"options array incorrectly sorted: %s is before %s\",\n-\t     cl_options[i - 1].opt_text, cl_options[i].opt_text);\n- }\n-#endif\n-\n   c_language = lang;\n   parse_in = cpp_create_reader (lang == clk_c ? CLK_GNUC89 : CLK_GNUCXX,\n \t\t\t\tident_hash);\n@@ -611,7 +350,7 @@ c_common_decode_option (argc, argv)\n      int argc;\n      char **argv;\n {\n-  static const int lang_flags[] = {CL_C_ONLY, CL_C, CL_CXX_ONLY, CL_CXX};\n+  static const int lang_flags[] = {CL_C, CL_OBJC, CL_CXX, CL_OBJCXX};\n   size_t opt_index;\n   const char *opt, *arg = 0;\n   char *dup = 0;\n@@ -663,7 +402,7 @@ c_common_decode_option (argc, argv)\n   option = &cl_options[opt_index];\n \n   /* Sort out any argument the switch takes.  */\n-  if (option->flags & CL_ARG)\n+  if (option->flags & (CL_JOINED | CL_SEPARATE))\n     {\n       if (option->flags & CL_JOINED)\n \t{\n@@ -700,7 +439,8 @@ c_common_decode_option (argc, argv)\n       goto done;\n     }\n \n-  switch (code = option->opt_code)\n+  code = opt_index;\n+  switch (code)\n     {\n     case N_OPTS: /* Shut GCC up.  */\n       break;\n@@ -709,7 +449,7 @@ c_common_decode_option (argc, argv)\n       print_help ();\n       break;\n \n-    case OPT__output_pch:\n+    case OPT__output_pch_:\n       pch_file = arg;\n       break;\n \n@@ -876,7 +616,7 @@ c_common_decode_option (argc, argv)\n       warn_div_by_zero = on;\n       break;\n \n-    case OPT_Weffcxx:\n+    case OPT_Weffc__:\n       warn_ecpp = on;\n       break;\n \n@@ -888,7 +628,7 @@ c_common_decode_option (argc, argv)\n       cpp_opts->warnings_are_errors = on;\n       break;\n \n-    case OPT_Werror_implicit_function_decl:\n+    case OPT_Werror_implicit_function_declaration:\n       if (!on)\n \tresult = 0;\n       else\n@@ -903,7 +643,7 @@ c_common_decode_option (argc, argv)\n       set_Wformat (on);\n       break;\n \n-    case OPT_Wformat_eq:\n+    case OPT_Wformat_:\n       set_Wformat (atoi (arg));\n       break;\n \n@@ -931,7 +671,7 @@ c_common_decode_option (argc, argv)\n       set_Wimplicit (on);\n       break;\n \n-    case OPT_Wimplicit_function_decl:\n+    case OPT_Wimplicit_function_declaration:\n       mesg_implicit_function_declaration = on;\n       break;\n \n@@ -1051,10 +791,7 @@ c_common_decode_option (argc, argv)\n       break;\n \n     case OPT_Wstrict_prototypes:\n-      if (!on && c_language == clk_cplusplus)\n-\twarning (\"-Wno-strict-prototypes is not supported in C++\");\n-      else\n-\twarn_strict_prototypes = on;\n+      warn_strict_prototypes = on;\n       break;\n \n     case OPT_Wsynth:\n@@ -1124,7 +861,7 @@ c_common_decode_option (argc, argv)\n     case OPT_fhonor_std:\n     case OPT_fhuge_objects:\n     case OPT_flabels_ok:\n-    case OPT_fname_mangling:\n+    case OPT_fname_mangling_version_:\n     case OPT_fnew_abi:\n     case OPT_fnonnull_objects:\n     case OPT_fsquangle:\n@@ -1135,7 +872,7 @@ c_common_decode_option (argc, argv)\n       warning (\"switch \\\"%s\\\" is no longer supported\", argv[0]);\n       break;\n \n-    case OPT_fabi_version:\n+    case OPT_fabi_version_:\n       flag_abi_version = read_integral_parameter (arg, argv[0], 1);\n       break;\n \n@@ -1170,7 +907,7 @@ c_common_decode_option (argc, argv)\n       cpp_opts->dollars_in_ident = on;\n       break;\n \n-    case OPT_fdump:\n+    case OPT_fdump_:\n       if (!on || !dump_switch_p (argv[0] + strlen (\"-f\")))\n \tresult = 0;\n       break;\n@@ -1228,7 +965,7 @@ c_common_decode_option (argc, argv)\n       flag_const_strings = on;\n       break;\n \n-    case OPT_fconstant_string_class:\n+    case OPT_fconstant_string_class_:\n       constant_string_class_name = arg;\n       break;\n \n@@ -1249,7 +986,7 @@ c_common_decode_option (argc, argv)\n       goto cp_deprecated;\n \n     case OPT_ffixed_form:\n-    case OPT_ffixed_line_length:\n+    case OPT_ffixed_line_length_:\n       /* Fortran front end options ignored when preprocessing only.  */\n       if (flag_preprocess_only)\n         result = -1;\n@@ -1334,7 +1071,7 @@ c_common_decode_option (argc, argv)\n       flag_detailed_statistics = on;\n       break;\n \n-    case OPT_ftabstop:\n+    case OPT_ftabstop_:\n       /* Don't recognize -fno-tabstop=.  */\n       if (!on)\n \treturn 0;\n@@ -1348,7 +1085,7 @@ c_common_decode_option (argc, argv)\n \t}\n       break;\n \n-    case OPT_ftemplate_depth:\n+    case OPT_ftemplate_depth_:\n       max_tinst_depth = read_integral_parameter (arg, argv[0], 0);\n       break;\n \n@@ -1410,7 +1147,7 @@ c_common_decode_option (argc, argv)\n       std_inc = false;\n       break;\n \n-    case OPT_nostdincplusplus:\n+    case OPT_nostdinc__:\n       std_cxx_inc = false;\n       break;\n \n@@ -1443,9 +1180,9 @@ c_common_decode_option (argc, argv)\n       cpp_opts->remap = 1;\n       break;\n \n-    case OPT_std_cplusplus98:\n-    case OPT_std_gnuplusplus98:\n-      set_std_cxx98 (code == OPT_std_cplusplus98 /* ISO */);\n+    case OPT_std_c__98:\n+    case OPT_std_gnu__98:\n+      set_std_cxx98 (code == OPT_std_c__98 /* ISO */);\n       break;\n \n     case OPT_std_c89:\n@@ -1964,15 +1701,15 @@ write_langs (buf, flags)\n      int flags;\n {\n   *buf = '\\0';\n-  if (flags & CL_C_ONLY)\n+  if (flags & CL_C)\n     strcat (buf, \"C\");\n-  if (flags & CL_OBJC_ONLY)\n+  if (flags & CL_OBJC)\n     {\n       if (*buf)\n \tstrcat (buf, \"/\");\n       strcat (buf, \"ObjC\");\n     }\n-  if (flags & CL_CXX_ONLY)\n+  if (flags & CL_CXX)\n     {\n       if (*buf)\n \tstrcat (buf, \"/\");"}, {"sha": "b39f87f4d47d7455c6bd50d777d65229dc873279", "filename": "gcc/c.opt", "status": "added", "additions": 600, "deletions": 0, "changes": 600, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=fef3106c7b8594f390ab8760328c8209cdf84384", "patch": "@@ -0,0 +1,600 @@\n+; Options for the C, ObjC, C++ and ObjC++ front ends.\n+; Copyright (C) 2003 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 2, or (at your option) any later\n+; version.\n+; \n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+; \n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING.  If not, write to the Free\n+; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+; 02111-1307, USA.\n+\n+\n+; This file is processed by the script opts.sh.  It is a database of\n+; command line options, with each record separated by a blank line,\n+; and each field appearing on its own line.  The first field is the\n+; command-line switch with the leading \"-\" removed.  All options\n+; beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n+; form; this form should not be listed.\n+\n+; The second field is a space-separated list of which parts of the\n+; compiler recognize the switch.  Current valid entries are \"C\",\n+; \"ObjC\", \"C++\" and \"ObjC++\".  If the switch takes an argument, then\n+; you should also specify \"Joined\" and/or \"Separate\" to indicate where\n+; the argument can appear.\n+\n+; Comments can appear on their own line anwhere in the file, preceded\n+; by a semicolon.  Whitespace is permitted before the semicolon.\n+\n+; For each switch XXX below, an enumeration constant is created by the\n+; script opts.sh spelt OPT_XXX, but with all non-alphanumeric\n+; characters replaced with an underscore.\n+\n+; Please try to keep this file in ASCII collating order.\n+\n+-help\n+C ObjC C++ ObjC++\n+\n+-output-pch=\n+C ObjC C++ ObjC++ Joined Separate\n+\n+A\n+C ObjC C++ ObjC++ Joined Separate\n+\n+C\n+C ObjC C++ ObjC++\n+\n+CC\n+C ObjC C++ ObjC++\n+\n+D\n+C ObjC C++ ObjC++ Joined Separate\n+\n+E\n+C ObjC C++ ObjC++\n+\n+H\n+C ObjC C++ ObjC++\n+\n+I\n+C ObjC C++ ObjC++ Joined Separate\n+\n+M\n+C ObjC C++ ObjC++\n+\n+MD\n+C ObjC C++ ObjC++ Separate\n+\n+MF\n+C ObjC C++ ObjC++ Joined Separate\n+\n+MG\n+C ObjC C++ ObjC++\n+\n+MM\n+C ObjC C++ ObjC++\n+\n+MMD\n+C ObjC C++ ObjC++ Separate\n+\n+MP\n+C ObjC C++ ObjC++\n+\n+MQ\n+C ObjC C++ ObjC++ Joined Separate\n+\n+MT\n+C ObjC C++ ObjC++ Joined Separate\n+\n+P\n+C ObjC C++ ObjC++\n+\n+U\n+C ObjC C++ ObjC++ Joined Separate\n+\n+Wabi\n+C++ ObjC++\n+\n+Wall\n+C ObjC C++ ObjC++\n+\n+Wbad-function-cast\n+C ObjC\n+\n+Wcast-qual\n+C ObjC C++ ObjC++\n+\n+Wchar-subscripts\n+C ObjC C++ ObjC++\n+\n+Wcomment\n+C ObjC C++ ObjC++\n+\n+Wcomments\n+C ObjC C++ ObjC++\n+\n+Wconversion\n+C ObjC C++ ObjC++\n+\n+Wctor-dtor-privacy\n+C++ ObjC++\n+\n+Wdeprecated\n+C++ ObjC++\n+\n+Wdiv-by-zero\n+C ObjC\n+\n+Weffc++\n+C++ ObjC++\n+\n+Wendif-labels\n+C ObjC C++ ObjC++\n+\n+Werror\n+C ObjC C++ ObjC++\n+\n+Werror-implicit-function-declaration\n+C ObjC\n+\n+Wfloat-equal\n+C ObjC C++ ObjC++\n+\n+Wformat\n+C ObjC C++ ObjC++\n+\n+Wformat-extra-args\n+C ObjC C++ ObjC++\n+\n+Wformat-nonliteral\n+C ObjC C++ ObjC++\n+\n+Wformat-security\n+C ObjC C++ ObjC++\n+\n+Wformat-y2k\n+C ObjC C++ ObjC++\n+\n+Wformat-zero-length\n+C ObjC\n+\n+Wformat=\n+C ObjC C++ ObjC++ Joined\n+\n+Wimplicit\n+C ObjC C++ ObjC++\n+\n+Wimplicit-function-declaration\n+C ObjC\n+\n+Wimplicit-int\n+C ObjC\n+\n+Wimport\n+C ObjC C++ ObjC++\n+\n+Winvalid-offsetof\n+C++ ObjC++\n+\n+Winvalid-pch\n+C ObjC C++ ObjC++\n+\n+Wlong-long\n+C ObjC C++ ObjC++\n+\n+Wmain\n+C ObjC\n+\n+Wmissing-braces\n+C ObjC C++ ObjC++\n+\n+Wmissing-declarations\n+C ObjC\n+\n+Wmissing-format-attribute\n+C ObjC C++ ObjC++\n+\n+Wmissing-prototypes\n+C ObjC\n+\n+Wmultichar\n+C ObjC C++ ObjC++\n+\n+Wnested-externs\n+C ObjC\n+\n+Wnon-template-friend\n+C++ ObjC++\n+\n+Wnon-virtual-dtor\n+C++ ObjC++\n+\n+Wnonnull\n+C ObjC\n+\n+Wold-style-cast\n+C++ ObjC++\n+\n+Woverloaded-virtual\n+C++ ObjC++\n+\n+Wparentheses\n+C ObjC C++ ObjC++\n+\n+Wpmf-conversions\n+C++ ObjC++\n+\n+Wpointer-arith\n+C ObjC C++ ObjC++\n+\n+Wprotocol\n+ObjC ObjC++\n+\n+Wredundant-decls\n+C ObjC C++ ObjC++\n+\n+Wreorder\n+C++ ObjC++\n+\n+Wreturn-type\n+C ObjC C++ ObjC++\n+\n+Wselector\n+ObjC ObjC++\n+\n+Wsequence-point\n+C ObjC\n+\n+Wsign-compare\n+C ObjC C++ ObjC++\n+\n+Wsign-promo\n+C++ ObjC++\n+\n+Wstrict-prototypes\n+C ObjC\n+\n+Wsynth\n+C++ ObjC++\n+\n+Wsystem-headers\n+C ObjC C++ ObjC++\n+\n+Wtraditional\n+C ObjC\n+\n+Wtrigraphs\n+C ObjC C++ ObjC++\n+\n+Wundeclared-selector\n+ObjC ObjC++\n+\n+Wundef\n+C ObjC C++ ObjC++\n+\n+Wunknown-pragmas\n+C ObjC C++ ObjC++\n+\n+Wunused-macros\n+C ObjC C++ ObjC++\n+\n+Wwrite-strings\n+C ObjC C++ ObjC++\n+\n+ansi\n+C ObjC C++ ObjC++\n+\n+d\n+C ObjC C++ ObjC++ Joined\n+\n+fabi-version=\n+C++ ObjC++ Joined\n+\n+faccess-control\n+C++ ObjC++\n+\n+fall-virtual\n+C++ ObjC++\n+\n+falt-external-templates\n+C++ ObjC++\n+\n+fasm\n+C ObjC C++ ObjC++\n+\n+fbuiltin\n+C ObjC C++ ObjC++\n+\n+fbuiltin-\n+C ObjC C++ ObjC++ Joined\n+\n+fcheck-new\n+C++ ObjC++\n+\n+fcond-mismatch\n+C ObjC C++ ObjC++\n+\n+fconserve-space\n+C++ ObjC++\n+\n+fconst-strings\n+C++ ObjC++\n+\n+fconstant-string-class=\n+ObjC ObjC++ Joined\n+\n+fdefault-inline\n+C++ ObjC++\n+\n+fdollars-in-identifiers\n+C ObjC C++ ObjC++\n+\n+fdump-\n+C ObjC C++ ObjC++ Joined\n+\n+felide-constructors\n+C++ ObjC++\n+\n+fenforce-eh-specs\n+C++ ObjC++\n+\n+fenum-int-equiv\n+C++ ObjC++\n+\n+fexternal-templates\n+C++ ObjC++\n+\n+ffixed-form\n+C ObjC\n+\n+ffixed-line-length-\n+C ObjC Joined\n+\n+ffor-scope\n+C++ ObjC++\n+\n+ffreestanding\n+C ObjC\n+\n+fgnu-keywords\n+C++ ObjC++\n+\n+fgnu-runtime\n+ObjC ObjC++\n+\n+fguiding-decls\n+C++ ObjC++\n+\n+fhandle-exceptions\n+C++ ObjC++\n+\n+fhonor-std\n+C++ ObjC++\n+\n+fhosted\n+C ObjC\n+\n+fhuge-objects\n+C++ ObjC++\n+\n+fimplement-inlines\n+C++ ObjC++\n+\n+fimplicit-inline-templates\n+C++ ObjC++\n+\n+fimplicit-templates\n+C++ ObjC++\n+\n+flabels-ok\n+C++ ObjC++\n+\n+fms-extensions\n+C ObjC C++ ObjC++\n+\n+fname-mangling-version-\n+C++ ObjC++ Joined\n+\n+fnew-abi\n+C++ ObjC++\n+\n+fnext-runtime\n+ObjC ObjC++\n+\n+fnonansi-builtins\n+C++ ObjC++\n+\n+fnonnull-objects\n+C++ ObjC++\n+\n+foperator-names\n+C++ ObjC++\n+\n+foptional-diags\n+C++ ObjC++\n+\n+fpch-deps\n+C ObjC C++ ObjC++\n+\n+fpermissive\n+C++ ObjC++\n+\n+fpreprocessed\n+C ObjC C++ ObjC++\n+\n+frepo\n+C++ ObjC++\n+\n+frtti\n+C++ ObjC++\n+\n+fshort-double\n+C ObjC C++ ObjC++\n+\n+fshort-enums\n+C ObjC C++ ObjC++\n+\n+fshort-wchar\n+C ObjC C++ ObjC++\n+\n+fshow-column\n+C ObjC C++ ObjC++\n+\n+fsigned-bitfields\n+C ObjC C++ ObjC++\n+\n+fsigned-char\n+C ObjC C++ ObjC++\n+\n+fsquangle\n+C++ ObjC++\n+\n+fstats\n+C++ ObjC++\n+\n+fstrict-prototype\n+C++ ObjC++\n+\n+ftabstop=\n+C ObjC C++ ObjC++ Joined\n+\n+ftemplate-depth-\n+C++ ObjC++ Joined\n+\n+fthis-is-variable\n+C++ ObjC++\n+\n+funsigned-bitfields\n+C ObjC C++ ObjC++\n+\n+funsigned-char\n+C ObjC C++ ObjC++\n+\n+fuse-cxa-atexit\n+C++ ObjC++\n+\n+fvtable-gc\n+C++ ObjC++\n+\n+fvtable-thunks\n+C++ ObjC++\n+\n+fweak\n+C++ ObjC++\n+\n+fxref\n+C++ ObjC++\n+\n+gen-decls\n+ObjC ObjC++\n+\n+idirafter\n+C ObjC C++ ObjC++ Joined Separate\n+\n+imacros\n+C ObjC C++ ObjC++ Joined Separate\n+\n+include\n+C ObjC C++ ObjC++ Joined Separate\n+\n+iprefix\n+C ObjC C++ ObjC++ Joined Separate\n+\n+isysroot\n+C ObjC C++ ObjC++ Joined Separate\n+\n+isystem\n+C ObjC C++ ObjC++ Joined Separate\n+\n+iwithprefix\n+C ObjC C++ ObjC++ Joined Separate\n+\n+iwithprefixbefore\n+C ObjC C++ ObjC++ Joined Separate\n+\n+lang-asm\n+C\n+\n+lang-objc\n+C ObjC C++ ObjC++\n+\n+nostdinc\n+C ObjC C++ ObjC++\n+\n+nostdinc++\n+C ObjC C++ ObjC++\n+\n+o\n+C ObjC C++ ObjC++ Joined Separate\n+\n+pedantic\n+C ObjC C++ ObjC++\n+\n+pedantic-errors\n+C ObjC C++ ObjC++\n+\n+print-objc-runtime-info\n+ObjC ObjC++\n+\n+remap\n+C ObjC C++ ObjC++\n+\n+std=c++98\n+C++ ObjC++\n+\n+std=c89\n+C ObjC\n+\n+std=c99\n+C ObjC\n+\n+std=c9x\n+C ObjC\n+\n+std=gnu++98\n+C++ ObjC++\n+\n+std=gnu89\n+C ObjC\n+\n+std=gnu99\n+C ObjC\n+\n+std=gnu9x\n+C ObjC\n+\n+std=iso9899:1990\n+C ObjC\n+\n+std=iso9899:199409\n+C ObjC\n+\n+std=iso9899:1999\n+C ObjC\n+\n+std=iso9899:199x\n+C ObjC\n+\n+traditional-cpp\n+C ObjC C++ ObjC++\n+\n+trigraphs\n+C ObjC C++ ObjC++\n+\n+undef\n+C ObjC C++ ObjC++\n+\n+v\n+C ObjC C++ ObjC++\n+\n+w\n+C ObjC C++ ObjC++"}, {"sha": "553eae9d921f5dd88e20d1f1f93b26df19932fb3", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=fef3106c7b8594f390ab8760328c8209cdf84384", "patch": "@@ -87,6 +87,7 @@ the other C-like languages: @file{c-common.c},\n @file{c-cppbuiltin.c},\n @file{c-common.h},\n @file{c-dump.h},\n+@file{c.opt},\n @file{c-incpath.h}\n and\n @file{c-pragma.h},"}, {"sha": "6fb839742dcb5701255ce355858ddc21d2cc1697", "filename": "gcc/opts.sh", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fopts.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef3106c7b8594f390ab8760328c8209cdf84384/gcc%2Fopts.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.sh?ref=fef3106c7b8594f390ab8760328c8209cdf84384", "patch": "@@ -0,0 +1,78 @@\n+#!/bin/sh\n+#\n+#  Copyright (C) 2003 Free Software Foundation, Inc.\n+#  Contributed by Neil Booth, May 2003.\n+#\n+# This program is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 2, or (at your option) any\n+# later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# Usage: opts.sh outfile.c outfile.h file1.opt [file2.opt, ...]\n+\n+AWK=/usr/bin/awk\n+SORT=/usr/bin/sort\n+\n+C_FILE=$1; shift\n+H_FILE=$1; shift\n+\n+cat \"$@\" | ${AWK} '\n+\tBEGIN{ RS=\"\"; FS=\"\\n\" }\n+\t# Ignore comments and blank lines\n+\t/^[ \\t]*(;|$)/\t{ next }\n+\t/^[^ \\t]/ \t{ gsub (\"\\n\", \"\\034\", $0); print }\n+' | LANG=C ${SORT} | ${AWK} '\n+    function switch_flags (langs,   flags)\n+    {\n+\tlangs = \":\" langs \":\"\n+\tgsub( \" \", \":\", langs)\n+\tflags = \"0\"\n+        if (langs ~ \":C:\") flags = flags \" | CL_C\"\n+        if (langs ~ \":ObjC:\") flags = flags \" | CL_OBJC\"\n+        if (langs ~ \":C\\\\+\\\\+:\") flags = flags \" | CL_CXX\"\n+        if (langs ~ \":ObjC\\\\+\\\\+:\") flags = flags \" | CL_OBJCXX\"\n+        if (langs ~ \":Joined\") flags = flags \" | CL_JOINED\"\n+        if (langs ~ \":Separate\") flags = flags \" | CL_SEPARATE\"\n+\tsub( \"^0 \\\\| \", \"\", flags )\n+\treturn flags\n+    }\n+\n+    BEGIN {\n+\tc_file = \"'${C_FILE}'\"\n+\th_file = \"'${H_FILE}'\"\n+\tFS = \"\\034\"\n+\tprint \"/* This file is auto-generated by opts.sh.  */\\n\" > h_file\n+\tprint \"/* This file is auto-generated by opts.sh.  */\\n\" > c_file\n+\tprint \"struct cl_option\\n{\"\t\t\t>> h_file\n+\tprint \"  const char *opt_text;\"\t\t\t>> h_file\n+\tprint \"  unsigned char opt_len;\"\t\t>> h_file\n+\tprint \"  unsigned char flags;\"\t\t\t>> h_file\n+\tprint \"};\\n\"\t\t\t\t\t>> h_file\n+\tprint \"enum opt_code\\n{\"\t\t\t>> h_file\n+\tprint \"static const struct cl_option cl_options[] =\\n{\" >> c_file\n+    }\n+\n+    {\n+\topt = $1\n+\tgsub ( \"[^A-Za-z0-9]\", \"_\", opt)\n+\ts = substr (\"                                  \", length (opt))\n+\tenum = \"OPT_\" opt\n+\tprintf (\"  %s,%s/* -%s */\\n\", enum, s, $1 )\t>> h_file\n+\tprintf (\"  { \\\"%s\\\", %u, %s },\\n\", $1, \\\n+\t    length ($1), switch_flags($2))\t\t>> c_file\n+    }\n+\n+    END {\n+\tprint \"  N_OPTS\\n};\"\t\t\t\t>> h_file\n+\tprint \"};\"\t\t\t\t\t>> c_file\n+    }\n+'"}]}