{"sha": "04eadb13265b69db0282da8803f13e357a129079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRlYWRiMTMyNjViNjlkYjAyODJkYTg4MDNmMTNlMzU3YTEyOTA3OQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-11T15:45:27Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-11T15:45:27Z"}, "message": "re PR regression/40886 (No loop counter reversal for simple loops anymore)\n\nFix PR40886.\n\n2010-02-11  Sebastian Pop  <sebastian.pop@amd.com>\n\t    Changpeng Fang  <changpeng.fang@amd.com>\n\n\tPR middle-end/40886\n\t* tree-ssa-loop-ivopts.c (determine_use_iv_cost_condition): Decrement\n\tthe cost of an IV candidate when the IV is used in a test against zero.\n\n\t* gcc.dg/tree-ssa/ivopts-3.c: New.\n\nCo-Authored-By: Changpeng Fang <changpeng.fang@amd.com>\n\nFrom-SVN: r156701", "tree": {"sha": "816517506e1c41ef333a3003809df242999218a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/816517506e1c41ef333a3003809df242999218a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04eadb13265b69db0282da8803f13e357a129079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04eadb13265b69db0282da8803f13e357a129079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04eadb13265b69db0282da8803f13e357a129079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04eadb13265b69db0282da8803f13e357a129079/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91753e21c33ee0f333e529487d67a1ff60b30655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91753e21c33ee0f333e529487d67a1ff60b30655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91753e21c33ee0f333e529487d67a1ff60b30655"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "52d1a1abc4a9fd39f47f20c6142655e56632389b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04eadb13265b69db0282da8803f13e357a129079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04eadb13265b69db0282da8803f13e357a129079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04eadb13265b69db0282da8803f13e357a129079", "patch": "@@ -1,3 +1,12 @@\n+2010-02-11  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Changpeng Fang  <changpeng.fang@amd.com>\n+\n+\tPR middle-end/40886\n+\t* tree-ssa-loop-ivopts.c (determine_use_iv_cost_condition): Decrement\n+\tthe cost of an IV candidate when the IV is used in a test against zero.\n+\n+\t* gcc.dg/tree-ssa/ivopts-3.c: New.\n+\n 2010-02-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/41664"}, {"sha": "7c4236b1cc735657ed208000b4f7806d56915afb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ivopts-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04eadb13265b69db0282da8803f13e357a129079/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04eadb13265b69db0282da8803f13e357a129079/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-3.c?ref=04eadb13265b69db0282da8803f13e357a129079", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ivopts-details\" } */\n+\n+void main (void)\n+{\n+  int i;\n+  for (i = 0; i < 10; i++)\n+    f2 ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"!= 0\" 4 \"ivopts\" } }  */\n+/* { dg-final { cleanup-tree-dump \"ivopts\" } }  */"}, {"sha": "74dadf77897935c971eb9646ee50b9c12476a956", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04eadb13265b69db0282da8803f13e357a129079/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04eadb13265b69db0282da8803f13e357a129079/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=04eadb13265b69db0282da8803f13e357a129079", "patch": "@@ -4089,6 +4089,7 @@ determine_use_iv_cost_condition (struct ivopts_data *data,\n   bitmap depends_on_elim = NULL, depends_on_express = NULL, depends_on;\n   comp_cost elim_cost, express_cost, cost;\n   bool ok;\n+  tree *control_var, *bound_cst;\n \n   /* Only consider real candidates.  */\n   if (!cand->iv)\n@@ -4110,9 +4111,21 @@ determine_use_iv_cost_condition (struct ivopts_data *data,\n \n   /* Try expressing the original giv.  If it is compared with an invariant,\n      note that we cannot get rid of it.  */\n-  ok = extract_cond_operands (data, use->stmt, NULL, NULL, NULL, &cmp_iv);\n+  ok = extract_cond_operands (data, use->stmt, &control_var, &bound_cst,\n+\t\t\t      NULL, &cmp_iv);\n   gcc_assert (ok);\n \n+  /* When the condition is a comparison of the candidate IV against\n+     zero, prefer this IV.\n+\n+     TODO: The constant that we're substracting from the cost should\n+     be target-dependent.  This information should be added to the\n+     target costs for each backend.  */\n+  if (integer_zerop (*bound_cst)\n+      && (operand_equal_p (*control_var, cand->var_after, 0)\n+\t  || operand_equal_p (*control_var, cand->var_before, 0)))\n+    elim_cost.cost -= 1;\n+\n   express_cost = get_computation_cost (data, use, cand, false,\n \t\t\t\t       &depends_on_express, NULL);\n   fd_ivopts_data = data;"}]}