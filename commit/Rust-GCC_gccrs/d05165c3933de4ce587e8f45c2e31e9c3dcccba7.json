{"sha": "d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1MTY1YzM5MzNkZTRjZTU4N2U4ZjQ1YzJlMzFlOWMzZGNjY2JhNw==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@cygnus.com", "date": "2000-03-17T00:45:06Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "2000-03-17T00:45:06Z"}, "message": "Color.java: New file.\n\n\t* java/awt/Color.java: New file.\n\t* java/awt/Graphics.java: New file.\n\t* java/awt/Image.java: New file.\n\t* java/awt/Paint.java: New file.\n\t* java/awt/PaintContext.java: New file.\n\t* java/awt/Transparency.java: New file.\n\t* java/util/Collection.java: New file.\n\t* java/util/Comparator.java: New file.\n\t* java/util/Iterator.java: New file.\n\t* java/util/List.java: New file.\n\t* java/util/ListIterator.java: New file.\n\t* Makefile.am: Added above new files.\n\t* Makefile.in: Rebuilt.\n\n\t* java/awt/Font.java (PLAIN): New field.\n\t(BOLD): New field.\n\t(ITALIC): New field.\n\t(ROMAN_BASELINE): New field.\n\t(CENTER_BASELINE): New field.\n\t(HANGING_BASELINE): New field.\n\t(name): New field.\n\t(style): New field.\n\t(size): New field.\n\t(pointSize): New field.\n\t(Font): Implemented constructor.\n\t(isPlain): Implemented method.\n\t(isBold): Implemented method.\n\t(isItalic): Implemented method.\n\t(getName): Implemented method.\n\t(getStyle): Implemented method.\n\t(getSize): Implemented method.\n\t(getSize2D): Implemented method.\n\t(decode): Stubbed.\n\t* java/awt/Frame.java (getFont): Stubbed.\n\t(postEvent): Stubbed.\n\t(remove): Stubbed.\n\t* java/awt/Menu.java (postEvent): Stubbed.\n\t* java/awt/MenuBar.java (getFont): Stubbed.\n\t(postEvent): Stubbed.\n\t* java/awt/Toolkit.java (getImage): Added abstract method.\n\nFrom-SVN: r32598", "tree": {"sha": "e13c2ee8b0bb648f9f9ab698a7a4d17c7b938323", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e13c2ee8b0bb648f9f9ab698a7a4d17c7b938323"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/comments", "author": null, "committer": null, "parents": [{"sha": "c9869b75ee626214ec24447f33215fb4b6c9f038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9869b75ee626214ec24447f33215fb4b6c9f038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9869b75ee626214ec24447f33215fb4b6c9f038"}], "stats": {"total": 543, "additions": 533, "deletions": 10}, "files": [{"sha": "e8d7172b59cd38a3944daf12d20a8e4eee05210a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -1,3 +1,46 @@\n+2000-03-16  Warren Levy  <warrenl@cygnus.com>\n+\n+\t* java/awt/Color.java: New file.\n+\t* java/awt/Graphics.java: New file.\n+\t* java/awt/Image.java: New file.\n+\t* java/awt/Paint.java: New file.\n+\t* java/awt/PaintContext.java: New file.\n+\t* java/awt/Transparency.java: New file.\n+\t* java/util/Collection.java: New file.\n+\t* java/util/Comparator.java: New file.\n+\t* java/util/Iterator.java: New file.\n+\t* java/util/List.java: New file.\n+\t* java/util/ListIterator.java: New file.\n+\t* Makefile.am: Added above new files.\n+\t* Makefile.in: Rebuilt.\n+\n+\t* java/awt/Font.java (PLAIN): New field.\n+\t(BOLD): New field.\n+\t(ITALIC): New field.\n+\t(ROMAN_BASELINE): New field.\n+\t(CENTER_BASELINE): New field.\n+\t(HANGING_BASELINE): New field.\n+\t(name): New field.\n+\t(style): New field.\n+\t(size): New field.\n+\t(pointSize): New field.\n+\t(Font): Implemented constructor.\n+\t(isPlain): Implemented method.\n+\t(isBold): Implemented method.\n+\t(isItalic): Implemented method.\n+\t(getName): Implemented method.\n+\t(getStyle): Implemented method.\n+\t(getSize): Implemented method.\n+\t(getSize2D): Implemented method.\n+\t(decode): Stubbed.\n+\t* java/awt/Frame.java (getFont): Stubbed.\n+\t(postEvent): Stubbed.\n+\t(remove): Stubbed.\n+\t* java/awt/Menu.java (postEvent): Stubbed.\n+\t* java/awt/MenuBar.java (getFont): Stubbed.\n+\t(postEvent): Stubbed.\n+\t* java/awt/Toolkit.java (getImage): Added abstract method.\n+\n 2000-03-15  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/io/natFileDescriptorWin32.cc (winerr): Now static."}, {"sha": "4d0a16aa79d3051685fc737d8eb4f5f749792aa2", "filename": "libjava/Makefile.am", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -469,24 +469,30 @@ awt_java_source_files = \\\n java/awt/AWTEvent.java \\\n java/awt/BorderLayout.java \\\n java/awt/Component.java \\\n+java/awt/Color.java \\\n java/awt/Container.java \\\n java/awt/Dimension.java \\\n java/awt/Event.java \\\n java/awt/Font.java \\\n java/awt/Frame.java \\\n+java/awt/Graphics.java \\\n+java/awt/Image.java \\\n java/awt/LayoutManager.java \\\n java/awt/LayoutManager2.java \\\n java/awt/Menu.java \\\n java/awt/MenuBar.java \\\n java/awt/MenuItem.java \\\n java/awt/MenuComponent.java \\\n java/awt/MenuContainer.java \\\n+java/awt/Paint.java \\\n+java/awt/PaintContext.java \\\n java/awt/Point.java \\\n java/awt/Rectangle.java \\\n java/awt/Shape.java \\\n java/awt/TextArea.java \\\n java/awt/TextComponent.java \\\n java/awt/Toolkit.java \\\n+java/awt/Transparency.java \\\n java/awt/Window.java \\\n java/awt/event/ActionEvent.java \\\n java/awt/event/ActionListener.java \\\n@@ -759,6 +765,8 @@ java/text/SimpleDateFormat.java\t\\\n java/text/StringCharacterIterator.java \\\n java/util/BitSet.java \\\n java/util/Calendar.java\t\\\n+java/util/Collection.java \\\n+java/util/Comparator.java \\\n java/util/ConcurrentModificationException.java \\\n java/util/Date.java \\\n java/util/Dictionary.java \\\n@@ -768,6 +776,9 @@ java/util/EventListener.java \\\n java/util/EventObject.java \\\n java/util/GregorianCalendar.java \\\n java/util/Hashtable.java \\\n+java/util/Iterator.java \\\n+java/util/List.java \\\n+java/util/ListIterator.java \\\n java/util/ListResourceBundle.java \\\n java/util/Locale.java \\\n java/util/MissingResourceException.java\t\\"}, {"sha": "a8bba0f9c1cc18d926e2c3123f8f47c6a837d4a2", "filename": "libjava/Makefile.in", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -286,24 +286,30 @@ awt_java_source_files = \\\n java/awt/AWTEvent.java \\\n java/awt/BorderLayout.java \\\n java/awt/Component.java \\\n+java/awt/Color.java \\\n java/awt/Container.java \\\n java/awt/Dimension.java \\\n java/awt/Event.java \\\n java/awt/Font.java \\\n java/awt/Frame.java \\\n+java/awt/Graphics.java \\\n+java/awt/Image.java \\\n java/awt/LayoutManager.java \\\n java/awt/LayoutManager2.java \\\n java/awt/Menu.java \\\n java/awt/MenuBar.java \\\n java/awt/MenuItem.java \\\n java/awt/MenuComponent.java \\\n java/awt/MenuContainer.java \\\n+java/awt/Paint.java \\\n+java/awt/PaintContext.java \\\n java/awt/Point.java \\\n java/awt/Rectangle.java \\\n java/awt/Shape.java \\\n java/awt/TextArea.java \\\n java/awt/TextComponent.java \\\n java/awt/Toolkit.java \\\n+java/awt/Transparency.java \\\n java/awt/Window.java \\\n java/awt/event/ActionEvent.java \\\n java/awt/event/ActionListener.java \\\n@@ -571,6 +577,8 @@ java/text/SimpleDateFormat.java\t\\\n java/text/StringCharacterIterator.java \\\n java/util/BitSet.java \\\n java/util/Calendar.java\t\\\n+java/util/Collection.java \\\n+java/util/Comparator.java \\\n java/util/ConcurrentModificationException.java \\\n java/util/Date.java \\\n java/util/Dictionary.java \\\n@@ -580,6 +588,9 @@ java/util/EventListener.java \\\n java/util/EventObject.java \\\n java/util/GregorianCalendar.java \\\n java/util/Hashtable.java \\\n+java/util/Iterator.java \\\n+java/util/List.java \\\n+java/util/ListIterator.java \\\n java/util/ListResourceBundle.java \\\n java/util/Locale.java \\\n java/util/MissingResourceException.java\t\\\n@@ -974,14 +985,16 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/text/ParseException.P .deps/java/text/ParsePosition.P \\\n .deps/java/text/RuleBasedCollator.P .deps/java/text/SimpleDateFormat.P \\\n .deps/java/text/StringCharacterIterator.P .deps/java/util/BitSet.P \\\n-.deps/java/util/Calendar.P \\\n+.deps/java/util/Calendar.P .deps/java/util/Collection.P \\\n+.deps/java/util/Comparator.P \\\n .deps/java/util/ConcurrentModificationException.P \\\n .deps/java/util/Date.P .deps/java/util/Dictionary.P \\\n .deps/java/util/EmptyStackException.P .deps/java/util/Enumeration.P \\\n .deps/java/util/EventListener.P .deps/java/util/EventObject.P \\\n .deps/java/util/GregorianCalendar.P .deps/java/util/Hashtable.P \\\n-.deps/java/util/ListResourceBundle.P .deps/java/util/Locale.P \\\n-.deps/java/util/MissingResourceException.P \\\n+.deps/java/util/Iterator.P .deps/java/util/List.P \\\n+.deps/java/util/ListIterator.P .deps/java/util/ListResourceBundle.P \\\n+.deps/java/util/Locale.P .deps/java/util/MissingResourceException.P \\\n .deps/java/util/NoSuchElementException.P .deps/java/util/Observable.P \\\n .deps/java/util/Observer.P .deps/java/util/Properties.P \\\n .deps/java/util/PropertyResourceBundle.P .deps/java/util/Random.P \\"}, {"sha": "0f0742c986836f43b408966b7c449484ee9de0af", "filename": "libjava/java/awt/Color.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FColor.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,64 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 15, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Stubbed; A very incomplete implementation.\n+ */\n+\n+public class Color extends Object implements Paint, Serializable\n+{\n+  public static final Color white =\tnew Color(0xff, 0xff, 0xff);\n+  public static final Color lightGray =\tnew Color(0xc0, 0xc0, 0xc0);\n+  public static final Color gray =\tnew Color(0x80, 0x80, 0x80);\n+  public static final Color darkGray =\tnew Color(0x40, 0x40, 0x40);\n+  public static final Color black =\tnew Color(0x00, 0x00, 0x00);\n+  public static final Color red =\tnew Color(0xff, 0x00, 0x00);\n+  public static final Color pink =\tnew Color(0xff, 0xaf, 0xaf);\n+  public static final Color orange =\tnew Color(0xff, 0xc8, 0x00);\n+  public static final Color yellow =\tnew Color(0xff, 0xff, 0x00);\n+  public static final Color green =\tnew Color(0x00, 0xff, 0x00);\n+  public static final Color magenta =\tnew Color(0xff, 0x00, 0xff);\n+  public static final Color cyan =\tnew Color(0x00, 0xff, 0xff);\n+  public static final Color blue =\tnew Color(0x00, 0x00, 0xff);\n+  \n+  // The internal sRGB representation.\n+  private float r;\n+  private float g;\n+  private float b;\n+  private int alpha = 255;\n+\n+  public Color(int rgb)\n+  {\n+    this(rgb, false);\n+  } \n+\n+  public Color(int rgba, boolean hasalpha)\n+  {\n+    // Alpha is bits 24-31, if hasalpha is true.\n+    // Red is bits 16-23; Green is bits 8-15; Blue is bits 0-7.\n+    b = rgb & 0xFF;\n+    g = (rgb >>= 8) & 0xFF;\n+    r = (rgb >>= 8) & 0xFF;\n+    if (hasalpha)\n+      alpha = (rgb >>= 8) & 0xFF;\n+  }\n+\n+  public int getRGB()\n+  {\n+    return alpha << 24 | r << 16 | g << 8 | b;\n+  }\n+}"}, {"sha": "edf5144df4771bb637023694dc9e0d3deb662126", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 77, "deletions": 2, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -8,8 +8,83 @@\n \n package java.awt;\n \n-/* A *very* incomplete placeholder. */\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Stubbed; A very incomplete implementation.\n+ */\n \n public class Font\n {\n+  // FIXME\n+\n+  public static final int PLAIN = 0;\n+  public static final int BOLD = 1;\n+  public static final int ITALIC = 2;\n+  public static final int ROMAN_BASELINE = 0;\n+  public static final int CENTER_BASELINE = 1;\n+  public static final int HANGING_BASELINE = 2;\n+  protected String name;\n+  protected int style;\n+  protected int size;\n+  protected float pointSize;\n+\n+  public Font(String name, int style, int size)\n+  {\n+    this.name = name;\n+    this.style = style & 0x3;\t// Only use lowest 2 bits.\n+    this.size = size;\n+    pointSize = size;\t\t// Assume some subclass can set a different val.\n+  }\n+\n+  public boolean isPlain()\n+  {\n+    if (style == PLAIN)\n+      return true;\n+\n+    return false;\n+  }\n+\n+  public boolean isBold()\n+  {\n+    if (style & BOLD == BOLD)\n+      return true;\n+\n+    return false;\n+  }\n+\n+  public boolean isItalic()\n+  {\n+    if (style & ITALIC == ITALIC)\n+      return true;\n+\n+    return false;\n+  }\n+  \n+  public String getName()\n+  {\n+    return name;\n+  }\n+\n+  public int getStyle()\n+  {\n+    return style;\n+  }\n+\n+  public int getSize()\n+  {\n+    return size;\n+  }\n+\n+  public float getSize2D()\n+  {\n+    return pointSize;\n+  }\n+\n+  public static Font decode(String str) { return null; } // FIXME\n }"}, {"sha": "93c7e76b9ee8c0c34497328260aeb0350f5e290f", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -52,4 +52,8 @@ public synchronized void addNotify ()\n       }\n     super.addNotify();\n   }\n+\n+  public Font getFont() { return null; } // FIXME\n+  public boolean postEvent(Event evt) { return null; } // FIXME\n+  public void remove(MenuComponent comp) { } // FIXME\n }"}, {"sha": "8b11f812113ed4043b7880622111eddba07deba1", "filename": "libjava/java/awt/Graphics.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 15, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Stubbed; A very incomplete placeholder.\n+ */\n+\n+public abstract class Graphics extends Object\n+{\n+  protected Graphics()\n+  {\n+    super();  // ???\n+    throw new Error (\"java.awt.Graphics: not implemented\");\n+  }\n+}"}, {"sha": "75ddd2e9a00c60cd8463abfe10577c1487019f57", "filename": "libjava/java/awt/Image.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImage.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 15, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Stubbed; A very incomplete placeholder.\n+ */\n+\n+public abstract class Image extends Object\n+{\n+  public Image()\n+  {\n+    super();  // ???\n+    throw new Error(\"java.awt.Image: not implemented\");\n+  }\n+}"}, {"sha": "dadc0c0536403ed053e73a7fc4511a21f54e6313", "filename": "libjava/java/awt/Menu.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenu.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -28,6 +28,6 @@ public synchronized MenuItem add (MenuItem item)\n   }\n \n   public Font getFont() { return null; } // FIXME\n-  //public boolean postEvent(Event evt);\n+  public boolean postEvent(Event evt) { return null; } // FIXME\n   public void remove(MenuComponent comp) { } // FIXME\n }"}, {"sha": "59538353344f463622fa382187dc46cb7a4d6974", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -41,4 +41,7 @@ public void remove (MenuComponent comp)\n \t  }\n       }\n   }\n+\n+  public Font getFont() { return null; } // FIXME\n+  public boolean postEvent(Event evt) { return null; } // FIXME\n }"}, {"sha": "0836402ef9143a89ad3ccac075e364a1ecd74d9c", "filename": "libjava/java/awt/Paint.java", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FPaint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FPaint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaint.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 15, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Stubbed.\n+ */\n+\n+public interface Paint extends Transparency\n+{\n+  // FIXME\n+  // public PaintContext createContext(ColorModel cm,\n+  //\t\t\t\t    Rectangle deviceBounds,\n+  //  \t\t\t\t    Rectangle2D userBounds,\n+  //\t\t\t\t    AffineTransform xform,\n+  //\t\t\t\t    RenderingHints hints);\n+}"}, {"sha": "0b4e6a7b0d7b2e2979b53d84b151bf9f255c4336", "filename": "libjava/java/awt/PaintContext.java", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FPaintContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FPaintContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaintContext.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,28 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Partially stubbed.\n+ */\n+\n+public interface PaintContext\n+{\n+  public void dispose();\n+  // FIXME\n+  // public ColorModel getColorModel();\n+  // public Raster getRaster(int x, int y, int w, int h);\n+}"}, {"sha": "8ba7ee26df440d32a1edf29b0f68fc65200ed441", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -23,6 +23,7 @@ public static synchronized Toolkit getDefaultToolkit()\n   }\n \n   protected abstract FramePeer createFrame(Frame target);\n+  public abstract Image getImage(URL url);\n \n   private static native void init();\n   // static { init(); }"}, {"sha": "c1190069839c45369b804a9f9542ddb84a70cbcb", "filename": "libjava/java/awt/Transparency.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FTransparency.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Fawt%2FTransparency.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTransparency.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 15, 2000.\n+ */\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification, as well\n+ * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n+ * Status:  Believed complete and correct.\n+ */\n+\n+public interface Transparency\n+{\n+  public static final int OPAQUE = 1;\n+  public static final int BITMASK = 2;\n+  public static final int TRANSLUCENT = 3;\n+\n+  public int getTransparency();\n+}"}, {"sha": "46da71b1dc756983263efc0c794ff3bd0c396891", "filename": "libjava/java/util/Collection.java", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FCollection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FCollection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCollection.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,37 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+/* Written using on-line Java Platform 1.2 API Specification.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+// JDK1.2\n+public interface Collection\n+{\n+  public int size();\n+  public boolean isEmpty();\n+  public boolean contains(Object o);\n+  public Iterator iterator();\n+  public Object[] toArray();\n+  public Object[] toArray(Object[] a);\n+  public boolean add(Object o);\n+  public boolean remove(Object o);\n+  public boolean containsAll(Collection c);\n+  public boolean addAll(Collection c);\n+  public boolean removeAll(Collection c);\n+  public boolean retainAll(Collection c);\n+  public void clear();\n+  public boolean equals(Object o);\n+  public int hashCode();\n+}"}, {"sha": "8f114ee79b03be304dcc26497e65f011bb3d83ac", "filename": "libjava/java/util/Comparator.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FComparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FComparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FComparator.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,24 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+/* Written using on-line Java Platform 1.2 API Specification.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+// JDK1.2\n+public interface Comparator\n+{\n+  public int compare(Object o1, Object o2);\n+  public boolean equals(Object obj);\n+}"}, {"sha": "f6942fefa190c25963be95b03dd655fbd9fce8ff", "filename": "libjava/java/util/Iterator.java", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FIterator.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,25 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+/* Written using on-line Java Platform 1.2 API Specification.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+// JDK1.2\n+public interface Iterator\n+{\n+  public boolean hasNext();\n+  public Object next();\n+  public void remove();\n+}"}, {"sha": "ea69217553e99ba514ebffda0ddab206e08550db", "filename": "libjava/java/util/List.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FList.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,47 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+/* Written using on-line Java Platform 1.2 API Specification.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+// JDK1.2\n+public interface List extends Collection\n+{\n+  public int size();\n+  public boolean isEmpty();\n+  public boolean contains(Object o);\n+  public Iterator iterator();\n+  public Object[] toArray();\n+  public Object[] toArray(Object[] a);\n+  public boolean add(Object o);\n+  public boolean remove(Object o);\n+  public boolean containsAll(Collection c);\n+  public boolean addAll(Collection c);\n+  public boolean addAll(int index, Collection c);\n+  public boolean removeAll(Collection c);\n+  public boolean retainAll(Collection c);\n+  public void clear();\n+  public boolean equals(Object o);\n+  public int hashCode();\n+  public Object get(int index);\n+  public Object set(int index, Object element);\n+  public void add(int index, Object element);\n+  public Object remove(int index);\n+  public int indexOf(Object o);\n+  public int lastIndexOf(Object o);\n+  public ListIterator listIterator();\n+  public ListIterator listIterator(int index);\n+  public List subList(int fromIndex, int toIndex);\n+}"}, {"sha": "8250e2ab01a4508a1fd49413c2726e80adf816b7", "filename": "libjava/java/util/ListIterator.java", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FListIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05165c3933de4ce587e8f45c2e31e9c3dcccba7/libjava%2Fjava%2Futil%2FListIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FListIterator.java?ref=d05165c3933de4ce587e8f45c2e31e9c3dcccba7", "patch": "@@ -0,0 +1,31 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util;\n+\n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 16, 2000.\n+ */\n+/* Written using on-line Java Platform 1.2 API Specification.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+// JDK1.2\n+public interface ListIterator extends Iterator\n+{\n+  public boolean hasNext();\n+  public Object next();\n+  public boolean hasPrevious();\n+  public Object previous();\n+  public int nextIndex();\n+  public int previousIndex();\n+  public void remove();\n+  public void set(Object o);\n+  public void add(Object o);\n+}"}]}