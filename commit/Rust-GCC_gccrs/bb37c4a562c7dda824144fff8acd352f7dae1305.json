{"sha": "bb37c4a562c7dda824144fff8acd352f7dae1305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIzN2M0YTU2MmM3ZGRhODI0MTQ0ZmZmOGFjZDM1MmY3ZGFlMTMwNQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@redhat.com", "date": "2001-01-16T17:57:34Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2001-01-16T17:57:34Z"}, "message": "cvt.c (ocp_convert): Handle vector type conversion\n\n2001-01-16 Daniel Berlin <dberlin@redhat.com>\n\n\t* cvt.c (ocp_convert): Handle vector type conversion\n\t* typeck2.c (digest_init): Handle vector type initializations\n\nFrom-SVN: r39071", "tree": {"sha": "08e781385bd8b32d3c2729426f48f9357fb1c5f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08e781385bd8b32d3c2729426f48f9357fb1c5f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb37c4a562c7dda824144fff8acd352f7dae1305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb37c4a562c7dda824144fff8acd352f7dae1305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb37c4a562c7dda824144fff8acd352f7dae1305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb37c4a562c7dda824144fff8acd352f7dae1305/comments", "author": null, "committer": null, "parents": [{"sha": "2c87347376c1048bd3c22e6951db24f33ce051d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c87347376c1048bd3c22e6951db24f33ce051d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c87347376c1048bd3c22e6951db24f33ce051d4"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "e013065e3906081a14654037f6f3e3c0b362eea4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb37c4a562c7dda824144fff8acd352f7dae1305/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb37c4a562c7dda824144fff8acd352f7dae1305/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb37c4a562c7dda824144fff8acd352f7dae1305", "patch": "@@ -1,3 +1,8 @@\n+2001-01-16 Daniel Berlin <dberlin@redhat.com>\n+\n+        * cvt.c (ocp_convert): Handle vector type conversion\n+        * typeck2.c (digest_init): Handle vector type initializations\n+\t\t\n 2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n \n \t* g++spec.c:  Don't add libraries needlessly if -fsyntax-only"}, {"sha": "ff7d4bc4cea02940ce1011747918da2bceddfc44", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb37c4a562c7dda824144fff8acd352f7dae1305/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb37c4a562c7dda824144fff8acd352f7dae1305/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=bb37c4a562c7dda824144fff8acd352f7dae1305", "patch": "@@ -794,6 +794,8 @@ ocp_convert (type, expr, convtype, flags)\n   if (code == POINTER_TYPE || code == REFERENCE_TYPE\n       || TYPE_PTRMEMFUNC_P (type))\n     return fold (cp_convert_to_pointer (type, e, 0));\n+  if (code == VECTOR_TYPE)\n+    return fold (convert_to_vector (type, e));\n   if (code == REAL_TYPE || code == COMPLEX_TYPE)\n     {\n       if (IS_AGGR_TYPE (TREE_TYPE (e)))"}, {"sha": "a7e71e59ded159a1006ca974d350c09dd021511e", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb37c4a562c7dda824144fff8acd352f7dae1305/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb37c4a562c7dda824144fff8acd352f7dae1305/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=bb37c4a562c7dda824144fff8acd352f7dae1305", "patch": "@@ -545,7 +545,7 @@ digest_init (type, init, tail)\n \n   if (code == INTEGER_TYPE || code == REAL_TYPE || code == POINTER_TYPE\n       || code == ENUMERAL_TYPE || code == REFERENCE_TYPE\n-      || code == BOOLEAN_TYPE || code == COMPLEX_TYPE\n+      || code == BOOLEAN_TYPE || code == COMPLEX_TYPE || code == VECTOR_TYPE\n       || TYPE_PTRMEMFUNC_P (type))\n     {\n       if (raw_constructor)"}]}