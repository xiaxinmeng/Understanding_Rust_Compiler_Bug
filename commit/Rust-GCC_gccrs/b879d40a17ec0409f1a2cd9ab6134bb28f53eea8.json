{"sha": "b879d40a17ec0409f1a2cd9ab6134bb28f53eea8", "node_id": "C_kwDOANBUbNoAKGI4NzlkNDBhMTdlYzA0MDlmMWEyY2Q5YWI2MTM0YmIyOGY1M2VlYTg", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-11-04T08:05:45Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-11-10T06:31:22Z"}, "message": "Simplify (trunc)MAX/MIN((extend)a, (extend)b) to MAX/MIN(a,b)\n\na and b are same type as trunc type and has less precision than\nextend type.\n\ngcc/ChangeLog:\n\n\tPR target/102464\n\t* match.pd: Simplify (trunc)fmax/fmin((extend)a, (extend)b) to\n\tMAX/MIN(a,b)\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr102464-maxmin.c: New test.", "tree": {"sha": "3e6147d13fafee3f77e5642c32dc7583f63431b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e6147d13fafee3f77e5642c32dc7583f63431b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52fa771758635d9c53cddb9116e5a66fae592230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52fa771758635d9c53cddb9116e5a66fae592230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52fa771758635d9c53cddb9116e5a66fae592230"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "7826af1998a5b0a270837b5ca84b2fb110955dc8", "filename": "gcc/match.pd", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=b879d40a17ec0409f1a2cd9ab6134bb28f53eea8", "patch": "@@ -6243,6 +6243,17 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n        && direct_internal_fn_supported_p (as_internal_fn (tos),\n \t\t\t\t\t  type, OPTIMIZE_FOR_BOTH))\n     (tos @0 @1 @2))))\n+\n+(for maxmin (max min)\n+ (simplify\n+  (convert (maxmin (convert@2 @0) (convert @1)))\n+   (if (optimize\n+       && FLOAT_TYPE_P (type)\n+       && FLOAT_TYPE_P (TREE_TYPE (@2))\n+       && types_match (type, TREE_TYPE (@0))\n+       && types_match (type, TREE_TYPE (@1))\n+       && element_precision (type) < element_precision (TREE_TYPE (@2)))\n+    (maxmin @0 @1))))\n #endif\n \n (for froms (XFLOORL XCEILL XROUNDL XRINTL)"}, {"sha": "37867235a6cbad8b584e4f89399ea5d8f809324e", "filename": "gcc/testsuite/gcc.target/i386/pr102464-maxmin.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-maxmin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b879d40a17ec0409f1a2cd9ab6134bb28f53eea8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-maxmin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-maxmin.c?ref=b879d40a17ec0409f1a2cd9ab6134bb28f53eea8", "patch": "@@ -0,0 +1,44 @@\n+/* PR target/102464.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512fp16 -mavx512vl -ffast-math -ftree-vectorize -mtune=generic -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"vmaxph\" 3 } }  */\n+/* { dg-final { scan-assembler-times \"vminph\" 3 } }  */\n+/* { dg-final { scan-assembler-times \"vmaxsh\" 3 } }  */\n+/* { dg-final { scan-assembler-times \"vminsh\" 3 } }  */\n+/* { dg-final { scan-assembler-times \"vmaxps\" 2 } }  */\n+/* { dg-final { scan-assembler-times \"vminps\" 2 } }  */\n+/* { dg-final { scan-assembler-times \"vmaxss\" 2 } }  */\n+/* { dg-final { scan-assembler-times \"vminss\" 2 } }  */\n+/* { dg-final { scan-assembler-times \"vmaxpd\" 1 } }  */\n+/* { dg-final { scan-assembler-times \"vminpd\" 1 } }  */\n+/* { dg-final { scan-assembler-times \"vmaxsd\" 1 } }  */\n+/* { dg-final { scan-assembler-times \"vminsd\" 1 } }  */\n+\n+#include<math.h>\n+#define FOO(CODE,TYPE,SUFFIX)\t\t\t\t\t\t\\\n+  void\t\t\t\t\t\t\t\t\t\\\n+  foo_vect_##CODE##TYPE##SUFFIX (TYPE* __restrict a, TYPE* b, TYPE* c)\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    for (int i = 0; i != 8; i++)\t\t\t\t\t\\\n+      a[i] = CODE##SUFFIX (b[i], c[i]);\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+  TYPE\t\t\t\t\t\t\t\t\t\\\n+  foo_##CODE##TYPE##SUFFIX (TYPE b, TYPE c)\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    return CODE##l (b, c);\t\t\t\t\t\t\\\n+  }\n+\n+FOO (fmax, _Float16, f);\n+FOO (fmax, _Float16,);\n+FOO (fmax, _Float16, l);\n+FOO (fmin, _Float16, f);\n+FOO (fmin, _Float16,);\n+FOO (fmin, _Float16, l);\n+\n+FOO (fmax, float,);\n+FOO (fmax, float, l);\n+FOO (fmin, float,);\n+FOO (fmin, float, l);\n+\n+FOO (fmax, double, l);\n+FOO (fmin, double, l);"}]}