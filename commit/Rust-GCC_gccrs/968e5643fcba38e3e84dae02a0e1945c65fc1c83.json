{"sha": "968e5643fcba38e3e84dae02a0e1945c65fc1c83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY4ZTU2NDNmY2JhMzhlM2U4NGRhZTAyYTBlMTk0NWM2NWZjMWM4Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-01T20:30:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-01T20:30:57Z"}, "message": "(current_block):  Function deleted.\n\n(set_block):  New function.\n(poplevel): If using a previously created block,\ndon't insert it into the parent level.\n\nFrom-SVN: r2015", "tree": {"sha": "fc8b8e750ba61051398df5c9c7b328146bbbfa1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc8b8e750ba61051398df5c9c7b328146bbbfa1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/968e5643fcba38e3e84dae02a0e1945c65fc1c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968e5643fcba38e3e84dae02a0e1945c65fc1c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/968e5643fcba38e3e84dae02a0e1945c65fc1c83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968e5643fcba38e3e84dae02a0e1945c65fc1c83/comments", "author": null, "committer": null, "parents": [{"sha": "023b57e601bcd8932c2f3aa6bf9a0e22455bb747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023b57e601bcd8932c2f3aa6bf9a0e22455bb747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023b57e601bcd8932c2f3aa6bf9a0e22455bb747"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "936b8eacfb5c393e3ca5022f7af257f0f7c3fa5a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/968e5643fcba38e3e84dae02a0e1945c65fc1c83/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/968e5643fcba38e3e84dae02a0e1945c65fc1c83/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=968e5643fcba38e3e84dae02a0e1945c65fc1c83", "patch": "@@ -812,6 +812,7 @@ poplevel (keep, reverse, functionbody)\n   tree subblocks = current_binding_level->blocks;\n   tree block = 0;\n   tree decl;\n+  int block_previously_created;\n \n   keep |= current_binding_level->keep;\n \n@@ -877,7 +878,8 @@ poplevel (keep, reverse, functionbody)\n      create a BLOCK to record them for the life of this function.  */\n \n   block = 0;\n-  if (current_binding_level->this_block != 0)\n+  block_previously_created = (current_binding_level->this_block != 0);\n+  if (block_previously_created)\n     block = current_binding_level->this_block;\n   else if (keep || functionbody\n \t   || (current_binding_level->keep_if_subblocks && subblocks != 0))\n@@ -973,8 +975,11 @@ poplevel (keep, reverse, functionbody)\n   if (functionbody)\n     DECL_INITIAL (current_function_decl) = block;\n   else if (block)\n-    current_binding_level->blocks\n-      = chainon (current_binding_level->blocks, block);\n+    {\n+      if (!block_previously_created)\n+        current_binding_level->blocks\n+          = chainon (current_binding_level->blocks, block);\n+    }\n   /* If we did not make a block for the level just exited,\n      any blocks made for inner levels\n      (since they cannot be recorded as subblocks in that level)\n@@ -1048,15 +1053,14 @@ insert_block (block)\n     = chainon (current_binding_level->blocks, block);\n }\n \n-/* Return the BLOCK node for the innermost scope\n+/* Set the BLOCK node for the innermost scope\n    (the one we are currently in).  */\n \n-tree\n-current_block ()\n+void\n+set_block (block)\n+     register tree block;\n {\n-  if (current_binding_level->this_block == 0)\n-    current_binding_level->this_block = make_node (BLOCK);\n-  return current_binding_level->this_block;\n+  current_binding_level->this_block = block;\n }\n \f\n void"}]}