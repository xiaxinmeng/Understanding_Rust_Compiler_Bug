{"sha": "4639555c1fb991cf1b721e5038306fbfcdd3f112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYzOTU1NWMxZmI5OTFjZjFiNzIxZTUwMzgzMDZmYmZjZGQzZjExMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-09-30T17:23:14Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-09-30T17:23:14Z"}, "message": "Search modes in reverse order to avoid problems with EXTRA_CC_MODES\n\nFrom-SVN: r12873", "tree": {"sha": "0b527d69e33da1d6fb0dd547db44a7c2f6ecd13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b527d69e33da1d6fb0dd547db44a7c2f6ecd13a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4639555c1fb991cf1b721e5038306fbfcdd3f112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4639555c1fb991cf1b721e5038306fbfcdd3f112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4639555c1fb991cf1b721e5038306fbfcdd3f112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4639555c1fb991cf1b721e5038306fbfcdd3f112/comments", "author": null, "committer": null, "parents": [{"sha": "86944ea41d6154a5e9177b50ea6af4aa1189d415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86944ea41d6154a5e9177b50ea6af4aa1189d415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86944ea41d6154a5e9177b50ea6af4aa1189d415"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3087e381c99c3d7bbed4d60827825a5d6e65329c", "filename": "gcc/genopinit.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4639555c1fb991cf1b721e5038306fbfcdd3f112/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4639555c1fb991cf1b721e5038306fbfcdd3f112/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=4639555c1fb991cf1b721e5038306fbfcdd3f112", "patch": "@@ -1,5 +1,5 @@\n /* Generate code to initialize optabs from machine description.\n-   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -185,9 +185,7 @@ gen_insn (insn)\n \n \t\t    /* We have to be concerned about matching \"gt\" and\n \t\t       missing \"gtu\", e.g., so verify we have reached the\n-\t\t       end of thing we are to match.  We do not have this\n-\t\t       problem with modes since no mode is a prefix of\n-\t\t       another.  */\n+\t\t       end of thing we are to match.  */\n \t\t    if (*p == 0 && *q == 0 && rtx_class[op] == '<')\n \t\t      break;\n \t\t  }\n@@ -199,7 +197,11 @@ gen_insn (insn)\n \t\tbreak;\n \t      case 'a':\n \t      case 'b':\n-\t\tfor (i = 0; i < (int) MAX_MACHINE_MODE; i++)\n+\t\t/* This loop will stop at the first prefix match, so\n+                   look through the modes in reverse order, in case\n+                   EXTRA_CC_MODES was used and CC is a prefix of the\n+                   CC modes (as it should be).  */\n+\t\tfor (i = ((int) MAX_MACHINE_MODE) - 1; i >= 0; i--)\n \t\t  {\n \t\t    for (p = mode_name[i], q = np; *p; p++, q++)\n \t\t      if (tolower (*p) != *q)\n@@ -211,7 +213,7 @@ gen_insn (insn)\n \t\t      break;\n \t\t  }\n \n-\t\tif (i == (int) MAX_MACHINE_MODE)\n+\t\tif (i < 0)\n \t\t  matches = 0;\n \t\telse if (*pp == 'a')\n \t\t  m1 = i, np += strlen (mode_name[i]);"}]}