{"sha": "7179604fa7e891ff29b2a75bd3e45fa4da9fc39a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3OTYwNGZhN2U4OTFmZjI5YjJhNzViZDNlNDVmYTRkYTlmYzM5YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-10-24T19:58:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-10-24T19:58:57Z"}, "message": "comment typo\n\nFrom-SVN: r129610", "tree": {"sha": "02a2001535d7f8cc9bc555c5b453638db7f085bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a2001535d7f8cc9bc555c5b453638db7f085bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7179604fa7e891ff29b2a75bd3e45fa4da9fc39a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7179604fa7e891ff29b2a75bd3e45fa4da9fc39a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7179604fa7e891ff29b2a75bd3e45fa4da9fc39a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7179604fa7e891ff29b2a75bd3e45fa4da9fc39a/comments", "author": null, "committer": null, "parents": [{"sha": "876fa8ec875b827d6dbee1357bcc86a93caecdda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876fa8ec875b827d6dbee1357bcc86a93caecdda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876fa8ec875b827d6dbee1357bcc86a93caecdda"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8e48b1693d3810a87e5edb250e2c051cf448a473", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7179604fa7e891ff29b2a75bd3e45fa4da9fc39a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7179604fa7e891ff29b2a75bd3e45fa4da9fc39a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7179604fa7e891ff29b2a75bd3e45fa4da9fc39a", "patch": "@@ -13588,7 +13588,7 @@ cp_parser_parameter_declaration (cp_parser *parser,\n \t      token = cp_lexer_consume_token (parser->lexer);\n \t    }\n \n-\t  /* Create a DEFAULT_ARG to represented the unparsed default\n+\t  /* Create a DEFAULT_ARG to represent the unparsed default\n \t     argument.  */\n \t  default_argument = make_node (DEFAULT_ARG);\n \t  DEFARG_TOKENS (default_argument)"}]}