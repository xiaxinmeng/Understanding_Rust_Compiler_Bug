{"sha": "8d2fd9c9516dd878fb2809eca55e3bd35807f173", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyZmQ5Yzk1MTZkZDg3OGZiMjgwOWVjYTU1ZTNiZDM1ODA3ZjE3Mw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2007-09-25T01:42:34Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2007-09-25T01:42:34Z"}, "message": "re PR target/31482 (error: could not split insn, internal compiler error: in final_scan_insn)\n\nPR target/31482\n* config/m32c/cond.md (stzx_reversed_<mode>): Add an output\nconstraint.\n(movqicc_<code>_<mode>): Likewise.\n(movhicc_<code>_<mode>): Likewise.\n\nFrom-SVN: r128742", "tree": {"sha": "bd6dc7c99e82d1859342036a9e1e06290ae33ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd6dc7c99e82d1859342036a9e1e06290ae33ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d2fd9c9516dd878fb2809eca55e3bd35807f173", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2fd9c9516dd878fb2809eca55e3bd35807f173", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2fd9c9516dd878fb2809eca55e3bd35807f173", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2fd9c9516dd878fb2809eca55e3bd35807f173/comments", "author": null, "committer": null, "parents": [{"sha": "c6004917e961d38ce7919faf9d541d572f876654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6004917e961d38ce7919faf9d541d572f876654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6004917e961d38ce7919faf9d541d572f876654"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "d21eb1eaab174097084767b82ca85e21980aa485", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2fd9c9516dd878fb2809eca55e3bd35807f173/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2fd9c9516dd878fb2809eca55e3bd35807f173/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d2fd9c9516dd878fb2809eca55e3bd35807f173", "patch": "@@ -1,3 +1,11 @@\n+2007-09-24  DJ Delorie  <dj@redhat.com>\n+\n+\tPR target/31482\n+\t* config/m32c/cond.md (stzx_reversed_<mode>): Add an output\n+\tconstraint.\n+\t(movqicc_<code>_<mode>): Likewise.\n+\t(movhicc_<code>_<mode>): Likewise.\n+\n 2007-09-24  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/33184"}, {"sha": "a01efe9efa93c83a3428f9caecb9f2c869b036c4", "filename": "gcc/config/m32c/cond.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2fd9c9516dd878fb2809eca55e3bd35807f173/gcc%2Fconfig%2Fm32c%2Fcond.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2fd9c9516dd878fb2809eca55e3bd35807f173/gcc%2Fconfig%2Fm32c%2Fcond.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fcond.md?ref=8d2fd9c9516dd878fb2809eca55e3bd35807f173", "patch": "@@ -90,7 +90,7 @@\n   [(set_attr \"flags\" \"n,n,n\")])\n \n (define_insn_and_split \"stzx_reversed_<mode>\"\n-  [(set (match_operand:QHI 0 \"m32c_r0_operand\" \"\")\n+  [(set (match_operand:QHI 0 \"m32c_r0_operand\" \"=R0w\")\n \t(if_then_else:QHI (ne (reg:CC FLG_REGNO) (const_int 0))\n \t\t\t (match_operand:QHI 1 \"const_int_operand\" \"\")\n \t\t\t (match_operand:QHI 2 \"const_int_operand\" \"\")))]\n@@ -201,7 +201,7 @@\n )\n \n (define_insn_and_split \"movqicc_<code>_<mode>\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=R0w\")\n         (if_then_else:QI (eqne_cond:QI (match_operand:QHPSI 1 \"mra_operand\" \"RraSd\")\n \t\t\t\t       (match_operand:QHPSI 2 \"mrai_operand\" \"RraSdi\"))\n \t\t\t  (match_operand:QI 3 \"const_int_operand\" \"\")\n@@ -221,7 +221,7 @@\n   )\n \n (define_insn_and_split \"movhicc_<code>_<mode>\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=R0w\")\n         (if_then_else:HI (eqne_cond:HI (match_operand:QHPSI 1 \"mra_operand\" \"RraSd\")\n \t\t\t\t       (match_operand:QHPSI 2 \"mrai_operand\" \"RraSdi\"))\n \t\t\t  (match_operand:QI 3 \"const_int_operand\" \"\")"}]}