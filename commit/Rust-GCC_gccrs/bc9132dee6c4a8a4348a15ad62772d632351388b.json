{"sha": "bc9132dee6c4a8a4348a15ad62772d632351388b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5MTMyZGVlNmM0YThhNDM0OGExNWFkNjI3NzJkNjMyMzUxMzg4Yg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-09-11T22:18:06Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-09-11T22:18:06Z"}, "message": "Also turn off OPTION_MASK_ABI_X32 for -m16\n\n\tPR target/63228\n\t* config/i386/i386.c (ix86_option_override_internal): Also turn\n\toff OPTION_MASK_ABI_X32 for -m16.\n\nFrom-SVN: r215194", "tree": {"sha": "fad9e86471430f0553d65d08bc08622576f6d1f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fad9e86471430f0553d65d08bc08622576f6d1f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9132dee6c4a8a4348a15ad62772d632351388b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9132dee6c4a8a4348a15ad62772d632351388b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9132dee6c4a8a4348a15ad62772d632351388b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9132dee6c4a8a4348a15ad62772d632351388b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7043e9680c4d984ee0e80caa21be94bf6854ff05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7043e9680c4d984ee0e80caa21be94bf6854ff05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7043e9680c4d984ee0e80caa21be94bf6854ff05"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "1b0700417ec269dea3ea205398cc16dd889e067e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9132dee6c4a8a4348a15ad62772d632351388b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9132dee6c4a8a4348a15ad62772d632351388b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc9132dee6c4a8a4348a15ad62772d632351388b", "patch": "@@ -1,3 +1,9 @@\n+2014-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/63228\n+\t* config/i386/i386.c (ix86_option_override_internal): Also turn\n+\toff OPTION_MASK_ABI_X32 for -m16.\n+\n 2014-09-11  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (rs6000_mftb_<mode>): Use mode iterator"}, {"sha": "cb308c9ee959cdaa7de6f418ea9a0d1904a5ebfd", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9132dee6c4a8a4348a15ad62772d632351388b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9132dee6c4a8a4348a15ad62772d632351388b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bc9132dee6c4a8a4348a15ad62772d632351388b", "patch": "@@ -3346,8 +3346,9 @@ ix86_option_override_internal (bool main_args_p,\n       /* When TARGET_BI_ARCH == 2, by default, OPTION_MASK_ABI_X32 is\n \t on and OPTION_MASK_ABI_64 is off.  We turn off\n \t OPTION_MASK_ABI_X32 if OPTION_MASK_ABI_64 is turned on by\n-\t -m64.  */\n-      if (TARGET_LP64_P (opts->x_ix86_isa_flags))\n+\t -m64 or OPTION_MASK_CODE16 is turned on by -m16.  */\n+      if (TARGET_LP64_P (opts->x_ix86_isa_flags)\n+\t  || TARGET_16BIT_P (opts->x_ix86_isa_flags))\n \topts->x_ix86_isa_flags &= ~OPTION_MASK_ABI_X32;\n #endif\n     }"}]}