{"sha": "7778a2c32553efde52263488ee0d7dee839ce499", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3OGEyYzMyNTUzZWZkZTUyMjYzNDg4ZWUwZDdkZWU4MzljZTQ5OQ==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-06-05T21:52:35Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-06-05T21:52:35Z"}, "message": "describe more missing features\n\nFrom-SVN: r27376", "tree": {"sha": "95a3bc26d1ba8d4babf50fd47c1227d2791490fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95a3bc26d1ba8d4babf50fd47c1227d2791490fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7778a2c32553efde52263488ee0d7dee839ce499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7778a2c32553efde52263488ee0d7dee839ce499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7778a2c32553efde52263488ee0d7dee839ce499", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7778a2c32553efde52263488ee0d7dee839ce499/comments", "author": null, "committer": null, "parents": [{"sha": "7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "2fb74f6c090b5036154515807f5b8598e96e1610", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7778a2c32553efde52263488ee0d7dee839ce499/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7778a2c32553efde52263488ee0d7dee839ce499/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7778a2c32553efde52263488ee0d7dee839ce499", "patch": "@@ -1,3 +1,8 @@\n+Sat Jun  5 23:50:36 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* g77.texi: Describe a few more missing features people\n+\thave emailed me about.\n+\n Sat Jun  5 17:03:23 1999  Craig Burley  <craig@jcb-sc.com>\n \n \tFrom Dave Love to egcs-patches on 20 May 1999 17:38:38 +0100:"}, {"sha": "0d7a213575a7f2541d7c38822f20d4cf55706181", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 77, "deletions": 1, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7778a2c32553efde52263488ee0d7dee839ce499/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7778a2c32553efde52263488ee0d7dee839ce499/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=7778a2c32553efde52263488ee0d7dee839ce499", "patch": "@@ -2,7 +2,7 @@\n @c %**start of header\n @setfilename g77.info\n \n-@set last-update 1999-06-04\n+@set last-update 1999-06-06\n @set copyrights-g77 1995-1999\n \n @include root.texi\n@@ -11413,6 +11413,7 @@ GNU Fortran dialects:\n * Suppressing Space Padding::\n * Fortran Preprocessor::\n * Bit Operations on Floating-point Data::\n+* Really Ugly Character Assignments::\n \n New facilities:\n * POSIX Standard::\n@@ -11421,6 +11422,7 @@ New facilities:\n * Large Automatic Arrays::\n * Support for Threads::\n * Increasing Precision/Range::\n+* Enabling Debug Lines::\n \n Better diagnostics:\n * Better Warnings::\n@@ -11440,6 +11442,8 @@ Better diagnostics:\n Run-time facilities:\n * Uninitialized Variables at Run Time::\n * Portable Unformatted Files::\n+* Better List-directed I/O::\n+* Default to Console I/O::\n \n Debugging:\n * Labels Visible to Debugger::\n@@ -12090,6 +12094,24 @@ PRINT *, IAND(A, B)\n END\n @end smallexample\n \n+@node Really Ugly Character Assignments\n+@subsection Really Ugly Character Assignments\n+\n+An option such as @samp{-fugly-char} should be provided\n+to allow\n+\n+@smallexample\n+REAL*8 A1\n+DATA A1 / '12345678' /\n+@end smallexample\n+\n+and:\n+\n+@smallexample\n+REAL*8 A1\n+A1 = 'ABCDEFGH'\n+@end smallexample\n+\n @node POSIX Standard\n @subsection @code{POSIX} Standard\n \n@@ -12170,6 +12192,17 @@ are thread-safe, nor does @code{g77} have support for parallel processing\n processors).\n A package such as PVM might help here.\n \n+@node Enabling Debug Lines\n+@subsection Enabling Debug Lines\n+@cindex debug line\n+@cindex comment line, debug\n+\n+An option such as @samp{-fdebug-lines} should be provided\n+to turn fixed-form lines beginning with @samp{D}\n+to be treated as if they began with a space,\n+instead of as if they began with a @samp{C}\n+(as comment lines).\n+\n @node Better Warnings\n @subsection Better Warnings\n \n@@ -12465,6 +12498,49 @@ only incur overhead when they are read on a system with a different\n format.)  A future @code{g77} runtime library should use such\n techniques.\n \n+@node Better List-directed I/O\n+@subsection Better List-directed I/O\n+\n+Values output using list-directed I/O\n+(@samp{PRINT *, R, D})\n+should be written with a field width, precision, and so on\n+appropriate for the type (precision) of each value.\n+\n+(Currently, no distinction is made between single-precision\n+and double-precision values\n+by @code{libf2c}.)\n+\n+It is likely this item will require the @code{libg77} project\n+to be undertaken.\n+\n+In the meantime, use of formatted I/O is recommended.\n+While it might be of little consolation,\n+@code{g77} does support @samp{FORMAT(F<WIDTH>.4)}, for example,\n+as long as @samp{WIDTH} is defined as a named constant\n+(via @code{PARAMETER}).\n+That at least allows some compile-time specification\n+of the precision of a data type,\n+perhaps controlled by preprocessing directives.\n+\n+@node Default to Console I/O\n+@subsection Default to Console I/O\n+\n+The default I/O units,\n+specified by @samp{READ @var{fmt}},\n+@samp{READ (UNIT=*)},\n+@samp{WRITE (UNIT=*)}, and\n+@samp{PRINT @var{fmt}},\n+should not be units 5 (input) and 6 (output),\n+but, rather, unit numbers not normally available\n+for use in statements such as @code{OPEN} and @code{CLOSE}.\n+\n+Changing this would allow a program to connect units 5 and 6\n+to files via @code{OPEN},\n+but still use @samp{READ (UNIT=*)} and @samp{PRINT}\n+to do I/O to the ``console''.\n+\n+This change probably requires the @code{libg77} project.\n+\n @node Labels Visible to Debugger\n @subsection Labels Visible to Debugger\n "}]}