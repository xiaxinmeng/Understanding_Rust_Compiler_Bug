{"sha": "837865bdc2aa07d7b34f67b649837967123cea54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3ODY1YmRjMmFhMDdkN2IzNGY2N2I2NDk4Mzc5NjcxMjNjZWE1NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-02-23T20:25:57Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-02-23T20:25:57Z"}, "message": "gimple-ssa-sprintf.c (target_strtol): Rename...\n\ngcc/ChangeLog:\n\t* gimple-ssa-sprintf.c (target_strtol): Rename...\n\t(target_strtohwi): ...to this.  Handle values up to HOST_WIDE_INT_MAX.\n\t(parse_directive): Adjust to name change.  Use HOST_WIDE_INT_MAX to\n\tcheck for range error.\n\nFrom-SVN: r269166", "tree": {"sha": "488f71a21705c67c5b747321d94d5f6928b5c094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/488f71a21705c67c5b747321d94d5f6928b5c094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/837865bdc2aa07d7b34f67b649837967123cea54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837865bdc2aa07d7b34f67b649837967123cea54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837865bdc2aa07d7b34f67b649837967123cea54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837865bdc2aa07d7b34f67b649837967123cea54/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34ab23c9acd6dc641f2f2d1212841b05d9a5ff6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ab23c9acd6dc641f2f2d1212841b05d9a5ff6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ab23c9acd6dc641f2f2d1212841b05d9a5ff6e"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "2be8a96355a671ad804b12ae78937c87d5f1f0eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837865bdc2aa07d7b34f67b649837967123cea54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837865bdc2aa07d7b34f67b649837967123cea54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=837865bdc2aa07d7b34f67b649837967123cea54", "patch": "@@ -1,3 +1,10 @@\n+2019-02-23  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gimple-ssa-sprintf.c (target_strtol): Rename...\n+\t(target_strtohwi): ...to this.  Handle values up to HOST_WIDE_INT_MAX.\n+\t(parse_directive): Adjust to name change.  Use HOST_WIDE_INT_MAX to\n+\tcheck for range error.\n+\n 2019-02-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR driver/69471"}, {"sha": "4fe206ad08b0109915cc83ebc2f09a3cb093ac05", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837865bdc2aa07d7b34f67b649837967123cea54/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837865bdc2aa07d7b34f67b649837967123cea54/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=837865bdc2aa07d7b34f67b649837967123cea54", "patch": "@@ -411,12 +411,12 @@ target_to_host (char *hostr, size_t hostsz, const char *targstr)\n }\n \n /* Convert the sequence of decimal digits in the execution character\n-   starting at S to a long, just like strtol does.  Return the result\n-   and set *END to one past the last converted character.  On range\n-   error set ERANGE to the digit that caused it.  */\n+   starting at *PS to a HOST_WIDE_INT, analogously to strtol.  Return\n+   the result and set *PS to one past the last converted character.\n+   On range error set ERANGE to the digit that caused it.  */\n \n-static inline long\n-target_strtol10 (const char **ps, const char **erange)\n+static inline HOST_WIDE_INT\n+target_strtowi (const char **ps, const char **erange)\n {\n   unsigned HOST_WIDE_INT val = 0;\n   for ( ; ; ++*ps)\n@@ -427,9 +427,9 @@ target_strtol10 (const char **ps, const char **erange)\n \t  c -= '0';\n \n \t  /* Check for overflow.  */\n-\t  if (val > (LONG_MAX - c) / 10LU)\n+\t  if (val > ((unsigned HOST_WIDE_INT) HOST_WIDE_INT_MAX - c) / 10LU)\n \t    {\n-\t      val = LONG_MAX;\n+\t      val = HOST_WIDE_INT_MAX;\n \t      *erange = *ps;\n \n \t      /* Skip the remaining digits.  */\n@@ -3149,7 +3149,7 @@ parse_directive (sprintf_dom_walker::call_info &info,\n \t width and sort it out later after the next character has\n \t been seen.  */\n       pwidth = pf;\n-      width = target_strtol10 (&pf, &werange);\n+      width = target_strtowi (&pf, &werange);\n     }\n   else if (target_to_host (*pf) == '*')\n     {\n@@ -3231,7 +3231,7 @@ parse_directive (sprintf_dom_walker::call_info &info,\n \t{\n \t  werange = 0;\n \t  pwidth = pf;\n-\t  width = target_strtol10 (&pf, &werange);\n+\t  width = target_strtowi (&pf, &werange);\n \t}\n       else if (target_to_host (*pf) == '*')\n \t{\n@@ -3264,7 +3264,7 @@ parse_directive (sprintf_dom_walker::call_info &info,\n       if (ISDIGIT (target_to_host (*pf)))\n \t{\n \t  pprec = pf;\n-\t  precision = target_strtol10 (&pf, &perange);\n+\t  precision = target_strtowi (&pf, &perange);\n \t}\n       else if (target_to_host (*pf) == '*')\n \t{\n@@ -3418,7 +3418,7 @@ parse_directive (sprintf_dom_walker::call_info &info,\n     }\n   else\n     {\n-      if (width == LONG_MAX && werange)\n+      if (width == HOST_WIDE_INT_MAX && werange)\n \t{\n \t  size_t begin = dir.beg - info.fmtstr + (pwidth - pcnt);\n \t  size_t caret = begin + (werange - pcnt);\n@@ -3451,7 +3451,7 @@ parse_directive (sprintf_dom_walker::call_info &info,\n     }\n   else\n     {\n-      if (precision == LONG_MAX && perange)\n+      if (precision == HOST_WIDE_INT_MAX && perange)\n \t{\n \t  size_t begin = dir.beg - info.fmtstr + (pprec - pcnt) - 1;\n \t  size_t caret = dir.beg - info.fmtstr + (perange - pcnt) - 1;"}]}