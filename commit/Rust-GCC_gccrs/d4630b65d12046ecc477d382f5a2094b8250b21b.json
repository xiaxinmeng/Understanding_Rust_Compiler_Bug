{"sha": "d4630b65d12046ecc477d382f5a2094b8250b21b", "node_id": "C_kwDOANBUbNoAKGQ0NjMwYjY1ZDEyMDQ2ZWNjNDc3ZDM4MmY1YTIwOTRiODI1MGIyMWI", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2022-06-03T08:21:21Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2022-06-03T08:21:21Z"}, "message": "x86: {,v}psadbw have commutative source operands\n\nLike noticed for gas as well (binutils-gdb commit c8cad9d389b7), the\n\"absolute difference\" aspect of the insns makes their source operands\ncommutative.\n\ngcc/\n\n\t* config/i386/mmx.md (mmx_psadbw): Convert to expander.\n\t(*mmx_psadbw): New. Mark as commutative.\n\t* config/i386/sse.md (<sse2_avx2>_psadbw): Convert to expander.\n\t(*<sse2_avx2>_psadbw): New. Mark as commutative.", "tree": {"sha": "757bd30b5ffa30a6b46d9a963de33126b3e79a0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/757bd30b5ffa30a6b46d9a963de33126b3e79a0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4630b65d12046ecc477d382f5a2094b8250b21b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4630b65d12046ecc477d382f5a2094b8250b21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4630b65d12046ecc477d382f5a2094b8250b21b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4630b65d12046ecc477d382f5a2094b8250b21b/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be2861fe8c527a5952257462ceca899bb43b1452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2861fe8c527a5952257462ceca899bb43b1452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2861fe8c527a5952257462ceca899bb43b1452"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "ba53007a35eb6250c52fa1063d3621f8c03eaa2b", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4630b65d12046ecc477d382f5a2094b8250b21b/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4630b65d12046ecc477d382f5a2094b8250b21b/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=d4630b65d12046ecc477d382f5a2094b8250b21b", "patch": "@@ -4405,13 +4405,21 @@\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"mmx_psadbw\"\n+(define_expand \"mmx_psadbw\"\n+  [(set (match_operand:V1DI 0 \"register_operand\")\n+\t(unspec:V1DI [(match_operand:V8QI 1 \"register_mmxmem_operand\")\n+\t\t      (match_operand:V8QI 2 \"register_mmxmem_operand\")]\n+\t\t     UNSPEC_PSADBW))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && (TARGET_SSE || TARGET_3DNOW_A)\"\n+  \"ix86_fixup_binary_operands_no_copy (PLUS, V8QImode, operands);\")\n+\n+(define_insn \"*mmx_psadbw\"\n   [(set (match_operand:V1DI 0 \"register_operand\" \"=y,x,Yw\")\n-        (unspec:V1DI [(match_operand:V8QI 1 \"register_operand\" \"0,0,Yw\")\n+\t(unspec:V1DI [(match_operand:V8QI 1 \"register_mmxmem_operand\" \"%0,0,Yw\")\n \t\t      (match_operand:V8QI 2 \"register_mmxmem_operand\" \"ym,x,Yw\")]\n \t\t     UNSPEC_PSADBW))]\n-  \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n-   && (TARGET_SSE || TARGET_3DNOW_A)\"\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && (TARGET_SSE || TARGET_3DNOW_A)\n+   && ix86_binary_operator_ok (PLUS, V8QImode, operands)\"\n   \"@\n    psadbw\\t{%2, %0|%0, %2}\n    psadbw\\t{%2, %0|%0, %2}"}, {"sha": "62688f8e29dafc15105e32c6a656c2db94a7d5c5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4630b65d12046ecc477d382f5a2094b8250b21b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4630b65d12046ecc477d382f5a2094b8250b21b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d4630b65d12046ecc477d382f5a2094b8250b21b", "patch": "@@ -19982,13 +19982,23 @@\n \n ;; The correct representation for this is absolutely enormous, and\n ;; surely not generally useful.\n-(define_insn \"<sse2_avx2>_psadbw\"\n+(define_expand \"<sse2_avx2>_psadbw\"\n+  [(set (match_operand:VI8_AVX2_AVX512BW 0 \"register_operand\")\n+\t(unspec:VI8_AVX2_AVX512BW\n+\t  [(match_operand:<ssebytemode> 1 \"vector_operand\")\n+\t   (match_operand:<ssebytemode> 2 \"vector_operand\")]\n+\t  UNSPEC_PSADBW))]\n+  \"TARGET_SSE2\"\n+  \"ix86_fixup_binary_operands_no_copy (PLUS, <ssebytemode>mode, operands);\")\n+\n+(define_insn \"*<sse2_avx2>_psadbw\"\n   [(set (match_operand:VI8_AVX2_AVX512BW 0 \"register_operand\" \"=x,YW\")\n \t(unspec:VI8_AVX2_AVX512BW\n-\t  [(match_operand:<ssebytemode> 1 \"register_operand\" \"0,YW\")\n+\t  [(match_operand:<ssebytemode> 1 \"vector_operand\" \"%0,YW\")\n \t   (match_operand:<ssebytemode> 2 \"vector_operand\" \"xBm,YWm\")]\n \t  UNSPEC_PSADBW))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE2\n+   && ix86_binary_operator_ok (PLUS, <ssebytemode>mode, operands)\"\n   \"@\n    psadbw\\t{%2, %0|%0, %2}\n    vpsadbw\\t{%2, %1, %0|%0, %1, %2}\""}]}