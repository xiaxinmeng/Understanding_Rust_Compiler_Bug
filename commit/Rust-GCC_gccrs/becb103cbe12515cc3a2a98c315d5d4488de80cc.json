{"sha": "becb103cbe12515cc3a2a98c315d5d4488de80cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjYjEwM2NiZTEyNTE1Y2MzYTJhOThjMzE1ZDVkNDQ4OGRlODBjYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-10-07T16:06:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-10-07T16:06:52Z"}, "message": "m68k.c, m68k.md: Use the assembly syntax for ASSEMBLER_DIALECT.\n\n\t* config/m68k/m68k.c, config/m68k/m68k.md: Use the assembly\n\tsyntax for ASSEMBLER_DIALECT.\n\t* config/m68k/m68k.h (ASSEMBLER_DIALECT): New.\n\nFrom-SVN: r129070", "tree": {"sha": "fb23d3e0869761fe02ba34dc7f9cd6073b34c4a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb23d3e0869761fe02ba34dc7f9cd6073b34c4a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/becb103cbe12515cc3a2a98c315d5d4488de80cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becb103cbe12515cc3a2a98c315d5d4488de80cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/becb103cbe12515cc3a2a98c315d5d4488de80cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becb103cbe12515cc3a2a98c315d5d4488de80cc/comments", "author": null, "committer": null, "parents": [{"sha": "c4d4556f8daab94ba0be96ee6f56507da1ae4b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d4556f8daab94ba0be96ee6f56507da1ae4b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d4556f8daab94ba0be96ee6f56507da1ae4b94"}], "stats": {"total": 123, "additions": 51, "deletions": 72}, "files": [{"sha": "db4a7d011a9534f52a6ad5339f0e00b59be6efed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=becb103cbe12515cc3a2a98c315d5d4488de80cc", "patch": "@@ -1,3 +1,9 @@\n+2007-10-07  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* config/m68k/m68k.c, config/m68k/m68k.md: Use the assembly\n+\tsyntax for ASSEMBLER_DIALECT.\n+\t* config/m68k/m68k.h (ASSEMBLER_DIALECT): New.\n+\n 2007-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n             Nathan Froyd  <froydnj@codesourcery.com>\n "}, {"sha": "099a220a8702246c034f744e152185b52d2b7397", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=becb103cbe12515cc3a2a98c315d5d4488de80cc", "patch": "@@ -3375,8 +3375,8 @@ output_addsi3 (rtx *operands)\n \t  && (INTVAL (operands[2]) < -32768 || INTVAL (operands[2]) > 32767))\n         return \"move%.l %2,%0\\n\\tadd%.l %1,%0\";\n       if (GET_CODE (operands[2]) == REG)\n-\treturn MOTOROLA ? \"lea (%1,%2.l),%0\" : \"lea %1@(0,%2:l),%0\";\n-      return MOTOROLA ? \"lea (%c2,%1),%0\" : \"lea %1@(%c2),%0\";\n+\treturn \"lea {(%1,%2.l)|%1@(0,%2:l)},%0\";\n+      return \"lea {(%c2,%1)|%1@(%c2)},%0\";\n     }\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n@@ -3414,7 +3414,7 @@ output_addsi3 (rtx *operands)\n \t  if (TUNE_68040)\n \t    return \"add%.w %2,%0\";\n \t  else\n-\t    return MOTOROLA ? \"lea (%c2,%0),%0\" : \"lea %0@(%c2),%0\";\n+\t    return \"lea {(%c2,%0)|%0@(%c2)},%0\";\n \t}\n     }\n   return \"add%.l %2,%0\";\n@@ -3730,11 +3730,11 @@ print_operand (FILE *file, rtx op, int letter)\n   else if (letter == '#')\n     asm_fprintf (file, \"%I\");\n   else if (letter == '-')\n-    asm_fprintf (file, MOTOROLA ? \"-(%Rsp)\" : \"%Rsp@-\");\n+    asm_fprintf (file, \"{-(%Rsp)|%Rsp@-}\");\n   else if (letter == '+')\n-    asm_fprintf (file, MOTOROLA ? \"(%Rsp)+\" : \"%Rsp@+\");\n+    asm_fprintf (file, \"{(%Rsp)+|%Rsp@+}\");\n   else if (letter == '@')\n-    asm_fprintf (file, MOTOROLA ? \"(%Rsp)\" : \"%Rsp@\");\n+    asm_fprintf (file, \"{(%Rsp)|%Rsp@}\");\n   else if (letter == '!')\n     asm_fprintf (file, \"%Rfpcr\");\n   else if (letter == '$')\n@@ -3774,7 +3774,7 @@ print_operand (FILE *file, rtx op, int letter)\n \t  && !(GET_CODE (XEXP (op, 0)) == CONST_INT\n \t       && INTVAL (XEXP (op, 0)) < 0x8000\n \t       && INTVAL (XEXP (op, 0)) >= -0x8000))\n-\tfprintf (file, MOTOROLA ? \".l\" : \":l\");\n+\tasm_fprintf (file, \"{.|:}l\");\n     }\n   else if (GET_CODE (op) == CONST_DOUBLE && GET_MODE (op) == SFmode)\n     {\n@@ -3834,11 +3834,11 @@ print_operand_address (FILE *file, rtx addr)\n     gcc_unreachable ();\n \n   if (address.code == PRE_DEC)\n-    fprintf (file, MOTOROLA ? \"-(%s)\" : \"%s@-\",\n-\t     M68K_REGNAME (REGNO (address.base)));\n+    asm_fprintf (file, \"{-(%s)|%s@-}\",\n+\t\t M68K_REGNAME (REGNO (address.base)));\n   else if (address.code == POST_INC)\n-    fprintf (file, MOTOROLA ? \"(%s)+\" : \"%s@+\",\n-\t     M68K_REGNAME (REGNO (address.base)));\n+    asm_fprintf (file, \"{(%s)+|%s@+}\",\n+\t\t M68K_REGNAME (REGNO (address.base)));\n   else if (!address.base && !address.index)\n     {\n       /* A constant address.  */\n@@ -3847,7 +3847,7 @@ print_operand_address (FILE *file, rtx addr)\n \t{\n \t  /* (xxx).w or (xxx).l.  */\n \t  if (IN_RANGE (INTVAL (addr), -0x8000, 0x7fff))\n-\t    fprintf (file, MOTOROLA ? \"%d.w\" : \"%d:w\", (int) INTVAL (addr));\n+\t    asm_fprintf (file, \"%d{.|:}w\", (int) INTVAL (addr));\n \t  else\n \t    fprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (addr));\n \t}"}, {"sha": "6f915d95839443758d094f01b47be351609789d6", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=becb103cbe12515cc3a2a98c315d5d4488de80cc", "patch": "@@ -29,6 +29,10 @@ along with GCC; see the file COPYING3.  If not see\n # define TARGET_VERSION fprintf (stderr, \" (68k, MIT syntax)\")\n #endif\n \n+/* Options 0 and 1 are the Motorola and MIT syntaxes,\n+   respectively.  */\n+#define ASSEMBLER_DIALECT\t!MOTOROLA\n+\n /* Handle --with-cpu default option from configure script.  */\n #define OPTION_DEFAULT_SPECS\t\t\t\t\t\t\\\n   { \"cpu\",   \"%{!mc68000:%{!m68000:%{!m68302:%{!m68010:%{!mc68020:%{!m68020:\\\n@@ -971,17 +975,11 @@ do { if (cc_prev_status.flags & CC_IN_68881)\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n   sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM))\n \n-#define ASM_OUTPUT_REG_PUSH(FILE,REGNO)\t\t\t\\\n-  asm_fprintf (FILE, (MOTOROLA\t\t\t\t\\\n-\t\t      ? \"\\tmove.l %s,-(%Rsp)\\n\"\t\t\\\n-\t\t      : \"\\tmovel %s,%Rsp@-\\n\"),\t\t\\\n-\t       reg_names[REGNO])\n-\n-#define ASM_OUTPUT_REG_POP(FILE,REGNO)\t\t\t\\\n-  asm_fprintf (FILE, (MOTOROLA\t\t\t\t\\\n-\t\t      ? \"\\tmove.l (%Rsp)+,%s\\n\"\t\t\\\n-\t\t      : \"\\tmovel %Rsp@+,%s\\n\"),\t\t\\\n-\t       reg_names[REGNO])\n+#define ASM_OUTPUT_REG_PUSH(FILE,REGNO)\t\t\t\t\t  \\\n+  asm_fprintf (FILE, \"\\tmove%.l %s,{-(%Rsp)|%Rsp@-}\\n\", reg_names[REGNO])\n+\n+#define ASM_OUTPUT_REG_POP(FILE,REGNO)\t\t\t\t\t     \\\n+  asm_fprintf (FILE, \"\\tmove%.l {(%Rsp)+|%Rsp@+},%s\\n\", reg_names[REGNO])\n \n /* The m68k does not use absolute case-vectors, but we must define this macro\n    anyway.  */"}, {"sha": "a46b3fa83810a267914a76cbf48b242f2d79db07", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 24, "deletions": 49, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb103cbe12515cc3a2a98c315d5d4488de80cc/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=becb103cbe12515cc3a2a98c315d5d4488de80cc", "patch": "@@ -825,7 +825,7 @@\n   \"TUNE_68040_60\"\n {\n   if (which_alternative == 0)\n-    return MOTOROLA ? \"lea 0.w,%0\" : \"lea 0:w,%0\";\n+    return \"lea 0{.|:}w,%0\";\n   else if (which_alternative == 1)\n     return \"clr%.l %0\";\n   else\n@@ -1140,7 +1140,7 @@\n \t{\n \t  /* On the '040, 'subl an,an' takes 2 clocks while lea takes only 1 */\n \t  if (TUNE_68040_60)\n-\t    return MOTOROLA ? \"lea 0.w,%0\" : \"lea 0:w,%0\";\n+\t    return \"lea 0{.|:}w,%0\";\n \t  else\n \t    return \"sub%.l %0,%0\";\n \t}\n@@ -2444,13 +2444,13 @@\n       return \"#\";\n \n     case 5:\n-      return MOTOROLA ? \"lea (%1,%2.l),%0\" : \"lea %1@(0,%2:l),%0\";\n+      return \"lea {(%1,%2.l)|%1@(0,%2:l)},%0\";\n \n     case 6:\n-      return MOTOROLA ? \"lea (%2,%1.l),%0\" : \"lea %2@(0,%1:l),%0\";\n+      return \"lea {(%2,%1.l)|%2@(0,%1:l)},%0\";\n \n     case 7:\n-      return MOTOROLA ? \"lea (%c2,%1),%0\" : \"lea %1@(%c2),%0\";\n+      return \"lea {(%c2,%1)|%1@(%c2)},%0\";\n \n     default:\n       gcc_unreachable ();\n@@ -2521,7 +2521,7 @@\n \t    }\n \t}\n       if (ADDRESS_REG_P (operands[0]) && !TUNE_68040)\n-\treturn MOTOROLA ? \"lea (%c2,%0),%0\" : \"lea %0@(%c2),%0\";\n+\treturn \"lea {(%c2,%0)|%0@(%c2)},%0\";\n     }\n   return \"add%.w %2,%0\";\n })\n@@ -2576,7 +2576,7 @@\n \t    }\n \t}\n       if (ADDRESS_REG_P (operands[0]) && !TUNE_68040)\n-\treturn MOTOROLA ? \"lea (%c1,%0),%0\" : \"lea %0@(%c1),%0\";\n+\treturn \"lea {(%c1,%0)|%0@(%c1)},%0\";\n     }\n   return \"add%.w %1,%0\";\n })\n@@ -2625,7 +2625,7 @@\n \t    }\n \t}\n       if (ADDRESS_REG_P (operands[0]) && !TUNE_68040)\n-\treturn MOTOROLA ? \"lea (%c1,%0),%0\" : \"lea %0@(%c1),%0\";\n+\treturn \"lea {(%c1,%0)|%0@(%c1)},%0\";\n     }\n   return \"add%.w %1,%0\";\n })\n@@ -2971,9 +2971,7 @@\n \t(mult:HI (match_operand:HI 1 \"general_operand\" \"%0\")\n \t\t (match_operand:HI 2 \"general_src_operand\" \"dmSn\")))]\n   \"\"\n-{\n-  return MOTOROLA ? \"muls%.w %2,%0\" : \"muls %2,%0\";\n-}\n+  \"muls{.w} %2,%0\"\n   [(set_attr \"type\" \"muls_w\")\n    (set_attr \"opy\" \"2\")])\n \n@@ -2984,9 +2982,7 @@\n \t\t (sign_extend:SI\n \t\t  (match_operand:HI 2 \"nonimmediate_src_operand\" \"dmS\"))))]\n   \"\"\n-{\n-  return MOTOROLA ? \"muls%.w %2,%0\" : \"muls %2,%0\";\n-}\n+  \"muls{.w} %2,%0\"\n   [(set_attr \"type\" \"muls_w\")\n    (set_attr \"opy\" \"2\")])\n \n@@ -2996,9 +2992,7 @@\n \t\t  (match_operand:HI 1 \"nonimmediate_operand\" \"%0\"))\n \t\t (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n   \"INTVAL (operands[2]) >= -0x8000 && INTVAL (operands[2]) <= 0x7fff\"\n-{\n-  return MOTOROLA ? \"muls%.w %2,%0\" : \"muls %2,%0\";\n-}\n+  \"muls{.w} %2,%0\"\n   [(set_attr \"type\" \"muls_w\")\n    (set_attr \"opy\" \"2\")])\n \n@@ -3035,9 +3029,7 @@\n \t\t (zero_extend:SI\n \t\t  (match_operand:HI 2 \"nonimmediate_src_operand\" \"dmS\"))))]\n   \"\"\n-{\n-  return MOTOROLA ? \"mulu%.w %2,%0\" : \"mulu %2,%0\";\n-}\n+  \"mulu{.w} %2,%0\"\n   [(set_attr \"type\" \"mulu_w\")\n    (set_attr \"opy\" \"2\")])\n \n@@ -3047,9 +3039,7 @@\n \t\t  (match_operand:HI 1 \"nonimmediate_operand\" \"%0\"))\n \t\t (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n   \"INTVAL (operands[2]) >= 0 && INTVAL (operands[2]) <= 0xffff\"\n-{\n-  return MOTOROLA ? \"mulu%.w %2,%0\" : \"mulu %2,%0\";\n-}\n+  \"mulu{.w} %2,%0\"\n   [(set_attr \"type\" \"mulu_w\")\n    (set_attr \"opy\" \"2\")])\n \n@@ -3472,10 +3462,7 @@\n \t(mod:HI (match_dup 1) (match_dup 2)))]\n   \"!TARGET_COLDFIRE || TARGET_CF_HWDIV\"\n {\n-  output_asm_insn (MOTOROLA ?\n-    \"ext%.l %0\\;divs%.w %2,%0\" :\n-    \"extl %0\\;divs %2,%0\",\n-    operands);\n+  output_asm_insn (\"ext%.l %0\\;divs{.w} %2,%0\", operands);\n   if (!find_reg_note(insn, REG_UNUSED, operands[3]))\n     {\n       CC_STATUS_INIT;\n@@ -3494,15 +3481,9 @@\n   \"!TARGET_COLDFIRE || TARGET_CF_HWDIV\"\n {\n   if (ISA_HAS_MVS_MVZ)\n-    output_asm_insn (MOTOROLA ?\n-      \"mvz%.w %0,%0\\;divu%.w %2,%0\" :\n-      \"mvz%.w %0,%0\\;divu %2,%0\",\n-      operands);\n+    output_asm_insn (\"mvz%.w %0,%0\\;divu{.w} %2,%0\", operands);\n   else\n-    output_asm_insn (MOTOROLA ?\n-      \"and%.l #0xFFFF,%0\\;divu%.w %2,%0\" :\n-      \"and%.l #0xFFFF,%0\\;divu %2,%0\",\n-      operands);\n+    output_asm_insn (\"and%.l #0xFFFF,%0\\;divu{.w} %2,%0\", operands);\n \n   if (!find_reg_note(insn, REG_UNUSED, operands[3]))\n     {\n@@ -6832,9 +6813,7 @@\n   [(set (pc) (match_operand:SI 0 \"register_operand\" \"a\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jmp (%0)\" : \"jmp %0@\";\n-}\n+  \"jmp {(%0)|%0@}\"\n   [(set_attr \"type\" \"bra\")])\n \n ;; Jump to variable address from dispatch table of relative addresses.\n@@ -6851,14 +6830,12 @@\n   if (TARGET_COLDFIRE)\n     {\n       if (ADDRESS_REG_P (operands[0]))\n-\treturn MOTOROLA ? \"jmp (2,pc,%0.l)\" : \"jmp pc@(2,%0:l)\";\n-      else if (MOTOROLA)\n-\treturn \"ext%.l %0\\;jmp (2,pc,%0.l)\";\n+\treturn \"jmp {(2,pc,%0.l)|pc@(2,%0:l)}\";\n       else\n-\treturn \"extl %0\\;jmp pc@(2,%0:l)\";\n+\treturn \"ext%.l %0\\;jmp {(2,pc,%0.l)|pc@(2,%0:l)}\";\n     }\n   else\n-    return MOTOROLA ? \"jmp (2,pc,%0.w)\" : \"jmp pc@(2,%0:w)\";\n+    return \"jmp {(2,pc,%0.w)|pc@(2,%0:w)}\";\n #endif\n })\n \n@@ -7225,12 +7202,10 @@\n   \"TARGET_68020 || INTVAL (operands[1]) >= -0x8004\"\n {\n   operands[1] = GEN_INT (INTVAL (operands[1]) + 4);\n-  if (!MOTOROLA)\n-    return \"link %0,%1\";\n-  else if (INTVAL (operands[1]) >= -0x8000)\n-    return \"link.w %0,%1\";\n+  if (INTVAL (operands[1]) >= -0x8000)\n+    return \"link{.w} %0,%1\";\n   else\n-    return \"link.l %0,%1\";\n+    return \"link{.l} %0,%1\";\n })\n \n (define_expand \"unlink\"\n@@ -7263,7 +7238,7 @@\n   if (TARGET_ID_SHARED_LIBRARY)\n     {\n       operands[1] = gen_rtx_REG (Pmode, PIC_REG);\n-      return MOTOROLA ? \"move.l %?(%1),%0\" : \"movel %1@(%?), %0\";\n+      return \"move%.l {%?(%1)|%1@(%?)},%0\";\n     }\n   else if (MOTOROLA)\n     {"}]}