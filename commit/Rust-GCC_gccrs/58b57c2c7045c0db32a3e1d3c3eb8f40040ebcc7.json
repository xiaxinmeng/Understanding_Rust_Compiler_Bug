{"sha": "58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiNTdjMmM3MDQ1YzBkYjMyYTNlMWQzYzNlYjhmNDAwNDBlYmNjNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-02-28T22:20:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-02-28T22:20:46Z"}, "message": "(FUNCTION_VALUE_REGNO_P, FUNCTION_ARG_REGNO_P): Include FP registers only when TARGET_SH3E.\n\n(FUNCTION_VALUE_REGNO_P, FUNCTION_ARG_REGNO_P): Include FP\nregisters only when TARGET_SH3E.\n(PASS_IN_REG_P): Exclude BLKmode only when ! TARGET_SH3E.\n\nFrom-SVN: r11363", "tree": {"sha": "4968a82064d6ce72f7d49b99607d195a6fb5eb79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4968a82064d6ce72f7d49b99607d195a6fb5eb79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7/comments", "author": null, "committer": null, "parents": [{"sha": "5566b478bdfe8bfc554a57f2631c1d3646ac4ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5566b478bdfe8bfc554a57f2631c1d3646ac4ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5566b478bdfe8bfc554a57f2631c1d3646ac4ae2"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "13ff97d10a718dbe9d876b60b40f6ec80705f4ec", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=58b57c2c7045c0db32a3e1d3c3eb8f40040ebcc7", "patch": "@@ -656,12 +656,13 @@ extern enum reg_class reg_class_from_letter[];\n \n /* 1 if N is a possible register number for a function value. */\n #define FUNCTION_VALUE_REGNO_P(REGNO) \\\n-  ((REGNO) == FIRST_RET_REG || (REGNO) == FIRST_FP_RET_REG)\n+  ((REGNO) == FIRST_RET_REG || (TARGET_SH3E && (REGNO) == FIRST_FP_RET_REG))\n \n /* 1 if N is a possible register number for function argument passing.  */\n #define FUNCTION_ARG_REGNO_P(REGNO) \\\n-  (((REGNO) >= FIRST_PARM_REG && (REGNO) < (FIRST_PARM_REG + 4)) \\\n-   || ((REGNO >= FIRST_FP_PARM_REG && (REGNO) < (FIRST_FP_PARM_REG + 8))))\n+  (((REGNO) >= FIRST_PARM_REG && (REGNO) < (FIRST_PARM_REG + 4))\t\\\n+   || (TARGET_SH3E\t\t\t\t\t\t\t\\\n+       && (REGNO) >= FIRST_FP_PARM_REG && (REGNO) < (FIRST_FP_PARM_REG + 8)))\n \f\n /* Define a data type for recording info about an argument list\n    during the scan of that argument list.  This data type should\n@@ -730,8 +731,9 @@ struct sh_args {\n \n #define PASS_IN_REG_P(CUM, MODE, TYPE) \\\n   (ROUND_REG ((CUM), (MODE)) < NPARM_REGS (MODE)\t\t\\\n-  && ((TYPE)==0 || ! TREE_ADDRESSABLE((tree)(TYPE)))\t\t\\\n-  && ((TYPE)==0 || (MODE) != BLKmode))\n+   && ((TYPE) == 0 || ! TREE_ADDRESSABLE ((tree)(TYPE)))\t\\\n+   /* ??? This is questionable.  Should perhaps be deleted.  */\t\\\n+   && (! TARGET_SH3E || (TYPE) == 0 || (MODE) != BLKmode))\n \n /* Define where to put the arguments to a function.\n    Value is zero to push the argument on the stack,"}]}