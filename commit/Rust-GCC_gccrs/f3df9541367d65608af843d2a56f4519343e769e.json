{"sha": "f3df9541367d65608af843d2a56f4519343e769e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNkZjk1NDEzNjdkNjU2MDhhZjg0M2QyYTU2ZjQ1MTkzNDNlNzY5ZQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2004-10-28T16:19:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-10-28T16:19:26Z"}, "message": "profile.c (branch_prob): Call to init_edge_profiler added.\n\n\t* profile.c (branch_prob): Call to init_edge_profiler added.\n\t* rtl-profile.c (rtl_init_edge_profiler): New function.\n\t(rtl_gen_edge_profiler): Replaced call to insert_insn_on_edge with\n\tcall to safe_insert_insn_on_edge.\n\t(rtl_profile_hooks): rtl_init_edge_profiler added.\n\t* tree-profile.c (tree_init_edge_profiler): New function.\n\t(tree_profile_hooks): tree_init_edge_profiler added.\n\t* value-prof.h (profile_hooks) init_edge_profiler prototype added.\n\nFrom-SVN: r89764", "tree": {"sha": "5b78eb120055abb834a6216175418c0de85cefd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b78eb120055abb834a6216175418c0de85cefd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3df9541367d65608af843d2a56f4519343e769e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3df9541367d65608af843d2a56f4519343e769e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3df9541367d65608af843d2a56f4519343e769e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3df9541367d65608af843d2a56f4519343e769e/comments", "author": null, "committer": null, "parents": [{"sha": "86ce0e3d22f4e6c973397e0fd65b2cf0dbfdf633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ce0e3d22f4e6c973397e0fd65b2cf0dbfdf633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ce0e3d22f4e6c973397e0fd65b2cf0dbfdf633"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "37eafb850e00eddbd75d3058764d7aa354a264f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3df9541367d65608af843d2a56f4519343e769e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3df9541367d65608af843d2a56f4519343e769e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3df9541367d65608af843d2a56f4519343e769e", "patch": "@@ -1,3 +1,14 @@\n+2004-10-28  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* profile.c (branch_prob): Call to init_edge_profiler added.\n+\t* rtl-profile.c (rtl_init_edge_profiler): New function.\n+\t(rtl_gen_edge_profiler): Replaced call to insert_insn_on_edge with\n+\tcall to safe_insert_insn_on_edge.\n+\t(rtl_profile_hooks): rtl_init_edge_profiler added.\n+\t* tree-profile.c (tree_init_edge_profiler): New function.\n+\t(tree_profile_hooks): tree_init_edge_profiler added.\n+\t* value-prof.h (profile_hooks) init_edge_profiler prototype added.\n+\n 2004-10-28  Nick Clifton  <nickc@redhat.com>\n \n \t* config/iq2000/iq2000.c (iq2000_expand_epilogue): Use"}, {"sha": "5a0cc60cfdc02ea04580f7254973b2c4d2361629", "filename": "gcc/profile.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=f3df9541367d65608af843d2a56f4519343e769e", "patch": "@@ -1095,7 +1095,11 @@ branch_prob (void)\n   if (profile_arc_flag\n       && coverage_counter_alloc (GCOV_COUNTER_ARCS, num_instrumented))\n     {\n-      unsigned n_instrumented = instrument_edges (el);\n+      unsigned n_instrumented;\n+\n+      profile_hooks->init_edge_profiler ();\n+\n+      n_instrumented = instrument_edges (el);\n \n       if (n_instrumented != num_instrumented)\n \tabort ();"}, {"sha": "3439f472b7bd37d5c044e0e1412fd4e12ea045f1", "filename": "gcc/rtl-profile.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Frtl-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Frtl-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-profile.c?ref=f3df9541367d65608af843d2a56f4519343e769e", "patch": "@@ -64,6 +64,16 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tree.h\"\n #include \"ggc.h\"\n \n+/* Do initialization work for the edge profiler.  */\n+\n+static void\n+rtl_init_edge_profiler (void)\n+{\n+  /* gen_edge_profiler calls safe_insert_insn_on_edge which needs\n+     register liveness data to be available.  */\n+  life_analysis (NULL, 0);\n+}\n+\n /* Output instructions as RTL to increment the edge execution count.  */\n \n static void\n@@ -85,7 +95,7 @@ rtl_gen_edge_profiler (int edgeno, edge e)\n \n   sequence = get_insns ();\n   end_sequence ();\n-  insert_insn_on_edge (sequence, e);\n+  safe_insert_insn_on_edge (sequence, e);\n   rebuild_jump_labels (e->insns.r);\n }\n \n@@ -413,6 +423,7 @@ static FILE *rtl_profile_dump_file (void) {\n \f\n struct profile_hooks rtl_profile_hooks =\n {\n+  rtl_init_edge_profiler,\n   rtl_gen_edge_profiler,\n   rtl_gen_interval_profiler,\n   rtl_gen_pow2_profiler,"}, {"sha": "145c72131581d95d98bdfae8b478814abdb5adc4", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=f3df9541367d65608af843d2a56f4519343e769e", "patch": "@@ -69,6 +69,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"value-prof.h\"\n \n \f\n+\n+/* Do initialization work for the edge profiler.  */\n+\n+static void\n+tree_init_edge_profiler (void)\n+{\n+}\n+\n /* Output instructions as GIMPLE trees to increment the edge \n    execution count, and insert them on E.  We rely on \n    bsi_insert_on_edge to preserve the order.  */\n@@ -195,6 +203,7 @@ struct tree_opt_pass pass_tree_profile =\n \n struct profile_hooks tree_profile_hooks =\n {\n+  tree_init_edge_profiler,      /* init_edge_profiler */\n   tree_gen_edge_profiler,\t/* gen_edge_profiler */\n   tree_gen_interval_profiler,   /* gen_interval_profiler */\n   tree_gen_pow2_profiler,       /* gen_pow2_profiler */"}, {"sha": "b9d0d0663b2818c620089ef0388dc84f52750b21", "filename": "gcc/value-prof.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Fvalue-prof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3df9541367d65608af843d2a56f4519343e769e/gcc%2Fvalue-prof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.h?ref=f3df9541367d65608af843d2a56f4519343e769e", "patch": "@@ -80,6 +80,10 @@ extern bool value_profile_transformations (void);\n \f\n /* External declarations for edge-based profiling.  */\n struct profile_hooks {\n+\n+  /* Insert code to initialize edge profiler.  */\n+  void (*init_edge_profiler) (void);\n+\n   /* Insert code to increment an edge count.  */\n   void (*gen_edge_profiler) (int, edge);\n "}]}