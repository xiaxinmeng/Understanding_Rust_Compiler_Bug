{"sha": "1167d047bce1b342c82f18195247d218942b0262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2N2QwNDdiY2UxYjM0MmM4MmYxODE5NTI0N2QyMTg5NDJiMDI2Mg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@imgtec.com", "date": "2015-12-07T20:37:38Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2015-12-07T20:37:38Z"}, "message": "reorg.c (optimize_skip): Do not put frame related instructions in annulled delay slots.\n\n2015-12-07  Steve Ellcey  <sellcey@imgtec.com>\n\n\t* reorg.c (optimize_skip): Do not put frame related instructions\n\tin annulled delay slots.\n\t(steal_delay_list_from_target): Ditto.\n\t(fill_slots_from_thread): Ditto.\n\nFrom-SVN: r231382", "tree": {"sha": "80d772fff7db4e9f1e6aaa299a039f60d7ee2b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80d772fff7db4e9f1e6aaa299a039f60d7ee2b78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1167d047bce1b342c82f18195247d218942b0262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1167d047bce1b342c82f18195247d218942b0262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1167d047bce1b342c82f18195247d218942b0262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1167d047bce1b342c82f18195247d218942b0262/comments", "author": null, "committer": null, "parents": [{"sha": "2fa586ad989926559871b01f9825e0adfe9fd186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa586ad989926559871b01f9825e0adfe9fd186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa586ad989926559871b01f9825e0adfe9fd186"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "ade56278e4bcd0ae8bfc42d14896c16f058f1ff9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1167d047bce1b342c82f18195247d218942b0262/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1167d047bce1b342c82f18195247d218942b0262/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1167d047bce1b342c82f18195247d218942b0262", "patch": "@@ -1,3 +1,10 @@\n+2015-12-07  Steve Ellcey  <sellcey@imgtec.com>\n+\n+\t* reorg.c (optimize_skip): Do not put frame related instructions\n+\tin annulled delay slots.\n+\t(steal_delay_list_from_target): Ditto.\n+\t(fill_slots_from_thread): Ditto.\n+\n 2015-12-07  Evandro Menezes  <e.menezes@samsung.com>\n \n \t* config/aarch64/aarch64-cores.def: Use the Exynos M1 sched model."}, {"sha": "1930a5f96cd69b823982aba605d65b62b6a44746", "filename": "gcc/reorg.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1167d047bce1b342c82f18195247d218942b0262/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1167d047bce1b342c82f18195247d218942b0262/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=1167d047bce1b342c82f18195247d218942b0262", "patch": "@@ -739,6 +739,7 @@ optimize_skip (rtx_jump_insn *insn, vec<rtx_insn *> *delay_list)\n       || recog_memoized (trial) < 0\n       || (! eligible_for_annul_false (insn, 0, trial, flags)\n \t  && ! eligible_for_annul_true (insn, 0, trial, flags))\n+      || RTX_FRAME_RELATED_P (trial)\n       || can_throw_internal (trial))\n     return;\n \n@@ -1126,7 +1127,13 @@ steal_delay_list_from_target (rtx_insn *insn, rtx condition, rtx_sequence *seq,\n \t\t\t\t\t      trial, flags)))\n \t{\n \t  if (must_annul)\n-\t    used_annul = 1;\n+\t    {\n+\t      /* Frame related instructions cannot go into annulled delay\n+\t\t slots, it messes up the dwarf info.  */\n+\t      if (RTX_FRAME_RELATED_P (trial))\n+\t\treturn;\n+\t      used_annul = 1;\n+\t    }\n \t  rtx_insn *temp = copy_delay_slot_insn (trial);\n \t  INSN_FROM_TARGET_P (temp) = 1;\n \t  add_to_delay_list (temp, &new_delay_list);\n@@ -2464,9 +2471,9 @@ fill_slots_from_thread (rtx_jump_insn *insn, rtx condition,\n \t      if (eligible_for_delay (insn, *pslots_filled, trial, flags))\n \t\tgoto winner;\n \t    }\n-\t  else if (0\n-\t\t   || (ANNUL_IFTRUE_SLOTS && ! thread_if_true)\n-\t\t   || (ANNUL_IFFALSE_SLOTS && thread_if_true))\n+\t  else if (!RTX_FRAME_RELATED_P (trial)\n+\t\t   && ((ANNUL_IFTRUE_SLOTS && ! thread_if_true)\n+\t\t        || (ANNUL_IFFALSE_SLOTS && thread_if_true)))\n \t    {\n \t      old_trial = trial;\n \t      trial = try_split (pat, trial, 0);"}]}