{"sha": "525174a22213a316c4fb668d839a128ce03c6414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI1MTc0YTIyMjEzYTMxNmM0ZmI2NjhkODM5YTEyOGNlMDNjNjQxNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-08-01T11:48:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-08-01T11:48:56Z"}, "message": "graphite-clast-to-gimple.c (translate_clast_user): Rename virtual operands.\n\n2012-08-01  Richard Guenther  <rguenther@suse.de>\n\n\t* graphite-clast-to-gimple.c (translate_clast_user): Rename\n\tvirtual operands.\n\t* sese.c (graphite_copy_stmts_from_block): Do not rename virtual\n\toperands here.\n\t* tree-call-cdce.c (tree_call_cdce): Use\n\tmark_virtual_operands_for_renaming.\n\t* tree-eh.c (sink_clobbers): Simplify.\n\t* tree-flow.h (mark_sym_for_renaming): Remove.\n\t(mark_virtual_operands_for_renaming): New function.\n\t* tree-if-conv.c (tree_if_conversion): Use\n\tmark_virtual_operands_for_renaming.\n\t* tree-inline.c (update_ssa_across_abnormal_edges): Likewise.\n\t* tree-into-ssa.c (mark_sym_for_renaming): Remove.\n\t(mark_virtual_operands_for_renaming): New function.\n\t* tree-loop-distribution.c (tree_loop_distribution): Use\n\tmark_virtual_operands_for_renaming.\n\t* tree-ssa-dce.c (mark_virtual_operand_for_renaming): Do not\n\tupdate stmts, use mark_virtual_operands_for_renaming.\n\t* tree-ssa-tail-merge.c (release_last_vdef): Remove.\n\t(replace_block_by): Adjust.\n\t(tail_merge_optimize): Use mark_virtual_operands_for_renaming.\n\t* tree-tailcall.c (tree_optimize_tail_calls_1): Use\n\tmark_virtual_operands_for_renaming.\n\t* tree-vect-slp.c (vect_slp_transform_bb): Likewise.\n\t* tree-vectorizer.c (vectorize_loops): Likewise.\n\nFrom-SVN: r190034", "tree": {"sha": "e525938828010ae0d2bba879beb2a05b69f70760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e525938828010ae0d2bba879beb2a05b69f70760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/525174a22213a316c4fb668d839a128ce03c6414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525174a22213a316c4fb668d839a128ce03c6414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/525174a22213a316c4fb668d839a128ce03c6414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525174a22213a316c4fb668d839a128ce03c6414/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "137143106086c762d05037b4d420c1eaf8fe6fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137143106086c762d05037b4d420c1eaf8fe6fbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/137143106086c762d05037b4d420c1eaf8fe6fbc"}], "stats": {"total": 123, "additions": 56, "deletions": 67}, "files": [{"sha": "6faadd93ae8b57e57cef8e0f58fc920a235a66ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -1,3 +1,31 @@\n+2012-08-01  Richard Guenther  <rguenther@suse.de>\n+\n+\t* graphite-clast-to-gimple.c (translate_clast_user): Rename\n+\tvirtual operands.\n+\t* sese.c (graphite_copy_stmts_from_block): Do not rename virtual\n+\toperands here.\n+\t* tree-call-cdce.c (tree_call_cdce): Use\n+\tmark_virtual_operands_for_renaming.\n+\t* tree-eh.c (sink_clobbers): Simplify.\n+\t* tree-flow.h (mark_sym_for_renaming): Remove.\n+\t(mark_virtual_operands_for_renaming): New function.\n+\t* tree-if-conv.c (tree_if_conversion): Use\n+\tmark_virtual_operands_for_renaming.\n+\t* tree-inline.c (update_ssa_across_abnormal_edges): Likewise.\n+\t* tree-into-ssa.c (mark_sym_for_renaming): Remove.\n+\t(mark_virtual_operands_for_renaming): New function.\n+\t* tree-loop-distribution.c (tree_loop_distribution): Use\n+\tmark_virtual_operands_for_renaming.\n+\t* tree-ssa-dce.c (mark_virtual_operand_for_renaming): Do not\n+\tupdate stmts, use mark_virtual_operands_for_renaming.\n+\t* tree-ssa-tail-merge.c (release_last_vdef): Remove.\n+\t(replace_block_by): Adjust.\n+\t(tail_merge_optimize): Use mark_virtual_operands_for_renaming.\n+\t* tree-tailcall.c (tree_optimize_tail_calls_1): Use\n+\tmark_virtual_operands_for_renaming.\n+\t* tree-vect-slp.c (vect_slp_transform_bb): Likewise.\n+\t* tree-vectorizer.c (vectorize_loops): Likewise.\n+\n 2012-08-01  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow.h (struct gimple_df): Remove syms_to_rename member,"}, {"sha": "42f96c716af07d778cbe63ad711f7497755eef41", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -1099,6 +1099,7 @@ translate_clast_user (struct clast_user_stmt *stmt, edge next_e,\n \n   new_bb = next_e->src;\n   mark_bb_with_pbb (pbb, new_bb, bb_pbb_mapping);\n+  mark_virtual_operands_for_renaming (cfun);\n   update_ssa (TODO_update_ssa);\n \n   return next_e;"}, {"sha": "acae527b91bfcc72d9e78fedf247632af5f696c9", "filename": "gcc/sese.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -604,7 +604,6 @@ graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t operands.  */\n       copy = gimple_copy (stmt);\n       gsi_insert_after (&gsi_tgt, copy, GSI_NEW_STMT);\n-      mark_sym_for_renaming (gimple_vop (cfun));\n \n       maybe_duplicate_eh_stmt (copy, stmt);\n       gimple_duplicate_stmt_histograms (cfun, copy, cfun, stmt);"}, {"sha": "06abda524878c7b1a168077b512f781d194c9641", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -894,7 +894,7 @@ tree_call_cdce (void)\n       free_dominance_info (CDI_POST_DOMINATORS);\n       /* As we introduced new control-flow we need to insert PHI-nodes\n          for the call-clobbers of the remaining call.  */\n-      mark_sym_for_renaming (gimple_vop (cfun));\n+      mark_virtual_operands_for_renaming (cfun);\n       return (TODO_update_ssa | TODO_cleanup_cfg | TODO_ggc_collect\n               | TODO_remove_unused_locals);\n     }"}, {"sha": "bd9294dedc5d41949d5f2a5648e703c3dfc3220b", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -3250,22 +3250,18 @@ sink_clobbers (basic_block bb)\n   for (gsi_prev (&gsi); !gsi_end_p (gsi); gsi_prev (&gsi))\n     {\n       gimple stmt = gsi_stmt (gsi);\n-      tree vdef;\n       if (is_gimple_debug (stmt))\n \tcontinue;\n       if (gimple_code (stmt) == GIMPLE_LABEL)\n \tbreak;\n       unlink_stmt_vdef (stmt);\n       gsi_remove (&gsi, false);\n-      vdef = gimple_vdef (stmt);\n-      if (vdef && TREE_CODE (vdef) == SSA_NAME)\n-\t{\n-\t  release_ssa_name (vdef);\n-\t  vdef = SSA_NAME_VAR (vdef);\n-\t  mark_sym_for_renaming (vdef);\n-\t  gimple_set_vdef (stmt, vdef);\n-\t  gimple_set_vuse (stmt, vdef);\n-\t}\n+      /* Trigger the operand scanner to cause renaming for virtual\n+         operands for this statement.\n+\t ???  Given the simple structure of this code manually\n+\t figuring out the reaching definition should not be too hard.  */\n+      if (gimple_vuse (stmt))\n+\tgimple_set_vuse (stmt, NULL_TREE);\n       gsi_insert_before (&dgsi, stmt, GSI_SAME_STMT);\n     }\n "}, {"sha": "04cd2a77669fa611befed891106d5a6d14ad3a3c", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -565,7 +565,7 @@ bool need_ssa_update_p (struct function *);\n bool name_registered_for_update_p (tree);\n void release_ssa_name_after_update_ssa (tree);\n void compute_global_livein (bitmap, bitmap);\n-void mark_sym_for_renaming (tree);\n+void mark_virtual_operands_for_renaming (struct function *);\n tree get_current_def (tree);\n void set_current_def (tree, tree);\n "}, {"sha": "e8a65eab7589e58d78f08f9bf962d44cccb134d0", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -1747,7 +1747,7 @@ tree_if_conversion (struct loop *loop)\n   combine_blocks (loop);\n \n   if (flag_tree_loop_if_convert_stores)\n-    mark_sym_for_renaming (gimple_vop (cfun));\n+    mark_virtual_operands_for_renaming (cfun);\n \n   changed = true;\n "}, {"sha": "7a9b7e0db9beb595400bc56896675a8eb9b310d9", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -1870,7 +1870,7 @@ update_ssa_across_abnormal_edges (basic_block bb, basic_block ret_bb,\n \n \t    if (!is_gimple_reg (PHI_RESULT (phi)))\n \t      {\n-\t\tmark_sym_for_renaming (SSA_NAME_VAR (PHI_RESULT (phi)));\n+\t\tmark_virtual_operands_for_renaming (cfun);\n \t\tcontinue;\n \t      }\n "}, {"sha": "995a3a79e32c66ea64562cae5468c9dd8b25976a", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -2944,17 +2944,13 @@ register_new_name_mapping (tree new_tree, tree old)\n }\n \n \n-/* Register symbol SYM to be renamed by update_ssa.  */\n+/* Mark virtual operands of FN for renaming by update_ssa.  */\n \n void\n-mark_sym_for_renaming (tree sym)\n+mark_virtual_operands_for_renaming (struct function *fn)\n {\n-  if (TREE_CODE (sym) == VAR_DECL\n-      && VAR_DECL_IS_VIRTUAL_OPERAND (sym))\n-    {\n-      cfun->gimple_df->ssa_renaming_needed = 1;\n-      cfun->gimple_df->rename_vops = 1;\n-    }\n+  fn->gimple_df->ssa_renaming_needed = 1;\n+  fn->gimple_df->rename_vops = 1;\n }\n \n "}, {"sha": "394a38c3dbae1c0c1653ca46972f420477fe33fb", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -1515,7 +1515,7 @@ tree_loop_distribution (void)\n \n   if (changed)\n     {\n-      mark_sym_for_renaming (gimple_vop (cfun));\n+      mark_virtual_operands_for_renaming (cfun);\n       rewrite_into_loop_closed_ssa (NULL, TODO_update_ssa);\n     }\n "}, {"sha": "c1db16b7fec0a849830568e92d26a600f6ac04b0", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -995,31 +995,32 @@ propagate_necessity (struct edge_list *el)\n }\n \n /* Replace all uses of NAME by underlying variable and mark it\n-   for renaming.  */\n+   for renaming.  This assumes the defining statement of NAME is\n+   going to be removed.  */\n \n void\n mark_virtual_operand_for_renaming (tree name)\n {\n+  tree name_var = SSA_NAME_VAR (name);\n   bool used = false;\n   imm_use_iterator iter;\n   use_operand_p use_p;\n   gimple stmt;\n-  tree name_var;\n \n-  name_var = SSA_NAME_VAR (name);\n+  gcc_assert (VAR_DECL_IS_VIRTUAL_OPERAND (name_var));\n   FOR_EACH_IMM_USE_STMT (stmt, iter, name)\n     {\n       FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n         SET_USE (use_p, name_var);\n-      update_stmt (stmt);\n       used = true;\n     }\n   if (used)\n-    mark_sym_for_renaming (name_var);\n+    mark_virtual_operands_for_renaming (cfun);\n }\n \n-/* Replace all uses of result of PHI by underlying variable and mark it\n-   for renaming.  */\n+/* Replace all uses of the virtual PHI result by its underlying variable\n+   and mark it for renaming.  This assumes the PHI node is going to be\n+   removed.  */\n \n void\n mark_virtual_phi_result_for_renaming (gimple phi)"}, {"sha": "ab37336d0c47acbe4d7dbbfccefb576566ae7218", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -812,37 +812,6 @@ same_succ_flush_bbs (bitmap bbs)\n     same_succ_flush_bb (BASIC_BLOCK (i));\n }\n \n-/* Release the last vdef in BB, either normal or phi result.  */\n-\n-static void\n-release_last_vdef (basic_block bb)\n-{\n-  gimple_stmt_iterator i;\n-\n-  for (i = gsi_last_bb (bb); !gsi_end_p (i); gsi_prev_nondebug (&i))\n-    {\n-      gimple stmt = gsi_stmt (i);\n-      if (gimple_vdef (stmt) == NULL_TREE)\n-\tcontinue;\n-\n-      mark_virtual_operand_for_renaming (gimple_vdef (stmt));\n-      return;\n-    }\n-\n-  for (i = gsi_start_phis (bb); !gsi_end_p (i); gsi_next (&i))\n-    {\n-      gimple phi = gsi_stmt (i);\n-      tree res = gimple_phi_result (phi);\n-\n-      if (is_gimple_reg (res))\n-\tcontinue;\n-\n-      mark_virtual_phi_result_for_renaming (phi);\n-      return;\n-    }\n-  \n-}\n-\n /* For deleted_bb_preds, find bbs with same successors.  */\n \n static void\n@@ -1477,7 +1446,6 @@ replace_block_by (basic_block bb1, basic_block bb2)\n   bb1->frequency = 0;\n \n   /* Do updates that use bb1, before deleting bb1.  */\n-  release_last_vdef (bb1);\n   same_succ_flush_bb (bb1);\n \n   delete_basic_block (bb1);\n@@ -1654,7 +1622,7 @@ tail_merge_optimize (unsigned int todo)\n \t}\n \n       todo |= (TODO_verify_ssa | TODO_verify_stmts | TODO_verify_flow);\n-      mark_sym_for_renaming (gimple_vop (cfun));\n+      mark_virtual_operands_for_renaming (cfun);\n     }\n \n   delete_worklist ();"}, {"sha": "5de583749f3ec73fcbfe4c3a892ceee120776a48", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -1029,7 +1029,7 @@ tree_optimize_tail_calls_1 (bool opt_tailcalls)\n      header of the loop created by tail recursion elimination.  Do so\n      by triggering the SSA renamer.  */\n   if (phis_constructed)\n-    mark_sym_for_renaming (gimple_vop (cfun));\n+    mark_virtual_operands_for_renaming (cfun);\n \n   if (changed)\n     return TODO_cleanup_cfg | TODO_update_ssa_only_virtuals;"}, {"sha": "782172fa80a17e1b30f4f7aa6fb23e308a7ce24e", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -3149,7 +3149,7 @@ vect_slp_transform_bb (basic_block bb)\n         }\n     }\n \n-  mark_sym_for_renaming (gimple_vop (cfun));\n+  mark_virtual_operands_for_renaming (cfun);\n   /* The memory tags and pointers in vectorized statements need to\n      have their SSA forms updated.  FIXME, why can't this be delayed\n      until all the loops have been transformed?  */"}, {"sha": "6944d139470f43d78aa4987d303b9278259bc867", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525174a22213a316c4fb668d839a128ce03c6414/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=525174a22213a316c4fb668d839a128ce03c6414", "patch": "@@ -223,7 +223,7 @@ vectorize_loops (void)\n \n   /*  ----------- Finalize. -----------  */\n \n-  mark_sym_for_renaming (gimple_vop (cfun));\n+  mark_virtual_operands_for_renaming (cfun);\n \n   for (i = 1; i < vect_loops_num; i++)\n     {"}]}