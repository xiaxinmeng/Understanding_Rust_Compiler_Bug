{"sha": "d4eb08fe028d95d6e4055c96f7fa40517653c30c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRlYjA4ZmUwMjhkOTVkNmU0MDU1Yzk2ZjdmYTQwNTE3NjUzYzMwYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-19T07:10:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-19T07:10:42Z"}, "message": "re PR tree-optimization/87349 (ICE: Segmentation fault (in useless_type_conversion_p or is_gimple_reg_type))\n\n2018-09-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87349\n\tPR tree-optimization/87342\n\t* tree-ssa-sccvn.c (do_rpo_vn): Iterate max_rpo computation.\n\n\t* gcc.dg/torture/pr87349-1.c: New testcase.\n\t* gcc.dg/torture/pr87349-2.c: Likewise.\n\t* gcc.dg/torture/pr87342.c: Likewise.\n\nFrom-SVN: r264419", "tree": {"sha": "044f5418ea452b1b3be0a5b352cc617982b9add9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/044f5418ea452b1b3be0a5b352cc617982b9add9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4eb08fe028d95d6e4055c96f7fa40517653c30c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4eb08fe028d95d6e4055c96f7fa40517653c30c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4eb08fe028d95d6e4055c96f7fa40517653c30c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4eb08fe028d95d6e4055c96f7fa40517653c30c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "907739318d0d8695b077ab7552cf1ddb478d4576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907739318d0d8695b077ab7552cf1ddb478d4576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907739318d0d8695b077ab7552cf1ddb478d4576"}], "stats": {"total": 163, "additions": 160, "deletions": 3}, "files": [{"sha": "68d8be20e71dcb78e679251906acadbf279f749d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4eb08fe028d95d6e4055c96f7fa40517653c30c", "patch": "@@ -1,3 +1,9 @@\n+2018-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87349\n+\tPR tree-optimization/87342\n+\t* tree-ssa-sccvn.c (do_rpo_vn): Iterate max_rpo computation.\n+\n 2018-09-18  Marek Polacek  <polacek@redhat.com>\n \n \tP1064R0 - Allowing Virtual Function Calls in Constant Expressions"}, {"sha": "f26e1e29fc21771bb85007067c6aa80ef50206f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4eb08fe028d95d6e4055c96f7fa40517653c30c", "patch": "@@ -1,3 +1,11 @@\n+2018-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87349\n+\tPR tree-optimization/87342\n+\t* gcc.dg/torture/pr87349-1.c: New testcase.\n+\t* gcc.dg/torture/pr87349-2.c: Likewise.\n+\t* gcc.dg/torture/pr87342.c: Likewise.\n+\n 2018-09-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/29550"}, {"sha": "ba33fb4656e5d47f63b7ec3a29922214301701c1", "filename": "gcc/testsuite/gcc.dg/torture/pr87342.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87342.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87342.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87342.c?ref=d4eb08fe028d95d6e4055c96f7fa40517653c30c", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do compile } */\n+\n+int ix;\n+\n+void\n+o6 (int rh)\n+{\n+  if (rh == 0)\n+    {\n+      ix = 0;\n+      while (ix < 1)\n+\t{\n+\t}\n+\n+      for (;;)\n+\tif (ix == 0)\n+\t  while (rh < 1)\n+\t    {\n+\t      if (rh == 0)\n+\t\t{\n+\t\t  __builtin_unreachable ();\n+\n+kp:\n+\t\t  if (ix == 0)\n+\t\t    {\n+hk:\n+\t\t      ix = 0;\n+\t\t    }\n+\t\t}\n+\n+\t      while (rh < 1)\n+\t\tif (ix == 0)\n+\t\t  goto kp;\n+\n+\t      while (rh < 1)\n+\t\t{\n+\t\t}\n+\t    }\n+\telse\n+\t  goto kp;\n+    }\n+\n+  goto hk;\n+}"}, {"sha": "27e5fdb4f48de7f8ffd60c1c6f8c3fc1fa9ef2b4", "filename": "gcc/testsuite/gcc.dg/torture/pr87349-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87349-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87349-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87349-1.c?ref=d4eb08fe028d95d6e4055c96f7fa40517653c30c", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+\n+void\n+h1 (int *fh, int pw)\n+{\n+  *fh = 0;\n+  if (*fh != 0)\n+    for (;;)\n+      {\n+\tfh = &pw;\n+\n+\tif (pw == 0)\n+\t  {\n+\t  }\n+\telse\n+\t  while (pw < 1)\n+\t    {\n+\t      if (pw == 0)\n+\t\t{\n+ut:\n+\t\t  ;\n+\t\t}\n+\n+\t      ++pw;\n+\t    }\n+\n+\tif (pw == 0)\n+\t  goto ut;\n+      }\n+\n+  goto ut;\n+}\n+"}, {"sha": "e8160ac4daf314babe275b37ce0f38b0203095a9", "filename": "gcc/testsuite/gcc.dg/torture/pr87349-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87349-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87349-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87349-2.c?ref=d4eb08fe028d95d6e4055c96f7fa40517653c30c", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+\n+void\n+h1 (int *fh, int pw)\n+{\n+  *fh = 0;\n+  if (*fh != 0)\n+    for (;;)\n+      {\n+\tfh = &pw;\n+\n+\tif (pw == 0)\n+\t  {\n+\t  }\n+\telse\n+\t  while (pw < 1)\n+\t    {\n+\t      if (pw == 0)\n+\t\t{\n+ut:\n+\t\t  ;\n+\t\t}\n+\n+\t      ++pw;\n+\t    }\n+\n+\tif (pw == *fh)\n+\t  goto ut;\n+      }\n+\n+  goto ut;\n+}\n+"}, {"sha": "cee3d73a75b1eb0171e2264a8f84668f43b823aa", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb08fe028d95d6e4055c96f7fa40517653c30c/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=d4eb08fe028d95d6e4055c96f7fa40517653c30c", "patch": "@@ -6374,6 +6374,7 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n   vn_valueize = rpo_vn_valueize;\n \n   /* Initialize the unwind state and edge/BB executable state.  */\n+  bool need_max_rpo_iterate = false;\n   for (int i = 0; i < n; ++i)\n     {\n       basic_block bb = BASIC_BLOCK_FOR_FN (fn, rpo[i]);\n@@ -6388,11 +6389,14 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n \t  if (e->flags & EDGE_DFS_BACK)\n \t    has_backedges = true;\n \t  e->flags &= ~EDGE_EXECUTABLE;\n-\t  if (e == entry)\n+\t  if (iterate || e == entry)\n \t    continue;\n \t  if (bb_to_rpo[e->src->index] > i)\n-\t    rpo_state[i].max_rpo = MAX (rpo_state[i].max_rpo,\n-\t\t\t\t\tbb_to_rpo[e->src->index]);\n+\t    {\n+\t      rpo_state[i].max_rpo = MAX (rpo_state[i].max_rpo,\n+\t\t\t\t\t  bb_to_rpo[e->src->index]);\n+\t      need_max_rpo_iterate = true;\n+\t    }\n \t  else\n \t    rpo_state[i].max_rpo\n \t      = MAX (rpo_state[i].max_rpo,\n@@ -6403,6 +6407,35 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n   entry->flags |= EDGE_EXECUTABLE;\n   entry->dest->flags |= BB_EXECUTABLE;\n \n+  /* When there are irreducible regions the simplistic max_rpo computation\n+     above for the case of backedges doesn't work and we need to iterate\n+     until there are no more changes.  */\n+  unsigned nit = 0;\n+  while (need_max_rpo_iterate)\n+    {\n+      nit++;\n+      need_max_rpo_iterate = false;\n+      for (int i = 0; i < n; ++i)\n+\t{\n+\t  basic_block bb = BASIC_BLOCK_FOR_FN (fn, rpo[i]);\n+\t  edge e;\n+\t  edge_iterator ei;\n+\t  FOR_EACH_EDGE (e, ei, bb->preds)\n+\t    {\n+\t      if (e == entry)\n+\t\tcontinue;\n+\t      int max_rpo = MAX (rpo_state[i].max_rpo,\n+\t\t\t\t rpo_state[bb_to_rpo[e->src->index]].max_rpo);\n+\t      if (rpo_state[i].max_rpo != max_rpo)\n+\t\t{\n+\t\t  rpo_state[i].max_rpo = max_rpo;\n+\t\t  need_max_rpo_iterate = true;\n+\t\t}\n+\t    }\n+\t}\n+    }\n+  statistics_histogram_event (cfun, \"RPO max_rpo iterations\", nit);\n+\n   /* As heuristic to improve compile-time we handle only the N innermost\n      loops and the outermost one optimistically.  */\n   if (iterate)"}]}