{"sha": "64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRjYmYyM2QxZjQyYzNhYzllNTQ1MDc3ODY4YzZiNjY5YzFiNWI1Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-08-23T15:55:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-08-23T15:55:22Z"}, "message": "ipa-utils.h (method_class_type): Declare.\n\n\n\t* ipa-utils.h (method_class_type): Declare.\n\t* ipa-devirt.c (method_class_type): Export.\n\n\t* cgraphunit.c (analyze_functions): Do basic devirtualization;\n\tdo not walk base classes of anonymous types.\n\nFrom-SVN: r201944", "tree": {"sha": "2e1a9c0b0d0fe3d55d04432be9805968347279f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e1a9c0b0d0fe3d55d04432be9805968347279f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/comments", "author": null, "committer": null, "parents": [{"sha": "c4be65686206f422b2a3401b2e18bccf830984f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4be65686206f422b2a3401b2e18bccf830984f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4be65686206f422b2a3401b2e18bccf830984f4"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "1f99c1e73226d9c85a81aa686b8937d3b0ccee81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "patch": "@@ -1,5 +1,8 @@\n 2013-08-23  Jan Hubicka  <jh@suse.cz>\n \n+\t* ipa-utils.h (method_class_type): Declare.\n+\t* ipa-devirt.c (method_class_type): Export.\n+\n \t* cgraphunit.c (analyze_functions): Do basic devirtualization;\n \tdo not walk base classes of anonymous types.\n "}, {"sha": "0b678bd750d2344dfd027730c43edb11b76b3085", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "patch": "@@ -342,7 +342,7 @@ dump_type_inheritance_graph (FILE *f)\n /* Given method type T, return type of class it belongs to.\n    Lookup this pointer and get its type.    */\n \n-static tree\n+tree\n method_class_type (tree t)\n {\n   tree first_parm_type = TREE_VALUE (TYPE_ARG_TYPES (t));"}, {"sha": "427245509b03f69baed017d9d83fb784e03d424e", "filename": "gcc/ipa-utils.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/gcc%2Fipa-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbf23d1f42c3ac9e545077868c6b669c1b5b5c/gcc%2Fipa-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.h?ref=64cbf23d1f42c3ac9e545077868c6b669c1b5b5c", "patch": "@@ -59,6 +59,7 @@ odr_type get_odr_type (tree, bool insert = false);\n void dump_possible_polymorphic_call_targets (FILE *, tree, HOST_WIDE_INT);\n bool possible_polymorphic_call_target_p (tree, HOST_WIDE_INT,\n \t\t\t\t\t struct cgraph_node *n);\n+tree method_class_type (tree);\n \n /* Return vector containing possible targets of polymorphic call E.\n    If FINALP is non-NULL, store true if the list is complette. "}]}