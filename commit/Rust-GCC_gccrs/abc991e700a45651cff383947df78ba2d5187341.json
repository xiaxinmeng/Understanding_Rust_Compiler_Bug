{"sha": "abc991e700a45651cff383947df78ba2d5187341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJjOTkxZTcwMGE0NTY1MWNmZjM4Mzk0N2RmNzhiYTJkNTE4NzM0MQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2013-11-14T18:38:08Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2013-11-14T18:38:08Z"}, "message": "rs6000.c (USE_FP_FOR_ARG_P): Remove TYPE argument.\n\n2013-11-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n\n\t* config/rs6000/rs6000.c (USE_FP_FOR_ARG_P): Remove TYPE argument.\n\t(USE_ALTIVEC_FOR_ARG_P): Likewise.\n\t(rs6000_darwin64_record_arg_advance_recurse): Update uses.\n\t(rs6000_function_arg_advance_1):Likewise.\n\t(rs6000_darwin64_record_arg_recurse): Likewise.\n\t(rs6000_function_arg): Likewise.\n\t(rs6000_arg_partial_bytes): Likewise.\n\nFrom-SVN: r204805", "tree": {"sha": "64b0c423c008b5d784d89bc4a33c07e788ccf43b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64b0c423c008b5d784d89bc4a33c07e788ccf43b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abc991e700a45651cff383947df78ba2d5187341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abc991e700a45651cff383947df78ba2d5187341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abc991e700a45651cff383947df78ba2d5187341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abc991e700a45651cff383947df78ba2d5187341/comments", "author": null, "committer": null, "parents": [{"sha": "008e32c018844741b221de0aa8c910f72fe8e1e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008e32c018844741b221de0aa8c910f72fe8e1e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/008e32c018844741b221de0aa8c910f72fe8e1e8"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "c51ea9b3dd149ac402216315c4bb510c4b4cfd66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abc991e700a45651cff383947df78ba2d5187341/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abc991e700a45651cff383947df78ba2d5187341/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abc991e700a45651cff383947df78ba2d5187341", "patch": "@@ -1,3 +1,13 @@\n+2013-11-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (USE_FP_FOR_ARG_P): Remove TYPE argument.\n+\t(USE_ALTIVEC_FOR_ARG_P): Likewise.\n+\t(rs6000_darwin64_record_arg_advance_recurse): Update uses.\n+\t(rs6000_function_arg_advance_1):Likewise.\n+\t(rs6000_darwin64_record_arg_recurse): Likewise.\n+\t(rs6000_function_arg): Likewise.\n+\t(rs6000_arg_partial_bytes): Likewise.\n+\n 2013-11-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_option_override_internal): Replace"}, {"sha": "faeacb028892983507cdce9b635ebd33ded6769f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abc991e700a45651cff383947df78ba2d5187341/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abc991e700a45651cff383947df78ba2d5187341/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=abc991e700a45651cff383947df78ba2d5187341", "patch": "@@ -8439,13 +8439,13 @@ rs6000_member_type_forces_blk (const_tree field, enum machine_mode mode)\n }\n \f\n /* Nonzero if we can use a floating-point register to pass this arg.  */\n-#define USE_FP_FOR_ARG_P(CUM,MODE,TYPE)\t\t\\\n+#define USE_FP_FOR_ARG_P(CUM,MODE)\t\t\\\n   (SCALAR_FLOAT_MODE_P (MODE)\t\t\t\\\n    && (CUM)->fregno <= FP_ARG_MAX_REG\t\t\\\n    && TARGET_HARD_FLOAT && TARGET_FPRS)\n \n /* Nonzero if we can use an AltiVec register to pass this arg.  */\n-#define USE_ALTIVEC_FOR_ARG_P(CUM,MODE,TYPE,NAMED)\t\t\\\n+#define USE_ALTIVEC_FOR_ARG_P(CUM,MODE,NAMED)\t\t\t\\\n   (ALTIVEC_OR_VSX_VECTOR_MODE (MODE)\t\t\t\t\\\n    && (CUM)->vregno <= ALTIVEC_ARG_MAX_REG\t\t\t\\\n    && TARGET_ALTIVEC_ABI\t\t\t\t\t\\\n@@ -8894,7 +8894,7 @@ rs6000_darwin64_record_arg_advance_recurse (CUMULATIVE_ARGS *cum,\n \n \tif (TREE_CODE (ftype) == RECORD_TYPE)\n \t  rs6000_darwin64_record_arg_advance_recurse (cum, ftype, bitpos);\n-\telse if (USE_FP_FOR_ARG_P (cum, mode, ftype))\n+\telse if (USE_FP_FOR_ARG_P (cum, mode))\n \t  {\n \t    unsigned n_fpregs = (GET_MODE_SIZE (mode) + 7) >> 3;\n \t    rs6000_darwin64_record_arg_advance_flush (cum, bitpos, 0);\n@@ -8935,7 +8935,7 @@ rs6000_darwin64_record_arg_advance_recurse (CUMULATIVE_ARGS *cum,\n \t    else\n \t      cum->words += n_fpregs;\n \t  }\n-\telse if (USE_ALTIVEC_FOR_ARG_P (cum, mode, type, 1))\n+\telse if (USE_ALTIVEC_FOR_ARG_P (cum, mode, 1))\n \t  {\n \t    rs6000_darwin64_record_arg_advance_flush (cum, bitpos, 0);\n \t    cum->vregno++;\n@@ -8998,7 +8998,7 @@ rs6000_function_arg_advance_1 (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n     {\n       bool stack = false;\n \n-      if (USE_ALTIVEC_FOR_ARG_P (cum, mode, type, named))\n+      if (USE_ALTIVEC_FOR_ARG_P (cum, mode, named))\n \t{\n \t  cum->vregno++;\n \t  if (!TARGET_ALTIVEC)\n@@ -9371,7 +9371,7 @@ rs6000_darwin64_record_arg_recurse (CUMULATIVE_ARGS *cum, const_tree type,\n \n \tif (TREE_CODE (ftype) == RECORD_TYPE)\n \t  rs6000_darwin64_record_arg_recurse (cum, ftype, bitpos, rvec, k);\n-\telse if (cum->named && USE_FP_FOR_ARG_P (cum, mode, ftype))\n+\telse if (cum->named && USE_FP_FOR_ARG_P (cum, mode))\n \t  {\n \t    unsigned n_fpreg = (GET_MODE_SIZE (mode) + 7) >> 3;\n #if 0\n@@ -9399,7 +9399,7 @@ rs6000_darwin64_record_arg_recurse (CUMULATIVE_ARGS *cum, const_tree type,\n \t    if (mode == TFmode || mode == TDmode)\n \t      cum->fregno++;\n \t  }\n-\telse if (cum->named && USE_ALTIVEC_FOR_ARG_P (cum, mode, ftype, 1))\n+\telse if (cum->named && USE_ALTIVEC_FOR_ARG_P (cum, mode, 1))\n \t  {\n \t    rs6000_darwin64_record_arg_flush (cum, bitpos, rvec, k);\n \t    rvec[(*k)++]\n@@ -9584,7 +9584,7 @@ rs6000_function_arg (cumulative_args_t cum_v, enum machine_mode mode,\n       /* Else fall through to usual handling.  */\n     }\n \n-  if (USE_ALTIVEC_FOR_ARG_P (cum, mode, type, named))\n+  if (USE_ALTIVEC_FOR_ARG_P (cum, mode, named))\n     if (TARGET_64BIT && ! cum->prototype)\n       {\n \t/* Vector parameters get passed in vector register\n@@ -9712,7 +9712,7 @@ rs6000_function_arg (cumulative_args_t cum_v, enum machine_mode mode,\n       if (mode == TDmode && (cum->fregno % 2) == 1)\n \tcum->fregno++;\n \n-      if (USE_FP_FOR_ARG_P (cum, mode, type))\n+      if (USE_FP_FOR_ARG_P (cum, mode))\n \t{\n \t  rtx rvec[GP_ARG_NUM_REG + 1];\n \t  rtx r;\n@@ -9828,7 +9828,7 @@ rs6000_arg_partial_bytes (cumulative_args_t cum_v, enum machine_mode mode,\n   if (DEFAULT_ABI == ABI_V4)\n     return 0;\n \n-  if (USE_ALTIVEC_FOR_ARG_P (cum, mode, type, named)\n+  if (USE_ALTIVEC_FOR_ARG_P (cum, mode, named)\n       && cum->nargs_prototype >= 0)\n     return 0;\n \n@@ -9838,7 +9838,7 @@ rs6000_arg_partial_bytes (cumulative_args_t cum_v, enum machine_mode mode,\n \n   align_words = rs6000_parm_start (mode, type, cum->words);\n \n-  if (USE_FP_FOR_ARG_P (cum, mode, type))\n+  if (USE_FP_FOR_ARG_P (cum, mode))\n     {\n       /* If we are passing this arg in the fixed parameter save area\n \t (gprs or memory) as well as fprs, then this function should"}]}