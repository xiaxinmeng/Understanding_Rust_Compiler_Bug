{"sha": "13c594155d94f64e49681064ddb1a9e4e02a6562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNjNTk0MTU1ZDk0ZjY0ZTQ5NjgxMDY0ZGRiMWE5ZTRlMDJhNjU2Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-07-09T19:22:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-07-09T19:22:03Z"}, "message": "re PR target/27855 (reassociation causes the RA to be confused)\n\n        PR target/27855\n        * doc/extend.texi: Add ftree-reassoc flag.\n        * common.opt (ftree-reassoc): New flag.\n        * tree-ssa-reassoc.c (gate_tree_ssa_reassoc): New static function.\n        (struct tree_opt_pass pass_reassoc): Use gate_tree_ssa_reassoc.\n\nFrom-SVN: r126491", "tree": {"sha": "a7d61234c913d65d41ef83d40ec2e713ee5e9f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7d61234c913d65d41ef83d40ec2e713ee5e9f49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13c594155d94f64e49681064ddb1a9e4e02a6562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c594155d94f64e49681064ddb1a9e4e02a6562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c594155d94f64e49681064ddb1a9e4e02a6562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c594155d94f64e49681064ddb1a9e4e02a6562/comments", "author": null, "committer": null, "parents": [{"sha": "15e25df5c772b13a68a4ced2fb466cd16eaf36d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e25df5c772b13a68a4ced2fb466cd16eaf36d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e25df5c772b13a68a4ced2fb466cd16eaf36d4"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "2c301591a95cb1d5e3c12a6744b4aeef332950d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13c594155d94f64e49681064ddb1a9e4e02a6562", "patch": "@@ -1,3 +1,11 @@\n+2007-07-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/27855\n+\t* doc/invoke.texi: Add ftree-reassoc flag.\n+\t* common.opt (ftree-reassoc): New flag.\n+\t* tree-ssa-reassoc.c (gate_tree_ssa_reassoc): New static function.\n+\t(struct tree_opt_pass pass_reassoc): Use gate_tree_ssa_reassoc.\n+\n 2007-07-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR tree-optimization/32681\n@@ -2848,7 +2856,7 @@\n 2007-06-08  Harsha Jagasia <harsha.jagasia@amd.com>\n \t    Tony Linthicum <tony.linthicum@amd.com>\n \n-\t* doc/extend.texi: Add fvect-cost-model flag.\n+\t* doc/invoke.texi: Add fvect-cost-model flag.\n \t* common.opt (fvect-cost-model): New flag.\n \t* tree-vectorizer.c (new_stmt_vec_info): Initialize inside and outside\n \tcost fields in stmt_vec_info struct for STMT."}, {"sha": "dfbbf92f10a4f3eba597024d57953cf156e04873", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=13c594155d94f64e49681064ddb1a9e4e02a6562", "patch": "@@ -1063,6 +1063,10 @@ ftree-pre\n Common Report Var(flag_tree_pre) Optimization\n Enable SSA-PRE optimization on trees\n \n+ftree-reassoc\n+Common Report Var(flag_tree_reassoc) Init(1) Optimization\n+Enable reassociation on tree level\n+\n ftree-salias\n Common Report Var(flag_tree_salias) Optimization\n Perform structural alias analysis"}, {"sha": "6a4bc299c2a0f2aea7a4af549c6fa544e59bde3d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=13c594155d94f64e49681064ddb1a9e4e02a6562", "patch": "@@ -353,7 +353,7 @@ Objective-C and Objective-C++ Dialects}.\n -fstrict-aliasing  -fstrict-overflow  -ftracer  -fthread-jumps @gol\n -funroll-all-loops  -funroll-loops  -fpeel-loops @gol\n -fsplit-ivs-in-unroller -funswitch-loops @gol\n--fvariable-expansion-in-unroller @gol\n+-fvariable-expansion-in-unroller -ftree-reassoc @gol\n -ftree-pre  -ftree-ccp  -ftree-dce -ftree-loop-optimize @gol\n -ftree-loop-linear -ftree-loop-im -ftree-loop-ivcanon -fivopts @gol\n -fcheck-data-deps @gol\n@@ -5584,9 +5584,9 @@ ones to optimal placement using LCM.\n \n @item -freschedule-modulo-scheduled-loops\n @opindex fscheduling-in-modulo-scheduled-loops\n-The modulo scheduling comes before the traditional scheduling, if a loop was modulo scheduled\n-we may want to prevent the later scheduling passes from changing its schedule, we use this\n-option to control that.\n+The modulo scheduling comes before the traditional scheduling, if a loop\n+was modulo scheduled we may want to prevent the later scheduling passes\n+from changing its schedule, we use this option to control that.\n \n @item -fcaller-saves\n @opindex fcaller-saves\n@@ -5600,6 +5600,10 @@ those which have no call-preserved registers to use instead.\n \n Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n \n+@item -ftree-reassoc\n+Perform Reassociation on trees  This flag is enabled by default\n+at @option{-O} and higher.\n+\n @item -ftree-pre\n Perform Partial Redundancy Elimination (PRE) on trees.  This flag is\n enabled by default at @option{-O2} and @option{-O3}."}, {"sha": "a38290b857674d269905fc71f2fd34d7448ece95", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c594155d94f64e49681064ddb1a9e4e02a6562/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=13c594155d94f64e49681064ddb1a9e4e02a6562", "patch": "@@ -1476,15 +1476,21 @@ execute_reassoc (void)\n   return 0;\n }\n \n+static bool\n+gate_tree_ssa_reassoc (void)\n+{\n+  return flag_tree_reassoc != 0;\n+}\n+\n struct tree_opt_pass pass_reassoc =\n {\n   \"reassoc\",\t\t\t\t/* name */\n-  NULL,\t\t\t\t/* gate */\n-  execute_reassoc,\t\t\t\t/* execute */\n+  gate_tree_ssa_reassoc,\t\t/* gate */\n+  execute_reassoc,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_TREE_REASSOC,\t\t\t\t/* tv_id */\n+  TV_TREE_REASSOC,\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}]}