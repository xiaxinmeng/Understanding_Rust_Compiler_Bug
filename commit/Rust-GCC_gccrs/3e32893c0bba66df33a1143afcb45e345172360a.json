{"sha": "3e32893c0bba66df33a1143afcb45e345172360a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UzMjg5M2MwYmJhNjZkZjMzYTExNDNhZmNiNDVlMzQ1MTcyMzYwYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-01T12:21:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-01T12:21:38Z"}, "message": "parse.c (case_decl): Move ST_OMP_* to ...\n\n\t* parse.c (case_decl): Move ST_OMP_* to ...\n\t(case_omp_decl): ... here, new macro.\n\t(verify_st_order): For case_omp_decl, complain about\n\tp->state >= ORDER_EXEC, but don't change p->state otherwise.\n\n\t* gfortran.dg/gomp/order-1.f90: New test.\n\t* gfortran.dg/gomp/order-2.f90: New test.\n\nFrom-SVN: r236987", "tree": {"sha": "3dfc018192a37399a5ca433cddee738e5cd60c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dfc018192a37399a5ca433cddee738e5cd60c81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e32893c0bba66df33a1143afcb45e345172360a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e32893c0bba66df33a1143afcb45e345172360a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e32893c0bba66df33a1143afcb45e345172360a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e32893c0bba66df33a1143afcb45e345172360a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c38360082278de6400ac277e15f75edecc8eb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c38360082278de6400ac277e15f75edecc8eb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c38360082278de6400ac277e15f75edecc8eb39"}], "stats": {"total": 160, "additions": 157, "deletions": 3}, "files": [{"sha": "8cff148fa979885d835af1c3173ccb98f07cb72b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3e32893c0bba66df33a1143afcb45e345172360a", "patch": "@@ -1,3 +1,10 @@\n+2016-06-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parse.c (case_decl): Move ST_OMP_* to ...\n+\t(case_omp_decl): ... here, new macro.\n+\t(verify_st_order): For case_omp_decl, complain about\n+\tp->state >= ORDER_EXEC, but don't change p->state otherwise.\n+\n 2016-05-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* openmp.c (resolve_omp_clauses): Warn if chunk_size is known not to"}, {"sha": "1081b2e605e35ff064ad1150cc021439b7646afd", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=3e32893c0bba66df33a1143afcb45e345172360a", "patch": "@@ -1390,9 +1390,13 @@ next_statement (void)\n \n #define case_decl case ST_ATTR_DECL: case ST_COMMON: case ST_DATA_DECL: \\\n   case ST_EQUIVALENCE: case ST_NAMELIST: case ST_STATEMENT_FUNCTION: \\\n-  case ST_TYPE: case ST_INTERFACE: case ST_OMP_THREADPRIVATE: \\\n-  case ST_PROCEDURE: case ST_OMP_DECLARE_SIMD: case ST_OMP_DECLARE_REDUCTION: \\\n-  case ST_OMP_DECLARE_TARGET: case ST_OACC_ROUTINE: case ST_OACC_DECLARE\n+  case ST_TYPE: case ST_INTERFACE: case ST_PROCEDURE: case ST_OACC_ROUTINE: \\\n+  case ST_OACC_DECLARE\n+\n+/* OpenMP declaration statements.  */\n+\n+#define case_omp_decl case ST_OMP_THREADPRIVATE: case ST_OMP_DECLARE_SIMD: \\\n+  case ST_OMP_DECLARE_TARGET: case ST_OMP_DECLARE_REDUCTION\n \n /* Block end statements.  Errors associated with interchanging these\n    are detected in gfc_match_end().  */\n@@ -2488,6 +2492,14 @@ verify_st_order (st_state *p, gfc_statement st, bool silent)\n \tp->state = ORDER_SPEC;\n       break;\n \n+    case_omp_decl:\n+      /* The OpenMP directives have to be somewhere in the specification\n+\t part, but there are no further requirements on their ordering.\n+\t Thus don't adjust p->state, just ignore them.  */\n+      if (p->state >= ORDER_EXEC)\n+\tgoto order;\n+      break;\n+\n     case_executable:\n     case_exec_markers:\n       if (p->state < ORDER_EXEC)\n@@ -3563,6 +3575,7 @@ parse_spec (gfc_statement st)\n     case ST_STRUCTURE_DECL:\n     case ST_DERIVED_DECL:\n     case_decl:\n+    case_omp_decl:\n declSt:\n       if (!verify_st_order (&ss, st, false))\n \t{"}, {"sha": "1efe0e1bb4a28d0894e863d170bbdac92a0e8a4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e32893c0bba66df33a1143afcb45e345172360a", "patch": "@@ -1,3 +1,8 @@\n+2016-06-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.dg/gomp/order-1.f90: New test.\n+\t* gfortran.dg/gomp/order-2.f90: New test.\n+\n 2016-06-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/unroll-6.c: Update template."}, {"sha": "23db74cc666da2458a22157381d25ca19466080b", "filename": "gcc/testsuite/gfortran.dg/gomp/order-1.f90", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Forder-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Forder-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Forder-1.f90?ref=3e32893c0bba66df33a1143afcb45e345172360a", "patch": "@@ -0,0 +1,92 @@\n+! { dg-do compile }\n+\n+module m\n+  integer :: i\n+end module m\n+subroutine f1\n+  type t\n+    integer :: i\n+  end type t\n+  interface\n+    integer function f3 (a, b)\n+      !$omp declare simd (f3) uniform (a)\n+      use m\n+      import :: t\n+      implicit none\n+      type (t) :: a\n+      integer :: b\n+    end function f3\n+  end interface\n+  interface\n+    integer function f4 (a, b)\n+      use m\n+      !$omp declare simd (f4) uniform (a)\n+      import :: t\n+      implicit none\n+      type (t) :: a\n+      integer :: b\n+    end function f4\n+  end interface\n+  interface\n+    integer function f5 (a, b)\n+      use m\n+      import :: t\n+      !$omp declare simd (f5) uniform (a)\n+      implicit none\n+      type (t) :: a\n+      integer :: b\n+    end function f5\n+  end interface\n+  interface\n+    integer function f6 (a, b)\n+      use m\n+      import :: t\n+      implicit none\n+      !$omp declare simd (f6) uniform (a)\n+      type (t) :: a\n+      integer :: b\n+    end function f6\n+  end interface\n+  interface\n+    integer function f7 (a, b)\n+      use m\n+      import :: t\n+      implicit none\n+      type (t) :: a\n+      !$omp declare simd (f7) uniform (a)\n+      integer :: b\n+    end function f7\n+  end interface\n+  call f2\n+contains\n+  subroutine f2\n+    !$omp threadprivate (t1)\n+    use m\n+    !$omp threadprivate (t2)\n+    implicit none\n+    !$omp threadprivate (t3)\n+    integer, save :: t1, t2, t3, t4\n+    !$omp threadprivate (t4)\n+    t1 = 1; t2 = 2; t3 = 3; t4 = 4\n+  end subroutine f2\n+  subroutine f8\n+    !$omp declare reduction (f8_1:real:omp_out = omp_out + omp_in)\n+    use m\n+    !$omp declare reduction (f8_2:real:omp_out = omp_out + omp_in)\n+    implicit none\n+    !$omp declare reduction (f8_3:real:omp_out = omp_out + omp_in)\n+    integer :: j\n+    !$omp declare reduction (f8_4:real:omp_out = omp_out + omp_in)\n+  end subroutine f8\n+  subroutine f9\n+    !$omp declare target (f9_1)\n+    use m\n+    !$omp declare target (f9_2)\n+    implicit none\n+    !$omp declare target (f9_3)\n+    !$omp declare target\n+    integer, save :: f9_1, f9_2, f9_3, f9_4\n+    !$omp declare target (f9_4)\n+    f9_1 = 1; f9_2 = 2; f9_3 = 3; f9_4 = 4\n+  end subroutine f9\n+end subroutine f1"}, {"sha": "4ee3a82d5180fe636ce5d28bfc8c4dc2618fddf0", "filename": "gcc/testsuite/gfortran.dg/gomp/order-2.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Forder-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e32893c0bba66df33a1143afcb45e345172360a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Forder-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Forder-2.f90?ref=3e32893c0bba66df33a1143afcb45e345172360a", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do compile }\n+\n+module m\n+  integer :: i\n+end module m\n+subroutine f1\n+  call f2\n+contains\n+  subroutine f2\n+    use m\n+    implicit none\n+    integer, save :: t\n+    t = 1\n+    !$omp threadprivate (t1)\t! { dg-error \"Unexpected\" }\n+  end subroutine f2\n+  subroutine f3\n+    use m\n+    implicit none\n+    integer :: j\n+    j = 1\n+    !$omp declare reduction (foo:real:omp_out = omp_out + omp_in)\t! { dg-error \"Unexpected\" }\n+  end subroutine f3\n+  subroutine f4\n+    use m\n+    implicit none\n+    !$omp declare target\n+    integer, save :: f4_1\n+    f4_1 = 1\n+    !$omp declare target (f4_1)\t! { dg-error \"Unexpected\" }\n+    !$omp declare target\t! { dg-error \"Unexpected\" }\n+  end subroutine f4\n+  integer function f5 (a, b)\n+    integer :: a, b\n+    a = 1; b = 2\n+    !$omp declare simd (f5) notinbranch\t! { dg-error \"Unexpected\" }\n+  end function f5\n+end subroutine f1"}]}