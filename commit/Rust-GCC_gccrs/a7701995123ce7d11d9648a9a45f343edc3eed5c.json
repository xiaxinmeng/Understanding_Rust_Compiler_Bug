{"sha": "a7701995123ce7d11d9648a9a45f343edc3eed5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc3MDE5OTUxMjNjZTdkMTFkOTY0OGE5YTQ1ZjM0M2VkYzNlZWQ1Yw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-08-11T09:47:47Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-08-11T09:47:47Z"}, "message": "re PR target/7531 (-mcmodel not documented for x86-64)\n\n\tPR target/7531:\n\t* doc/invoke.texi (i386 and x86-64 Options): Document -mcmodel.\n\nFrom-SVN: r56198", "tree": {"sha": "ac5faac0d3a6d7c86138352d7e7376769dcbab8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac5faac0d3a6d7c86138352d7e7376769dcbab8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7701995123ce7d11d9648a9a45f343edc3eed5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7701995123ce7d11d9648a9a45f343edc3eed5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7701995123ce7d11d9648a9a45f343edc3eed5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7701995123ce7d11d9648a9a45f343edc3eed5c/comments", "author": null, "committer": null, "parents": [{"sha": "b4a93904915748680a5e7ba1fc78e78a8eb10e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a93904915748680a5e7ba1fc78e78a8eb10e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4a93904915748680a5e7ba1fc78e78a8eb10e72"}], "stats": {"total": 54, "additions": 43, "deletions": 11}, "files": [{"sha": "296e960097d5b3579a6cdc700e64471e0e81b115", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7701995123ce7d11d9648a9a45f343edc3eed5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7701995123ce7d11d9648a9a45f343edc3eed5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7701995123ce7d11d9648a9a45f343edc3eed5c", "patch": "@@ -1,3 +1,8 @@\n+2002-08-11  Andreas Jaeger  <aj@suse.de>\n+\n+\tPR target/7531:\n+\t* doc/invoke.texi (i386 and x86-64 Options): Document -mcmodel.\n+\n 2002-08-10  Ziemowit Laski  <zlaski@apple.com>\n \n \t* config/alpha/alpha.h (TARGET_CPU_CPP_BUILTINS): Replace\n@@ -57,7 +62,7 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(finish_struct): Likewise.\n \t* c-lang.c (maybe_objc_check_decl): Rename to objc_check_decl.\n \t(maybe_objc_comptypes): Rename to objc_comptypes.\n-\t(maybe_building_objc_message_expr): Rename to \n+\t(maybe_building_objc_message_expr): Rename to\n \tobjc_message_selector.\n \t* c-lex.c (lex_charconst): Remove uses of clk_objective_c,\n \treplace with flag_objc as needed.\n@@ -66,7 +71,7 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* c-parse.in (init_reswords): Likewise.\n \t* c-tree.h (maybe_objc_check_decl): Rename to objc_check_decl.\n \t(maybe_objc_comptypes): Rename to objc_comptypes.\n-\t(maybe_building_objc_message_expr): Rename to       \n+\t(maybe_building_objc_message_expr): Rename to\n \tobjc_message_selector.\n \t* c-typeck.c (comptypes): Call objc_comptypes instead of\n \tmaybe_objc_comptypes, and/or objc_message_selector instead of\n@@ -78,7 +83,7 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tindependently of those for other languages.\n \t* objc/objc-act.c (maybe_objc_comptypes): Delete.\n \t(maybe_objc_check_decl): Delete.\n-\t(maybe_building_objc_message_expr): Rename to \n+\t(maybe_building_objc_message_expr): Rename to\n \tobjc_message_selector.\n \t* objc/objc-lang.c (objc_init_options): Use clk_c instead of\n \tclk_objective_c; set flag_objc flag.\n@@ -135,15 +140,15 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-08-08  Devang Patel  <dpatel@apple.com>\n \n-\t* objc/objc-act.c (build_selector_translation_table): Issue warning, \n-\twhen  -Wselector is used,if method for which selector is being \n+\t* objc/objc-act.c (build_selector_translation_table): Issue warning,\n+\twhen  -Wselector is used,if method for which selector is being\n \tcreated does not exist.\n-\t\n+\n 2002-08-08  Stephen Clarke <stephen.clarke@superh.com>\n \n \t* config/sh/sh.c (prepare_move_operands): Only call\n \ttarget_reg_operand if TARGET_SHMEDIA.\n-\t\n+\n 2002-08-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.h, config/rs6000/aix.h,\n@@ -190,7 +195,7 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* objc/Make-lang.in (objc.mostlyclean): Remove coverage files.\n \t* treelang/Make-lang.in (treelang.mostlyclean): Remove coverage\n \tfiles.\n-\t\n+\n 2002-08-08  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* c-opts.c (cpp_opts): New.\n@@ -513,7 +518,7 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tOBJECT_DIRECTORY. Use format_hwint. Adjust gcov file name\n \tmangling. Adjust output format to make it more machine readable.\n \t* doc/gcov.texi: Document & clarify semantics.\n-\t\n+\n 2002-08-04  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* doc/include/gcc-common.texi (version-GCC): Increase to 3.3.\n@@ -540,10 +545,10 @@ Sat Aug 10 19:59:43 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \tof TARGET_ALIGN_DOUBLE.\n \n 2002-08-04  Gabriel Dos Reis  <gdr@nerim.net>\n-\t\n+\n \t* diagnostic.c (inform): New function.\n \t* diagnostic.h (inform): Declare.\n-\t\n+\n 2002-08-03  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (movsi_internal1): Add nop mnemonic."}, {"sha": "cef144d613cfe0ad3d687a20c325f1858113cdbb", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7701995123ce7d11d9648a9a45f343edc3eed5c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7701995123ce7d11d9648a9a45f343edc3eed5c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a7701995123ce7d11d9648a9a45f343edc3eed5c", "patch": "@@ -492,6 +492,7 @@ in the following sections.\n -mpush-args  -maccumulate-outgoing-args  -m128bit-long-double @gol\n -m96bit-long-double  -mregparm=@var{num}  -momit-leaf-frame-pointer @gol\n -mno-red-zone@gol\n+-mcmodel=@var{code-model} @gol\n -m32 -m64}\n \n @emph{HPPA Options}\n@@ -7720,6 +7721,32 @@ by the x86-64 ABI, it is a 128-byte area beyond the location of the\n stack pointer that will not be modified by signal or interrupt handlers\n and therefore can be used for temporary data without adjusting the stack\n pointer.  The flag @option{-mno-red-zone} disables this red zone.\n+\n+@item -mcmodel=small\n+@opindex mcmodel=small\n+Generate code for the small code model: the program and its symbols must\n+be linked in the lower 2 GB of the address space.  Pointers are 64 bits.\n+Programs can be statically or dynamically linked.  This is the default\n+code model.\n+\n+@item -mcmodel=kernel\n+@opindex mcmodel=kernel\n+Generate code for the kernel code model.  The kernel runs in the\n+negative 2 GB of the address space.\n+This model has to be used for Linux kernel code.\n+\n+@item -mcmodel=medium\n+@opindex mcmodel=medium\n+Generate code for the medium model: The program is linked in the lower 2\n+GB of the address space but symbols can be located anywhere in the\n+address space.  Programs can be statically or dynamically linked, but\n+building of shared libraries are not supported with the medium model.\n+\n+@item -mcmodel=large\n+@opindex mcmodel=large\n+Generate code for the large model: This model makes no assumptions\n+about addresses and sizes of sections.  Currently GCC does not implement\n+this model.\n @end table\n \n @node HPPA Options"}]}