{"sha": "740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwZjM1YTBhMTk3MWRjNGEwYTVmZmFhZjYyZWM1ODU5MjAxYWJlZg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dan@cgsoftware.com", "date": "2001-06-27T14:35:24Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2001-06-27T14:35:24Z"}, "message": "invoke.texi: Add description of max-gcse-passes param.\n\n\n2001-06-26  Daniel Berlin  <dan@cgsoftware.com>\n\n\t* doc/invoke.texi: Add description of max-gcse-passes param.\n\n\t* gcse.c (gcse_main): Use MAX_GCSE_PASSES instead of MAX_PASSES.\n\t(MAX_PASSES): Remove now unneeded macro.\n\n\t* params.h (MAX_GCSE_PASSES): New macro, to get parameter value of\n\tmax-gcse-passes param.\n\n\t* params.def (PARAM_MAX_GCSE_PASSES): New parameter, controlling\n\tmaximum number of GCSE passes to run. Defaults to 1 (which is what\n\tMAX_PASSES in gcse.c used to be).\n\nFrom-SVN: r43610", "tree": {"sha": "8329179d402ec461cb13c031de9de5b3785aae47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8329179d402ec461cb13c031de9de5b3785aae47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/comments", "author": null, "committer": null, "parents": [{"sha": "e63fc7bde1349427deceaf5fd2d9530ae73095a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63fc7bde1349427deceaf5fd2d9530ae73095a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63fc7bde1349427deceaf5fd2d9530ae73095a4"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "8c6197a72d18797698df7c851b989b0aae29d376", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "patch": "@@ -1,3 +1,17 @@\n+2001-06-26  Daniel Berlin  <dan@cgsoftware.com>\n+\t\n+\t* doc/invoke.texi: Add description of max-gcse-passes param.\n+\n+\t* gcse.c (gcse_main): Use MAX_GCSE_PASSES instead of MAX_PASSES.\n+\t(MAX_PASSES): Remove now unneeded macro.\n+\n+\t* params.h (MAX_GCSE_PASSES): New macro, to get parameter value of\n+\tmax-gcse-passes param.\n+\n+\t* params.def (PARAM_MAX_GCSE_PASSES): New parameter, controlling\n+\tmaximum number of GCSE passes to run. Defaults to 1 (which is what\n+\tMAX_PASSES in gcse.c used to be).\n+\n 2001-06-27  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* system.h (TARGET_ESC): Move to ..."}, {"sha": "b93a80ea1fdcf0dc9e77de9b46ad449ac803ee71", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "patch": "@@ -3784,6 +3784,9 @@ order to perform the global common subexpression elimination\n optimization.  If more memory than specified is required, the\n optimization will not be done.\n \n+@item max-gcse-passes\n+The maximum number of passes of GCSE to run. \n+\n @item max-inline-insns\n If an function contains more than this many instructions, it\n will not be inlined.  This option is precisely equivalent to"}, {"sha": "76687dee7829ce6e10b152d05b992a3d9b2def1e", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "patch": "@@ -166,9 +166,6 @@ Boston, MA 02111-1307, USA.  */\n #define obstack_chunk_alloc gmalloc\n #define obstack_chunk_free free\n \n-/* Maximum number of passes to perform.  */\n-#define MAX_PASSES 1\n-\n /* Propagate flow information through back edges and thus enable PRE's\n    moving loop invariant calculations out of loops.\n \n@@ -232,7 +229,7 @@ Boston, MA 02111-1307, USA.  */\n    substitutions.\n \n    PRE is quite expensive in complicated functions because the DFA can take\n-   awhile to converge.  Hence we only perform one pass.  Macro MAX_PASSES can\n+   awhile to converge.  Hence we only perform one pass.  The parameter max-gcse-passes can\n    be modified if one wants to experiment.\n \n    **********************\n@@ -810,7 +807,7 @@ gcse_main (f, file)\n   max_pass_bytes = 0;\n   gcse_obstack_bottom = gcse_alloc (1);\n   changed = 1;\n-  while (changed && pass < MAX_PASSES)\n+  while (changed && pass < MAX_GCSE_PASSES)\n     {\n       changed = 0;\n       if (file)"}, {"sha": "eff8a231e836bef3a51ec5aef0ef01eeac05fd82", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "patch": "@@ -74,7 +74,11 @@ DEFPARAM(PARAM_MAX_GCSE_MEMORY,\n \t \"max-gcse-memory\",\n \t \"The maximum amount of memory to be allocated by GCSE\",\n \t 50 * 1024 * 1024)\n-\n+/* The number of repetitions of copy/const prop and PRE to run. */\n+DEFPARAM(PARAM_MAX_GCSE_PASSES,\n+\t\"max-gcse-passes\",\n+\t\"The maximum number of passes to make when doing GCSE\",\n+\t1)\n /*\n Local variables:\n mode:c"}, {"sha": "2b29094a6f23235b34a075a67f144f3b83a54cdb", "filename": "gcc/params.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740f35a0a1971dc4a0a5ffaaf62ec5859201abef/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=740f35a0a1971dc4a0a5ffaaf62ec5859201abef", "patch": "@@ -92,5 +92,6 @@ typedef enum compiler_param\n   PARAM_VALUE (PARAM_MAX_DELAY_SLOT_LIVE_SEARCH)\n #define MAX_GCSE_MEMORY \\\n   ((size_t) PARAM_VALUE (PARAM_MAX_GCSE_MEMORY))\n-\n+#define MAX_GCSE_PASSES \\\n+  PARAM_VALUE (PARAM_MAX_GCSE_PASSES)\n #endif /* ! GCC_PARAMS_H */"}]}