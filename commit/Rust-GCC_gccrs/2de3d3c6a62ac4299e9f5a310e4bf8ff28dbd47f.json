{"sha": "2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRlM2QzYzZhNjJhYzQyOTllOWY1YTMxMGU0YmY4ZmYyOGRiZDQ3Zg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2017-10-16T20:34:53Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2017-10-16T20:34:53Z"}, "message": "re PR sanitizer/82353 (runtime ubsan crash)\n\n2017-10-16  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR sanitizer/82353\n\t* lra.c (collect_non_operand_hard_regs): Don't ignore operator\n\tlocations.\n\t* lra-lives.c (bb_killed_pseudos, bb_gen_pseudos): Move up.\n\t(make_hard_regno_born, make_hard_regno_dead): Update\n\tbb_killed_pseudos and bb_gen_pseudos for fixed regs.\n\nFrom-SVN: r253796", "tree": {"sha": "d2982e904ae5477184e730c0645f8001df5fdce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2982e904ae5477184e730c0645f8001df5fdce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55015c109a09c6f5f1fa76bef388628ee895eedb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55015c109a09c6f5f1fa76bef388628ee895eedb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55015c109a09c6f5f1fa76bef388628ee895eedb"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "1814910558b95d412d47221c343771a27177bc0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "patch": "@@ -1,3 +1,12 @@\n+2017-10-16  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR sanitizer/82353\n+\t* lra.c (collect_non_operand_hard_regs): Don't ignore operator\n+\tlocations.\n+\t* lra-lives.c (bb_killed_pseudos, bb_gen_pseudos): Move up.\n+\t(make_hard_regno_born, make_hard_regno_dead): Update\n+\tbb_killed_pseudos and bb_gen_pseudos for fixed regs.\n+\n 2017-10-16  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dse.c (live_bytes_read): Fix thinko."}, {"sha": "df7e2537dd09a4abd5ce517f4bb556cc32000fa0", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "patch": "@@ -220,6 +220,9 @@ lra_intersected_live_ranges_p (lra_live_range_t r1, lra_live_range_t r2)\n   return false;\n }\n \n+/* The corresponding bitmaps of BB currently being processed.  */\n+static bitmap bb_killed_pseudos, bb_gen_pseudos;\n+\n /* The function processing birth of hard register REGNO.  It updates\n    living hard regs, START_LIVING, and conflict hard regs for living\n    pseudos.  Conflict hard regs for the pic pseudo is not updated if\n@@ -243,6 +246,8 @@ make_hard_regno_born (int regno, bool check_pic_pseudo_p ATTRIBUTE_UNUSED)\n \t|| i != REGNO (pic_offset_table_rtx))\n #endif\n       SET_HARD_REG_BIT (lra_reg_info[i].conflict_hard_regs, regno);\n+  if (fixed_regs[regno])\n+    bitmap_set_bit (bb_gen_pseudos, regno);\n }\n \n /* Process the death of hard register REGNO.  This updates\n@@ -255,6 +260,11 @@ make_hard_regno_dead (int regno)\n     return;\n   sparseset_set_bit (start_dying, regno);\n   CLEAR_HARD_REG_BIT (hard_regs_live, regno);\n+  if (fixed_regs[regno])\n+    {\n+      bitmap_clear_bit (bb_gen_pseudos, regno);\n+      bitmap_set_bit (bb_killed_pseudos, regno);\n+    }\n }\n \n /* Mark pseudo REGNO as living at program point POINT, update conflicting\n@@ -299,9 +309,6 @@ mark_pseudo_dead (int regno, int point)\n     }\n }\n \n-/* The corresponding bitmaps of BB currently being processed.  */\n-static bitmap bb_killed_pseudos, bb_gen_pseudos;\n-\n /* Mark register REGNO (pseudo or hard register) in MODE as live at\n    program point POINT.  Update BB_GEN_PSEUDOS.\n    Return TRUE if the liveness tracking sets were modified, or FALSE"}, {"sha": "3122f2c25053a8b48b2ab277510bf18c4376cec9", "filename": "gcc/lra.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=2de3d3c6a62ac4299e9f5a310e4bf8ff28dbd47f", "patch": "@@ -820,7 +820,8 @@ collect_non_operand_hard_regs (rtx *x, lra_insn_recog_data_t data,\n   const char *fmt = GET_RTX_FORMAT (code);\n \n   for (i = 0; i < data->insn_static_data->n_operands; i++)\n-    if (x == data->operand_loc[i])\n+    if (! data->insn_static_data->operand[i].is_operator\n+\t&& x == data->operand_loc[i])\n       /* It is an operand loc. Stop here.  */\n       return list;\n   for (i = 0; i < data->insn_static_data->n_dups; i++)"}]}