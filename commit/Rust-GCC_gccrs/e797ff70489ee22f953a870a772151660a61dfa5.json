{"sha": "e797ff70489ee22f953a870a772151660a61dfa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc5N2ZmNzA0ODllZTIyZjk1M2E4NzBhNzcyMTUxNjYwYTYxZGZhNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-25T13:29:34Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-25T13:29:34Z"}, "message": "Warning fixes:\n\n\t* cplus-dem.c (gnu_special): Cast a `size_t' to `long' when\n\tcomparing against a signed quantity.\n\t(arm_special): Likewise.\n\t(demangle_fund_type): Likewise.\n\t(do_hpacc_template_const_value): Mark parameter `work' with\n\tATTRIBUTE_UNUSED.\n\t(main): Constify variable `valid_symbols'.\n\nFrom-SVN: r28859", "tree": {"sha": "613f81a9231026cc1a7f1375bb22f6cdf950c776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/613f81a9231026cc1a7f1375bb22f6cdf950c776"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e797ff70489ee22f953a870a772151660a61dfa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e797ff70489ee22f953a870a772151660a61dfa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e797ff70489ee22f953a870a772151660a61dfa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e797ff70489ee22f953a870a772151660a61dfa5/comments", "author": null, "committer": null, "parents": [{"sha": "355298fb26e41f9a8b362e430c1a4ee8cde94397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355298fb26e41f9a8b362e430c1a4ee8cde94397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355298fb26e41f9a8b362e430c1a4ee8cde94397"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "7d05041bd7703e0bc74c2957f74c6d57cc8a62e4", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e797ff70489ee22f953a870a772151660a61dfa5/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e797ff70489ee22f953a870a772151660a61dfa5/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e797ff70489ee22f953a870a772151660a61dfa5", "patch": "@@ -1,3 +1,13 @@\n+1999-08-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cplus-dem.c (gnu_special): Cast a `size_t' to `long' when\n+\tcomparing against a signed quantity.\n+\t(arm_special): Likewise.\n+\t(demangle_fund_type): Likewise.\n+\t(do_hpacc_template_const_value): Mark parameter `work' with\n+\tATTRIBUTE_UNUSED.\t\n+\t(main): Constify variable `valid_symbols'.\n+\n Tue Aug 24 02:50:45 1999  Philippe De Muyter  <phdm@macqel.be>\n \n \t* strtoul.c (strtoul): Add parentheses around && within ||."}, {"sha": "7fea97a81b38fbea1c11fde8111ea9e581679315", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e797ff70489ee22f953a870a772151660a61dfa5/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e797ff70489ee22f953a870a772151660a61dfa5/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=e797ff70489ee22f953a870a772151660a61dfa5", "patch": "@@ -2448,7 +2448,7 @@ gnu_special (work, mangled, declp)\n \t  break;\n \tdefault:\n \t  n = consume_count (mangled);\n-\t  if (n < 0 || n > strlen (*mangled))\n+\t  if (n < 0 || n > (long) strlen (*mangled))\n \t    {\n \t      success = 0;\n \t      break;\n@@ -2615,7 +2615,7 @@ arm_special (mangled, declp)\n \t{\n \t  n = consume_count (mangled);\n           if (n == -1\n-\t      || n > strlen (*mangled))\n+\t      || n > (long) strlen (*mangled))\n \t    return 0;\n \t  string_prependn (declp, *mangled, n);\n \t  (*mangled) += n;\n@@ -3381,7 +3381,7 @@ demangle_fund_type (work, mangled, result)\n \t  int i;\n \t  (*mangled)++;\n \t  for (i = 0;\n-\t       i < sizeof (buf) - 1 && **mangled && **mangled != '_';\n+\t       i < (long) sizeof (buf) - 1 && **mangled && **mangled != '_';\n \t       (*mangled)++, i++)\n \t    buf[i] = **mangled;\n \t  if (**mangled != '_')\n@@ -3450,7 +3450,7 @@ demangle_fund_type (work, mangled, result)\n \n static int\n do_hpacc_template_const_value (work, mangled, result)\n-     struct work_stuff *work;\n+     struct work_stuff *work ATTRIBUTE_UNUSED;\n      const char **mangled;\n      string *result;\n {\n@@ -4451,7 +4451,7 @@ main (argc, argv)\n {\n   char *result;\n   int c;\n-  char *valid_symbols;\n+  const char *valid_symbols;\n \n   program_name = argv[0];\n "}]}