{"sha": "99360286e576de3a3e03d52fe1d8d5656d75cdcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzNjAyODZlNTc2ZGUzYTNlMDNkNTJmZTFkOGQ1NjU2ZDc1Y2RjYw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-02-12T16:34:43Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-02-12T16:34:43Z"}, "message": "(PROTO): Define.\n\nAdd prototypes for static functions.\n\nFrom-SVN: r6542", "tree": {"sha": "60dae84e0574f1aeefdbc9d2fba4e81d7c9842f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60dae84e0574f1aeefdbc9d2fba4e81d7c9842f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99360286e576de3a3e03d52fe1d8d5656d75cdcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99360286e576de3a3e03d52fe1d8d5656d75cdcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99360286e576de3a3e03d52fe1d8d5656d75cdcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99360286e576de3a3e03d52fe1d8d5656d75cdcc/comments", "author": null, "committer": null, "parents": [{"sha": "b331b7459e8411fa09886d430ead4569a4b992eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b331b7459e8411fa09886d430ead4569a4b992eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b331b7459e8411fa09886d430ead4569a4b992eb"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "208dd043faaf9397925d18b2026383fefd1345d5", "filename": "gcc/gcc.c", "status": "modified", "additions": 34, "deletions": 21, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99360286e576de3a3e03d52fe1d8d5656d75cdcc/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99360286e576de3a3e03d52fe1d8d5656d75cdcc/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=99360286e576de3a3e03d52fe1d8d5656d75cdcc", "patch": "@@ -51,6 +51,15 @@ compilation is specified by a string called a \"spec\".  */\n #define X_OK 1\n #endif\n \n+/* Add prototype support.  */\n+#ifndef PROTO\n+#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+#define PROTO(ARGS) ARGS\n+#else\n+#define PROTO(ARGS) ()\n+#endif\n+#endif\n+\n #ifndef VPROTO\n #ifdef __STDC__\n #define VPROTO(ARGS)\t\tARGS\n@@ -183,27 +192,31 @@ static struct obstack collect_obstack;\n \n extern char *version_string;\n \n-static void set_spec ();\n-static struct compiler *lookup_compiler ();\n-static char *find_a_file ();\n-static void add_prefix ();\n-static char *skip_whitespace ();\n-static void record_temp_file ();\n-static char *handle_braces ();\n-static char *save_string ();\n-static char *concat ();\n-static int do_spec ();\n-static int do_spec_1 ();\n-static char *find_file ();\n-static int is_directory ();\n-static void validate_switches ();\n-static void validate_all_switches ();\n-static void give_switch ();\n-static void pfatal_with_name ();\n-static void perror_with_name ();\n-static void perror_exec ();\n-static void fatal ();\n-static void error ();\n+/* Forward declaration for prototypes.  */\n+struct path_prefix;\n+\n+static void set_spec\t\tPROTO((char *, char *));\n+static struct compiler *lookup_compiler PROTO((char *, int, char *));\n+static char *find_a_file\tPROTO((struct path_prefix *, char *, int));\n+static void add_prefix\t\tPROTO((struct path_prefix *, char *, int, int, int *));\n+static char *skip_whitespace\tPROTO((char *));\n+static void record_temp_file\tPROTO((char *, int, int));\n+static char *handle_braces\tPROTO((char *));\n+static char *save_string\tPROTO((char *, int));\n+static char *concat\t\tPROTO((char *, char *, char *));\n+static int do_spec\t\tPROTO((char *));\n+static int do_spec_1\t\tPROTO((char *, int, char *));\n+static char *find_file\t\tPROTO((char *));\n+static int is_directory\t\tPROTO((char *, char *, int));\n+static void validate_switches\tPROTO((char *));\n+static void validate_all_switches PROTO((void));\n+static void give_switch\t\tPROTO((int, int));\n+static void pfatal_with_name\tPROTO((char *));\n+static void perror_with_name\tPROTO((char *));\n+static void perror_exec\t\tPROTO((char *));\n+static void fatal\t\tPROTO((char *, ...));\n+static void error\t\tPROTO((char *, ...));\n+\n void fancy_abort ();\n char *xmalloc ();\n char *xrealloc ();"}]}