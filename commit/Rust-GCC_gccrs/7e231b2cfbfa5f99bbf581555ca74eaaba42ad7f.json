{"sha": "7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UyMzFiMmNmYmZhNWY5OWJiZjU4MTU1NWNhNzRlYWFiYTQyYWQ3Zg==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2020-12-03T00:12:59Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2020-12-03T00:14:04Z"}, "message": "c++: Treat OPAQUE_TYPE types as an aggregate type [PR97947]\n\nMODE_OPAQUE and the associated OPAQUE_TYPE were added to stop the optimizers\nfrom knowing how the bits in a variable with an opaque type are laid out.\nThis makes them a kind of pseudo aggregate type and we need to treat them\nas such when we process the INIT initializer for variables with an\nopaque type.\n\n2020-12-02  Peter Bergner  <bergner@linux.ibm.com>\n\ngcc/cp/\n\tPR c++/97947\n\t* typeck2.c (digest_init_r): Handle OPAQUE_TYPE as an aggregate type.\n\ngcc/testsuite/\n\tPR c++/97947\n\t* g++.target/powerpc/pr97947.C: New test.", "tree": {"sha": "e216fa53843d68335b9922947b00af8b44b12e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e216fa53843d68335b9922947b00af8b44b12e42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ec9d0962371c134d881d7dcfcef5effc8ed847f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec9d0962371c134d881d7dcfcef5effc8ed847f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ec9d0962371c134d881d7dcfcef5effc8ed847f"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "3fd2b1743332f9c6b0714774fe85323ebc4b973a", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f", "patch": "@@ -1150,6 +1150,7 @@ digest_init_r (tree type, tree init, int nested, int flags,\n \t      || VECTOR_TYPE_P (type)\n \t      || code == RECORD_TYPE\n \t      || code == UNION_TYPE\n+\t      || code == OPAQUE_TYPE\n \t      || code == COMPLEX_TYPE);\n \n   /* \"If T is a class type and the initializer list has a single"}, {"sha": "94e5ed6498b3e98652b65b2c2fe777f9e8f9d769", "filename": "gcc/testsuite/g++.target/powerpc/pr97947.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpr97947.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpr97947.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpr97947.C?ref=7e231b2cfbfa5f99bbf581555ca74eaaba42ad7f", "patch": "@@ -0,0 +1,12 @@\n+/* PR c++/97947 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power10\" } */\n+\n+/* Verify we do not ICE on the test below.  */\n+\n+void\n+bug (__vector_pair *src)\n+{\n+  volatile __vector_pair dd = *src;\n+}"}]}