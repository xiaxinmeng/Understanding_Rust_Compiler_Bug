{"sha": "db62ad7c66e97b45a4286932bcab3926bd571227", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI2MmFkN2M2NmU5N2I0NWE0Mjg2OTMyYmNhYjM5MjZiZDU3MTIyNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-10-19T13:57:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-10-19T13:57:10Z"}, "message": "Improve tests for error reporting in Filesystem TS\n\n\t* testsuite/experimental/filesystem/iterators/\n\trecursive_directory_iterator.cc: Ensure that error_code arguments are\n\tcleared when required.\n\t* testsuite/experimental/filesystem/operations/create_directory.cc:\n\tRemove redundant check.\n\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n\tEnsure that error_code argument is cleared when required.\n\nFrom-SVN: r253897", "tree": {"sha": "3e2a07094803015506ce20a0a0486e8511943648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e2a07094803015506ce20a0a0486e8511943648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db62ad7c66e97b45a4286932bcab3926bd571227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db62ad7c66e97b45a4286932bcab3926bd571227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db62ad7c66e97b45a4286932bcab3926bd571227", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db62ad7c66e97b45a4286932bcab3926bd571227/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "551124d5613673c70b92aff884430476f04684e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551124d5613673c70b92aff884430476f04684e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551124d5613673c70b92aff884430476f04684e1"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "ba43a4b37083cb98061b21e0cae56963188b0733", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=db62ad7c66e97b45a4286932bcab3926bd571227", "patch": "@@ -1,5 +1,13 @@\n 2017-10-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/experimental/filesystem/iterators/\n+\trecursive_directory_iterator.cc: Ensure that error_code arguments are\n+\tcleared when required.\n+\t* testsuite/experimental/filesystem/operations/create_directory.cc:\n+\tRemove redundant check.\n+\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n+\tEnsure that error_code argument is cleared when required.\n+\n \t* include/experimental/bits/fs_path.h (path::iterator++(int))\n \t(path::iterator--(int)): Fix for paths with only one component.\n \t* testsuite/experimental/filesystem/path/itr/traversal.cc: Test"}, {"sha": "50cc7d45de862dc0f9116e0979c738326d3267cc", "filename": "libstdc++-v3/testsuite/experimental/filesystem/iterators/recursive_directory_iterator.cc", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc?ref=db62ad7c66e97b45a4286932bcab3926bd571227", "patch": "@@ -28,6 +28,7 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n+  const std::error_code bad_ec = make_error_code(std::errc::invalid_argument);\n   std::error_code ec;\n \n   // Test non-existent path.\n@@ -37,15 +38,19 @@ test01()\n   VERIFY( iter == end(iter) );\n \n   // Test empty directory.\n+  ec = bad_ec;\n   create_directory(p, fs::current_path(), ec);\n   VERIFY( !ec );\n+  ec = bad_ec;\n   iter = fs::recursive_directory_iterator(p, ec);\n   VERIFY( !ec );\n   VERIFY( iter == end(iter) );\n \n   // Test non-empty directory.\n-  create_directories(p / \"d1/d2\");\n+  ec = bad_ec;\n+  create_directories(p / \"d1/d2\", ec);\n   VERIFY( !ec );\n+  ec = bad_ec;\n   iter = fs::recursive_directory_iterator(p, ec);\n   VERIFY( !ec );\n   VERIFY( iter != end(iter) );\n@@ -56,6 +61,7 @@ test01()\n   VERIFY( iter == end(iter) );\n \n   // Test inaccessible directory.\n+  ec = bad_ec;\n   permissions(p, fs::perms::none, ec);\n   VERIFY( !ec );\n   iter = fs::recursive_directory_iterator(p, ec);\n@@ -64,15 +70,19 @@ test01()\n \n   // Test inaccessible directory, skipping permission denied.\n   const auto opts = fs::directory_options::skip_permission_denied;\n+  ec = bad_ec;\n   iter = fs::recursive_directory_iterator(p, opts, ec);\n   VERIFY( !ec );\n   VERIFY( iter == end(iter) );\n \n   // Test inaccessible sub-directory.\n+  ec = bad_ec;\n   permissions(p, fs::perms::owner_all, ec);\n   VERIFY( !ec );\n+  ec = bad_ec;\n   permissions(p/\"d1/d2\", fs::perms::none, ec);\n   VERIFY( !ec );\n+  ec = bad_ec;\n   iter = fs::recursive_directory_iterator(p, ec);\n   VERIFY( !ec );\n   VERIFY( iter != end(iter) );\n@@ -84,12 +94,14 @@ test01()\n   VERIFY( iter == end(iter) );\n \n   // Test inaccessible sub-directory, skipping permission denied.\n+  ec = bad_ec;\n   iter = fs::recursive_directory_iterator(p, opts, ec);\n   VERIFY( !ec );\n   VERIFY( iter != end(iter) );\n   VERIFY( iter->path() == p/\"d1\" );\n   ++iter;              // should recurse into d1\n   VERIFY( iter->path() == p/\"d1/d2\" );\n+  ec = bad_ec;\n   iter.increment(ec);  // should fail to recurse into p/d1/d2, so skip it\n   VERIFY( !ec );\n   VERIFY( iter == end(iter) );\n@@ -101,12 +113,15 @@ test01()\n void\n test02()\n {\n+  const std::error_code bad_ec = make_error_code(std::errc::invalid_argument);\n   std::error_code ec;\n   const auto p = __gnu_test::nonexistent_path();\n+  ec = bad_ec;\n   create_directories(p / \"d1/d2\", ec);\n   VERIFY( !ec );\n \n   // Test post-increment (libstdc++/71005)\n+  ec = bad_ec;\n   auto iter = fs::recursive_directory_iterator(p, ec);\n   VERIFY( !ec );\n   VERIFY( iter != end(iter) );\n@@ -126,7 +141,7 @@ test02()\n void\n test03()\n {\n-  std::error_code ec;\n+  std::error_code ec = make_error_code(std::errc::invalid_argument);\n   const auto p = __gnu_test::nonexistent_path();\n   create_directories(p / \"longer_than_small_string_buffer\", ec);\n   VERIFY( !ec );"}, {"sha": "85e8281a6e109a51a6f02d08d72bb192b48ffbfb", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directory.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc?ref=db62ad7c66e97b45a4286932bcab3926bd571227", "patch": "@@ -50,7 +50,6 @@ test01()\n   VERIFY( !ec );\n   VERIFY( !b );\n   b = create_directory(p);\n-  VERIFY( !ec );\n   VERIFY( !b );\n \n   remove_all(p, ec);"}, {"sha": "1689a2a07757a9eb46d29c8d836f09b74d78f319", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/temp_directory_path.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db62ad7c66e97b45a4286932bcab3926bd571227/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc?ref=db62ad7c66e97b45a4286932bcab3926bd571227", "patch": "@@ -43,7 +43,7 @@ test01()\n   if (!fs::exists(\"/tmp\"))\n     return; // just give up\n \n-  std::error_code ec;\n+  std::error_code ec = make_error_code(std::errc::invalid_argument);\n   fs::path p1 = fs::temp_directory_path(ec);\n   VERIFY( !ec );\n   VERIFY( exists(p1) );"}]}