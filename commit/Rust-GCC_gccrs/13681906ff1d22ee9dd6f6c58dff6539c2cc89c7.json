{"sha": "13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2ODE5MDZmZjFkMjJlZTlkZDZmNmM1OGRmZjY1MzljMmNjODljNw==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2019-10-01T19:14:11Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2019-10-01T19:14:11Z"}, "message": "libada: Respect `--enable-version-specific-runtime-libs'\n\nRespect the `--enable-version-specific-runtime-libs' configuration\noption in libada/, so that shared gnatlib libraries will be installed\nin non-version-specific $(toolexeclibdir) if requested.  In a\ncross-compilation environment this helps setting up a consistent\nsysroot, which can then be shared between the host and the target\nsystem.\n\nThis lets one have `libgnarl-10.so' and `libgnat-10.so' installed in say\n/usr/lib and /usr/$(target_alias)/lib for a native and a cross-build\nrespectively, rather than in /usr/lib/gcc/$(target_alias)/10.0.0/adalib.\n\nUpdate the settings of $(toolexecdir) and $(toolexeclibdir), unused till\nnow, to keep the current arrangement in the version-specific case and\nmake the new option to be enabled by default, unlike with the other\ntarget libraries, so as to keep existing people's build infrastructure\nunaffected.\n\nOf course if someone does use `--disable-version-specific-runtime-libs'\nalready, then the installation location of shared gnatlib libraries will\nchange, but presumably this is what they do want anyway as the current\nsituation where the option is ignored in libada/ only is an anomaly\nreally rather than one that is expected or desired.\n\n\tgcc/ada/\n\t* gcc-interface/Makefile.in (ADA_RTL_DSO_DIR): New variable.\n\t(install-gnatlib): Use it in place of ADA_RTL_OBJ_DIR for shared\n\tlibrary installation.\n\n\tlibada/\n\t* Makefile.in (toolexecdir, toolexeclibdir): New variables.\n\t(LIBADA_FLAGS_TO_PASS): Add `toolexeclibdir'.\n\t* configure.ac: Add `--enable-version-specific-runtime-libs'.\n\tUpdate version-specific `toolexecdir' and `toolexeclibdir' from\n\tADA_RTL_OBJ_DIR from gcc/ada/gcc-interface/Makefile.in.\n\t* configure: Regenerate.\n\nFrom-SVN: r276424", "tree": {"sha": "7a82ee6116b5ac5aad650a767b768212da78509d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a82ee6116b5ac5aad650a767b768212da78509d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/comments", "author": null, "committer": null, "parents": [{"sha": "8951374df1e7139b163129c9e18161c5253d0fe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8951374df1e7139b163129c9e18161c5253d0fe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8951374df1e7139b163129c9e18161c5253d0fe2"}], "stats": {"total": 70, "additions": 61, "deletions": 9}, "files": [{"sha": "6a84b7b80f57b7e30a606de179e2e4daf49b21c6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "patch": "@@ -1,3 +1,9 @@\n+2019-10-01  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* gcc-interface/Makefile.in (ADA_RTL_DSO_DIR): New variable.\n+\t(install-gnatlib): Use it in place of ADA_RTL_OBJ_DIR for shared \n+\tlibrary installation.\n+\n 2019-10-01  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* gcc-interface/Make-lang.in (ada.install-common): Split into..."}, {"sha": "8deffb6eb36387e0a829d3ebfa08d1dc493582ad", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "patch": "@@ -534,15 +534,15 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR) install-gcc-specs\n \tfor file in gnat gnarl; do \\\n \t   if [ -f $(RTSDIR)/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) ]; then \\\n \t      $(INSTALL) $(RTSDIR)/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n-\t\t\t $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n+\t\t\t $(DESTDIR)$(ADA_RTL_DSO_DIR); \\\n \t   fi; \\\n \t   if [ -f $(RTSDIR)/lib$${file}$(soext) ]; then \\\n \t      $(LN_S) lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n-\t      $(DESTDIR)$(ADA_RTL_OBJ_DIR)/lib$${file}$(soext); \\\n+\t      $(DESTDIR)$(ADA_RTL_DSO_DIR)/lib$${file}$(soext); \\\n \t   fi; \\\n \t   if [ -d $(RTSDIR)/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext).dSYM ]; then \\\n \t      $(CP) -r $(RTSDIR)/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext).dSYM \\\n-\t        $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n+\t        $(DESTDIR)$(ADA_RTL_DSO_DIR); \\\n \t   fi; \\\n \tdone\n # This copy must be done preserving the date on the original file.\n@@ -882,6 +882,7 @@ b_gnatm.o : b_gnatm.adb\n \n ADA_INCLUDE_DIR = $(libsubdir)/adainclude\n ADA_RTL_OBJ_DIR = $(libsubdir)/adalib\n+ADA_RTL_DSO_DIR = $(toolexeclibdir)\n \n # Special flags\n "}, {"sha": "511df408a83b75c1e7cd380d67049e07d53f3e24", "filename": "libada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FChangeLog?ref=13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "patch": "@@ -1,3 +1,12 @@\n+2019-10-01  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* Makefile.in (toolexecdir, toolexeclibdir): New variables.\n+\t(LIBADA_FLAGS_TO_PASS): Add `toolexeclibdir'.\n+\t* configure.ac: Add `--enable-version-specific-runtime-libs'.\n+\tUpdate version-specific `toolexecdir' and `toolexeclibdir' from \n+\tADA_RTL_OBJ_DIR from gcc/ada/gcc-interface/Makefile.in.\n+\t* configure: Regenerate.\n+\n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "985db0e7c0e4a339cb31605ad837a9280385b066", "filename": "libada/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FMakefile.in?ref=13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "patch": "@@ -38,6 +38,8 @@ target = @target@\n prefix = @prefix@\n \n # Nonstandard autoconf-set variables.\n+toolexecdir = @toolexecdir@\n+toolexeclibdir = @toolexeclibdir@\n enable_shared = @enable_shared@\n \n LN_S=@LN_S@\n@@ -88,6 +90,7 @@ LIBADA_FLAGS_TO_PASS = \\\n         \"TRACE=$(TRACE)\" \\\n         \"MULTISUBDIR=$(MULTISUBDIR)\" \\\n         \"libsubdir=$(libsubdir)\" \\\n+        \"toolexeclibdir=$(toolexeclibdir)\" \\\n         \"objext=$(objext)\" \\\n         \"prefix=$(prefix)\" \\\n         \"exeext=.exeext.should.not.be.used \" \\"}, {"sha": "a28be4068f09ff08c39d1fe388157b6d2c18e92c", "filename": "libada/configure", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure?ref=13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "patch": "@@ -702,6 +702,7 @@ ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n with_build_libsubdir\n+enable_version_specific_runtime_libs\n enable_maintainer_mode\n enable_multilib\n enable_shared\n@@ -1325,6 +1326,9 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-version-specific-runtime-libs\n+                          specify that runtime libraries should be installed\n+                          in a compiler-specific directory\n   --enable-maintainer-mode\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n@@ -2215,6 +2219,22 @@ target_subdir=${target_noncanonical}\n \n \n # Command-line options.\n+\n+# Check whether --enable-version-specific-runtime-libs was given.\n+if test \"${enable_version_specific_runtime_libs+set}\" = set; then :\n+  enableval=$enable_version_specific_runtime_libs; case \"$enableval\" in\n+     yes|no)\n+       ;;\n+     *)\n+       as_fn_error $? \"--enable-version-specific-runtime-libs must be yes or no\" \"$LINENO\" 5\n+       ;;\n+   esac\n+else\n+  enable_version_specific_runtime_libs=yes\n+\n+fi\n+\n+\n # Very limited version of AC_MAINTAINER_MODE.\n # Check whether --enable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then :\n@@ -2273,8 +2293,8 @@ case ${enable_version_specific_runtime_libs} in\n     # Need the gcc compiler version to know where to install libraries\n     # and header files if --enable-version-specific-runtime-libs option\n     # is selected.\n-    toolexecdir='$(libdir)/gcc/$(target_alias)'\n-    toolexeclibdir='$(toolexecdir)/$(gcc_version)$(MULTISUBDIR)'\n+    toolexecdir='$(libdir)/gcc/$(target_noncanonical)'\n+    toolexeclibdir='$(toolexecdir)/$(version)$(MULTISUBDIR)/adalib'\n     ;;\n   no)\n     if test -n \"$with_cross_host\" &&\n@@ -2295,7 +2315,6 @@ case ${enable_version_specific_runtime_libs} in\n esac\n \n \n-#TODO: toolexeclibdir is currently disregarded\n \n # Check the compiler.\n # The same as in boehm-gc and libstdc++. Have to borrow it from there."}, {"sha": "bd245d4d95aa5e1be1949c267650fec0b9ec2c0b", "filename": "libada/configure.ac", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13681906ff1d22ee9dd6f6c58dff6539c2cc89c7/libada%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure.ac?ref=13681906ff1d22ee9dd6f6c58dff6539c2cc89c7", "patch": "@@ -38,6 +38,21 @@ ACX_NONCANONICAL_TARGET\n GCC_TOPLEV_SUBDIRS\n \n # Command-line options.\n+\n+AC_ARG_ENABLE(version-specific-runtime-libs,\n+  [AS_HELP_STRING([--enable-version-specific-runtime-libs],\n+\t\t  [specify that runtime libraries should be\n+\t\t   installed in a compiler-specific directory])],\n+  [case \"$enableval\" in\n+     yes|no)\n+       ;;\n+     *)\n+       AC_MSG_ERROR([--enable-version-specific-runtime-libs must be yes or no])\n+       ;;\n+   esac],\n+  [enable_version_specific_runtime_libs=yes]\n+)\n+\n # Very limited version of AC_MAINTAINER_MODE.\n AC_ARG_ENABLE([maintainer-mode],\n   [AC_HELP_STRING([--enable-maintainer-mode],\n@@ -60,8 +75,8 @@ case ${enable_version_specific_runtime_libs} in\n     # Need the gcc compiler version to know where to install libraries\n     # and header files if --enable-version-specific-runtime-libs option\n     # is selected.\n-    toolexecdir='$(libdir)/gcc/$(target_alias)'\n-    toolexeclibdir='$(toolexecdir)/$(gcc_version)$(MULTISUBDIR)'\n+    toolexecdir='$(libdir)/gcc/$(target_noncanonical)'\n+    toolexeclibdir='$(toolexecdir)/$(version)$(MULTISUBDIR)/adalib'\n     ;;\n   no)\n     if test -n \"$with_cross_host\" &&\n@@ -82,7 +97,6 @@ case ${enable_version_specific_runtime_libs} in\n esac\n AC_SUBST(toolexecdir)\n AC_SUBST(toolexeclibdir)\n-#TODO: toolexeclibdir is currently disregarded\n \n # Check the compiler.\n # The same as in boehm-gc and libstdc++. Have to borrow it from there."}]}