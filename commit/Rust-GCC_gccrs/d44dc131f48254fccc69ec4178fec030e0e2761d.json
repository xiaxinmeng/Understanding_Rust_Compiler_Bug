{"sha": "d44dc131f48254fccc69ec4178fec030e0e2761d", "node_id": "C_kwDOANBUbNoAKGQ0NGRjMTMxZjQ4MjU0ZmNjYzY5ZWM0MTc4ZmVjMDMwZTBlMjc2MWQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-22T09:43:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-22T09:43:13Z"}, "message": "ranger: Fix up REALPART_EXPR/IMAGPART_EXPR handling [PR104604]\n\nThe following testcase is miscompiled since r12-3328.\nThat change assumed that if rhs1 of a GIMPLE_ASSIGN is COMPLEX_CST, then\nthat is the value of the lhs of the stmt, but that is not the case always,\nonly if it is a GIMPLE_SINGLE_RHS stmt.  If it is e.g.\nGIMPLE_UNARY_RHS or GIMPLE_BINARY_RHS (the latter happens in the testcase),\nthen it can be e.g.\n__complex__ (3, 0) / var\nand the REALPART_EXPR of that isn't 3, but the realpart of the division.\nI assume once the ranger can do complex numbers adjust_*part_expr will just\nfetch one or the other range from a underlying complex range, but until\nthen, we should limit this to what r12-3328 meant to do.\n\n2022-02-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/104604\n\t* gimple-range-fold.cc (adjust_imagpart_expr, adjust_realpart_expr):\n\tOnly check if gimple_assign_rhs1 is COMPLEX_CST if\n\tgimple_assign_rhs_code is COMPLEX_CST.\n\n\t* gcc.c-torture/execute/pr104604.c: New test.", "tree": {"sha": "741f4f158e9c6e4750a4852eadabbba6ff6b29ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/741f4f158e9c6e4750a4852eadabbba6ff6b29ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d44dc131f48254fccc69ec4178fec030e0e2761d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44dc131f48254fccc69ec4178fec030e0e2761d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44dc131f48254fccc69ec4178fec030e0e2761d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44dc131f48254fccc69ec4178fec030e0e2761d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e691189ca9c04fdba71ceada1faba62afbc1463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e691189ca9c04fdba71ceada1faba62afbc1463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e691189ca9c04fdba71ceada1faba62afbc1463"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "dfacf6f14dc3e162bf21be69cf69e5dbada71721", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44dc131f48254fccc69ec4178fec030e0e2761d/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44dc131f48254fccc69ec4178fec030e0e2761d/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=d44dc131f48254fccc69ec4178fec030e0e2761d", "patch": "@@ -397,7 +397,8 @@ adjust_imagpart_expr (irange &res, const gimple *stmt)\n \t}\n       return;\n     }\n-  if (is_gimple_assign (def_stmt))\n+  if (is_gimple_assign (def_stmt)\n+      && gimple_assign_rhs_code (def_stmt) == COMPLEX_CST)\n     {\n       tree cst = gimple_assign_rhs1 (def_stmt);\n       if (TREE_CODE (cst) == COMPLEX_CST)\n@@ -422,7 +423,8 @@ adjust_realpart_expr (irange &res, const gimple *stmt)\n   if (!SSA_NAME_DEF_STMT (name))\n     return;\n \n-  if (is_gimple_assign (def_stmt))\n+  if (is_gimple_assign (def_stmt)\n+      && gimple_assign_rhs_code (def_stmt) == COMPLEX_CST)\n     {\n       tree cst = gimple_assign_rhs1 (def_stmt);\n       if (TREE_CODE (cst) == COMPLEX_CST)"}, {"sha": "c937e17085bed9bf7a5c86e88ec4296f808896a7", "filename": "gcc/testsuite/gcc.c-torture/execute/pr104604.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44dc131f48254fccc69ec4178fec030e0e2761d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104604.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44dc131f48254fccc69ec4178fec030e0e2761d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104604.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104604.c?ref=d44dc131f48254fccc69ec4178fec030e0e2761d", "patch": "@@ -0,0 +1,34 @@\n+/* PR tree-optimization/104604 */\n+\n+unsigned char g;\n+\n+__attribute__((noipa))\n+unsigned char\n+foo (_Complex unsigned c)\n+{\n+  unsigned char v = g;\n+  _Complex unsigned t = 3;\n+  t /= c;\n+  return v + t;\n+}\n+\n+__attribute__((noipa))\n+unsigned char\n+bar (_Complex unsigned c)\n+{\n+  unsigned char v = g;\n+  _Complex unsigned t = 42;\n+  t /= c;\n+  return v + t;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned char x = foo (7);\n+  if (x)\n+    __builtin_abort ();\n+  if (bar (7) != 6)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}