{"sha": "1c2a9b35f73a69b56d1903cc39c0e3f25a33363c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyYTliMzVmNzNhNjliNTZkMTkwM2NjMzljMGUzZjI1YTMzMzYzYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-18T20:27:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-18T20:27:18Z"}, "message": "(c_expand_return): Set TREE_SIDE_EFFECTS for the MODIFY_EXPR that we make.\n\n(build_unary_op): Support CONJ_EXPR.\nChange BIT_NOT_EXPR to CONJ_EXPR if arg is complex.\n\nFrom-SVN: r4939", "tree": {"sha": "581471a10efa6cb0722e0b146373939bb3f23525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/581471a10efa6cb0722e0b146373939bb3f23525"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c2a9b35f73a69b56d1903cc39c0e3f25a33363c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2a9b35f73a69b56d1903cc39c0e3f25a33363c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2a9b35f73a69b56d1903cc39c0e3f25a33363c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2a9b35f73a69b56d1903cc39c0e3f25a33363c/comments", "author": null, "committer": null, "parents": [{"sha": "551064b16e9a308ebc279316494adc2763e48a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551064b16e9a308ebc279316494adc2763e48a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551064b16e9a308ebc279316494adc2763e48a5d"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "ab2b9216533c58f2e18f90b22679ce738891ac17", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2a9b35f73a69b56d1903cc39c0e3f25a33363c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2a9b35f73a69b56d1903cc39c0e3f25a33363c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=1c2a9b35f73a69b56d1903cc39c0e3f25a33363c", "patch": "@@ -3029,7 +3029,13 @@ build_unary_op (code, xarg, noconvert)\n       break;\n \n     case BIT_NOT_EXPR:\n-      if (typecode != INTEGER_TYPE)\n+      if (typecode == COMPLEX_TYPE)\n+\t{\n+\t  code = CONJ_EXPR;\n+\t  if (!noconvert)\n+\t    arg = default_conversion (arg);\n+\t}\n+      else if (typecode != INTEGER_TYPE)\n         errstring = \"wrong type argument to bit-complement\";\n       else if (!noconvert)\n \targ = default_conversion (arg);\n@@ -3043,6 +3049,15 @@ build_unary_op (code, xarg, noconvert)\n \targ = default_conversion (arg);\n       break;\n \n+    case CONJ_EXPR:\n+      /* Conjugating a real value is a no-op, but allow it anyway.  */\n+      if (!(typecode == INTEGER_TYPE || typecode == REAL_TYPE\n+\t    || typecode == COMPLEX_TYPE))\n+\terrstring = \"wrong type argument to conjugation\";\n+      else if (!noconvert)\n+\targ = default_conversion (arg);\n+      break;\n+\n     case TRUTH_NOT_EXPR:\n       if (typecode != INTEGER_TYPE\n \t  && typecode != REAL_TYPE && typecode != POINTER_TYPE\n@@ -5800,6 +5815,7 @@ c_expand_return (retval)\n       tree res = DECL_RESULT (current_function_decl);\n       t = build (MODIFY_EXPR, TREE_TYPE (res),\n \t\t res, convert (TREE_TYPE (res), t));\n+      TREE_SIDE_EFFECTS (t) = 1;\n       expand_return (t);\n       current_function_returns_value = 1;\n     }"}]}