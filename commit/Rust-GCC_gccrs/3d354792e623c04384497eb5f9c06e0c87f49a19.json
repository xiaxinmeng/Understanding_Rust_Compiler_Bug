{"sha": "3d354792e623c04384497eb5f9c06e0c87f49a19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QzNTQ3OTJlNjIzYzA0Mzg0NDk3ZWI1ZjljMDZlMGM4N2Y0OWExOQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-03-14T10:49:05Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-03-14T10:49:05Z"}, "message": "re PR lto/60461 (LTO linking error at -Os (and above) on x86_64-linux-gnu)\n\n2014-03-13  Martin Jambor  <mjambor@suse.cz>\n\n\tPR lto/60461\n\t* ipa-prop.c (ipa_modify_call_arguments): Fix iteration condition\n\tand simplify it.\n\ntestsuite/\n\t* gcc.dg/lto/pr60461_0.c: New test.\n\nFrom-SVN: r208566", "tree": {"sha": "186bdc74d530ef224645e86ec3d111193889beca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/186bdc74d530ef224645e86ec3d111193889beca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d354792e623c04384497eb5f9c06e0c87f49a19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d354792e623c04384497eb5f9c06e0c87f49a19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d354792e623c04384497eb5f9c06e0c87f49a19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d354792e623c04384497eb5f9c06e0c87f49a19/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cbf2c71aace25db3a0c2b9727de135acea7877b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbf2c71aace25db3a0c2b9727de135acea7877b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cbf2c71aace25db3a0c2b9727de135acea7877b"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "b2c7072cc20465c3a5d88e561a2516ef609d61f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d354792e623c04384497eb5f9c06e0c87f49a19", "patch": "@@ -1,3 +1,9 @@\n+2014-03-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR lto/60461\n+\t* ipa-prop.c (ipa_modify_call_arguments): Fix iteration condition\n+\tand simplify it.\n+\n 2014-03-14  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/59396"}, {"sha": "9f144fa3442818c8b2bd88a98630b7f09bd35b7f", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=3d354792e623c04384497eb5f9c06e0c87f49a19", "patch": "@@ -3900,8 +3900,7 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n       ipa_record_stmt_references (current_node, gsi_stmt (gsi));\n       gsi_prev (&gsi);\n     }\n-  while ((gsi_end_p (prev_gsi) && !gsi_end_p (gsi))\n-\t || (!gsi_end_p (prev_gsi) && gsi_stmt (gsi) == gsi_stmt (prev_gsi)));\n+  while (gsi_stmt (gsi) != gsi_stmt (prev_gsi));\n }\n \n /* If the expression *EXPR should be replaced by a reduction of a parameter, do"}, {"sha": "7f7c9743567f10b7e3d9782bc2d7f5a9f1cdffb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d354792e623c04384497eb5f9c06e0c87f49a19", "patch": "@@ -1,3 +1,8 @@\n+2014-03-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR lto/60461\n+\t* gcc.dg/lto/pr60461_0.c: New test.\n+\n 2014-03-14  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* lib/gcc-dg.exp (cleanup-saved-temps): Handle LTO temporaries."}, {"sha": "cad6a8de85b1e0f592b42f22bf8add3dbde6d78e", "filename": "gcc/testsuite/gcc.dg/lto/pr60461_0.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60461_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d354792e623c04384497eb5f9c06e0c87f49a19/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60461_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60461_0.c?ref=3d354792e623c04384497eb5f9c06e0c87f49a19", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-lto-do link } */\n+/* { dg-lto-options {{-Os -flto} } } */\n+\n+\n+struct S\n+{\n+  int f1;\n+  int f2;\n+} a[1] = { {0, 0} }; \n+\n+int b, c;\n+\n+static unsigned short fn1 (struct S);\n+\n+void\n+fn2 ()\n+{\n+  for (; c;)\n+    ;\n+  b = 0;\n+  fn1 (a[0]);\n+}\n+\n+unsigned short\n+fn1 (struct S p)\n+{\n+  if (p.f1)\n+    fn2 ();\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  fn2 ();\n+  return 0;\n+}"}]}