{"sha": "5568b57c5101ca0a9a38e9d080a07712946a8f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2OGI1N2M1MTAxY2EwYTlhMzhlOWQwODBhMDc3MTI5NDZhOGY1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T09:45:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T09:45:27Z"}, "message": "[multiple changes]\n\n2009-08-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Build_Discriminant_Formals): If the discriminals already\n\texist, as is the case for synchronized types, use the type of the\n\tdiscriminal in the parameter specification, to prevent a spurious\n\tsubtype mismatch in gigi.\n\n2009-08-17  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-env.adb: Minor reformatting\n\t* make.adb: Minor reformatting\n\tComment updates\n\n2009-08-17  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch7.adb (Wrap_Transient_Expression): Update comments.\n\nFrom-SVN: r150828", "tree": {"sha": "3ee3085ebea787bb050f4ad3bcc1772ec2d048c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ee3085ebea787bb050f4ad3bcc1772ec2d048c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5568b57c5101ca0a9a38e9d080a07712946a8f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5568b57c5101ca0a9a38e9d080a07712946a8f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5568b57c5101ca0a9a38e9d080a07712946a8f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5568b57c5101ca0a9a38e9d080a07712946a8f54/comments", "author": null, "committer": null, "parents": [{"sha": "48eff283138708a8be3d3ed2ad20d34f875abbb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48eff283138708a8be3d3ed2ad20d34f875abbb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48eff283138708a8be3d3ed2ad20d34f875abbb8"}], "stats": {"total": 64, "additions": 43, "deletions": 21}, "files": [{"sha": "a8cc86b4770b6b42840bfcf0f3bd3dce90ad0ebd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5568b57c5101ca0a9a38e9d080a07712946a8f54", "patch": "@@ -1,3 +1,27 @@\n+2009-08-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Discriminant_Formals): If the discriminals already\n+\texist, as is the case for synchronized types, use the type of the\n+\tdiscriminal in the parameter specification, to prevent a spurious\n+\tsubtype mismatch in gigi.\n+\n+2009-08-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-env.adb: Minor reformatting\n+\t* make.adb: Minor reformatting\n+\tComment updates\n+\n+2009-08-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch7.adb (Wrap_Transient_Expression): Update comments.\n+\n+2009-08-17  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-part.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-conf.adb\n+\t(Processing_Flags.Require_Obj_Dirs): new field, which controls whether\n+\tobject directories must be present. In the case of gprclean at least,\n+\tthese are optional (if they do not exist there is nothing to clean)\n+\n 2009-08-17  Robert Dewar  <dewar@adacore.com>\n \n \t* prj-env.adb: Minor reformatting"}, {"sha": "414e56701155e141de992505434e5d4ef29b7162", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=5568b57c5101ca0a9a38e9d080a07712946a8f54", "patch": "@@ -95,10 +95,11 @@ package body Exp_Ch3 is\n      (Rec_Id : Entity_Id;\n       Use_Dl : Boolean) return List_Id;\n    --  This function uses the discriminants of a type to build a list of\n-   --  formal parameters, used in the following function. If the flag Use_Dl\n-   --  is set, the list is built using the already defined discriminals\n-   --  of the type. Otherwise new identifiers are created, with the source\n-   --  names of the discriminants.\n+   --  formal parameters, used in Build_Init_Procedure among other places.\n+   --  If the flag Use_Dl is set, the list is built using the already\n+   --  defined discriminals of the type, as is the case for concurrent\n+   --  types with discriminants. Otherwise new identifiers are created,\n+   --  with the source names of the discriminants.\n \n    function Build_Equivalent_Array_Aggregate (T : Entity_Id) return Node_Id;\n    --  This function builds a static aggregate that can serve as the initial\n@@ -1141,6 +1142,7 @@ package body Exp_Ch3 is\n       Parameter_List  : constant List_Id := New_List;\n       D               : Entity_Id;\n       Formal          : Entity_Id;\n+      Formal_Type     : Entity_Id;\n       Param_Spec_Node : Node_Id;\n \n    begin\n@@ -1151,15 +1153,17 @@ package body Exp_Ch3 is\n \n             if Use_Dl then\n                Formal := Discriminal (D);\n+               Formal_Type := Etype (Formal);\n             else\n                Formal := Make_Defining_Identifier (Loc, Chars (D));\n+               Formal_Type := Etype (D);\n             end if;\n \n             Param_Spec_Node :=\n               Make_Parameter_Specification (Loc,\n                   Defining_Identifier => Formal,\n                 Parameter_Type =>\n-                  New_Reference_To (Etype (D), Loc));\n+                  New_Reference_To (Formal_Type, Loc));\n             Append (Param_Spec_Node, Parameter_List);\n             Next_Discriminant (D);\n          end loop;"}, {"sha": "a4f6a66fd9ba471b8a104afdfa66e9aa42dcd179", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=5568b57c5101ca0a9a38e9d080a07712946a8f54", "patch": "@@ -3554,9 +3554,7 @@ package body Exp_Ch7 is\n       Loc  : constant Source_Ptr := Sloc (N);\n       E    : constant Entity_Id  := Make_Temporary (Loc, 'E', N);\n       Etyp : constant Entity_Id  := Etype (N);\n-\n-      Expr : constant Node_Id := Relocate_Node (N);\n-      --  Capture this node because the call to Adjust_SCIL_Node can ???\n+      Expr : constant Node_Id    := Relocate_Node (N);\n \n    begin\n       --  If the relocated node is a function call then check if some SCIL"}, {"sha": "69e00f31ecec3e3f4272dbe9bbffb2026dbc820b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=5568b57c5101ca0a9a38e9d080a07712946a8f54", "patch": "@@ -645,7 +645,7 @@ package body Make is\n    --  the fact that this ALI file is read-only.\n \n    procedure Process_Multilib;\n-   --  Add appropriate --RTS argument to handle multilib.\n+   --  Add appropriate --RTS argument to handle multilib\n \n    ----------------------------------------------------\n    -- Compiler, Binder & Linker Data and Subprograms --\n@@ -7304,7 +7304,6 @@ package body Make is\n    ----------------------\n \n    procedure Process_Multilib is\n-\n       Output_FD         : File_Descriptor;\n       Output_Name       : String_Access;\n       Arg_Index         : Natural := 0;\n@@ -7331,7 +7330,6 @@ package body Make is\n                Arg_Index := Arg_Index + 1;\n                Args (Arg_Index) := new String'(Argv);\n             end if;\n-\n          end;\n       end loop;\n \n@@ -7345,22 +7343,24 @@ package body Make is\n          Multilib_Gcc := Gcc;\n       end if;\n \n-      Multilib_Gcc_Path :=\n-        GNAT.OS_Lib.Locate_Exec_On_Path (Multilib_Gcc.all);\n+      Multilib_Gcc_Path := GNAT.OS_Lib.Locate_Exec_On_Path (Multilib_Gcc.all);\n \n       Create_Temp_File (Output_FD, Output_Name);\n+\n       if Output_FD = Invalid_FD then\n          return;\n       end if;\n \n-      GNAT.OS_Lib.Spawn (Multilib_Gcc_Path.all, Args, Output_FD,\n-                         Return_Code, False);\n+      GNAT.OS_Lib.Spawn\n+        (Multilib_Gcc_Path.all, Args, Output_FD, Return_Code, False);\n       Close (Output_FD);\n+\n       if Return_Code /= 0 then\n          return;\n       end if;\n \n       Output_FD := Open_Read (Output_Name.all, Binary);\n+\n       if Output_FD = Invalid_FD then\n          return;\n       end if;\n@@ -7382,9 +7382,7 @@ package body Make is\n       end if;\n \n       Scan_Make_Arg (\"-margs\", And_Save => True);\n-      Scan_Make_Arg (\"--RTS=\" & Line (1 .. N_Read),\n-                     And_Save => True);\n-\n+      Scan_Make_Arg (\"--RTS=\" & Line (1 .. N_Read), And_Save => True);\n    end Process_Multilib;\n \n    -----------------------------\n@@ -7396,6 +7394,7 @@ package body Make is\n       Seen : Project_Boolean_Htable.Instance := Project_Boolean_Htable.Nil;\n \n       procedure Recurse (Prj : Project_Id; Depth : Natural);\n+      --  Recursive procedure that does the work, keeping track of the depth\n \n       -------------\n       -- Recurse --"}, {"sha": "0ffacdbdc5b5687a411b0f3838dfb356a8b19c9d", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568b57c5101ca0a9a38e9d080a07712946a8f54/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=5568b57c5101ca0a9a38e9d080a07712946a8f54", "patch": "@@ -222,8 +222,6 @@ package body Prj.Env is\n    -- Add_To_Buffer --\n    -------------------\n \n-   --  Wouldn't it be more consistent to use a Table for Buffer ???\n-\n    procedure Add_To_Buffer\n      (S           : String;\n       Buffer      : in out String_Access;\n@@ -236,7 +234,6 @@ package body Prj.Env is\n          declare\n             New_Buffer : constant String_Access :=\n                            new String (1 .. 2 * Buffer'Last);\n-\n          begin\n             New_Buffer (1 .. Buffer_Last) := Buffer (1 .. Buffer_Last);\n             Free (Buffer);"}]}