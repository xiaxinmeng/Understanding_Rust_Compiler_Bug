{"sha": "e19a77e63b5b2004eb8bd83cfecc87832149ef52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE5YTc3ZTYzYjViMjAwNGViOGJkODNjZmVjYzg3ODMyMTQ5ZWY1Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-25T06:37:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-25T06:37:20Z"}, "message": "(unary_expr => ANDAND identifier): Handle lookup_label returning 0.\n\nFrom-SVN: r3325", "tree": {"sha": "bdb4c8926d55c304aa93e628fdcc6f0fdd29201d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdb4c8926d55c304aa93e628fdcc6f0fdd29201d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e19a77e63b5b2004eb8bd83cfecc87832149ef52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19a77e63b5b2004eb8bd83cfecc87832149ef52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19a77e63b5b2004eb8bd83cfecc87832149ef52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19a77e63b5b2004eb8bd83cfecc87832149ef52/comments", "author": null, "committer": null, "parents": [{"sha": "7d9795e55251f0bbd8ae853c2aca0f35dba431e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9795e55251f0bbd8ae853c2aca0f35dba431e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d9795e55251f0bbd8ae853c2aca0f35dba431e3"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "a40dbfe089fa484a184ee75fc7d2e633c657c954", "filename": "gcc/c-parse.in", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19a77e63b5b2004eb8bd83cfecc87832149ef52/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19a77e63b5b2004eb8bd83cfecc87832149ef52/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=e19a77e63b5b2004eb8bd83cfecc87832149ef52", "patch": "@@ -390,9 +390,15 @@ unary_expr:\n \t/* Refer to the address of a label as a pointer.  */\n \t| ANDAND identifier\n \t\t{ tree label = lookup_label ($2);\n-\t\t  TREE_USED (label) = 1;\n-\t\t  $$ = build1 (ADDR_EXPR, ptr_type_node, label);\n-\t\t  TREE_CONSTANT ($$) = 1; }\n+\t\t  if (label == 0)\n+\t\t    $$ = null_pointer_node;\n+\t\t  else\n+\t\t    {\n+\t\t      TREE_USED (label) = 1;\n+\t\t      $$ = build1 (ADDR_EXPR, ptr_type_node, label);\n+\t\t      TREE_CONSTANT ($$) = 1;\n+\t\t    }\n+\t\t}\n /* This seems to be impossible on some machines, so let's turn it off.\n    You can use __builtin_next_arg to find the anonymous stack args.\n \t| '&' ELLIPSIS"}]}