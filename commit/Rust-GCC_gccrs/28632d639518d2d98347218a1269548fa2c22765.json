{"sha": "28632d639518d2d98347218a1269548fa2c22765", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg2MzJkNjM5NTE4ZDJkOTgzNDcyMThhMTI2OTU0OGZhMmMyMjc2NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-17T22:42:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-17T22:42:02Z"}, "message": "lto.c (lto_materialize_function): Announce function when reading body...\n\n\t* lto.c (lto_materialize_function): Announce function when\n\treading body; allocate_struct_function only when reading body;\n\tdo not finalize local statics; ggc_collect after reading;\n\tdo not mark reachable node.\n\t(materialize_cgraph): Do not announce function.\n\nFrom-SVN: r159516", "tree": {"sha": "dd39735c3c41044f11ba9127db8622a7b69e26c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd39735c3c41044f11ba9127db8622a7b69e26c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28632d639518d2d98347218a1269548fa2c22765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28632d639518d2d98347218a1269548fa2c22765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28632d639518d2d98347218a1269548fa2c22765", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28632d639518d2d98347218a1269548fa2c22765/comments", "author": null, "committer": null, "parents": [{"sha": "d3a9b459b78d601a3790e688cd8c40d164365120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9b459b78d601a3790e688cd8c40d164365120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a9b459b78d601a3790e688cd8c40d164365120"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "e5abeb1f11ae69fd7f91c61f7d32b9664b68e666", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28632d639518d2d98347218a1269548fa2c22765/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28632d639518d2d98347218a1269548fa2c22765/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=28632d639518d2d98347218a1269548fa2c22765", "patch": "@@ -1,3 +1,11 @@\n+2010-05-18  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto.c (lto_materialize_function): Announce function when\n+\treading body; allocate_struct_function only when reading body;\n+\tdo not finalize local statics; ggc_collect after reading;\n+\tdo not mark reachable node.\n+\t(materialize_cgraph): Do not announce function.\n+\n 2010-05-11  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (materialize_cgraph): Revert my previous patch."}, {"sha": "ab55c126e9c2b9182da5d5758f459ed4983babc4", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28632d639518d2d98347218a1269548fa2c22765/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28632d639518d2d98347218a1269548fa2c22765/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=28632d639518d2d98347218a1269548fa2c22765", "patch": "@@ -84,7 +84,6 @@ lto_materialize_function (struct cgraph_node *node)\n   struct lto_file_decl_data *file_data;\n   const char *data, *name;\n   size_t len;\n-  tree step;\n \n   /* Ignore clone nodes.  Read the body only from the original one.\n      We may find clone nodes during LTRANS after WPA has made inlining\n@@ -103,46 +102,33 @@ lto_materialize_function (struct cgraph_node *node)\n \t\t\t       name, &len);\n   if (data)\n     {\n-      struct function *fn;\n-\n       gcc_assert (!DECL_IS_BUILTIN (decl));\n \n       /* This function has a definition.  */\n       TREE_STATIC (decl) = 1;\n \n       gcc_assert (DECL_STRUCT_FUNCTION (decl) == NULL);\n-      allocate_struct_function (decl, false);\n \n       /* Load the function body only if not operating in WPA mode.  In\n \t WPA mode, the body of the function is not needed.  */\n       if (!flag_wpa)\n \t{\n+         allocate_struct_function (decl, false);\n+\t  announce_function (node->decl);\n \t  lto_input_function_body (file_data, decl, data);\n \t  lto_stats.num_function_bodies++;\n \t}\n \n-      fn = DECL_STRUCT_FUNCTION (decl);\n       lto_free_section_data (file_data, LTO_section_function_body, name,\n \t\t\t     data, len);\n-\n-      /* Look for initializers of constant variables and private\n-\t statics.  */\n-      for (step = fn->local_decls; step; step = TREE_CHAIN (step))\n-\t{\n-\t  tree decl = TREE_VALUE (step);\n-\t  if (TREE_CODE (decl) == VAR_DECL\n-\t      && (TREE_STATIC (decl) && !DECL_EXTERNAL (decl))\n-\t      && flag_unit_at_a_time)\n-\t    varpool_finalize_decl (decl);\n-\t}\n+      if (!flag_wpa)\n+\tggc_collect ();\n     }\n   else\n     DECL_EXTERNAL (decl) = 1;\n \n   /* Let the middle end know about the function.  */\n   rest_of_decl_compilation (decl, 1, 0);\n-  if (cgraph_node (decl)->needed)\n-    cgraph_mark_reachable_node (cgraph_node (decl));\n }\n \n \n@@ -1686,7 +1672,6 @@ materialize_cgraph (void)\n       if (node->local.lto_file_data\n           && !DECL_IS_BUILTIN (node->decl))\n \t{\n-\t  announce_function (node->decl);\n \t  lto_materialize_function (node);\n \t  lto_stats.num_input_cgraph_nodes++;\n \t}"}]}