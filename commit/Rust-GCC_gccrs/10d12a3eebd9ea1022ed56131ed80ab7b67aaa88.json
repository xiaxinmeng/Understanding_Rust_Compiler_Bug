{"sha": "10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkMTJhM2VlYmQ5ZWExMDIyZWQ1NjEzMWVkODBhYjdiNjdhYWE4OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-05T15:43:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-05T15:43:54Z"}, "message": "re PR lto/50490 (ICE when compiling libglib2.0 with LTO, tree code 'optimization_node' is not supported in LTO streams)\n\n2012-01-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/50490\n\t* tree-streamer-out.c (write_ts_optimization): New function.\n\t(streamer_write_tree_body): Call it.\n\t* tree-streamer-in.c (lto_input_ts_optimization): New function.\n\t(streamer_read_tree_body): Call it.\n\t* lto-streamer-out.c (lto_is_streamable): Handle OPTIMIZATION_NODE.\n\nFrom-SVN: r182917", "tree": {"sha": "f5f2a9f356b5b265ba6c2695f02cd6f9104bdf17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f2a9f356b5b265ba6c2695f02cd6f9104bdf17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4207e25d3dbf08af6d20a304ea853392c5fcac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4207e25d3dbf08af6d20a304ea853392c5fcac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4207e25d3dbf08af6d20a304ea853392c5fcac3"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "4e5c771ab27021cf825b4a949c38ba65f1b258bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "patch": "@@ -1,3 +1,12 @@\n+2012-01-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/50490\n+\t* tree-streamer-out.c (write_ts_optimization): New function.\n+\t(streamer_write_tree_body): Call it.\n+\t* tree-streamer-in.c (lto_input_ts_optimization): New function.\n+\t(streamer_read_tree_body): Call it.\n+\t* lto-streamer-out.c (lto_is_streamable): Handle OPTIMIZATION_NODE.\n+\n 2012-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/51761"}, {"sha": "054bb85be0b4dfb11786897568f39cc123d1ab4f", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "patch": "@@ -304,7 +304,6 @@ lto_is_streamable (tree expr)\n \t && code != WITH_CLEANUP_EXPR\n \t && code != STATEMENT_LIST\n \t && code != OMP_CLAUSE\n-\t && code != OPTIMIZATION_NODE\n \t && (code == CASE_LABEL_EXPR\n \t     || code == DECL_EXPR\n \t     || TREE_CODE_CLASS (code) != tcc_statement);"}, {"sha": "c7215105233a500ec2fd2b9b5e860763373a6b98", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "patch": "@@ -903,6 +903,23 @@ lto_input_ts_target_option (struct lto_input_block *ib, tree expr)\n     fatal_error (\"cl_target_option size mismatch in LTO reader and writer\");\n }\n \n+/* Input a TS_OPTIMIZATION tree from IB into EXPR.  */\n+\n+static void\n+lto_input_ts_optimization (struct lto_input_block *ib, tree expr)\n+{\n+  unsigned i, len;\n+  struct bitpack_d bp;\n+  struct cl_optimization *t = TREE_OPTIMIZATION (expr);\n+\n+  bp = streamer_read_bitpack (ib);\n+  len = sizeof (struct cl_optimization);\n+  for (i = 0; i < len; i++)\n+    ((unsigned char *)t)[i] = bp_unpack_value (&bp, 8);\n+  if (bp_unpack_value (&bp, 32) != 0x12345678)\n+    fatal_error (\"cl_optimization size mismatch in LTO reader and writer\");\n+}\n+\n /* Input a TS_TRANSLATION_UNIT_DECL tree from IB and DATA_IN into EXPR.  */\n \n static void\n@@ -979,6 +996,9 @@ streamer_read_tree_body (struct lto_input_block *ib, struct data_in *data_in,\n   if (CODE_CONTAINS_STRUCT (code, TS_TARGET_OPTION))\n     lto_input_ts_target_option (ib, expr);\n \n+  if (CODE_CONTAINS_STRUCT (code, TS_OPTIMIZATION))\n+    lto_input_ts_optimization (ib, expr);\n+\n   if (CODE_CONTAINS_STRUCT (code, TS_TRANSLATION_UNIT_DECL))\n     lto_input_ts_translation_unit_decl_tree_pointers (ib, data_in, expr);\n }"}, {"sha": "df8b92aa10225906b6e639e4ab4cab0c45376a69", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d12a3eebd9ea1022ed56131ed80ab7b67aaa88/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=10d12a3eebd9ea1022ed56131ed80ab7b67aaa88", "patch": "@@ -767,6 +767,27 @@ write_ts_target_option (struct output_block *ob, tree expr)\n   streamer_write_bitpack (&bp);\n }\n \n+/* Write a TS_OPTIMIZATION tree in EXPR to OB.  */\n+\n+static void\n+write_ts_optimization (struct output_block *ob, tree expr)\n+{\n+  struct cl_optimization *t = TREE_OPTIMIZATION (expr);\n+  struct bitpack_d bp;\n+  unsigned i, len;\n+\n+  /* The cl_optimizaation is generated by the options\n+     awk script, so we just recreate a byte-by-byte copy here. */\n+\n+  bp = bitpack_create (ob->main_stream);\n+  len = sizeof (struct cl_optimization);\n+  for (i = 0; i < len; i++)\n+    bp_pack_value (&bp, ((unsigned char *)t)[i], 8);\n+  /* Catch struct size mismatches between reader and writer. */\n+  bp_pack_value (&bp, 0x12345678, 32);\n+  streamer_write_bitpack (&bp);\n+}\n+\n /* Write a TS_TRANSLATION_UNIT_DECL tree in EXPR to OB.  */\n \n static void\n@@ -841,6 +862,9 @@ streamer_write_tree_body (struct output_block *ob, tree expr, bool ref_p)\n   if (CODE_CONTAINS_STRUCT (code, TS_TARGET_OPTION))\n     write_ts_target_option (ob, expr);\n \n+  if (CODE_CONTAINS_STRUCT (code, TS_OPTIMIZATION))\n+    write_ts_optimization (ob, expr);\n+\n   if (CODE_CONTAINS_STRUCT (code, TS_TRANSLATION_UNIT_DECL))\n     write_ts_translation_unit_decl_tree_pointers (ob, expr);\n }"}]}