{"sha": "822a55a08e313229c340f6bf4b76c5f32b270d8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyYTU1YTA4ZTMxMzIyOWMzNDBmNmJmNGI3NmM1ZjMyYjI3MGQ4ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-04T16:06:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-04T16:06:45Z"}, "message": "re PR middle-end/46292 (FAIL: gcc.c-torture/execute/vector-shift2.c compilation,  -O3 -g)\n\n\tPR middle-end/46292\n\t* lower-suberg.c (simplify_subreg_concatn): For VOIDmode elements,\n\tif the innermode is not vector mode, determine the mode of a subreg\n\tby using mode_for_size of inner_size.\n\nFrom-SVN: r166318", "tree": {"sha": "c0a3bbbd31e49b5046fda809dfe89888d2e6b972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0a3bbbd31e49b5046fda809dfe89888d2e6b972"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/822a55a08e313229c340f6bf4b76c5f32b270d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a55a08e313229c340f6bf4b76c5f32b270d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822a55a08e313229c340f6bf4b76c5f32b270d8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a55a08e313229c340f6bf4b76c5f32b270d8e/comments", "author": null, "committer": null, "parents": [{"sha": "f7d042e2738fd5382cbdcb3284c237968fda4149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d042e2738fd5382cbdcb3284c237968fda4149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d042e2738fd5382cbdcb3284c237968fda4149"}], "stats": {"total": 60, "additions": 36, "deletions": 24}, "files": [{"sha": "b0618ac209542de7a7d4130f6fcdef5cdf5057c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822a55a08e313229c340f6bf4b76c5f32b270d8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822a55a08e313229c340f6bf4b76c5f32b270d8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=822a55a08e313229c340f6bf4b76c5f32b270d8e", "patch": "@@ -1,3 +1,10 @@\n+2010-11-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/46292\n+\t* lower-suberg.c (simplify_subreg_concatn): For VOIDmode elements,\n+\tif the innermode is not vector mode, determine the mode of a subreg\n+\tby using mode_for_size of inner_size.\n+\n 2010-11-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR rtl-optimization/46183\n@@ -100,9 +107,9 @@\n \n 2010-11-03  Xinliang David Li  <davidxl@google.com>\n \n-       PR target/46200\n-       * tree-ssa-loop-ivopts.c (get_computation_cost_at):\n-       Adjust cbase if the use stmt is after iv update.\n+\tPR target/46200\n+\t* tree-ssa-loop-ivopts.c (get_computation_cost_at):\n+\tAdjust cbase if the use stmt is after iv update.\n \n 2010-11-03  Kaz Kojima  <kkojima@gcc.gnu.org>\n "}, {"sha": "3563cee0824e8da863409dc084290171398b5705", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822a55a08e313229c340f6bf4b76c5f32b270d8e/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822a55a08e313229c340f6bf4b76c5f32b270d8e/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=822a55a08e313229c340f6bf4b76c5f32b270d8e", "patch": "@@ -411,10 +411,15 @@ simplify_subreg_concatn (enum machine_mode outermode, rtx op,\n   part = XVECEXP (op, 0, byte / inner_size);\n   partmode = GET_MODE (part);\n \n-  if (partmode == VOIDmode)\n+  /* VECTOR_CSTs in debug expressions are expanded into CONCATN instead of\n+     regular CONST_VECTORs.  They have vector or integer modes, depending\n+     on the capabilities of the target.  Cope with them.  */\n+  if (partmode == VOIDmode && VECTOR_MODE_P (innermode))\n+    partmode = GET_MODE_INNER (innermode);\n+  else if (partmode == VOIDmode)\n     {\n-      gcc_assert (VECTOR_MODE_P (innermode));\n-      partmode = GET_MODE_INNER (innermode);\n+      enum mode_class mclass = GET_MODE_CLASS (innermode);\n+      partmode = mode_for_size (inner_size * BITS_PER_UNIT, mclass, 0);\n     }\n \n   final_offset = byte % inner_size;"}, {"sha": "89a05356e3cf5769a217972ec3c8c3f4456b1547", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822a55a08e313229c340f6bf4b76c5f32b270d8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822a55a08e313229c340f6bf4b76c5f32b270d8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=822a55a08e313229c340f6bf4b76c5f32b270d8e", "patch": "@@ -89,15 +89,15 @@\n \t* objc.dg/property/at-property-14.m: New.\n \t* objc.dg/property/at-property-15.m: New.\n \t* obj-c++.dg/property/at-property-14.mm: New.\n-\t* obj-c++.dg/property/at-property-15.mm: New.\t\n+\t* obj-c++.dg/property/at-property-15.mm: New.\n \n \t* objc.dg/foreach-6.m: Added a few more tests for valid and\n \tinvalid iterating variables and collections.\n-\t\n+\n 2010-11-03  Xinliang David Li  <davidxl@google.com>\n \n-       PR target/46200\n-       * g++.dg/tree-ssa/ivopts-2.C: New test.\n+\tPR target/46200\n+\t* g++.dg/tree-ssa/ivopts-2.C: New test.\n \n 2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -153,7 +153,7 @@\n 2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tImplemented -fobjc-std=objc1 flag.\n-\t* objc.dg/fobjc-std-1.m: New.\t\n+\t* objc.dg/fobjc-std-1.m: New.\n \t* obj-c++.dg/fobjc-std-1.mm: New.\n \n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n@@ -186,9 +186,9 @@\n 2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/dotsyntax-1.m: New.\n-\t* objc.dg/property/dotsyntax-2.m: New.\t\n+\t* objc.dg/property/dotsyntax-2.m: New.\n \t* obj-c++.dg/property/dotsyntax-1.mm: New.\n-\t* obj-c++.dg/property/dotsyntax-2.mm: New.\t\n+\t* obj-c++.dg/property/dotsyntax-2.mm: New.\n \n 2010-11-03  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -407,12 +407,12 @@\n \t* obj-c++.dg/attributes/method-deprecated-3.mm: New.\n \t* obj-c++.dg/attributes/method-noreturn-1.mm: New.\n \t* obj-c++.dg/attributes/method-sentinel-1.mm: New.\n-\t* obj-c++.dg/attributes/method-format-1.mm: New.\t\n-\t\n+\t* obj-c++.dg/attributes/method-format-1.mm: New.\n+\n 2010-11-01  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/at-property-deprecated-1.m: New.\n-\t* obj-c++.dg/property/at-property-deprecated-1.mm: New.\t\n+\t* obj-c++.dg/property/at-property-deprecated-1.mm: New.\n \n 2010-11-01  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n@@ -434,8 +434,8 @@\n \t* objc.dg/property/at-property-12.m: New.\n \t* objc.dg/property/at-property-13.m: New.\n \t* obj-c++.dg/property/at-property-12.mm: New.\n-\t* obj-c++.dg/property/at-property-13.mm: New.\t\n-\t\n+\t* obj-c++.dg/property/at-property-13.mm: New.\n+\n 2010-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/46152\n@@ -516,7 +516,7 @@\n \t* objc.dg/property/property-neg-4.m: Same change.\n \t* objc.dg/property/property-neg-5.m: Same change.\n \t* objc.dg/property/property-neg-7.m: Same change.\n-\t* objc.dg/property/property-1.m: Same change.\t\n+\t* objc.dg/property/property-1.m: Same change.\n \t* objc.dg/property/synthesize-1.m: Same change.\n \t* objc.dg/property/at-property-2.m: Same change.\n \t* objc.dg/property/at-property-4.m: Same change.\n@@ -526,7 +526,7 @@\n \t@synthesize/@dynamic.  Use the same code for GNU and NeXT runtime.\n \t* objc.dg/property/fsf-property-basic.m: Same change.\n \t* objc.dg/property/fsf-property-named-ivar.m: Same change.\n-\t\n+\n \t* objc.dg/property/at-property-5.m: New.\n \t* objc.dg/property/at-property-6.m: New.\n \t* objc.dg/property/at-property-7.m: New.\n@@ -545,7 +545,7 @@\n \t* obj-c++.dg/property/property-neg-4.mm: Same change.\n \t* obj-c++.dg/property/property-neg-5.mm: Same change.\n \t* obj-c++.dg/property/property-neg-7.mm: Same change.\n-\t* obj-c++.dg/property/property-1.mm: Same change.\t\n+\t* obj-c++.dg/property/property-1.mm: Same change.\n \t* obj-c++.dg/property/synthesize-1.mm: Same change.\n \t* obj-c++.dg/property/at-property-2.mm: Same change.\n \t* obj-c++.dg/property/at-property-4.mm: Same change.\n@@ -555,17 +555,17 @@\n \t@synthesize/@dynamic.  Use the same code for GNU and NeXT runtime.\n \t* obj-c++.dg/property/fsf-property-basic.mm: Same change.\n \t* obj-c++.dg/property/fsf-property-named-ivar.mm: Same change.\n-\t\n+\n \t* obj-c++.dg/property/at-property-5.mm: New.\n-\t* obj-c++.dg/property/at-property-6.mm: New.\t\n+\t* obj-c++.dg/property/at-property-6.mm: New.\n \t* obj-c++.dg/property/at-property-7.mm: New.\n \t* obj-c++.dg/property/at-property-8.mm: New.\n \t* obj-c++.dg/property/at-property-9.mm: New.\n \t* obj-c++.dg/property/at-property-10.mm: New.\n \t* obj-c++.dg/property/at-property-11.mm: New.\n \t* obj-c++.dg/property/synthesize-2.mm: New.\n \t* obj-c++.dg/property/dynamic-2.mm: New.\n-\t\n+\n 2010-10-29  Artjoms Sinkarovs <artyom.shinakroff@gmail.com>\n \t    Andrew Pinski <pinskia@gmail.com>\n "}]}