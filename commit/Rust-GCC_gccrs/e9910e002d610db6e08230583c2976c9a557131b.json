{"sha": "e9910e002d610db6e08230583c2976c9a557131b", "node_id": "C_kwDOANBUbNoAKGU5OTEwZTAwMmQ2MTBkYjZlMDgyMzA1ODNjMjk3NmM5YTU1NzEzMWI", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2023-03-31T15:04:44Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2023-03-31T15:05:45Z"}, "message": "LRA: Implement commutative operands exchange for combining secondary memory reload and original insn\n\nThe patch implements trying commutative operands exchange for\ncombining secondary memory reload and original insn.\n\n        PR rtl-optimization/109052\n\ngcc/ChangeLog:\n\n\t* lra-constraints.cc: (combine_reload_insn): New function.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr109052-2.c: New.", "tree": {"sha": "8557d7841d62df97bc2697d96bc67a8ccaf5be25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8557d7841d62df97bc2697d96bc67a8ccaf5be25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9910e002d610db6e08230583c2976c9a557131b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9910e002d610db6e08230583c2976c9a557131b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9910e002d610db6e08230583c2976c9a557131b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9910e002d610db6e08230583c2976c9a557131b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a35e8042fbc7a3eb9cece1fba4cdd3b6cdfb906f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35e8042fbc7a3eb9cece1fba4cdd3b6cdfb906f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35e8042fbc7a3eb9cece1fba4cdd3b6cdfb906f"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "ff4e8f06063682e4e240701e389e5014323ea0e8", "filename": "gcc/lra-constraints.cc", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9910e002d610db6e08230583c2976c9a557131b/gcc%2Flra-constraints.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9910e002d610db6e08230583c2976c9a557131b/gcc%2Flra-constraints.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.cc?ref=e9910e002d610db6e08230583c2976c9a557131b", "patch": "@@ -5061,7 +5061,23 @@ combine_reload_insn (rtx_insn *from, rtx_insn *to)\n       curr_insn = to;\n       curr_id = lra_get_insn_recog_data (curr_insn);\n       curr_static_id = curr_id->insn_static_data;\n-      ok_p = !curr_insn_transform (true);\n+      for (bool swapped_p = false;;)\n+\t{\n+\t  ok_p = !curr_insn_transform (true);\n+\t  if (ok_p || curr_static_id->commutative < 0)\n+\t    break;\n+\t  swap_operands (curr_static_id->commutative);\n+\t  if (lra_dump_file != NULL)\n+\t    {\n+\t      fprintf (lra_dump_file,\n+\t\t       \"    Swapping %scombined insn operands:\\n\",\n+\t\t       swapped_p ? \"back \" : \"\");\n+\t      dump_insn_slim (lra_dump_file, to);\n+\t    }\n+\t  if (swapped_p)\n+\t    break;\n+\t  swapped_p = true;\n+\t}\n       curr_insn = saved_insn;\n       curr_id = lra_get_insn_recog_data (curr_insn);\n       curr_static_id = curr_id->insn_static_data;"}, {"sha": "337d1f49c2b76b049efb2cee733c1977e794a96a", "filename": "gcc/testsuite/gcc.target/i386/pr109052-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9910e002d610db6e08230583c2976c9a557131b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109052-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9910e002d610db6e08230583c2976c9a557131b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109052-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109052-2.c?ref=e9910e002d610db6e08230583c2976c9a557131b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mfpmath=both -mavx -fno-math-errno\" } */\n+\n+double foo (double a, double b)\n+{\n+  double z = __builtin_fmod (a, 3.14);\n+  return z * b;\n+}\n+\n+/* { dg-final { scan-assembler-not \"vmulsd\\[ \\t]\\+%xmm\\[0-9]\\+, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\"} } */"}]}