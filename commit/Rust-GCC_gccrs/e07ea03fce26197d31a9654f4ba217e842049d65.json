{"sha": "e07ea03fce26197d31a9654f4ba217e842049d65", "node_id": "C_kwDOANBUbNoAKGUwN2VhMDNmY2UyNjE5N2QzMWE5NjU0ZjRiYTIxN2U4NDIwNDlkNjU", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2022-04-27T11:54:22Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2022-04-27T13:25:00Z"}, "message": "ada: Fix build for RTEMS\n\nCommit 621cccba3f8b0cd2757feda171e66e3820b55c2c broke the Ada build for all\nRTEMS targets except aarch64.\n\ngcc/ada/\n\n\t* tracebak.c: Add support for ARM RTEMS. Add support for RTEMS to PPC\n\tELF.  Add support for RTEMS to SPARC.  Merge aarch64 support of Linux\n\tand RTEMS.", "tree": {"sha": "b773153c17036a2c05d85d27140000bcf583f2d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b773153c17036a2c05d85d27140000bcf583f2d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e07ea03fce26197d31a9654f4ba217e842049d65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ea03fce26197d31a9654f4ba217e842049d65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07ea03fce26197d31a9654f4ba217e842049d65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ea03fce26197d31a9654f4ba217e842049d65/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b21d79e4e462e38868486bbf3d1eaf4c14cc6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b21d79e4e462e38868486bbf3d1eaf4c14cc6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b21d79e4e462e38868486bbf3d1eaf4c14cc6d0"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "6cc5d301737c85298d84a72ee892aaf13772a86b", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07ea03fce26197d31a9654f4ba217e842049d65/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07ea03fce26197d31a9654f4ba217e842049d65/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=e07ea03fce26197d31a9654f4ba217e842049d65", "patch": "@@ -316,6 +316,13 @@ __gnat_backtrace (void **array,\n #define PC_ADJUST -2\n #define USING_ARM_UNWINDING 1\n \n+/*---------------------- ARM RTEMS ------------------------------------ -*/\n+#elif (defined (__arm__) && defined (__rtems__))\n+\n+#define USE_GCC_UNWINDER\n+#define PC_ADJUST -2\n+#define USING_ARM_UNWINDING 1\n+\n /*---------------------- PPC AIX/PPC Lynx 178/Older Darwin --------------*/\n #elif ((defined (_POWER) && defined (_AIX)) || \\\n        (defined (__powerpc__) && defined (__Lynx__) && !defined(__ELF__)) || \\\n@@ -370,11 +377,12 @@ extern void __runnit(); /* thread entry point.  */\n \n #define BASE_SKIP 1\n \n-/*----------- PPC ELF (GNU/Linux & VxWorks & Lynx178e) -------------------*/\n+/*----------- PPC ELF (GNU/Linux & VxWorks & Lynx178e & RTEMS ) ----------*/\n \n #elif (defined (_ARCH_PPC) && defined (__vxworks)) ||  \\\n   (defined (__powerpc__) && defined (__Lynx__) && defined(__ELF__)) || \\\n-  (defined (__linux__) && defined (__powerpc__))\n+  (defined (__linux__) && defined (__powerpc__)) || \\\n+  (defined (__powerpc__) && defined (__rtems__))\n \n #if defined (_ARCH_PPC64) && !defined (__USING_SJLJ_EXCEPTIONS__)\n #define USE_GCC_UNWINDER\n@@ -404,9 +412,9 @@ struct layout\n \n #define BASE_SKIP 1\n \n-/*-------------------------- SPARC Solaris -----------------------------*/\n+/*-------------------------- SPARC Solaris or RTEMS --------------------*/\n \n-#elif defined (__sun__) && defined (__sparc__)\n+#elif (defined (__sun__) || defined (__rtems__)) && defined (__sparc__)\n \n #define USE_GENERIC_UNWINDER\n \n@@ -551,21 +559,9 @@ is_return_from(void *symbol_addr, void *ret_addr)\n #error Unhandled QNX architecture.\n #endif\n \n-/*---------------------------- RTEMS ---------------------------------*/\n-\n-#elif defined (__rtems__)\n-\n-#define USE_GCC_UNWINDER\n-\n-#if defined (__aarch64__)\n-#define PC_ADJUST -4\n-#else\n-#error Unhandled RTEMS architecture.\n-#endif\n-\n-/*------------------- aarch64-linux ----------------------------------*/\n+/*------------------- aarch64-linux or aarch64-rtems -----------------*/\n \n-#elif (defined (__aarch64__) && defined (__linux__))\n+#elif (defined (__aarch64__) && (defined (__linux__) || defined (__rtems__)))\n \n #define USE_GCC_UNWINDER\n #define PC_ADJUST -4"}]}