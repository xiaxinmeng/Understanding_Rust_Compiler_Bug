{"sha": "8aa76bb74696d0987e04a82ebcbc44f745ce788d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFhNzZiYjc0Njk2ZDA5ODdlMDRhODJlYmNiYzQ0Zjc0NWNlNzg4ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-11-05T20:36:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-11-05T20:36:09Z"}, "message": "Catch missed uses of function with unsatisfied constraints.\n\nWhile looking at CA378 I noticed that we weren't properly diagnosing two of\nthe three erroneous lines in the example.\n\n\t* decl2.c (mark_used): Diagnose use of a function with unsatisfied\n\tconstraints here.\n\t* typeck.c (cp_build_function_call_vec): Not here.\n\nFrom-SVN: r277860", "tree": {"sha": "51e7fd2a980daeb3ea6a34cfb89b37137299cce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e7fd2a980daeb3ea6a34cfb89b37137299cce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aa76bb74696d0987e04a82ebcbc44f745ce788d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa76bb74696d0987e04a82ebcbc44f745ce788d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa76bb74696d0987e04a82ebcbc44f745ce788d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa76bb74696d0987e04a82ebcbc44f745ce788d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0df65305ff678bd1ad5305e69e3d73e43f0f34f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df65305ff678bd1ad5305e69e3d73e43f0f34f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df65305ff678bd1ad5305e69e3d73e43f0f34f0"}], "stats": {"total": 250, "additions": 131, "deletions": 119}, "files": [{"sha": "00f5218799e1f660c72ac465849a71c35005a876", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -1,3 +1,9 @@\n+2019-11-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl2.c (mark_used): Diagnose use of a function with unsatisfied\n+\tconstraints here.\n+\t* typeck.c (cp_build_function_call_vec): Not here.\n+\n 2019-11-05  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/92370"}, {"sha": "4dc548111229f129ed2d28fbee36f4cc610993b6", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -5524,6 +5524,21 @@ mark_used (tree decl, tsubst_flags_t complain)\n      directly.  */\n   maybe_instantiate_decl (decl);\n \n+  if (flag_concepts && TREE_CODE (decl) == FUNCTION_DECL\n+      && !constraints_satisfied_p (decl))\n+    {\n+      if (complain & tf_error)\n+\t{\n+\t  auto_diagnostic_group d;\n+\t  error (\"use of function %qD with unsatisfied constraints\",\n+\t\t decl);\n+\t  location_t loc = DECL_SOURCE_LOCATION (decl);\n+\t  inform (loc, \"declared here\");\n+\t  diagnose_constraints (loc, decl, NULL_TREE);\n+\t}\n+      return false;\n+    }\n+\n   if (processing_template_decl || in_template_function ())\n     return true;\n "}, {"sha": "eefb83d3207b15f04ceee827f60ccdc001cbcedf", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -3871,26 +3871,6 @@ cp_build_function_call_vec (tree function, vec<tree, va_gc> **params,\n \n   if (TREE_CODE (function) == FUNCTION_DECL)\n     {\n-      /* If the function is a non-template member function\n-         or a non-template friend, then we need to check the\n-         constraints.\n-\n-        Note that if overload resolution failed with a single\n-        candidate this function will be used to explicitly diagnose\n-        the failure for the single call expression. The check is\n-        technically redundant since we also would have failed in\n-        add_function_candidate. */\n-      if (flag_concepts\n-          && (complain & tf_error)\n-          && !constraints_satisfied_p (function))\n-        {\n-          auto_diagnostic_group d;\n-          error (\"cannot call function %qD\", function);\n-          location_t loc = DECL_SOURCE_LOCATION (function);\n-          diagnose_constraints (loc, function, NULL_TREE);\n-          return error_mark_node;\n-        }\n-\n       if (!mark_used (function, complain))\n \treturn error_mark_node;\n       fndecl = function;"}, {"sha": "05c91526c20ef29172e28fa64667508451ae9477", "filename": "gcc/testsuite/g++.dg/concepts/dr1430.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -41,6 +41,6 @@ requires Similar<Args...> // { dg-error \"pack expansion\" }\n \n int main()\n {\n-  foo(1, 2, 3); // { dg-error \"cannot call\" }\n-  bar(1, 2, 3); // { dg-error \"cannot call\" }\n+  foo(1, 2, 3); // { dg-error \"\" }\n+  bar(1, 2, 3); // { dg-error \"\" }\n }"}, {"sha": "60dd5414461a2e5555b8d4f481437c79d875353d", "filename": "gcc/testsuite/g++.dg/concepts/expression2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -31,7 +31,7 @@ class S\n \n int main()\n {\n-  f1(s); // { dg-error \"cannot call|private\" }\n+  f1(s); // { dg-error \"unsatisfied|private\" }\n   f2(s); // { dg-error \"\" }\n \n   // When used in non-SFINAE contexts, make sure that we fail"}, {"sha": "1c1280c9d1544c736fd44b5a3eecdf61eecd2704", "filename": "gcc/testsuite/g++.dg/concepts/fn2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -11,9 +11,9 @@ template<typename T>\n // Non-dependent args are checked even in dependent scope.\n template<typename T>\n   void h(T x) {\n-    f(0); // { dg-error \"cannot call\" }\n+    f(0); // { dg-error \"\" }\n   }\n \n int main() {\n-  f(0); // { dg-error \"cannot call\" }\n+  f(0); // { dg-error \"\" }\n }"}, {"sha": "6d86ac5d0af188be2a4171e0e400b258ed4546d7", "filename": "gcc/testsuite/g++.dg/concepts/fn5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -19,6 +19,6 @@ int main() {\n   S1<char> s1;      // { dg-error \"constraint|invalid\" }\n   S2<int, char> s2; // { dg-error \"constraint|invalid\" }\n \n-  f('a');    // { dg-error \"cannot\" }\n-  g(0, 'a'); // { dg-error \"cannot\" }\n+  f('a');    // { dg-error \"unsatisfied\" }\n+  g(0, 'a'); // { dg-error \"unsatisfied\" }\n }"}, {"sha": "ed9008099087ef2e473551507df6715c1bcdab4f", "filename": "gcc/testsuite/g++.dg/concepts/fn8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -8,15 +8,15 @@ template<Class T> void f(T) { }\n \n template<typename T> void fn(T) { }\n \n-auto p1 = &f<int>; // { dg-error \"no matches\" }\n+auto p1 = &f<int>; // { dg-error \"\" }\n void (*p2)(int) = &f<int>; // { dg-error \"no matches\" }\n void (*p3)(int) = &f; // { dg-error \"no matches\" }\n \n struct S {\n   template<Class T> int f(T) { return 0; }\n };\n \n-auto p4 = &S::template f<int>; // { dg-error \"no matches\" }\n+auto p4 = &S::template f<int>; // { dg-error \"\" }\n int (S::*p6)(int) = &S::template f<int>; // { dg-error \"no matches\" }\n int (S::*p7)(int) = &S::f; // { dg-error \"no matches\" }\n "}, {"sha": "eccad65a30175dc944c9af5db36c3eb1e394cee7", "filename": "gcc/testsuite/g++.dg/concepts/placeholder5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -14,5 +14,5 @@ concept bool C =\n template <C c>\n constexpr bool f() { return true; }\n \n-static_assert(f<double>(), \"\");\t// { dg-error \"cannot call|as type\" }\n-static_assert(f<int>(), \"\"); // { dg-error \"cannot call|as type\" }\n+static_assert(f<double>(), \"\");\t// { dg-error \"unsatisfied|as type\" }\n+static_assert(f<int>(), \"\"); // { dg-error \"unsatisfied|as type\" }"}, {"sha": "257e7c691db57574aff75b957dfd24768ff04e15", "filename": "gcc/testsuite/g++.dg/concepts/template-parm11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -15,5 +15,5 @@ void getTable(const ColSpec&...)\n \n void f()\n {\n-  getTable(7, 'a'); // { dg-error \"cannot call\" }\n+  getTable(7, 'a'); // { dg-error \"\" }\n };"}, {"sha": "5e1faec213f94a5f59af2ed7696bb85f6bcada96", "filename": "gcc/testsuite/g++.dg/concepts/var-concept2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -12,7 +12,7 @@ void f2(C1) {}\n \n int main ()\n {\n-  f1(0, 0); // { dg-error \"cannot call\" }\n-  f2(1); // { dg-error \"cannot call\" }\n+  f1(0, 0); // { dg-error \"\" }\n+  f2(1); // { dg-error \"\" }\n   return 0;\n }"}, {"sha": "91eefee602a5d860ee611e817f1e8601f033edbe", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-dr1430.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-dr1430.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-dr1430.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-dr1430.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -10,5 +10,5 @@ void foo( Args... args ) {}\n \n int main()\n {\n-  foo(1, 2, 3); // { dg-error \"cannot call\" }\n+  foo(1, 2, 3); // { dg-error \"\" }\n }"}, {"sha": "9287ab8e5d7b3cfdcb311be6b1a63cd73a8c6391", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-fn1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -35,7 +35,7 @@ int fn2(T t) { return 0; }\n void driver()\n {\n   fn1(0); // OK\n-  fn2(0); // { dg-error \"cannot call function\" }\n+  fn2(0); // { dg-error \"\" }\n }\n \n // Ordering\n@@ -126,7 +126,7 @@ void caller_1(T x)\n { \n   f1(x); // Unchecked dependent arg.\n   f1(empty{}); // Checked non-dependent arg, but OK\n-  f1(0); // { dg-error \"cannot call function\" }\n+  f1(0); // { dg-error \"\" }\n }\n \n // fn3.c -- Ordering\n@@ -159,7 +159,7 @@ template<typename T> requires Type<T> void ok(T) { }\n template<typename T> requires Class<T> void err(T) { }\n \n auto p1 = &ok<int>;\n-auto p2 = &err<int>; // { dg-error \"no matches\" }\n+auto p2 = &err<int>; // { dg-error \"\" }\n void (*p3)(int) = &ok<int>;\n void (*p4)(int) = &err<int>; // { dg-error \"no matches\" }\n void (*p5)(int) = &ok;\n@@ -180,7 +180,7 @@ struct S2 {\n };\n \n auto p7 = &S2::ok<int>;\n-auto p8 = &S2::err<int>; // { dg-error \"no matches\" }\n+auto p8 = &S2::err<int>; // { dg-error \"\" }\n int (S2::*p9)(int) = &S2::ok<int>;\n int (S2::*p10)(int) = &S2::err<int>; // { dg-error \"no matches\" }\n int (S2::*p11)(int) = &S2::ok;"}, {"sha": "b25adcc17c09d4e47711e9f35d8edff4d8d49775", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-fn3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn3.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -31,11 +31,11 @@ struct S\n int main()\n {\n   f1(1, 2, 3);\n-  f1(1, 2, 3u); // { dg-error \"cannot call\" }\n+  f1(1, 2, 3u); // { dg-error \"\" }\n   f2(1, 2, 3);\n-  f2(1, 2, 3u); // { dg-error \"cannot call\" }\n+  f2(1, 2, 3u); // { dg-error \"\" }\n   f3(1, 2, 3);\n-  f3(1, 2, 3u); // { dg-error \"cannot call\" }\n+  f3(1, 2, 3u); // { dg-error \"\" }\n   f3(1u, 2, 3);\n \n   S<void> s;"}, {"sha": "8a29ca9360c3749cb501bb2cff7d02e6a9994ac6", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-fn4.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-fn4.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -0,0 +1,11 @@\n+// Testcase from [expr.prim.id]/5\n+// { dg-do compile { target c++2a } }\n+\n+template<typename T> struct A {\n+  static void f(int) requires false;\n+};\n+void g() {\n+  A<int>::f(0);\t\t\t// { dg-error \"\" \"cannot call f\" }\n+  void (*p1)(int) = A<int>::f;  // { dg-error \"\" \"cannot take the address of f\" }\n+  decltype(A<int>::f)* p2 = nullptr; // { dg-error \"\" \"the type decltype(A<int>::f) is invalid\" }\n+}"}, {"sha": "e3740d5170e4a9261f8680fe5dd656ccd15301c2", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-friend1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -23,7 +23,7 @@ struct X { } x;\n \n int main() {\n   // f(0); // OK\n-  f(nt); // { dg-error \"cannot call\" }\n+  f(nt); // { dg-error \"\" }\n   f(x);  // { dg-error \"3:'f' was not declared\" }\n \n   S<int> si;"}, {"sha": "418040aa56e99c0e24928d5a262f014956d54b2f", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-noexcept1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-noexcept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-noexcept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-noexcept1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -20,6 +20,6 @@ template<C2 T>\n void g2(T t);\n \n void test() {\n-  g1(0); // { dg-error \"cannot call\" }\n+  g1(0); // { dg-error \"\" }\n   g2(0);\n }\n\\ No newline at end of file"}, {"sha": "ac240a5b2d5e35c3ff2072791d2e14382f899b49", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-p1141.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-p1141.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-p1141.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-p1141.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -79,9 +79,9 @@ void f20(Class auto x, Class auto y) { }\n \n void driver_1()\n {\n-  f19(0); // { dg-error \"cannot call function\" }\n+  f19(0); // { dg-error \"\" }\n   f19(empty{});\n-  f20(0, empty{}); // { dg-error \"cannot call function\" }\n+  f20(0, empty{}); // { dg-error \"\" }\n   f20(empty{}, empty{});\n }\n "}, {"sha": "3ab7c9b6082b45d7e8a778048111961d93fa0fe7", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr65575.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65575.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65575.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65575.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -19,5 +19,5 @@ int g(int (*)() requires true); // { dg-error \"\" }\n int\n main()\n {\n-  f1(); // { dg-error \"cannot call\" }\n+  f1(); // { dg-error \"\" }\n }"}, {"sha": "53bb9a355f1cb732615f744c90cb1a5b663f31dd", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr65854.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65854.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65854.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr65854.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -19,4 +19,4 @@ template<typename T1, typename T2>\n   requires C<T1, T2>\n int f();\n \n-auto i = f<char, int>(); // { dg-error \"cannot call function\" }\n+auto i = f<char, int>(); // { dg-error \"\" }"}, {"sha": "c32f4d1184b5b6f85255ad6a224351bd1db5985b", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr66844.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr66844.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr66844.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr66844.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -13,4 +13,4 @@ template <typename T>\n   requires C<T>\n constexpr bool is_c() { return true; }\n \n-static_assert(is_c<void>(), \"\"); // { dg-error \"cannot call\" }\n+static_assert(is_c<void>(), \"\"); // { dg-error \"\" }"}, {"sha": "88017dc723fdb567cfd80682b94eb0670c6bee90", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr67070.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67070.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67070.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67070.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -46,6 +46,6 @@ struct X {\n };\n \n void test2() {\n-  g1<X, X>(); // { dg-error \"cannot call\" }\n-  g2<X, X>(); // { dg-error \"cannot call\" }\n+  g1<X, X>(); // { dg-error \"\" }\n+  g2<X, X>(); // { dg-error \"\" }\n }\n\\ No newline at end of file"}, {"sha": "ff84711a7af434a8ebad6a6843522fd63c54953d", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr67178.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67178.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67178.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67178.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -20,7 +20,7 @@ template<typename T>\n void f(T) {}\n \n int main() {\n-  f(1); // { dg-error \"cannot call\" }\n+  f(1); // { dg-error \"\" }\n }\n \n "}, {"sha": "500e6314119d75e35f89bf0575322ee690e91e22", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr67225-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67225-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67225-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr67225-1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -28,5 +28,5 @@ struct Y {private: ~Y();};\n \n int main()\n {\n-    f<Y>(); // { dg-error \"cannot call\" }\n+    f<Y>(); // { dg-error \"\" }\n }"}, {"sha": "bf95210384153e2cf6a26ccb1483a179090da373", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-pr68093-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr68093-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr68093-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-pr68093-1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -9,5 +9,5 @@ struct S\n \n int main()\n {\n-  foobar(S<double>{}, int{}); // { dg-error \"cannot call\" }\n+  foobar(S<double>{}, int{}); // { dg-error \"\" }\n }"}, {"sha": "0c2651620babdc3b0369d0ed55827d6369a49816", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -26,7 +26,7 @@ void driver_1() {\n   struct S { } s;\n   f4(s);\n   f5(0);\n-  f5((void*)0); // { dg-error \"cannot call\" }\n+  f5((void*)0); // { dg-error \"\" }\n   test.f(s);\n }\n \n@@ -67,5 +67,5 @@ void print2(const T& x) { }\n \n void driver_3()\n {\n-  print2(\"hello\"); // { dg-error \"cannot call\" }\n+  print2(\"hello\"); // { dg-error \"\" }\n }"}, {"sha": "9b82061af11c40cb6d6bb5971077306b81509e03", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires15.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -9,7 +9,7 @@ template<C T>\n void fun(T s) { }\n \n int main(int, char **) {\n-  fun((int *)0); // { dg-error \"cannot call function\" }\n+  fun((int *)0); // { dg-error \"\" }\n   return 0;\n }\n "}, {"sha": "b9532a36eb573b7f8a04e98a1d69fa28ccdb5d72", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires16.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires16.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -37,11 +37,11 @@ void f7() { }\n \n void driver()\n {\n-  f1<int, int>(); // { dg-error \"cannot call function\" }\n+  f1<int, int>(); // { dg-error \"\" }\n   f3<int, int>();\n-  f3<int, void>(); // { dg-error \"cannot call function\" }\n+  f3<int, void>(); // { dg-error \"\" }\n   f4<int, int>();\n-  f4<int, void>(); // { dg-error \"cannot call function\" }\n+  f4<int, void>(); // { dg-error \"\" }\n   f7<int>();\n   f7<int, int>();\n }"}, {"sha": "73cee220567efb2d7a6bdc875be243a404adc513", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires2.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -18,7 +18,7 @@ template<typename T> requires Bad<T> void bad(T x) { }\n \n void driver_2()\n {\n-  bad(0); // { dg-error \"cannot call\" }\n+  bad(0); // { dg-error \"\" }\n }\n \n // req6.C\n@@ -41,8 +41,8 @@ void h2(T);\n \n void driver_3()\n {\n-  h1(0); // { dg-error \"cannot call\" }\n-  h2(0); // { dg-error \"cannot call\" } \n+  h1(0); // { dg-error \"\" }\n+  h2(0); // { dg-error \"\" } \n }\n \n // req7.C"}, {"sha": "d98992503421f2162094c5cebd7d84b264d0be63", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires6.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires6.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -17,9 +17,9 @@ template <typename T>\n   requires C1<T>\n constexpr bool f1() { return true; }\n \n-static_assert(f1<char>()); // { dg-error \"cannot call\" }\n-static_assert(f1<int>()); // { dg-error \"cannot call\" }\n-static_assert(f1<double>()); // { dg-error \"cannot call\" }\n+static_assert(f1<char>()); // { dg-error \"\" }\n+static_assert(f1<int>()); // { dg-error \"\" }\n+static_assert(f1<double>()); // { dg-error \"\" }\n \n \n template <typename T>"}, {"sha": "0d61a0ab313a8ec2f08f39b45dba2317395161cd", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires8.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -13,5 +13,5 @@ int main()\n {\n   // FIXME: This diagnostic is being emitted twice, when it should\n   // be emitted just once.\n-  using U = decltype(f(42, non_addable{})); // { dg-error \"cannot call function\" }\n+  using U = decltype(f(42, non_addable{})); // { dg-error \"\" }\n }"}, {"sha": "710ded45fdd5e6ab14a7e79e475f17b087b01c70", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-traits1.C", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-traits1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-traits1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-traits1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -77,21 +77,21 @@ template<Union T> void f17() { }\n template<Enum T> void f18() { }\n \n int main() {\n-  f1<void>(); // { dg-error \"cannot call\" }\n-  f2<void>(); // { dg-error \"cannot call\" }\n-  f3<void>(); // { dg-error \"cannot call\" }\n-  f4<void>(); // { dg-error \"cannot call\" }\n-  f5<void>(); // { dg-error \"cannot call\" }\n-  f6<void>(); // { dg-error \"cannot call\" }\n-  f7<void>(); // { dg-error \"cannot call\" }\n-  f8<void>(); // { dg-error \"cannot call\" }\n-  f9<void>(); // { dg-error \"cannot call\" }\n-  f10<void>(); // { dg-error \"cannot call\" }\n-  f11<void>(); // { dg-error \"cannot call\" }\n-  f12<void>(); // { dg-error \"cannot call\" }\n-  f13<void>(); // { dg-error \"cannot call\" }\n-  f14<void>(); // { dg-error \"cannot call\" }\n-  f15<void>(); // { dg-error \"cannot call\" }\n-  f16<void>(); // { dg-error \"cannot call\" }\n-  f17<void>(); // { dg-error \"cannot call\" }\n+  f1<void>(); // { dg-error \"\" }\n+  f2<void>(); // { dg-error \"\" }\n+  f3<void>(); // { dg-error \"\" }\n+  f4<void>(); // { dg-error \"\" }\n+  f5<void>(); // { dg-error \"\" }\n+  f6<void>(); // { dg-error \"\" }\n+  f7<void>(); // { dg-error \"\" }\n+  f8<void>(); // { dg-error \"\" }\n+  f9<void>(); // { dg-error \"\" }\n+  f10<void>(); // { dg-error \"\" }\n+  f11<void>(); // { dg-error \"\" }\n+  f12<void>(); // { dg-error \"\" }\n+  f13<void>(); // { dg-error \"\" }\n+  f14<void>(); // { dg-error \"\" }\n+  f15<void>(); // { dg-error \"\" }\n+  f16<void>(); // { dg-error \"\" }\n+  f17<void>(); // { dg-error \"\" }\n }"}, {"sha": "2bdd3d370c273e0b308a24427cfced4f7fdba8f0", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-traits2.C", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-traits2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-traits2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-traits2.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -78,21 +78,21 @@ template<Enum T> void f18();\n \n \n int main() {\n-  f1<void>(); // { dg-error \"cannot call\" }\n-  f2<void>(); // { dg-error \"cannot call\" }\n-  f3<void>(); // { dg-error \"cannot call\" }\n-  f4<void>(); // { dg-error \"cannot call\" }\n-  f5<void>(); // { dg-error \"cannot call\" }\n-  f6<void>(); // { dg-error \"cannot call\" }\n-  f7<void>(); // { dg-error \"cannot call\" }\n-  f8<void>(); // { dg-error \"cannot call\" }\n-  f9<void>(); // { dg-error \"cannot call\" }\n-  f10<void>(); // { dg-error \"cannot call\" }\n-  f11<void>(); // { dg-error \"cannot call\" }\n-  f12<void>(); // { dg-error \"cannot call\" }\n-  f13<void>(); // { dg-error \"cannot call\" }\n-  f14<void>(); // { dg-error \"cannot call\" }\n-  f15<void>(); // { dg-error \"cannot call\" }\n-  f16<void>(); // { dg-error \"cannot call\" }\n-  f17<void>(); // { dg-error \"cannot call\" }\n+  f1<void>(); // { dg-error \"\" }\n+  f2<void>(); // { dg-error \"\" }\n+  f3<void>(); // { dg-error \"\" }\n+  f4<void>(); // { dg-error \"\" }\n+  f5<void>(); // { dg-error \"\" }\n+  f6<void>(); // { dg-error \"\" }\n+  f7<void>(); // { dg-error \"\" }\n+  f8<void>(); // { dg-error \"\" }\n+  f9<void>(); // { dg-error \"\" }\n+  f10<void>(); // { dg-error \"\" }\n+  f11<void>(); // { dg-error \"\" }\n+  f12<void>(); // { dg-error \"\" }\n+  f13<void>(); // { dg-error \"\" }\n+  f14<void>(); // { dg-error \"\" }\n+  f15<void>(); // { dg-error \"\" }\n+  f16<void>(); // { dg-error \"\" }\n+  f17<void>(); // { dg-error \"\" }\n }"}, {"sha": "b3acec15986accbd6693e1b256394114c2626ccc", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-ts1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -35,11 +35,11 @@ auto f15(auto x) -> SameAs<decltype(x)> { return 0; } // { dg-error \"deduced ret\n void driver()\n {\n   f1(0);\n-  f2(0); // { dg-error \"cannot call\" }\n+  f2(0); // { dg-error \"\" }\n   f3(0);\n-  f3('a'); // { dg-error \"cannot call\" }\n+  f3('a'); // { dg-error \"\" }\n   f4(0, 0);\n-  f4(0, 'a'); // { dg-error \"cannot call\" }\n+  f4(0, 'a'); // { dg-error \"\" }\n   f15(0);\n   f15('a'); // { dg-message \"\" }\n }"}, {"sha": "f731bac8c2a3da6f8a466aced8a3c9c701607fdf", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-ts2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts2.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -38,7 +38,7 @@ int fn2(T t) { return 0; }\n void driver()\n {\n   fn1(0); // OK\n-  fn2(0); // { dg-error \"cannot call function\" }\n+  fn2(0); // { dg-error \"\" }\n }\n \n // Ordering\n@@ -129,7 +129,7 @@ void caller_1(T x)\n { \n   f1(x); // Unchecked dependent arg.\n   f1(empty{}); // Checked non-dependent arg, but OK\n-  f1(0); // { dg-error \"cannot call function\" }\n+  f1(0); // { dg-error \"\" }\n }\n \n // fn3.c -- Ordering\n@@ -162,7 +162,7 @@ template<typename T> requires (Type<T>()) void ok(T) { }\n template<typename T> requires (Class<T>()) void err(T) { }\n \n auto p1 = &ok<int>;\n-auto p2 = &err<int>; // { dg-error \"no matches\" }\n+auto p2 = &err<int>; // { dg-error \"\" }\n void (*p3)(int) = &ok<int>;\n void (*p4)(int) = &err<int>; // { dg-error \"no matches\" }\n void (*p5)(int) = &ok;\n@@ -183,7 +183,7 @@ struct S2 {\n };\n \n auto p7 = &S2::ok<int>;\n-auto p8 = &S2::err<int>; // { dg-error \"no matches\" }\n+auto p8 = &S2::err<int>; // { dg-error \"\" }\n int (S2::*p9)(int) = &S2::ok<int>;\n int (S2::*p10)(int) = &S2::err<int>; // { dg-error \"no matches\" }\n int (S2::*p11)(int) = &S2::ok;"}, {"sha": "434a5e2651b015bcbe7dd4db2c8adf802dc92447", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-ts3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts3.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -38,7 +38,7 @@ int fn2(T t) { return 0; }\n void driver()\n {\n   fn1(0); // OK\n-  fn2(0); // { dg-error \"cannot call function\" }\n+  fn2(0); // { dg-error \"\" }\n }\n \n // Ordering\n@@ -129,7 +129,7 @@ void caller_1(T x)\n { \n   f1(x); // Unchecked dependent arg.\n   f1(empty{}); // Checked non-dependent arg, but OK\n-  f1(0); // { dg-error \"cannot call function\" }\n+  f1(0); // { dg-error \"\" }\n }\n \n // fn3.c -- Ordering\n@@ -162,7 +162,7 @@ template<typename T> requires Type<T> void ok(T) { }\n template<typename T> requires Class<T> void err(T) { }\n \n auto p1 = &ok<int>;\n-auto p2 = &err<int>; // { dg-error \"no matches\" }\n+auto p2 = &err<int>; // { dg-error \"\" }\n void (*p3)(int) = &ok<int>;\n void (*p4)(int) = &err<int>; // { dg-error \"no matches\" }\n void (*p5)(int) = &ok;\n@@ -183,7 +183,7 @@ struct S2 {\n };\n \n auto p7 = &S2::ok<int>;\n-auto p8 = &S2::err<int>; // { dg-error \"no matches\" }\n+auto p8 = &S2::err<int>; // { dg-error \"\" }\n int (S2::*p9)(int) = &S2::ok<int>;\n int (S2::*p10)(int) = &S2::err<int>; // { dg-error \"no matches\" }\n int (S2::*p11)(int) = &S2::ok;"}, {"sha": "aa96621d9cf8ed3c78905d1f080c5b10503545f6", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-ts4.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-ts4.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -23,12 +23,12 @@ Pos{N} void fn();\n void driver()\n {\n   f1(0);\n-  f2(0); // { dg-error \"cannot call function\" }\n+  f2(0); // { dg-error \"\" }\n \n   same<int, int>();\n-  same<int, char>(); // { dg-error \"cannot call function\" }\n+  same<int, char>(); // { dg-error \"\" }\n \n   fn<0>(); // OK\n-  fn<-1>(); // { dg-error \"cannot call function\" }\n+  fn<-1>(); // { dg-error \"\" }\n   fn<int>(); // { dg-error \"no matching function\" }\n }"}, {"sha": "a99343fc04df12a55e70e815bbf42ec2dc9e2e89", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts1.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -19,7 +19,7 @@ void decl1(T);\n \n void driver_1()\n {\n-  f1(0); // { dg-error \"cannot call function\" }\n+  f1(0); // { dg-error \"\" }\n   f1(empty{});\n \n   decl1(empty{}); // { dg-error \"call of overload | ambiguous\" }"}, {"sha": "34dacade330ec6f1c3dfcfb641f4bbc6e1ba0341", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa76bb74696d0987e04a82ebcbc44f745ce788d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts3.C?ref=8aa76bb74696d0987e04a82ebcbc44f745ce788d", "patch": "@@ -42,7 +42,7 @@ template<typename T>\n void f3() { }\n \n void driver2() {\n-  f1<S1>(); // { dg-error \"cannot call|is private\" }\n-  f2<S1>(); // { dg-error \"cannot call|is private\" }\n-  f3<S1>(); // { dg-error \"cannot call|is private\" }\n+  f1<S1>(); // { dg-error \"unsatisfied|is private\" }\n+  f2<S1>(); // { dg-error \"unsatisfied|is private\" }\n+  f3<S1>(); // { dg-error \"unsatisfied|is private\" }\n }"}]}