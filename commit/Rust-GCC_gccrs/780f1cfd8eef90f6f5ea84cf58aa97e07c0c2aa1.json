{"sha": "780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgwZjFjZmQ4ZWVmOTBmNmY1ZWE4NGNmNThhYTk3ZTA3YzBjMmFhMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-25T10:41:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-25T10:41:17Z"}, "message": "testsuite: Mention cleanup-13.c test is incompatible with -fcompare-debug [PR94296]\n\nAs this test produces different code depending on whether\n__GCC_HAVE_DWARF2_CFI_ASM macro is defined or not, it is inherently\nincompatible with -fcompare-debug, as with\n-fcompare-debug -fno-asynchronous-unwind-tables -fno-exceptions\nthe macro is defined only in the -g case and not otherwise.\nThe purpose of the macro is to tell when the compiler is emitting\n.cfi* directives itself and thus it is desirable that user code uses them in\ninline asm as well, so I think it is fine the way it is.\nAs -fexceptions makes the test pass even in that case because it emits\n.cfi* directives, the test actually doesn't FAIL even with\nmake check-gcc RUNTESTFLAGS='--target_board=unix/-fcompare-debug/-fno-asynchronous-unwind-tables/-fno-exceptions dg.exp=cleanup-13.c'\nso the intent of this patch is help Martin and others who do run gcc tests\nout of the testsuite with random compiler flags to find out that this is a\nknown issue.\n\n2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/94296\n\t* gcc.dg/cleanup-13.c: Add a comment that the test is not\n\t-fcompare-debug compatible with certain other options.", "tree": {"sha": "cb651c2ac951764e843eb46aae9d3f60833159bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb651c2ac951764e843eb46aae9d3f60833159bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "86d3b719ab8215880df490177c3455a5f205bf10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1", "patch": "@@ -1,5 +1,9 @@\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/94296\n+\t* gcc.dg/cleanup-13.c: Add a comment that the test is not\n+\t-fcompare-debug compatible with certain other options.\n+\n \tPR target/94308\n \t* gcc.target/i386/pr94308.c: New test.\n "}, {"sha": "86cfae09e77ca0a0eb4ff717cbd16879304407dc", "filename": "gcc/testsuite/gcc.dg/cleanup-13.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-13.c?ref=780f1cfd8eef90f6f5ea84cf58aa97e07c0c2aa1", "patch": "@@ -1,3 +1,7 @@\n+/* This test is expected to FAIL to compile with\n+   -fcompare-debug -fno-asynchronous-unwind-tables -fno-exceptions\n+   because in that case, the __GCC_HAVE_DWARF2_CFI_ASM macro is only\n+   defined during -g compilation and not defined with -g0.  */\n /* HP-UX libunwind.so doesn't provide _UA_END_OF_STACK */\n /* { dg-do run } */\n /* { dg-options \"-fexceptions\" } */"}]}