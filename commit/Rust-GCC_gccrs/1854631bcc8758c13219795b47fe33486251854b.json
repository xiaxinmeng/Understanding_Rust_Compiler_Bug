{"sha": "1854631bcc8758c13219795b47fe33486251854b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg1NDYzMWJjYzg3NThjMTMyMTk3OTViNDdmZTMzNDg2MjUxODU0Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-10-09T21:13:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-10-09T21:13:04Z"}, "message": "Makefile.in (LANG_LIB2FUNCS): Remove.\n\n        * Makefile.in (LANG_LIB2FUNCS): Remove.\n        (LIB2FUNCS): Remove _pure.\n        (LIB2ADD): Remove LANG_LIB2FUNCS.\n        (stage_a): Don't set LANG_LIB2FUNCS.\n        * libgcc2.c (__terminate): Mark noreturn.\n        (__pure_virtual): Remove.\n        * mklibgcc.in: Remove LIB2ADD .txt processing.\n\nFrom-SVN: r36817", "tree": {"sha": "c3078bc02ac7c50eebb8e55d44bcd33d58b3ae1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3078bc02ac7c50eebb8e55d44bcd33d58b3ae1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1854631bcc8758c13219795b47fe33486251854b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1854631bcc8758c13219795b47fe33486251854b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1854631bcc8758c13219795b47fe33486251854b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1854631bcc8758c13219795b47fe33486251854b/comments", "author": null, "committer": null, "parents": [{"sha": "8dc54971c324e4f4d5d85e1ecfe84af468740d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc54971c324e4f4d5d85e1ecfe84af468740d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc54971c324e4f4d5d85e1ecfe84af468740d61"}], "stats": {"total": 92, "additions": 25, "deletions": 67}, "files": [{"sha": "010c412742f3618e3d5bdd82a6eaf3e7a119aea0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1854631bcc8758c13219795b47fe33486251854b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1854631bcc8758c13219795b47fe33486251854b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1854631bcc8758c13219795b47fe33486251854b", "patch": "@@ -1,3 +1,13 @@\n+2000-10-09  Richard Henderson  <rth@cygnus.com>\n+\n+\t* Makefile.in (LANG_LIB2FUNCS): Remove.\n+\t(LIB2FUNCS): Remove _pure.\n+\t(LIB2ADD): Remove LANG_LIB2FUNCS.\n+\t(stage_a): Don't set LANG_LIB2FUNCS.\n+\t* libgcc2.c (__terminate): Mark noreturn.\n+\t(__pure_virtual): Remove.\n+\t* mklibgcc.in: Remove LIB2ADD .txt processing.\n+\n 2000-10-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (push_multi): Revert unintended change."}, {"sha": "bbfb14e43f5273ff866315ba1ddbffacd498fe21", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1854631bcc8758c13219795b47fe33486251854b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1854631bcc8758c13219795b47fe33486251854b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1854631bcc8758c13219795b47fe33486251854b", "patch": "@@ -630,7 +630,6 @@ INCLUDES = -I. -I$(srcdir) -I$(srcdir)/config -I$(srcdir)/../include\n LANG_MAKEFILES = @all_lang_makefiles@\n LANG_STAGESTUFF = @all_stagestuff@\n LANG_DIFF_EXCLUDES = @all_diff_excludes@\n-LANG_LIB2FUNCS = @all_lib2funcs@\n LANG_EXTRA_HEADERS = @all_headers@\n \n # Flags to pass to recursive makes.\n@@ -755,7 +754,7 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n     _fixtfdi _fixunstfdi _floatditf \\\n     __gcc_bcmp _varargs __dummy _eprintf \\\n     _bb _shtab _clear_cache _trampoline __main _exit \\\n-    _ctors _pure\n+    _ctors\n \n LIB2FUNCS_EH = _eh\n \n@@ -961,7 +960,7 @@ xlimits.h: glimits.h limitx.h limity.h\n #\f\n # Build libgcc.a.\n \n-LIB2ADD = $(LIB2ADDEH) $(LIB2FUNCS_EXTRA) $(LANG_LIB2FUNCS)\n+LIB2ADD = $(LIB2ADDEH) $(LIB2FUNCS_EXTRA)\n \n libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) xgcc$(exeext)\n \tobjext='$(objext)' \\\n@@ -2788,7 +2787,7 @@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_OBJS) $(LIBCPP_OBJS) *.c *.h gen*`\n # we can guarantee will build with the native compiler, and also it is the\n # only thing useful for building stage2.\n stage_a: \n-\t+$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\" LANG_LIB2FUNCS=\n+\t+$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\"\n \ttouch stage_a\n \n stage_b: stage_a"}, {"sha": "7e8eaf7b11b98971d677b66642815328334d72e4", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1854631bcc8758c13219795b47fe33486251854b/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1854631bcc8758c13219795b47fe33486251854b/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=1854631bcc8758c13219795b47fe33486251854b", "patch": "@@ -2990,7 +2990,7 @@ __default_terminate (void)\n void (*__terminate_func)(void) __attribute__ ((__noreturn__)) =\n   __default_terminate;\n \n-void\n+void __attribute__((__noreturn__))\n __terminate (void)\n {\n   (*__terminate_func)();\n@@ -4181,28 +4181,3 @@ __throw ()\n #endif /* IA64_UNWIND_INFO  */\n \n #endif /* L_eh */\n-\f\n-#ifdef L_pure\n-#ifndef inhibit_libc\n-/* This gets us __GNU_LIBRARY__.  */\n-#undef NULL /* Avoid errors if stdio.h and our stddef.h mismatch.  */\n-#include <stdio.h>\n-\n-#ifdef __GNU_LIBRARY__\n-  /* Avoid forcing the library's meaning of `write' on the user program\n-     by using the \"internal\" name (for use within the library)  */\n-#define write(fd, buf, n)\t__write((fd), (buf), (n))\n-#endif\n-#endif /* inhibit_libc */\n-\n-#define MESSAGE \"pure virtual method called\\n\"\n-\n-void\n-__pure_virtual (void)\n-{\n-#ifndef inhibit_libc\n-  write (2, MESSAGE, sizeof (MESSAGE) - 1);\n-#endif\n-  __terminate ();\n-}\n-#endif"}, {"sha": "e19d0ee627bbf0106d944d902b4fb2811c725d3b", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 11, "deletions": 37, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1854631bcc8758c13219795b47fe33486251854b/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1854631bcc8758c13219795b47fe33486251854b/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=1854631bcc8758c13219795b47fe33486251854b", "patch": "@@ -225,44 +225,18 @@ for file in $LIB2ADD; do\n   name=`echo $file | sed -e 's/[.][cSo]$//' -e 's/[.]asm$//' -e 's/[.]txt$//'`\n   oname=`echo $name | sed -e 's,.*/,,'`\n \n-  if [ ${name}.txt = ${file} ]; then\n-    fprime=`cat $file`\n-    for f in $fprime; do\n-\n-      lastout=\"stmp-dirs $file\"\n-      for ml in $MULTILIBS; do\n-        dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n-        flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n-        out=\"libgcc/${dir}/${f}\"\n-\n-\t# Depend on previous out to serialize all sub-makes of this\n-\t# target file.  This because ./$f is used as a temporary in\n-\t# each case before being moved to libgcc/$dir/.\n-\techo $out: $lastout\n-\techo \"\t$make_compile\" \\\\\n-\techo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n-\techo '\t  MULTILIB_CFLAGS=\"'$flags'\"' $f\n-\techo \"\tmv $f $out\"\n-\n-\tlastout=\"$out\"\n-      done\n-\n-      libgcc2_objs=\"$libgcc2_objs $f\"\n-    done\n-  else\n-    for ml in $MULTILIBS; do\n-      dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n-      flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n-      out=\"libgcc/${dir}/${oname}${objext}\"\n-      if [ ${name}.asm = ${file} ]; then\n-\tflags=\"$flags -xassembler-with-cpp\"\n-      fi\n+  for ml in $MULTILIBS; do\n+    dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n+    flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n+    out=\"libgcc/${dir}/${oname}${objext}\"\n+    if [ ${name}.asm = ${file} ]; then\n+      flags=\"$flags -xassembler-with-cpp\"\n+    fi\n \n-      echo $out: stmp-dirs $file\n-      echo \"\t$gcc_compile\" $flags -c $file -o $out\n-    done\n-    libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n-  fi\n+    echo $out: stmp-dirs $file\n+    echo \"\t$gcc_compile\" $flags -c $file -o $out\n+  done\n+  libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n done\n \n # SHLIB_MKMAP"}]}