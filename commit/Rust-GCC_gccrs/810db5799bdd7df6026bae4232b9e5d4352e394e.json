{"sha": "810db5799bdd7df6026bae4232b9e5d4352e394e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwZGI1Nzk5YmRkN2RmNjAyNmJhZTQyMzJiOWU1ZDQzNTJlMzk0ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-08-19T07:37:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-08-19T07:37:07Z"}, "message": "cgraph.c (cgraph_mark_needed_node): Call notice_global_symbol.\n\n\t* cgraph.c (cgraph_mark_needed_node): Call notice_global_symbol.\n\t(cgraph_varpool_mark_needed_node): Likewise.\n\t* cgraph.h (notice_global_symbol): Declare\n\t* varasm.c (notice_global_symbol): Break out from ...\n\t(assemble_start_function): ... here; update for variables.\n\t(assemble_variable): Use notice_global_symbol.\n\nFrom-SVN: r70559", "tree": {"sha": "ff4fc2d7d933acd56aa7e5c666a1d035934cce47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4fc2d7d933acd56aa7e5c666a1d035934cce47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/810db5799bdd7df6026bae4232b9e5d4352e394e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810db5799bdd7df6026bae4232b9e5d4352e394e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810db5799bdd7df6026bae4232b9e5d4352e394e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810db5799bdd7df6026bae4232b9e5d4352e394e/comments", "author": null, "committer": null, "parents": [{"sha": "fc4fe9e434a4a652065cff0e5380d9446debf32a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc4fe9e434a4a652065cff0e5380d9446debf32a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc4fe9e434a4a652065cff0e5380d9446debf32a"}], "stats": {"total": 70, "additions": 43, "deletions": 27}, "files": [{"sha": "0d685771e532269323a0dcd2dd40a29097a1dcbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=810db5799bdd7df6026bae4232b9e5d4352e394e", "patch": "@@ -1,3 +1,12 @@\n+2003-08-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (cgraph_mark_needed_node): Call notice_global_symbol.\n+\t(cgraph_varpool_mark_needed_node): Likewise.\n+\t* cgraph.h (notice_global_symbol): Declare\n+\t* varasm.c (notice_global_symbol): Break out from ...\n+\t(assemble_start_function): ... here; update for variables.\n+\t(assemble_variable): Use notice_global_symbol.\n+\n 2003-08-19  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (mips_va_arg): If EABI_FLOAT_VARARGS_P,"}, {"sha": "bd83f6a194636dba39b3bd84cb5853df75d22672", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=810db5799bdd7df6026bae4232b9e5d4352e394e", "patch": "@@ -248,6 +248,7 @@ cgraph_mark_needed_node (struct cgraph_node *node, int needed)\n \n       node->next_needed = cgraph_nodes_queue;\n       cgraph_nodes_queue = node;\n+      notice_global_symbol (node->decl);\n \n       /* At the moment frontend automatically emits all nested functions.  */\n       if (node->nested)\n@@ -465,6 +466,7 @@ cgraph_varpool_mark_needed_node (struct cgraph_varpool_node *node)\n     {\n       node->next_needed = cgraph_varpool_nodes_queue;\n       cgraph_varpool_nodes_queue = node;\n+      notice_global_symbol (node->decl);\n     }\n   node->needed = 1;\n }"}, {"sha": "dbf8c8f86f29fb2ef6afe192017ddffc0ff070b9", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=810db5799bdd7df6026bae4232b9e5d4352e394e", "patch": "@@ -2944,6 +2944,7 @@ enum tls_model decl_tls_model (tree);\n enum symbol_visibility decl_visibility (tree);\n extern void resolve_unique_section (tree, int, int);\n extern void mark_referenced (tree);\n+extern void notice_global_symbol (tree);\n \n /* In stmt.c */\n extern void emit_nop (void);"}, {"sha": "ac535212056b69415ade6aace4efbfc264b1eb86", "filename": "gcc/varasm.c", "status": "modified", "additions": 31, "deletions": 27, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810db5799bdd7df6026bae4232b9e5d4352e394e/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=810db5799bdd7df6026bae4232b9e5d4352e394e", "patch": "@@ -1040,6 +1040,34 @@ default_ctor_section_asm_out_constructor (rtx symbol,\n #define CONSTANT_POOL_BEFORE_FUNCTION 1\n #endif\n \n+/* DECL is an object (either VAR_DECL or FUNCTION_DECL) which is going\n+   to be output to assembler.\n+   Set first_global_object_name and weak_global_object_name as appropriate.  */\n+\n+void\n+notice_global_symbol (tree decl)\n+{\n+  if ((!first_global_object_name || !weak_global_object_name)\n+      && TREE_PUBLIC (decl)\n+      && (TREE_CODE (decl) == FUNCTION_DECL\n+\t  || ! (DECL_COMMON (decl)\n+\t    \t&& (DECL_INITIAL (decl) == 0\n+\t\t    || DECL_INITIAL (decl) == error_mark_node))))\n+    {\n+      const char *p;\n+      char *name;\n+      rtx decl_rtl = DECL_RTL (decl);\n+\n+      p = (* targetm.strip_name_encoding) (XSTR (XEXP (decl_rtl, 0), 0));\n+      name = xstrdup (p);\n+\n+      if (! DECL_WEAK (decl) && ! DECL_ONE_ONLY (decl))\n+\tfirst_global_object_name = name;\n+      else\n+\tweak_global_object_name = name;\n+    }\n+}\n+\n /* Output assembler code for the constant pool of a function and associated\n    with defining the name of the function.  DECL describes the function.\n    NAME is the function's name.  For the constant pool, we use the current\n@@ -1093,19 +1121,7 @@ assemble_start_function (tree decl, const char *fnname)\n \n   if (TREE_PUBLIC (decl))\n     {\n-      if (! first_global_object_name)\n-\t{\n-\t  const char *p;\n-\t  char *name;\n-\n-\t  p = (* targetm.strip_name_encoding) (fnname);\n-\t  name = xstrdup (p);\n-\n-\t  if (! DECL_WEAK (decl) && ! DECL_ONE_ONLY (decl))\n-\t    first_global_object_name = name;\n-\t  else\n-\t    weak_global_object_name = name;\n-\t}\n+      notice_global_symbol (decl);\n \n       globalize_decl (decl);\n \n@@ -1400,20 +1416,8 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n     }\n \n   name = XSTR (XEXP (decl_rtl, 0), 0);\n-  if (TREE_PUBLIC (decl) && DECL_NAME (decl)\n-      && ! first_global_object_name\n-      && ! (DECL_COMMON (decl) && (DECL_INITIAL (decl) == 0\n-\t\t\t\t   || DECL_INITIAL (decl) == error_mark_node))\n-      && ! DECL_WEAK (decl)\n-      && ! DECL_ONE_ONLY (decl))\n-    {\n-      const char *p;\n-      char *xname;\n-\n-      p = (* targetm.strip_name_encoding) (name);\n-      xname = xstrdup (p);\n-      first_global_object_name = xname;\n-    }\n+  if (TREE_PUBLIC (decl) && DECL_NAME (decl))\n+    notice_global_symbol (decl);\n \n   /* Compute the alignment of this data.  */\n "}]}