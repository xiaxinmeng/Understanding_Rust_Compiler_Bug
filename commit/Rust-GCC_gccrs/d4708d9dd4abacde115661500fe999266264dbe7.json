{"sha": "d4708d9dd4abacde115661500fe999266264dbe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3MDhkOWRkNGFiYWNkZTExNTY2MTUwMGZlOTk5MjY2MjY0ZGJlNw==", "commit": {"author": {"name": "Jack Howarth", "email": "howarth@bromo.med.uc.edu", "date": "2006-09-27T21:24:23Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-09-27T21:24:23Z"}, "message": "re PR target/26792 (need to use autoconf when using newly-added libgcc functions)\n\n2006-09-26  Jack Howarth  <howarth@bromo.med.uc.edu>\n\n\tPR target/26792:\n\t* exception.cc (PERSONALITY_FUNCTION): use _Unwind_GetIP\n\tif HAVE_GETIPINFO not defined.\n\t* stacktrace.cc (_Jv_StackTrace::UnwindTraceFn): Likewise.\n\t(_Jv_StackTrace::getLineNumberForFrame): Likewise.\n\t* configure.ac: use GCC_CHECK_UNWIND_GETIPINFO.\n\t* aclocal.m4, configure, include/config.h.in, Makefile.in:\n\tRebuilt.\n\nFrom-SVN: r117259", "tree": {"sha": "b0c2bc5aedb4964cac31de895df848e4f19b09a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0c2bc5aedb4964cac31de895df848e4f19b09a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4708d9dd4abacde115661500fe999266264dbe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4708d9dd4abacde115661500fe999266264dbe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4708d9dd4abacde115661500fe999266264dbe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4708d9dd4abacde115661500fe999266264dbe7/comments", "author": null, "committer": null, "parents": [{"sha": "e48d66a949a0ea367bb3df15df5f345f46184d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48d66a949a0ea367bb3df15df5f345f46184d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e48d66a949a0ea367bb3df15df5f345f46184d9f"}], "stats": {"total": 159, "additions": 145, "deletions": 14}, "files": [{"sha": "33b21ce28fff806ab0fd0bce503aaa55ec4dab21", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -1,3 +1,14 @@\n+2006-09-26  Jack Howarth  <howarth@bromo.med.uc.edu>\n+\n+\tPR target/26792:\n+\t* exception.cc (PERSONALITY_FUNCTION): use _Unwind_GetIP\n+\tif HAVE_GETIPINFO not defined.\n+\t* stacktrace.cc (_Jv_StackTrace::UnwindTraceFn): Likewise.\n+\t(_Jv_StackTrace::getLineNumberForFrame): Likewise.\n+\t* configure.ac: use GCC_CHECK_UNWIND_GETIPINFO.\n+\t* aclocal.m4, configure, include/config.h.in, Makefile.in:\n+\tRebuilt.\n+\n 2006-09-27  Tom Tromey  <tromey@redhat.com>\n \n \thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=201712"}, {"sha": "d514fcb8c1164c856ff11fb7417eb214a4814bae", "filename": "libjava/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -82,9 +82,11 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lib-link.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n-\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/mingwld.m4 $(top_srcdir)/pkg.m4 \\\n-\t$(top_srcdir)/shlibpath.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/mingwld.m4 \\\n+\t$(top_srcdir)/pkg.m4 $(top_srcdir)/shlibpath.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\"}, {"sha": "3ba911b264297720c610f565bb994c6ea17979b4", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -915,6 +915,7 @@ m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])\n m4_include([../config/no-executables.m4])\n m4_include([../config/tls.m4])\n+m4_include([../config/unwind_ipinfo.m4])\n m4_include([../libtool.m4])\n m4_include([mingwld.m4])\n m4_include([pkg.m4])"}, {"sha": "910850d4163a58eb46e1c5c8689b92af3191ef53", "filename": "libjava/configure", "status": "modified", "additions": 91, "deletions": 1, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -16496,7 +16496,7 @@ case \"${host}\" in\n  mips*-*-linux*)\n     SIGNAL_HANDLER=include/mips-signal.h\n     ;;\n- *-*-darwin*)\n+ powerpc*-*-darwin*)\n     SIGNAL_HANDLER=include/darwin-signal.h\n     ;;\n  *)\n@@ -16654,6 +16654,96 @@ _ACEOF\n \n   fi\n \n+# For _Unwind_GetIPInfo.\n+\n+\n+\n+  ac_ext=cc\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+  echo \"$as_me:$LINENO: checking for _Unwind_GetIPInfo\" >&5\n+echo $ECHO_N \"checking for _Unwind_GetIPInfo... $ECHO_C\" >&6\n+  if test \"${gcc_cv_getipinfo+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+extern \"C\" { extern void _Unwind_GetIPInfo(); }\n+int\n+main ()\n+{\n+_Unwind_GetIPInfo();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  gcc_cv_getipinfo=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+gcc_cv_getipinfo=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+\n+  if test $gcc_cv_getipinfo = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_GETIPINFO 1\n+_ACEOF\n+\n+  fi\n+  echo \"$as_me:$LINENO: result: $gcc_cv_getipinfo\" >&5\n+echo \"${ECHO_T}$gcc_cv_getipinfo\" >&6\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n # Check if linker supports static linking on a per library basis\n LD_START_STATIC_SPEC=\n LD_FINISH_STATIC_SPEC="}, {"sha": "ace631ab2e1041c3eee8d15c587e93218c4c84fd", "filename": "libjava/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -1480,6 +1480,9 @@ fi\n # See if we support thread-local storage.\n GCC_CHECK_TLS\n \n+# For _Unwind_GetIPInfo.\n+GCC_CHECK_UNWIND_GETIPINFO\n+\n # Check if linker supports static linking on a per library basis\n LD_START_STATIC_SPEC=\n LD_FINISH_STATIC_SPEC="}, {"sha": "3d8fda1d790815c3c68a202f365cd76516024f4d", "filename": "libjava/exception.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexception.cc?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -231,9 +231,13 @@ PERSONALITY_FUNCTION (int version,\n \n   // Parse the LSDA header.\n   p = parse_lsda_header (context, language_specific_data, &info);\n+#ifdef HAVE_GETIPINFO\n   ip = _Unwind_GetIPInfo (context, &ip_before_insn);\n   if (! ip_before_insn)\n     --ip;\n+#else\n+  ip = _Unwind_GetIP (context) - 1;\n+#endif\n   landing_pad = 0;\n   action_record = 0;\n   handler_switch_value = 0;"}, {"sha": "5236544a99d46c4c9b92d18ac610ad93500dc242", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -53,9 +53,11 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lib-link.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n-\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/mingwld.m4 $(top_srcdir)/pkg.m4 \\\n-\t$(top_srcdir)/shlibpath.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/mingwld.m4 \\\n+\t$(top_srcdir)/pkg.m4 $(top_srcdir)/shlibpath.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n CONFIG_HEADER = $(top_builddir)/include/config.h libgcj-config.h"}, {"sha": "26c8ce9a58267e1bc3fd03e5ef7a15408a1762da", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -52,9 +52,11 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lib-link.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n-\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/mingwld.m4 $(top_srcdir)/pkg.m4 \\\n-\t$(top_srcdir)/shlibpath.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/mingwld.m4 \\\n+\t$(top_srcdir)/pkg.m4 $(top_srcdir)/shlibpath.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n CONFIG_HEADER = config.h $(top_builddir)/gcj/libgcj-config.h"}, {"sha": "a8ebfade662084b7fffe54955fd44092760eb5a6", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -118,6 +118,9 @@\n /* Define to 1 if you have the `getifaddrs' function. */\n #undef HAVE_GETIFADDRS\n \n+/* Define if _Unwind_GetIPInfo is available. */\n+#undef HAVE_GETIPINFO\n+\n /* Define to 1 if you have the `getpwuid_r' function. */\n #undef HAVE_GETPWUID_R\n "}, {"sha": "7f967baccf08baa113a6b8e86891087a14594eb3", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -131,6 +131,7 @@ _Jv_StackTrace::UnwindTraceFn (struct _Unwind_Context *context, void *state_ptr)\n   else\n #endif\n     {\n+#ifdef HAVE_GETIPINFO\n       _Unwind_Ptr ip;\n       int ip_before_insn = 0;\n       ip = _Unwind_GetIPInfo (context, &ip_before_insn);\n@@ -139,9 +140,13 @@ _Jv_StackTrace::UnwindTraceFn (struct _Unwind_Context *context, void *state_ptr)\n       // to ensure we get the correct line number for the call itself.\n       if (! ip_before_insn)\n \t--ip;\n-\n+#endif\n       state->frames[pos].type = frame_native;\n+#ifdef HAVE_GETIPINFO\n       state->frames[pos].ip = (void *) ip;\n+#else\n+      state->frames[pos].ip = (void *) _Unwind_GetIP (context);\n+#endif\n       state->frames[pos].start_ip = func_addr;\n     }\n \n@@ -217,6 +222,12 @@ _Jv_StackTrace::getLineNumberForFrame(_Jv_StackFrame *frame, NameFinder *finder,\n       else\n         offset = (_Unwind_Ptr) ip - (_Unwind_Ptr) info.base;\n \n+#ifndef HAVE_GETIPINFO\n+      // The unwinder gives us the return address. In order to get the right\n+      // line number for the stack trace, roll it back a little.\n+      offset -= 1;\n+#endif\n+\n       finder->lookup (binaryName, (jlong) offset);\n       *sourceFileName = finder->getSourceFile();\n       *lineNum = finder->getLineNum();"}, {"sha": "f419d3ced3665eb3a6cbf6ac25acce6c4be0bb78", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4708d9dd4abacde115661500fe999266264dbe7/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=d4708d9dd4abacde115661500fe999266264dbe7", "patch": "@@ -50,9 +50,11 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lib-link.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n-\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/mingwld.m4 $(top_srcdir)/pkg.m4 \\\n-\t$(top_srcdir)/shlibpath.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/mingwld.m4 \\\n+\t$(top_srcdir)/pkg.m4 $(top_srcdir)/shlibpath.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n CONFIG_HEADER = $(top_builddir)/include/config.h \\"}]}