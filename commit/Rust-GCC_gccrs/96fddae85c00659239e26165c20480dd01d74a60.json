{"sha": "96fddae85c00659239e26165c20480dd01d74a60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmZGRhZTg1YzAwNjU5MjM5ZTI2MTY1YzIwNDgwZGQwMWQ3NGE2MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-09-09T22:22:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-09-09T22:22:16Z"}, "message": "Revert: * dwarf2out.c (gen_formal_parameter_die): Remove obsolete hunk.\n\n\tCheck ultimate_origin before setting reusing_die.\n\nFrom-SVN: r251941", "tree": {"sha": "a682b6f36508c8a84572fae32404debb2d19bffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a682b6f36508c8a84572fae32404debb2d19bffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96fddae85c00659239e26165c20480dd01d74a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96fddae85c00659239e26165c20480dd01d74a60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96fddae85c00659239e26165c20480dd01d74a60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96fddae85c00659239e26165c20480dd01d74a60/comments", "author": null, "committer": null, "parents": [{"sha": "84d0b6f5a52834bf4d8587521b16f5b2854e6234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d0b6f5a52834bf4d8587521b16f5b2854e6234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d0b6f5a52834bf4d8587521b16f5b2854e6234"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "b9b04565d287bcf114645f9e440eadf2800a0e5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96fddae85c00659239e26165c20480dd01d74a60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96fddae85c00659239e26165c20480dd01d74a60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96fddae85c00659239e26165c20480dd01d74a60", "patch": "@@ -1,9 +1,3 @@\n-2017-09-09  Richard Biener  <rguenther@suse.de>\n-\t    Jason Merrill  <jason@redhat.com>\n-\n-\t* dwarf2out.c (gen_formal_parameter_die): Remove obsolete hunk.\n-\tCheck ultimate_origin before setting reusing_die.\n-\n 2017-09-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/70029 - ICE with ref-qualifier and -flto"}, {"sha": "00d6d951ba3144fe5c64981dddca897f062fabf0", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96fddae85c00659239e26165c20480dd01d74a60/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96fddae85c00659239e26165c20480dd01d74a60/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=96fddae85c00659239e26165c20480dd01d74a60", "patch": "@@ -21285,15 +21285,30 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n \t\t\t  dw_die_ref context_die)\n {\n   tree node_or_origin = node ? node : origin;\n+  tree ultimate_origin;\n   dw_die_ref parm_die = NULL;\n   \n   if (DECL_P (node_or_origin))\n     {\n       parm_die = lookup_decl_die (node);\n \n-      tree ultimate_origin = decl_ultimate_origin (node_or_origin);\n-      if (node || ultimate_origin)\n-\torigin = ultimate_origin;\n+      /* If the contexts differ, we may not be talking about the same\n+\t thing.\n+\t ???  When in LTO the DIE parent is the \"abstract\" copy and the\n+\t context_die is the specification \"copy\".  But this whole block\n+\t should eventually be no longer needed.  */\n+      if (parm_die && parm_die->die_parent != context_die && !in_lto_p)\n+\t{\n+\t  if (!DECL_ABSTRACT_P (node))\n+\t    {\n+\t      /* This can happen when creating an inlined instance, in\n+\t\t which case we need to create a new DIE that will get\n+\t\t annotated with DW_AT_abstract_origin.  */\n+\t      parm_die = NULL;\n+\t    }\n+\t  else\n+\t    gcc_unreachable ();\n+\t}\n \n       if (parm_die && parm_die->die_parent == NULL)\n \t{\n@@ -21328,6 +21343,10 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n   switch (TREE_CODE_CLASS (TREE_CODE (node_or_origin)))\n     {\n     case tcc_declaration:\n+      ultimate_origin = decl_ultimate_origin (node_or_origin);\n+      if (node || ultimate_origin)\n+\torigin = ultimate_origin;\n+\n       if (reusing_die)\n \tgoto add_location;\n "}]}