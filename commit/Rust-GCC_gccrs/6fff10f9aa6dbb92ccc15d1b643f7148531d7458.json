{"sha": "6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZmZjEwZjlhYTZkYmI5MmNjYzE1ZDFiNjQzZjcxNDg1MzFkNzQ1OA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-09-05T11:13:47Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-09-05T11:13:47Z"}, "message": "[PATCH AArch64 1/2] Add execution tests of vget_low and vget_high\n\n\t* gcc.target/aarch64/vget_high_1.c: New test.\n\t* gcc.target/aarch64/vget_low_1.c: Likewise.\n\nFrom-SVN: r214950", "tree": {"sha": "44051339725516b04369913edac4416ca7d14cc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44051339725516b04369913edac4416ca7d14cc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/comments", "author": null, "committer": null, "parents": [{"sha": "5726d3760b3b0c939a3ef3001f2cc1d86c08eac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5726d3760b3b0c939a3ef3001f2cc1d86c08eac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5726d3760b3b0c939a3ef3001f2cc1d86c08eac7"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "b83edc2c87763e0e0013c74392e8adce40f0918c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "patch": "@@ -1,3 +1,8 @@\n+2014-09-05  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/vget_high_1.c: New test.\n+\t* gcc.target/aarch64/vget_low_1.c: Likewise.\n+\n 2014-09-05  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/simd/int_comparisons.x: New file."}, {"sha": "4cb872da2cd269df5290a6af928ed958c4fecd09", "filename": "gcc/testsuite/gcc.target/aarch64/vget_high_1.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvget_high_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvget_high_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvget_high_1.c?ref=6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -std=c99\" } */\n+\n+#include <arm_neon.h>\n+\n+extern void abort (void);\n+\n+#define VARIANTS(VARIANT)\t\t\t\t\\\n+VARIANT (uint8_t, 8, uint8x8_t, uint8x16_t, u8)\t\t\\\n+VARIANT (uint16_t, 4, uint16x4_t, uint16x8_t, u16)\t\\\n+VARIANT (uint32_t, 2, uint32x2_t, uint32x4_t, u32)\t\\\n+VARIANT (uint64_t, 1, uint64x1_t, uint64x2_t, u64)\t\\\n+VARIANT (int8_t, 8, int8x8_t, int8x16_t, s8)\t\t\\\n+VARIANT (int16_t, 4, int16x4_t, int16x8_t, s16)\t\t\\\n+VARIANT (int32_t, 2, int32x2_t, int32x4_t, s32)\t\t\\\n+VARIANT (int64_t, 1, int64x1_t, int64x2_t, s64)\t\t\\\n+VARIANT (float32_t, 2, float32x2_t, float32x4_t, f32)\t\\\n+VARIANT (float64_t, 1, float64x1_t, float64x2_t, f64)\n+\n+\n+#define TESTMETH(BASETYPE, NUM64, TYPE64, TYPE128, SUFFIX)\t\\\n+int\t\t\t\t\t\t\t\t\\\n+test_vget_low_ ##SUFFIX (BASETYPE *data)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  BASETYPE temp [NUM64];\t\t\t\t\t\\\n+  TYPE128 vec = vld1q_##SUFFIX (data);\t\t\t\t\\\n+  TYPE64 high = vget_high_##SUFFIX (vec);\t\t\t\\\n+  vst1_##SUFFIX (temp, high);\t\t\t\t\t\\\n+  for (int i = 0; i < NUM64; i++)\t\t\t\t\\\n+    if (temp[i] != data[i + NUM64])\t\t\t\t\\\n+      return 1;\t\t\t\t\t\t\t\\\n+  return 0;\t\t\t\t\t\t\t\\\n+}\n+\n+VARIANTS (TESTMETH)\n+\n+#define CHECK(BASETYPE, NUM64, TYPE64, TYPE128, SUFFIX)\t\t\\\n+  if (test_vget_low_##SUFFIX (BASETYPE ## _ ## data) != 0)\t\\\n+    abort ();\n+\n+int\n+main (int argc, char **argv)\n+{\n+  uint8_t uint8_t_data[16] =\n+      { 1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 };\n+  uint16_t uint16_t_data[8] = { 1, 22, 333, 4444, 55555, 6666, 777, 88 };\n+  uint32_t uint32_t_data[4] = { 65537, 11, 70000, 23 };\n+  uint64_t uint64_t_data[2] = { 0xdeadbeefcafebabeULL, 0x0123456789abcdefULL };\n+  int8_t int8_t_data[16] =\n+      { -1, -3, -5, -7, 9, -11, -13, 15, -17, -19, 21, -23, 25, 27, -29, -31 };\n+  int16_t int16_t_data[8] = { -17, 19, 3, -999, 44048, 505, 9999, 1000};\n+  int32_t int32_t_data[4] = { 123456789, -987654321, -135792468, 975318642 };\n+  int64_t int64_t_data[2] = {0xfedcba9876543210LL, 0xdeadbabecafebeefLL };\n+  float32_t float32_t_data[4] = { 3.14159, 2.718, 1.414, 100.0 };\n+  float64_t float64_t_data[2] = { 1.01001000100001, 12345.6789 };\n+\n+  VARIANTS (CHECK);\n+\n+  return 0;\n+}"}, {"sha": "f8016ef73124981f7042957521f42754566e9518", "filename": "gcc/testsuite/gcc.target/aarch64/vget_low_1.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvget_low_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fff10f9aa6dbb92ccc15d1b643f7148531d7458/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvget_low_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvget_low_1.c?ref=6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -std=c99\" } */\n+\n+#include <arm_neon.h>\n+\n+extern void abort (void);\n+\n+#define VARIANTS(VARIANT)\t\t\t\t\\\n+VARIANT (uint8_t, 8, uint8x8_t, uint8x16_t, u8)\t\t\\\n+VARIANT (uint16_t, 4, uint16x4_t, uint16x8_t, u16)\t\\\n+VARIANT (uint32_t, 2, uint32x2_t, uint32x4_t, u32)\t\\\n+VARIANT (uint64_t, 1, uint64x1_t, uint64x2_t, u64)\t\\\n+VARIANT (int8_t, 8, int8x8_t, int8x16_t, s8)\t\t\\\n+VARIANT (int16_t, 4, int16x4_t, int16x8_t, s16)\t\t\\\n+VARIANT (int32_t, 2, int32x2_t, int32x4_t, s32)\t\t\\\n+VARIANT (int64_t, 1, int64x1_t, int64x2_t, s64)\t\t\\\n+VARIANT (float32_t, 2, float32x2_t, float32x4_t, f32)\t\\\n+VARIANT (float64_t, 1, float64x1_t, float64x2_t, f64)\n+\n+\n+#define TESTMETH(BASETYPE, NUM64, TYPE64, TYPE128, SUFFIX)\t\\\n+int\t\t\t\t\t\t\t\t\\\n+test_vget_low_ ##SUFFIX (BASETYPE *data)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  BASETYPE temp [NUM64];\t\t\t\t\t\\\n+  TYPE128 vec = vld1q_##SUFFIX (data);\t\t\t\t\\\n+  TYPE64 low = vget_low_##SUFFIX (vec);\t\t\t\t\\\n+  vst1_##SUFFIX (temp, low);\t\t\t\t\t\\\n+  for (int i = 0; i < NUM64; i++)\t\t\t\t\\\n+    if (temp[i] != data[i])\t\t\t\t\t\\\n+      return 1;\t\t\t\t\t\t\t\\\n+  return 0;\t\t\t\t\t\t\t\\\n+}\n+\n+VARIANTS (TESTMETH)\n+\n+#define CHECK(BASETYPE, NUM64, TYPE64, TYPE128, SUFFIX)\t\t\\\n+  if (test_vget_low_##SUFFIX (BASETYPE ## _ ## data) != 0)\t\\\n+    abort ();\n+\n+int\n+main (int argc, char **argv)\n+{\n+  uint8_t uint8_t_data[16] =\n+      { 1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 };\n+  uint16_t uint16_t_data[8] = { 1, 22, 333, 4444, 55555, 6666, 777, 88 };\n+  uint32_t uint32_t_data[4] = { 65537, 11, 70000, 23 };\n+  uint64_t uint64_t_data[2] = { 0xdeadbeefcafebabeULL, 0x0123456789abcdefULL };\n+  int8_t int8_t_data[16] =\n+      { -1, -3, -5, -7, 9, -11, -13, 15, -17, -19, 21, -23, 25, 27, -29, -31 };\n+  int16_t int16_t_data[8] = { -17, 19, 3, -999, 44048, 505, 9999, 1000};\n+  int32_t int32_t_data[4] = { 123456789, -987654321, -135792468, 975318642 };\n+  int64_t int64_t_data[2] = {0xfedcba9876543210LL, 0xdeadbabecafebeefLL };\n+  float32_t float32_t_data[4] = { 3.14159, 2.718, 1.414, 100.0 };\n+  float64_t float64_t_data[2] = { 1.01001000100001, 12345.6789 };\n+\n+  VARIANTS (CHECK);\n+\n+  return 0;\n+}"}]}