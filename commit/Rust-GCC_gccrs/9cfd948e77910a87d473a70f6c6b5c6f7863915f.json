{"sha": "9cfd948e77910a87d473a70f6c6b5c6f7863915f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNmZDk0OGU3NzkxMGE4N2Q0NzNhNzBmNmM2YjVjNmY3ODYzOTE1Zg==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-05-03T08:33:21Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-05-03T08:33:21Z"}, "message": "revert back to netlib versions as of f2c-19990501\n\nFrom-SVN: r26739", "tree": {"sha": "45ef91b9ac4f48ed52f259bf5ef40196e9479ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45ef91b9ac4f48ed52f259bf5ef40196e9479ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cfd948e77910a87d473a70f6c6b5c6f7863915f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cfd948e77910a87d473a70f6c6b5c6f7863915f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cfd948e77910a87d473a70f6c6b5c6f7863915f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cfd948e77910a87d473a70f6c6b5c6f7863915f/comments", "author": null, "committer": null, "parents": [{"sha": "d0369a2f4eea235f17c00a738552122c0ba6c681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0369a2f4eea235f17c00a738552122c0ba6c681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0369a2f4eea235f17c00a738552122c0ba6c681"}], "stats": {"total": 452, "additions": 199, "deletions": 253}, "files": [{"sha": "7d88fa40e3fb637e54044c1ee836952f6017f994", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -1,3 +1,11 @@\n+Mon May  3 10:52:53 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* libF77/c_cos.c, libF77/c_div.c, libF77/c_exp.c, libF77/c_log.c,\n+\tlibF77/c_sin.c, libF77/c_sqrt.c, libF77/d_cnjg.c, libF77/pow_zi.c,\n+\tlibF77/r_cnjg.c, libF77/z_cos.c, libF77/z_div.c, libF77/z_exp.c,\n+\tlibF77/z_log.c, libF77/z_sin.c, libF77/z_sqrt.c: Revert back to\n+\tnetlib versions as of f2c-19990501.\n+\n Sun May  2 01:38:50 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* libU77/u77-test.f (main): Declare FTELL as intrinsic."}, {"sha": "4aea0c3cf6995539311acbbd8172e2a7742bc113", "filename": "libf2c/libF77/c_cos.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_cos.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -3,19 +3,15 @@\n #ifdef KR_headers\n extern double sin(), cos(), sinh(), cosh();\n \n-VOID c_cos(resx, z) complex *resx, *z;\n+VOID c_cos(r, z) complex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n \n-void c_cos(complex *resx, complex *z)\n+void c_cos(complex *r, complex *z)\n #endif\n {\n-complex res;\n-\n-res.r = cos(z->r) * cosh(z->i);\n-res.i = - sin(z->r) * sinh(z->i);\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tdouble zr = z->r;\n+\tr->r =   cos(zr) * cosh(z->i);\n+\tr->i = - sin(zr) * sinh(z->i);\n+\t}"}, {"sha": "ac963079ba29f616abc44b93a666401cd0028121", "filename": "libf2c/libF77/c_div.c", "status": "modified", "additions": 26, "deletions": 29, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_div.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,39 +2,36 @@\n \n #ifdef KR_headers\n extern VOID sig_die();\n-VOID c_div(resx, a, b)\n-complex *a, *b, *resx;\n+VOID c_div(c, a, b)\n+complex *a, *b, *c;\n #else\n extern void sig_die(char*,int);\n-void c_div(complex *resx, complex *a, complex *b)\n+void c_div(complex *c, complex *a, complex *b)\n #endif\n {\n-double ratio, den;\n-double abr, abi;\n-complex res;\n+\tdouble ratio, den;\n+\tdouble abr, abi, cr;\n \n-if( (abr = b->r) < 0.)\n-\tabr = - abr;\n-if( (abi = b->i) < 0.)\n-\tabi = - abi;\n-if( abr <= abi )\n-\t{\n-\tif(abi == 0)\n-\t\tsig_die(\"complex division by zero\", 1);\n-\tratio = (double)b->r / b->i ;\n-\tden = b->i * (1 + ratio*ratio);\n-\tres.r = (a->r*ratio + a->i) / den;\n-\tres.i = (a->i*ratio - a->r) / den;\n-\t}\n+\tif( (abr = b->r) < 0.)\n+\t\tabr = - abr;\n+\tif( (abi = b->i) < 0.)\n+\t\tabi = - abi;\n+\tif( abr <= abi )\n+\t\t{\n+\t\tif(abi == 0)\n+\t\t\tsig_die(\"complex division by zero\", 1);\n+\t\tratio = (double)b->r / b->i ;\n+\t\tden = b->i * (1 + ratio*ratio);\n+\t\tcr = (a->r*ratio + a->i) / den;\n+\t\tc->i = (a->i*ratio - a->r) / den;\n+\t\t}\n \n-else\n-\t{\n-\tratio = (double)b->i / b->r ;\n-\tden = b->r * (1 + ratio*ratio);\n-\tres.r = (a->r + a->i*ratio) / den;\n-\tres.i = (a->i - a->r*ratio) / den;\n+\telse\n+\t\t{\n+\t\tratio = (double)b->i / b->r ;\n+\t\tden = b->r * (1 + ratio*ratio);\n+\t\tcr = (a->r + a->i*ratio) / den;\n+\t\tc->i = (a->i - a->r*ratio) / den;\n+\t\t}\n+\tc->r = cr;\n \t}\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}"}, {"sha": "8252c7f7012bbc3f0fda69e8df407c9d307d9964", "filename": "libf2c/libF77/c_exp.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_exp.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -3,21 +3,17 @@\n #ifdef KR_headers\n extern double exp(), cos(), sin();\n \n- VOID c_exp(resx, z) complex *resx, *z;\n+ VOID c_exp(r, z) complex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n \n-void c_exp(complex *resx, complex *z)\n+void c_exp(complex *r, complex *z)\n #endif\n {\n double expx;\n-complex res;\n \n expx = exp(z->r);\n-res.r = expx * cos(z->i);\n-res.i = expx * sin(z->i);\n-\n-resx->r = res.r;\n-resx->i = res.i;\n+r->r = expx * cos(z->i);\n+r->i = expx * sin(z->i);\n }"}, {"sha": "6ac990ca267589a0b303f0ee724f5eadcc0aeafa", "filename": "libf2c/libF77/c_log.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_log.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,20 +2,16 @@\n \n #ifdef KR_headers\n extern double log(), f__cabs(), atan2();\n-VOID c_log(resx, z) complex *resx, *z;\n+VOID c_log(r, z) complex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n extern double f__cabs(double, double);\n \n-void c_log(complex *resx, complex *z)\n+void c_log(complex *r, complex *z)\n #endif\n {\n-complex res;\n-\n-res.i = atan2(z->i, z->r);\n-res.r = log( f__cabs(z->r, z->i) );\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tdouble zi;\n+\tr->i = atan2(zi = z->i, z->r);\n+\tr->r = log( f__cabs(z->r, zi) );\n+\t}"}, {"sha": "15acccc59af84b2bc2ca17a4257984cb942281eb", "filename": "libf2c/libF77/c_sin.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_sin.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -3,19 +3,15 @@\n #ifdef KR_headers\n extern double sin(), cos(), sinh(), cosh();\n \n-VOID c_sin(resx, z) complex *resx, *z;\n+VOID c_sin(r, z) complex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n \n-void c_sin(complex *resx, complex *z)\n+void c_sin(complex *r, complex *z)\n #endif\n {\n-complex res;\n-\n-res.r = sin(z->r) * cosh(z->i);\n-res.i = cos(z->r) * sinh(z->i);\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tdouble zr = z->r;\n+\tr->r = sin(zr) * cosh(z->i);\n+\tr->i = cos(zr) * sinh(z->i);\n+\t}"}, {"sha": "8481ee4857e00a8a80b3a4ad63f36effe5786c1f", "filename": "libf2c/libF77/c_sqrt.c", "status": "modified", "additions": 22, "deletions": 25, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fc_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_sqrt.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -3,36 +3,33 @@\n #ifdef KR_headers\n extern double sqrt(), f__cabs();\n \n-VOID c_sqrt(resx, z) complex *resx, *z;\n+VOID c_sqrt(r, z) complex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n extern double f__cabs(double, double);\n \n-void c_sqrt(complex *resx, complex *z)\n+void c_sqrt(complex *r, complex *z)\n #endif\n {\n-double mag, t;\n-complex res;\n+\tdouble mag, t;\n+\tdouble zi = z->i, zr = z->r;\n \n-if( (mag = f__cabs(z->r, z->i)) == 0.)\n-\tres.r = res.i = 0.;\n-else if(z->r > 0)\n-\t{\n-\tres.r = t = sqrt(0.5 * (mag + z->r) );\n-\tt = z->i / t;\n-\tres.i = 0.5 * t;\n+\tif( (mag = f__cabs(zr, zi)) == 0.)\n+\t\tr->r = r->i = 0.;\n+\telse if(zr > 0)\n+\t\t{\n+\t\tr->r = t = sqrt(0.5 * (mag + zr) );\n+\t\tt = zi / t;\n+\t\tr->i = 0.5 * t;\n+\t\t}\n+\telse\n+\t\t{\n+\t\tt = sqrt(0.5 * (mag - zr) );\n+\t\tif(zi < 0)\n+\t\t\tt = -t;\n+\t\tr->i = t;\n+\t\tt = zi / t;\n+\t\tr->r = 0.5 * t;\n+\t\t}\n \t}\n-else\n-\t{\n-\tt = sqrt(0.5 * (mag - z->r) );\n-\tif(z->i < 0)\n-\t\tt = -t;\n-\tres.i = t;\n-\tt = z->i / t;\n-\tres.r = 0.5 * t;\n-\t}\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}"}, {"sha": "c778c38758cb841fad712b3561654f4b83bf212b", "filename": "libf2c/libF77/d_cnjg.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fd_cnjg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fd_cnjg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_cnjg.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,16 +2,11 @@\n \n  VOID\n #ifdef KR_headers\n-d_cnjg(resx, z) doublecomplex *resx, *z;\n+d_cnjg(r, z) doublecomplex *r, *z;\n #else\n-d_cnjg(doublecomplex *resx, doublecomplex *z)\n+d_cnjg(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-doublecomplex res;\n-\n-res.r = z->r;\n-res.i = - z->i;\n-\n-resx->r = res.r;\n-resx->i = res.i;\n+r->r = z->r;\n+r->i = - z->i;\n }"}, {"sha": "abb3cb2b5302962e0cb731c4b13daf03b2b10a23", "filename": "libf2c/libF77/pow_zi.c", "status": "modified", "additions": 40, "deletions": 47, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fpow_zi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fpow_zi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fpow_zi.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -1,61 +1,54 @@\n #include \"f2c.h\"\n \n #ifdef KR_headers\n-VOID pow_zi(resx, a, b) \t/* p = a**b  */\n- doublecomplex *resx, *a; integer *b;\n+VOID pow_zi(p, a, b) \t/* p = a**b  */\n+ doublecomplex *p, *a; integer *b;\n #else\n extern void z_div(doublecomplex*, doublecomplex*, doublecomplex*);\n-void pow_zi(doublecomplex *resx, doublecomplex *a, integer *b) \t/* p = a**b  */\n+void pow_zi(doublecomplex *p, doublecomplex *a, integer *b) \t/* p = a**b  */\n #endif\n {\n-integer n;\n-unsigned long u;\n-double t;\n-doublecomplex x;\n-doublecomplex res;\n-static doublecomplex one = {1.0, 0.0};\n+\tinteger n;\n+\tunsigned long u;\n+\tdouble t;\n+\tdoublecomplex q, x;\n+\tstatic doublecomplex one = {1.0, 0.0};\n \n-n = *b;\n+\tn = *b;\n+\tq.r = 1;\n+\tq.i = 0;\n \n-if(n == 0)\n-\t{\n-\tresx->r = 1;\n-\tresx->i = 0;\n-\treturn;\n-\t}\n-\n-res.r = 1;\n-res.i = 0;\n-\n-if(n < 0)\n-\t{\n-\tn = -n;\n-\tz_div(&x, &one, a);\n-\t}\n-else\n-\t{\n-\tx.r = a->r;\n-\tx.i = a->i;\n-\t}\n-\n-for(u = n; ; )\n-\t{\n-\tif(u & 01)\n+\tif(n == 0)\n+\t\tgoto done;\n+\tif(n < 0)\n \t\t{\n-\t\tt = res.r * x.r - res.i * x.i;\n-\t\tres.i = res.r * x.i + res.i * x.r;\n-\t\tres.r = t;\n+\t\tn = -n;\n+\t\tz_div(&x, &one, a);\n \t\t}\n-\tif(u >>= 1)\n+\telse\n \t\t{\n-\t\tt = x.r * x.r - x.i * x.i;\n-\t\tx.i = 2 * x.r * x.i;\n-\t\tx.r = t;\n+\t\tx.r = a->r;\n+\t\tx.i = a->i;\n \t\t}\n-\telse\n-\t\tbreak;\n-\t}\n \n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tfor(u = n; ; )\n+\t\t{\n+\t\tif(u & 01)\n+\t\t\t{\n+\t\t\tt = q.r * x.r - q.i * x.i;\n+\t\t\tq.i = q.r * x.i + q.i * x.r;\n+\t\t\tq.r = t;\n+\t\t\t}\n+\t\tif(u >>= 1)\n+\t\t\t{\n+\t\t\tt = x.r * x.r - x.i * x.i;\n+\t\t\tx.i = 2 * x.r * x.i;\n+\t\t\tx.r = t;\n+\t\t\t}\n+\t\telse\n+\t\t\tbreak;\n+\t\t}\n+ done:\n+\tp->i = q.i;\n+\tp->r = q.r;\n+\t}"}, {"sha": "e127ca969c4ff819484c039f5de4107ce0edde49", "filename": "libf2c/libF77/r_cnjg.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fr_cnjg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fr_cnjg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_cnjg.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -1,16 +1,11 @@\n #include \"f2c.h\"\n \n #ifdef KR_headers\n-VOID r_cnjg(resx, z) complex *resx, *z;\n+VOID r_cnjg(r, z) complex *r, *z;\n #else\n-VOID r_cnjg(complex *resx, complex *z)\n+VOID r_cnjg(complex *r, complex *z)\n #endif\n {\n-complex res;\n-\n-res.r = z->r;\n-res.i = - z->i;\n-\n-resx->r = res.r;\n-resx->i = res.i;\n+r->r = z->r;\n+r->i = - z->i;\n }"}, {"sha": "fdd1510db48f7c8e57aa0b355d716337e2b8f918", "filename": "libf2c/libF77/z_cos.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_cos.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,18 +2,14 @@\n \n #ifdef KR_headers\n double sin(), cos(), sinh(), cosh();\n-VOID z_cos(resx, z) doublecomplex *resx, *z;\n+VOID z_cos(r, z) doublecomplex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n-void z_cos(doublecomplex *resx, doublecomplex *z)\n+#include \"math.h\"\n+void z_cos(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-doublecomplex res;\n-\n-res.r = cos(z->r) * cosh(z->i);\n-res.i = - sin(z->r) * sinh(z->i);\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tdouble zr = z->r;\n+\tr->r =   cos(zr) * cosh(z->i);\n+\tr->i = - sin(zr) * sinh(z->i);\n+\t}"}, {"sha": "22153fa4514a556683fd1d61c9bf840d772c832e", "filename": "libf2c/libF77/z_div.c", "status": "modified", "additions": 25, "deletions": 28, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_div.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,38 +2,35 @@\n \n #ifdef KR_headers\n extern VOID sig_die();\n-VOID z_div(resx, a, b) doublecomplex *a, *b, *resx;\n+VOID z_div(c, a, b) doublecomplex *a, *b, *c;\n #else\n extern void sig_die(char*, int);\n-void z_div(doublecomplex *resx, doublecomplex *a, doublecomplex *b)\n+void z_div(doublecomplex *c, doublecomplex *a, doublecomplex *b)\n #endif\n {\n-double ratio, den;\n-double abr, abi;\n-doublecomplex res;\n+\tdouble ratio, den;\n+\tdouble abr, abi, cr;\n \n-if( (abr = b->r) < 0.)\n-\tabr = - abr;\n-if( (abi = b->i) < 0.)\n-\tabi = - abi;\n-if( abr <= abi )\n-\t{\n-\tif(abi == 0)\n-\t\tsig_die(\"complex division by zero\", 1);\n-\tratio = b->r / b->i ;\n-\tden = b->i * (1 + ratio*ratio);\n-\tres.r = (a->r*ratio + a->i) / den;\n-\tres.i = (a->i*ratio - a->r) / den;\n-\t}\n+\tif( (abr = b->r) < 0.)\n+\t\tabr = - abr;\n+\tif( (abi = b->i) < 0.)\n+\t\tabi = - abi;\n+\tif( abr <= abi )\n+\t\t{\n+\t\tif(abi == 0)\n+\t\t\tsig_die(\"complex division by zero\", 1);\n+\t\tratio = b->r / b->i ;\n+\t\tden = b->i * (1 + ratio*ratio);\n+\t\tcr = (a->r*ratio + a->i) / den;\n+\t\tc->i = (a->i*ratio - a->r) / den;\n+\t\t}\n \n-else\n-\t{\n-\tratio = b->i / b->r ;\n-\tden = b->r * (1 + ratio*ratio);\n-\tres.r = (a->r + a->i*ratio) / den;\n-\tres.i = (a->i - a->r*ratio) / den;\n+\telse\n+\t\t{\n+\t\tratio = b->i / b->r ;\n+\t\tden = b->r * (1 + ratio*ratio);\n+\t\tcr = (a->r + a->i*ratio) / den;\n+\t\tc->i = (a->i - a->r*ratio) / den;\n+\t\t}\n+\tc->r = cr;\n \t}\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}"}, {"sha": "56138f3d34b44d9f88317c1b0a571f7928b40c94", "filename": "libf2c/libF77/z_exp.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_exp.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,20 +2,16 @@\n \n #ifdef KR_headers\n double exp(), cos(), sin();\n-VOID z_exp(resx, z) doublecomplex *resx, *z;\n+VOID z_exp(r, z) doublecomplex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n-void z_exp(doublecomplex *resx, doublecomplex *z)\n+#include \"math.h\"\n+void z_exp(doublecomplex *r, doublecomplex *z)\n #endif\n {\n double expx;\n-doublecomplex res;\n \n expx = exp(z->r);\n-res.r = expx * cos(z->i);\n-res.i = expx * sin(z->i);\n-\n-resx->r = res.r;\n-resx->i = res.i;\n+r->r = expx * cos(z->i);\n+r->i = expx * sin(z->i);\n }"}, {"sha": "2d52b941d68c739677bf45bee727baee65f44688", "filename": "libf2c/libF77/z_log.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_log.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,19 +2,15 @@\n \n #ifdef KR_headers\n double log(), f__cabs(), atan2();\n-VOID z_log(resx, z) doublecomplex *resx, *z;\n+VOID z_log(r, z) doublecomplex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n extern double f__cabs(double, double);\n-void z_log(doublecomplex *resx, doublecomplex *z)\n+void z_log(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-doublecomplex res;\n-\n-res.i = atan2(z->i, z->r);\n-res.r = log( f__cabs( z->r, z->i ) );\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tdouble zi = z->i;\n+\tr->i = atan2(zi, z->r);\n+\tr->r = log( f__cabs( z->r, zi ) );\n+\t}"}, {"sha": "577be1d85f905170bff0e6440137f53b50c0327d", "filename": "libf2c/libF77/z_sin.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_sin.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,18 +2,14 @@\n \n #ifdef KR_headers\n double sin(), cos(), sinh(), cosh();\n-VOID z_sin(resx, z) doublecomplex *resx, *z;\n+VOID z_sin(r, z) doublecomplex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n-void z_sin(doublecomplex *resx, doublecomplex *z)\n+#include \"math.h\"\n+void z_sin(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-doublecomplex res;\n-\n-res.r = sin(z->r) * cosh(z->i);\n-res.i = cos(z->r) * sinh(z->i);\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}\n+\tdouble zr = z->r;\n+\tr->r = sin(zr) * cosh(z->i);\n+\tr->i = cos(zr) * sinh(z->i);\n+\t}"}, {"sha": "c04e8f0a1a72324a1beae8bd3bd22b283dac5a98", "filename": "libf2c/libF77/z_sqrt.c", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_sqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfd948e77910a87d473a70f6c6b5c6f7863915f/libf2c%2FlibF77%2Fz_sqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_sqrt.c?ref=9cfd948e77910a87d473a70f6c6b5c6f7863915f", "patch": "@@ -2,32 +2,28 @@\n \n #ifdef KR_headers\n double sqrt(), f__cabs();\n-VOID z_sqrt(resx, z) doublecomplex *resx, *z;\n+VOID z_sqrt(r, z) doublecomplex *r, *z;\n #else\n #undef abs\n-#include <math.h>\n+#include \"math.h\"\n extern double f__cabs(double, double);\n-void z_sqrt(doublecomplex *resx, doublecomplex *z)\n+void z_sqrt(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-double mag;\n-doublecomplex res;\n+\tdouble mag, zi = z->i, zr = z->r;\n \n-if( (mag = f__cabs(z->r, z->i)) == 0.)\n-\tres.r = res.i = 0.;\n-else if(z->r > 0)\n-\t{\n-\tres.r = sqrt(0.5 * (mag + z->r) );\n-\tres.i = z->i / res.r / 2;\n+\tif( (mag = f__cabs(zr, zi)) == 0.)\n+\t\tr->r = r->i = 0.;\n+\telse if(zr > 0)\n+\t\t{\n+\t\tr->r = sqrt(0.5 * (mag + zr) );\n+\t\tr->i = zi / r->r / 2;\n+\t\t}\n+\telse\n+\t\t{\n+\t\tr->i = sqrt(0.5 * (mag - zr) );\n+\t\tif(zi < 0)\n+\t\t\tr->i = - r->i;\n+\t\tr->r = zi / r->i / 2;\n+\t\t}\n \t}\n-else\n-\t{\n-\tres.i = sqrt(0.5 * (mag - z->r) );\n-\tif(z->i < 0)\n-\t\tres.i = - res.i;\n-\tres.r = z->i / res.i / 2;\n-\t}\n-\n-resx->r = res.r;\n-resx->i = res.i;\n-}"}]}