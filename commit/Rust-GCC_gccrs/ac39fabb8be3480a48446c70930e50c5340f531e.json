{"sha": "ac39fabb8be3480a48446c70930e50c5340f531e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMzOWZhYmI4YmUzNDgwYTQ4NDQ2YzcwOTMwZTUwYzUzNDBmNTMxZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-02-27T01:01:31Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-02-27T01:01:31Z"}, "message": "basic_ios.tcc (basic_ios::init): Set _M_fill to zero.\n\n\n2002-02-26  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/basic_ios.tcc (basic_ios::init): Set _M_fill to zero.\n\tAdjust comment.\n\t* include/bits/basic_ios.h (basic_ios::_M_fill): Make mutable.\n\t(basic_ios::_M_fill_init): New.\n\t(basic_ios::fill()): Deal with _M_fill lazily.\n\tAdjust comment.\n\t* testsuite/27_io/ios_init.cc (test02): Adjust testcase.\n\nFrom-SVN: r50076", "tree": {"sha": "3ac75abcaf33f449f61b81396220d127595f05d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ac75abcaf33f449f61b81396220d127595f05d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac39fabb8be3480a48446c70930e50c5340f531e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac39fabb8be3480a48446c70930e50c5340f531e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac39fabb8be3480a48446c70930e50c5340f531e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac39fabb8be3480a48446c70930e50c5340f531e/comments", "author": null, "committer": null, "parents": [{"sha": "831c4e87d062632c91dbcc3695d708c43d3db6cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831c4e87d062632c91dbcc3695d708c43d3db6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831c4e87d062632c91dbcc3695d708c43d3db6cb"}], "stats": {"total": 63, "additions": 41, "deletions": 22}, "files": [{"sha": "b2e5216c8ab692339d523e31e166a42c5d2d8a7b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ac39fabb8be3480a48446c70930e50c5340f531e", "patch": "@@ -1,4 +1,14 @@\n-2002-02-26  Loren Rittle <ljrittle@acm.org>\n+2002-02-26  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/basic_ios.tcc (basic_ios::init): Set _M_fill to zero.\n+\tAdjust comment.\n+\t* include/bits/basic_ios.h (basic_ios::_M_fill): Make mutable.\n+\t(basic_ios::_M_fill_init): New.\n+\t(basic_ios::fill()): Deal with _M_fill lazily.\n+\tAdjust comment. \n+\t* testsuite/27_io/ios_init.cc (test02): Adjust testcase.\n+\n+2002-02-26  Loren Rittle  <ljrittle@acm.org>\n \n \t* include/Makefile.am (thread_target_headers): Unconditionally\n \tstage and install gthr-posix.h."}, {"sha": "dea2fdb38575c80043ca7fc45917ec55820ea5ba", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=ac39fabb8be3480a48446c70930e50c5340f531e", "patch": "@@ -64,7 +64,8 @@ namespace std\n       // Data members:\n     protected:\n       basic_ostream<_CharT, _Traits>* \t_M_tie;\n-      char_type \t\t\t_M_fill;\n+      mutable char_type \t\t_M_fill;\n+      mutable bool\t\t\t_M_fill_init;\n       iostate \t\t\t\t_M_exception;\n \n       basic_streambuf<_CharT, _Traits>* _M_streambuf;\n@@ -160,7 +161,14 @@ namespace std\n \n       char_type \n       fill() const \n-      { return _M_fill; }\n+      {\n+\tif (!_M_fill_init)\n+\t  {\n+\t    _M_fill = this->widen(' ');\n+\t    _M_fill_init = true;\n+\t  }\n+\treturn _M_fill; \n+      }\n \n       char_type \n       fill(char_type __ch)"}, {"sha": "63a439747b7b74e4316ebd4ab3d7c7367fb81390", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=ac39fabb8be3480a48446c70930e50c5340f531e", "patch": "@@ -144,17 +144,20 @@ namespace std\n       _M_cache_facets(_M_ios_locale);\n       _M_tie = 0;\n \n-      // NB: The 27.4.4.1 Postconditions Table only specifies\n-      // requirements after basic_ios::init() has been called. As part\n-      // of this, fill() must return widen(' '), which needs an imbued\n-      // ctype facet of char_type to return without throwing an\n-      // exception. Unfortunately, ctype<char_type> is not necessarily a\n-      // required facet, so streams with char_type != [char, wchar_t]\n-      // will not have it by default. However, because fill()'s\n-      // signature is const, this data member cannot be lazily\n-      // initialized.  Thus, thoughts of using a non-const helper\n-      // function in ostream inserters is really besides the point.\n-      _M_fill = this->widen(' ');\n+      // NB: The 27.4.4.1 Postconditions Table specifies requirements\n+      // after basic_ios::init() has been called. As part of this,\n+      // fill() must return widen(' ') any time after init() has been\n+      // called, which needs an imbued ctype facet of char_type to\n+      // return without throwing an exception. Unfortunately,\n+      // ctype<char_type> is not necessarily a required facet, so\n+      // streams with char_type != [char, wchar_t] will not have it by\n+      // default. Because of this, the correct value for _M_fill is\n+      // constructed on the first call of fill(). That way,\n+      // unformatted input and output with non-required basic_ios\n+      // instantiations is possible even without imbuing the expected\n+      // ctype<char_type> facet.\n+      _M_fill = 0;\n+      _M_fill_init = false;\n \n       _M_exception = goodbit;\n       _M_streambuf = __sb;"}, {"sha": "7cef9cce68340f0891a7572726ba31771a553d9c", "filename": "libstdc++-v3/testsuite/27_io/ios_init.cc", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39fabb8be3480a48446c70930e50c5340f531e/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc?ref=ac39fabb8be3480a48446c70930e50c5340f531e", "patch": "@@ -83,17 +83,16 @@ void test01()\n }\n \n // Non-required instantiations don't have the required facets inbued,\n-// by default, into the locale object. As such, basic_ios::init is\n-// required to return a bad_cast for the first use of fill() call.\n+// by default, into the locale object.\n // See 27.4.4.1\n-\n class gnu_ios: public std::basic_ios<char> { };\n \n void test02() \n {\n   bool test = true;\n \n   // 01: Doesn't call basic_ios::init, which uses ctype<char_type>..\n+  // This should be unambiguously correct.\n   try\n     {\n       gnu_ios gios;\n@@ -103,15 +102,12 @@ void test02()\n       test = false; \n     }\n \n-  // 02: Calls basic_ios::init, which uses ctype<char_type>..\n+  // 02: Calls basic_ios::init, which may call ctype<char_type>...\n   try\n     {\n       std::basic_string<unsigned short>        \tstr;\n       std::basic_ostringstream<unsigned short> \toss(str);\n       \n-      // Shouldn't get this far.\n-      test = false; \n-\n       // Try each member functions for unformatted io.\n       // put\n       oss.put(324);\n@@ -125,7 +121,9 @@ void test02()\n     }\n   catch(const std::bad_cast& obj)\n     {\n-      // This is correct.\n+      // Should be able to do the above without calling fill() and\n+      // forcing a call to widen...\n+      test = false;\n     }\n   catch(...)\n     {"}]}