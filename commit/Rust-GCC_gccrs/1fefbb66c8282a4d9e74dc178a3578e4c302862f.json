{"sha": "1fefbb66c8282a4d9e74dc178a3578e4c302862f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlZmJiNjZjODI4MmE0ZDllNzRkYzE3OGEzNTc4ZTRjMzAyODYyZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-09-24T07:35:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-09-24T07:35:55Z"}, "message": "tree-ssa-sccvn.h (vn_reference_op_struct): Add clique and base members.\n\n2015-09-24  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.h (vn_reference_op_struct): Add clique and base\n\tmembers.\n\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Record clique\n\tand base for MEM_REF and TARGET_MEM_REF.  Handle BIT_FIELD_REF\n\toffset.\n\t(ao_ref_init_from_vn_reference): Record clique and base in the\n\tbuilt base.\n\t* tree-ssa-pre.c (create_component_ref_by_pieces_1): Likewise\n\n\t* g++.dg/tree-ssa/restrict3.C: New testcase.\n\nFrom-SVN: r228074", "tree": {"sha": "57fd1e1a8691727365ec0a98226d7ba07c04e952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57fd1e1a8691727365ec0a98226d7ba07c04e952"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fefbb66c8282a4d9e74dc178a3578e4c302862f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fefbb66c8282a4d9e74dc178a3578e4c302862f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fefbb66c8282a4d9e74dc178a3578e4c302862f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fefbb66c8282a4d9e74dc178a3578e4c302862f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a28fdcaf70aee998705bf5878f4c508d9641e31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a28fdcaf70aee998705bf5878f4c508d9641e31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a28fdcaf70aee998705bf5878f4c508d9641e31"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "8481677df625f31a7a64093b03213a1aa2c5439a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fefbb66c8282a4d9e74dc178a3578e4c302862f", "patch": "@@ -1,3 +1,14 @@\n+2015-09-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.h (vn_reference_op_struct): Add clique and base\n+\tmembers.\n+\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Record clique\n+\tand base for MEM_REF and TARGET_MEM_REF.  Handle BIT_FIELD_REF\n+\toffset.\n+\t(ao_ref_init_from_vn_reference): Record clique and base in the\n+\tbuilt base.\n+\t* tree-ssa-pre.c (create_component_ref_by_pieces_1): Likewise\n+\n 2015-09-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/48885"}, {"sha": "c9ffa70d5adc6525e9e018977ac80384f3d214b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1fefbb66c8282a4d9e74dc178a3578e4c302862f", "patch": "@@ -1,3 +1,7 @@\n+2015-09-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/tree-ssa/restrict3.C: New testcase.\n+\n 2015-09-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/48885"}, {"sha": "d1e1343a7ce133d57e50b256b08818b512b9e2c8", "filename": "gcc/testsuite/g++.dg/tree-ssa/restrict3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict3.C?ref=1fefbb66c8282a4d9e74dc178a3578e4c302862f", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fdump-tree-fre1\" }\n+\n+int\n+f (int *__restrict__ &__restrict__ p, int *p2)\n+{\n+  *p = 1;\n+  *p2 = 2;\n+  return *p;\n+}\n+\n+// { dg-final { scan-tree-dump \"return 1;\" \"fre1\" } }"}, {"sha": "ac298d3cabd052d00944eba7ea077ce6eab99c63", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=1fefbb66c8282a4d9e74dc178a3578e4c302862f", "patch": "@@ -2531,7 +2531,10 @@ create_component_ref_by_pieces_1 (basic_block block, vn_reference_t ref,\n \t\t\t\t\t\t     off));\n \t    baseop = build_fold_addr_expr (base);\n \t  }\n-\treturn fold_build2 (MEM_REF, currop->type, baseop, offset);\n+\tgenop = build2 (MEM_REF, currop->type, baseop, offset);\n+\tMR_DEPENDENCE_CLIQUE (genop) = currop->clique;\n+\tMR_DEPENDENCE_BASE (genop) = currop->base;\n+\treturn genop;\n       }\n \n     case TARGET_MEM_REF:\n@@ -2554,8 +2557,12 @@ create_component_ref_by_pieces_1 (basic_block block, vn_reference_t ref,\n \t    if (!genop1)\n \t      return NULL_TREE;\n \t  }\n-\treturn build5 (TARGET_MEM_REF, currop->type,\n-\t\t       baseop, currop->op2, genop0, currop->op1, genop1);\n+\tgenop = build5 (TARGET_MEM_REF, currop->type,\n+\t\t\tbaseop, currop->op2, genop0, currop->op1, genop1);\n+\n+\tMR_DEPENDENCE_CLIQUE (genop) = currop->clique;\n+\tMR_DEPENDENCE_BASE (genop) = currop->base;\n+\treturn genop;\n       }\n \n     case ADDR_EXPR:"}, {"sha": "57c1b55a4a68ca1714c23f2f1b38eee925113dac", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=1fefbb66c8282a4d9e74dc178a3578e4c302862f", "patch": "@@ -773,6 +773,8 @@ copy_reference_ops_from_ref (tree ref, vec<vn_reference_op_s> *result)\n       temp.op1 = TMR_STEP (ref);\n       temp.op2 = TMR_OFFSET (ref);\n       temp.off = -1;\n+      temp.clique = MR_DEPENDENCE_CLIQUE (ref);\n+      temp.base = MR_DEPENDENCE_BASE (ref);\n       result->quick_push (temp);\n \n       memset (&temp, 0, sizeof (temp));\n@@ -816,11 +818,19 @@ copy_reference_ops_from_ref (tree ref, vec<vn_reference_op_s> *result)\n \t  temp.op0 = TREE_OPERAND (ref, 1);\n \t  if (tree_fits_shwi_p (TREE_OPERAND (ref, 1)))\n \t    temp.off = tree_to_shwi (TREE_OPERAND (ref, 1));\n+\t  temp.clique = MR_DEPENDENCE_CLIQUE (ref);\n+\t  temp.base = MR_DEPENDENCE_BASE (ref);\n \t  break;\n \tcase BIT_FIELD_REF:\n \t  /* Record bits and position.  */\n \t  temp.op0 = TREE_OPERAND (ref, 1);\n \t  temp.op1 = TREE_OPERAND (ref, 2);\n+\t  if (tree_fits_shwi_p (TREE_OPERAND (ref, 2)))\n+\t    {\n+\t      HOST_WIDE_INT off = tree_to_shwi (TREE_OPERAND (ref, 2));\n+\t      if (off % BITS_PER_UNIT == 0)\n+\t\ttemp.off = off / BITS_PER_UNIT;\n+\t    }\n \t  break;\n \tcase COMPONENT_REF:\n \t  /* The field decl is enough to unambiguously specify the field,\n@@ -1017,6 +1027,8 @@ ao_ref_init_from_vn_reference (ao_ref *ref,\n \t  base_alias_set = get_deref_alias_set (op->op0);\n \t  *op0_p = build2 (MEM_REF, op->type,\n \t\t\t   NULL_TREE, op->op0);\n+\t  MR_DEPENDENCE_CLIQUE (*op0_p) = op->clique;\n+\t  MR_DEPENDENCE_BASE (*op0_p) = op->base;\n \t  op0_p = &TREE_OPERAND (*op0_p, 0);\n \t  break;\n "}, {"sha": "92ca85ab8be8a325364e03543dfc2f9828de39ba", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fefbb66c8282a4d9e74dc178a3578e4c302862f/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=1fefbb66c8282a4d9e74dc178a3578e4c302862f", "patch": "@@ -83,6 +83,9 @@ typedef struct vn_reference_op_struct\n   ENUM_BITFIELD(tree_code) opcode : 16;\n   /* 1 for instrumented calls.  */\n   unsigned with_bounds : 1;\n+  /* Dependence info, used for [TARGET_]MEM_REF only.  */\n+  unsigned short clique;\n+  unsigned short base;\n   /* Constant offset this op adds or -1 if it is variable.  */\n   HOST_WIDE_INT off;\n   tree type;"}]}