{"sha": "5ab228501e6340fff0ab619d40d22594e08255da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiMjI4NTAxZTYzNDBmZmYwYWI2MTlkNDBkMjI1OTRlMDgyNTVkYQ==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@linaro.org", "date": "2012-03-15T10:50:58Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2012-03-15T10:50:58Z"}, "message": "Fix gnu_unique_object handling for arm-linux-gnueabi\n\n2012-03-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\t* config.gcc (target_type_format_char): New. Document it. Set it for\n        arm*-*-* .\n\t* configure.ac (gnu_unique_option): Use target_type_format_char in test.\n        Comment rationale.\n\t* configure: Regenerate .\n\nFrom-SVN: r185428", "tree": {"sha": "f698564e84b66556b78c24aff9af5b4e094570e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f698564e84b66556b78c24aff9af5b4e094570e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ab228501e6340fff0ab619d40d22594e08255da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab228501e6340fff0ab619d40d22594e08255da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ab228501e6340fff0ab619d40d22594e08255da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab228501e6340fff0ab619d40d22594e08255da/comments", "author": null, "committer": null, "parents": [{"sha": "ad193f32c80b2d5f5c62f00b5cfd729bc12e6cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad193f32c80b2d5f5c62f00b5cfd729bc12e6cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad193f32c80b2d5f5c62f00b5cfd729bc12e6cd1"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "4bc8629a82d211bc38d7ba17c0836af0299a3675", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ab228501e6340fff0ab619d40d22594e08255da", "patch": "@@ -1,3 +1,11 @@\n+2012-03-13  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* config.gcc (target_type_format_char): New. Document it. Set it for\n+        arm*-*-* .\n+\t* configure.ac (gnu_unique_option): Use target_type_format_char in test.\n+        Comment rationale.\n+\t* configure: Regenerate .\n+\n 2012-03-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/52267"}, {"sha": "a1f080aaf23c6cc1a2c240c0788dcf71284b838f", "filename": "gcc/config.gcc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5ab228501e6340fff0ab619d40d22594e08255da", "patch": "@@ -182,6 +182,11 @@\n #\t\t\tthe --with-sysroot configure option or the\n #\t\t\t--sysroot command line option is used this\n #\t\t\twill be relative to the sysroot.\n+# target_type_format_char \n+# \t\t\tThe default character to be used for formatting\n+#\t\t\tthe attribute in a\n+#\t\t\t.type symbol_name, ${t_t_f_c}<property>\n+#\t\t\tdirective.\n \n # The following variables are used in each case-construct to build up the\n # outgoing variables:\n@@ -232,6 +237,7 @@ target_gtfiles=\n need_64bit_hwint=\n need_64bit_isa=\n native_system_header_dir=/usr/include\n+target_type_format_char='@'\n \n # Don't carry these over build->host->target.  Please.\n xm_file=\n@@ -314,6 +320,7 @@ am33_2.0-*-linux*)\n arm*-*-*)\n \tcpu_type=arm\n \textra_headers=\"mmintrin.h arm_neon.h\"\n+\ttarget_type_format_char='%'\n \tc_target_objs=\"arm-c.o\"\n \tcxx_target_objs=\"arm-c.o\"\n \textra_options=\"${extra_options} arm/arm-tables.opt\""}, {"sha": "6dd0f98bde250126cbfb4bc6c625e4604bcec3e5", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5ab228501e6340fff0ab619d40d22594e08255da", "patch": "@@ -26081,7 +26081,7 @@ else\n   then gcc_cv_as_gnu_unique_object=yes\n fi\n   elif test x$gcc_cv_as != x; then\n-    $as_echo '.type foo, @gnu_unique_object' > conftest.s\n+    $as_echo '.type foo, '$target_type_format_char'gnu_unique_object' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n@@ -26100,7 +26100,8 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gnu_unique_object\" >&5\n $as_echo \"$gcc_cv_as_gnu_unique_object\" >&6; }\n if test $gcc_cv_as_gnu_unique_object = yes; then\n-  # Also check for ld.so support, i.e. glibc 2.11 or higher.\n+  # We need to unquote above to to use the definition from config.gcc.\n+# Also check for ld.so support, i.e. glibc 2.11 or higher.\n    if test x$host = x$build -a x$host = x$target &&\n        ldd --version 2>/dev/null &&\n        glibcver=`ldd --version 2>/dev/null | sed 's/.* //;q'`; then"}, {"sha": "30a73866538bd9016b8b1b1498ba114faad9cb6f", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab228501e6340fff0ab619d40d22594e08255da/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=5ab228501e6340fff0ab619d40d22594e08255da", "patch": "@@ -4113,7 +4113,8 @@ Valid choices are 'yes' and 'no'.]) ;;\n   esac],\n  [gcc_GAS_CHECK_FEATURE([gnu_unique_object], gcc_cv_as_gnu_unique_object,\n    [elf,2,19,52],,\n-   [.type foo, @gnu_unique_object],,\n+   [.type foo, '$target_type_format_char'gnu_unique_object],,\n+# We need to unquote above to to use the definition from config.gcc.\n # Also check for ld.so support, i.e. glibc 2.11 or higher.\n    [[if test x$host = x$build -a x$host = x$target &&\n        ldd --version 2>/dev/null &&"}]}