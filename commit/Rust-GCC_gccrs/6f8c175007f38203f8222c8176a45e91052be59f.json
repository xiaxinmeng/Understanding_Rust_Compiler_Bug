{"sha": "6f8c175007f38203f8222c8176a45e91052be59f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4YzE3NTAwN2YzODIwM2Y4MjIyYzgxNzZhNDVlOTEwNTJiZTU5Zg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2007-10-14T22:22:25Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2007-10-14T22:22:25Z"}, "message": "re PR target/33700 (FAIL: 17_intro/headers/all_pedantic_errors.cc (test for excess errors))\n\n\tPR target/33700\n\t* inclhack.def (hpux11_pthread_const): New.\n\t* fixincl.x: Regenerate.\n\t* tests/base/sys/pthread.h: Update.\n\nFrom-SVN: r129304", "tree": {"sha": "5801b6f2b209bade8000d6fd38bdbfbfaf4407ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5801b6f2b209bade8000d6fd38bdbfbfaf4407ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f8c175007f38203f8222c8176a45e91052be59f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8c175007f38203f8222c8176a45e91052be59f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f8c175007f38203f8222c8176a45e91052be59f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8c175007f38203f8222c8176a45e91052be59f/comments", "author": null, "committer": null, "parents": [{"sha": "4b7ed13a8fb6fb44856a01873a5f188f5f48e95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7ed13a8fb6fb44856a01873a5f188f5f48e95e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b7ed13a8fb6fb44856a01873a5f188f5f48e95e"}], "stats": {"total": 90, "additions": 80, "deletions": 10}, "files": [{"sha": "1df6596f392944ab4bdbad9b7d73298934207812", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=6f8c175007f38203f8222c8176a45e91052be59f", "patch": "@@ -1,3 +1,10 @@\n+2007-10-14  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/33700\n+\t* inclhack.def (hpux11_pthread_const): New.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/sys/pthread.h: Update.\n+\n 2007-10-12  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* configure.ac: x86_64 mingw target uses twoprocess."}, {"sha": "a0daa2a6a4fcc7f67456c377860ea6db410eb10f", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 54, "deletions": 10, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=6f8c175007f38203f8222c8176a45e91052be59f", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday October  8, 2007 at 12:36:37 PM PDT\n+ * It has been AutoGen-ed  Sunday October 14, 2007 at 06:17:05 PM EDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Oct  8 12:36:37 PDT 2007\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Oct 14 18:17:05 EDT 2007\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 209 fixup descriptions.\n+ * This file contains 210 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -26,18 +26,19 @@\n  *  \n  *  You may redistribute it and/or modify it under the terms of the\n  *  GNU General Public License, as published by the Free Software\n- *  Foundation; either version 2, or (at your option) any later version.\n+ *  Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n  *  \n  *  inclhack is distributed in the hope that it will be useful,\n  *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n  *  See the GNU General Public License for more details.\n  *  \n  *  You should have received a copy of the GNU General Public License\n- *  along with inclhack.  See the file \"COPYING\".  If not,\n- *  write to:  The Free Software Foundation, Inc.,\n- *             59 Temple Place - Suite 330,\n- *             Boston,  MA  02111-1307, USA.\n+ *  along with inclhack.  If not, write to:\n+ *  \tThe Free Software Foundation, Inc.,\n+ *  \t51 Franklin Street, Fifth Floor\n+ *  \tBoston, MA  02110-1301, USA.\n  */\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3417,6 +3418,43 @@ extern \\\"C\\\" {\\n\\\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux11_Pthread_Const fix\n+ */\n+tSCC zHpux11_Pthread_ConstName[] =\n+     \"hpux11_pthread_const\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux11_Pthread_ConstList[] =\n+  \"sys/pthread.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzHpux11_Pthread_ConstMachs[] = {\n+        \"*-hp-hpux11.[0-3]*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux11_Pthread_ConstSelect0[] =\n+       \"^#define[ \\t]*__POINTER_SET[ \\t]*\\\\(\\\\(void \\\\*\\\\) 1LL\\\\)\";\n+\n+#define    HPUX11_PTHREAD_CONST_TEST_CT  1\n+static tTestDesc aHpux11_Pthread_ConstTests[] = {\n+  { TT_EGREP,    zHpux11_Pthread_ConstSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux11_Pthread_Const\n+ */\n+static const char* apzHpux11_Pthread_ConstPatch[] = {\n+    \"format\",\n+    \"#define __POINTER_SET\\t\\t((void *) 1L)\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux_Pthread_Initializers fix\n@@ -8501,9 +8539,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          252\n+#define REGEX_COUNT          253\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            209\n+#define FIX_COUNT            210\n \n /*\n  *  Enumerate the fixes\n@@ -8589,6 +8627,7 @@ typedef enum {\n     HPUX11_EXTERN_SENDFILE_FIXIDX,\n     HPUX11_EXTERN_SENDPATH_FIXIDX,\n     HPUX_EXTERN_ERRNO_FIXIDX,\n+    HPUX11_PTHREAD_CONST_FIXIDX,\n     HPUX_PTHREAD_INITIALIZERS_FIXIDX,\n     HUGE_VAL_HEX_FIXIDX,\n     HUGE_VALF_HEX_FIXIDX,\n@@ -9121,6 +9160,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX_EXTERN_ERRNO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux_Extern_ErrnoTests,   apzHpux_Extern_ErrnoPatch, 0 },\n \n+  {  zHpux11_Pthread_ConstName,    zHpux11_Pthread_ConstList,\n+     apzHpux11_Pthread_ConstMachs,\n+     HPUX11_PTHREAD_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux11_Pthread_ConstTests,   apzHpux11_Pthread_ConstPatch, 0 },\n+\n   {  zHpux_Pthread_InitializersName,    zHpux_Pthread_InitializersList,\n      apzHpux_Pthread_InitializersMachs,\n      HPUX_PTHREAD_INITIALIZERS_TEST_CT, FD_MACH_ONLY,"}, {"sha": "75f83478f21980ccbe2f607e4ca07ca580e52d00", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=6f8c175007f38203f8222c8176a45e91052be59f", "patch": "@@ -1951,6 +1951,20 @@ fix = {\n     test_text = \"   extern int errno;\\n\";\n };\n \n+/*\n+ *  Fix C99 constant in __POINTER_SET define.\n+ */\n+fix = {\n+    hackname  = hpux11_pthread_const;\n+    mach      = \"*-hp-hpux11.[0-3]*\";\n+    files     = sys/pthread.h;\n+    select    = \"^#define[ \\t]*__POINTER_SET[ \\t]*\\\\(\\\\(void \\\\*\\\\) 1LL\\\\)\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"#define __POINTER_SET\\t\\t((void *) 1L)\";\n+    test_text = \"#define __POINTER_SET\\t\\t((void *) 1LL)\";\n+};\n+\n /*\n  *  Add missing braces to pthread initializer defines.\n  */"}, {"sha": "8b893cfe55f377140257418a4ce4c09204fd2120", "filename": "fixincludes/tests/base/sys/pthread.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2Ftests%2Fbase%2Fsys%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8c175007f38203f8222c8176a45e91052be59f/fixincludes%2Ftests%2Fbase%2Fsys%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fpthread.h?ref=6f8c175007f38203f8222c8176a45e91052be59f", "patch": "@@ -9,6 +9,11 @@\n \n \n \n+#if defined( HPUX11_PTHREAD_CONST_CHECK )\n+#define __POINTER_SET\t\t((void *) 1L)\n+#endif  /* HPUX11_PTHREAD_CONST_CHECK */\n+\n+\n #if defined( HPUX_PTHREAD_INITIALIZERS_CHECK )\n #define PTHREAD_MUTEX_INITIALIZER  {\t\t\t\t\t\\\n \t{ __PTHREAD_MUTEX_VALID, 0 },\t\t\t\t\t\\"}]}