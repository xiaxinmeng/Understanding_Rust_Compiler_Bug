{"sha": "35aebd56353ee7aec7a17155689dd473ee48ded4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVhZWJkNTYzNTNlZTdhZWM3YTE3MTU1Njg5ZGQ0NzNlZTQ4ZGVkNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-01-31T19:11:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-01-31T19:11:00Z"}, "message": "function.h (regno_reg_rtx): Adjust comment.\n\ngcc/\n\t* function.h (regno_reg_rtx): Adjust comment.\n\t* reginfo.c (init_reg_modes_target): Only use the previous mode\n\tif it fits within one register.  Remove MIPS comment.\n\nFrom-SVN: r183773", "tree": {"sha": "708bf63d2bd26659c34ffa475438467490e03be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/708bf63d2bd26659c34ffa475438467490e03be7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35aebd56353ee7aec7a17155689dd473ee48ded4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35aebd56353ee7aec7a17155689dd473ee48ded4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35aebd56353ee7aec7a17155689dd473ee48ded4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35aebd56353ee7aec7a17155689dd473ee48ded4/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "218e1228c941cf0e1669610eaf33fdf5c010c3c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e1228c941cf0e1669610eaf33fdf5c010c3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218e1228c941cf0e1669610eaf33fdf5c010c3c0"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "ef9fb3db228deaffc2876b94a7396993765c2833", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35aebd56353ee7aec7a17155689dd473ee48ded4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35aebd56353ee7aec7a17155689dd473ee48ded4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35aebd56353ee7aec7a17155689dd473ee48ded4", "patch": "@@ -1,3 +1,9 @@\n+2012-01-31  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* function.h (regno_reg_rtx): Adjust comment.\n+\t* reginfo.c (init_reg_modes_target): Only use the previous mode\n+\tif it fits within one register.  Remove MIPS comment.\n+\n 2012-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/52058"}, {"sha": "5aaba74dc0baec5c38505f6140d88be27afb80a4", "filename": "gcc/function.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35aebd56353ee7aec7a17155689dd473ee48ded4/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35aebd56353ee7aec7a17155689dd473ee48ded4/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=35aebd56353ee7aec7a17155689dd473ee48ded4", "patch": "@@ -87,10 +87,13 @@ struct GTY(()) emit_status {\n };\n \n \n-/* Indexed by pseudo register number, gives the rtx for that pseudo.\n-   Allocated in parallel with regno_pointer_align.\n-   FIXME: We could put it into emit_status struct, but gengtype is not able to deal\n-   with length attribute nested in top level structures.  */\n+/* Indexed by register number, gives an rtx for that register (and only\n+   that register).  For pseudo registers, it is the unique rtx for\n+   that pseudo.  For hard registers, it is an rtx of the mode specified\n+   by reg_raw_mode.\n+\n+   FIXME: We could put it into emit_status struct, but gengtype is not\n+   able to deal with length attribute nested in top level structures.  */\n \n extern GTY ((length (\"crtl->emit.x_reg_rtx_no\"))) rtx * regno_reg_rtx;\n "}, {"sha": "635312655bcd0d95da19cfd8d86044518f44b09f", "filename": "gcc/reginfo.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35aebd56353ee7aec7a17155689dd473ee48ded4/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35aebd56353ee7aec7a17155689dd473ee48ded4/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=35aebd56353ee7aec7a17155689dd473ee48ded4", "patch": "@@ -615,13 +615,15 @@ init_reg_modes_target (void)\n     {\n       reg_raw_mode[i] = choose_hard_reg_mode (i, 1, false);\n \n-      /* If we couldn't find a valid mode, just use the previous mode.\n-         ??? One situation in which we need to do this is on the mips where\n-\t HARD_REGNO_NREGS (fpreg, [SD]Fmode) returns 2.  Ideally we'd like\n-\t to use DF mode for the even registers and VOIDmode for the odd\n-\t (for the cpu models where the odd ones are inaccessible).  */\n+      /* If we couldn't find a valid mode, just use the previous mode\n+\t if it is suitable, otherwise fall back on word_mode.  */\n       if (reg_raw_mode[i] == VOIDmode)\n-\treg_raw_mode[i] = i == 0 ? word_mode : reg_raw_mode[i-1];\n+    \t{\n+\t  if (i > 0 && hard_regno_nregs[i][reg_raw_mode[i - 1]] == 1)\n+\t    reg_raw_mode[i] = reg_raw_mode[i - 1];\n+\t  else\n+\t    reg_raw_mode[i] = word_mode;\n+\t}\n     }\n }\n "}]}