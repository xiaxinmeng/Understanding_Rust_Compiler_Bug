{"sha": "d42c10563e23d846b61c9c4a4abe75da70f7838d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQyYzEwNTYzZTIzZDg0NmI2MWM5YzRhNGFiZTc1ZGE3MGY3ODM4ZA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-05-18T15:30:34Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-05-21T18:09:16Z"}, "message": "Add '__OPTIMIZE__' DejaGnu selector\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target___OPTIMIZE__):\n\tNew proc.\n\t* gcc.c-torture/compile/ssa-unused-1.c: New file.\n\tgcc/\n\t* doc/sourcebuild.texi (Other attributes): Document '__OPTIMIZE__'\n\tDejaGnu selector.", "tree": {"sha": "b1f88a2b983355b32bd25eca917f1ae10f2b56ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1f88a2b983355b32bd25eca917f1ae10f2b56ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d42c10563e23d846b61c9c4a4abe75da70f7838d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42c10563e23d846b61c9c4a4abe75da70f7838d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42c10563e23d846b61c9c4a4abe75da70f7838d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42c10563e23d846b61c9c4a4abe75da70f7838d/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a0fe1f6c4ad0e50bf4684e723ae2ba17d94c9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a0fe1f6c4ad0e50bf4684e723ae2ba17d94c9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a0fe1f6c4ad0e50bf4684e723ae2ba17d94c9e4"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "cf3098749c040fedf7bafb3b3c8feaa15b96ee06", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42c10563e23d846b61c9c4a4abe75da70f7838d/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42c10563e23d846b61c9c4a4abe75da70f7838d/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=d42c10563e23d846b61c9c4a4abe75da70f7838d", "patch": "@@ -2755,6 +2755,10 @@ constant.\n \n @item lgccjit\n Target supports -lgccjit, i.e. libgccjit.so can be linked into jit tests.\n+\n+@item __OPTIMIZE__\n+Optimizations are enabled (@code{__OPTIMIZE__}) per the current\n+compiler flags.\n @end table\n \n @subsubsection Local to tests in @code{gcc.target/i386}"}, {"sha": "e8fb93c74c235cb7519b0b1ac9a69026d9cf0f64", "filename": "gcc/testsuite/gcc.c-torture/compile/ssa-unused-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42c10563e23d846b61c9c4a4abe75da70f7838d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fssa-unused-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42c10563e23d846b61c9c4a4abe75da70f7838d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fssa-unused-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fssa-unused-1.c?ref=d42c10563e23d846b61c9c4a4abe75da70f7838d", "patch": "@@ -0,0 +1,15 @@\n+/* This is just to exercise the '__OPTIMIZE__' DejaGnu selector.  */\n+\n+/* { dg-do \"assemble\" } */\n+/* { dg-additional-options \"-fdump-tree-ssa\" } */\n+\n+void f()\n+{\n+  int unused = 3;\n+  (void) &unused;\n+}\n+\n+/* { dg-final { scan-tree-dump-not {No longer having address taken: unused} ssa { target { ! __OPTIMIZE__ } } } }\n+   { dg-final { scan-tree-dump-times {No longer having address taken: unused} 1 ssa { target __OPTIMIZE__ } } } */\n+/* { dg-final { scan-tree-dump-not {Now a gimple register: unused} ssa { target { ! __OPTIMIZE__ } } } }\n+   { dg-final { scan-tree-dump-times {Now a gimple register: unused} 1 ssa { target __OPTIMIZE__ } } } */"}, {"sha": "849f1bbeda5e3370d4e12d262bcb69170ffc07eb", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d42c10563e23d846b61c9c4a4abe75da70f7838d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d42c10563e23d846b61c9c4a4abe75da70f7838d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=d42c10563e23d846b61c9c4a4abe75da70f7838d", "patch": "@@ -11103,3 +11103,13 @@ proc check_effective_target_lra { } {\n     return 1\n }\n \n+# Test whether optimizations are enabled ('__OPTIMIZE__') per the\n+# 'current_compiler_flags' (thus don't cache).\n+\n+proc check_effective_target___OPTIMIZE__ {} {\n+    return [check_no_compiler_messages_nocache __OPTIMIZE__ assembly {\n+\t#ifndef __OPTIMIZE__\n+\t# error nein\n+\t#endif\n+    } [current_compiler_flags]]\n+}"}]}