{"sha": "f37866e818ab839e0db68be23e5a339e5e7c19dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM3ODY2ZTgxOGFiODM5ZTBkYjY4YmUyM2U1YTMzOWU1ZTdjMTlkYw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2018-07-31T09:24:41Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2018-07-31T09:24:41Z"}, "message": "Add support for -nolibc\n\n2018-06-07  Olivier Hainque  <hainque@adacore.com>\n\n\t* common.opt (nolibc): New option.\n\t* doc/invoke.texi (Link Options): Document it.\n\t* gcc.c (LINK_GCC_C_SEQUENCE_SPEC): Honor nolibc.\n\t* config/alpha/linux.h: Likewise.\n\t* config/arc/elf.h: Likewise.\n\t* config/arm/uclinux-elf.h: Likewise.\n\t* config/arm/unknown-elf.h: Likewise.\n\t* config/avr/avrlibc.h: Likewise.\n\t* config/bfin/bfin.h: Likewise.\n\t* config/bfin/linux.h: Likewise.\n\t* config/bfin/uclinux.h: Likewise.\n\t* config/darwin.h: Likewise.\n\t* config/darwin10.h: Likewise.\n\t* config/darwin12.h: Likewise.\n\t* config/gnu-user.h: Likewise.\n\t* config/lm32/uclinux-elf.h: Likewise.\n\t* config/pa/pa-hpux11.h: Likewise.\n\t* config/pa/pa64-hpux.h: Likewise.\n\t* config/sparc/sparc.h: Likewise.\n\nFrom-SVN: r263083", "tree": {"sha": "d0e676879f65f348b838125b8e4d9cf763c5e61e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0e676879f65f348b838125b8e4d9cf763c5e61e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f37866e818ab839e0db68be23e5a339e5e7c19dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f37866e818ab839e0db68be23e5a339e5e7c19dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f37866e818ab839e0db68be23e5a339e5e7c19dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f37866e818ab839e0db68be23e5a339e5e7c19dc/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d4a51cf5079c11a44126bf7d5cf63fd9b202fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4a51cf5079c11a44126bf7d5cf63fd9b202fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4a51cf5079c11a44126bf7d5cf63fd9b202fbd"}], "stats": {"total": 80, "additions": 59, "deletions": 21}, "files": [{"sha": "cb0fb088548fa628862ab000d528f06a177a83b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -1,3 +1,25 @@\n+2018-07-31  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* common.opt (nolibc): New option.\n+\t* doc/invoke.texi (Link Options): Document it.\n+\t* gcc.c (LINK_GCC_C_SEQUENCE_SPEC): Honor nolibc.\n+\t* config/alpha/linux.h: Likewise.\n+\t* config/arc/elf.h: Likewise.\n+\t* config/arm/uclinux-elf.h: Likewise.\n+\t* config/arm/unknown-elf.h: Likewise.\n+\t* config/avr/avrlibc.h: Likewise.\n+\t* config/bfin/bfin.h: Likewise.\n+\t* config/bfin/linux.h: Likewise.\n+\t* config/bfin/uclinux.h: Likewise.\n+\t* config/darwin.h: Likewise.\n+\t* config/darwin10.h: Likewise.\n+\t* config/darwin12.h: Likewise.\n+\t* config/gnu-user.h: Likewise.\n+\t* config/lm32/uclinux-elf.h: Likewise.\n+\t* config/pa/pa-hpux11.h: Likewise.\n+\t* config/pa/pa64-hpux.h: Likewise.\n+\t* config/sparc/sparc.h: Likewise.\n+\n 2018-07-31  Olivier Hainque  <hainque@adacore.com>\n \n \t* gcc.c (getenv_spec_function): Prepend '/' to value for allowed"}, {"sha": "5bb645291cfc9cc0e4cf4395593b3d5890eb18eb", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -3040,6 +3040,9 @@ Driver\n nostartfiles\n Driver\n \n+nolibc\n+Driver\n+\n nostdlib\n Driver\n "}, {"sha": "6d12d90351b2e358062c9dcae6e4ec1ab9c0498a", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -105,7 +105,7 @@ along with GCC; see the file COPYING3.  If not see\n    %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n \n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static|static-pie:--start-group} %G %L \\\n+  \"%{static|static-pie:--start-group} %G %{!nolibc:%L} \\\n    %{static|static-pie:--end-group}%{!static:%{!static-pie:%G}}\"\n \n /* Use --as-needed -lgcc_s for eh support.  */"}, {"sha": "3472fd2e4188f2b81b642f39157c4218a5b0b731", "filename": "gcc/config/arc/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Farc%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Farc%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Felf.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -77,4 +77,4 @@ along with GCC; see the file COPYING3.  If not see\n /* If no specs file is enforced, default to nosys libarary.  */\n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC\t\t\t\t\\\n-  \"--start-group %G %{!specs=*:-lc -lnosys} --end-group\"\n+  \"--start-group %G %{!specs=*:%{!nolibc:-lc -lnosys}} --end-group\""}, {"sha": "573398321331dccaf9ea8e92aaa6bc3dd0a69571", "filename": "gcc/config/arm/uclinux-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Farm%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Farm%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fuclinux-elf.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -67,8 +67,8 @@\n \n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static|static-pie:--start-group} %G %L \\\n-   %{static|static-pie:--end-group}%{!static:%{!static-pie:%G %L}}\"\n+  \"%{static|static-pie:--start-group} %G %{!nolibc:%L} \\\n+   %{static|static-pie:--end-group}%{!static:%{!static-pie:%G %{!nolibc:%L}}}\"\n \n /* Use --as-needed -lgcc_s for eh support.  */\n #ifdef HAVE_LD_AS_NEEDED"}, {"sha": "6eeb0eb2d1f762ab4df29a15a5b0009e86501bba", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -93,4 +93,4 @@\n    udivmoddi4, which will depend on the exception unwind routines,\n    which will depend on abort, which is defined in libc.  */ \n #undef LINK_GCC_C_SEQUENCE_SPEC\n-#define LINK_GCC_C_SEQUENCE_SPEC \"--start-group %G %L --end-group\"\n+#define LINK_GCC_C_SEQUENCE_SPEC \"--start-group %G %{!nolibc:%L} --end-group\""}, {"sha": "f4a41a1b5560d975c0b02ba0e6dee0a78314f306", "filename": "gcc/config/avr/avrlibc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Favr%2Favrlibc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Favr%2Favrlibc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favrlibc.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -37,4 +37,4 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef  LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"--start-group %G %L --end-group\"\n+  \"--start-group %G %{!nolibc:%L} --end-group\""}, {"sha": "a503d579f1a43a18ca4a1483706b630563d1c85d", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -204,7 +204,7 @@\n #endif\n \n #define LINK_GCC_C_SEQUENCE_SPEC \"\\\n-  %{mfast-fp:-lbffastfp} %G %L %{mfast-fp:-lbffastfp} %G \\\n+  %{mfast-fp:-lbffastfp} %G %{!nolibc:%L} %{mfast-fp:-lbffastfp} %G \\\n \"\n \n #undef  ASM_SPEC"}, {"sha": "b1592ee77540991c4de6db3dc4e25a960005d51a", "filename": "gcc/config/bfin/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fbfin%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fbfin%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Flinux.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -35,7 +35,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static|static-pie:--start-group} %{mfast-fp:-lbffastfp} %G %L \\\n+  \"%{static|static-pie:--start-group} %{mfast-fp:-lbffastfp} %G %{!nolibc:%L} \\\n    %{static|static-pie:--end-group} \\\n    %{!static:%{!static-pie:%{mfast-fp:-lbffastfp} %G}}\"\n "}, {"sha": "beb6d457061f96e58cd09e7d351ab6c25f627ccf", "filename": "gcc/config/bfin/uclinux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fuclinux.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -29,7 +29,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \"\\\n-  %{mfast-fp:-lbffastfp} %G %L %{mfast-fp:-lbffastfp} %G \\\n+  %{mfast-fp:-lbffastfp} %G %{!nolibc:%L} %{mfast-fp:-lbffastfp} %G \\\n \"\n \n #undef TARGET_SUPPORTS_SYNC_CALLS"}, {"sha": "980ad9b4057e68e5d26f3ba96f1dc3fe16caca87", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -210,7 +210,7 @@ extern GTY(()) int darwin_ms_struct;\n /* We only want one instance of %G, since libSystem (Darwin's -lc) does not depend\n    on libgcc.  */\n #undef  LINK_GCC_C_SEQUENCE_SPEC\n-#define LINK_GCC_C_SEQUENCE_SPEC \"%G %L\"\n+#define LINK_GCC_C_SEQUENCE_SPEC \"%G %{!nolibc:%L}\"\n \n /* ld64 supports a sysroot, it just has a different name and there's no easy\n    way to check for it at config time.  */"}, {"sha": "d61eb40b8ff2f55e4dd6a65aa8d91af6bc30f450", "filename": "gcc/config/darwin10.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fdarwin10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fdarwin10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin10.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -28,7 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n    %{!static:%{!static-libgcc: \\\n       %:version-compare(>= 10.6 mmacosx-version-min= -lSystem) } } \\\n    %{fno-pic|fno-PIC|fno-pie|fno-PIE|fapple-kext|mkernel|static|mdynamic-no-pic: \\\n-      %:version-compare(>= 10.7 mmacosx-version-min= -no_pie) } %G %L\"\n+      %:version-compare(>= 10.7 mmacosx-version-min= -no_pie) } %G %{!nolibc:%L}\"\n \n #undef DEF_MIN_OSX_VERSION\n #define DEF_MIN_OSX_VERSION \"10.6\""}, {"sha": "e1e1eb085a217d25ce54b8593b6b5a8c14caa8e6", "filename": "gcc/config/darwin12.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fdarwin12.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fdarwin12.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin12.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n    %{!static:%{!static-libgcc: \\\n       %:version-compare(>= 10.6 mmacosx-version-min= -lSystem) } } \\\n    %{fno-pic|fno-PIC|fno-pie|fno-PIE|fapple-kext|mkernel|static|mdynamic-no-pic: \\\n-      %:version-compare(>= 10.7 mmacosx-version-min= -no_pie) } %G %L\"\n+      %:version-compare(>= 10.7 mmacosx-version-min= -no_pie) } %G %{!nolibc:%L}\"\n \n #undef DEF_MIN_OSX_VERSION\n #define DEF_MIN_OSX_VERSION \"10.8\""}, {"sha": "5b48fb215149957b3e3eb232271964f4552b13c2", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -135,7 +135,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static|static-pie:--start-group} %G %L \\\n+  \"%{static|static-pie:--start-group} %G %{!nolibc:%L} \\\n    %{static|static-pie:--end-group}%{!static:%{!static-pie:%G}}\"\n \n /* Use --as-needed -lgcc_s for eh support.  */"}, {"sha": "ac51d97050a7b5a5d99c3444356a95e16f0a14fa", "filename": "gcc/config/lm32/uclinux-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -68,7 +68,7 @@\n #define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n \n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static|static-pie:--start-group} %G %L \\\n+  \"%{static|static-pie:--start-group} %G %{!nolibc:%L} \\\n    %{static|static-pie:--end-group}%{!static:%{!static-pie:%G}}\"\n \n #undef  CC1_SPEC"}, {"sha": "0e960c3c15aab1646776693df56ea05d59a3a158", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -157,7 +157,7 @@ along with GCC; see the file COPYING3.  If not see\n /* The libgcc_stub.a library needs to come last.  */\n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%G %L %G %{!nostdlib:%{!nodefaultlibs:%{!shared:-lgcc_stub}}}\"\n+  \"%G %{!nolibc:%L} %G %{!nostdlib:%{!nodefaultlibs:%{!shared:-lgcc_stub}}}\"\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\"}, {"sha": "2c24238edb4e94aa7266b44e3f9bcb516e89e9ac", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -106,7 +106,7 @@ along with GCC; see the file COPYING3.  If not see\n /* The libgcc_stub.a and milli.a libraries need to come last.  */\n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \"\\\n-  %G %L %G %{!nostdlib:%{!nodefaultlibs:%{!shared:-lgcc_stub}\\\n+  %G %{!nolibc:%L} %G %{!nostdlib:%{!nodefaultlibs:%{!shared:-lgcc_stub}\\\n   milli.a%s}}\"\n \n /* Under hpux11, the normal location of the `ld' and `as' programs is the"}, {"sha": "87358c7e90e1cb731962cd5db50bacdf37a572fc", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -420,7 +420,7 @@ extern enum cmodel sparc_cmodel;\n \n /* Because libgcc can generate references back to libc (via .umul etc.) we have\n    to list libc again after the second libgcc.  */\n-#define LINK_GCC_C_SEQUENCE_SPEC \"%G %L %G %L\"\n+#define LINK_GCC_C_SEQUENCE_SPEC \"%G %{!nolibc:%L} %G %{!nolibc:%L}\"\n \n \f\n #define PTRDIFF_TYPE (TARGET_ARCH64 ? \"long int\" : \"int\")"}, {"sha": "27097d776066a71265897628b0b71dc58497e3ba", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -517,7 +517,8 @@ Objective-C and Objective-C++ Dialects}.\n @item Linker Options\n @xref{Link Options,,Options for Linking}.\n @gccoptlist{@var{object-file-name}  -fuse-ld=@var{linker}  -l@var{library} @gol\n--nostartfiles  -nodefaultlibs  -nostdlib  -pie  -pthread  -rdynamic @gol\n+-nostartfiles  -nodefaultlibs  -nolibc  -nostdlib @gol\n+-pie  -pthread  -rdynamic @gol\n -s  -static -static-pie -static-libgcc  -static-libstdc++ @gol\n -static-libasan  -static-libtsan  -static-liblsan  -static-libubsan @gol\n -shared  -shared-libgcc  -symbolic @gol\n@@ -12350,8 +12351,8 @@ link an Objective-C or Objective-C++ program.\n @item -nostartfiles\n @opindex nostartfiles\n Do not use the standard system startup files when linking.\n-The standard system libraries are used normally, unless @option{-nostdlib}\n-or @option{-nodefaultlibs} is used.\n+The standard system libraries are used normally, unless @option{-nostdlib},\n+@option{-nolibc}, or @option{-nodefaultlibs} is used.\n \n @item -nodefaultlibs\n @opindex nodefaultlibs\n@@ -12368,6 +12369,18 @@ These entries are usually resolved by entries in\n libc.  These entry points should be supplied through some other\n mechanism when this option is specified.\n \n+@item -nolibc\n+@opindex nolibc\n+Do not use the C library or system libraries tightly coupled with it when\n+linking.  Still link with the startup files, @file{libgcc} or toolchain\n+provided language support libraries such as @file{libgnat}, @file{libgfortran}\n+or @file{libstdc++} unless options preventing their inclusion are used as\n+well.  This typically removes @option{-lc} from the link command line, as well\n+as system libraries that normally go with it and become meaningless when\n+absence of a C library is assumed, for example @option{-lpthread} or\n+@option{-lm} in some configurations.  This is intended for bare-board\n+targets when there is indeed no C library available.\n+\n @item -nostdlib\n @opindex nostdlib\n Do not use the standard system startup files or libraries when linking."}, {"sha": "da91112be5e1d8959c85383f78bdd275a9718849", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37866e818ab839e0db68be23e5a339e5e7c19dc/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f37866e818ab839e0db68be23e5a339e5e7c19dc", "patch": "@@ -872,7 +872,7 @@ proper position among the other output files.  */\n    -lgcc and -lc order specially, yet not require them to override all\n    of LINK_COMMAND_SPEC.  */\n #ifndef LINK_GCC_C_SEQUENCE_SPEC\n-#define LINK_GCC_C_SEQUENCE_SPEC \"%G %L %G\"\n+#define LINK_GCC_C_SEQUENCE_SPEC \"%G %{!nolibc:%L %G}\"\n #endif\n \n #ifndef LINK_SSP_SPEC"}]}