{"sha": "17b95f0ef07b1ae6d380fa1817922b2079e84ac7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdiOTVmMGVmMDdiMWFlNmQzODBmYTE4MTc5MjJiMjA3OWU4NGFjNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2019-11-20T14:10:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-20T14:10:41Z"}, "message": "lto-streamer-out.c (DFS::sccstack): Turn into auto-vec.\n\n\t* lto-streamer-out.c (DFS::sccstack): Turn into auto-vec.\n\tPreallocate for 32 entries.\n\t(DFS::worklist): Likewise.\n\t(DFS::DFS): Do not initialize sccstack and worklist.\n\t(DFS::~DFS): Do not release sccstack.\n\nFrom-SVN: r278498", "tree": {"sha": "b032747e40691e526c69b85646e4ae75c87efc57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b032747e40691e526c69b85646e4ae75c87efc57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17b95f0ef07b1ae6d380fa1817922b2079e84ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17b95f0ef07b1ae6d380fa1817922b2079e84ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17b95f0ef07b1ae6d380fa1817922b2079e84ac7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17b95f0ef07b1ae6d380fa1817922b2079e84ac7/comments", "author": null, "committer": null, "parents": [{"sha": "bcb4b4b4baad38d0a9ac353822506fa1d7fb6b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb4b4b4baad38d0a9ac353822506fa1d7fb6b25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb4b4b4baad38d0a9ac353822506fa1d7fb6b25"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "c8f1928eb2d55d390de467c0c7b2a93476b3bc03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b95f0ef07b1ae6d380fa1817922b2079e84ac7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b95f0ef07b1ae6d380fa1817922b2079e84ac7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17b95f0ef07b1ae6d380fa1817922b2079e84ac7", "patch": "@@ -1,3 +1,11 @@\n+2019-11-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-streamer-out.c (DFS::sccstack): Turn into auto-vec.\n+\tPreallocate for 32 entries.\n+\t(DFS::worklist): Likewise.\n+\t(DFS::DFS): Do not initialize sccstack and worklist.\n+\t(DFS::~DFS): Do not release sccstack.\n+\n 2019-11-20  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/92573"}, {"sha": "b32f014cf706127a619ac9d6feed6da874258ef6", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b95f0ef07b1ae6d380fa1817922b2079e84ac7/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b95f0ef07b1ae6d380fa1817922b2079e84ac7/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=17b95f0ef07b1ae6d380fa1817922b2079e84ac7", "patch": "@@ -514,7 +514,7 @@ class DFS\n     tree t;\n     hashval_t hash;\n   };\n-  vec<scc_entry> sccstack;\n+  auto_vec<scc_entry,32> sccstack;\n \n private:\n   struct sccs\n@@ -544,7 +544,7 @@ class DFS\n \t    bool ref_p, bool this_ref_p);\n \n   hash_map<tree, sccs *> sccstate;\n-  vec<worklist> worklist_vec;\n+  auto_vec<worklist, 32> worklist_vec;\n   struct obstack sccstate_obstack;\n };\n \n@@ -558,9 +558,7 @@ DFS::DFS (struct output_block *ob, tree expr, bool ref_p, bool this_ref_p,\n \t  bool single_p)\n {\n   unsigned int next_dfs_num = 1;\n-  sccstack.create (0);\n   gcc_obstack_init (&sccstate_obstack);\n-  worklist_vec = vNULL;\n   DFS_write_tree (ob, NULL, expr, ref_p, this_ref_p);\n   while (!worklist_vec.is_empty ())\n     {\n@@ -735,12 +733,10 @@ DFS::DFS (struct output_block *ob, tree expr, bool ref_p, bool this_ref_p,\n \tfrom_state->low = MIN (cstate->dfsnum, from_state->low);\n       worklist_vec.pop ();\n     }\n-  worklist_vec.release ();\n }\n \n DFS::~DFS ()\n {\n-  sccstack.release ();\n   obstack_free (&sccstate_obstack, NULL);\n }\n "}]}