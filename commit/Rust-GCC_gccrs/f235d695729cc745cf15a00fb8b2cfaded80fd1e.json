{"sha": "f235d695729cc745cf15a00fb8b2cfaded80fd1e", "node_id": "C_kwDOANBUbNoAKGYyMzVkNjk1NzI5Y2M3NDVjZjE1YTAwZmI4YjJjZmFkZWQ4MGZkMWU", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-24T22:41:45Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-24T22:41:45Z"}, "message": "Introduce new module to create search paths of dynamic strings.\n\nIntroduce a simple DynamicStringPath module to allow the front end\nto create and modify a search path from dynamic strings.\n\ngcc/m2/ChangeLog:\n\n\t* Make-lang.in (GM2-COMP-BOOT-DEFS): Add\n\tDynamicStringPath.def.\n\t(GM2-COMP-BOOT-MODS): Add DynamicStringPath.mod.\n\t(GM2-COMP-DEFS): Add DynamicStringPath.def.\n\t(GM2-COMP-MODS): Add DynamicStringPath.mod.\n\t($(objdir)/m2/gm2-libs-min/SYSTEM.def): Split path into\n\tmultiple -I components.\n\t($(objdir)/m2/gm2-libs/SYSTEM.def): Ditto.\n\t($(objdir)/m2/gm2-libs-coroutines/SYSTEM.def): Ditto.\n\t* gm2-compiler/M2Options.mod: Import DynamicStringPath.\n\t(SetSearchPath): Reimplement using DynamicStringPath\n\tprocedures.\n\t* gm2-compiler/M2Search.def (InitSearchPath): Remove.\n\t(PrependSearchPath): Remove.\n\t* gm2-compiler/M2Search.mod (SFIO): Remove import.\n\t(DynamicStringPath): Add import.\n\t(Directory): Remove.\n\t(UserPath): Remove.\n\t(InitialPath): Remove.\n\t(InitSearchPath): Remove.\n\t(PrependSearchPath): Remove.\n\t(FindSourceFile): Re-implement.\n\t(FindSourceDefFile): Re-implement.\n\t(FindSourceModFile): Re-implement.\n\t* gm2-gcc/init.cc (_M2_DynamicStringPath_init):\n\tNew prototype.\n\t(init_FrontEndInit): Call _M2_DynamicStringPath_init.\n\t* tools-src/makeSystem: Allow multiple -I paths.\n\t* gm2-compiler/DynamicStringPath.def: New file.\n\t* gm2-compiler/DynamicStringPath.mod: New file.\n\t* gm2-gcc/m2options.h (M2Options_SetMakeIncludePath): Add\n\tprototype.\n\t    Co-Authored by: Iain Sandoe  <iain@sandoe.co.uk>\n\nlibgm2/ChangeLog:\n\n\t* libm2cor/Makefile.am (SYSTEM.def): Split path into\n\tmultiple -I components.\n\t* libm2cor/Makefile.in: Rebuild.\n\t* libm2min/Makefile.am (SYSTEM.def): Split path into\n\tmultiple -I components.\n\t* libm2min/Makefile.in: Rebuild.\n\t* libm2iso/Makefile.am (SYSTEM.def): Split path into\n\tmultiple -I components.\n\t* libm2iso/Makefile.in: Rebuild.\n\t    Co-Authored by: Iain Sandoe  <iain@sandoe.co.uk>\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "1b01e42b4195c3752567d96a75a52e4e056f1cce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b01e42b4195c3752567d96a75a52e4e056f1cce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f235d695729cc745cf15a00fb8b2cfaded80fd1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f235d695729cc745cf15a00fb8b2cfaded80fd1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f235d695729cc745cf15a00fb8b2cfaded80fd1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f235d695729cc745cf15a00fb8b2cfaded80fd1e/comments", "author": null, "committer": null, "parents": [{"sha": "327d45c57ebd2655a7599df0f01b8b5e2f82eda7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327d45c57ebd2655a7599df0f01b8b5e2f82eda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327d45c57ebd2655a7599df0f01b8b5e2f82eda7"}], "stats": {"total": 588, "additions": 435, "deletions": 153}, "files": [{"sha": "0d3ff23738598d25035e78330a49066b99447fbf", "filename": "gcc/m2/Make-lang.in", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-lang.in?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -690,6 +690,7 @@ GM2-COMP-BOOT-DEFS = \\\n    M2DebugStack.def \\\n    M2Defaults.def \\\n    M2DriverOptions.def \\\n+   DynamicStringPath.def \\\n    M2Emit.def \\\n    M2Error.def \\\n    M2EvalSym.def \\\n@@ -761,6 +762,7 @@ GM2-COMP-BOOT-MODS = \\\n    M2DebugStack.mod \\\n    M2Defaults.mod \\\n    M2DriverOptions.mod \\\n+   DynamicStringPath.mod \\\n    M2Emit.mod \\\n    M2Error.mod \\\n    M2FileName.mod \\\n@@ -965,6 +967,7 @@ GM2-COMP-DEFS = \\\n    M2DebugStack.def \\\n    M2Defaults.def \\\n    M2DriverOptions.def \\\n+   DynamicStringPath.def \\\n    M2Emit.def \\\n    M2Error.def \\\n    M2FileName.def \\\n@@ -1032,6 +1035,7 @@ GM2-COMP-MODS = \\\n    M2DebugStack.mod \\\n    M2Defaults.mod \\\n    M2DriverOptions.mod \\\n+   DynamicStringPath.mod \\\n    M2Emit.mod \\\n    M2Error.mod \\\n    M2FileName.mod \\\n@@ -1522,7 +1526,7 @@ $(objdir)/m2/gm2-libs-min/SYSTEM.def: $(GM2_PROG_DEP)\n \t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fpim \\\n              $(srcdir)/m2/gm2-libs-min/SYSTEM.def \\\n              $(srcdir)/m2/gm2-libs-min/SYSTEM.mod \\\n-             -I$(srcdir)/m2/gm2-libs-min:$(srcdir)/m2/gm2-libs \\\n+             -I$(srcdir)/m2/gm2-libs-min -I$(srcdir)/m2/gm2-libs \\\n              \"$(GM2_FOR_TARGET)\" $@\n \n $(objdir)/m2/gm2-libs/SYSTEM.def: $(GM2_PROG_DEP)\n@@ -1540,15 +1544,15 @@ $(objdir)/m2/gm2-libs-iso/SYSTEM.def: $(GM2_PROG_DEP)\n \t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fiso \\\n              $(srcdir)/m2/gm2-libs-iso/SYSTEM.def \\\n              $(srcdir)/m2/gm2-libs-iso/SYSTEM.mod \\\n-             -I$(srcdir)/m2/gm2-libs-iso:$(srcdir)/m2/gm2-libs \\\n+             -I$(srcdir)/m2/gm2-libs-iso -I$(srcdir)/m2/gm2-libs \\\n              \"$(GM2_FOR_TARGET)\" $@\n \n $(objdir)/m2/gm2-libs-coroutines/SYSTEM.def: $(GM2_PROG_DEP)\n \t-test -d m2/gm2-libs-coroutines || $(mkinstalldirs) m2/gm2-libs-coroutines\n \t$(SHELL) $(srcdir)/m2/tools-src/makeSystem -fpim \\\n              $(srcdir)/m2/gm2-libs-coroutines/SYSTEM.def \\\n              $(srcdir)/m2/gm2-libs-coroutines/SYSTEM.mod \\\n-             -I$(srcdir)/m2/gm2-libs-coroutines:$(srcdir)/m2/gm2-libs-iso:$(srcdir)/m2/gm2-libs \\\n+             -I$(srcdir)/m2/gm2-libs-coroutines -I$(srcdir)/m2/gm2-libs-iso -I$(srcdir)/m2/gm2-libs \\\n              \"$(GM2_FOR_TARGET)\" $@\n \n build-compiler: $(GM2-COMP-MODS:%.mod=m2/gm2-compiler/%.o) \\"}, {"sha": "e9fdff7ee144e8411172b5df37129b383f45a11c", "filename": "gcc/m2/gm2-compiler/DynamicStringPath.def", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FDynamicStringPath.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FDynamicStringPath.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FDynamicStringPath.def?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -0,0 +1,113 @@\n+(* DynamicStringPath.def implements a path for DynamicStrings.\n+\n+Copyright (C) 2001-2023 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+DEFINITION MODULE DynamicStringPath ;  (*!m2iso+gm2*)\n+\n+FROM DynamicStrings IMPORT String ;\n+\n+TYPE\n+   PathList ;\n+\n+\n+(*\n+   GetUserPath - returns the current UserPath.\n+*)\n+\n+PROCEDURE GetUserPath () : PathList ;\n+\n+\n+(*\n+   GetSystemPath - returns the current SystemPath.\n+*)\n+\n+PROCEDURE GetSystemPath () : PathList ;\n+\n+\n+(*\n+   SetUserPath - assigns UserPath to pl.\n+*)\n+\n+PROCEDURE SetUserPath (pl: PathList) ;\n+\n+\n+(*\n+   SetSystemPath - assigns SystemPath to pl.\n+*)\n+\n+PROCEDURE SetSystemPath (pl: PathList) ;\n+\n+\n+(*\n+   InitPathList - creates a new empty path list.\n+*)\n+\n+PROCEDURE InitPathList (str: String) : PathList ;\n+\n+\n+(*\n+   KillPathList - places list pl onto the freelist.\n+                  Postcondition: pl will be NIL.\n+*)\n+\n+PROCEDURE KillPathList (VAR pl: PathList) ;\n+\n+\n+(*\n+   Cons - appends str to the end of a path list.\n+          If pl is NIL a new list is created and returned\n+          containing str.\n+*)\n+\n+PROCEDURE Cons (pl: PathList; str: String) : PathList ;\n+\n+\n+(*\n+   ConsList - concatenates path list left and right together.\n+              It always returns NIL which should be assigned\n+              to the callers right parameter after ConsList\n+              has been completed signifying that right should\n+              no longer be accessed.\n+*)\n+\n+PROCEDURE ConsList (left, right: PathList) : PathList ;\n+\n+\n+(*\n+   Stash - returns pl before setting pl to NIL.\n+*)\n+\n+PROCEDURE Stash (VAR pl: PathList) : PathList ;\n+\n+\n+(*\n+   FindFileName - returns NIL if a file cannot be found otherwise\n+                  it returns the path including the filename.\n+*)\n+\n+PROCEDURE FindFileName (filename: String; pl: PathList) : String ;\n+\n+\n+END DynamicStringPath."}, {"sha": "601456e0787de4b478b1fbd0f731ea409951339c", "filename": "gcc/m2/gm2-compiler/DynamicStringPath.mod", "status": "added", "additions": 265, "deletions": 0, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FDynamicStringPath.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FDynamicStringPath.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FDynamicStringPath.mod?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -0,0 +1,265 @@\n+(* DynamicStringPath.def implements a path for DynamicStrings.\n+\n+Copyright (C) 2001-2023 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE DynamicStringPath ;  (*!m2iso+gm2*)\n+\n+FROM Storage IMPORT ALLOCATE, DEALLOCATE ;\n+FROM DynamicStrings IMPORT InitString, ConCat, ConCatChar, char, Dup,\n+                           KillString, Length ;\n+FROM SFIO IMPORT Exists ;\n+FROM FIO IMPORT StdErr ;\n+FROM M2Printf IMPORT fprintf0, fprintf1 ;\n+\n+CONST\n+   Directory = '/' ;\n+   Debugging = FALSE ;\n+\n+TYPE\n+   PathList = POINTER TO RECORD\n+                            tail,\n+                            next : PathList ;\n+                            entry: String ;\n+                         END ;\n+\n+\n+VAR\n+   FreeList,\n+   DefaultUserPath,\n+   DefaultSystemPath: PathList ;\n+\n+\n+(*\n+   GetUserPath - returns the current UserPath.\n+*)\n+\n+PROCEDURE GetUserPath () : PathList ;\n+BEGIN\n+   RETURN DefaultUserPath\n+END GetUserPath ;\n+\n+\n+(*\n+   GetSystemPath - returns the current SystemPath.\n+*)\n+\n+PROCEDURE GetSystemPath () : PathList ;\n+BEGIN\n+   RETURN DefaultSystemPath\n+END GetSystemPath ;\n+\n+\n+(*\n+   SetUserPath - assigns UserPath to pl.\n+*)\n+\n+PROCEDURE SetUserPath (pl: PathList) ;\n+BEGIN\n+   DefaultUserPath := pl ;\n+   DumpPath ('DefaultUserPath', DefaultUserPath)\n+END SetUserPath ;\n+\n+\n+(*\n+   SetSystemPath - assigns SystemPath to pl.\n+*)\n+\n+PROCEDURE SetSystemPath (pl: PathList) ;\n+BEGIN\n+   DefaultSystemPath := pl ;\n+   DumpPath ('DefaultSystemPath', DefaultSystemPath)\n+END SetSystemPath ;\n+\n+\n+(*\n+   KillPathList - places list pl onto the freelist.\n+                  Postcondition: pl will be NIL.\n+*)\n+\n+PROCEDURE KillPathList (VAR pl: PathList) ;\n+BEGIN\n+   IF pl # NIL\n+   THEN\n+      pl^.tail^.next := FreeList ;\n+      FreeList := pl ;\n+      pl := NIL\n+   END\n+END KillPathList ;\n+\n+\n+(*\n+   InitPathList - creates a new empty path list.\n+                  It takes a copy of the string.\n+*)\n+\n+PROCEDURE InitPathList (str: String) : PathList ;\n+VAR\n+   pl: PathList ;\n+BEGIN\n+   NEW (pl) ;\n+   WITH pl^ DO\n+      tail := pl ;\n+      next := NIL ;\n+      entry := Dup (str)\n+   END ;\n+   RETURN pl\n+END InitPathList ;\n+\n+\n+(*\n+   Cons - appends str to the end of a path list.\n+          If pl is NIL a new list is created and returned\n+          containing str.\n+*)\n+\n+PROCEDURE Cons (pl: PathList; str: String) : PathList ;\n+BEGIN\n+   IF pl = NIL\n+   THEN\n+      pl := InitPathList (str)\n+   ELSE\n+      pl := ConsList (pl, InitPathList (str))\n+   END ;\n+   RETURN pl\n+END Cons ;\n+\n+\n+(*\n+   ConsList - concatenates path list left and right together.\n+              It always returns NIL which should be assigned\n+              to the callers right parameter after ConsList\n+              has been completed signifying that right should\n+              no longer be accessed.\n+*)\n+\n+PROCEDURE ConsList (left, right: PathList) : PathList ;\n+BEGIN\n+   IF right # NIL\n+   THEN\n+      left^.tail^.next := right ;\n+      left^.tail := right^.tail\n+   END ;\n+   RETURN left\n+END ConsList ;\n+\n+\n+(*\n+   Stash - returns pl before setting pl to NIL.\n+*)\n+\n+PROCEDURE Stash (VAR pl: PathList) : PathList ;\n+VAR\n+   old: PathList ;\n+BEGIN\n+   old := pl ;\n+   pl := NIL ;\n+   RETURN old\n+END Stash ;\n+\n+\n+(*\n+   AddDir - if str is not empty and does not end with / then add\n+            a directory.\n+            Postcondition: str is returned (with a '/' at the end)\n+            or is empty.\n+*)\n+\n+PROCEDURE AddDir (str: String) : String ;\n+BEGIN\n+   IF Length (str) > 0\n+   THEN\n+      IF char (str, -1) # Directory\n+      THEN\n+         str := ConCatChar (str, Directory)\n+      END\n+   END ;\n+   RETURN str\n+END AddDir ;\n+\n+\n+(*\n+   FindFileName - returns NIL if a file cannot be found otherwise\n+                  it returns the path including the filename.\n+*)\n+\n+PROCEDURE FindFileName (filename: String; pl: PathList) : String ;\n+VAR\n+   s: String ;\n+BEGIN\n+   WHILE pl # NIL DO\n+      s := ConCat (AddDir (Dup (pl^.entry)), Dup (filename)) ;\n+      IF Debugging\n+      THEN\n+         fprintf1 (StdErr, \"testing for %s: \", s)\n+      END ;\n+      IF Exists (s)\n+      THEN\n+         IF Debugging\n+         THEN\n+            fprintf0 (StdErr, \"yes\\n\")\n+         END ;\n+         RETURN s\n+      END ;\n+      IF Debugging\n+      THEN\n+         fprintf0 (StdErr, \"no\\n\")\n+      END ;\n+      s := KillString (s) ;\n+      pl := pl^.next\n+   END ;\n+   IF Debugging\n+   THEN\n+      fprintf1 (StdErr, \"FindFileName did not find: %s in path\\n\", filename)\n+   END ;\n+   RETURN NIL\n+END FindFileName ;\n+\n+\n+(*\n+   DumpPath - debugging dump of the pathlist.\n+*)\n+\n+PROCEDURE DumpPath (name: ARRAY OF CHAR; pl: PathList) ;\n+BEGIN\n+   IF Debugging\n+   THEN\n+      fprintf0 (StdErr, name) ;\n+      fprintf0 (StdErr, \":\") ;\n+      WHILE pl # NIL DO\n+         fprintf0 (StdErr, \" {\") ;\n+         fprintf1 (StdErr, \"%s\", pl^.entry) ;\n+         fprintf0 (StdErr, \"}\") ;\n+         pl := pl^.next\n+      END ;\n+      fprintf0 (StdErr, \"\\n\")\n+   END\n+END DumpPath ;\n+\n+\n+BEGIN\n+   DefaultSystemPath := NIL ;\n+   DefaultUserPath := NIL ;\n+   FreeList := NIL\n+END DynamicStringPath."}, {"sha": "14e978a46baa6010b1bd82e5bfc307b6627aa180", "filename": "gcc/m2/gm2-compiler/M2Options.mod", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FM2Options.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FM2Options.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Options.mod?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -24,8 +24,10 @@ IMPLEMENTATION MODULE M2Options ;\n \n IMPORT CmdArgs ;\n FROM SArgs IMPORT GetArg, Narg ;\n-FROM M2Search IMPORT PrependSearchPath, SetDefExtension, SetModExtension ;\n-FROM M2Printf IMPORT printf0, printf1 ;\n+FROM M2Search IMPORT SetDefExtension, SetModExtension ;\n+FROM DynamicStringPath IMPORT Cons, GetUserPath, SetUserPath, Cons ;\n+FROM M2Printf IMPORT printf0, printf1, fprintf1 ;\n+FROM FIO IMPORT StdErr ;\n FROM libc IMPORT exit ;\n FROM Debug IMPORT Halt ;\n FROM m2linemap IMPORT location_t ;\n@@ -789,10 +791,10 @@ BEGIN\n    s := InitStringCharStar(arg) ;\n    IF Debugging\n    THEN\n-      printf1(\"setting search path to: %s\\n\", s)\n+      fprintf1 (StdErr, \"M2Search.SetSearchPath setting search path to: %s\\n\", s)\n    END ;\n-   PrependSearchPath(s) ;\n-   s := KillString(s)\n+   SetUserPath (Cons (GetUserPath (), s)) ;\n+   s := KillString (s)\n END SetSearchPath ;\n \n "}, {"sha": "3d172378cf5ee5e8809612c36cf098092644c84c", "filename": "gcc/m2/gm2-compiler/M2Search.def", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FM2Search.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FM2Search.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Search.def?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -31,31 +31,6 @@ DEFINITION MODULE M2Search ;\n *)\n \n FROM DynamicStrings IMPORT String ;\n-EXPORT QUALIFIED InitSearchPath, PrependSearchPath, FindSourceFile,\n-                 FindSourceDefFile, FindSourceModFile,\n-                 SetDefExtension, SetModExtension ;\n-\n-\n-(*\n-   InitSearchPath - assigns the search path to Path.\n-                    The string Path may take the form:\n-\n-                    Path           ::= IndividualPath { \":\" IndividualPath }\n-                    IndividualPath ::= \".\" | DirectoryPath\n-                    DirectoryPath  ::= [ \"/\" ] Name { \"/\" Name }\n-                    Name           ::= Letter { (Letter | Number) }\n-                    Letter         ::= A..Z | a..z\n-                    Number         ::= 0..9\n-*)\n-\n-PROCEDURE InitSearchPath (Path: String) ;\n-\n-\n-(*\n-   PrependSearchPath - prepends a new path to the initial search path.\n-*)\n-\n-PROCEDURE PrependSearchPath (path: String) ;\n \n \n (*"}, {"sha": "cc61ebfb3539e8693b4aab11cf2174b60133d16f", "filename": "gcc/m2/gm2-compiler/M2Search.mod", "status": "modified", "additions": 22, "deletions": 109, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FM2Search.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-compiler%2FM2Search.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Search.mod?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -22,9 +22,9 @@ along with GNU Modula-2; see the file COPYING3.  If not see\n IMPLEMENTATION MODULE M2Search ;\n \n \n-FROM SFIO IMPORT Exists ;\n FROM M2FileName IMPORT CalculateFileName ;\n FROM Assertion IMPORT Assert ;\n+FROM DynamicStringPath IMPORT GetUserPath, GetSystemPath, FindFileName ;\n \n FROM DynamicStrings IMPORT InitString, InitStringChar,\n                            KillString, ConCat, ConCatChar, Index, Slice,\n@@ -35,13 +35,10 @@ FROM DynamicStrings IMPORT InitString, InitStringChar,\n \n \n CONST\n-   Directory        =   '/' ;\n    GarbageDebugging = FALSE ;\n \n VAR\n-   Def, Mod,\n-   UserPath,\n-   InitialPath: String ;\n+   Def, Mod: String ;\n \n (* Internal garbage collection debugging routines.  *)\n \n@@ -109,24 +106,6 @@ END DSdbExit ;\n *)\n \n \n-(*\n-   PrependSearchPath - prepends a new path to the initial search path.\n-*)\n-\n-PROCEDURE PrependSearchPath (path: String) ;\n-BEGIN\n-   DSdbEnter ;\n-   IF EqualArray(UserPath, '')\n-   THEN\n-      UserPath := KillString(UserPath) ;\n-      UserPath := Dup(path)\n-   ELSE\n-      UserPath := ConCat(ConCatChar(UserPath, ':'), path)\n-   END ;\n-   DSdbExit (UserPath)\n-END PrependSearchPath ;\n-\n-\n (*\n    FindSourceFile - attempts to locate the source file FileName.\n                     If a file is found then TRUE is returned otherwise\n@@ -143,55 +122,13 @@ END PrependSearchPath ;\n \n PROCEDURE FindSourceFile (FileName: String;\n                           VAR FullPath: String) : BOOLEAN ;\n-VAR\n-   CompleteSearchPath: String ;\n-   start, end        : INTEGER ;\n-   newpath           : String ;\n BEGIN\n-   IF EqualArray(UserPath, '')\n+   FullPath := FindFileName (FileName, GetUserPath ()) ;\n+   IF FullPath = NIL\n    THEN\n-      IF EqualArray(InitialPath, '')\n-      THEN\n-         CompleteSearchPath := InitString('.')\n-      ELSE\n-         CompleteSearchPath := Dup(InitialPath)\n-      END\n-   ELSE\n-      CompleteSearchPath := ConCat(ConCatChar(Dup(UserPath), ':'), InitialPath)\n+      FullPath := FindFileName (FileName, GetSystemPath ())\n    END ;\n-   start := 0 ;\n-   end   := Index(CompleteSearchPath, ':', CARDINAL(start)) ;\n-   REPEAT\n-      IF end=-1\n-      THEN\n-         end := 0\n-      END ;\n-      newpath := Slice(CompleteSearchPath, start, end) ;\n-      IF EqualArray(newpath, '.')\n-      THEN\n-         newpath := KillString(newpath) ;\n-         newpath := Dup(FileName)\n-      ELSE\n-         newpath := ConCat(ConCatChar(newpath, Directory), FileName)\n-      END ;\n-      IF Exists(newpath)\n-      THEN\n-         FullPath := newpath ;\n-         CompleteSearchPath := KillString(CompleteSearchPath) ;\n-         RETURN( TRUE )\n-      END ;\n-      newpath := KillString(newpath) ;\n-      IF end#0\n-      THEN\n-         start := end+1 ;\n-         end   := Index(CompleteSearchPath, ':', CARDINAL(start))\n-      END\n-   UNTIL end=0 ;\n-\n-   FullPath := NIL ;\n-   newpath := KillString(newpath) ;\n-   CompleteSearchPath :=  KillString(CompleteSearchPath) ;\n-   RETURN( FALSE )\n+   RETURN FullPath # NIL\n END FindSourceFile ;\n \n \n@@ -206,18 +143,18 @@ PROCEDURE FindSourceDefFile (Stem: String; VAR FullPath: String) : BOOLEAN ;\n VAR\n    f: String ;\n BEGIN\n-   IF Def#NIL\n+   IF Def # NIL\n    THEN\n-      f := CalculateFileName(Stem, Def) ;\n-      IF FindSourceFile(f, FullPath)\n+      f := CalculateFileName (Stem, Def) ;\n+      IF FindSourceFile (f, FullPath)\n       THEN\n-         RETURN( TRUE )\n+         RETURN TRUE\n       END ;\n-      f := KillString(f)\n+      f := KillString (f)\n    END ;\n-   (* and try the GNU Modula-2 default extension *)\n-   f := CalculateFileName(Stem, Mark(InitString('def'))) ;\n-   RETURN( FindSourceFile(f, FullPath) )\n+   (* Try the GNU Modula-2 default extension.  *)\n+   f := CalculateFileName (Stem, Mark(InitString ('def'))) ;\n+   RETURN FindSourceFile (f, FullPath)\n END FindSourceDefFile ;\n \n \n@@ -234,16 +171,16 @@ VAR\n BEGIN\n    IF Mod#NIL\n    THEN\n-      f := CalculateFileName(Stem, Mod) ;\n-      IF FindSourceFile(f, FullPath)\n+      f := CalculateFileName (Stem, Mod) ;\n+      IF FindSourceFile (f, FullPath)\n       THEN\n-         RETURN( TRUE )\n+         RETURN TRUE\n       END ;\n-      f := KillString(f)\n+      f := KillString (f)\n    END ;\n-   (* and try the GNU Modula-2 default extension *)\n-   f := CalculateFileName(Stem, Mark(InitString('mod'))) ;\n-   RETURN( FindSourceFile(f, FullPath) )\n+   (* Try the GNU Modula-2 default extension.  *)\n+   f := CalculateFileName (Stem, Mark(InitString ('mod'))) ;\n+   RETURN FindSourceFile (f, FullPath)\n END FindSourceModFile ;\n \n \n@@ -274,35 +211,11 @@ END SetModExtension ;\n \n \n (*\n-   InitSearchPath - assigns the search path to Path.\n-                    The string Path may take the form:\n-\n-                    Path           ::= IndividualPath { \":\" IndividualPath }\n-                    IndividualPath ::= \".\" | DirectoryPath\n-                    DirectoryPath  ::= [ \"/\" ] Name { \"/\" Name }\n-                    Name           ::= Letter { (Letter | Number) }\n-                    Letter         ::= A..Z | a..z\n-                    Number         ::= 0..9\n-*)\n-\n-PROCEDURE InitSearchPath (Path: String) ;\n-BEGIN\n-   IF InitialPath#NIL\n-   THEN\n-      InitialPath := KillString(InitialPath)\n-   END ;\n-   InitialPath := Path\n-END InitSearchPath ;\n-\n-\n-(*\n-   Init - initializes the search path.\n+   Init - initializes the def and mod default string names to NIL.\n *)\n \n PROCEDURE Init ;\n BEGIN\n-   UserPath    := InitString('') ;\n-   InitialPath := InitStringChar('.') ;\n    Def := NIL ;\n    Mod := NIL\n END Init ;"}, {"sha": "a9dfcc70069d837ce6f1d26b586a37f129bee7b4", "filename": "gcc/m2/gm2-gcc/init.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-gcc%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-gcc%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Finit.cc?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -55,6 +55,7 @@ EXTERN void _M2_CmdArgs_init (int argc, char *argv[], char *envp[]);\n EXTERN void _M2_M2Preprocess_init (int argc, char *argv[], char *envp[]);\n EXTERN void _M2_M2Error_init (int argc, char *argv[], char *envp[]);\n EXTERN void _M2_M2Search_init (int argc, char *argv[], char *envp[]);\n+EXTERN void _M2_DynamicStringPath_init (int argc, char *argv[], char *envp[]);\n EXTERN void _M2_Indexing_init (int argc, char *argv[], char *envp[]);\n EXTERN void _M2_NameKey_init (int argc, char *argv[], char *envp[]);\n EXTERN void _M2_NumberIO_init (int argc, char *argv[], char *envp[]);\n@@ -141,6 +142,7 @@ init_FrontEndInit (void)\n   _M2_StrLib_init (0, NULL, NULL);\n   _M2_dtoa_init (0, NULL, NULL);\n   _M2_ldtoa_init (0, NULL, NULL);\n+  _M2_DynamicStringPath_init (0, NULL, NULL);\n   _M2_M2Search_init (0, NULL, NULL);\n   _M2_M2Options_init (0, NULL, NULL);\n }"}, {"sha": "9cccb370a1ae23f18de489852e351b91777b13fe", "filename": "gcc/m2/gm2-gcc/m2options.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -38,7 +38,6 @@ along with GNU Modula-2; see the file COPYING3.  If not see\n \n #include \"input.h\"\n \n-EXTERN void M2Options_SetMakeIncludePath (const char *arg);\n EXTERN void M2Options_SetSearchPath (const char *arg);\n EXTERN void M2Options_setdefextension (const char *arg);\n EXTERN void M2Options_setmodextension (const char *arg);"}, {"sha": "b1156b559b05ef779a2dd0020d65cfe924e5ad7f", "filename": "gcc/m2/tools-src/makeSystem", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Ftools-src%2FmakeSystem", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/gcc%2Fm2%2Ftools-src%2FmakeSystem", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Ftools-src%2FmakeSystem?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -23,7 +23,7 @@\n \n \n Usage () {\n-   echo \"Usage: makesystem dialectflag SYSTEM.def SYSTEM.mod librarypath compiler\"\n+   echo \"Usage: makesystem dialectflag SYSTEM.def SYSTEM.mod { librarypath } compiler\"\n }\n \n if [ $# -lt 6 ] ; then\n@@ -34,9 +34,18 @@ fi\n DIALECT=$1\n SYSTEMDEF=$2\n SYSTEMMOD=$3\n-LIBRARY=$4\n-COMPILER=$5\n-OUTPUTFILE=$6\n+shift 3\n+LIBRARY=\"\"\n+while [ $# -gt 2 ] ; do\n+    if [ \"$LIBRARY\" = \"\" ] ; then\n+\tLIBRARY=$1\n+    else\n+\tLIBRARY=\"${LIBRARY} $1\"\n+    fi\n+    shift\n+done\n+COMPILER=$1\n+OUTPUTFILE=$2\n \n if [ \"$COMPILER\" = \"\" ] ; then\n     echo \"parameter 5 of makeSystem is incorrect, GM2_FOR_TARGET was unset\""}, {"sha": "e7c72732ade932a2c61d89a7538d5d24c63a7672", "filename": "libgm2/libm2cor/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2cor%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2cor%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2cor%2FMakefile.am?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -129,7 +129,7 @@ SYSTEM.def: Makefile\n \tbash $(GM2_SRC)/tools-src/makeSystem -fpim \\\n              $(GM2_SRC)/gm2-libs-coroutines/SYSTEM.def \\\n              $(GM2_SRC)/gm2-libs-coroutines/SYSTEM.mod \\\n-             -I$(GM2_SRC)/gm2-libs-coroutines:$(GM2_SRC)/gm2-libs:$(GM2_SRC)/gm2-libs-iso \\\n+             -I$(GM2_SRC)/gm2-libs-coroutines -I$(GM2_SRC)/gm2-libs -I$(GM2_SRC)/gm2-libs-iso \\\n              \"$(GM2_FOR_TARGET)\" $@\n \n .mod.lo:"}, {"sha": "677aebf0a605b7004efc4541c08b38a6202f8865", "filename": "libgm2/libm2cor/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2cor%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2cor%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2cor%2FMakefile.in?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -795,7 +795,7 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n @BUILD_CORLIB_TRUE@\tbash $(GM2_SRC)/tools-src/makeSystem -fpim \\\n @BUILD_CORLIB_TRUE@             $(GM2_SRC)/gm2-libs-coroutines/SYSTEM.def \\\n @BUILD_CORLIB_TRUE@             $(GM2_SRC)/gm2-libs-coroutines/SYSTEM.mod \\\n-@BUILD_CORLIB_TRUE@             -I$(GM2_SRC)/gm2-libs-coroutines:$(GM2_SRC)/gm2-libs:$(GM2_SRC)/gm2-libs-iso \\\n+@BUILD_CORLIB_TRUE@             -I$(GM2_SRC)/gm2-libs-coroutines -I$(GM2_SRC)/gm2-libs -I$(GM2_SRC)/gm2-libs-iso \\\n @BUILD_CORLIB_TRUE@             \"$(GM2_FOR_TARGET)\" $@\n \n @BUILD_CORLIB_TRUE@.mod.lo:"}, {"sha": "af3728bd1e16ae90f7ef0d33acfc6cab1ceca443", "filename": "libgm2/libm2iso/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2iso%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2iso%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2iso%2FMakefile.am?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -204,7 +204,7 @@ SYSTEM.def: Makefile\n \tbash $(GM2_SRC)/tools-src/makeSystem -fiso \\\n              $(GM2_SRC)/gm2-libs-iso/SYSTEM.def \\\n              $(GM2_SRC)/gm2-libs-iso/SYSTEM.mod \\\n-             -I$(GM2_SRC)/gm2-libs-iso:$(GM2_SRC)/gm2-libs \\\n+             -I$(GM2_SRC)/gm2-libs-iso -I$(GM2_SRC)/gm2-libs \\\n              \"$(GM2_FOR_TARGET)\" $@\n \n ## add these to the .mod.o rule when optimization is fixed $(CFLAGS_FOR_TARGET) $(LIBCFLAGS)"}, {"sha": "b327cbcfab5c9523f90c3969d5dc85e6f4ced28a", "filename": "libgm2/libm2iso/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2iso%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2iso%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2iso%2FMakefile.in?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -905,7 +905,7 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n @BUILD_ISOLIB_TRUE@\tbash $(GM2_SRC)/tools-src/makeSystem -fiso \\\n @BUILD_ISOLIB_TRUE@             $(GM2_SRC)/gm2-libs-iso/SYSTEM.def \\\n @BUILD_ISOLIB_TRUE@             $(GM2_SRC)/gm2-libs-iso/SYSTEM.mod \\\n-@BUILD_ISOLIB_TRUE@             -I$(GM2_SRC)/gm2-libs-iso:$(GM2_SRC)/gm2-libs \\\n+@BUILD_ISOLIB_TRUE@             -I$(GM2_SRC)/gm2-libs-iso -I$(GM2_SRC)/gm2-libs \\\n @BUILD_ISOLIB_TRUE@             \"$(GM2_FOR_TARGET)\" $@\n \n @BUILD_ISOLIB_TRUE@.mod.lo:"}, {"sha": "f63f2436747b97521a3dd3af494edce6f965e481", "filename": "libgm2/libm2min/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2min%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2min%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2min%2FMakefile.am?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -128,7 +128,7 @@ SYSTEM.def: Makefile\n \tbash $(GM2_SRC)/tools-src/makeSystem -fpim \\\n              $(GM2_SRC)/gm2-libs-min/SYSTEM.def \\\n              $(GM2_SRC)/gm2-libs-min/SYSTEM.mod \\\n-             -I$(GM2_SRC)/gm2-libs-min:$(GM2_SRC)/gm2-libs \\\n+             -I$(GM2_SRC)/gm2-libs-min -I$(GM2_SRC)/gm2-libs \\\n              \"$(GM2_FOR_TARGET) -fno-exceptions\" $@\n \n install-data-local: force"}, {"sha": "7e4496c9ff1c8f288518d535b6ca04010ce8218e", "filename": "libgm2/libm2min/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2min%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f235d695729cc745cf15a00fb8b2cfaded80fd1e/libgm2%2Flibm2min%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2min%2FMakefile.in?ref=f235d695729cc745cf15a00fb8b2cfaded80fd1e", "patch": "@@ -754,7 +754,7 @@ SYSTEM.def: Makefile\n \tbash $(GM2_SRC)/tools-src/makeSystem -fpim \\\n              $(GM2_SRC)/gm2-libs-min/SYSTEM.def \\\n              $(GM2_SRC)/gm2-libs-min/SYSTEM.mod \\\n-             -I$(GM2_SRC)/gm2-libs-min:$(GM2_SRC)/gm2-libs \\\n+             -I$(GM2_SRC)/gm2-libs-min -I$(GM2_SRC)/gm2-libs \\\n              \"$(GM2_FOR_TARGET) -fno-exceptions\" $@\n \n install-data-local: force"}]}