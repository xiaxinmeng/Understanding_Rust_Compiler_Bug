{"sha": "1c7781fbb3c307f57116fb05f81b4debf9acb2fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3NzgxZmJiM2MzMDdmNTcxMTZmYjA1ZjgxYjRkZWJmOWFjYjJmZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2000-06-27T18:01:02Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-27T18:01:02Z"}, "message": "g++.exp (g++_include_flags): Override libgloss.exp version with one that knows about the new gcc tree structure.\n\n\n2000-06-27  H.J. Lu  <hjl@gnu.org>\n            Loren J. Rittle  <ljrittle@acm.org>\n\n        * lib/g++.exp (g++_include_flags): Override libgloss.exp\n        version with one that knows about the new gcc tree structure.\n        (g++_link_flags): Same.\n\nCo-Authored-By: Loren J. Rittle <ljrittle@acm.org>\n\nFrom-SVN: r34735", "tree": {"sha": "ca607c025ad0799f7f3f893442cb1d4881b663c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca607c025ad0799f7f3f893442cb1d4881b663c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c7781fbb3c307f57116fb05f81b4debf9acb2fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7781fbb3c307f57116fb05f81b4debf9acb2fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c7781fbb3c307f57116fb05f81b4debf9acb2fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7781fbb3c307f57116fb05f81b4debf9acb2fe/comments", "author": null, "committer": null, "parents": [{"sha": "e57b9d65666b9440d13ebb601254a9d53f772714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57b9d65666b9440d13ebb601254a9d53f772714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e57b9d65666b9440d13ebb601254a9d53f772714"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "aedd567c035eff5cf8fbfac85c674f85ba97801e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7781fbb3c307f57116fb05f81b4debf9acb2fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7781fbb3c307f57116fb05f81b4debf9acb2fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c7781fbb3c307f57116fb05f81b4debf9acb2fe", "patch": "@@ -1,3 +1,10 @@\n+2000-06-27  H.J. Lu  <hjl@gnu.org>\n+            Loren J. Rittle  <ljrittle@acm.org>\n+\n+        * lib/g++.exp (g++_include_flags): Override libgloss.exp\n+        version with one that knows about the new gcc tree structure.\n+        (g++_link_flags): Same.\n+\t\n 2000-06-26  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* gcc.dg/20000419-1.c, gcc.dg/cpp-mi.c, gcc.dg/cpp-tradwarn1.c,"}, {"sha": "47ce3738613d5d5c2b704b49d8e8cf0c076c5417", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7781fbb3c307f57116fb05f81b4debf9acb2fe/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7781fbb3c307f57116fb05f81b4debf9acb2fe/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=1c7781fbb3c307f57116fb05f81b4debf9acb2fe", "patch": "@@ -62,6 +62,100 @@ proc g++_version { } {\n     }\n }\n \n+#\n+# provide new versions of g++_include_flags and g++_link_flags (both\n+# originally from libgloss.exp) which know about the new gcc tree structure\n+#\n+proc g++_include_flags { args } {\n+    global srcdir\n+\n+    if [is_remote host] {\n+      return \"\"\n+    }\n+\n+    set gccpath [get_multilibs]\n+    set libio_dir \"\"\n+    set flags \"\"\n+\n+    set dir [lookfor_file ${srcdir} libg++]\n+    if { ${dir} != \"\" } {\n+      append flags \"-I${dir} -I${dir}/src \"\n+    }\n+    set odir_v2 [lookfor_file ${gccpath} libstdc++]\n+    set sdir_v2 [lookfor_file ${srcdir} libstdc++]\n+    if { ${odir_v2} != \"\" } {\n+      append flags \"-I${sdir_v2} -I${sdir_v2}/stl \"\n+    }\n+    set odir_v3 [lookfor_file ${gccpath} libstdc++-v3]\n+    set sdir_v3 [lookfor_file ${srcdir} libstdc++-v3]\n+    if { ${odir_v3} != \"\" } {\n+      append flags [exec ${odir_v3}/mkcheck 2 ${odir_v3} ${sdir_v3}]\n+    }\n+\n+    if { ${odir_v2} != \"\" && ${odir_v3} != \"\"} {\n+      send_error \"ERROR: can't handle both libstdc++ and libstdc++-v3 appearing in build tree.\\n\"\n+      exit 1\n+    }\n+\n+    return \"$flags\"\n+}\n+\n+proc g++_link_flags { args } {\n+    global srcdir\n+    global ld_library_path\n+\n+    set gccpath [get_multilibs];\n+    set libio_dir \"\"\n+    set flags \"\"\n+    set ld_library_path \".\"\n+\n+    if { $gccpath != \"\" } {\n+      if [file exists \"${gccpath}/lib/libstdc++.a\"] {\n+          append ld_library_path \":${gccpath}/lib\"\n+      }\n+      if [file exists \"${gccpath}/libg++/libg++.a\"] {\n+          append flags \"-L${gccpath}/libg++ \"\n+          append ld_library_path \":${gccpath}/libg++\"\n+      }\n+      if [file exists \"${gccpath}/libstdc++/libstdc++.a\"] {\n+          append flags \"-L${gccpath}/libstdc++ \"\n+          append ld_library_path \":${gccpath}/libstdc++\"\n+      }\n+      if [file exists \"${gccpath}/libstdc++-v3/src/.libs/libstdc++.a\"] {\n+          append flags \" -L${gccpath}/libstdc++-v3/src/.libs \"\n+          append ld_library_path \":${gccpath}/libstdc++-v3/src/.libs\"\n+      }\n+      if [file exists \"${gccpath}/libiberty/libiberty.a\"] {\n+          append flags \"-L${gccpath}/libiberty \"\n+      }\n+      if [file exists \"${gccpath}/librx/librx.a\"] {\n+          append flags \"-L${gccpath}/librx \"\n+      }\n+    } else {\n+      global tool_root_dir;\n+\n+      set libgpp [lookfor_file ${tool_root_dir} libg++];\n+      if { $libgpp != \"\" } {\n+          append flags \"-L${libgpp} \";\n+          append ld_library_path \":${libgpp}\"\n+      }\n+      set libstdcpp [lookfor_file ${tool_root_dir} libstdc++];\n+      if { $libstdcpp != \"\" } {\n+          append flags \"-L${libstdcpp} \";\n+          append ld_library_path \":${libstdcpp}\"\n+      }\n+      set libiberty [lookfor_file ${tool_root_dir} libiberty];\n+      if { $libiberty != \"\" } {\n+          append flags \"-L${libiberty} \";\n+      }\n+      set librx [lookfor_file ${tool_root_dir} librx];\n+      if { $librx != \"\" } {\n+          append flags \"-L${librx} \";\n+      }\n+    }\n+    return \"$flags\"\n+}\n+\n #\n # g++_init -- called at the start of each subdir of tests\n #"}]}