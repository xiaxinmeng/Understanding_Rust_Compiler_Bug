{"sha": "17f46ec355995413b4eefb3e37863c558619c113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdmNDZlYzM1NTk5NTQxM2I0ZWVmYjNlMzc4NjNjNTU4NjE5YzExMw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-03-20T02:05:05Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-03-20T02:05:05Z"}, "message": "re PR fortran/35627 (namelist read error)\n\n2008-03-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/35627\n\t* io/list_read.c (free_line): Clear the line buffer enable flag and\n\treset the index into line_buffer, aka item_count.\n\t(next_char): Cleanup whitespace.\n\t(read_logical): Use unget_char to assure that the first character of the\n\tbad logical is saved in case it is part of an object name. Remove the\n\tclearing of index and flag that is now in free_line.\n\t(read_real): Likewise.\n\nFrom-SVN: r133360", "tree": {"sha": "84808a336f7a3932720ebda87346a26c3b1cfe51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84808a336f7a3932720ebda87346a26c3b1cfe51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17f46ec355995413b4eefb3e37863c558619c113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f46ec355995413b4eefb3e37863c558619c113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f46ec355995413b4eefb3e37863c558619c113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f46ec355995413b4eefb3e37863c558619c113/comments", "author": null, "committer": null, "parents": [{"sha": "31e6722c276d4bfc6d40c138ca2576716ef93ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e6722c276d4bfc6d40c138ca2576716ef93ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e6722c276d4bfc6d40c138ca2576716ef93ec8"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "ee0aae8ceeaa0552d46690e14ea5675a169cf717", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f46ec355995413b4eefb3e37863c558619c113/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f46ec355995413b4eefb3e37863c558619c113/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=17f46ec355995413b4eefb3e37863c558619c113", "patch": "@@ -1,3 +1,14 @@\n+2008-03-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35627\n+\t* io/list_read.c (free_line): Clear the line buffer enable flag and\n+\treset the index into line_buffer, aka item_count.\n+\t(next_char): Cleanup whitespace.\n+\t(read_logical): Use unget_char to assure that the first character of the\n+\tbad logical is saved in case it is part of an object name. Remove the\n+\tclearing of index and flag that is now in free_line.\n+\t(read_real): Likewise.\n+\n 2008-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/32972"}, {"sha": "d295431bc3a97836738c1b3827e225b259454774", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f46ec355995413b4eefb3e37863c558619c113/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f46ec355995413b4eefb3e37863c558619c113/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=17f46ec355995413b4eefb3e37863c558619c113", "patch": "@@ -120,6 +120,9 @@ free_saved (st_parameter_dt *dtp)\n static void\n free_line (st_parameter_dt *dtp)\n {\n+  dtp->u.p.item_count = 0;\n+  dtp->u.p.line_buffer_enabled = 0;\n+\n   if (dtp->u.p.line_buffer == NULL)\n     return;\n \n@@ -157,8 +160,8 @@ next_char (st_parameter_dt *dtp)\n \t  goto done;\n \t}\n \n-        dtp->u.p.item_count = 0;\n-\tdtp->u.p.line_buffer_enabled = 0;\n+      dtp->u.p.item_count = 0;\n+      dtp->u.p.line_buffer_enabled = 0;\n     }    \n \n   /* Handle the end-of-record and end-of-file conditions for\n@@ -685,6 +688,9 @@ read_logical (st_parameter_dt *dtp, int length)\n       return;\t\t\t/* Null value.  */\n \n     default:\n+      /* Save the character in case it is the beginning\n+\t of the next object name. */\n+      unget_char (dtp, c);\n       goto bad_logical;\n     }\n \n@@ -700,8 +706,6 @@ read_logical (st_parameter_dt *dtp, int length)\n \n   unget_char (dtp, c);\n   eat_separator (dtp);\n-  dtp->u.p.item_count = 0;\n-  dtp->u.p.line_buffer_enabled = 0;\n   set_integer ((int *) dtp->u.p.value, v, length);\n   free_line (dtp);\n \n@@ -755,8 +759,6 @@ read_logical (st_parameter_dt *dtp, int length)\n \n  logical_done:\n \n-  dtp->u.p.item_count = 0;\n-  dtp->u.p.line_buffer_enabled = 0;\n   dtp->u.p.saved_type = BT_LOGICAL;\n   dtp->u.p.saved_length = length;\n   set_integer ((int *) dtp->u.p.value, v, length);\n@@ -1640,8 +1642,6 @@ read_real (st_parameter_dt *dtp, int length)\n       push_char (dtp, 'n');\n     }\n \n-  dtp->u.p.item_count = 0;\n-  dtp->u.p.line_buffer_enabled = 0;\n   free_line (dtp);\n   goto done;\n "}]}