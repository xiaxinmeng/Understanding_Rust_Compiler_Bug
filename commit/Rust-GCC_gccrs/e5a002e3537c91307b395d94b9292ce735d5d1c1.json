{"sha": "e5a002e3537c91307b395d94b9292ce735d5d1c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhMDAyZTM1MzdjOTEzMDdiMzk1ZDk0YjkyOTJjZTczNWQ1ZDFjMQ==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-08-28T20:58:56Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-08-28T20:58:56Z"}, "message": "c-common.h: Update comments about ObjC/ObjC++ entry points.\n\n[gcc/ChangeLog]\n2004-08-28  Ziemowit Laski  <zlaski@apple.com>\n\n\t* c-common.h: Update comments about ObjC/ObjC++ entry points.\n\t(objc_is_reserved_word): New prototype.\n\t(get_current_scope, objc_mark_locals_volatile): Move prototypes to\n\tseparate section; these are call-backs.\n\t* c-lex.c (c_lex_with_flags): Call objc_is_reserved_word() to detect\n\tObjC/ObjC++ \"@\" keywords.\n\t* c-tree.h (get_current_scope, objc_mark_locals_volatile): Remove\n\tprototypes; they already live in c-common.h.\n\t* stub-objc.c: Update copyright notice.\n\t(objc_is_reserved_word): New stub.\n\n[gcc/cp/ChangeLog]\n2004-08-28  Ziemowit Laski  <zlaski@apple.com>\n\n\t* Make-lang.in (CXX_OBJS): Split up into CXX_OBJS and\n\tCXX_AND_OBJCXX_OBJS.\n\t(CXX_C_OBJS): Include in CXX_AND_OBJCXX_OBJS instead of listing\n\tseparately on the link line.\n\n[gcc/objc/ChangeLog]\n2004-08-28  Ziemowit Laski  <zlaski@apple.com>\n\n\t* objc-act.c (objc_is_reserved_word): New function.\n\nFrom-SVN: r86702", "tree": {"sha": "1139533b6dad212124a620afe1309ed4b3b484f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1139533b6dad212124a620afe1309ed4b3b484f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5a002e3537c91307b395d94b9292ce735d5d1c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a002e3537c91307b395d94b9292ce735d5d1c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5a002e3537c91307b395d94b9292ce735d5d1c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a002e3537c91307b395d94b9292ce735d5d1c1/comments", "author": null, "committer": null, "parents": [{"sha": "7984a2f04bb29eff5850be9f99c2ef0f879c862a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7984a2f04bb29eff5850be9f99c2ef0f879c862a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7984a2f04bb29eff5850be9f99c2ef0f879c862a"}], "stats": {"total": 85, "additions": 68, "deletions": 17}, "files": [{"sha": "f949d31e3920f2fce8a769dc3fbc84b5c1023bc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -1,3 +1,16 @@\n+2004-08-28  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* c-common.h: Update comments about ObjC/ObjC++ entry points.\n+\t(objc_is_reserved_word): New prototype.\n+\t(get_current_scope, objc_mark_locals_volatile): Move prototypes to\n+\tseparate section; these are call-backs.\n+\t* c-lex.c (c_lex_with_flags): Call objc_is_reserved_word() to detect\n+\tObjC/ObjC++ \"@\" keywords.\n+\t* c-tree.h (get_current_scope, objc_mark_locals_volatile): Remove\n+\tprototypes; they already live in c-common.h.\n+\t* stub-objc.c: Update copyright notice.\n+\t(objc_is_reserved_word): New stub.\n+\n 2004-08-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* system.h (gcc_assert): Remove __builtin_expect.  Evaluate EXPR"}, {"sha": "86706e6e8172f5af7ddfa7fb62deb39453139252", "filename": "gcc/c-common.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -896,21 +896,26 @@ extern void c_stddef_cpp_builtins (void);\n extern void fe_file_change (const struct line_map *);\n extern void c_parse_error (const char *, enum cpp_ttype, tree);\n \n-/* The following have been moved here from c-tree.h, since they're needed\n-   in the ObjC++ world, too.  What is more, stub-objc.c could use a few\n-   prototypes.  */\n+/* Objective-C / Objective-C++ entry points.  */\n+\n+/* The following ObjC/ObjC++ functions are called by the C and/or C++\n+   front-ends; they all must have corresponding stubs in stub-objc.c.  */\n extern tree lookup_interface (tree);\n extern tree is_class_name (tree);\n extern tree objc_is_object_ptr (tree);\n extern void objc_check_decl (tree);\n+extern int objc_is_reserved_word (tree);\n extern int objc_comptypes (tree, tree, int);\n extern tree objc_message_selector (void);\n extern tree lookup_objc_ivar (tree);\n-extern void *get_current_scope (void);\n-extern void objc_mark_locals_volatile (void *);\n extern void objc_clear_super_receiver (void);\n extern int objc_is_public (tree, tree);\n \n+/* The following are provided by the C and C++ front-ends, and called by\n+   ObjC/ObjC++.  */\n+extern void *get_current_scope (void);\n+extern void objc_mark_locals_volatile (void *);\n+\n /* In c-ppoutput.c  */\n extern void init_pp_output (FILE *);\n extern void preprocess_file (cpp_reader *);"}, {"sha": "4b875618420e197218b325827ffa886e4f4ba38a", "filename": "gcc/c-lex.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -389,8 +389,7 @@ c_lex_with_flags (tree *value, unsigned char *cpp_flags)\n \t    {\n \t    case CPP_NAME:\n \t      val = HT_IDENT_TO_GCC_IDENT (HT_NODE (tok->val.node));\n-\t      if (C_IS_RESERVED_WORD (val)\n-\t\t  && OBJC_IS_AT_KEYWORD (C_RID_CODE (val)))\n+\t      if (objc_is_reserved_word (val))\n \t\t{\n \t\t  *value = val;\n \t\t  return CPP_AT_NAME;"}, {"sha": "851b3a4beb9bc5acc649523ebf904c538eb65695", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -307,8 +307,6 @@ extern bool c_eh_initialized_p;\n \n /* In c-decl.c */\n extern void c_finish_incomplete_decl (tree);\n-extern void *get_current_scope (void);\n-extern void objc_mark_locals_volatile (void *);\n extern void c_write_global_declarations (void);\n \n /* In order for the format checking to accept the C frontend"}, {"sha": "6b4bb4739f1df59933bfc0aa92cff4a06f8db8cc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -1,3 +1,10 @@\n+2004-08-28  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* Make-lang.in (CXX_OBJS): Split up into CXX_OBJS and\n+\tCXX_AND_OBJCXX_OBJS.\n+\t(CXX_C_OBJS): Include in CXX_AND_OBJCXX_OBJS instead of listing\n+\tseparately on the link line.\n+\n 2004-08-28  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (expand_static_init): Avoid bogus warnings."}, {"sha": "1d1017776a63792a5e5f87c9b04e1eadde526c1f", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -76,21 +76,23 @@ CXX_C_OBJS = attribs.o c-common.o c-format.o c-pragma.o c-semantics.o c-lex.o \\\n \tc-incpath.o cppdefault.o c-ppoutput.o c-cppbuiltin.o prefix.o \\\n \tc-gimplify.o tree-inline.o\n \n-# Language-specific object files.\n-CXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n+# Language-specific object files for C++ and Objective C++.\n+CXX_AND_OBJCXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n  cp/class.o cp/decl2.o cp/error.o cp/lex.o cp/parser.o cp/ptree.o cp/rtti.o \\\n  cp/typeck.o cp/cvt.o cp/except.o cp/friend.o cp/init.o cp/method.o \\\n  cp/search.o cp/semantics.o cp/tree.o cp/repo.o cp/dump.o cp/optimize.o \\\n- cp/mangle.o cp/cp-lang.o cp/name-lookup.o cp/cxx-pretty-print.o \\\n- cp/cp-gimplify.o tree-mudflap.o\n+ cp/mangle.o cp/name-lookup.o cp/cxx-pretty-print.o \\\n+ cp/cp-gimplify.o tree-mudflap.o $(CXX_C_OBJS)\n+\n+# Language-specific object files for C++.\n+CXX_OBJS = cp/cp-lang.o stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n \n # Use strict warnings for this front end.\n cp-warn = $(STRICT_WARN) $(WERROR)\n \n-cc1plus$(exeext): $(CXX_OBJS) $(CXX_C_OBJS) $(BACKEND) \\\n-\t\t  $(LIBDEPS)\n+cc1plus$(exeext): $(CXX_OBJS) $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n-\t      $(CXX_OBJS) $(CXX_C_OBJS) $(BACKEND) $(LIBS)\n+\t      $(CXX_OBJS) $(BACKEND) $(LIBS)\n \n # Special build rules.\n $(srcdir)/cp/cfns.h: $(srcdir)/cp/cfns.gperf"}, {"sha": "dc97ef5b5b8e92c09c361766ad49700b5f12a8ff", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -1,3 +1,7 @@\n+2004-08-28  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc-act.c (objc_is_reserved_word): New function.\n+\n 2004-08-15  Ziemowit Laski  <zlaski@apple.com>\n \n \t* Make-lang.in (objc/objc-lang.o): Depend on $(C_PRETTY_PRINT_H),"}, {"sha": "afc22d39c45a535d85b1cc5f4e506ac0a8ee4057", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -608,6 +608,23 @@ lookup_protocol_in_reflist (tree rproto_list, tree lproto)\n   return 0;\n }\n \n+/* Return 1 if IDENT is an ObjC/ObjC++ reserved keyword in the context of\n+   an '@'.  */\n+\n+int\n+objc_is_reserved_word (tree ident)\n+{\n+  unsigned char code = C_RID_CODE (ident);\n+\n+  return (OBJC_IS_AT_KEYWORD (code)\n+#ifdef OBJCPLUS\n+\t  || code == RID_CLASS || code == RID_PUBLIC\n+\t  || code == RID_PROTECTED || code == RID_PRIVATE\n+\t  || code == RID_TRY || code == RID_THROW || code == RID_CATCH\n+#endif\n+\t    );\n+}\n+\n /* Return true if TYPE is 'id'.  */\n \n static bool"}, {"sha": "abe593da37a02c4e228d6a5e696b0ece27030753", "filename": "gcc/stub-objc.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a002e3537c91307b395d94b9292ce735d5d1c1/gcc%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstub-objc.c?ref=e5a002e3537c91307b395d94b9292ce735d5d1c1", "patch": "@@ -2,7 +2,7 @@\n    that are called from within the C and C++ front-ends,\n    respectively.\n    Copyright (C) 1991, 1995, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -56,6 +56,12 @@ objc_check_decl (tree ARG_UNUSED (decl))\n {\n }\n    \n+int\n+objc_is_reserved_word (tree ARG_UNUSED (ident))\n+{\n+  return 0;\n+}\n+\n int\n objc_comptypes (tree ARG_UNUSED (lhs), tree ARG_UNUSED (rhs),\n                 int ARG_UNUSED (reflexive))"}]}