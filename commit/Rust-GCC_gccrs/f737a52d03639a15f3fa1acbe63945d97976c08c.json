{"sha": "f737a52d03639a15f3fa1acbe63945d97976c08c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjczN2E1MmQwMzYzOWExNWYzZmExYWNiZTYzOTQ1ZDk3OTc2YzA4Yw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-05-20T22:15:45Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-05-20T22:15:45Z"}, "message": "struct-by-value-3_x.c: Move common pieces to headers.\n\n2003-05-20  Janis Johnson  <janis187@us.ibm.com>\n\n\t* gcc.dg/compat/struct-by-value-3_x.c: Move common pieces to headers.\n\t* gcc.dg/compat/struct-by-value-3_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-5_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-5_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-6_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-6_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-7_x.c Ditto.\n\t* gcc.dg/compat/struct-by-value-7_y.c Ditto.\n\t* gcc.dg/compat/small-struct-defs.h: New file.\n\t* gcc.dg/compat/small-struct-init.h: New file.\n\t* gcc.dg/compat/small-struct-check.h: New file.\n\t* gcc.dg/compat/fp-struct-defs.h: New file.\n\t* gcc.dg/compat/fp-struct-check.h: New file.\n\t* gcc.dg/compat/fp-struct-init.h: New file.\n\t* gcc.dg/compat/fp-struct-test-by-value-y.h: New file.\n\t* gcc.dg/compat/fp-struct-test-by-value-x.h: New file.\n\n\t* gcc.dg/compat/scalar-return-1_main.c: New file.\n\t* gcc.dg/compat/scalar-return-1_x.c: New file.\n\t* gcc.dg/compat/scalar-return-1_y.c: New file.\n\t* gcc.dg/compat/scalar-return-2_main.c: New file.\n\t* gcc.dg/compat/scalar-return-2_x.c: New file.\n\t* gcc.dg/compat/scalar-return-2_y.c: New file.\n\t* gcc.dg/compat/struct-return-3_main.c: New file.\n\t* gcc.dg/compat/struct-return-3_y.c: New file.\n\t* gcc.dg/compat/struct-return-3_x.c: New file.\n\t* gcc.dg/compat/struct-return-2_main.c: New file.\n\t* gcc.dg/compat/struct-return-2_x.c: New file.\n\t* gcc.dg/compat/struct-return-2_y.c: New file.\n\nFrom-SVN: r67038", "tree": {"sha": "c37af5536d46dea2d20098e39130b94e9ef2a248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c37af5536d46dea2d20098e39130b94e9ef2a248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f737a52d03639a15f3fa1acbe63945d97976c08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f737a52d03639a15f3fa1acbe63945d97976c08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f737a52d03639a15f3fa1acbe63945d97976c08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f737a52d03639a15f3fa1acbe63945d97976c08c/comments", "author": null, "committer": null, "parents": [{"sha": "5d34c8e946a9df8f7c48739046418b28201077df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d34c8e946a9df8f7c48739046418b28201077df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d34c8e946a9df8f7c48739046418b28201077df"}], "stats": {"total": 1985, "additions": 595, "deletions": 1390}, "files": [{"sha": "d27ea229f5fb1e453db9b75cfd5af27c00162ece", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -1,3 +1,35 @@\n+2003-05-20  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/compat/struct-by-value-3_x.c: Move common pieces to headers.\n+\t* gcc.dg/compat/struct-by-value-3_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-5_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-5_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-6_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-6_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-7_x.c Ditto.\n+\t* gcc.dg/compat/struct-by-value-7_y.c Ditto.\n+\t* gcc.dg/compat/small-struct-defs.h: New file.\n+\t* gcc.dg/compat/small-struct-init.h: New file.\n+\t* gcc.dg/compat/small-struct-check.h: New file.\n+\t* gcc.dg/compat/fp-struct-defs.h: New file.\n+\t* gcc.dg/compat/fp-struct-check.h: New file.\n+\t* gcc.dg/compat/fp-struct-init.h: New file.\n+\t* gcc.dg/compat/fp-struct-test-by-value-y.h: New file.\n+\t* gcc.dg/compat/fp-struct-test-by-value-x.h: New file.\n+\n+\t* gcc.dg/compat/scalar-return-1_main.c: New file.\n+\t* gcc.dg/compat/scalar-return-1_x.c: New file.\n+\t* gcc.dg/compat/scalar-return-1_y.c: New file.\n+\t* gcc.dg/compat/scalar-return-2_main.c: New file.\n+\t* gcc.dg/compat/scalar-return-2_x.c: New file.\n+\t* gcc.dg/compat/scalar-return-2_y.c: New file.\n+\t* gcc.dg/compat/struct-return-3_main.c: New file.\n+\t* gcc.dg/compat/struct-return-3_y.c: New file.\n+\t* gcc.dg/compat/struct-return-3_x.c: New file.\n+\t* gcc.dg/compat/struct-return-2_main.c: New file.\n+\t* gcc.dg/compat/struct-return-2_x.c: New file.\n+\t* gcc.dg/compat/struct-return-2_y.c: New file.\n+\n 2003-05-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/20030225-2.c: New test."}, {"sha": "e907c7f046803e24dcb29aa3293e83dd20efbf44", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-check.h", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-check.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,71 @@\n+/* Function definitions that are used by multiple tests.  */\n+\n+#define CHECKS(NAME,TYPEM)\t\t\t\t\t\\\n+void checkS##NAME##1 (S##NAME##1 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y) { DEBUG_NL; DEBUG_NL; abort (); } }\t\t\\\n+void checkS##NAME##2 (S##NAME##2 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 ) { DEBUG_NL; abort (); } }\t\\\n+void checkS##NAME##3 (S##NAME##3 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 )\t\t\t\\\n+    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+void checkS##NAME##4 (S##NAME##4 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3)\t\\\n+    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+void checkS##NAME##5 (S##NAME##5 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4) { DEBUG_NL; abort (); } }\t\t\t\\\n+void checkS##NAME##6 (S##NAME##6 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5) { DEBUG_NL; abort (); } }\t\\\n+void checkS##NAME##7 (S##NAME##7 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6)\t\t\\\n+    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+void checkS##NAME##8 (S##NAME##8 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7) { DEBUG_NL; abort (); } }\t\t\t\\\n+void checkS##NAME##9 (S##NAME##9 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8) { DEBUG_NL; abort (); } }\t\\\n+void checkS##NAME##10 (S##NAME##10 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9)\t\t\\\n+   { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+void checkS##NAME##11 (S##NAME##11 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n+      || x.k != y+10) { DEBUG_NL; abort (); } }\t\t\t\\\n+void checkS##NAME##12 (S##NAME##12 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n+      || x.k != y+10 || x.l != y+11) { DEBUG_NL; abort (); } }\t\\\n+void checkS##NAME##13 (S##NAME##13 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n+      || x.k != y+10 || x.l != y+11 || x.m != y+12)\t\t\\\n+    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+void checkS##NAME##14 (S##NAME##14 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n+      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n+      || x.n != y+13) { DEBUG_NL; abort (); } }\t\t\t\\\n+void checkS##NAME##15 (S##NAME##15 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n+      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n+      || x.n != y+13 || x.o != y+14) { DEBUG_NL; abort (); } }\t\\\n+void checkS##NAME##16 (S##NAME##16 x, TYPEM y)\t\t\t\\\n+{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n+      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n+      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n+      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n+      || x.n != y+13 || x.o != y+14 || x.p != y+15)\t\t\\\n+    { DEBUG_NL; abort (); } }"}, {"sha": "67d63f23b4fddc1f599ec02a1ecb3a25bd0a288e", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-defs.h", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-defs.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,43 @@\n+/* Type definitions that are used by multiple tests.  */\n+\n+#define DEFS(NAME,TYPEM)\t\t\t\t\t\\\n+typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n+\t       S##NAME##4;\t\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n+\t       S##NAME##5;\t\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n+\t       S##NAME##9;\t\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n+\t       S##NAME##10;\t\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n+\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n+\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n+\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n+\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n+\t        S##NAME##14;\t\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n+\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n+\t       S##NAME##15;\t\t\t\t\t\\\n+typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n+\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n+\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n+\t\t TYPEM p; } S##NAME##16;"}, {"sha": "46a0cef1d036f81b5afd0b00903f35c25b908746", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-init.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-init.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-init.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-init.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,54 @@\n+/* Function definitions that are used by multiple tests.  */\n+\n+#define INITS(NAME,TYPEM)\t\t\t\t\t\\\n+void initS##NAME##1 (S##NAME##1 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; }\t\t\t\t\t\t\t\\\n+void initS##NAME##2 (S##NAME##2 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; }\t\t\t\t\t\\\n+void initS##NAME##3 (S##NAME##3 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; }\t\t\t\t\\\n+void initS##NAME##4 (S##NAME##4 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; }\t\t\\\n+void initS##NAME##5 (S##NAME##5 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4; }\t\\\n+void initS##NAME##6 (S##NAME##6 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; }\t\t\t\t\t\t\t\\\n+void initS##NAME##7 (S##NAME##7 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; }\t\t\t\t\t\\\n+void initS##NAME##8 (S##NAME##8 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; }\t\t\t\t\\\n+void initS##NAME##9 (S##NAME##9 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; }\t\t\\\n+void initS##NAME##10 (S##NAME##10 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9; }\t\\\n+void initS##NAME##11 (S##NAME##11 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n+  p->k = y+10; }\t\t\t\t\t\t\\\n+void initS##NAME##12 (S##NAME##12 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n+  p->k = y+10; p->l = y+11; }\t\t\t\t\t\\\n+void initS##NAME##13 (S##NAME##13 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n+  p->k = y+10; p->l = y+11; p->m = y+12; }\t\t\t\\\n+void initS##NAME##14 (S##NAME##14 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n+  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13; }\t\t\\\n+void initS##NAME##15 (S##NAME##15 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n+  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n+  p->o = y+14; }\t\t\t\t\t\t\\\n+void initS##NAME##16 (S##NAME##16 *p, TYPEM y)\t\t\t\\\n+{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n+  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n+  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n+  p->o = y+14; p->p = y+15; }"}, {"sha": "867c75b01cafecf93d31f0d23a05ae03fbc870c5", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-test-by-value-x.h", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-x.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,113 @@\n+#define TEST(TYPE,MTYPE)\t\t\t\t\t\\\n+TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n+TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n+TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\t\\\n+TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##TYPE (TYPE *p, MTYPE x);\t\t\t\\\n+extern void checkg##TYPE (void);\t\t\t\t\\\n+extern void\t\t\t\t\t\t\t\\\n+test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n+\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n+\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n+\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16);\t\t\\\n+extern void testva##TYPE (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test2_##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\\\n+\t      TYPE s5, TYPE s6, TYPE s7, TYPE s8)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  test##TYPE (s1, g2s##TYPE, s2, g4s##TYPE,\t\t\t\\\n+\t      s3, g6s##TYPE, s4, g8s##TYPE,\t\t\t\\\n+\t      s5, g10s##TYPE, s6, g12s##TYPE,\t\t\t\\\n+\t      s7, g14s##TYPE, s8, g16s##TYPE);\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  init##TYPE  ( &g1s##TYPE,  (MTYPE)1);\t\t\t\t\\\n+  init##TYPE  ( &g2s##TYPE,  (MTYPE)2);\t\t\t\t\\\n+  init##TYPE  ( &g3s##TYPE,  (MTYPE)3);\t\t\t\t\\\n+  init##TYPE  ( &g4s##TYPE,  (MTYPE)4);\t\t\t\t\\\n+  init##TYPE  ( &g5s##TYPE,  (MTYPE)5);\t\t\t\t\\\n+  init##TYPE  ( &g6s##TYPE,  (MTYPE)6);\t\t\t\t\\\n+  init##TYPE  ( &g7s##TYPE,  (MTYPE)7);\t\t\t\t\\\n+  init##TYPE  ( &g8s##TYPE,  (MTYPE)8);\t\t\t\t\\\n+  init##TYPE  ( &g9s##TYPE,  (MTYPE)9);\t\t\t\t\\\n+  init##TYPE  (&g10s##TYPE, (MTYPE)10);\t\t\t\t\\\n+  init##TYPE  (&g11s##TYPE, (MTYPE)11);\t\t\t\t\\\n+  init##TYPE  (&g12s##TYPE, (MTYPE)12);\t\t\t\t\\\n+  init##TYPE  (&g13s##TYPE, (MTYPE)13);\t\t\t\t\\\n+  init##TYPE  (&g14s##TYPE, (MTYPE)14);\t\t\t\t\\\n+  init##TYPE  (&g15s##TYPE, (MTYPE)15);\t\t\t\t\\\n+  init##TYPE  (&g16s##TYPE, (MTYPE)16);\t\t\t\t\\\n+  checkg##TYPE ();\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n+  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  testva##TYPE (1,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE);\t\t\t\t\t\\\n+  testva##TYPE (2,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n+  testva##TYPE (3,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n+  testva##TYPE (4,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n+  testva##TYPE (5,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE);\t\t\t\t\t\\\n+  testva##TYPE (6,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n+  testva##TYPE (7,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n+  testva##TYPE (8,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n+  testva##TYPE (9,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE);\t\t\t\t\t\\\n+  testva##TYPE (10,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n+  testva##TYPE (11,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n+  testva##TYPE (12,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n+  testva##TYPE (13,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE);\t\t\t\t\t\\\n+  testva##TYPE (14,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n+  testva##TYPE (15,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n+  testva##TYPE (16,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n+  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n+\t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}"}, {"sha": "89d2faa86186bad307f093583fc4c0a09195c923", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-test-by-value-y.h", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-y.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-y.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-y.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,86 @@\n+#define TEST(TYPE,TYPE2)\t\t\t\t\t\\\n+extern TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n+extern TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n+extern TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\\\n+extern TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##TYPE (TYPE x, TYPE2 y);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##TYPE (  g1s##TYPE,  (TYPE2)1);\t\t\t\t\\\n+  check##TYPE (  g2s##TYPE,  (TYPE2)2);\t\t\t\t\\\n+  check##TYPE (  g3s##TYPE,  (TYPE2)3);\t\t\t\t\\\n+  check##TYPE (  g4s##TYPE,  (TYPE2)4);\t\t\t\t\\\n+  check##TYPE (  g5s##TYPE,  (TYPE2)5);\t\t\t\t\\\n+  check##TYPE (  g6s##TYPE,  (TYPE2)6);\t\t\t\t\\\n+  check##TYPE (  g7s##TYPE,  (TYPE2)7);\t\t\t\t\\\n+  check##TYPE (  g8s##TYPE,  (TYPE2)8);\t\t\t\t\\\n+  check##TYPE (  g9s##TYPE,  (TYPE2)9);\t\t\t\t\\\n+  check##TYPE ( g10s##TYPE, (TYPE2)10);\t\t\t\t\\\n+  check##TYPE ( g11s##TYPE, (TYPE2)11);\t\t\t\t\\\n+  check##TYPE ( g12s##TYPE, (TYPE2)12);\t\t\t\t\\\n+  check##TYPE ( g13s##TYPE, (TYPE2)13);\t\t\t\t\\\n+  check##TYPE ( g14s##TYPE, (TYPE2)14);\t\t\t\t\\\n+  check##TYPE ( g15s##TYPE, (TYPE2)15);\t\t\t\t\\\n+  check##TYPE ( g16s##TYPE, (TYPE2)16);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n+\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n+\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n+\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s1, (TYPE2)1);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s2, (TYPE2)2);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s3, (TYPE2)3);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s4, (TYPE2)4);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s5, (TYPE2)5);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s6, (TYPE2)6);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s7, (TYPE2)7);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s8, (TYPE2)8);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s9, (TYPE2)9);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s10, (TYPE2)10);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s11, (TYPE2)11);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s12, (TYPE2)12);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s13, (TYPE2)13);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s14, (TYPE2)14);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s15, (TYPE2)15);\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n+  check##TYPE (s16, (TYPE2)16);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testva##TYPE (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n+\t  DEBUG_DOT;\t\t\t\t\t\t\\\n+\t  check##TYPE (t, (TYPE2)i+1);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}"}, {"sha": "9ae103f987edbe43b06b0aa02b6aea8dfa435f34", "filename": "gcc/testsuite/gcc.dg/compat/small-struct-check.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-check.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,29 @@\n+/* Function definitions that are used by multiple tests.  */\n+\n+void checkSc (Sc x, int i) { if (x.c != (char)i) { DEBUG_NL; abort (); } }\n+void checkSs (Ss x, int i) { if (x.s != i) { DEBUG_NL; abort (); } }\n+void checkSi (Si x, int i) { if (x.i != i) { DEBUG_NL; abort (); } }\n+void checkSsc (Ssc x, int i)\n+{ if (x.s != i || x.c != (char)i+1) { DEBUG_NL; abort (); } }\n+void checkScs (Scs x, int i)\n+{ if (x.c != (char)i || x.s != i+1) { DEBUG_NL; abort (); } }\n+void checkSsi (Ssi x, int i)\n+{ if (x.s != i || x.i != i+1) { DEBUG_NL; abort (); } }\n+void checkSis (Sis x, int i)\n+{ if (x.i != i || x.s != i+1) { DEBUG_NL; abort (); } }\n+void checkSic (Sic x, int i)\n+{ if (x.i != i || x.c != (char)i+1) { DEBUG_NL; abort (); } }\n+void checkSci (Sci x, int i)\n+{ if (x.c != (char)i || x.i != i+1) { DEBUG_NL; abort (); } }\n+void checkScsi (Scsi x, int i)\n+{ if (x.c != (char)i || x.s != i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+void checkScis (Scis x, int i)\n+{ if (x.c != (char)i || x.i != i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+void checkSsci (Ssci x, int i)\n+{ if (x.s != i || x.c != (char)i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+void checkSsic (Ssic x, int i)\n+{ if (x.s != i || x.i != i+1 || x.c != (char)i+2) { DEBUG_NL; abort (); } }\n+void checkSisc (Sisc x, int i)\n+{ if (x.i != i || x.s != i+1 || x.c != (char)i+2) { DEBUG_NL; abort (); } }\n+void checkSics (Sics x, int i)\n+{ if (x.i != i || x.c != (char)i+1 || x.s != i+2) { DEBUG_NL; abort (); } }"}, {"sha": "1a46b26e805cc1b8cab0265e1517499642cc620b", "filename": "gcc/testsuite/gcc.dg/compat/small-struct-defs.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-defs.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,17 @@\n+/* Type definitions that are used by multiple tests.  */\n+\n+typedef struct { char c; } Sc;\n+typedef struct { short s; } Ss;\n+typedef struct { int i; } Si;\n+typedef struct { short s; char c; } Ssc;\n+typedef struct { char c; short s; } Scs;\n+typedef struct { int i; char c; } Sic;\n+typedef struct { char c; int i; } Sci;\n+typedef struct { short s; int i; } Ssi;\n+typedef struct { int i; short s; } Sis;\n+typedef struct { char c; short s; int i; } Scsi;\n+typedef struct { char c; int i; short s; } Scis;\n+typedef struct { short s; char c; int i; } Ssci;\n+typedef struct { short s; int i; char c; } Ssic;\n+typedef struct { int i; short s; char c; } Sisc;\n+typedef struct { int i; char c; short s; } Sics;"}, {"sha": "97009b6ee3205e943448d0d226769bb83d289a7a", "filename": "gcc/testsuite/gcc.dg/compat/small-struct-init.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-init.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-init.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-init.h?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -0,0 +1,17 @@\n+/* Function definitions that are used by multiple tests.  */\n+\n+void initSc (Sc *p, int i) { p->c = (char)i; }\n+void initSs (Ss *p, int i) { p->s = i; }\n+void initSi (Si *p, int i) { p->i = i; }\n+void initSsc (Ssc *p, int i) { p->s = i; p->c = (char)i+1; }\n+void initScs (Scs *p, int i) { p->c = (char)i; p->s = i+1; }\n+void initSsi (Ssi *p, int i) { p->s = i; p->i = i+1; }\n+void initSis (Sis *p, int i) { p->i = i; p->s = i+1; }\n+void initSic (Sic *p, int i) { p->i = i; p->c = (char)i+1; }\n+void initSci (Sci *p, int i) { p->c = (char)i; p->i = i+1; }\n+void initScsi (Scsi *p, int i) { p->c = (char)i; p->s = i+1; p->i = i+2; }\n+void initScis (Scis *p, int i) { p->c = (char)i; p->i = i+1; p->s = i+2; }\n+void initSsci (Ssci *p, int i) { p->s = i; p->c = (char)i+1; p->i = i+2; }\n+void initSsic (Ssic *p, int i) { p->s = i; p->i = i+1; p->c = (char)i+2; }\n+void initSisc (Sisc *p, int i) { p->i = i; p->s = i+1; p->c = (char)i+2; }\n+void initSics (Sics *p, int i) { p->i = i; p->c = (char)i+1; p->s = i+2; }"}, {"sha": "3eaa03426747a2e6e7d1b8c62f91a39ec0cef737", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_x.c", "status": "modified", "additions": 2, "deletions": 43, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -123,51 +123,10 @@ testit##TYPE (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-typedef struct { char c; } Sc;\n-typedef struct { short s; } Ss;\n-typedef struct { int i; } Si;\n-typedef struct { short s; char c; } Ssc;\n-typedef struct { char c; short s; } Scs;\n-typedef struct { int i; char c; } Sic;\n-typedef struct { char c; int i; } Sci;\n-typedef struct { short s; int i; } Ssi;\n-typedef struct { int i; short s; } Sis;\n-typedef struct { char c; short s; int i; } Scsi;\n-typedef struct { char c; int i; short s; } Scis;\n-typedef struct { short s; char c; int i; } Ssci;\n-typedef struct { short s; int i; char c; } Ssic;\n-typedef struct { int i; short s; char c; } Sisc;\n-typedef struct { int i; char c; short s; } Sics;\n-\n extern void abort (void);\n \n-void checkSc (Sc x, int i) { if (x.c != (char)i) { DEBUG_NL; abort (); } }\n-void checkSs (Ss x, int i) { if (x.s != i) { DEBUG_NL; abort (); } }\n-void checkSi (Si x, int i) { if (x.i != i) { DEBUG_NL; abort (); } }\n-void checkSsc (Ssc x, int i)\n-{ if (x.s != i || x.c != (char)i+1) { DEBUG_NL; abort (); } }\n-void checkScs (Scs x, int i)\n-{ if (x.c != (char)i || x.s != i+1) { DEBUG_NL; abort (); } }\n-void checkSsi (Ssi x, int i)\n-{ if (x.s != i || x.i != i+1) { DEBUG_NL; abort (); } }\n-void checkSis (Sis x, int i)\n-{ if (x.i != i || x.s != i+1) { DEBUG_NL; abort (); } }\n-void checkSic (Sic x, int i)\n-{ if (x.i != i || x.c != (char)i+1) { DEBUG_NL; abort (); } }\n-void checkSci (Sci x, int i)\n-{ if (x.c != (char)i || x.i != i+1) { DEBUG_NL; abort (); } }\n-void checkScsi (Scsi x, int i)\n-{ if (x.c != (char)i || x.s != i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n-void checkScis (Scis x, int i)\n-{ if (x.c != (char)i || x.i != i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n-void checkSsci (Ssci x, int i)\n-{ if (x.s != i || x.c != (char)i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n-void checkSsic (Ssic x, int i)\n-{ if (x.s != i || x.i != i+1 || x.c != (char)i+2) { DEBUG_NL; abort (); } }\n-void checkSisc (Sisc x, int i)\n-{ if (x.i != i || x.s != i+1 || x.c != (char)i+2) { DEBUG_NL; abort (); } }\n-void checkSics (Sics x, int i)\n-{ if (x.i != i || x.c != (char)i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+#include \"small-struct-defs.h\"\n+#include \"small-struct-check.h\"\n \n T(Sc)\n T(Ss)"}, {"sha": "87deacda0b65dc6ddbd522cbcc2629fe75a72e86", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_y.c", "status": "modified", "additions": 2, "deletions": 30, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -18,21 +18,7 @@ const int test_va = 0;\n const int test_va = 1;\n #endif\n \n-typedef struct { char c; } Sc;\n-typedef struct { short s; } Ss;\n-typedef struct { int i; } Si;\n-typedef struct { short s; char c; } Ssc;\n-typedef struct { char c; short s; } Scs;\n-typedef struct { int i; char c; } Sic;\n-typedef struct { char c; int i; } Sci;\n-typedef struct { short s; int i; } Ssi;\n-typedef struct { int i; short s; } Sis;\n-typedef struct { char c; short s; int i; } Scsi;\n-typedef struct { char c; int i; short s; } Scis;\n-typedef struct { short s; char c; int i; } Ssci;\n-typedef struct { short s; int i; char c; } Ssic;\n-typedef struct { int i; short s; char c; } Sisc;\n-typedef struct { int i; char c; short s; } Sics;\n+#include \"small-struct-defs.h\"\n \n extern void checkSc (Sc x, int i);\n extern void checkSs (Ss x, int i);\n@@ -50,21 +36,7 @@ extern void checkSsic (Ssic x, int i);\n extern void checkSisc (Sisc x, int i);\n extern void checkSics (Sics x, int i);\n \n-void initSc (Sc *p, int i) { p->c = (char)i; }\n-void initSs (Ss *p, int i) { p->s = i; }\n-void initSi (Si *p, int i) { p->i = i; }\n-void initSsc (Ssc *p, int i) { p->s = i; p->c = (char)i+1; }\n-void initScs (Scs *p, int i) { p->c = (char)i; p->s = i+1; }\n-void initSsi (Ssi *p, int i) { p->s = i; p->i = i+1; }\n-void initSis (Sis *p, int i) { p->i = i; p->s = i+1; }\n-void initSic (Sic *p, int i) { p->i = i; p->c = (char)i+1; }\n-void initSci (Sci *p, int i) { p->c = (char)i; p->i = i+1; }\n-void initScsi (Scsi *p, int i) { p->c = (char)i; p->s = i+1; p->i = i+2; }\n-void initScis (Scis *p, int i) { p->c = (char)i; p->i = i+1; p->s = i+2; }\n-void initSsci (Ssci *p, int i) { p->s = i; p->c = (char)i+1; p->i = i+2; }\n-void initSsic (Ssic *p, int i) { p->s = i; p->i = i+1; p->c = (char)i+2; }\n-void initSisc (Sisc *p, int i) { p->i = i; p->s = i+1; p->c = (char)i+2; }\n-void initSics (Sics *p, int i) { p->i = i; p->c = (char)i+1; p->s = i+2; }\n+#include \"small-struct-init.h\"\n \n #define T(TYPE)\t\t\t\t\t\t\t\\\n extern TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\"}, {"sha": "69169ca1523d21a817ca4a8460b519b03b14883c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5_x.c", "status": "modified", "additions": 22, "deletions": 242, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_x.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -9,251 +9,31 @@\n #define DEBUG_NL\n #endif\n \n-#define X(NAME,TYPEM)\t\t\t\t\t\t\\\n-typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n-\t       S##NAME##4;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n-\t       S##NAME##5;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n-\t       S##NAME##9;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n-\t       S##NAME##10;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n-\t        S##NAME##14;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n-\t       S##NAME##15;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n-\t\t TYPEM p; } S##NAME##16;\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void checkS##NAME##1 (S##NAME##1 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y) { DEBUG_NL; DEBUG_NL; abort (); } }\t\t\\\n-void checkS##NAME##2 (S##NAME##2 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 ) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##3 (S##NAME##3 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 )\t\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##4 (S##NAME##4 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3)\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##5 (S##NAME##5 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##6 (S##NAME##6 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##7 (S##NAME##7 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##8 (S##NAME##8 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##9 (S##NAME##9 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##10 (S##NAME##10 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9)\t\t\\\n-   { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##11 (S##NAME##11 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##12 (S##NAME##12 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##13 (S##NAME##13 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##14 (S##NAME##14 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##15 (S##NAME##15 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##16 (S##NAME##16 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14 || x.p != y+15)\t\t\\\n-    { DEBUG_NL; abort (); } }\n-\n-#define T(TYPE,MTYPE)\t\t\t\t\t\t\\\n-TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n-TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n-TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\t\\\n-TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-extern void init##TYPE (TYPE *p, MTYPE x);\t\t\t\\\n-extern void checkg##TYPE (void);\t\t\t\t\\\n-extern void\t\t\t\t\t\t\t\\\n-test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n-\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n-\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n-\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16);\t\t\\\n-extern void testva##TYPE (int n, ...);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-test2_##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\\\n-\t      TYPE s5, TYPE s6, TYPE s7, TYPE s8)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  test##TYPE (s1, g2s##TYPE, s2, g4s##TYPE,\t\t\t\\\n-\t      s3, g6s##TYPE, s4, g8s##TYPE,\t\t\t\\\n-\t      s5, g10s##TYPE, s6, g12s##TYPE,\t\t\t\\\n-\t      s7, g14s##TYPE, s8, g16s##TYPE);\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-testit##TYPE (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n-  init##TYPE  ( &g1s##TYPE,  (MTYPE)1);\t\t\t\t\\\n-  init##TYPE  ( &g2s##TYPE,  (MTYPE)2);\t\t\t\t\\\n-  init##TYPE  ( &g3s##TYPE,  (MTYPE)3);\t\t\t\t\\\n-  init##TYPE  ( &g4s##TYPE,  (MTYPE)4);\t\t\t\t\\\n-  init##TYPE  ( &g5s##TYPE,  (MTYPE)5);\t\t\t\t\\\n-  init##TYPE  ( &g6s##TYPE,  (MTYPE)6);\t\t\t\t\\\n-  init##TYPE  ( &g7s##TYPE,  (MTYPE)7);\t\t\t\t\\\n-  init##TYPE  ( &g8s##TYPE,  (MTYPE)8);\t\t\t\t\\\n-  init##TYPE  ( &g9s##TYPE,  (MTYPE)9);\t\t\t\t\\\n-  init##TYPE  (&g10s##TYPE, (MTYPE)10);\t\t\t\t\\\n-  init##TYPE  (&g11s##TYPE, (MTYPE)11);\t\t\t\t\\\n-  init##TYPE  (&g12s##TYPE, (MTYPE)12);\t\t\t\t\\\n-  init##TYPE  (&g13s##TYPE, (MTYPE)13);\t\t\t\t\\\n-  init##TYPE  (&g14s##TYPE, (MTYPE)14);\t\t\t\t\\\n-  init##TYPE  (&g15s##TYPE, (MTYPE)15);\t\t\t\t\\\n-  init##TYPE  (&g16s##TYPE, (MTYPE)16);\t\t\t\t\\\n-  checkg##TYPE ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n-  test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n-  testva##TYPE (1,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (2,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n-  testva##TYPE (3,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n-  testva##TYPE (4,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n-  testva##TYPE (5,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (6,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n-  testva##TYPE (7,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n-  testva##TYPE (8,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n-  testva##TYPE (9,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (10,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n-  testva##TYPE (11,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n-  testva##TYPE (12,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n-  testva##TYPE (13,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (14,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n-  testva##TYPE (15,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n-  testva##TYPE (16,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n-  test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n-\t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n-  DEBUG_NL;\t\t\t\t\t\t\t\\\n-}\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-check.h\"\n+#include \"fp-struct-test-by-value-x.h\"\n \n extern void abort (void);\n \n-X(f, float)\n-\n-T(Sf1, float)\n-T(Sf2, float)\n-T(Sf3, float)\n-T(Sf4, float)\n-T(Sf5, float)\n-T(Sf6, float)\n-T(Sf7, float)\n-T(Sf8, float)\n-T(Sf9, float)\n-T(Sf10, float)\n-T(Sf11, float)\n-T(Sf12, float)\n-T(Sf13, float)\n-T(Sf14, float)\n-T(Sf15, float)\n-T(Sf16, float)\n+DEFS(f, float)\n+CHECKS(f, float)\n+\n+TEST(Sf1, float)\n+TEST(Sf2, float)\n+TEST(Sf3, float)\n+TEST(Sf4, float)\n+TEST(Sf5, float)\n+TEST(Sf6, float)\n+TEST(Sf7, float)\n+TEST(Sf8, float)\n+TEST(Sf9, float)\n+TEST(Sf10, float)\n+TEST(Sf11, float)\n+TEST(Sf12, float)\n+TEST(Sf13, float)\n+TEST(Sf14, float)\n+TEST(Sf15, float)\n+TEST(Sf16, float)\n \n #undef T\n "}, {"sha": "b9702ae28f1c40375c2bee12011b9b916e34abf0", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5_y.c", "status": "modified", "additions": 21, "deletions": 197, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -18,202 +18,26 @@ const int test_va = 0;\n const int test_va = 1;\n #endif\n \n-#define X(NAME,TYPEM)\t\t\t\t\t\t\\\n-typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n-\t       S##NAME##4;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n-\t       S##NAME##5;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n-\t       S##NAME##9;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n-\t       S##NAME##10;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n-\t        S##NAME##14;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n-\t       S##NAME##15;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n-\t\t TYPEM p; } S##NAME##16;\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void initS##NAME##1 (S##NAME##1 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; }\t\t\t\t\t\t\t\\\n-void initS##NAME##2 (S##NAME##2 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; }\t\t\t\t\t\\\n-void initS##NAME##3 (S##NAME##3 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; }\t\t\t\t\\\n-void initS##NAME##4 (S##NAME##4 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; }\t\t\\\n-void initS##NAME##5 (S##NAME##5 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4; }\t\\\n-void initS##NAME##6 (S##NAME##6 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; }\t\t\t\t\t\t\t\\\n-void initS##NAME##7 (S##NAME##7 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; }\t\t\t\t\t\\\n-void initS##NAME##8 (S##NAME##8 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; }\t\t\t\t\\\n-void initS##NAME##9 (S##NAME##9 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; }\t\t\\\n-void initS##NAME##10 (S##NAME##10 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9; }\t\\\n-void initS##NAME##11 (S##NAME##11 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; }\t\t\t\t\t\t\\\n-void initS##NAME##12 (S##NAME##12 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; }\t\t\t\t\t\\\n-void initS##NAME##13 (S##NAME##13 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; }\t\t\t\\\n-void initS##NAME##14 (S##NAME##14 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13; }\t\t\\\n-void initS##NAME##15 (S##NAME##15 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n-  p->o = y+14; }\t\t\t\t\t\t\\\n-void initS##NAME##16 (S##NAME##16 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n-  p->o = y+14; p->p = y+15; }\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-init.h\"\n+#include \"fp-struct-test-by-value-y.h\"\n \n-#define T(TYPE,TYPE2)\t\t\t\t\t\t\\\n-extern TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n-extern TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n-extern TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\\\n-extern TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\\\n-\t\t\t\t\t\t\t\t\\\n-extern void check##TYPE (TYPE x, TYPE2 y);\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-checkg##TYPE (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  check##TYPE (  g1s##TYPE,  (TYPE2)1);\t\t\t\t\\\n-  check##TYPE (  g2s##TYPE,  (TYPE2)2);\t\t\t\t\\\n-  check##TYPE (  g3s##TYPE,  (TYPE2)3);\t\t\t\t\\\n-  check##TYPE (  g4s##TYPE,  (TYPE2)4);\t\t\t\t\\\n-  check##TYPE (  g5s##TYPE,  (TYPE2)5);\t\t\t\t\\\n-  check##TYPE (  g6s##TYPE,  (TYPE2)6);\t\t\t\t\\\n-  check##TYPE (  g7s##TYPE,  (TYPE2)7);\t\t\t\t\\\n-  check##TYPE (  g8s##TYPE,  (TYPE2)8);\t\t\t\t\\\n-  check##TYPE (  g9s##TYPE,  (TYPE2)9);\t\t\t\t\\\n-  check##TYPE ( g10s##TYPE, (TYPE2)10);\t\t\t\t\\\n-  check##TYPE ( g11s##TYPE, (TYPE2)11);\t\t\t\t\\\n-  check##TYPE ( g12s##TYPE, (TYPE2)12);\t\t\t\t\\\n-  check##TYPE ( g13s##TYPE, (TYPE2)13);\t\t\t\t\\\n-  check##TYPE ( g14s##TYPE, (TYPE2)14);\t\t\t\t\\\n-  check##TYPE ( g15s##TYPE, (TYPE2)15);\t\t\t\t\\\n-  check##TYPE ( g16s##TYPE, (TYPE2)16);\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n-\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n-\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n-\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s1, (TYPE2)1);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s2, (TYPE2)2);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s3, (TYPE2)3);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s4, (TYPE2)4);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s5, (TYPE2)5);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s6, (TYPE2)6);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s7, (TYPE2)7);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s8, (TYPE2)8);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s9, (TYPE2)9);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s10, (TYPE2)10);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s11, (TYPE2)11);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s12, (TYPE2)12);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s13, (TYPE2)13);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s14, (TYPE2)14);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s15, (TYPE2)15);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s16, (TYPE2)16);\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-testva##TYPE (int n, ...)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\t\\\n-  va_list ap;\t\t\t\t\t\t\t\\\n-  if (test_va)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      va_start (ap, n);\t\t\t\t\t\t\\\n-      for (i = 0; i < n; i++)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n-\t  check##TYPE (t, (TYPE2)i+1);\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      va_end (ap);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-}\n+DEFS(f,float)\n+INITS(f, float)\n \n-X(f, float)\n-\n-T(Sf1, float)\n-T(Sf2, float)\n-T(Sf3, float)\n-T(Sf4, float)\n-T(Sf5, float)\n-T(Sf6, float)\n-T(Sf7, float)\n-T(Sf8, float)\n-T(Sf9, float)\n-T(Sf10, float)\n-T(Sf11, float)\n-T(Sf12, float)\n-T(Sf13, float)\n-T(Sf14, float)\n-T(Sf15, float)\n-T(Sf16, float)\n+TEST(Sf1, float)\n+TEST(Sf2, float)\n+TEST(Sf3, float)\n+TEST(Sf4, float)\n+TEST(Sf5, float)\n+TEST(Sf6, float)\n+TEST(Sf7, float)\n+TEST(Sf8, float)\n+TEST(Sf9, float)\n+TEST(Sf10, float)\n+TEST(Sf11, float)\n+TEST(Sf12, float)\n+TEST(Sf13, float)\n+TEST(Sf14, float)\n+TEST(Sf15, float)\n+TEST(Sf16, float)"}, {"sha": "4b87017cfebe2f1dc39a33e20b59625149134d02", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6_x.c", "status": "modified", "additions": 22, "deletions": 242, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_x.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -9,251 +9,31 @@\n #define DEBUG_NL\n #endif\n \n-#define X(NAME,TYPEM)\t\t\t\t\t\t\\\n-typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n-\t       S##NAME##4;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n-\t       S##NAME##5;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n-\t       S##NAME##9;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n-\t       S##NAME##10;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n-\t        S##NAME##14;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n-\t       S##NAME##15;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n-\t\t TYPEM p; } S##NAME##16;\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void checkS##NAME##1 (S##NAME##1 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y) { DEBUG_NL; DEBUG_NL; abort (); } }\t\t\\\n-void checkS##NAME##2 (S##NAME##2 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 ) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##3 (S##NAME##3 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 )\t\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##4 (S##NAME##4 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3)\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##5 (S##NAME##5 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##6 (S##NAME##6 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##7 (S##NAME##7 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##8 (S##NAME##8 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##9 (S##NAME##9 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##10 (S##NAME##10 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9)\t\t\\\n-   { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##11 (S##NAME##11 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##12 (S##NAME##12 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##13 (S##NAME##13 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##14 (S##NAME##14 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##15 (S##NAME##15 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##16 (S##NAME##16 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14 || x.p != y+15)\t\t\\\n-    { DEBUG_NL; abort (); } }\n-\n-#define T(TYPE,MTYPE)\t\t\t\t\t\t\\\n-TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n-TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n-TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\t\\\n-TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-extern void init##TYPE (TYPE *p, MTYPE x);\t\t\t\\\n-extern void checkg##TYPE (void);\t\t\t\t\\\n-extern void\t\t\t\t\t\t\t\\\n-test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n-\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n-\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n-\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16);\t\t\\\n-extern void testva##TYPE (int n, ...);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-test2_##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\\\n-\t      TYPE s5, TYPE s6, TYPE s7, TYPE s8)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  test##TYPE (s1, g2s##TYPE, s2, g4s##TYPE,\t\t\t\\\n-\t      s3, g6s##TYPE, s4, g8s##TYPE,\t\t\t\\\n-\t      s5, g10s##TYPE, s6, g12s##TYPE,\t\t\t\\\n-\t      s7, g14s##TYPE, s8, g16s##TYPE);\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-testit##TYPE (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n-  init##TYPE  ( &g1s##TYPE,  (MTYPE)1);\t\t\t\t\\\n-  init##TYPE  ( &g2s##TYPE,  (MTYPE)2);\t\t\t\t\\\n-  init##TYPE  ( &g3s##TYPE,  (MTYPE)3);\t\t\t\t\\\n-  init##TYPE  ( &g4s##TYPE,  (MTYPE)4);\t\t\t\t\\\n-  init##TYPE  ( &g5s##TYPE,  (MTYPE)5);\t\t\t\t\\\n-  init##TYPE  ( &g6s##TYPE,  (MTYPE)6);\t\t\t\t\\\n-  init##TYPE  ( &g7s##TYPE,  (MTYPE)7);\t\t\t\t\\\n-  init##TYPE  ( &g8s##TYPE,  (MTYPE)8);\t\t\t\t\\\n-  init##TYPE  ( &g9s##TYPE,  (MTYPE)9);\t\t\t\t\\\n-  init##TYPE  (&g10s##TYPE, (MTYPE)10);\t\t\t\t\\\n-  init##TYPE  (&g11s##TYPE, (MTYPE)11);\t\t\t\t\\\n-  init##TYPE  (&g12s##TYPE, (MTYPE)12);\t\t\t\t\\\n-  init##TYPE  (&g13s##TYPE, (MTYPE)13);\t\t\t\t\\\n-  init##TYPE  (&g14s##TYPE, (MTYPE)14);\t\t\t\t\\\n-  init##TYPE  (&g15s##TYPE, (MTYPE)15);\t\t\t\t\\\n-  init##TYPE  (&g16s##TYPE, (MTYPE)16);\t\t\t\t\\\n-  checkg##TYPE ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n-  test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n-  testva##TYPE (1,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (2,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n-  testva##TYPE (3,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n-  testva##TYPE (4,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n-  testva##TYPE (5,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (6,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n-  testva##TYPE (7,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n-  testva##TYPE (8,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n-  testva##TYPE (9,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (10,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n-  testva##TYPE (11,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n-  testva##TYPE (12,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n-  testva##TYPE (13,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (14,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n-  testva##TYPE (15,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n-  testva##TYPE (16,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n-  test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n-\t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n-  DEBUG_NL;\t\t\t\t\t\t\t\\\n-}\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-check.h\"\n+#include \"fp-struct-test-by-value-x.h\"\n \n extern void abort (void);\n \n-X(d, double)\n-\n-T(Sd1, double)\n-T(Sd2, double)\n-T(Sd3, double)\n-T(Sd4, double)\n-T(Sd5, double)\n-T(Sd6, double)\n-T(Sd7, double)\n-T(Sd8, double)\n-T(Sd9, double)\n-T(Sd10, double)\n-T(Sd11, double)\n-T(Sd12, double)\n-T(Sd13, double)\n-T(Sd14, double)\n-T(Sd15, double)\n-T(Sd16, double)\n+DEFS(d, double)\n+CHECKS(d, double)\n+\n+TEST(Sd1, double)\n+TEST(Sd2, double)\n+TEST(Sd3, double)\n+TEST(Sd4, double)\n+TEST(Sd5, double)\n+TEST(Sd6, double)\n+TEST(Sd7, double)\n+TEST(Sd8, double)\n+TEST(Sd9, double)\n+TEST(Sd10, double)\n+TEST(Sd11, double)\n+TEST(Sd12, double)\n+TEST(Sd13, double)\n+TEST(Sd14, double)\n+TEST(Sd15, double)\n+TEST(Sd16, double)\n \n #undef T\n "}, {"sha": "49cc5d2211d61a420e6f886ba602c8096cfa3880", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6_y.c", "status": "modified", "additions": 21, "deletions": 197, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -18,202 +18,26 @@ const int test_va = 0;\n const int test_va = 1;\n #endif\n \n-#define X(NAME,TYPEM)\t\t\t\t\t\t\\\n-typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n-\t       S##NAME##4;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n-\t       S##NAME##5;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n-\t       S##NAME##9;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n-\t       S##NAME##10;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n-\t        S##NAME##14;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n-\t       S##NAME##15;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n-\t\t TYPEM p; } S##NAME##16;\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void initS##NAME##1 (S##NAME##1 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; }\t\t\t\t\t\t\t\\\n-void initS##NAME##2 (S##NAME##2 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; }\t\t\t\t\t\\\n-void initS##NAME##3 (S##NAME##3 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; }\t\t\t\t\\\n-void initS##NAME##4 (S##NAME##4 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; }\t\t\\\n-void initS##NAME##5 (S##NAME##5 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4; }\t\\\n-void initS##NAME##6 (S##NAME##6 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; }\t\t\t\t\t\t\t\\\n-void initS##NAME##7 (S##NAME##7 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; }\t\t\t\t\t\\\n-void initS##NAME##8 (S##NAME##8 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; }\t\t\t\t\\\n-void initS##NAME##9 (S##NAME##9 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; }\t\t\\\n-void initS##NAME##10 (S##NAME##10 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9; }\t\\\n-void initS##NAME##11 (S##NAME##11 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; }\t\t\t\t\t\t\\\n-void initS##NAME##12 (S##NAME##12 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; }\t\t\t\t\t\\\n-void initS##NAME##13 (S##NAME##13 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; }\t\t\t\\\n-void initS##NAME##14 (S##NAME##14 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13; }\t\t\\\n-void initS##NAME##15 (S##NAME##15 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n-  p->o = y+14; }\t\t\t\t\t\t\\\n-void initS##NAME##16 (S##NAME##16 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n-  p->o = y+14; p->p = y+15; }\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-init.h\"\n+#include \"fp-struct-test-by-value-y.h\"\n \n-#define T(TYPE,TYPE2)\t\t\t\t\t\t\\\n-extern TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n-extern TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n-extern TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\\\n-extern TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\\\n-\t\t\t\t\t\t\t\t\\\n-extern void check##TYPE (TYPE x, TYPE2 y);\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-checkg##TYPE (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  check##TYPE (  g1s##TYPE,  (TYPE2)1);\t\t\t\t\\\n-  check##TYPE (  g2s##TYPE,  (TYPE2)2);\t\t\t\t\\\n-  check##TYPE (  g3s##TYPE,  (TYPE2)3);\t\t\t\t\\\n-  check##TYPE (  g4s##TYPE,  (TYPE2)4);\t\t\t\t\\\n-  check##TYPE (  g5s##TYPE,  (TYPE2)5);\t\t\t\t\\\n-  check##TYPE (  g6s##TYPE,  (TYPE2)6);\t\t\t\t\\\n-  check##TYPE (  g7s##TYPE,  (TYPE2)7);\t\t\t\t\\\n-  check##TYPE (  g8s##TYPE,  (TYPE2)8);\t\t\t\t\\\n-  check##TYPE (  g9s##TYPE,  (TYPE2)9);\t\t\t\t\\\n-  check##TYPE ( g10s##TYPE, (TYPE2)10);\t\t\t\t\\\n-  check##TYPE ( g11s##TYPE, (TYPE2)11);\t\t\t\t\\\n-  check##TYPE ( g12s##TYPE, (TYPE2)12);\t\t\t\t\\\n-  check##TYPE ( g13s##TYPE, (TYPE2)13);\t\t\t\t\\\n-  check##TYPE ( g14s##TYPE, (TYPE2)14);\t\t\t\t\\\n-  check##TYPE ( g15s##TYPE, (TYPE2)15);\t\t\t\t\\\n-  check##TYPE ( g16s##TYPE, (TYPE2)16);\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n-\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n-\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n-\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s1, (TYPE2)1);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s2, (TYPE2)2);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s3, (TYPE2)3);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s4, (TYPE2)4);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s5, (TYPE2)5);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s6, (TYPE2)6);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s7, (TYPE2)7);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s8, (TYPE2)8);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s9, (TYPE2)9);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s10, (TYPE2)10);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s11, (TYPE2)11);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s12, (TYPE2)12);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s13, (TYPE2)13);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s14, (TYPE2)14);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s15, (TYPE2)15);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s16, (TYPE2)16);\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-testva##TYPE (int n, ...)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\t\\\n-  va_list ap;\t\t\t\t\t\t\t\\\n-  if (test_va)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      va_start (ap, n);\t\t\t\t\t\t\\\n-      for (i = 0; i < n; i++)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n-\t  check##TYPE (t, (TYPE2)i+1);\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      va_end (ap);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-}\n+DEFS(d, double)\n+INITS(d, double)\n \n-X(d, double)\n-\n-T(Sd1, double)\n-T(Sd2, double)\n-T(Sd3, double)\n-T(Sd4, double)\n-T(Sd5, double)\n-T(Sd6, double)\n-T(Sd7, double)\n-T(Sd8, double)\n-T(Sd9, double)\n-T(Sd10, double)\n-T(Sd11, double)\n-T(Sd12, double)\n-T(Sd13, double)\n-T(Sd14, double)\n-T(Sd15, double)\n-T(Sd16, double)\n+TEST(Sd1, double)\n+TEST(Sd2, double)\n+TEST(Sd3, double)\n+TEST(Sd4, double)\n+TEST(Sd5, double)\n+TEST(Sd6, double)\n+TEST(Sd7, double)\n+TEST(Sd8, double)\n+TEST(Sd9, double)\n+TEST(Sd10, double)\n+TEST(Sd11, double)\n+TEST(Sd12, double)\n+TEST(Sd13, double)\n+TEST(Sd14, double)\n+TEST(Sd15, double)\n+TEST(Sd16, double)"}, {"sha": "7f9d09a9d65d2f58554586d3548fd71b5ce4aed4", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7_x.c", "status": "modified", "additions": 22, "deletions": 242, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_x.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -9,251 +9,31 @@\n #define DEBUG_NL\n #endif\n \n-#define X(NAME,TYPEM)\t\t\t\t\t\t\\\n-typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n-\t       S##NAME##4;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n-\t       S##NAME##5;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n-\t       S##NAME##9;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n-\t       S##NAME##10;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n-\t        S##NAME##14;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n-\t       S##NAME##15;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n-\t\t TYPEM p; } S##NAME##16;\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void checkS##NAME##1 (S##NAME##1 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y) { DEBUG_NL; DEBUG_NL; abort (); } }\t\t\\\n-void checkS##NAME##2 (S##NAME##2 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 ) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##3 (S##NAME##3 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 )\t\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##4 (S##NAME##4 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3)\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##5 (S##NAME##5 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##6 (S##NAME##6 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##7 (S##NAME##7 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##8 (S##NAME##8 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##9 (S##NAME##9 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##10 (S##NAME##10 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9)\t\t\\\n-   { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##11 (S##NAME##11 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##12 (S##NAME##12 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##13 (S##NAME##13 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n-void checkS##NAME##14 (S##NAME##14 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13) { DEBUG_NL; abort (); } }\t\t\t\\\n-void checkS##NAME##15 (S##NAME##15 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14) { DEBUG_NL; abort (); } }\t\\\n-void checkS##NAME##16 (S##NAME##16 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14 || x.p != y+15)\t\t\\\n-    { DEBUG_NL; abort (); } }\n-\n-#define T(TYPE,MTYPE)\t\t\t\t\t\t\\\n-TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n-TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n-TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\t\\\n-TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-extern void init##TYPE (TYPE *p, MTYPE x);\t\t\t\\\n-extern void checkg##TYPE (void);\t\t\t\t\\\n-extern void\t\t\t\t\t\t\t\\\n-test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n-\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n-\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n-\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16);\t\t\\\n-extern void testva##TYPE (int n, ...);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-test2_##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\\\n-\t      TYPE s5, TYPE s6, TYPE s7, TYPE s8)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  test##TYPE (s1, g2s##TYPE, s2, g4s##TYPE,\t\t\t\\\n-\t      s3, g6s##TYPE, s4, g8s##TYPE,\t\t\t\\\n-\t      s5, g10s##TYPE, s6, g12s##TYPE,\t\t\t\\\n-\t      s7, g14s##TYPE, s8, g16s##TYPE);\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-testit##TYPE (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n-  init##TYPE  ( &g1s##TYPE,  (MTYPE)1);\t\t\t\t\\\n-  init##TYPE  ( &g2s##TYPE,  (MTYPE)2);\t\t\t\t\\\n-  init##TYPE  ( &g3s##TYPE,  (MTYPE)3);\t\t\t\t\\\n-  init##TYPE  ( &g4s##TYPE,  (MTYPE)4);\t\t\t\t\\\n-  init##TYPE  ( &g5s##TYPE,  (MTYPE)5);\t\t\t\t\\\n-  init##TYPE  ( &g6s##TYPE,  (MTYPE)6);\t\t\t\t\\\n-  init##TYPE  ( &g7s##TYPE,  (MTYPE)7);\t\t\t\t\\\n-  init##TYPE  ( &g8s##TYPE,  (MTYPE)8);\t\t\t\t\\\n-  init##TYPE  ( &g9s##TYPE,  (MTYPE)9);\t\t\t\t\\\n-  init##TYPE  (&g10s##TYPE, (MTYPE)10);\t\t\t\t\\\n-  init##TYPE  (&g11s##TYPE, (MTYPE)11);\t\t\t\t\\\n-  init##TYPE  (&g12s##TYPE, (MTYPE)12);\t\t\t\t\\\n-  init##TYPE  (&g13s##TYPE, (MTYPE)13);\t\t\t\t\\\n-  init##TYPE  (&g14s##TYPE, (MTYPE)14);\t\t\t\t\\\n-  init##TYPE  (&g15s##TYPE, (MTYPE)15);\t\t\t\t\\\n-  init##TYPE  (&g16s##TYPE, (MTYPE)16);\t\t\t\t\\\n-  checkg##TYPE ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n-  test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n-  testva##TYPE (1,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (2,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n-  testva##TYPE (3,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n-  testva##TYPE (4,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n-  testva##TYPE (5,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (6,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n-  testva##TYPE (7,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n-  testva##TYPE (8,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n-  testva##TYPE (9,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (10,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n-  testva##TYPE (11,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n-  testva##TYPE (12,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n-  testva##TYPE (13,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE);\t\t\t\t\t\\\n-  testva##TYPE (14,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n-  testva##TYPE (15,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n-  testva##TYPE (16,\t\t\t\t\t\t\\\n-\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n-\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n-\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n-\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n-  test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n-\t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n-  DEBUG_NL;\t\t\t\t\t\t\t\\\n-}\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-check.h\"\n+#include \"fp-struct-test-by-value-x.h\"\n \n extern void abort (void);\n \n-X(ld, long double)\n-\n-T(Sld1, long double)\n-T(Sld2, long double)\n-T(Sld3, long double)\n-T(Sld4, long double)\n-T(Sld5, long double)\n-T(Sld6, long double)\n-T(Sld7, long double)\n-T(Sld8, long double)\n-T(Sld9, long double)\n-T(Sld10, long double)\n-T(Sld11, long double)\n-T(Sld12, long double)\n-T(Sld13, long double)\n-T(Sld14, long double)\n-T(Sld15, long double)\n-T(Sld16, long double)\n+DEFS(ld, long double)\n+CHECKS(ld, long double)\n+\n+TEST(Sld1, long double)\n+TEST(Sld2, long double)\n+TEST(Sld3, long double)\n+TEST(Sld4, long double)\n+TEST(Sld5, long double)\n+TEST(Sld6, long double)\n+TEST(Sld7, long double)\n+TEST(Sld8, long double)\n+TEST(Sld9, long double)\n+TEST(Sld10, long double)\n+TEST(Sld11, long double)\n+TEST(Sld12, long double)\n+TEST(Sld13, long double)\n+TEST(Sld14, long double)\n+TEST(Sld15, long double)\n+TEST(Sld16, long double)\n \n #undef T\n "}, {"sha": "bccff5decd9a329253f58c13aa0183d5d1019d66", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7_y.c", "status": "modified", "additions": 21, "deletions": 197, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737a52d03639a15f3fa1acbe63945d97976c08c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c?ref=f737a52d03639a15f3fa1acbe63945d97976c08c", "patch": "@@ -18,202 +18,26 @@ const int test_va = 0;\n const int test_va = 1;\n #endif\n \n-#define X(NAME,TYPEM)\t\t\t\t\t\t\\\n-typedef struct { TYPEM a; } S##NAME##1;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; } S##NAME##2;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; } S##NAME##3;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; }\t\t\\\n-\t       S##NAME##4;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e; }\t\\\n-\t       S##NAME##5;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-  \t\t TYPEM f; } S##NAME##6;\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; } S##NAME##7;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; } S##NAME##8;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; }\t\t\\\n-\t       S##NAME##9;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j; }\t\\\n-\t       S##NAME##10;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; } S##NAME##11;\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; } S##NAME##12;\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; } S##NAME##13;\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; }\t\t\\\n-\t        S##NAME##14;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o; }\t\\\n-\t       S##NAME##15;\t\t\t\t\t\\\n-typedef struct { TYPEM a; TYPEM b; TYPEM c; TYPEM d; TYPEM e;\t\\\n-\t\t TYPEM f; TYPEM g; TYPEM h; TYPEM i; TYPEM j;\t\\\n-\t\t TYPEM k; TYPEM l; TYPEM m; TYPEM n; TYPEM o;\t\\\n-\t\t TYPEM p; } S##NAME##16;\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void initS##NAME##1 (S##NAME##1 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; }\t\t\t\t\t\t\t\\\n-void initS##NAME##2 (S##NAME##2 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; }\t\t\t\t\t\\\n-void initS##NAME##3 (S##NAME##3 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; }\t\t\t\t\\\n-void initS##NAME##4 (S##NAME##4 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; }\t\t\\\n-void initS##NAME##5 (S##NAME##5 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4; }\t\\\n-void initS##NAME##6 (S##NAME##6 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; }\t\t\t\t\t\t\t\\\n-void initS##NAME##7 (S##NAME##7 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; }\t\t\t\t\t\\\n-void initS##NAME##8 (S##NAME##8 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; }\t\t\t\t\\\n-void initS##NAME##9 (S##NAME##9 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; }\t\t\\\n-void initS##NAME##10 (S##NAME##10 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9; }\t\\\n-void initS##NAME##11 (S##NAME##11 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; }\t\t\t\t\t\t\\\n-void initS##NAME##12 (S##NAME##12 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; }\t\t\t\t\t\\\n-void initS##NAME##13 (S##NAME##13 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; }\t\t\t\\\n-void initS##NAME##14 (S##NAME##14 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13; }\t\t\\\n-void initS##NAME##15 (S##NAME##15 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n-  p->o = y+14; }\t\t\t\t\t\t\\\n-void initS##NAME##16 (S##NAME##16 *p, TYPEM y)\t\t\t\\\n-{ p->a = y; p->b = y+1; p->c = y+2; p->d = y+3; p->e = y+4;\t\\\n-  p->f = y+5; p->g = y+6; p->h = y+7; p->i = y+8; p->j = y+9;\t\\\n-  p->k = y+10; p->l = y+11; p->m = y+12; p->n = y+13;\t\t\\\n-  p->o = y+14; p->p = y+15; }\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-init.h\"\n+#include \"fp-struct-test-by-value-y.h\"\n \n-#define T(TYPE,TYPE2)\t\t\t\t\t\t\\\n-extern TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n-extern TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n-extern TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\\\n-extern TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\\\n-\t\t\t\t\t\t\t\t\\\n-extern void check##TYPE (TYPE x, TYPE2 y);\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-checkg##TYPE (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  check##TYPE (  g1s##TYPE,  (TYPE2)1);\t\t\t\t\\\n-  check##TYPE (  g2s##TYPE,  (TYPE2)2);\t\t\t\t\\\n-  check##TYPE (  g3s##TYPE,  (TYPE2)3);\t\t\t\t\\\n-  check##TYPE (  g4s##TYPE,  (TYPE2)4);\t\t\t\t\\\n-  check##TYPE (  g5s##TYPE,  (TYPE2)5);\t\t\t\t\\\n-  check##TYPE (  g6s##TYPE,  (TYPE2)6);\t\t\t\t\\\n-  check##TYPE (  g7s##TYPE,  (TYPE2)7);\t\t\t\t\\\n-  check##TYPE (  g8s##TYPE,  (TYPE2)8);\t\t\t\t\\\n-  check##TYPE (  g9s##TYPE,  (TYPE2)9);\t\t\t\t\\\n-  check##TYPE ( g10s##TYPE, (TYPE2)10);\t\t\t\t\\\n-  check##TYPE ( g11s##TYPE, (TYPE2)11);\t\t\t\t\\\n-  check##TYPE ( g12s##TYPE, (TYPE2)12);\t\t\t\t\\\n-  check##TYPE ( g13s##TYPE, (TYPE2)13);\t\t\t\t\\\n-  check##TYPE ( g14s##TYPE, (TYPE2)14);\t\t\t\t\\\n-  check##TYPE ( g15s##TYPE, (TYPE2)15);\t\t\t\t\\\n-  check##TYPE ( g16s##TYPE, (TYPE2)16);\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n-\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n-\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n-\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s1, (TYPE2)1);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s2, (TYPE2)2);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s3, (TYPE2)3);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s4, (TYPE2)4);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s5, (TYPE2)5);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s6, (TYPE2)6);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s7, (TYPE2)7);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s8, (TYPE2)8);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s9, (TYPE2)9);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s10, (TYPE2)10);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s11, (TYPE2)11);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s12, (TYPE2)12);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s13, (TYPE2)13);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s14, (TYPE2)14);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s15, (TYPE2)15);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n-  check##TYPE (s16, (TYPE2)16);\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-testva##TYPE (int n, ...)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  int i;\t\t\t\t\t\t\t\\\n-  va_list ap;\t\t\t\t\t\t\t\\\n-  if (test_va)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      va_start (ap, n);\t\t\t\t\t\t\\\n-      for (i = 0; i < n; i++)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n-\t  check##TYPE (t, (TYPE2)i+1);\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      va_end (ap);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-}\n+DEFS(ld, long double)\n+INITS(ld, long double)\n \n-X(ld, long double)\n-\n-T(Sld1, long double)\n-T(Sld2, long double)\n-T(Sld3, long double)\n-T(Sld4, long double)\n-T(Sld5, long double)\n-T(Sld6, long double)\n-T(Sld7, long double)\n-T(Sld8, long double)\n-T(Sld9, long double)\n-T(Sld10, long double)\n-T(Sld11, long double)\n-T(Sld12, long double)\n-T(Sld13, long double)\n-T(Sld14, long double)\n-T(Sld15, long double)\n-T(Sld16, long double)\n+TEST(Sld1, long double)\n+TEST(Sld2, long double)\n+TEST(Sld3, long double)\n+TEST(Sld4, long double)\n+TEST(Sld5, long double)\n+TEST(Sld6, long double)\n+TEST(Sld7, long double)\n+TEST(Sld8, long double)\n+TEST(Sld9, long double)\n+TEST(Sld10, long double)\n+TEST(Sld11, long double)\n+TEST(Sld12, long double)\n+TEST(Sld13, long double)\n+TEST(Sld14, long double)\n+TEST(Sld15, long double)\n+TEST(Sld16, long double)"}]}