{"sha": "0fba41e0f0b1fd1db24709577564866dec047c3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiYTQxZTBmMGIxZmQxZGIyNDcwOTU3NzU2NDg2NmRlYzA0N2MzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-21T16:58:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-21T16:58:04Z"}, "message": "utf-array.c: Allow wchar_t to be printed as {long ,short ,}{unsigned ,}int.\n\n\t* gcc.dg/utf-array.c: Allow wchar_t to be printed as\n\t{long ,short ,}{unsigned ,}int.\n\nFrom-SVN: r268117", "tree": {"sha": "13c0eff29162bc6032ead88620f8b5455c682f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13c0eff29162bc6032ead88620f8b5455c682f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fba41e0f0b1fd1db24709577564866dec047c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fba41e0f0b1fd1db24709577564866dec047c3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fba41e0f0b1fd1db24709577564866dec047c3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fba41e0f0b1fd1db24709577564866dec047c3b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2197ea1791698761983e0b8a7b3d6d2b50f87d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2197ea1791698761983e0b8a7b3d6d2b50f87d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2197ea1791698761983e0b8a7b3d6d2b50f87d1f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "653f35532143a683bb7e642198b1763eb1a56df9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fba41e0f0b1fd1db24709577564866dec047c3b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fba41e0f0b1fd1db24709577564866dec047c3b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fba41e0f0b1fd1db24709577564866dec047c3b", "patch": "@@ -1,3 +1,8 @@\n+2019-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/utf-array.c: Allow wchar_t to be printed as\n+\t{long ,short ,}{unsigned ,}int.\n+\n 2019-01-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88934"}, {"sha": "8687989a0613010bf8459ff2ffbe3d290aacea5e", "filename": "gcc/testsuite/gcc.dg/utf-array.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fba41e0f0b1fd1db24709577564866dec047c3b/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fba41e0f0b1fd1db24709577564866dec047c3b/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c?ref=0fba41e0f0b1fd1db24709577564866dec047c3b", "patch": "@@ -12,13 +12,13 @@ typedef __CHAR32_TYPE__\tchar32_t;\n const char\ts_0[]\t= \"ab\";\n const char\ts_1[]\t= u\"ab\";\t/* { dg-error \"from a string literal with type array of\" } */\n const char\ts_2[]\t= U\"ab\";\t/* { dg-error \"from a string literal with type array of\" } */\n-const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from a string literal with type array of .int.\" } */\n+const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from a string literal with type array of .(long |short )?(unsigned )?int.\" } */\n const char\ts_4[]\t= u8\"ab\";\n \n const char16_t\ts16_0[]\t= \"ab\";\t\t/* { dg-error \"from a string literal with type array of .char.\" } */\n const char16_t\ts16_1[]\t= u\"ab\";\n const char16_t\ts16_2[]\t= U\"ab\";\t/* { dg-error \"from a string literal with type array of\" } */\n-const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from a string literal with type array of .int.\" \"\" { target { ! wchar_t_char16_t_compatible } } } */\n+const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from a string literal with type array of .(long |short )?(unsigned )?int.\" \"\" { target { ! wchar_t_char16_t_compatible } } } */\n const char16_t\ts16_4[]\t= u8\"ab\";\t/* { dg-error \"from a string literal with type array of .char.\" } */\n \n const char16_t\ts16_5[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n@@ -30,7 +30,7 @@ const char16_t\ts16_9[4] = u\"ab\";\n const char32_t\ts32_0[]\t= \"ab\";\t\t/* { dg-error \"from a string literal with type array of .char.\" } */\n const char32_t\ts32_1[]\t= u\"ab\";\t/* { dg-error \"from a string literal with type array of\" } */\n const char32_t\ts32_2[]\t= U\"ab\";\n-const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from a string literal with type array of .int.\" \"\" { target { ! wchar_t_char32_t_compatible } } } */\n+const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from a string literal with type array of .(long |short )?(unsigned )?int.\" \"\" { target { ! wchar_t_char32_t_compatible } } } */\n const char32_t\ts32_4[]\t= u8\"ab\";\t/* { dg-error \"from a string literal with type array of .char.\" } */\n \n const char32_t\ts32_5[0] = U\"ab\";\t/* { dg-warning \"chars is too long\" } */"}]}