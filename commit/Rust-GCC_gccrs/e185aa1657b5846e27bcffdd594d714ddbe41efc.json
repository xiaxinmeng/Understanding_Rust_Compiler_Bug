{"sha": "e185aa1657b5846e27bcffdd594d714ddbe41efc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE4NWFhMTY1N2I1ODQ2ZTI3YmNmZmRkNTk0ZDcxNGRkYmU0MWVmYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-03-01T05:45:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-01T05:45:44Z"}, "message": "search.c (protected_accessible_p): Use context_for_name_lookup.\n\n        * search.c (protected_accessible_p): Use context_for_name_lookup.\n\n        * typeck.c (expand_ptrmemfunc_cst): Fix thinko.\n\nFrom-SVN: r32275", "tree": {"sha": "17b7f5a85f5ee1692fabd3285d77a64d835d413f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b7f5a85f5ee1692fabd3285d77a64d835d413f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e185aa1657b5846e27bcffdd594d714ddbe41efc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e185aa1657b5846e27bcffdd594d714ddbe41efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e185aa1657b5846e27bcffdd594d714ddbe41efc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e185aa1657b5846e27bcffdd594d714ddbe41efc/comments", "author": null, "committer": null, "parents": [{"sha": "ba412f14ad13a1e71af1aebe1ee97c6591e1f12e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba412f14ad13a1e71af1aebe1ee97c6591e1f12e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba412f14ad13a1e71af1aebe1ee97c6591e1f12e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "aec6e4ef168151e43a91f4b0347d8ed01cd082fe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e185aa1657b5846e27bcffdd594d714ddbe41efc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e185aa1657b5846e27bcffdd594d714ddbe41efc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e185aa1657b5846e27bcffdd594d714ddbe41efc", "patch": "@@ -1,6 +1,9 @@\n 2000-02-29  Jason Merrill  <jason@casey.cygnus.com>\n \n+\t* search.c (protected_accessible_p): Use context_for_name_lookup.\n+\n \t* init.c (construct_virtual_bases): Fix thinko.\n+\t* typeck.c (expand_ptrmemfunc_cst): Fix thinko.\n \n 2000-03-01  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n "}, {"sha": "56917eb374f064aa2e72a5e8fcda14095e5cfdab", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e185aa1657b5846e27bcffdd594d714ddbe41efc/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e185aa1657b5846e27bcffdd594d714ddbe41efc/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=e185aa1657b5846e27bcffdd594d714ddbe41efc", "patch": "@@ -997,7 +997,7 @@ protected_accessible_p (decl, derived, binfo)\n     member of a base.  (jason 2000/02/28)  */\n \n   /* If DERIVED isn't derived from m's class, then it can't be a P.  */\n-  if (!DERIVED_FROM_P (DECL_CONTEXT (decl), derived))\n+  if (!DERIVED_FROM_P (context_for_name_lookup (decl), derived))\n     return 0;\n \n   access = access_in_type (derived, decl);"}, {"sha": "ceed9c56a333dfbdfe623d950b9f9ed9a5e3c191", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e185aa1657b5846e27bcffdd594d714ddbe41efc/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e185aa1657b5846e27bcffdd594d714ddbe41efc/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e185aa1657b5846e27bcffdd594d714ddbe41efc", "patch": "@@ -6324,7 +6324,7 @@ expand_ptrmemfunc_cst (cst, delta, idx, pfn, delta2)\n   if (!DECL_VIRTUAL_P (fn))\n     {\n       if (!flag_new_abi)\n-\t*idx = convert (TYPE_PTRMEMFUNC_FN_TYPE (type), build_int_2 (-1, -1));\n+\t*idx = build_int_2 (-1, -1);\n       else\n \t*idx = NULL_TREE;\n       *pfn = convert (TYPE_PTRMEMFUNC_FN_TYPE (type), build_addr_func (fn));"}]}