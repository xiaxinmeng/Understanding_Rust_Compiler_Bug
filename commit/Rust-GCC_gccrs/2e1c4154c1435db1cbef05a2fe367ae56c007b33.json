{"sha": "2e1c4154c1435db1cbef05a2fe367ae56c007b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxYzQxNTRjMTQzNWRiMWNiZWYwNWEyZmUzNjdhZTU2YzAwN2IzMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T23:04:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T23:04:34Z"}, "message": "More comment tweaks.\n\nFrom-SVN: r17525", "tree": {"sha": "736d34ff954b4da5c1b562a18aebfb44559535c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/736d34ff954b4da5c1b562a18aebfb44559535c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e1c4154c1435db1cbef05a2fe367ae56c007b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1c4154c1435db1cbef05a2fe367ae56c007b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1c4154c1435db1cbef05a2fe367ae56c007b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1c4154c1435db1cbef05a2fe367ae56c007b33/comments", "author": null, "committer": null, "parents": [{"sha": "ef14509b910d35d8111d2bd7a503272279e6cf01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef14509b910d35d8111d2bd7a503272279e6cf01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef14509b910d35d8111d2bd7a503272279e6cf01"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "5e40acd3a54fa78537a71eb28100412534e190bb", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1c4154c1435db1cbef05a2fe367ae56c007b33/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1c4154c1435db1cbef05a2fe367ae56c007b33/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=2e1c4154c1435db1cbef05a2fe367ae56c007b33", "patch": "@@ -379,6 +379,8 @@\n \t{\n \t  /* Try to use auto-inc addressing if we can.  */\n \t  if (GET_CODE (XEXP (operands[1], 0)) == REG\n+\t    /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n+\t       because the REG_DEAD notes are not maintained after reload.  */\n \t      && dead_or_set_p (insn, XEXP (operands[1], 0)))\n \t    {\n \t      operands[1] = XEXP (operands[1], 0);\n@@ -389,6 +391,8 @@\n     case 3 :\n       /* Try to use auto-inc addressing if we can.  */\n       if (GET_CODE (XEXP (operands[0], 0)) == REG\n+\t  /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n+\t     because the REG_DEAD notes are not maintained after reload.  */\n \t  && dead_or_set_p (insn, XEXP (operands[0], 0)))\n \t{\n \t  operands[0] = XEXP (operands[0], 0);\n@@ -530,6 +534,8 @@\n \t{\n \t  /* Try to use auto-inc addressing if we can.  */\n \t  if (GET_CODE (XEXP (operands[1], 0)) == REG\n+\t      /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n+\t\t because the REG_DEAD notes are not maintained after reload.  */\n \t      && dead_or_set_p (insn, XEXP (operands[1], 0)))\n \t    {\n \t      operands[1] = XEXP (operands[1], 0);\n@@ -540,6 +546,8 @@\n     case 3 :\n       /* Try to use auto-inc addressing if we can.  */\n       if (GET_CODE (XEXP (operands[0], 0)) == REG\n+\t  /* ??? This is WRONG, dead_or_set_p cannot be used after reload\n+\t     because the REG_DEAD notes are not maintained after reload.  */\n \t  && dead_or_set_p (insn, XEXP (operands[0], 0)))\n \t{\n \t  operands[0] = XEXP (operands[0], 0);"}]}