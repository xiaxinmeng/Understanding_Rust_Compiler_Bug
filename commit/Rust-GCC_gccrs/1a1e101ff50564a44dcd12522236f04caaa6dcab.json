{"sha": "1a1e101ff50564a44dcd12522236f04caaa6dcab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExZTEwMWZmNTA1NjRhNDRkY2QxMjUyMjIzNmYwNGNhYWE2ZGNhYg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-08-02T17:35:33Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-08-02T17:35:33Z"}, "message": "Remove is_first_nonwhitespace_on_line(), instead improve get_visual_column()\n\ngcc/c-family/ChangeLog:\n\n\t* c-indentation.c (get_visual_column): Add parameter first_nws,\n\tuse it.  Update comment documenting the function.\n\t(is_first_nonwhitespace_on_line): Remove.\n\t(should_warn_for_misleading_indentation): Replace usage of\n\tof is_first_nonwhitespace_on_line with get_visual_column.\n\nFrom-SVN: r226478", "tree": {"sha": "00619fb5fac630edad177b21a9a582673145f26c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00619fb5fac630edad177b21a9a582673145f26c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a1e101ff50564a44dcd12522236f04caaa6dcab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1e101ff50564a44dcd12522236f04caaa6dcab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a1e101ff50564a44dcd12522236f04caaa6dcab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1e101ff50564a44dcd12522236f04caaa6dcab/comments", "author": null, "committer": null, "parents": [{"sha": "992118a1f9192614d3916e112e3e9a833d00566c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992118a1f9192614d3916e112e3e9a833d00566c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992118a1f9192614d3916e112e3e9a833d00566c"}], "stats": {"total": 61, "additions": 32, "deletions": 29}, "files": [{"sha": "bb74de9935aad163ff4ec7093dc29f34377dedd1", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a1e101ff50564a44dcd12522236f04caaa6dcab/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a1e101ff50564a44dcd12522236f04caaa6dcab/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1a1e101ff50564a44dcd12522236f04caaa6dcab", "patch": "@@ -1,3 +1,11 @@\n+2015-08-02  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\t* c-indentation.c (get_visual_column): Add parameter first_nws,\n+\tuse it.  Update comment documenting the function.\n+\t(is_first_nonwhitespace_on_line): Remove.\n+\t(should_warn_for_misleading_indentation): Replace usage of\n+\tof is_first_nonwhitespace_on_line with get_visual_column.\n+\n 2015-08-02  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* c-indentation.h (struct token_indent_info): Define."}, {"sha": "cdf0372aed34f77b21e27fde5be0352ac37dc785", "filename": "gcc/c-family/c-indentation.c", "status": "modified", "additions": 24, "deletions": 29, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a1e101ff50564a44dcd12522236f04caaa6dcab/gcc%2Fc-family%2Fc-indentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a1e101ff50564a44dcd12522236f04caaa6dcab/gcc%2Fc-family%2Fc-indentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-indentation.c?ref=1a1e101ff50564a44dcd12522236f04caaa6dcab", "patch": "@@ -33,11 +33,16 @@ extern cpp_options *cpp_opts;\n /* Convert libcpp's notion of a column (a 1-based char count) to\n    the \"visual column\" (0-based column, respecting tabs), by reading the\n    relevant line.\n+\n    Returns true if a conversion was possible, writing the result to OUT,\n-   otherwise returns false.  */\n+   otherwise returns false.  If FIRST_NWS is not NULL, then write to it\n+   the visual column corresponding to the first non-whitespace character\n+   on the line.  */\n \n static bool\n-get_visual_column (expanded_location exploc, unsigned int *out)\n+get_visual_column (expanded_location exploc,\n+\t\t   unsigned int *out,\n+\t\t   unsigned int *first_nws = NULL)\n {\n   int line_len;\n   const char *line = location_get_source_line (exploc, &line_len);\n@@ -47,6 +52,13 @@ get_visual_column (expanded_location exploc, unsigned int *out)\n   for (int i = 1; i < exploc.column; i++)\n     {\n       unsigned char ch = line[i - 1];\n+\n+      if (first_nws != NULL && !ISSPACE (ch))\n+\t{\n+\t  *first_nws = vis_column;\n+\t  first_nws = NULL;\n+\t}\n+\n       if (ch == '\\t')\n        {\n \t /* Round up to nearest tab stop. */\n@@ -57,33 +69,10 @@ get_visual_column (expanded_location exploc, unsigned int *out)\n        vis_column++;\n     }\n \n-  *out = vis_column;\n-  return true;\n-}\n-\n-/* Is the token at LOC the first non-whitespace on its line?\n-   Helper function for should_warn_for_misleading_indentation.  */\n+  if (first_nws != NULL)\n+    *first_nws = vis_column;\n \n-static bool\n-is_first_nonwhitespace_on_line (expanded_location exploc)\n-{\n-  int line_len;\n-  const char *line = location_get_source_line (exploc, &line_len);\n-\n-   /* If we can't determine it, return false so that we don't issue a\n-      warning.  This is sometimes the case for input files\n-      containing #line directives, and these are often for autogenerated\n-      sources (e.g. from .md files), where it's not clear that it's\n-      meaningful to look at indentation.  */\n-  if (!line)\n-    return false;\n-\n-  for (int i = 1; i < exploc.column; i++)\n-    {\n-      unsigned char ch = line[i - 1];\n-      if (!ISSPACE (ch))\n-\treturn false;\n-    }\n+  *out = vis_column;\n   return true;\n }\n \n@@ -279,9 +268,15 @@ should_warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n \t  /* They're all on the same line.  */\n \t  gcc_assert (guard_exploc.file == next_stmt_exploc.file);\n \t  gcc_assert (guard_exploc.line == next_stmt_exploc.line);\n+\t  unsigned int guard_vis_column;\n+\t  unsigned int guard_line_first_nws;\n+\t  if (!get_visual_column (guard_exploc,\n+\t\t\t\t  &guard_vis_column,\n+\t\t\t\t  &guard_line_first_nws))\n+\t    return false;\n \t  /* Heuristic: only warn if the guard is the first thing\n \t     on its line.  */\n-\t  if (is_first_nonwhitespace_on_line (guard_exploc))\n+\t  if (guard_vis_column == guard_line_first_nws)\n \t    return true;\n \t}\n     }"}]}