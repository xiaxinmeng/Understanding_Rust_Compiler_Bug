{"sha": "505a36f95b00543a758ab4b56c1f4bf89df4a992", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1YTM2Zjk1YjAwNTQzYTc1OGFiNGI1NmMxZjRiZjg5ZGY0YTk5Mg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-02-24T07:00:35Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-24T07:00:35Z"}, "message": "[multiple changes]\n\n2010-02-24  Tobias Burnus  <burnus@net-b.de>              \n\n        PR fortran/43042\n        * trans-expr.c (gfc_conv_initializer): Call directly\n        gfc_conv_constant for C_NULL_(FUN)PTR.              \n\n2010-02-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/43042\n        * gfortran.dg/c_ptr_tests_15.f90: New test.\n\nFrom-SVN: r157029", "tree": {"sha": "c8589d2efe95338294877bc2f18d928392f02cb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8589d2efe95338294877bc2f18d928392f02cb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/505a36f95b00543a758ab4b56c1f4bf89df4a992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505a36f95b00543a758ab4b56c1f4bf89df4a992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505a36f95b00543a758ab4b56c1f4bf89df4a992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505a36f95b00543a758ab4b56c1f4bf89df4a992/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8a06a82310d287e2521263a3489206a862a1224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a06a82310d287e2521263a3489206a862a1224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a06a82310d287e2521263a3489206a862a1224"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "af4bf20d3f480b397db1f4e5cb3ce26194104cd8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=505a36f95b00543a758ab4b56c1f4bf89df4a992", "patch": "@@ -1,3 +1,9 @@\n+2010-02-24  Tobias Burnus  <burnus@net-b.de>              \n+\n+\tPR fortran/43042\n+\t* trans-expr.c (gfc_conv_initializer): Call directly\n+\tgfc_conv_constant for C_NULL_(FUN)PTR.              \n+\n 2010-02-22  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/43072"}, {"sha": "ecb577a2e449e1f467d06dfc0c16cb622b1d429b", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=505a36f95b00543a758ab4b56c1f4bf89df4a992", "patch": "@@ -3949,6 +3949,10 @@ gfc_conv_initializer (gfc_expr * expr, gfc_typespec * ts, tree type,\n \t its kind.  */\n       expr->ts.f90_type = derived->ts.f90_type;\n       expr->ts.kind = derived->ts.kind;\n+\n+      gfc_init_se (&se, NULL);\n+      gfc_conv_constant (&se, expr);\n+      return se.expr;\n     }\n   \n   if (array)"}, {"sha": "4acf55730cc18bf9e62bc26d49148c6398b67836", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=505a36f95b00543a758ab4b56c1f4bf89df4a992", "patch": "@@ -1,3 +1,8 @@\n+2010-02-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/43042\n+\t* gfortran.dg/c_ptr_tests_15.f90: New test.\n+\n 2010-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/43107"}, {"sha": "1ce0c15fdfd62bc1639c27eba5632ee7d3bd6478", "filename": "gcc/testsuite/gfortran.dg/c_ptr_tests_15.f90", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505a36f95b00543a758ab4b56c1f4bf89df4a992/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_15.f90?ref=505a36f95b00543a758ab4b56c1f4bf89df4a992", "patch": "@@ -0,0 +1,53 @@\n+! { dg-do compile }\n+! { dg-options \"-fwhole-file -fdump-tree-original\" }\n+!\n+! PR fortran/43042 - fix ICE with c_null_ptr when using\n+! -fwhole-file (or -flto, which implies -fwhole-file).\n+!\n+! Testcase based on c_ptr_tests_14.f90  (PR fortran/41298)\n+! Check that c_null_ptr default initializer is really applied\n+\n+module m\n+  use iso_c_binding\n+  type, public :: fgsl_file\n+     type(c_ptr)    :: gsl_file = c_null_ptr\n+     type(c_funptr) :: gsl_func = c_null_funptr\n+     type(c_ptr)    :: NIptr\n+     type(c_funptr) :: NIfunptr\n+  end type fgsl_file\n+contains\n+  subroutine sub(aaa,bbb)\n+    type(fgsl_file), intent(out)   :: aaa\n+    type(fgsl_file), intent(inout) :: bbb\n+  end subroutine\n+  subroutine proc() bind(C)\n+  end subroutine proc\n+end module m\n+\n+program test\n+  use m\n+  implicit none\n+  type(fgsl_file) :: file, noreinit\n+  integer, target :: tgt\n+\n+  call sub(file, noreinit)\n+  if(c_associated(file%gsl_file)) call abort()\n+  if(c_associated(file%gsl_func)) call abort()\n+\n+  file%gsl_file = c_loc(tgt)\n+  file%gsl_func = c_funloc(proc)\n+  call sub(file, noreinit)\n+  if(c_associated(file%gsl_file)) call abort()\n+  if(c_associated(file%gsl_func)) call abort()\n+end program test\n+\n+! { dg-final { scan-tree-dump-times \"gsl_file = 0B\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"gsl_func = 0B\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"NIptr = 0B\"    0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"NIfunptr = 0B\" 0 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"bbb =\" 0 \"original\" } }\n+\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+! { dg-final { cleanup-modules \"m\" } }"}]}