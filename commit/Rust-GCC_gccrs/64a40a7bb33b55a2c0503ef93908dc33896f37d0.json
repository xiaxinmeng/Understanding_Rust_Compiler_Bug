{"sha": "64a40a7bb33b55a2c0503ef93908dc33896f37d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRhNDBhN2JiMzNiNTVhMmMwNTAzZWY5MzkwOGRjMzM4OTZmMzdkMA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-05-22T12:51:34Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-05-22T12:51:34Z"}, "message": "[ARM] Handle UNSPEC_VOLATILE in rtx costs and don't recurse inside the unspec\n\n\t* config/arm/arm.c (arm_new_rtx_costs): Handle UNSPEC_VOLATILE.\n\t(arm_unspec_cost): Allow UNSPEC_VOLATILE.  Do not recurse inside\n\tunknown unspecs.\n\nFrom-SVN: r223558", "tree": {"sha": "883b209962e26a8e15ad7e3ba443c92811764197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/883b209962e26a8e15ad7e3ba443c92811764197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64a40a7bb33b55a2c0503ef93908dc33896f37d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a40a7bb33b55a2c0503ef93908dc33896f37d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a40a7bb33b55a2c0503ef93908dc33896f37d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a40a7bb33b55a2c0503ef93908dc33896f37d0/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57d22af251655cc429d5dec2f6234f33a3c2d8c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d22af251655cc429d5dec2f6234f33a3c2d8c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d22af251655cc429d5dec2f6234f33a3c2d8c9"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "2b04e563d26451860eb4fb2dc3ce2167f076da79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40a7bb33b55a2c0503ef93908dc33896f37d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40a7bb33b55a2c0503ef93908dc33896f37d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64a40a7bb33b55a2c0503ef93908dc33896f37d0", "patch": "@@ -1,3 +1,9 @@\n+2015-05-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_new_rtx_costs): Handle UNSPEC_VOLATILE.\n+\t(arm_unspec_cost): Allow UNSPEC_VOLATILE.  Do not recurse inside\n+\tunknown unspecs.\n+\n 2015-05-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66251"}, {"sha": "fa9543138bcc60490f4e0bbf31e10caeff58c7e5", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a40a7bb33b55a2c0503ef93908dc33896f37d0/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a40a7bb33b55a2c0503ef93908dc33896f37d0/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=64a40a7bb33b55a2c0503ef93908dc33896f37d0", "patch": "@@ -9253,7 +9253,8 @@ static bool\n arm_unspec_cost (rtx x, enum rtx_code /* outer_code */, bool speed_p, int *cost)\n {\n   const struct cpu_cost_table *extra_cost = current_tune->insn_extra_cost;\n-  gcc_assert (GET_CODE (x) == UNSPEC);\n+  rtx_code code = GET_CODE (x);\n+  gcc_assert (code == UNSPEC || code == UNSPEC_VOLATILE);\n \n   switch (XINT (x, 1))\n     {\n@@ -9299,7 +9300,7 @@ arm_unspec_cost (rtx x, enum rtx_code /* outer_code */, bool speed_p, int *cost)\n       *cost = COSTS_N_INSNS (2);\n       break;\n     }\n-  return false;\n+  return true;\n }\n \n /* Cost of a libcall.  We assume one insn per argument, an amount for the\n@@ -10855,6 +10856,7 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n       *cost = LIBCALL_COST (1);\n       return false;\n \n+    case UNSPEC_VOLATILE:\n     case UNSPEC:\n       return arm_unspec_cost (x, outer_code, speed_p, cost);\n "}]}