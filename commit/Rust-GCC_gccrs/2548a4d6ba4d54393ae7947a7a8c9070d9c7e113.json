{"sha": "2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0OGE0ZDZiYTRkNTQzOTNhZTc5NDdhN2E4YzkwNzBkOWM3ZTExMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-08-14T11:51:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-08-14T11:51:18Z"}, "message": "any (any::operator=(const any&)): Move check for self-assignment.\n\n\t* include/experimental/any (any::operator=(const any&)): Move check\n\tfor self-assignment.\n\t(any::operator=(any&&)): Add check for self-assignment.\n\t(any::operator=(_ValueType&&)): Constrain template argument.\n\t(any::swap(any&)): Add check for self-swap.\n\t* testsuite/experimental/any/assign/self.cc: Test move and swap.\n\t* testsuite/experimental/any/misc/any_cast_neg.cc: Update dg-error.\n\nFrom-SVN: r226894", "tree": {"sha": "632465c942818a2b37b76a4879f691df51e00467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/632465c942818a2b37b76a4879f691df51e00467"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "357c9f7edc4154418f9862652b53fa8321e91d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357c9f7edc4154418f9862652b53fa8321e91d22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357c9f7edc4154418f9862652b53fa8321e91d22"}], "stats": {"total": 125, "additions": 94, "deletions": 31}, "files": [{"sha": "0753951ef72bfd7b777cb2d0292664db75555af6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "patch": "@@ -1,3 +1,13 @@\n+2015-08-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/experimental/any (any::operator=(const any&)): Move check\n+\tfor self-assignment.\n+\t(any::operator=(any&&)): Add check for self-assignment.\n+\t(any::operator=(_ValueType&&)): Constrain template argument.\n+\t(any::swap(any&)): Add check for self-swap.\n+\t* testsuite/experimental/any/assign/self.cc: Test move and swap.\n+\t* testsuite/experimental/any/misc/any_cast_neg.cc: Update dg-error.\n+\n 2015-08-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/array: Add feature-test macro."}, {"sha": "dae82b56e2f1531034ec6d5308b8f7207d0b844b", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 30, "deletions": 29, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "patch": "@@ -175,12 +175,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     /// Copy the state of another object.\n     any& operator=(const any& __rhs)\n     {\n-      if (this == &__rhs)\n-\treturn *this;\n-\n       if (__rhs.empty())\n \tclear();\n-      else\n+      else if (this != &__rhs)\n \t{\n \t  if (!empty())\n \t    _M_manager(_Op_destroy, this, nullptr);\n@@ -200,7 +197,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       if (__rhs.empty())\n \tclear();\n-      else\n+      else if (this != &__rhs)\n \t{\n \t  if (!empty())\n \t    _M_manager(_Op_destroy, this, nullptr);\n@@ -213,7 +210,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /// Store a copy of @p __rhs as the contained object.\n     template<typename _ValueType>\n-      any& operator=(_ValueType&& __rhs)\n+      enable_if_t<!is_same<any, decay_t<_ValueType>>::value, any&>\n+      operator=(_ValueType&& __rhs)\n       {\n \t*this = any(std::forward<_ValueType>(__rhs));\n \treturn *this;\n@@ -233,30 +231,33 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /// Exchange state with another object.\n     void swap(any& __rhs) noexcept\n-      {\n-\tif (empty() && __rhs.empty())\n-\t  return;\n+    {\n+      if (empty() && __rhs.empty())\n+\treturn;\n \n-\tif (!empty() && !__rhs.empty())\n-\t  {\n-\t    any __tmp;\n-\t    _Arg __arg;\n-\t    __arg._M_any = &__tmp;\n-\t    __rhs._M_manager(_Op_xfer, &__rhs, &__arg);\n-\t    __arg._M_any = &__rhs;\n-\t    _M_manager(_Op_xfer, this, &__arg);\n-\t    __arg._M_any = this;\n-\t    __tmp._M_manager(_Op_xfer, &__tmp, &__arg);\n-\t  }\n-\telse\n-\t  {\n-\t    any* __empty = empty() ? this : &__rhs;\n-\t    any* __full = empty() ? &__rhs : this;\n-\t    _Arg __arg;\n-\t    __arg._M_any = __empty;\n-\t    __full->_M_manager(_Op_xfer, __full, &__arg);\n-\t  }\n-      }\n+      if (!empty() && !__rhs.empty())\n+\t{\n+\t  if (this == &__rhs)\n+\t    return;\n+\n+\t  any __tmp;\n+\t  _Arg __arg;\n+\t  __arg._M_any = &__tmp;\n+\t  __rhs._M_manager(_Op_xfer, &__rhs, &__arg);\n+\t  __arg._M_any = &__rhs;\n+\t  _M_manager(_Op_xfer, this, &__arg);\n+\t  __arg._M_any = this;\n+\t  __tmp._M_manager(_Op_xfer, &__tmp, &__arg);\n+\t}\n+      else\n+\t{\n+\t  any* __empty = empty() ? this : &__rhs;\n+\t  any* __full = empty() ? &__rhs : this;\n+\t  _Arg __arg;\n+\t  __arg._M_any = __empty;\n+\t  __full->_M_manager(_Op_xfer, __full, &__arg);\n+\t}\n+    }\n \n     // observers\n "}, {"sha": "79c6f0f784dca5750e4fb29b6067e8437e0c6655", "filename": "libstdc++-v3/testsuite/experimental/any/assign/self.cc", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fassign%2Fself.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fassign%2Fself.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fassign%2Fself.cc?ref=2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "patch": "@@ -18,8 +18,17 @@\n // { dg-options \"-std=gnu++14\" }\n \n #include <experimental/any>\n+#include <set>\n #include <testsuite_hooks.h>\n \n+std::set<const void*> live_objects;\n+\n+struct A {\n+  A() { live_objects.insert(this); }\n+  ~A() { live_objects.erase(this); }\n+  A(const A& a) { VERIFY(live_objects.count(&a)); live_objects.insert(this); }\n+};\n+\n void\n test01()\n {\n@@ -29,13 +38,56 @@ test01()\n   a = a;\n   VERIFY( a.empty() );\n \n-  a = 1;\n+  a = A{};\n   a = a;\n   VERIFY( !a.empty() );\n+\n+  a.clear();\n+  VERIFY( live_objects.empty() );\n+}\n+\n+void\n+test02()\n+{\n+  using std::experimental::any;\n+\n+  struct X {\n+    any a;\n+  };\n+\n+  X x;\n+  std::swap(x, x); // results in \"self-move-assignment\" of X::a\n+  VERIFY( x.a.empty() );\n+\n+  x.a = A{};\n+  std::swap(x, x); // results in \"self-move-assignment\" of X::a\n+  VERIFY( !x.a.empty() );\n+\n+  x.a.clear();\n+  VERIFY( live_objects.empty() );\n+}\n+\n+void\n+test03()\n+{\n+  using std::experimental::any;\n+\n+  any a;\n+  a.swap(a);\n+  VERIFY( a.empty() );\n+\n+  a = A{};\n+  a.swap(a);\n+  VERIFY( !a.empty() );\n+\n+  a.clear();\n+  VERIFY( live_objects.empty() );\n }\n \n int\n main()\n {\n   test01();\n+  test02();\n+  test03();\n }"}, {"sha": "1d1180c36db1d252dc28061f7913a49c1c301ed1", "filename": "libstdc++-v3/testsuite/experimental/any/misc/any_cast_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2548a4d6ba4d54393ae7947a7a8c9070d9c7e113/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc?ref=2548a4d6ba4d54393ae7947a7a8c9070d9c7e113", "patch": "@@ -26,5 +26,5 @@ void test01()\n   using std::experimental::any_cast;\n \n   const any y(1);\n-  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 359 }\n+  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 360 }\n }"}]}