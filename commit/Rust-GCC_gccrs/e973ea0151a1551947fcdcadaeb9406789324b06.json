{"sha": "e973ea0151a1551947fcdcadaeb9406789324b06", "node_id": "C_kwDOANBUbNoAKGU5NzNlYTAxNTFhMTU1MTk0N2ZjZGNhZGFlYjk0MDY3ODkzMjRiMDY", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2022-07-12T09:34:31Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-02T07:34:06Z"}, "message": "[Ada] Fix proof of runtime unit System.Exp_Mod\n\nRegain the proof of System.Exp_Mod after changes in provers and Why3.\n\ngcc/ada/\n\n\t* libgnat/s-expmod.adb (Lemma_Add_Mod): Add new lemma to factor\n\tout a complex sub-proof.\n\t(Exp_Modular): Add assertion to help proof.", "tree": {"sha": "6ecc4ac659c302648e363988a210fed016cab833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ecc4ac659c302648e363988a210fed016cab833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e973ea0151a1551947fcdcadaeb9406789324b06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e973ea0151a1551947fcdcadaeb9406789324b06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e973ea0151a1551947fcdcadaeb9406789324b06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e973ea0151a1551947fcdcadaeb9406789324b06/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf52ee6a4f86cbd60770fc22ad5abce0f437762a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf52ee6a4f86cbd60770fc22ad5abce0f437762a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf52ee6a4f86cbd60770fc22ad5abce0f437762a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "f1fdf71207406f1d737befe054395f29e190a37a", "filename": "gcc/ada/libgnat/s-expmod.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e973ea0151a1551947fcdcadaeb9406789324b06/gcc%2Fada%2Flibgnat%2Fs-expmod.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e973ea0151a1551947fcdcadaeb9406789324b06/gcc%2Fada%2Flibgnat%2Fs-expmod.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-expmod.adb?ref=e973ea0151a1551947fcdcadaeb9406789324b06", "patch": "@@ -106,6 +106,13 @@ is\n    -------------------\n \n    procedure Lemma_Add_Mod (X, Y : Big_Natural; B : Big_Positive) is\n+\n+      procedure Lemma_Euclidean_Mod (Q, F, R : Big_Natural) with\n+        Pre  => F /= 0,\n+        Post => (Q * F + R) mod F = R mod F;\n+\n+      procedure Lemma_Euclidean_Mod (Q, F, R : Big_Natural) is null;\n+\n       Left  : constant Big_Natural := (X + Y) mod B;\n       Right : constant Big_Natural := ((X mod B) + (Y mod B)) mod B;\n       XQuot : constant Big_Natural := X / B;\n@@ -119,6 +126,8 @@ is\n            (Left = ((XQuot + YQuot) * B + X mod B + Y mod B) mod B);\n          pragma Assert (X mod B + Y mod B = AQuot * B + Right);\n          pragma Assert (Left = ((XQuot + YQuot + AQuot) * B + Right) mod B);\n+         Lemma_Euclidean_Mod (XQuot + YQuot + AQuot, B, Right);\n+         pragma Assert (Left = (Right mod B));\n          pragma Assert (Left = Right);\n       end if;\n    end Lemma_Add_Mod;\n@@ -259,6 +268,7 @@ is\n                pragma Assert (Equal_Modulo\n                  ((Big (Result) * Big (Factor)) * Big (Factor) ** (Exp - 1),\n                   Big (Left) ** Right));\n+               pragma Assert (Big (Factor) >= 0);\n                Lemma_Mult_Mod (Big (Result) * Big (Factor),\n                                   Big (Factor) ** (Exp - 1),\n                                   Big (Modulus));"}]}