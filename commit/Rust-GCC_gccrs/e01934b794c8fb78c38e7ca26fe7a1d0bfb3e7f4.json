{"sha": "e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAxOTM0Yjc5NGM4ZmI3OGMzOGU3Y2EyNmZlN2ExZDBiZmIzZTdmNA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2012-07-16T12:08:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-16T12:08:15Z"}, "message": "s-crtl.ads (mkdir): New routine, support encoding.\n\n2012-07-16  Pascal Obry  <obry@adacore.com>\n\n\t* s-crtl.ads (mkdir): New routine, support encoding.\n\t* adaint.h (__gnat_mkdir): Update spec to pass encoding.\n\t* mkdir.c (__gnat_mkdir): Add encoding parameter.\n\t* a-direct.adb (Create_Directory): Use CRTL.mkdir, parse encoding\n\tin form parameter.\n\t* g-dirope.adb (Make_Dir): Update to pass encoding parameter.\n\n2012-07-16  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c: Minor reformatting.\n\nFrom-SVN: r189525", "tree": {"sha": "01a0aa956e0bec26306264620b0673966f28bab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a0aa956e0bec26306264620b0673966f28bab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a1c57d3cd31878f465b077491e9c4e47a44f813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1c57d3cd31878f465b077491e9c4e47a44f813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1c57d3cd31878f465b077491e9c4e47a44f813"}], "stats": {"total": 88, "additions": 65, "deletions": 23}, "files": [{"sha": "4ccf4dcf60ac17b72375b0ea10c84e337b227dd5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -1,3 +1,16 @@\n+2012-07-16  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-crtl.ads (mkdir): New routine, support encoding.\n+\t* adaint.h (__gnat_mkdir): Update spec to pass encoding.\n+\t* mkdir.c (__gnat_mkdir): Add encoding parameter.\n+\t* a-direct.adb (Create_Directory): Use CRTL.mkdir, parse encoding\n+\tin form parameter.\n+\t* g-dirope.adb (Make_Dir): Update to pass encoding parameter.\n+\n+2012-07-16  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c: Minor reformatting.\n+\n 2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* gcc-interface/utils.c: Include timevar.h."}, {"sha": "42a19b0be896784190544d799d9f21c09864a7c9", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 33, "deletions": 12, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -395,13 +395,8 @@ package body Ada.Directories is\n      (New_Directory : String;\n       Form          : String := \"\")\n    is\n-      pragma Unreferenced (Form);\n-\n       C_Dir_Name : constant String := New_Directory & ASCII.NUL;\n \n-      function mkdir (Dir_Name : String) return Integer;\n-      pragma Import (C, mkdir, \"__gnat_mkdir\");\n-\n    begin\n       --  First, the invalid case\n \n@@ -410,10 +405,37 @@ package body Ada.Directories is\n            \"invalid new directory path name \"\"\" & New_Directory & '\"';\n \n       else\n-         if mkdir (C_Dir_Name) /= 0 then\n-            raise Use_Error with\n-              \"creation of new directory \"\"\" & New_Directory & \"\"\" failed\";\n-         end if;\n+         --  Acquire setting of encoding parameter\n+\n+         declare\n+            Formstr  : constant String := To_Lower (Form);\n+\n+            Encoding : CRTL.Filename_Encoding;\n+            --  Filename encoding specified into the form parameter\n+\n+            V1, V2   : Natural;\n+\n+         begin\n+            Form_Parameter (Formstr, \"encoding\", V1, V2);\n+\n+            if V1 = 0 then\n+               Encoding := CRTL.Unspecified;\n+\n+            elsif Formstr (V1 .. V2) = \"utf8\" then\n+               Encoding := CRTL.UTF8;\n+\n+            elsif Formstr (V1 .. V2) = \"8bits\" then\n+               Encoding := CRTL.ASCII_8bits;\n+\n+            else\n+               raise Use_Error with \"invalid Form\";\n+            end if;\n+\n+            if CRTL.mkdir (C_Dir_Name, Encoding) /= 0 then\n+               raise Use_Error with\n+                 \"creation of new directory \"\"\" & New_Directory & \"\"\" failed\";\n+            end if;\n+         end;\n       end if;\n    end Create_Directory;\n \n@@ -425,8 +447,6 @@ package body Ada.Directories is\n      (New_Directory : String;\n       Form          : String := \"\")\n    is\n-      pragma Unreferenced (Form);\n-\n       New_Dir : String (1 .. New_Directory'Length + 1);\n       Last    : Positive := 1;\n       Start   : Positive := 1;\n@@ -487,7 +507,8 @@ package body Ada.Directories is\n                     \"file \"\"\" & New_Dir (1 .. Last) & \"\"\" already exists\";\n \n                else\n-                  Create_Directory (New_Directory => New_Dir (1 .. Last));\n+                  Create_Directory\n+                    (New_Directory => New_Dir (1 .. Last), Form => Form);\n                end if;\n             end if;\n          end loop;"}, {"sha": "1b65024b9432dbb552ff699e6438fda68b65165d", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -80,10 +80,10 @@ extern \"C\" {\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n-\n #include <sys/stat.h>\n #include <fcntl.h>\n #include <time.h>\n+\n #ifdef VMS\n #include <unixio.h>\n #endif"}, {"sha": "6097e61f8823aa12e9b48ba89a1b244e73f2877a", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -120,7 +120,7 @@ extern int    __gnat_symlink                       (char *, char *);\n extern int    __gnat_try_lock                      (char *, char *);\n extern int    __gnat_open_new                      (char *, int);\n extern int    __gnat_open_new_temp\t\t   (char *, int);\n-extern int    __gnat_mkdir\t\t\t   (char *);\n+extern int    __gnat_mkdir\t\t\t   (char *, int);\n extern int    __gnat_stat\t\t\t   (char *,\n \t\t\t\t\t\t    GNAT_STRUCT_STAT *);\n extern int    __gnat_unlink                        (char *);"}, {"sha": "e38481c8d14f24d1f6ec00a91f5810942ef57534", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2010, AdaCore                     --\n+--                     Copyright (C) 1998-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -605,11 +605,8 @@ package body GNAT.Directory_Operations is\n    procedure Make_Dir (Dir_Name : Dir_Name_Str) is\n       C_Dir_Name : constant String := Dir_Name & ASCII.NUL;\n \n-      function mkdir (Dir_Name : String) return Integer;\n-      pragma Import (C, mkdir, \"__gnat_mkdir\");\n-\n    begin\n-      if mkdir (C_Dir_Name) /= 0 then\n+      if CRTL.mkdir (C_Dir_Name, Unspecified) /= 0 then\n          raise Directory_Error;\n       end if;\n    end Make_Dir;"}, {"sha": "b8dba597240c3f799d31c985f7da27a8226522ef", "filename": "gcc/ada/mkdir.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fmkdir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fmkdir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmkdir.c?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *             Copyright (C) 2002-2009, Free Software Foundation, Inc.      *\n+ *             Copyright (C) 2002-2012, Free Software Foundation, Inc.      *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -58,14 +58,20 @@\n /*  This function provides a portable binding to the mkdir function.  */\n \n int\n-__gnat_mkdir (char *dir_name)\n+__gnat_mkdir (char *dir_name, int encoding ATTRIBUTE_UNUSED)\n {\n #if defined (__vxworks) && !(defined (__RTP__) && (_WRS_VXWORKS_MINOR != 0))\n   return mkdir (dir_name);\n #elif defined (__MINGW32__)\n   TCHAR wname [GNAT_MAX_PATH_LEN + 2];\n \n-  S2WSC (wname, dir_name, GNAT_MAX_PATH_LEN + 2);\n+  if (encoding == Encoding_Unspecified)\n+    S2WSC (wname, dir_name, GNAT_MAX_PATH_LEN);\n+  else if (encoding == Encoding_UTF8)\n+    S2WSU (wname, dir_name, GNAT_MAX_PATH_LEN);\n+  else\n+    S2WS (wname, dir_name, GNAT_MAX_PATH_LEN);\n+\n   return _tmkdir (wname);\n #else\n   return mkdir (dir_name, S_IRWXU | S_IRWXG | S_IRWXO);"}, {"sha": "c02d23023ebe66bacc858c7b46a228dc35a1342b", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=e01934b794c8fb78c38e7ca26fe7a1d0bfb3e7f4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -165,6 +165,11 @@ package System.CRTL is\n    function chdir (dir_name : String) return int;\n    pragma Import (C, chdir, \"__gnat_chdir\");\n \n+   function mkdir\n+     (dir_name : String;\n+      encoding : Filename_Encoding := Unspecified) return int;\n+   pragma Import (C, mkdir, \"__gnat_mkdir\");\n+\n    function setvbuf\n      (stream : FILEs;\n       buffer : chars;"}]}