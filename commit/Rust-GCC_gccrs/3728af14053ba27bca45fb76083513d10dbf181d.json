{"sha": "3728af14053ba27bca45fb76083513d10dbf181d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcyOGFmMTQwNTNiYTI3YmNhNDVmYjc2MDgzNTEzZDEwZGJmMTgxZA==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2011-01-06T21:42:53Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2011-01-06T21:42:53Z"}, "message": "re PR fortran/47195 (New Fortran test failures)\n\n2011-01-06  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/47195\n\t* gfortran.dg/interface_33.f90: Fixed dg-error declarations.\n\t* gfortran.dg/defined_operators_1.f90: Split the subroutine\n\tfrom the interface of functions to not hide the errors that\n\tshall be tested.\n\nFrom-SVN: r168554", "tree": {"sha": "9bf7708a4c185a39ba14dcf2557f5aae7ae19b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bf7708a4c185a39ba14dcf2557f5aae7ae19b9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3728af14053ba27bca45fb76083513d10dbf181d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3728af14053ba27bca45fb76083513d10dbf181d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3728af14053ba27bca45fb76083513d10dbf181d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3728af14053ba27bca45fb76083513d10dbf181d/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1a973d838b24e8a78ea0b6b4336d7c961e42b7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a973d838b24e8a78ea0b6b4336d7c961e42b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a973d838b24e8a78ea0b6b4336d7c961e42b7a"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "0a1c3d0de06f1c6cfbff9207a4334acf945b08ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3728af14053ba27bca45fb76083513d10dbf181d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3728af14053ba27bca45fb76083513d10dbf181d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3728af14053ba27bca45fb76083513d10dbf181d", "patch": "@@ -1,3 +1,11 @@\n+2011-01-06  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/47195\n+\t* gfortran.dg/interface_33.f90: Fixed dg-error declarations.\n+\t* gfortran.dg/defined_operators_1.f90: Split the subroutine\n+\tfrom the interface of functions to not hide the errors that\n+\tshall be tested.\n+\n 2011-01-06  Jan Hubicka  <jh@suse.cz>\n \n \t* testsuite/gcc.dg/lto/pr47188_0.c: New testcase."}, {"sha": "c7868d14c6cce9227e731ee3d8269d7832d7ae9e", "filename": "gcc/testsuite/gfortran.dg/defined_operators_1.f90", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3728af14053ba27bca45fb76083513d10dbf181d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_operators_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3728af14053ba27bca45fb76083513d10dbf181d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_operators_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_operators_1.f90?ref=3728af14053ba27bca45fb76083513d10dbf181d", "patch": "@@ -17,10 +17,21 @@ function foo_chr (chr) ! { dg-error \"cannot be assumed character length\" }\n        character(*) :: foo_chr\n        character(*), intent(in) :: chr\n      end function foo_chr\n+  end interface\n+\n+  !\n+  ! PR fortran/33117\n+  ! PR fortran/46478\n+  ! Mixing FUNCTIONs and SUBROUTINEs in an INTERFACE hides the\n+  ! errors that should be tested here. Hence split out subroutine\n+  ! to test separately.\n+  !\n+  interface operator (.bar.)\n      subroutine bad_foo (chr) ! { dg-error \"must be a FUNCTION\" }\n        character(*), intent(in) :: chr\n      end subroutine bad_foo\n   end interface\n+\n contains\n   function foo_0 () ! { dg-error \"must have at least one argument\" }\n     integer :: foo_1"}, {"sha": "955d50731bc73bdd41ab77036133effaca984b74", "filename": "gcc/testsuite/gfortran.dg/interface_33.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3728af14053ba27bca45fb76083513d10dbf181d/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_33.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3728af14053ba27bca45fb76083513d10dbf181d/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_33.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_33.f90?ref=3728af14053ba27bca45fb76083513d10dbf181d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do \"compile\" }\n+! { dg-do compile }\n !\n ! PR fortran/33117, PR fortran/46478\n ! Procedures of a generic interface must be either\n@@ -10,7 +10,7 @@\n !\n module m1\n   interface gen\n-    subroutine sub()            ! dg-error { \"all SUBROUTINEs or all FUNCTIONs\" }\n+    subroutine sub()            ! { dg-error \"all SUBROUTINEs or all FUNCTIONs\" }\n     end subroutine sub\n     function bar()\n       real :: bar\n@@ -27,7 +27,7 @@ MODULE m2\n     MODULE PROCEDURE subr_name\n   END INTERFACE\n CONTAINS\n-   LOGICAL FUNCTION func_name()  ! dg-error { \"all SUBROUTINEs or all FUNCTIONs\" }\n+   LOGICAL FUNCTION func_name()  ! { dg-error \"all SUBROUTINEs or all FUNCTIONs\" }\n    END FUNCTION\n    SUBROUTINE subr_name()\n    END SUBROUTINE"}]}