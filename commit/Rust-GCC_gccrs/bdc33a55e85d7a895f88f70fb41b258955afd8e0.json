{"sha": "bdc33a55e85d7a895f88f70fb41b258955afd8e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRjMzNhNTVlODVkN2E4OTVmODhmNzBmYjQxYjI1ODk1NWFmZDhlMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T09:07:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T09:07:31Z"}, "message": "2008-08-04  Doug Rupp  <rupp@adacore.com>\n\n\t* gcc-interface/utils2.c:\n\t(fill_vms_descriptor): Raise CE if attempt made to pass 64bit pointer\n\tin 32bit descriptor.\n\nFrom-SVN: r138588", "tree": {"sha": "d7afd3724879ba9a47afaf42ff67b1ce21d97e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7afd3724879ba9a47afaf42ff67b1ce21d97e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdc33a55e85d7a895f88f70fb41b258955afd8e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc33a55e85d7a895f88f70fb41b258955afd8e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc33a55e85d7a895f88f70fb41b258955afd8e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc33a55e85d7a895f88f70fb41b258955afd8e0/comments", "author": null, "committer": null, "parents": [{"sha": "7b84d8c1398f621c8b6f7ab33ef9cdb94235bc0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b84d8c1398f621c8b6f7ab33ef9cdb94235bc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b84d8c1398f621c8b6f7ab33ef9cdb94235bc0c"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "65cc4f0b00d62080effe03f3019a7144d33d220b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdc33a55e85d7a895f88f70fb41b258955afd8e0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdc33a55e85d7a895f88f70fb41b258955afd8e0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bdc33a55e85d7a895f88f70fb41b258955afd8e0", "patch": "@@ -1,3 +1,40 @@\n+2008-08-04  Doug Rupp  <rupp@adacore.com>\n+\n+\t* gcc-interface/utils2.c:\n+\t(fill_vms_descriptor): Raise CE if attempt made to pass 64bit pointer\n+\tin 32bit descriptor.\n+\n+2008-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch10.adb: Minor reformatting\n+\n+\t* i-cobol.adb: Minor reformatting.\n+\n+2008-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Access_Definition): Create an itype reference for an\n+\tanonymous access return type of a regular function that is not a\n+\tcompilation unit.\n+\n+2008-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: New Builder attribute Global_Compilation_Switches\n+\t\n+\t* snames.adb: New standard name Global_Compilation_Switches\n+\t\n+\t* snames.ads: New standard name Global_Compilation_Switches\n+\n+\t* make.adb: Correct spelling error in comment\n+\n+2008-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Check_Form_Of_Interface_Name): Fix handling for CLI\n+\ttarget.\n+\n+2008-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch10.adb: Minor comment fix.\n+\n 2008-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* restrict.adb: Improved messages for restriction warnings"}, {"sha": "8cd61558ec63fea0f60a6e642a6e18e17831395e", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdc33a55e85d7a895f88f70fb41b258955afd8e0/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdc33a55e85d7a895f88f70fb41b258955afd8e0/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=bdc33a55e85d7a895f88f70fb41b258955afd8e0", "patch": "@@ -2169,19 +2169,37 @@ fill_vms_descriptor (tree expr, Entity_Id gnat_formal)\n   tree field;\n   tree parm_decl = get_gnu_tree (gnat_formal);\n   tree const_list = NULL_TREE;\n-  tree record_type;\n+  tree record_type = TREE_TYPE (TREE_TYPE (parm_decl));\n+  int do_range_check =\n+      strcmp (\"MBO\",\n+\t      IDENTIFIER_POINTER (DECL_NAME (TYPE_FIELDS (record_type))));\n \n-  record_type = TREE_TYPE (TREE_TYPE (parm_decl));\n   expr = maybe_unconstrained_array (expr);\n   gnat_mark_addressable (expr);\n \n   for (field = TYPE_FIELDS (record_type); field; field = TREE_CHAIN (field))\n-    const_list\n-      = tree_cons (field,\n-\t\t   convert (TREE_TYPE (field),\n-\t\t\t    SUBSTITUTE_PLACEHOLDER_IN_EXPR\n-\t\t\t    (DECL_INITIAL (field), expr)),\n-\t\t   const_list);\n+    {\n+      tree conexpr = convert (TREE_TYPE (field),\n+\t\t\t      SUBSTITUTE_PLACEHOLDER_IN_EXPR\n+\t\t\t      (DECL_INITIAL (field), expr));\n+\n+      /* Check to ensure that only 32bit pointers are passed in\n+\t 32bit descriptors */\n+      if (do_range_check &&\n+          strcmp (IDENTIFIER_POINTER (DECL_NAME (field)), \"POINTER\") == 0)\n+        {\n+          tree t = build3 (COND_EXPR, void_type_node,\n+\t\t\t   build_binary_op (LT_EXPR, integer_type_node,\n+\t\t\t\t\t    convert (integer_type_node,\n+\t\t\t\t\t\t     conexpr), \n+\t\t\t\t\t    integer_zero_node),\n+\t\t\t   build_call_raise (CE_Range_Check_Failed, Empty,\n+\t\t\t\t\t     N_Raise_Constraint_Error),\n+\t\t\t   NULL_TREE);\n+          add_stmt (t);\n+        }\n+      const_list = tree_cons (field, conexpr, const_list);\n+    }\n \n   return gnat_build_constructor (record_type, nreverse (const_list));\n }"}]}