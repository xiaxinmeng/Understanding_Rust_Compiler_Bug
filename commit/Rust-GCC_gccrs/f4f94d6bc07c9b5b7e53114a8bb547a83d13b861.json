{"sha": "f4f94d6bc07c9b5b7e53114a8bb547a83d13b861", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmOTRkNmJjMDdjOWI1YjdlNTMxMTRhOGJiNTQ3YTgzZDEzYjg2MQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@gnu.org", "date": "2005-07-22T04:24:05Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2005-07-22T04:24:05Z"}, "message": "getopt.c: Include \"ansidecl.h\".\n\n\t* getopt.c: Include \"ansidecl.h\".\n\t(_getopt_initialize): Mark argc and argv parameters as unused.\n\nFrom-SVN: r102271", "tree": {"sha": "f669c8bbed1e11567b9e03eb7a743d23884a85c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f669c8bbed1e11567b9e03eb7a743d23884a85c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861/comments", "author": null, "committer": null, "parents": [{"sha": "8cfb7ab7a249449a49f251479449d8ca10ce763c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfb7ab7a249449a49f251479449d8ca10ce763c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfb7ab7a249449a49f251479449d8ca10ce763c"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "2ab94a2cc22a3a49ec1dfe2f95686cac5b5ce6d0", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=f4f94d6bc07c9b5b7e53114a8bb547a83d13b861", "patch": "@@ -1,3 +1,8 @@\n+2005-07-22  Ben Elliston  <bje@gnu.org>\n+\n+\t* getopt.c: Include \"ansidecl.h\".\n+\t(_getopt_initialize): Mark argc and argv parameters as unused.\n+\n 2005-07-22  Ben Elliston  <bje@gnu.org>\n \n \t* regex.c (regcomp): Change type of `i' from unsigned to int."}, {"sha": "848c183f34f74099a577b463082d09381622b54b", "filename": "libiberty/getopt.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861/libiberty%2Fgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f94d6bc07c9b5b7e53114a8bb547a83d13b861/libiberty%2Fgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fgetopt.c?ref=f4f94d6bc07c9b5b7e53114a8bb547a83d13b861", "patch": "@@ -3,8 +3,8 @@\n    \"Keep this file name-space clean\" means, talk to drepper@gnu.org\n    before changing it!\n \n-   Copyright (C) 1987, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98\n-   \tFree Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,\n+   1996, 1997, 1998, 2005 Free Software Foundation, Inc.\n \n    NOTE: This source is derived from an old version taken from the GNU C\n    Library (glibc).\n@@ -43,6 +43,7 @@\n #endif\n \n #include <stdio.h>\n+#include \"ansidecl.h\"\n \n /* Comment out all this code if we are using the GNU C Library, and are not\n    actually compiling the library itself.  This code is part of the GNU C\n@@ -397,7 +398,9 @@ exchange (char **argv)\n static const char *_getopt_initialize (int, char *const *, const char *);\n #endif\n static const char *\n-_getopt_initialize (int argc, char *const *argv, const char *optstring)\n+_getopt_initialize (int argc ATTRIBUTE_UNUSED,\n+\t\t    char *const *argv ATTRIBUTE_UNUSED,\n+\t\t    const char *optstring)\n {\n   /* Start processing options with ARGV-element 1 (since ARGV-element 0\n      is the program name); the sequence of previously skipped"}]}