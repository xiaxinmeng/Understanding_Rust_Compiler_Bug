{"sha": "288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg4ZjYwNWYyY2I2YmMyOWMxODkyZWExZTE1ZDBlMTk2ZTdlMDU5ZQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2011-06-02T20:16:09Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2011-06-02T20:16:09Z"}, "message": "arm-cores.def (cortex-a5): Use cortex_a5 tuning.\n\n\tgcc/\n\t* config/arm/arm-cores.def (cortex-a5): Use cortex_a5 tuning.\n\t* config/arm/arm.c (arm_cortex_a5_branch_cost): New.\n\t(arm_cortex_a5_tune): New.\n\nFrom-SVN: r174579", "tree": {"sha": "af8c7f0f6ca7e6f1ccfedf8c38f14dfda8d87499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af8c7f0f6ca7e6f1ccfedf8c38f14dfda8d87499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "153668ec8625551f371dc34a31ec2d42ddbec03f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/153668ec8625551f371dc34a31ec2d42ddbec03f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/153668ec8625551f371dc34a31ec2d42ddbec03f"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "109f8295acc5df220af0ad1c598de3558ed1e683", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "patch": "@@ -1,3 +1,9 @@\n+2011-06-02  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm-cores.def (cortex-a5): Use cortex_a5 tuning.\n+\t* config/arm/arm.c (arm_cortex_a5_branch_cost): New.\n+\t(arm_cortex_a5_tune): New.\n+\n 2011-06-02  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/arm-protos.h (tune_params): Add branch_cost hook."}, {"sha": "afac688eb1503d39958ef73d7aea30dd13952973", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "patch": "@@ -124,7 +124,7 @@ ARM_CORE(\"mpcorenovfp\",\t  mpcorenovfp,\t6K,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"mpcore\",\t  mpcore,\t6K,\t\t\t\t FL_LDSCHED | FL_VFPV2, 9e)\n ARM_CORE(\"arm1156t2-s\",\t  arm1156t2s,\t6T2,\t\t\t\t FL_LDSCHED, v6t2)\n ARM_CORE(\"arm1156t2f-s\",  arm1156t2fs,  6T2,\t\t\t\t FL_LDSCHED | FL_VFPV2, v6t2)\n-ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, cortex_a5)\n ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex)"}, {"sha": "57c523840f2de33070680d6e70169be5bc8d5785", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288f605f2cb6bc29c1892ea1e15d0e196e7e059e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "patch": "@@ -256,6 +256,7 @@ static void arm_conditional_register_usage (void);\n static reg_class_t arm_preferred_rename_class (reg_class_t rclass);\n static unsigned int arm_autovectorize_vector_sizes (void);\n static int arm_default_branch_cost (bool, bool);\n+static int arm_cortex_a5_branch_cost (bool, bool);\n \n \f\n /* Table of machine attributes.  */\n@@ -914,6 +915,16 @@ const struct tune_params arm_cortex_tune =\n   arm_default_branch_cost\n };\n \n+const struct tune_params arm_cortex_a5_tune =\n+{\n+  arm_9e_rtx_costs,\n+  NULL,\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_cortex_a5_branch_cost\n+};\n+\n const struct tune_params arm_cortex_a9_tune =\n {\n   arm_9e_rtx_costs,\n@@ -8054,6 +8065,12 @@ arm_default_branch_cost (bool speed_p, bool predictable_p ATTRIBUTE_UNUSED)\n     return (optimize > 0) ? 2 : 0;\n }\n \n+static int\n+arm_cortex_a5_branch_cost (bool speed_p, bool predictable_p)\n+{\n+  return speed_p ? 0 : arm_default_branch_cost (speed_p, predictable_p);\n+}\n+\n static int fp_consts_inited = 0;\n \n /* Only zero is valid for VFP.  Other values are also valid for FPA.  */"}]}