{"sha": "9ed83a33c0a826cb190f60552d930c38a80ad46c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVkODNhMzNjMGE4MjZjYjE5MGY2MDU1MmQ5MzBjMzhhODBhZDQ2Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-12-04T23:07:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-12-04T23:07:39Z"}, "message": "Fix -Wunused warnings in libstdc++ headers\n\n\t* config/io/basic_file_stdio.h (__basic_file): Remove name of unused\n\tparameter.\n\t* include/bits/boost_concept_check.h: Add pragmas to disable\n\t-Wunused-local-typedef warnings.\n\t* include/bits/codecvt.h (codecvt_byname<char16_t, char, mbstate_t>)\n\t(codecvt_byname<char32_t, char, mbstate_t>): Remove name of unused\n\tparameter.\n\t* include/bits/locale_facets_nonio.tcc (time_get::do_get_weekday)\n\t(time_get::do_get_monthname, time_get::do_get_year): Remove unused\n\tvariables.\n\t* include/std/bitset (_Base_bitset<0>::_M_getword): Remove name of\n\tunused parameter.\n\t* include/std/streambuf (_IsUnused): Define.\n\t(basic_streambuf::imbue, basic_streambuf::pbackfail)\n\t(basic_streambuf::overflow): Add macro to unused parameters.\n\t* testsuite/24_iterators/operations/prev_neg.cc: Adjust dg-error.\n\nFrom-SVN: r255391", "tree": {"sha": "38749e6f057aae922c87ae9953be1664a004191e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38749e6f057aae922c87ae9953be1664a004191e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ed83a33c0a826cb190f60552d930c38a80ad46c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed83a33c0a826cb190f60552d930c38a80ad46c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed83a33c0a826cb190f60552d930c38a80ad46c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed83a33c0a826cb190f60552d930c38a80ad46c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "899ac3b80040d7879082b5df11675cea88a43756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899ac3b80040d7879082b5df11675cea88a43756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/899ac3b80040d7879082b5df11675cea88a43756"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "046dee223c67152f319d1424fa62b797c5abd1df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -1,3 +1,22 @@\n+2017-12-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* config/io/basic_file_stdio.h (__basic_file): Remove name of unused\n+\tparameter.\n+\t* include/bits/boost_concept_check.h: Add pragmas to disable\n+\t-Wunused-local-typedef warnings.\n+\t* include/bits/codecvt.h (codecvt_byname<char16_t, char, mbstate_t>)\n+\t(codecvt_byname<char32_t, char, mbstate_t>): Remove name of unused\n+\tparameter.\n+\t* include/bits/locale_facets_nonio.tcc (time_get::do_get_weekday)\n+\t(time_get::do_get_monthname, time_get::do_get_year): Remove unused\n+\tvariables.\n+\t* include/std/bitset (_Base_bitset<0>::_M_getword): Remove name of\n+\tunused parameter.\n+\t* include/std/streambuf (_IsUnused): Define.\n+\t(basic_streambuf::imbue, basic_streambuf::pbackfail)\n+\t(basic_streambuf::overflow): Add macro to unused parameters.\n+\t* testsuite/24_iterators/operations/prev_neg.cc: Adjust dg-error.\n+\n 2017-12-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/string_view (basic_string_view::_S_compare):"}, {"sha": "76435e417ef6dc1ccd29f8137a0fd061d8887822", "filename": "libstdc++-v3/config/io/basic_file_stdio.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -63,7 +63,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __basic_file(__c_lock* __lock = 0) throw ();\n \n #if __cplusplus >= 201103L\n-      __basic_file(__basic_file&& __rv, __c_lock* __lock = 0) noexcept\n+      __basic_file(__basic_file&& __rv, __c_lock* = 0) noexcept\n       : _M_cfile(__rv._M_cfile), _M_cfile_created(__rv._M_cfile_created)\n       {\n \t__rv._M_cfile = nullptr;"}, {"sha": "43ab03415e5e824d6f80d3f078309adde9d4fd62", "filename": "libstdc++-v3/include/bits/boost_concept_check.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -48,6 +48,9 @@ namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wunused-local-typedefs\"\n+\n #define _IsUnused __attribute__ ((__unused__))\n \n // When the C-C code is in use, we would like this function to do as little\n@@ -783,6 +786,7 @@ struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n \n+#pragma GCC diagnostic pop\n #undef _IsUnused\n \n #endif // _GLIBCXX_BOOST_CONCEPT_CHECK"}, {"sha": "09af6d88fd2aa4d2574d8c73cb91e620c5d2bccf", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -612,7 +612,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n     public:\n       explicit\n-      codecvt_byname(const char* __s, size_t __refs = 0)\n+      codecvt_byname(const char*, size_t __refs = 0)\n       : codecvt<char16_t, char, mbstate_t>(__refs) { }\n \n       explicit\n@@ -630,7 +630,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n     public:\n       explicit\n-      codecvt_byname(const char* __s, size_t __refs = 0)\n+      codecvt_byname(const char*, size_t __refs = 0)\n       : codecvt<char32_t, char, mbstate_t>(__refs) { }\n \n       explicit"}, {"sha": "63e832ea233c2673d24af007ff23ba2de474ee25", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.tcc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -1096,7 +1096,6 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n     {\n       const locale& __loc = __io._M_getloc();\n       const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);\n-      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);\n       const char_type* __days[14];\n       __tp._M_days_abbreviated(__days);\n       __tp._M_days(__days + 7);\n@@ -1123,7 +1122,6 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n     {\n       const locale& __loc = __io._M_getloc();\n       const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);\n-      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);\n       const char_type*  __months[24];\n       __tp._M_months_abbreviated(__months);\n       __tp._M_months(__months + 12);\n@@ -1148,8 +1146,6 @@ _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11\n     do_get_year(iter_type __beg, iter_type __end, ios_base& __io,\n \t\tios_base::iostate& __err, tm* __tm) const\n     {\n-      const locale& __loc = __io._M_getloc();\n-      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);\n       int __tmpyear;\n       ios_base::iostate __tmperr = ios_base::goodbit;\n "}, {"sha": "0afad6e5e0e1e3986508bbf2e193d317cb4e13be", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -561,7 +561,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       }\n \n       _GLIBCXX_CONSTEXPR _WordT\n-      _M_getword(size_t __pos) const _GLIBCXX_NOEXCEPT\n+      _M_getword(size_t) const _GLIBCXX_NOEXCEPT\n       { return 0; }\n \n       _GLIBCXX_CONSTEXPR _WordT"}, {"sha": "34fa9a455115a2e04233b62c4d65d7a582d21fb0", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -46,6 +46,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#define _IsUnused __attribute__ ((__unused__))\n+\n   template<typename _CharT, typename _Traits>\n     streamsize\n     __copy_streambufs_eof(basic_streambuf<_CharT, _Traits>*,\n@@ -578,7 +580,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  Base class version does nothing.\n       */\n       virtual void\n-      imbue(const locale& __loc)\n+      imbue(const locale& __loc _IsUnused)\n       { }\n \n       // [27.5.2.4.2] buffer management and positioning\n@@ -726,7 +728,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  Base class version does nothing, returns eof().\n       */\n       virtual int_type\n-      pbackfail(int_type __c  = traits_type::eof())\n+      pbackfail(int_type __c _IsUnused  = traits_type::eof())\n       { return traits_type::eof(); }\n \n       // Put area:\n@@ -770,7 +772,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  Base class version does nothing, returns eof().\n       */\n       virtual int_type\n-      overflow(int_type __c  = traits_type::eof())\n+      overflow(int_type __c _IsUnused  = traits_type::eof())\n       { return traits_type::eof(); }\n \n #if _GLIBCXX_USE_DEPRECATED && __cplusplus <= 201402L\n@@ -852,6 +854,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t  basic_streambuf<wchar_t>* __sbout, bool& __ineof);\n #endif\n \n+#undef _IsUnused\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n "}, {"sha": "3fbdb6f6f09eeb1673e1a6429e268445f464b46c", "filename": "libstdc++-v3/testsuite/24_iterators/operations/prev_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fprev_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed83a33c0a826cb190f60552d930c38a80ad46c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fprev_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fprev_neg.cc?ref=9ed83a33c0a826cb190f60552d930c38a80ad46c", "patch": "@@ -38,5 +38,5 @@ test02()\n {\n   const Y array[1] = { };\n   std::prev(array + 1);\n-  // { dg-error \"forward_iterator\" \"\" { target *-*-* } 220 }\n+  // { dg-error \"forward_iterator\" \"\" { target *-*-* } 223 }\n }"}]}