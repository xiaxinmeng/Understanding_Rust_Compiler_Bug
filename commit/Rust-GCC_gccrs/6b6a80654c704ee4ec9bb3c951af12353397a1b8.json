{"sha": "6b6a80654c704ee4ec9bb3c951af12353397a1b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2YTgwNjU0YzcwNGVlNGVjOWJiM2M5NTFhZjEyMzUzMzk3YTFiOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-10T20:35:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-10T20:35:30Z"}, "message": "* ipa-param-manipulation.c\n\t(ipa_param_body_adjustments::register_replacement): Fix comment typo\n\t- accross -> across.\n\t* ipa-sra.c (propagate_used_across_scc_edge, ipa_sra_analysis):\n\tLikewise.\n\t(param_splitting_across_edge): Fix typo in dump message - accross\n\t-> across.\n\nFrom-SVN: r279188", "tree": {"sha": "8b61f2af27a0221e853834bb78805717824914ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b61f2af27a0221e853834bb78805717824914ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b6a80654c704ee4ec9bb3c951af12353397a1b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6a80654c704ee4ec9bb3c951af12353397a1b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6a80654c704ee4ec9bb3c951af12353397a1b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6a80654c704ee4ec9bb3c951af12353397a1b8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eff66cd2aa4e6cbce289ce61aa903ed3ee4b52fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff66cd2aa4e6cbce289ce61aa903ed3ee4b52fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff66cd2aa4e6cbce289ce61aa903ed3ee4b52fa"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "8130b6689daaa67b95d61fc8dfc2d7fbb88b8da2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6a80654c704ee4ec9bb3c951af12353397a1b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6a80654c704ee4ec9bb3c951af12353397a1b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b6a80654c704ee4ec9bb3c951af12353397a1b8", "patch": "@@ -1,3 +1,13 @@\n+2019-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* ipa-param-manipulation.c\n+\t(ipa_param_body_adjustments::register_replacement): Fix comment typo\n+\t- accross -> across.\n+\t* ipa-sra.c (propagate_used_across_scc_edge, ipa_sra_analysis):\n+\tLikewise.\n+\t(param_splitting_across_edge): Fix typo in dump message - accross\n+\t-> across.\n+\n 2019-12-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraph.c (cgraph_node::verify_node): Verify tp_first_run."}, {"sha": "28ac2b8ad6e7fba2599d76e08bfb4e1a4875cca6", "filename": "gcc/ipa-param-manipulation.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6a80654c704ee4ec9bb3c951af12353397a1b8/gcc%2Fipa-param-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6a80654c704ee4ec9bb3c951af12353397a1b8/gcc%2Fipa-param-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-param-manipulation.c?ref=6b6a80654c704ee4ec9bb3c951af12353397a1b8", "patch": "@@ -895,7 +895,7 @@ ipa_param_adjustments::debug ()\n }\n \n /* Register that REPLACEMENT should replace parameter described in APM and\n-   optionally as DUMMY to mark transitive splits accross calls.  */\n+   optionally as DUMMY to mark transitive splits across calls.  */\n \n void\n ipa_param_body_adjustments::register_replacement (ipa_adjusted_param *apm,"}, {"sha": "421c0899e11b9895e471443dcbc89f572d7f6e47", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6a80654c704ee4ec9bb3c951af12353397a1b8/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6a80654c704ee4ec9bb3c951af12353397a1b8/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=6b6a80654c704ee4ec9bb3c951af12353397a1b8", "patch": "@@ -3167,7 +3167,7 @@ isra_mark_caller_param_used (isra_func_summary *from_ifs, int input_idx,\n \n \n /* Propagate information that any parameter is not used only locally within a\n-   SCC accross CS to the caller, which must be in the same SCC as the\n+   SCC across CS to the caller, which must be in the same SCC as the\n    callee. Push any callers that need to be re-processed to STACK.  */\n \n static void\n@@ -3397,7 +3397,7 @@ param_splitting_across_edge (cgraph_edge *cs)\n        : 0);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n-    fprintf (dump_file, \"Splitting accross %s->%s:\\n\",\n+    fprintf (dump_file, \"Splitting across %s->%s:\\n\",\n \t     cs->caller->dump_name (), callee->dump_name ());\n \n   unsigned i;\n@@ -3876,9 +3876,9 @@ ipa_sra_analysis (void)\n \t      param_removal_cross_scc_edge (cs);\n \t}\n \n-      /* Look at edges within the current SCC and propagate used-ness accross\n-          them, pushing onto the stack all notes which might need to be\n-          revisited.  */\n+      /* Look at edges within the current SCC and propagate used-ness across\n+\t them, pushing onto the stack all notes which might need to be\n+\t revisited.  */\n       FOR_EACH_VEC_ELT (cycle_nodes, j, v)\n \tv->call_for_symbol_thunks_and_aliases (propagate_used_to_scc_callers,\n \t\t\t\t\t       &stack, true);"}]}