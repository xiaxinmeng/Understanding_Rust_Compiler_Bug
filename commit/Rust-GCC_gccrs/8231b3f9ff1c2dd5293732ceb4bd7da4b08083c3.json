{"sha": "8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzMWIzZjlmZjFjMmRkNTI5MzczMmNlYjRiZDdkYTRiMDgwODNjMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-05-08T00:51:15Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-05-08T00:51:15Z"}, "message": "i386.c (ix86_split_long_move): Fix base register mode for XFmode splits for TARGET_64BIT.\n\n        * config/i386/i386.c (ix86_split_long_move): Fix base register\n        mode for XFmode splits for TARGET_64BIT.\n\nFrom-SVN: r66589", "tree": {"sha": "a29535f5bdf8cbf4a4d54cefc26155445b934828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a29535f5bdf8cbf4a4d54cefc26155445b934828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3/comments", "author": null, "committer": null, "parents": [{"sha": "0212907f54ea5a59e93301f905321b07646b17ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0212907f54ea5a59e93301f905321b07646b17ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0212907f54ea5a59e93301f905321b07646b17ae"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "ba540d456e8fe634daa587c1444768cf9bd1275e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3", "patch": "@@ -1,3 +1,8 @@\n+2003-05-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_split_long_move): Fix base register\n+\tmode for XFmode splits for TARGET_64BIT.\n+\n 2003-05-07  Richard Henderson  <rth@redhat.com>\n \n \t* sched-ebb.c (schedule_ebb): Supply the correct starting"}, {"sha": "048d5f880264e0c434fb4a546b1f0950ac5232a2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8231b3f9ff1c2dd5293732ceb4bd7da4b08083c3", "patch": "@@ -10593,15 +10593,24 @@ ix86_split_long_move (operands)\n \t Do an lea to the last part and use only one colliding move.  */\n       else if (collisions > 1)\n \t{\n+\t  rtx base;\n+\n \t  collisions = 1;\n-\t  emit_insn (gen_rtx_SET (VOIDmode, part[0][nparts - 1],\n-\t\t\t\t  XEXP (part[1][0], 0)));\n-\t  part[1][0] = change_address (part[1][0],\n-\t\t\t\t       TARGET_64BIT ? DImode : SImode,\n-\t\t\t\t       part[0][nparts - 1]);\n-\t  part[1][1] = adjust_address (part[1][0], VOIDmode, UNITS_PER_WORD);\n+\n+\t  base = part[0][nparts - 1];\n+\n+\t  /* Handle the case when the last part isn't valid for lea.\n+\t     Happens in 64-bit mode storing the 12-byte XFmode.  */\n+\t  if (GET_MODE (base) != Pmode)\n+\t    base = gen_rtx_REG (Pmode, REGNO (base));\n+\n+\t  emit_insn (gen_rtx_SET (VOIDmode, base, XEXP (part[1][0], 0)));\n+\t  part[1][0] = replace_equiv_address (part[1][0], base);\n+\t  part[1][1] = replace_equiv_address (part[1][1],\n+\t\t\t\t      plus_constant (base, UNITS_PER_WORD));\n \t  if (nparts == 3)\n-\t    part[1][2] = adjust_address (part[1][0], VOIDmode, 8);\n+\t    part[1][2] = replace_equiv_address (part[1][2],\n+\t\t\t\t      plus_constant (base, 8));\n \t}\n     }\n "}]}