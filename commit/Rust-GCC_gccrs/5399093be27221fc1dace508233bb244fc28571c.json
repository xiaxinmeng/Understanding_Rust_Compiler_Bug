{"sha": "5399093be27221fc1dace508233bb244fc28571c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5OTA5M2JlMjcyMjFmYzFkYWNlNTA4MjMzYmIyNDRmYzI4NTcxYw==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@codesourcery.com", "date": "2009-08-21T22:13:56Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2009-08-21T22:13:56Z"}, "message": "* lib/target-supports.exp\n\t(check_effective_target_arm_iwmmxt_ok): New procedure.\n\t* gcc.target/arm/mmx-1.c: Only run if arm_iwmmxt_ok.  Remove the\n\texclusions for -mfloat-abi=softfp and -mfloat-abi=hard.\n\nFrom-SVN: r151003", "tree": {"sha": "51ca1ebe5b5cdb50ca0f95eb37fa8b088b0e69f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ca1ebe5b5cdb50ca0f95eb37fa8b088b0e69f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5399093be27221fc1dace508233bb244fc28571c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5399093be27221fc1dace508233bb244fc28571c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5399093be27221fc1dace508233bb244fc28571c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5399093be27221fc1dace508233bb244fc28571c/comments", "author": null, "committer": null, "parents": [{"sha": "08ffd640dbdd4f3462b1cee5489e9f1b1bf1b793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ffd640dbdd4f3462b1cee5489e9f1b1bf1b793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ffd640dbdd4f3462b1cee5489e9f1b1bf1b793"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "90308c96fded2d19048c2ec83ee9108a77264c6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5399093be27221fc1dace508233bb244fc28571c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5399093be27221fc1dace508233bb244fc28571c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5399093be27221fc1dace508233bb244fc28571c", "patch": "@@ -1,3 +1,10 @@\n+2009-08-21  Maciej W. Rozycki  <macro@codesourcery.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_arm_iwmmxt_ok): New procedure.\n+\t* gcc.target/arm/mmx-1.c: Only run if arm_iwmmxt_ok.  Remove the\n+\texclusions for -mfloat-abi=softfp and -mfloat-abi=hard.\n+\n 2009-08-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gfortran.dg/boz_9.f90: Do not generate denormal floating"}, {"sha": "c2eca7f78f591112a9bcc3d19f25a01cdf1c0b38", "filename": "gcc/testsuite/gcc.target/arm/mmx-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5399093be27221fc1dace508233bb244fc28571c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmmx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5399093be27221fc1dace508233bb244fc28571c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmmx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmmx-1.c?ref=5399093be27221fc1dace508233bb244fc28571c", "patch": "@@ -3,11 +3,10 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mcpu=*\" } { \"-mcpu=iwmmxt\" } } */\n /* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mabi=*\" } { \"-mabi=iwmmxt\" } } */\n-/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mfloat-abi=softfp\" } { \"\" } } */\n-/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mfloat-abi=hard\" } { \"\" } } */\n /* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-march=*\" } { \"-march=iwmmxt\" } } */\n /* { dg-options \"-O -mno-apcs-frame -mcpu=iwmmxt -mabi=iwmmxt\" } */\n /* { dg-require-effective-target arm32 } */\n+/* { dg-require-effective-target arm_iwmmxt_ok } */\n /* { dg-final { scan-assembler \"ldmfd\\[ \t]sp!.*ip,\\[ ]*pc\" } } */\n \n /* This function uses all the call-saved registers, namely r4, r5, r6,"}, {"sha": "76624adcd794c5f4b5150964c2d6fbfa6d0666aa", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5399093be27221fc1dace508233bb244fc28571c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5399093be27221fc1dace508233bb244fc28571c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=5399093be27221fc1dace508233bb244fc28571c", "patch": "@@ -1620,6 +1620,19 @@ proc check_effective_target_arm_eabi { } {\n     }]\n }\n \n+# Return 1 if this is an ARM target supporting -mcpu=iwmmxt.\n+# Some multilibs may be incompatible with this option.\n+\n+proc check_effective_target_arm_iwmmxt_ok { } {\n+    if { [check_effective_target_arm32] } {\n+\treturn [check_no_compiler_messages arm_iwmmxt_ok object {\n+\t    int dummy;\n+\t} \"-mcpu=iwmmxt\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is a PowerPC target with floating-point registers.\n \n proc check_effective_target_powerpc_fprs { } {"}]}