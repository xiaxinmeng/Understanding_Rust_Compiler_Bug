{"sha": "4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQwNmIwYTJmZWZhN2MyZThhZWE1NGMxOWY5N2ViZDI0Y2E5ZTU5ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-09-26T17:21:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-09-26T17:21:00Z"}, "message": "re PR target/24055 (\"could not split insn\" with -O1 -ffast-math)\n\n\tPR target/24055\n\t* config/i386/i386.md (\"*fistdi2_1\"): New pattern.\n\t(\"*fist<mode>2_1\"): Use only HImode and SImode register operands.\n\t(\"fist<mode>2_with_temp\"): Use only register operands.\n\nFrom-SVN: r104647", "tree": {"sha": "21c528d57f278957fca902c3ea7c5886c107809e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21c528d57f278957fca902c3ea7c5886c107809e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e/comments", "author": null, "committer": null, "parents": [{"sha": "76dd592360fedddbf7a6573245ab84c8219b2ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76dd592360fedddbf7a6573245ab84c8219b2ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76dd592360fedddbf7a6573245ab84c8219b2ee1"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "8cdc5e3c6d2e47a76e7252fcca014c90ea2a8833", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e", "patch": "@@ -1,3 +1,10 @@\n+2005-09-26  Uros Bizjak  <uros@kss-loka.si>\n+\n+\tPR target/24055\n+\t* config/i386/i386.md (\"*fistdi2_1\"): New pattern.\n+\t(\"*fist<mode>2_1\"): Use only HImode and SImode register operands.\n+\t(\"fist<mode>2_with_temp\"): Use only register operands.\n+\n 2005-09-26  J\"orn Rennecke <joern.rennecke@st.com>\n \n \t* rtlanal.c (reg_used_between_p): Don't check for CLOBBERs in"}, {"sha": "8bfa037a8cc07e21c165c9718a3f263bc989e3a6", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4d06b0a2fefa7c2e8aea54c19f97ebd24ca9e59e", "patch": "@@ -16475,9 +16475,9 @@\n   DONE;\n })\n \n-(define_insn_and_split \"*fist<mode>2_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+(define_insn_and_split \"*fistdi2_1\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n \t UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\n@@ -16487,17 +16487,17 @@\n   [(const_int 0)]\n {\n   if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fist<mode>2 (operands[0], operands[1]));\n+    emit_insn (gen_fistdi2 (operands[0], operands[1]));\n   else\n     {\n-      operands[2] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-      emit_insn (gen_fist<mode>2_with_temp (operands[0], operands[1],\n-\t\t\t\t\t    operands[2]));\n+      operands[2] = assign_386_stack_local (DImode, SLOT_TEMP);\n+      emit_insn (gen_fistdi2_with_temp (operands[0], operands[1],\n+\t\t\t\t\t operands[2]));\n     }\n   DONE;\n }\n   [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"DI\")])\n \n (define_insn \"fistdi2\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n@@ -16545,6 +16545,25 @@\n \t      (clobber (match_dup 3))])]\n   \"\")\n \n+(define_insn_and_split \"*fist<mode>2_1\"\n+  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"=r\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+\t UNSPEC_FIST))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  operands[2] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n+  emit_insn (gen_fist<mode>2_with_temp (operands[0], operands[1],\n+\t\t\t\t\toperands[2]));\n+  DONE;\n+}\n+  [(set_attr \"type\" \"fpspc\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"fist<mode>2\"\n   [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n \t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n@@ -16556,10 +16575,10 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fist<mode>2_with_temp\"\n-  [(set (match_operand:X87MODEI12 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"=r\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n \t UNSPEC_FIST))\n-   (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"=m,m\"))]\n+   (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"=m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"#\""}]}