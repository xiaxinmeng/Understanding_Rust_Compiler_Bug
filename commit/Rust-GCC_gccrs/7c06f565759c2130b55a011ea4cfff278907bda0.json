{"sha": "7c06f565759c2130b55a011ea4cfff278907bda0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MwNmY1NjU3NTljMjEzMGI1NWEwMTFlYTRjZmZmMjc4OTA3YmRhMA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-11-13T23:02:41Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-11-13T23:02:41Z"}, "message": "fold-const.c (optimize_bit_field_compare): Recursively call fold when simplifying non-constant comparisons between bit-fields.\n\n\n\t* fold-const.c (optimize_bit_field_compare): Recursively call\n\tfold when simplifying non-constant comparisons between bit-fields.\n\nFrom-SVN: r118783", "tree": {"sha": "e159a838cef09b3940ca6950d9dac78d2cef6b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e159a838cef09b3940ca6950d9dac78d2cef6b9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c06f565759c2130b55a011ea4cfff278907bda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c06f565759c2130b55a011ea4cfff278907bda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c06f565759c2130b55a011ea4cfff278907bda0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c06f565759c2130b55a011ea4cfff278907bda0/comments", "author": null, "committer": null, "parents": [{"sha": "65280f6ca64c7c6f3d13001fcb9007b38ea0046e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65280f6ca64c7c6f3d13001fcb9007b38ea0046e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65280f6ca64c7c6f3d13001fcb9007b38ea0046e"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "965a9cf2281e6bee5afb36447a4f147dca44d408", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c06f565759c2130b55a011ea4cfff278907bda0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c06f565759c2130b55a011ea4cfff278907bda0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c06f565759c2130b55a011ea4cfff278907bda0", "patch": "@@ -1,3 +1,8 @@\n+2006-11-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* fold-const.c (optimize_bit_field_compare): Recursively call\n+\tfold when simplifying non-constant comparisons between bit-fields.\n+\n 2006-11-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* configure.ac: Add changequote around __LONG_DOUBLE_MATH_OPTIONAL"}, {"sha": "fe7ec587204a26b1ea6f60b110e5211d5d342a6f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c06f565759c2130b55a011ea4cfff278907bda0/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c06f565759c2130b55a011ea4cfff278907bda0/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=7c06f565759c2130b55a011ea4cfff278907bda0", "patch": "@@ -3441,15 +3441,19 @@ optimize_bit_field_compare (enum tree_code code, tree compare_type,\n   if (! const_p)\n     /* If not comparing with constant, just rework the comparison\n        and return.  */\n-    return build2 (code, compare_type,\n-\t\t   build2 (BIT_AND_EXPR, unsigned_type,\n-\t\t\t   make_bit_field_ref (linner, unsigned_type,\n-\t\t\t\t\t       nbitsize, nbitpos, 1),\n-\t\t\t   mask),\n-\t\t   build2 (BIT_AND_EXPR, unsigned_type,\n-\t\t\t   make_bit_field_ref (rinner, unsigned_type,\n-\t\t\t\t\t       nbitsize, nbitpos, 1),\n-\t\t\t   mask));\n+    return fold_build2 (code, compare_type,\n+\t\t\tfold_build2 (BIT_AND_EXPR, unsigned_type,\n+\t\t\t\t     make_bit_field_ref (linner,\n+\t\t\t\t\t\t\t unsigned_type,\n+\t\t\t\t\t\t\t nbitsize, nbitpos,\n+\t\t\t\t\t\t\t 1),\n+\t\t\t\t     mask),\n+\t\t\tfold_build2 (BIT_AND_EXPR, unsigned_type,\n+\t\t\t\t     make_bit_field_ref (rinner,\n+\t\t\t\t\t\t\t unsigned_type,\n+\t\t\t\t\t\t\t nbitsize, nbitpos,\n+\t\t\t\t\t\t\t 1),\n+\t\t\t\t     mask));\n \n   /* Otherwise, we are handling the constant case. See if the constant is too\n      big for the field.  Warn and return a tree of for 0 (false) if so.  We do"}]}