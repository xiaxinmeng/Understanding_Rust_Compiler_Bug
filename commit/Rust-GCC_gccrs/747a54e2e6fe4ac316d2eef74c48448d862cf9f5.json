{"sha": "747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3YTU0ZTJlNmZlNGFjMzE2ZDJlZWY3NGM0ODQ0OGQ4NjJjZjlmNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-04-19T05:20:12Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-19T05:20:12Z"}, "message": "2005-04-19  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n\t(getClipBounds): Handle clip being null.\n\t(setClip): Likewise.\n\t* java/beans/beancontext/BeanContextSupport.java\n\t(add): Implemented.\n\t(addAll): Likewise.\n\t(clear): Likewise.\n\t(removeAll): Likewise.\n\t(retainAll): Likewise.\n\n2005-04-19  Michael Koch  <konqueror@gmx.de>\n\n\t* java/beans/beancontext/BeanContextServicesSupport.java\n\t(BeanContextServicesSupport): Reimplemented.\n\t(addBeanContextServicesListener): Implemented.\n\t(initialize): Likewise.\n\t(removeBeanContextServicesListener): Likewise.\n\t* java/beans/beancontext/BeanContextSupport.java\n\t(add): Likewise.\n\t(addBeanContextMembershipListener): Likewise.\n\t(getLocale): Likewise.\n\t(initialize): Likewise.\n\t(iterator): Likewise.\n\t(remove): Likewise.\n\t(toArray): Likewise.\n\nFrom-SVN: r98375", "tree": {"sha": "5bf3a7fd7b79ae251d31f0c6f157b5da2c08e6b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf3a7fd7b79ae251d31f0c6f157b5da2c08e6b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/comments", "author": null, "committer": null, "parents": [{"sha": "9c3ff9fc828113aaeb1efb2d69217c64eca6cdd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3ff9fc828113aaeb1efb2d69217c64eca6cdd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3ff9fc828113aaeb1efb2d69217c64eca6cdd2"}], "stats": {"total": 135, "additions": 93, "deletions": 42}, "files": [{"sha": "2f889b3df929a5347cf2612ad9b4fe2eb5397bbc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "patch": "@@ -1,3 +1,31 @@\n+2005-04-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java\n+\t(getClipBounds): Handle clip being null.\n+\t(setClip): Likewise.\n+\t* java/beans/beancontext/BeanContextSupport.java\n+\t(add): Implemented.\n+\t(addAll): Likewise.\n+\t(clear): Likewise.\n+\t(removeAll): Likewise.\n+\t(retainAll): Likewise.\n+\n+2005-04-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/beans/beancontext/BeanContextServicesSupport.java\n+\t(BeanContextServicesSupport): Reimplemented.\n+\t(addBeanContextServicesListener): Implemented.\n+\t(initialize): Likewise.\n+\t(removeBeanContextServicesListener): Likewise.\n+\t* java/beans/beancontext/BeanContextSupport.java\n+\t(add): Likewise.\n+\t(addBeanContextMembershipListener): Likewise.\n+\t(getLocale): Likewise.\n+\t(initialize): Likewise.\n+\t(iterator): Likewise.\n+\t(remove): Likewise.\n+\t(toArray): Likewise.\n+\n 2005-04-19  Roman Kennke  <roman@kennke.org>\n \n \t* java/awt/MediaTracker.java:"}, {"sha": "c5978ba33af7f747665fe55635ad9e5b3922c3c2", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "patch": "@@ -404,7 +404,10 @@ public Shape getClip ()\n \n   public Rectangle getClipBounds ()\n   {\n-    return new Rectangle (clip.x, clip.y, clip.width, clip.height);\n+    if (clip == null)\n+      return null;\n+    else\n+      return clip.getBounds();\n   }\n \n   public Color getColor ()\n@@ -445,7 +448,8 @@ public void setClip (Rectangle clip)\n \n   public void setClip (Shape clip)\n   {\n-    setClip (clip.getBounds ());\n+    if (clip != null)\n+      setClip(clip.getBounds());\n   }\n \n   private native void setFGColor(int red, int green, int blue);"}, {"sha": "318bf9bea155e4785ebd8503c6cb232c3dfe176d", "filename": "libjava/java/beans/beancontext/BeanContextServicesSupport.java", "status": "modified", "additions": 28, "deletions": 21, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServicesSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServicesSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServicesSupport.java?ref=747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "patch": "@@ -1,13 +1,13 @@\n-/* java.beans.beancontext.BeanContextServicesSupport\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+/* BeanContextServicesSupport.java --\n+   Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n@@ -120,34 +120,36 @@ protected BeanContextServiceProvider getServiceProvider()\n \n   public BeanContextServicesSupport ()\n   {\n-    this (null, null, true, true);\n+    super();\n   }\n \n   public BeanContextServicesSupport (BeanContextServices peer)\n   {\n-    this (peer, null, true, true);\n+    super(peer);\n   }\n \n-  public BeanContextServicesSupport (BeanContextServices peer, Locale lcle)\n+  public BeanContextServicesSupport(BeanContextServices peer, Locale locale)\n   {\n-    this (peer, lcle, true, true);\n+    super(peer, locale);\n   }\n \n-  public BeanContextServicesSupport (BeanContextServices peer, Locale lcle,\n-                                     boolean dtime)\n+  public BeanContextServicesSupport(BeanContextServices peer, Locale locale,\n+                                    boolean dtime)\n   {\n-    this (peer, lcle, dtime, true);\n+    super(peer, locale, dtime);\n   }\n \n-  public BeanContextServicesSupport (BeanContextServices peer, Locale lcle,\n-                                     boolean dtime, boolean visible)\n+  public BeanContextServicesSupport(BeanContextServices peer, Locale locale,\n+                                    boolean dtime, boolean visible)\n   {\n-    throw new Error (\"Not implemented\");\n+    super(peer, locale, dtime, visible);\n   }\n \n-  public void addBeanContextServicesListener (BeanContextServicesListener bcsl)\n+  public void addBeanContextServicesListener\n+    (BeanContextServicesListener listener)\n   {\n-    throw new Error (\"Not implemented\");\n+    if (! bcsListeners.contains(listener))\n+      bcsListeners.add(listener);\n   }\n \n   public boolean addService (Class serviceClass, BeanContextServiceProvider bcsp)\n@@ -202,8 +204,7 @@ protected final void fireServiceAdded (Class serviceClass)\n     throw new Error (\"Not implemented\");\n   }\n \n-  protected final void\n-  fireServiceRevoked (BeanContextServiceRevokedEvent bcsre)\n+  protected final void fireServiceRevoked(BeanContextServiceRevokedEvent event)\n   {\n     throw new Error (\"Not implemented\");\n   }\n@@ -250,7 +251,10 @@ public boolean hasService (Class serviceClass)\n \n   public void initialize ()\n   {\n-    throw new Error (\"Not implemented\");\n+    super.initialize();\n+\n+    bcsListeners = new ArrayList();\n+    services = new HashMap();\n   }\n \n   protected  void initializeBeanContextResources () \n@@ -269,10 +273,13 @@ public void releaseService (BeanContextChild child, Object requestor,\n     throw new Error (\"Not implemented\");\n   }\n \n-  public void\n-  removeBeanContextServicesListener (BeanContextServicesListener bcsl)\n+  public void removeBeanContextServicesListener\n+    (BeanContextServicesListener listener)\n   {\n-    throw new Error (\"Not implemented\");\n+    int index = bcsListeners.indexOf(listener);\n+\n+    if (index > -1)\n+      bcsListeners.remove(index);\n   }\n \n   public void revokeService (Class serviceClass, BeanContextServiceProvider bcsp,"}, {"sha": "cb500530e364c33fbc85333aa009b5bbc6f7b3af", "filename": "libjava/java/beans/beancontext/BeanContextSupport.java", "status": "modified", "additions": 31, "deletions": 19, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/747a54e2e6fe4ac316d2eef74c48448d862cf9f5/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextSupport.java?ref=747a54e2e6fe4ac316d2eef74c48448d862cf9f5", "patch": "@@ -1,13 +1,13 @@\n-/* java.beans.beancontext.BeanContextSupport\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+/* BeanContextSupport.java --\n+   Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n@@ -153,23 +153,31 @@ public BeanContextSupport (BeanContext peer, Locale lcle, boolean dtime,\n     okToUseGui = visible;\n \n     initialize ();\n-    \n-    throw new Error (\"Not implemented\");\n   }\n \n   public boolean add (Object targetChild)\n   {\n-    throw new Error (\"Not implemented\");\n+    if (targetChild == null)\n+      throw new IllegalArgumentException();\n+\n+    if (children.containsKey(targetChild))\n+      return false;\n+\n+    // FIXME: The second argument is surely wrong.\n+    children.put(targetChild, targetChild);\n+    return true;\n   }\n \n   public boolean addAll (Collection c)\n   {\n-    throw new Error (\"Not implemented\");\n+    throw new UnsupportedOperationException();\n   }\n \n-  public void addBeanContextMembershipListener (BeanContextMembershipListener bcml)\n+  public void addBeanContextMembershipListener\n+    (BeanContextMembershipListener listener)\n   {\n-    throw new Error (\"Not implemented\");\n+    if (! bcmListeners.contains(listener))\n+      bcmListeners.add(listener);\n   }\n \n   public boolean avoidingGui ()\n@@ -216,7 +224,7 @@ protected static final boolean classEquals (Class first, Class second)\n \n   public void clear ()\n   {\n-    throw new Error (\"Not implemented\");\n+    throw new UnsupportedOperationException();\n   }\n \n   public boolean contains (Object o)\n@@ -302,7 +310,7 @@ protected static final Visibility getChildVisibility (Object child)\n \n   public Locale getLocale ()\n   {\n-    throw new Error (\"Not implemented\");\n+    return locale;\n   }\n \n   public URL getResource (String name, BeanContextChild bcc)\n@@ -317,7 +325,8 @@ public InputStream getResourceAsStream (String name, BeanContextChild bcc)\n \n   protected void initialize ()\n   {\n-    throw new Error (\"Not implemented\");\n+    bcmListeners = new ArrayList();\n+    children = new HashMap();\n   }\n \n   public Object instantiateChild (String beanName)\n@@ -343,7 +352,7 @@ public boolean isSerializing ()\n \n   public Iterator iterator ()\n   {\n-    throw new Error (\"Not implemented\");\n+    return children.keySet().iterator();\n   }\n \n   public boolean needsGui ()\n@@ -369,17 +378,20 @@ public final void readChildren (ObjectInputStream ois)\n \n   public boolean remove (Object targetChild)\n   {\n-    throw new Error (\"Not implemented\");\n+    return remove(targetChild, true);\n   }\n \n   protected boolean remove (Object targetChild, boolean callChildSetBC)\n   {\n+    if (targetChild == null)\n+      throw new IllegalArgumentException();\n+    \n     throw new Error (\"Not implemented\");\n   }\n \n   public boolean removeAll (Collection c)\n   {\n-    throw new Error (\"Not implemented\");\n+    throw new UnsupportedOperationException();\n   }\n \n   public void removeBeanContextMembershipListener (BeanContextMembershipListener bcml)\n@@ -389,7 +401,7 @@ public void removeBeanContextMembershipListener (BeanContextMembershipListener b\n \n   public boolean retainAll (Collection c)\n   {\n-    throw new Error (\"Not implemented\");\n+    throw new UnsupportedOperationException();\n   }\n \n   protected final void serialize (ObjectOutputStream oos, Collection coll)\n@@ -416,12 +428,12 @@ public int size ()\n \n   public Object[] toArray ()\n   {\n-    throw new Error (\"Not implemented\");\n+    return children.keySet().toArray();\n   }\n \n-  public Object[] toArray (Object[] arry)\n+  public Object[] toArray(Object[] array)\n   {\n-    throw new Error (\"Not implemented\");\n+    return children.keySet().toArray(array);\n   }\n \n   protected boolean validatePendingAdd (Object targetChild)"}]}