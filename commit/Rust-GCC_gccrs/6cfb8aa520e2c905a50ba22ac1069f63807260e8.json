{"sha": "6cfb8aa520e2c905a50ba22ac1069f63807260e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNmYjhhYTUyMGUyYzkwNWE1MGJhMjJhYzEwNjlmNjM4MDcyNjBlOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-28T12:53:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-28T12:53:12Z"}, "message": "Change every occurance of #if __mips>=3 to #ifdef __mips64.\n\nFrom-SVN: r10179", "tree": {"sha": "3f93b87dd8fe03d2b727c89740d93460ad1d6d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f93b87dd8fe03d2b727c89740d93460ad1d6d84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cfb8aa520e2c905a50ba22ac1069f63807260e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cfb8aa520e2c905a50ba22ac1069f63807260e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cfb8aa520e2c905a50ba22ac1069f63807260e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cfb8aa520e2c905a50ba22ac1069f63807260e8/comments", "author": null, "committer": null, "parents": [{"sha": "4c876b4f9f832e19e45997c812a325787842d177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c876b4f9f832e19e45997c812a325787842d177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c876b4f9f832e19e45997c812a325787842d177"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "76df3648ec13b305fc776896ecd96811a09288d1", "filename": "gcc/ginclude/va-mips.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cfb8aa520e2c905a50ba22ac1069f63807260e8/gcc%2Fginclude%2Fva-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cfb8aa520e2c905a50ba22ac1069f63807260e8/gcc%2Fginclude%2Fva-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-mips.h?ref=6cfb8aa520e2c905a50ba22ac1069f63807260e8", "patch": "@@ -29,7 +29,7 @@ typedef char * __gnuc_va_list;\n #define __va_ellipsis\n #endif\n \n-#if __mips>=3\n+#ifdef __mips64\n #define __va_rounded_size(__TYPE)  \\\n   (((sizeof (__TYPE) + 8 - 1) / 8) * 8)\n #else\n@@ -54,7 +54,7 @@ typedef char * __gnuc_va_list;\n \n #else\n #define va_alist  __builtin_va_alist\n-#if __mips>=3\n+#ifdef __mips64\n /* This assumes that `long long int' is always a 64 bit type.  */\n #define va_dcl    long long int __builtin_va_alist; __va_ellipsis\n #else\n@@ -78,11 +78,11 @@ void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n \n /* We cast to void * and then to TYPE * because this avoids\n    a warning about increasing the alignment requirement.  */\n-/* The __mips>=3 cases are reversed from the 32 bit cases, because the standard\n+/* The __mips64 cases are reversed from the 32 bit cases, because the standard\n    32 bit calling convention left-aligns all parameters smaller than a word,\n-   whereas the __mips>=3 calling convention does not (and hence they are\n+   whereas the __mips64 calling convention does not (and hence they are\n    right aligned).  */\n-#if __mips>=3\n+#ifdef __mips64\n #ifdef __MIPSEB__\n #define va_arg(__AP, __type)                                    \\\n   ((__type *) (void *) (__AP = (char *) ((((__PTRDIFF_TYPE__)__AP + 8 - 1) & -8) \\\n@@ -94,7 +94,7 @@ void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n    *(__type *) (void *) (__AP - __va_rounded_size (__type)))\n #endif\n \n-#else /* not __mips>=3 */\n+#else /* not __mips64 */\n \n #ifdef __MIPSEB__\n /* For big-endian machines.  */"}]}