{"sha": "77d7c64b6ef508ae849d01ff938a495c190d3ac4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdkN2M2NGI2ZWY1MDhhZTg0OWQwMWZmOTM4YTQ5NWMxOTBkM2FjNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-10T12:39:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-10T12:39:12Z"}, "message": "new\n\nFrom-SVN: r21654", "tree": {"sha": "0a492c06bf5b16d76c564aa204f89f05517657de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a492c06bf5b16d76c564aa204f89f05517657de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77d7c64b6ef508ae849d01ff938a495c190d3ac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d7c64b6ef508ae849d01ff938a495c190d3ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d7c64b6ef508ae849d01ff938a495c190d3ac4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d7c64b6ef508ae849d01ff938a495c190d3ac4/comments", "author": null, "committer": null, "parents": [{"sha": "f625817271a4eafaceff61672314e2da9d50235b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f625817271a4eafaceff61672314e2da9d50235b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f625817271a4eafaceff61672314e2da9d50235b"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "9ada72f87b51ee7d5759c1a397ea0aaf0d87b581", "filename": "gcc/testsuite/g++.old-deja/g++.pt/lookup3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flookup3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flookup3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flookup3.C?ref=77d7c64b6ef508ae849d01ff938a495c190d3ac4", "patch": "@@ -0,0 +1,17 @@\n+template<class T>\n+class A {\n+public:\n+  void f() { }\n+};\n+\n+class B : public A<int> {\n+public:\n+  void f();\n+};\n+\n+int main()\n+{\n+  B b;\n+  B& b1 = b;\n+  b1.A<int>::f();\n+}"}, {"sha": "40fba4d0997fd334a516a307fce972684c594f68", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t35a.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft35a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft35a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft35a.C?ref=77d7c64b6ef508ae849d01ff938a495c190d3ac4", "patch": "@@ -0,0 +1,5 @@\n+// Build don't link: \n+\n+template <class X> struct A {  };\n+struct A<int> { int foo (); };\n+int A<int>::foo () { return 37; }"}, {"sha": "f4c2a205fdf3775d22d13eeb4f31ce25e6785615", "filename": "gcc/testsuite/g++.old-deja/g++.pt/test4.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftest4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftest4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftest4.C?ref=77d7c64b6ef508ae849d01ff938a495c190d3ac4", "patch": "@@ -0,0 +1,4 @@\n+// Build don't link: \n+\n+class B { };\n+template <class x, int b> class X : public B { int y[b]; };"}, {"sha": "027d0a000433c77bf87979110cc6936a2f68941a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename9.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d7c64b6ef508ae849d01ff938a495c190d3ac4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename9.C?ref=77d7c64b6ef508ae849d01ff938a495c190d3ac4", "patch": "@@ -0,0 +1,16 @@\n+// Test to make sure that implicit typename doesn't break name binding rules.\n+// Special g++ Options: -w\n+\n+typedef double A;\n+template<class T> class B {\n+  typedef char A;\n+};\n+template<class T> struct X : B<T> {\n+  A a;\n+};\n+\n+int main()\n+{\n+  X<char*> x;\n+  return sizeof (x.a) != sizeof (double);\n+}"}]}