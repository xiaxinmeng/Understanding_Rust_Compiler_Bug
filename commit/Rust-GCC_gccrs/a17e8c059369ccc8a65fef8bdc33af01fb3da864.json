{"sha": "a17e8c059369ccc8a65fef8bdc33af01fb3da864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3ZThjMDU5MzY5Y2NjOGE2NWZlZjhiZGMzM2FmMDFmYjNkYTg2NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-23T09:36:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-23T09:36:49Z"}, "message": "[multiple changes]\n\n2011-12-23  Pascal Obry  <obry@adacore.com>\n\n\t* prj.ads (For_Every_Project_Imported): Add In_Aggregate_Lib\n\tparameter to generic formal procedure.\n\t* prj.adb (For_Every_Project_Imported): Update accordingly.\n\t(Recursive_Check): Likewise. Do not parse imported project for\n\taggregate library. This is needed as the imported projects are\n\tthere just to handle dependencies.\n\t(Look_For_Sources): Likewise.\n\t(Recursive_Add): Likewise.\n\t* prj-env.adb, prj-conf.adb, makeutl.adb, gnatcmd.adb:\n\tAdd In_Aggregate_Lib parameter to routines used with\n\tFor_Every_Project_Imported generic procedure.\n\t* prj-nmsc.adb (Tree_Processing_Data): Add In_Aggregate_Lib field.\n\t(Check): Move where it is used. Fix implementation\n\tto not check libraries that are inside aggregate libraries.\n\t(Recursive_Check): Add In_Aggregate_Lib parameter.\n\n2011-12-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb (Analyze_Package_Body, Has_Referencer): A generic\n\tpackage is a referencer regardless of whether there is a\n\tsubsequent subprogram with an Inline pragma.\n\n2011-12-23  Geert Bosch  <bosch@adacore.com>\n\n\t* sem_ch3.adb (Can_Derive_From): Check matching Float_Rep on VMS.\n\nFrom-SVN: r182656", "tree": {"sha": "ac173532856e499f071301288be35fa355582b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac173532856e499f071301288be35fa355582b5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a17e8c059369ccc8a65fef8bdc33af01fb3da864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17e8c059369ccc8a65fef8bdc33af01fb3da864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17e8c059369ccc8a65fef8bdc33af01fb3da864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17e8c059369ccc8a65fef8bdc33af01fb3da864/comments", "author": null, "committer": null, "parents": [{"sha": "7471389a77a42e571105fc0b03738a1c3e4ca50d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7471389a77a42e571105fc0b03738a1c3e4ca50d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7471389a77a42e571105fc0b03738a1c3e4ca50d"}], "stats": {"total": 646, "additions": 383, "deletions": 263}, "files": [{"sha": "37f011b3a3cba0600686c76831ced1dfa784a05f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -1,3 +1,31 @@\n+2011-12-23  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj.ads (For_Every_Project_Imported): Add In_Aggregate_Lib\n+\tparameter to generic formal procedure.\n+\t* prj.adb (For_Every_Project_Imported): Update accordingly.\n+\t(Recursive_Check): Likewise. Do not parse imported project for\n+\taggregate library. This is needed as the imported projects are\n+\tthere just to handle dependencies.\n+\t(Look_For_Sources): Likewise.\n+\t(Recursive_Add): Likewise.\n+\t* prj-env.adb, prj-conf.adb, makeutl.adb, gnatcmd.adb:\n+\tAdd In_Aggregate_Lib parameter to routines used with\n+\tFor_Every_Project_Imported generic procedure.\n+\t* prj-nmsc.adb (Tree_Processing_Data): Add In_Aggregate_Lib field.\n+\t(Check): Move where it is used. Fix implementation\n+\tto not check libraries that are inside aggregate libraries.\n+\t(Recursive_Check): Add In_Aggregate_Lib parameter.\n+\n+2011-12-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch7.adb (Analyze_Package_Body, Has_Referencer): A generic\n+\tpackage is a referencer regardless of whether there is a\n+\tsubsequent subprogram with an Inline pragma.\n+\n+2011-12-23  Geert Bosch  <bosch@adacore.com>\n+\n+\t* sem_ch3.adb (Can_Derive_From): Check matching Float_Rep on VMS.\n+\n 2011-12-23  Pascal Obry  <obry@adacore.com>\n \n \t* gnatcmd.adb, prj.adb, prj-nmsc.adb: Minor reformatting."}, {"sha": "361840cbda76af68e4a5582ad38f0316b6049fe5", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -264,6 +264,7 @@ procedure GNATCmd is\n    procedure Set_Library_For\n      (Project           : Project_Id;\n       Tree              : Project_Tree_Ref;\n+      In_Aggregate_Lib  : Boolean;\n       Libraries_Present : in out Boolean);\n    --  If Project is a library project, add the correct -L and -l switches to\n    --  the linker invocation.\n@@ -1264,9 +1265,10 @@ procedure GNATCmd is\n    procedure Set_Library_For\n      (Project           : Project_Id;\n       Tree              : Project_Tree_Ref;\n+      In_Aggregate_Lib  : Boolean;\n       Libraries_Present : in out Boolean)\n    is\n-      pragma Unreferenced (Tree);\n+      pragma Unreferenced (Tree, In_Aggregate_Lib);\n \n       Path_Option : constant String_Access :=\n                       MLib.Linker_Library_Path_Option;"}, {"sha": "df4bd2c89a5fd9ab7c35519928207a0bc14f5452", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -692,9 +692,10 @@ package body Makeutl is\n    is\n \n       procedure Recursive_Add\n-        (Project  : Project_Id;\n-         Tree     : Project_Tree_Ref;\n-         Extended : in out Boolean);\n+        (Project          : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Extended         : in out Boolean);\n       --  Add all the source directories of a project to the path only if\n       --  this project has not been visited. Calls itself recursively for\n       --  projects being extended, and imported projects.\n@@ -731,14 +732,18 @@ package body Makeutl is\n       -------------------\n \n       procedure Recursive_Add\n-        (Project  : Project_Id;\n-         Tree     : Project_Tree_Ref;\n-         Extended : in out Boolean)\n+        (Project          : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Extended         : in out Boolean)\n       is\n+         pragma Unreferenced (In_Aggregate_Lib);\n+\n          Current   : String_List_Id;\n          Dir       : String_Element;\n          OK        : Boolean := False;\n          Lang_Proc : Language_Ptr := Project.Languages;\n+\n       begin\n          --  Add to path all directories of this project\n \n@@ -1229,21 +1234,23 @@ package body Makeutl is\n       In_Tree  : Project_Tree_Ref) return String_List\n    is\n       procedure Recursive_Add\n-        (Proj    : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean);\n+        (Proj             : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean);\n       --  The recursive routine used to add linker options\n \n       -------------------\n       -- Recursive_Add --\n       -------------------\n \n       procedure Recursive_Add\n-        (Proj    : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean)\n+        (Proj             : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean)\n       is\n-         pragma Unreferenced (Dummy);\n+         pragma Unreferenced (Dummy, In_Aggregate_Lib);\n \n          Linker_Package : Package_Id;\n          Options        : Variable_Value;"}, {"sha": "1018781dd104d42d9f3c67fcb3691d33b7f992cb", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -728,9 +728,10 @@ package body Prj.Conf is\n                  Value_Of (Name_Ide, Project.Decl.Packages, Shared);\n \n          procedure Add_Config_Switches_For_Project\n-           (Project    : Project_Id;\n-            Tree       : Project_Tree_Ref;\n-            With_State : in out Integer);\n+           (Project          : Project_Id;\n+            Tree             : Project_Tree_Ref;\n+            In_Aggregate_Lib : Boolean;\n+            With_State       : in out Integer);\n          --  Add all --config switches for this project. This is also called\n          --  for aggregate projects.\n \n@@ -739,11 +740,13 @@ package body Prj.Conf is\n          -------------------------------------\n \n          procedure Add_Config_Switches_For_Project\n-           (Project    : Project_Id;\n-            Tree       : Project_Tree_Ref;\n-            With_State : in out Integer)\n+           (Project          : Project_Id;\n+            Tree             : Project_Tree_Ref;\n+            In_Aggregate_Lib : Boolean;\n+            With_State       : in out Integer)\n          is\n-            pragma Unreferenced (With_State);\n+            pragma Unreferenced (With_State, In_Aggregate_Lib);\n+\n             Shared : constant Shared_Project_Tree_Data_Access := Tree.Shared;\n \n             Variable      : Variable_Value;\n@@ -757,9 +760,8 @@ package body Prj.Conf is\n                Variable :=\n                  Value_Of (Name_Languages, Project.Decl.Attributes, Shared);\n \n-               if Variable = Nil_Variable_Value\n-                 or else Variable.Default\n-               then\n+               if Variable = Nil_Variable_Value or else Variable.Default then\n+\n                   --  Languages is not declared. If it is not an extending\n                   --  project, or if it extends a project with no Languages,\n                   --  check for Default_Language.\n@@ -792,17 +794,17 @@ package body Prj.Conf is\n                         Lang := Name_Find;\n                         Language_Htable.Set (Lang, Lang);\n \n-                     else\n-                        --  If no default language is declared, default to Ada\n+                     --  If no default language is declared, default to Ada\n \n+                     else\n                         Language_Htable.Set (Name_Ada, Name_Ada);\n                      end if;\n                   end if;\n \n                elsif Variable.Values /= Nil_String then\n \n-                  --  Attribute Languages is declared with a non empty\n-                  --  list: put all the languages in Language_HTable.\n+                  --  Attribute Languages is declared with a non empty list:\n+                  --  put all the languages in Language_HTable.\n \n                   List := Variable.Values;\n                   while List /= Nil_String loop"}, {"sha": "1ff9a5c8f3f9243a7da6df0973ceab6a01272883", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 63, "deletions": 49, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -115,21 +115,23 @@ package body Prj.Env is\n       Buffer_Last : Natural := 0;\n \n       procedure Add\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean);\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean);\n       --  Add source dirs of Project to the path\n \n       ---------\n       -- Add --\n       ---------\n \n       procedure Add\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean)\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean)\n       is\n-         pragma Unreferenced (Dummy);\n+         pragma Unreferenced (Dummy, In_Aggregate_Lib);\n       begin\n          Add_To_Path\n            (Project.Source_Dirs, In_Tree.Shared, Buffer, Buffer_Last);\n@@ -185,21 +187,23 @@ package body Prj.Env is\n       Buffer_Last : Natural := 0;\n \n       procedure Add\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean);\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean);\n       --  Add all the object directories of a project to the path\n \n       ---------\n       -- Add --\n       ---------\n \n       procedure Add\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean)\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean)\n       is\n-         pragma Unreferenced (Dummy, In_Tree);\n+         pragma Unreferenced (Dummy, In_Tree, In_Aggregate_Lib);\n \n          Path : constant Path_Name_Type :=\n                   Get_Object_Directory\n@@ -472,9 +476,10 @@ package body Prj.Env is\n       Current_Naming : Naming_Id;\n \n       procedure Check\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         State   : in out Integer);\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         State            : in out Integer);\n       --  Recursive procedure that put in the config pragmas file any non\n       --  standard naming schemes, if it is not already in the file, then call\n       --  itself for any imported project.\n@@ -496,11 +501,12 @@ package body Prj.Env is\n       -----------\n \n       procedure Check\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         State   : in out Integer)\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         State            : in out Integer)\n       is\n-         pragma Unreferenced (State);\n+         pragma Unreferenced (State, In_Aggregate_Lib);\n \n          Lang   : constant Language_Ptr :=\n                     Get_Language_From_Name (Project, \"ada\");\n@@ -786,9 +792,10 @@ package body Prj.Env is\n       --  Put the line contained in the Name_Buffer in the global buffer\n \n       procedure Process\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         State   : in out Integer);\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         State            : in out Integer);\n       --  Generate the mapping file for Project (not recursively)\n \n       ---------------------\n@@ -811,11 +818,12 @@ package body Prj.Env is\n       -------------\n \n       procedure Process\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         State   : in out Integer)\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         State            : in out Integer)\n       is\n-         pragma Unreferenced (State);\n+         pragma Unreferenced (State, In_Aggregate_Lib);\n \n          Source : Source_Id;\n          Suffix : File_Name_Type;\n@@ -1225,21 +1233,23 @@ package body Prj.Env is\n       Tree    : Project_Tree_Ref)\n    is\n       procedure For_Project\n-        (Prj   : Project_Id;\n-         Tree  : Project_Tree_Ref;\n-         Dummy : in out Integer);\n+        (Prj              : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Integer);\n       --  Get all object directories of Prj\n \n       -----------------\n       -- For_Project --\n       -----------------\n \n       procedure For_Project\n-        (Prj   : Project_Id;\n-         Tree  : Project_Tree_Ref;\n-         Dummy : in out Integer)\n+        (Prj              : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Integer)\n       is\n-         pragma Unreferenced (Dummy, Tree);\n+         pragma Unreferenced (Dummy, Tree, In_Aggregate_Lib);\n \n       begin\n          --  ??? Set_Ada_Paths has a different behavior for library project\n@@ -1270,21 +1280,23 @@ package body Prj.Env is\n       In_Tree : Project_Tree_Ref)\n    is\n       procedure For_Project\n-        (Prj     : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Integer);\n+        (Prj              : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Integer);\n       --  Get all object directories of Prj\n \n       -----------------\n       -- For_Project --\n       -----------------\n \n       procedure For_Project\n-        (Prj     : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Integer)\n+        (Prj              : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Integer)\n       is\n-         pragma Unreferenced (Dummy);\n+         pragma Unreferenced (Dummy, In_Aggregate_Lib);\n \n          Current    : String_List_Id := Prj.Source_Dirs;\n          The_String : String_Element;\n@@ -1642,9 +1654,10 @@ package body Prj.Env is\n       Buffer_Last : Natural := 0;\n \n       procedure Recursive_Add\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean);\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean);\n       --  Recursive procedure to add the source/object paths of extended/\n       --  imported projects.\n \n@@ -1653,11 +1666,12 @@ package body Prj.Env is\n       -------------------\n \n       procedure Recursive_Add\n-        (Project : Project_Id;\n-         In_Tree : Project_Tree_Ref;\n-         Dummy   : in out Boolean)\n+        (Project          : Project_Id;\n+         In_Tree          : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Dummy            : in out Boolean)\n       is\n-         pragma Unreferenced (Dummy, In_Tree);\n+         pragma Unreferenced (Dummy, In_Tree, In_Aggregate_Lib);\n \n          Path : Path_Name_Type;\n "}, {"sha": "21dc91634aa951b4d5623bdd9c77cdedbac24e2c", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 165, "deletions": 146, "changes": 311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -151,9 +151,10 @@ package body Prj.Nmsc is\n    --  be discarded as soon as we have finished processing the project\n \n    type Tree_Processing_Data is record\n-      Tree      : Project_Tree_Ref;\n-      Node_Tree : Prj.Tree.Project_Node_Tree_Ref;\n-      Flags     : Prj.Processing_Flags;\n+      Tree             : Project_Tree_Ref;\n+      Node_Tree        : Prj.Tree.Project_Node_Tree_Ref;\n+      Flags            : Prj.Processing_Flags;\n+      In_Aggregate_Lib : Boolean;\n    end record;\n    --  Temporary data which is needed while parsing a project. It does not need\n    --  to be kept in memory once a project has been fully loaded, but is\n@@ -185,11 +186,6 @@ package body Prj.Nmsc is\n    procedure Free (Data : in out Tree_Processing_Data);\n    --  Free the memory occupied by Data\n \n-   procedure Check\n-     (Project : Project_Id;\n-      Data    : in out Tree_Processing_Data);\n-   --  Process the naming scheme for a single project\n-\n    procedure Initialize\n      (Data    : in out Project_Processing_Data;\n       Project : Project_Id);\n@@ -728,6 +724,7 @@ package body Prj.Nmsc is\n          elsif Prev_Unit /= No_Unit_Index\n            and then Prev_Unit.File_Names (Kind) /= null\n            and then not Source.Locally_Removed\n+           and then not Data.In_Aggregate_Lib\n          then\n             --  Path is set if this is a source we found on the disk, in which\n             --  case we can provide more explicit error message. Path is unset\n@@ -765,6 +762,7 @@ package body Prj.Nmsc is\n            and then not Data.Flags.Allow_Duplicate_Basenames\n            and then Lang_Id.Config.Kind = Unit_Based\n            and then Source.Language.Config.Kind = Unit_Based\n+           and then not Data.In_Aggregate_Lib\n          then\n             Error_Msg_File_1 := File_Name;\n             Error_Msg_File_2 := File_Name_Type (Source.Project.Name);\n@@ -924,9 +922,10 @@ package body Prj.Nmsc is\n       Flags     : Processing_Flags)\n    is\n       Data : Tree_Processing_Data :=\n-               (Tree      => Tree,\n-                Node_Tree => Node_Tree,\n-                Flags     => Flags);\n+               (Tree             => Tree,\n+                Node_Tree        => Node_Tree,\n+                Flags            => Flags,\n+                In_Aggregate_Lib => False);\n \n       Project_Files : constant Prj.Variable_Value :=\n                         Prj.Util.Value_Of\n@@ -1012,132 +1011,6 @@ package body Prj.Nmsc is\n       Free (Project_Path_For_Aggregate);\n    end Process_Aggregated_Projects;\n \n-   -----------\n-   -- Check --\n-   -----------\n-\n-   procedure Check\n-     (Project : Project_Id;\n-      Data    : in out Tree_Processing_Data)\n-   is\n-      procedure Check_Aggregate\n-        (Project : Project_Id;\n-         Data    : in out Tree_Processing_Data);\n-      --  Check the aggregate project attributes, reject any not supported\n-      --  attributes.\n-\n-      ---------------------\n-      -- Check_Aggregate --\n-      ---------------------\n-\n-      procedure Check_Aggregate\n-        (Project : Project_Id;\n-         Data    : in out Tree_Processing_Data)\n-      is\n-         procedure Check_Not_Defined (Name : Name_Id);\n-         --  Report an error if Var is defined\n-\n-         -----------------------\n-         -- Check_Not_Defined --\n-         -----------------------\n-\n-         procedure Check_Not_Defined (Name : Name_Id) is\n-            Var : constant Prj.Variable_Value :=\n-                    Prj.Util.Value_Of\n-                      (Name,\n-                       Project.Decl.Attributes,\n-                       Data.Tree.Shared);\n-         begin\n-            if not Var.Default then\n-               Error_Msg_Name_1 := Name;\n-               Error_Msg\n-                 (Data.Flags, \"wrong attribute %% in aggregate library\",\n-                  Var.Location, Project);\n-            end if;\n-         end Check_Not_Defined;\n-\n-      --  Start of processing for Check_Not_Defined\n-\n-      begin\n-         Check_Not_Defined (Snames.Name_Library_Dir);\n-         Check_Not_Defined (Snames.Name_Library_Interface);\n-         Check_Not_Defined (Snames.Name_Library_Name);\n-         Check_Not_Defined (Snames.Name_Library_Ali_Dir);\n-         Check_Not_Defined (Snames.Name_Library_Src_Dir);\n-         Check_Not_Defined (Snames.Name_Library_Options);\n-         Check_Not_Defined (Snames.Name_Library_Standalone);\n-         Check_Not_Defined (Snames.Name_Library_Kind);\n-         Check_Not_Defined (Snames.Name_Leading_Library_Options);\n-         Check_Not_Defined (Snames.Name_Library_Version);\n-      end Check_Aggregate;\n-\n-      Shared   : constant Shared_Project_Tree_Data_Access := Data.Tree.Shared;\n-      Prj_Data : Project_Processing_Data;\n-\n-   begin\n-      Debug_Increase_Indent (\"check\", Project.Name);\n-\n-      Initialize (Prj_Data, Project);\n-\n-      Check_If_Externally_Built (Project, Data);\n-\n-      case Project.Qualifier is\n-         when Aggregate =>\n-            null;\n-\n-         when Aggregate_Library =>\n-            if Project.Object_Directory = No_Path_Information then\n-               Project.Object_Directory := Project.Directory;\n-            end if;\n-\n-         when others =>\n-            Get_Directories (Project, Data);\n-            Check_Programming_Languages (Project, Data);\n-\n-            if Current_Verbosity = High then\n-               Show_Source_Dirs (Project, Shared);\n-            end if;\n-\n-            if Project.Qualifier = Dry then\n-               Check_Abstract_Project (Project, Data);\n-            end if;\n-      end case;\n-\n-      --  Check configuration. This must be done even for gnatmake (even though\n-      --  no user configuration file was provided) since the default config we\n-      --  generate indicates whether libraries are supported for instance.\n-\n-      Check_Configuration (Project, Data);\n-\n-      --  For aggregate project checks that no library attributes are defined\n-\n-      if Project.Qualifier = Aggregate then\n-         Check_Aggregate (Project, Data);\n-\n-      else\n-         Check_Library_Attributes (Project, Data);\n-         Check_Package_Naming (Project, Data);\n-\n-         --  An aggregate library has no source, no need to look for them\n-\n-         if Project.Qualifier /= Aggregate_Library then\n-            Look_For_Sources (Prj_Data, Data);\n-         end if;\n-\n-         Check_Interfaces (Project, Data);\n-\n-         if Project.Library then\n-            Check_Stand_Alone_Library (Project, Data);\n-         end if;\n-\n-         Get_Mains (Project, Data);\n-      end if;\n-\n-      Free (Prj_Data);\n-\n-      Debug_Decrease_Indent (\"done check\");\n-   end Check;\n-\n    ----------------------------\n    -- Check_Abstract_Project --\n    ----------------------------\n@@ -3219,7 +3092,7 @@ package body Prj.Nmsc is\n                      Lib_Name.Location, Project);\n                end if;\n \n-            when Library =>\n+            when Library | Aggregate_Library =>\n                if not Project.Library then\n                   if Project.Library_Name = No_Name then\n                      Error_Msg\n@@ -3579,7 +3452,7 @@ package body Prj.Nmsc is\n          end loop;\n       end if;\n \n-      if Project.Library then\n+      if Project.Library and not Data.In_Aggregate_Lib then\n \n          --  Record the library name\n \n@@ -8313,28 +8186,173 @@ package body Prj.Nmsc is\n       Node_Tree    : Prj.Tree.Project_Node_Tree_Ref;\n       Flags        : Processing_Flags)\n    is\n+\n+      procedure Check\n+        (Project          : Project_Id;\n+         In_Aggregate_Lib : Boolean;\n+         Data             : in out Tree_Processing_Data);\n+      --  Process the naming scheme for a single project\n+\n       procedure Recursive_Check\n-        (Project  : Project_Id;\n-         Prj_Tree : Project_Tree_Ref;\n-         Data     : in out Tree_Processing_Data);\n+        (Project          : Project_Id;\n+         Prj_Tree         : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Data             : in out Tree_Processing_Data);\n       --  Check_Naming_Scheme for the project\n \n+      -----------\n+      -- Check --\n+      -----------\n+\n+      procedure Check\n+        (Project          : Project_Id;\n+         In_Aggregate_Lib : Boolean;\n+         Data             : in out Tree_Processing_Data)\n+      is\n+         procedure Check_Aggregate\n+           (Project : Project_Id;\n+            Data    : in out Tree_Processing_Data);\n+         --  Check the aggregate project attributes, reject any not supported\n+         --  attributes.\n+\n+         ---------------------\n+         -- Check_Aggregate --\n+         ---------------------\n+\n+         procedure Check_Aggregate\n+           (Project : Project_Id;\n+            Data    : in out Tree_Processing_Data)\n+         is\n+\n+            procedure Check_Not_Defined (Name : Name_Id);\n+            --  Report an error if Var is defined\n+\n+            -----------------------\n+            -- Check_Not_Defined --\n+            -----------------------\n+\n+            procedure Check_Not_Defined (Name : Name_Id) is\n+               Var : constant Prj.Variable_Value :=\n+                       Prj.Util.Value_Of\n+                         (Name,\n+                          Project.Decl.Attributes,\n+                          Data.Tree.Shared);\n+            begin\n+               if not Var.Default then\n+                  Error_Msg_Name_1 := Name;\n+                  Error_Msg\n+                    (Data.Flags, \"wrong attribute %% in aggregate library\",\n+                     Var.Location, Project);\n+               end if;\n+            end Check_Not_Defined;\n+\n+         begin\n+            Check_Not_Defined (Snames.Name_Library_Dir);\n+            Check_Not_Defined (Snames.Name_Library_Interface);\n+            Check_Not_Defined (Snames.Name_Library_Name);\n+            Check_Not_Defined (Snames.Name_Library_Ali_Dir);\n+            Check_Not_Defined (Snames.Name_Library_Src_Dir);\n+            Check_Not_Defined (Snames.Name_Library_Options);\n+            Check_Not_Defined (Snames.Name_Library_Standalone);\n+            Check_Not_Defined (Snames.Name_Library_Kind);\n+            Check_Not_Defined (Snames.Name_Leading_Library_Options);\n+            Check_Not_Defined (Snames.Name_Library_Version);\n+         end Check_Aggregate;\n+\n+         Shared   : constant Shared_Project_Tree_Data_Access :=\n+                      Data.Tree.Shared;\n+         Prj_Data : Project_Processing_Data;\n+\n+      --  Start of processing for Check\n+\n+      begin\n+         Debug_Increase_Indent (\"check\", Project.Name);\n+\n+         Initialize (Prj_Data, Project);\n+\n+         Check_If_Externally_Built (Project, Data);\n+\n+         case Project.Qualifier is\n+            when Aggregate =>\n+               null;\n+\n+            when Aggregate_Library =>\n+               if Project.Object_Directory = No_Path_Information then\n+                  Project.Object_Directory := Project.Directory;\n+               end if;\n+\n+            when others =>\n+               Get_Directories (Project, Data);\n+               Check_Programming_Languages (Project, Data);\n+\n+               if Current_Verbosity = High then\n+                  Show_Source_Dirs (Project, Shared);\n+               end if;\n+\n+               if Project.Qualifier = Dry then\n+                  Check_Abstract_Project (Project, Data);\n+               end if;\n+         end case;\n+\n+         --  Check configuration. This must be done even for gnatmake (even\n+         --  though no user configuration file was provided) since the default\n+         --  config we generate indicates whether libraries are supported for\n+         --  instance.\n+\n+         Check_Configuration (Project, Data);\n+\n+         --  For aggregate project check no library attributes are defined\n+\n+         if Project.Qualifier = Aggregate then\n+            Check_Aggregate (Project, Data);\n+\n+         else\n+            Check_Library_Attributes (Project, Data);\n+            Check_Package_Naming (Project, Data);\n+\n+            --  An aggregate library has no source, no need to look for them\n+\n+            if Project.Qualifier /= Aggregate_Library then\n+               Look_For_Sources (Prj_Data, Data);\n+            end if;\n+\n+            Check_Interfaces (Project, Data);\n+\n+            --  If this library is part of an aggregated library don't check it\n+            --  as it has no sources by itself and so interface won't be found.\n+\n+            if Project.Library and not In_Aggregate_Lib then\n+               Check_Stand_Alone_Library (Project, Data);\n+            end if;\n+\n+            Get_Mains (Project, Data);\n+         end if;\n+\n+         Free (Prj_Data);\n+\n+         Debug_Decrease_Indent (\"done check\");\n+      end Check;\n+\n       ---------------------\n       -- Recursive_Check --\n       ---------------------\n \n       procedure Recursive_Check\n-        (Project  : Project_Id;\n-         Prj_Tree : Project_Tree_Ref;\n-         Data     : in out Tree_Processing_Data) is\n+        (Project          : Project_Id;\n+         Prj_Tree         : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         Data             : in out Tree_Processing_Data)\n+      is\n       begin\n          if Current_Verbosity = High then\n             Debug_Increase_Indent\n               (\"Processing_Naming_Scheme for project\", Project.Name);\n          end if;\n \n          Data.Tree := Prj_Tree;\n-         Prj.Nmsc.Check (Project, Data);\n+         Data.In_Aggregate_Lib := In_Aggregate_Lib;\n+\n+         Check (Project, In_Aggregate_Lib, Data);\n \n          if Current_Verbosity = High then\n             Debug_Decrease_Indent (\"done Processing_Naming_Scheme\");\n@@ -8347,6 +8365,7 @@ package body Prj.Nmsc is\n       Data : Tree_Processing_Data;\n \n    --  Start of processing for Process_Naming_Scheme\n+\n    begin\n       Lib_Data_Table.Init;\n       Initialize (Data, Tree => Tree, Node_Tree => Node_Tree, Flags => Flags);"}, {"sha": "06b2d38c766d6a4a561748a214abb690e04ef38a", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 61, "deletions": 33, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -528,20 +528,24 @@ package body Prj is\n       Seen : Project_Boolean_Htable.Instance := Project_Boolean_Htable.Nil;\n \n       procedure Recursive_Check\n-        (Project : Project_Id;\n-         Tree    : Project_Tree_Ref);\n-      --  Check if a project has already been seen. If not seen, mark it as\n-      --  Seen, Call Action, and check all its imported projects.\n+        (Project          : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean);\n+      --  Check if a project has already been seen. If not seen, mark it\n+      --  as Seen, Call Action, and check all its imported and aggregated\n+      --  projects.\n \n       ---------------------\n       -- Recursive_Check --\n       ---------------------\n \n       procedure Recursive_Check\n-        (Project : Project_Id;\n-         Tree    : Project_Tree_Ref)\n+        (Project          : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean)\n       is\n          List : Project_List;\n+         T    : Project_Tree_Ref;\n \n       begin\n          if not Get (Seen, Project) then\n@@ -552,22 +556,28 @@ package body Prj is\n             Set (Seen, Project, True);\n \n             if not Imported_First then\n-               Action (Project, Tree, With_State);\n+               Action (Project, Tree, In_Aggregate_Lib, With_State);\n             end if;\n \n             --  Visit all extended projects\n \n             if Project.Extends /= No_Project then\n-               Recursive_Check (Project.Extends, Tree);\n+               Recursive_Check (Project.Extends, Tree, In_Aggregate_Lib);\n             end if;\n \n-            --  Visit all imported projects\n+            --  Visit all imported projects if needed. This is not needed\n+            --  for an aggregate library as imported libraries are just\n+            --  there for dependency support.\n \n-            List := Project.Imported_Projects;\n-            while List /= null loop\n-               Recursive_Check (List.Project, Tree);\n-               List := List.Next;\n-            end loop;\n+            if Project.Qualifier /= Aggregate_Library\n+              or else not Include_Aggregated\n+            then\n+               List := Project.Imported_Projects;\n+               while List /= null loop\n+                  Recursive_Check (List.Project, Tree, In_Aggregate_Lib);\n+                  List := List.Next;\n+               end loop;\n+            end if;\n \n             --  Visit all aggregated projects\n \n@@ -580,22 +590,33 @@ package body Prj is\n                   Agg := Project.Aggregated_Projects;\n                   while Agg /= null loop\n                      pragma Assert (Agg.Project /= No_Project);\n-                     Recursive_Check (Agg.Project, Agg.Tree);\n+\n+                     --  For aggregated libraries, the tree must be the one\n+                     --  of the aggregate library.\n+\n+                     if Project.Qualifier = Aggregate_Library then\n+                        T := Tree;\n+                     else\n+                        T := Agg.Tree;\n+                     end if;\n+\n+                     Recursive_Check\n+                       (Agg.Project, T, Project.Qualifier = Aggregate_Library);\n                      Agg := Agg.Next;\n                   end loop;\n                end;\n             end if;\n \n             if Imported_First then\n-               Action (Project, Tree, With_State);\n+               Action (Project, Tree, In_Aggregate_Lib, With_State);\n             end if;\n          end if;\n       end Recursive_Check;\n \n    --  Start of processing for For_Every_Project_Imported\n \n    begin\n-      Recursive_Check (Project => By, Tree => Tree);\n+      Recursive_Check (Project => By, Tree => Tree, In_Aggregate_Lib => False);\n       Reset (Seen);\n    end For_Every_Project_Imported;\n \n@@ -614,20 +635,24 @@ package body Prj is\n       Result : Source_Id  := No_Source;\n \n       procedure Look_For_Sources\n-        (Proj : Project_Id;\n-         Tree : Project_Tree_Ref;\n-         Src  : in out Source_Id);\n+        (Proj         : Project_Id;\n+         Tree         : Project_Tree_Ref;\n+         In_Aggregate : Boolean;\n+         Src          : in out Source_Id);\n       --  Look for Base_Name in the sources of Proj\n \n       ----------------------\n       -- Look_For_Sources --\n       ----------------------\n \n       procedure Look_For_Sources\n-        (Proj : Project_Id;\n-         Tree : Project_Tree_Ref;\n-         Src  : in out Source_Id)\n+        (Proj         : Project_Id;\n+         Tree         : Project_Tree_Ref;\n+         In_Aggregate : Boolean;\n+         Src          : in out Source_Id)\n       is\n+         pragma Unreferenced (In_Aggregate);\n+\n          Iterator : Source_Iterator;\n \n       begin\n@@ -662,14 +687,14 @@ package body Prj is\n       if In_Extended_Only then\n          Proj := Project;\n          while Proj /= No_Project loop\n-            Look_For_Sources (Proj, In_Tree, Result);\n+            Look_For_Sources (Proj, In_Tree, False, Result);\n             exit when Result /= No_Source;\n \n             Proj := Proj.Extends;\n          end loop;\n \n       elsif In_Imported_Only then\n-         Look_For_Sources (Project, In_Tree, Result);\n+         Look_For_Sources (Project, In_Tree, False, Result);\n \n          if Result = No_Source then\n             For_Imported_Projects\n@@ -680,7 +705,7 @@ package body Prj is\n          end if;\n \n       else\n-         Look_For_Sources (No_Project, In_Tree, Result);\n+         Look_For_Sources (No_Project, In_Tree, False, Result);\n       end if;\n \n       return Result;\n@@ -1365,9 +1390,10 @@ package body Prj is\n          Project : Project_Id;\n \n          procedure Recursive_Add\n-           (Prj   : Project_Id;\n-            Tree  : Project_Tree_Ref;\n-            Dummy : in out Boolean);\n+           (Prj              : Project_Id;\n+            Tree             : Project_Tree_Ref;\n+            In_Aggregate_Lib : Boolean;\n+            Dummy            : in out Boolean);\n          --  Recursively add the projects imported by project Project, but not\n          --  those that are extended.\n \n@@ -1376,11 +1402,13 @@ package body Prj is\n          -------------------\n \n          procedure Recursive_Add\n-           (Prj   : Project_Id;\n-            Tree  : Project_Tree_Ref;\n-            Dummy : in out Boolean)\n+           (Prj              : Project_Id;\n+            Tree             : Project_Tree_Ref;\n+            In_Aggregate_Lib : Boolean;\n+            Dummy            : in out Boolean)\n          is\n-            pragma Unreferenced (Dummy, Tree);\n+            pragma Unreferenced (Dummy, Tree, In_Aggregate_Lib);\n+\n             List : Project_List;\n             Prj2 : Project_Id;\n "}, {"sha": "2f1ca716f964131819aacef32d7915f12e5262a6", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -1562,9 +1562,10 @@ package Prj is\n    generic\n       type State is limited private;\n       with procedure Action\n-        (Project    : Project_Id;\n-         Tree       : Project_Tree_Ref;\n-         With_State : in out State);\n+        (Project          : Project_Id;\n+         Tree             : Project_Tree_Ref;\n+         In_Aggregate_Lib : Boolean;\n+         With_State       : in out State);\n    procedure For_Every_Project_Imported\n      (By                 : Project_Id;\n       Tree               : Project_Tree_Ref;\n@@ -1589,7 +1590,9 @@ package Prj is\n    --\n    --  If Include_Aggregated is True, then an aggregate project will recurse\n    --  into the projects it aggregates. Otherwise, the latter are never\n-   --  returned\n+   --  returned.\n+   --\n+   --  In_Aggregate_Lib is True if the project is in an aggregate library\n    --\n    --  The Tree argument passed to the callback is required in the case of\n    --  aggregated projects, since they might not be using the same tree as 'By'"}, {"sha": "50c9d3d6e699271e5c0d0c6b58634df8740fc558", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -15333,10 +15333,23 @@ package body Sem_Ch3 is\n          Spec : constant Entity_Id := Real_Range_Specification (Def);\n \n       begin\n+         --  Check specified \"digits\" constraint\n+\n          if Digs_Val > Digits_Value (E) then\n             return False;\n          end if;\n \n+         --  Avoid types not matching pragma Float_Representation, if present\n+\n+         if (Opt.Float_Format = 'I' and then Float_Rep (E) /= IEEE_Binary)\n+              or else\n+            (Opt.Float_Format = 'V' and then Float_Rep (E) /= VAX_Native)\n+         then\n+            return False;\n+         end if;\n+\n+         --  Check for matching range, if specified\n+\n          if Present (Spec) then\n             if Expr_Value_R (Type_Low_Bound (E)) >\n                Expr_Value_R (Low_Bound (Spec))"}, {"sha": "e30bb0c458e56eb6b5f28170b5085536ba2020a7", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17e8c059369ccc8a65fef8bdc33af01fb3da864/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a17e8c059369ccc8a65fef8bdc33af01fb3da864", "patch": "@@ -638,7 +638,6 @@ package body Sem_Ch7 is\n                   --  Processing for package bodies\n \n                   elsif K = N_Package_Body\n-                    and then not Has_Referencer_Except_For_Subprograms\n                     and then Present (Corresponding_Spec (D))\n                   then\n                      E := Corresponding_Spec (D);\n@@ -648,7 +647,10 @@ package body Sem_Ch7 is\n                      --  exported, i.e. where the corresponding spec is the\n                      --  spec of the current package, but because of nested\n                      --  instantiations, a fully private generic body may\n-                     --  export other private body entities.\n+                     --  export other private body entities. Furthermore,\n+                     --  regardless of whether there was a previous inlined\n+                     --  subprogram, (an instantiation of) the generic package\n+                     --  may reference any entity declared before it.\n \n                      if Is_Generic_Unit (E) then\n                         return True;\n@@ -657,7 +659,9 @@ package body Sem_Ch7 is\n                      --  this is an instance, we ignore instances since they\n                      --  cannot have references that affect outer entities.\n \n-                     elsif not Is_Generic_Instance (E) then\n+                     elsif not Is_Generic_Instance (E)\n+                       and then not Has_Referencer_Except_For_Subprograms\n+                     then\n                         if Has_Referencer\n                              (Declarations (D), Outer => False)\n                         then"}]}