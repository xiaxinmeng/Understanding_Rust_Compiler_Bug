{"sha": "109b748d3f13dcef66ca77f51bd779271b40d1f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA5Yjc0OGQzZjEzZGNlZjY2Y2E3N2Y1MWJkNzc5MjcxYjQwZDFmMA==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2003-06-30T21:11:44Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2003-06-30T21:11:44Z"}, "message": "README: Fix spelling for \"testcase\".\n\n2003-06-30  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n\n\t* g++.old-deja/g++.niklas/README: Fix spelling for \"testcase\".\n\t* g++.old-deja/g++.other/access2.C: Likewise.\n\t* g++.old-deja/g++.other/decl2.C: Likewise.\n\t* gcc.c-torture/execute/20020615-1.c: Likewise.\n\n2003-06-30  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n\n\t* config/cris/cris.c: Fix spelling for \"testcase\".\n\t* config/cris/cris.h: Likewise.\n\t* config/cris/cris.md: Likewise.\n\t* config/mmix/crti.asm: Likewise.\n\t* config/mmix/mmix.h: Likewise.\n\t* config/mmix/mmix.md: Likewise.\n\nFrom-SVN: r68740", "tree": {"sha": "d2ec4d65ba022fd3477c87ee70a96c950fc1e535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2ec4d65ba022fd3477c87ee70a96c950fc1e535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/109b748d3f13dcef66ca77f51bd779271b40d1f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109b748d3f13dcef66ca77f51bd779271b40d1f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/109b748d3f13dcef66ca77f51bd779271b40d1f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109b748d3f13dcef66ca77f51bd779271b40d1f0/comments", "author": null, "committer": null, "parents": [{"sha": "5892c641b36457dddabd8ee1e75117a2b7f07c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5892c641b36457dddabd8ee1e75117a2b7f07c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5892c641b36457dddabd8ee1e75117a2b7f07c1c"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "2f9b277ccd6a6c834418a32ed205b5ac0316670f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1,3 +1,12 @@\n+2003-06-30  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* config/cris/cris.c: Fix spelling for \"testcase\".\n+\t* config/cris/cris.h: Likewise.\n+\t* config/cris/cris.md: Likewise.\n+\t* config/mmix/crti.asm: Likewise.\n+\t* config/mmix/mmix.h: Likewise.\n+\t* config/mmix/mmix.md: Likewise.\n+\n 2003-06-30  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.h (LEGITIMATE_CONSTANT_P): Make it always\n@@ -155,6 +164,7 @@ Mon Jun 30 09:52:39 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \t* config.gcc (sh*-*-kaos*): Put tm_file setting in separate case\n \tstatement from tmake_file set.\n \n+>>>>>>> 2.268\n 2003-06-29  James E Wilson  <wilson@tuliptree.org>\n \n \t* reload.c (find_reloads): Change push_reloads to push_reload in"}, {"sha": "6d8f2805dbebd5e87e25e47f615835739c197d5e", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1789,7 +1789,7 @@ cris_notice_update_cc (exp, insn)\n {\n   /* Check if user specified \"-mcc-init\" as a bug-workaround.  FIXME:\n      TARGET_CCINIT does not work; we must set CC_REVERSED as below.\n-     Several test-cases will otherwise fail, for example\n+     Several testcases will otherwise fail, for example\n      gcc.c-torture/execute/20000217-1.c -O0 and -O1.  */\n   if (TARGET_CCINIT)\n     {"}, {"sha": "79953088a5753b97949b7d72dbeb6d88e67d3387", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1648,7 +1648,7 @@ call_ ## FUNC (void)\t\t\t\t\t\t\\\n #define CASE_VECTOR_PC_RELATIVE 1\n \n /* FIXME: Investigate CASE_VECTOR_SHORTEN_MODE to make sure HImode is not\n-   used when broken-.word could possibly fail (plus test-case).  */\n+   used when broken-.word could possibly fail (plus testcase).  */\n \n #define FIXUNS_TRUNC_LIKE_FIX_TRUNC\n "}, {"sha": "6be28eabb018601b5c83d73cb43c5604d0a706d7", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -321,7 +321,7 @@\n ;; of zeros starting at bit 0).\n \n ;; SImode.  This mode is the only one needed, since gcc automatically\n-;; extends subregs for lower-size modes.  FIXME: Add test-case.\n+;; extends subregs for lower-size modes.  FIXME: Add testcase.\n (define_insn \"*btst\"\n   [(set (cc0)\n \t(zero_extract\n@@ -884,7 +884,7 @@\n   return \\\"clear.b [%2=%0%S1]\\\";\n }\")\n \f\n-;; To appease test-case gcc.c-torture/execute/920501-2.c (and others) at\n+;; To appease testcase gcc.c-torture/execute/920501-2.c (and others) at\n ;; -O0, we need a movdi as a temporary measure.  Here's how things fail:\n ;;  A cmpdi RTX needs reloading (global):\n ;;    (insn 185 326 186 (set (cc0)\n@@ -3812,7 +3812,7 @@\n \n       /* It might be that code can be generated that jumps to 0 (or to a\n \t specific address).  Don't abort on that.  At least there's a\n-\t test-case.  */\n+\t testcase.  */\n       if (CONSTANT_ADDRESS_P (op0) && GET_CODE (op0) != CONST_INT)\n \t{\n \t  if (no_new_pseudos)\n@@ -3879,7 +3879,7 @@\n \n       /* It might be that code can be generated that jumps to 0 (or to a\n \t specific address).  Don't abort on that.  At least there's a\n-\t test-case.  */\n+\t testcase.  */\n       if (CONSTANT_ADDRESS_P (op1) && GET_CODE (op1) != CONST_INT)\n \t{\n \t  if (no_new_pseudos)\n@@ -4673,7 +4673,7 @@\n ;; to keep changes local to their cause.\n ;;\n ;; Do not add patterns that you do not know will be matched.\n-;; Please also add a self-contained test-case.\n+;; Please also add a self-contained testcase.\n \n ;; We have trouble with and:s and shifts.  Maybe something is broken in\n ;; gcc?  Or it could just be that bit-field insn expansion is a bit"}, {"sha": "68c5f3f04aaeacb9baa4edab0b63771cb0ec0094", "filename": "gcc/config/mmix/crti.asm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fmmix%2Fcrti.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fmmix%2Fcrti.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fcrti.asm?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -41,7 +41,7 @@ Boston, MA 02111-1307, USA.  */\n % segments.\n \n % This little treasure is here so the 32 lowest address bits of user data\n-% will not be zero.  Because of truncation, that would cause test-case\n+% will not be zero.  Because of truncation, that would cause testcase\n % gcc.c-torture/execute/980701-1.c to incorrectly fail.\n \n \t.data\t! mmixal:= 8H LOC Data_Segment"}, {"sha": "502dcfe51fe7995874060cdc6595599dc12b137a", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -738,7 +738,7 @@ enum reg_class\n    replace with a big comment.\n    The definition needs to match or be a subset of\n    FUNCTION_ARG_PASS_BY_REFERENCE, since not all callers check that before\n-   usage.  Watch lots of C++ test-cases fail if set to 1, for example\n+   usage.  Watch lots of C++ testcases fail if set to 1, for example\n    g++.dg/init/byval1.C.  */\n #define FUNCTION_ARG_CALLEE_COPIES(CUM, MODE, TYPE, NAMED) \\\n  mmix_function_arg_pass_by_reference (&(CUM), MODE, TYPE, NAMED)\n@@ -871,7 +871,7 @@ typedef struct { int regs; int lib; } CUMULATIVE_ARGS;\n    comparisons with -1 to LT and GE respectively, and LT, LTU, GE or GEU\n    comparisons with 256 to 255 and LE, LEU, GT and GTU has been\n    ineffective; the code path for performing the changes did not trig for\n-   neither the GCC test-suite nor ghostscript-6.52 nor Knuth's mmix.tar.gz\n+   neither the GCC testsuite nor ghostscript-6.52 nor Knuth's mmix.tar.gz\n    itself (core GCC functionality supposedly handling it) with sources\n    from 2002-06-06.  */\n "}, {"sha": "844b8415c52320c5f08a3ea505d351774163f007", "filename": "gcc/config/mmix/mmix.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fmmix%2Fmmix.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Fconfig%2Fmmix%2Fmmix.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.md?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1094,7 +1094,7 @@ DIVU %1,%1,%2\\;GET %0,:rR\\;NEGU %2,0,%0\\;CSNN %0,$255,%2\")\n \n ;; Don't use 'p' here.  A 'p' must stand first in constraints, or reload\n ;; messes up, not registering the address for reload.  Several C++\n-;; test-cases, including g++.brendan/crash40.C.  FIXME: This is arguably a\n+;; testcases, including g++.brendan/crash40.C.  FIXME: This is arguably a\n ;; bug in gcc.  Note line ~2612 in reload.c, that does things on the\n ;; condition <<else if (constraints[i][0] == 'p')>> and the comment on\n ;; ~3017 that says:"}, {"sha": "593a2a453d0d4dc904204452997fda2f7912b5f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1,3 +1,10 @@\n+2003-06-30  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* g++.old-deja/g++.niklas/README: Fix spelling for \"testcase\".\n+\t* g++.old-deja/g++.other/access2.C: Likewise.\n+\t* g++.old-deja/g++.other/decl2.C: Likewise.\n+\t* gcc.c-torture/execute/20020615-1.c: Likewise.\n+\n 2003-06-30  Giovanni Bajo  <giovannibajo@libero.it>\n \n         PR c++/4933\n@@ -17,6 +24,7 @@\n         PR c++/11106\n         * g++.dg/other/error5.C: New test.\n \n+>>>>>>> 1.2819\n 2003-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/format/gcc_diag-1.c: New test."}, {"sha": "581019167d50a8abb9674927fcc5bec0aff2628a", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/README", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2FREADME?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -3,14 +3,14 @@ From: niklas@della.appli.se (Niklas Hallqvist)\n Message-Id: <9301221420.AA18489@della.appli.se>\n Subject: g++.niklas DejaGnu sharfile\n \n-These are my test-cases in DejaGnu format.\n+These are my testcases in DejaGnu format.\n \n The tests which have \"passed\" in the groups variable do actually pass\n on my local G++ so if there is a specific \"passed\" test you'd like to\n see working in your version of G++ but it doesn't pass, contact me and\n I'll dig up the specific patches you'll need.\n \n-I have about a hundred or so unsorted test-cases which are not\n+I have about a hundred or so unsorted testcases which are not\n included in this archive, due to lack of time and boredom stemming\n from writing .exp-files.  But they will show up eventually.\n "}, {"sha": "51722aecdb148a2d3ed97b5dea05fa7d720aa3c8", "filename": "gcc/testsuite/g++.old-deja/g++.other/access2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Faccess2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Faccess2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Faccess2.C?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n-// Based on a test-case in the Standard, submitted by several people\n+// Based on a testcase in the Standard, submitted by several people\n \n class Outer {\n   typedef int T;"}, {"sha": "a466a207a2f769448f5082c88e943b516bb1bd17", "filename": "gcc/testsuite/g++.old-deja/g++.other/decl2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl2.C?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n-// Based on a test-case by Maciej Radziejewski <maciejr@iws.uni-stuttgart.de>\n+// Based on a testcase by Maciej Radziejewski <maciejr@iws.uni-stuttgart.de>\n \n int i(0)(1); // { dg-error \"\" } multiple initialization\n int j(2) = 3; // { dg-error \"\" } multiple initialization"}, {"sha": "89bf7d046ab216b8465777ee5ee09f2818d84769", "filename": "gcc/testsuite/gcc.c-torture/execute/20020615-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020615-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109b748d3f13dcef66ca77f51bd779271b40d1f0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020615-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020615-1.c?ref=109b748d3f13dcef66ca77f51bd779271b40d1f0", "patch": "@@ -1,7 +1,7 @@\n /* PR target/7042.  When reorg.c changed branches into return insns, it\n    completely forgot about any current_function_epilogue_delay_list and\n    dropped those insns.  Uncovered on cris-axis-elf, where an insn in an\n-   epilogue delay-slot set the return-value register with the test-case\n+   epilogue delay-slot set the return-value register with the testcase\n    below.  Derived from ghostscript-6.52 (GPL) by hp@axis.com.  */\n \n typedef struct font_hints_s {"}]}