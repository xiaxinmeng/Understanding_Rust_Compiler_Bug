{"sha": "96f6e029ed166111d1178f29e7ab63f78f044554", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmNmUwMjllZDE2NjExMWQxMTc4ZjI5ZTdhYjYzZjc4ZjA0NDU1NA==", "commit": {"author": {"name": "Ilya Tocar", "email": "ilya.tocar@intel.com", "date": "2014-10-07T13:13:45Z"}, "committer": {"name": "Ilya Tocar", "email": "tocarip@gcc.gnu.org", "date": "2014-10-07T13:13:45Z"}, "message": "Use long long instead of long in adx intrinsics.\n\n2014-10-02  Ilya Tocar  <ilya.tocar@intel.com>\n\n         * config/i386/adxintrin.h (_subborrow_u64): Use long long for param\n         type.\n         (_addcarry_u64): Ditto.\n         (_addcarryx_u64): Ditto.\n\nFrom-SVN: r215970", "tree": {"sha": "4080595c70fe6132bf37996fdd4b0ed3fd12f77e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4080595c70fe6132bf37996fdd4b0ed3fd12f77e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f6e029ed166111d1178f29e7ab63f78f044554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f6e029ed166111d1178f29e7ab63f78f044554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f6e029ed166111d1178f29e7ab63f78f044554", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f6e029ed166111d1178f29e7ab63f78f044554/comments", "author": {"login": "TocarIP", "id": 16836375, "node_id": "MDQ6VXNlcjE2ODM2Mzc1", "avatar_url": "https://avatars.githubusercontent.com/u/16836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TocarIP", "html_url": "https://github.com/TocarIP", "followers_url": "https://api.github.com/users/TocarIP/followers", "following_url": "https://api.github.com/users/TocarIP/following{/other_user}", "gists_url": "https://api.github.com/users/TocarIP/gists{/gist_id}", "starred_url": "https://api.github.com/users/TocarIP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TocarIP/subscriptions", "organizations_url": "https://api.github.com/users/TocarIP/orgs", "repos_url": "https://api.github.com/users/TocarIP/repos", "events_url": "https://api.github.com/users/TocarIP/events{/privacy}", "received_events_url": "https://api.github.com/users/TocarIP/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59b41b69be366ec2379b1d389d41c2de8f088590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59b41b69be366ec2379b1d389d41c2de8f088590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59b41b69be366ec2379b1d389d41c2de8f088590"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "8a87077adab022efbce550dbf9725f3f37e9b9e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f6e029ed166111d1178f29e7ab63f78f044554/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f6e029ed166111d1178f29e7ab63f78f044554/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96f6e029ed166111d1178f29e7ab63f78f044554", "patch": "@@ -1,3 +1,10 @@\n+2014-10-07  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* config/i386/adxintrin.h (_subborrow_u64): Use long long for param\n+\ttype.\n+\t(_addcarry_u64): Ditto.\n+\t(_addcarryx_u64): Ditto.\n+\n 2014-10-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cgraph.h (cgraph_node::get_fun): Declare."}, {"sha": "00a9b8680210ad402ac85c80153c40ea935cd6a2", "filename": "gcc/config/i386/adxintrin.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f6e029ed166111d1178f29e7ab63f78f044554/gcc%2Fconfig%2Fi386%2Fadxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f6e029ed166111d1178f29e7ab63f78f044554/gcc%2Fconfig%2Fi386%2Fadxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fadxintrin.h?ref=96f6e029ed166111d1178f29e7ab63f78f044554", "patch": "@@ -55,24 +55,24 @@ _addcarryx_u32 (unsigned char __CF, unsigned int __X,\n #ifdef __x86_64__\n extern __inline unsigned char\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_subborrow_u64 (unsigned char __CF, unsigned long __X,\n-\t        unsigned long __Y, unsigned long long *__P)\n+_subborrow_u64 (unsigned char __CF, unsigned long long __X,\n+\t        unsigned long long __Y, unsigned long long *__P)\n {\n     return __builtin_ia32_sbb_u64 (__CF, __Y, __X, __P);\n }\n \n extern __inline unsigned char\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_addcarry_u64 (unsigned char __CF, unsigned long __X,\n-\t       unsigned long __Y, unsigned long long *__P)\n+_addcarry_u64 (unsigned char __CF, unsigned long long __X,\n+\t       unsigned long long __Y, unsigned long long *__P)\n {\n     return __builtin_ia32_addcarryx_u64 (__CF, __X, __Y, __P);\n }\n \n extern __inline unsigned char\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_addcarryx_u64 (unsigned char __CF, unsigned long __X,\n-\t\tunsigned long __Y, unsigned long long *__P)\n+_addcarryx_u64 (unsigned char __CF, unsigned long long __X,\n+\t\tunsigned long long __Y, unsigned long long *__P)\n {\n     return __builtin_ia32_addcarryx_u64 (__CF, __X, __Y, __P);\n }"}]}