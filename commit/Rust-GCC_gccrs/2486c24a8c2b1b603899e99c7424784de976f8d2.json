{"sha": "2486c24a8c2b1b603899e99c7424784de976f8d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4NmMyNGE4YzJiMWI2MDM4OTllOTljNzQyNDc4NGRlOTc2ZjhkMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-03-28T14:05:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-03-28T14:05:49Z"}, "message": "simple-object.c (simple_object_internal_read): Handle EINTR and short reads.\n\n2014-03-28  Richard Biener  <rguenther@suse.de>\n\n\tlibiberty/\n\t* simple-object.c (simple_object_internal_read): Handle\n\tEINTR and short reads.\n\n\tlto-plugin/\n\t* lto-plugin.c (process_symtab): Handle EINTR and short reads.\n\nFrom-SVN: r208898", "tree": {"sha": "38b79b8e6b3752931473310ae11ff056cd4f3917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38b79b8e6b3752931473310ae11ff056cd4f3917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2486c24a8c2b1b603899e99c7424784de976f8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2486c24a8c2b1b603899e99c7424784de976f8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2486c24a8c2b1b603899e99c7424784de976f8d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2486c24a8c2b1b603899e99c7424784de976f8d2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44d627891f0b723466894603f5bb0cfc1eeea5c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d627891f0b723466894603f5bb0cfc1eeea5c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d627891f0b723466894603f5bb0cfc1eeea5c9"}], "stats": {"total": 76, "additions": 56, "deletions": 20}, "files": [{"sha": "f20fac0aabbce3487f13567783dc3a495144b670", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2486c24a8c2b1b603899e99c7424784de976f8d2/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2486c24a8c2b1b603899e99c7424784de976f8d2/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=2486c24a8c2b1b603899e99c7424784de976f8d2", "patch": "@@ -1,3 +1,8 @@\n+2014-03-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* simple-object.c (simple_object_internal_read): Handle\n+\tEINTR and short reads.\n+\n 2014-03-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* regex.c (bzero) [!_LIBC]: Define without coma expression."}, {"sha": "263d174051dafef741fb9627c1f0b18aeccb4ca3", "filename": "libiberty/simple-object.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2486c24a8c2b1b603899e99c7424784de976f8d2/libiberty%2Fsimple-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2486c24a8c2b1b603899e99c7424784de976f8d2/libiberty%2Fsimple-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object.c?ref=2486c24a8c2b1b603899e99c7424784de976f8d2", "patch": "@@ -63,24 +63,33 @@ simple_object_internal_read (int descriptor, off_t offset,\n \t\t\t     unsigned char *buffer, size_t size,\n \t\t\t     const char **errmsg, int *err)\n {\n-  ssize_t got;\n-\n   if (lseek (descriptor, offset, SEEK_SET) < 0)\n     {\n       *errmsg = \"lseek\";\n       *err = errno;\n       return 0;\n     }\n \n-  got = read (descriptor, buffer, size);\n-  if (got < 0)\n+  do\n     {\n-      *errmsg = \"read\";\n-      *err = errno;\n-      return 0;\n+      ssize_t got = read (descriptor, buffer, size);\n+      if (got == 0)\n+\tbreak;\n+      else if (got > 0)\n+\t{\n+\t  buffer += got;\n+\t  size -= got;\n+\t}\n+      else if (errno != EINTR)\n+\t{\n+\t  *errmsg = \"read\";\n+\t  *err = errno;\n+\t  return 0;\n+\t}\n     }\n+  while (size > 0);\n \n-  if ((size_t) got < size)\n+  if (size > 0)\n     {\n       *errmsg = \"file too short\";\n       *err = 0;"}, {"sha": "8dcbc08bb5c6a890e6409b8d9f781a54f32754af", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2486c24a8c2b1b603899e99c7424784de976f8d2/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2486c24a8c2b1b603899e99c7424784de976f8d2/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=2486c24a8c2b1b603899e99c7424784de976f8d2", "patch": "@@ -1,3 +1,7 @@\n+2014-03-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto-plugin.c (process_symtab): Handle EINTR and short reads.\n+\n 2014-03-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac (ac_lto_plugin_ldflags): Set to -Wc,-static-libgcc"}, {"sha": "1432340b015c92cf51f26d14eb3f71ca77bb45a1", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2486c24a8c2b1b603899e99c7424784de976f8d2/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2486c24a8c2b1b603899e99c7424784de976f8d2/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=2486c24a8c2b1b603899e99c7424784de976f8d2", "patch": "@@ -39,6 +39,7 @@ along with this program; see the file COPYING3.  If not see\n #include <stdint.h>\n #endif\n #include <assert.h>\n+#include <errno.h>\n #include <string.h>\n #include <stdlib.h>\n #include <stdio.h>\n@@ -817,31 +818,48 @@ process_symtab (void *data, const char *name, off_t offset, off_t length)\n {\n   struct plugin_objfile *obj = (struct plugin_objfile *)data;\n   char *s;\n-  char *secdata;\n+  char *secdatastart, *secdata;\n \n   if (strncmp (name, LTO_SECTION_PREFIX, LTO_SECTION_PREFIX_LEN) != 0)\n     return 1;\n \n   s = strrchr (name, '.');\n   if (s)\n     sscanf (s, \".%\" PRI_LL \"x\", &obj->out->id);\n-  secdata = xmalloc (length);\n+  secdata = secdatastart = xmalloc (length);\n   offset += obj->file->offset;\n-  if (offset != lseek (obj->file->fd, offset, SEEK_SET)\n-\t|| length != read (obj->file->fd, secdata, length))\n+  if (offset != lseek (obj->file->fd, offset, SEEK_SET))\n+    goto err;\n+\n+  do\n     {\n-      if (message)\n-\tmessage (LDPL_FATAL, \"%s: corrupt object file\", obj->file->name);\n-      /* Force claim_file_handler to abandon this file.  */\n-      obj->found = 0;\n-      free (secdata);\n-      return 0;\n+      ssize_t got = read (obj->file->fd, secdata, length);\n+      if (got == 0)\n+\tbreak;\n+      else if (got > 0)\n+\t{\n+\t  secdata += got;\n+\t  length -= got;\n+\t}\n+      else if (errno != EINTR)\n+\tgoto err;\n     }\n+  while (length > 0);\n+  if (length > 0)\n+    goto err;\n \n-  translate (secdata, secdata + length, obj->out);\n+  translate (secdatastart, secdata, obj->out);\n   obj->found++;\n-  free (secdata);\n+  free (secdatastart);\n   return 1;\n+\n+err:\n+  if (message)\n+    message (LDPL_FATAL, \"%s: corrupt object file\", obj->file->name);\n+  /* Force claim_file_handler to abandon this file.  */\n+  obj->found = 0;\n+  free (secdatastart);\n+  return 0;\n }\n \n /* Callback used by gold to check if the plugin will claim FILE. Writes"}]}