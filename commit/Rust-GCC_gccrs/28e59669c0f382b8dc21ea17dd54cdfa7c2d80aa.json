{"sha": "28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlNTk2NjljMGYzODJiOGRjMjFlYTE3ZGQ1NGNkZmE3YzJkODBhYQ==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-01T10:57:06Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-01T10:57:06Z"}, "message": "New test from Craig.\n\nFrom-SVN: r20873", "tree": {"sha": "7feaff245f0130fb095836a7e5b81f367eb09224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7feaff245f0130fb095836a7e5b81f367eb09224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa/comments", "author": null, "committer": null, "parents": [{"sha": "a752ed65103481729e9072869942458f487199b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a752ed65103481729e9072869942458f487199b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a752ed65103481729e9072869942458f487199b2"}], "stats": {"total": 144, "additions": 144, "deletions": 0}, "files": [{"sha": "a3ddd55473a7564c2cb767f1f07d971ec406f9e6", "filename": "gcc/testsuite/g77.f-torture/execute/980701-0.f", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-0.f?ref=28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa", "patch": "@@ -0,0 +1,72 @@\n+* g77 0.5.23 and previous had bugs involving too little space\n+* allocated for EQUIVALENCE and COMMON areas needing initial\n+* padding to meet alignment requirements of the system.\n+\n+      call subr\n+      end\n+\n+      subroutine subr\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      real s1(2), s2(2), s3(2)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+      equivalence (r1, s1(2))\n+      equivalence (d1, r1(2))\n+      equivalence (r2, s2(2))\n+      equivalence (d2, r2(2))\n+      equivalence (r3, s3(2))\n+      equivalence (d3, r3(2))\n+\n+      s1(1) = 1.\n+      r1(1) = 1.\n+      d1 = 10.\n+      r1(4) = 1.\n+      r1(5) = 1.\n+      i1 = 1\n+      s2(1) = 2.\n+      r2(1) = 2.\n+      d2 = 20.\n+      r2(4) = 2.\n+      r2(5) = 2.\n+      i2 = 2\n+      s3(1) = 3.\n+      r3(1) = 3.\n+      d3 = 30.\n+      r3(4) = 3.\n+      r3(5) = 3.\n+      i3 = 3\n+\n+      call x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n+\n+      end\n+\n+      subroutine x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      real s1(2), s2(2), s3(2)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+\n+      if (s1(1) .ne. 1.) call abort\n+      if (r1(1) .ne. 1.) call abort\n+      if (d1 .ne. 10.) call abort\n+      if (r1(4) .ne. 1.) call abort\n+      if (r1(5) .ne. 1.) call abort\n+      if (i1 .ne. 1) call abort\n+      if (s2(1) .ne. 2.) call abort\n+      if (r2(1) .ne. 2.) call abort\n+      if (d2 .ne. 20.) call abort\n+      if (r2(4) .ne. 2.) call abort\n+      if (r2(5) .ne. 2.) call abort\n+      if (i2 .ne. 2) call abort\n+      if (s3(1) .ne. 3.) call abort\n+      if (r3(1) .ne. 3.) call abort\n+      if (d3 .ne. 30.) call abort\n+      if (r3(4) .ne. 3.) call abort\n+      if (r3(5) .ne. 3.) call abort\n+      if (i3 .ne. 3) call abort\n+\n+      end"}, {"sha": "fba78564572351d8349e0131c511bf79efb4f3ac", "filename": "gcc/testsuite/g77.f-torture/execute/980701-1.f", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-1.f?ref=28e59669c0f382b8dc21ea17dd54cdfa7c2d80aa", "patch": "@@ -0,0 +1,72 @@\n+* g77 0.5.23 and previous had bugs involving too little space\n+* allocated for EQUIVALENCE and COMMON areas needing initial\n+* padding to meet alignment requirements of the system.\n+\n+      call subr\n+      end\n+\n+      subroutine subr\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      real s1(2), s2(2), s3(2)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+      equivalence (d1, r1(2))\n+      equivalence (r1, s1(2))\n+      equivalence (d2, r2(2))\n+      equivalence (r2, s2(2))\n+      equivalence (d3, r3(2))\n+      equivalence (r3, s3(2))\n+\n+      s1(1) = 1.\n+      r1(1) = 1.\n+      d1 = 10.\n+      r1(4) = 1.\n+      r1(5) = 1.\n+      i1 = 1\n+      s2(1) = 2.\n+      r2(1) = 2.\n+      d2 = 20.\n+      r2(4) = 2.\n+      r2(5) = 2.\n+      i2 = 2\n+      s3(1) = 3.\n+      r3(1) = 3.\n+      d3 = 30.\n+      r3(4) = 3.\n+      r3(5) = 3.\n+      i3 = 3\n+\n+      call x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n+\n+      end\n+\n+      subroutine x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      real s1(2), s2(2), s3(2)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+\n+      if (s1(1) .ne. 1.) call abort\n+      if (r1(1) .ne. 1.) call abort\n+      if (d1 .ne. 10.) call abort\n+      if (r1(4) .ne. 1.) call abort\n+      if (r1(5) .ne. 1.) call abort\n+      if (i1 .ne. 1) call abort\n+      if (s2(1) .ne. 2.) call abort\n+      if (r2(1) .ne. 2.) call abort\n+      if (d2 .ne. 20.) call abort\n+      if (r2(4) .ne. 2.) call abort\n+      if (r2(5) .ne. 2.) call abort\n+      if (i2 .ne. 2) call abort\n+      if (s3(1) .ne. 3.) call abort\n+      if (r3(1) .ne. 3.) call abort\n+      if (d3 .ne. 30.) call abort\n+      if (r3(4) .ne. 3.) call abort\n+      if (r3(5) .ne. 3.) call abort\n+      if (i3 .ne. 3) call abort\n+\n+      end"}]}