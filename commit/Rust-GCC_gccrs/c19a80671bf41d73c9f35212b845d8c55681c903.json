{"sha": "c19a80671bf41d73c9f35212b845d8c55681c903", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE5YTgwNjcxYmY0MWQ3M2M5ZjM1MjEyYjg0NWQ4YzU1NjgxYzkwMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@phydeaux.cygnus.com", "date": "1995-05-17T23:34:39Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1995-05-17T23:34:39Z"}, "message": "72nd Cygnus<->FSF merge\n\nFrom-SVN: r9737", "tree": {"sha": "fcc2cbf51827e2dec951daa530d1e943b71c0612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcc2cbf51827e2dec951daa530d1e943b71c0612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c19a80671bf41d73c9f35212b845d8c55681c903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19a80671bf41d73c9f35212b845d8c55681c903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c19a80671bf41d73c9f35212b845d8c55681c903", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19a80671bf41d73c9f35212b845d8c55681c903/comments", "author": null, "committer": null, "parents": [{"sha": "01e7bd9ad266390ee411603018a015a4cd2a0d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e7bd9ad266390ee411603018a015a4cd2a0d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e7bd9ad266390ee411603018a015a4cd2a0d4c"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "e8bc6e22282badf944c71f536773674f9f8965c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19a80671bf41d73c9f35212b845d8c55681c903/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19a80671bf41d73c9f35212b845d8c55681c903/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c19a80671bf41d73c9f35212b845d8c55681c903", "patch": "@@ -1,3 +1,12 @@\n+Wed May 17 01:43:58 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n+\n+\t* class.c (finish_struct): Don't complain about a class with no\n+\tuser-defined constructors but with a member that has no default\n+\tconstructor, as this is OK for aggregates.\n+\n+\t* expr.c (cplus_expand_expr, NEW_EXPR): If this is an explicit\n+\tconstructor call, mark slot addressable.\n+\n Tue May 16 18:37:51 1995  Douglas Rupp  (drupp@cs.washington.edu)\n \n \t* g++.c: Changed WINNT to _WIN32."}, {"sha": "a1a1fa8c434edd677a353c656808e967d3530e3a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19a80671bf41d73c9f35212b845d8c55681c903/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19a80671bf41d73c9f35212b845d8c55681c903/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c19a80671bf41d73c9f35212b845d8c55681c903", "patch": "@@ -3287,6 +3287,8 @@ finish_struct (t, list_of_fieldlists, warn_anon)\n \t\t      && ! TYPE_HAS_DEFAULT_CONSTRUCTOR (type))\n \t\t    {\n \t\t      cant_have_default_ctor = 1;\n+#if 0\n+\t\t      /* This is wrong for aggregates.  */\n \t\t      if (! TYPE_HAS_CONSTRUCTOR (t))\n \t\t\t{\n \t\t\t  if (DECL_NAME (x))\n@@ -3296,6 +3298,7 @@ finish_struct (t, list_of_fieldlists, warn_anon)\n \t\t\t  cp_pedwarn_at (\"in class without a constructor\",\n \t\t\t\t\t x);\n \t\t\t}\n+#endif\n \t\t    }\n \t\t}\n \t      if (DECL_INITIAL (x) != NULL_TREE)"}, {"sha": "27da793b1a7ed4060e0729742cb6dc8eb69ac140", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19a80671bf41d73c9f35212b845d8c55681c903/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19a80671bf41d73c9f35212b845d8c55681c903/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=c19a80671bf41d73c9f35212b845d8c55681c903", "patch": "@@ -107,6 +107,7 @@ cplus_expand_expr (exp, target, tmode, modifier)\n \t    type = TYPE_POINTER_TO (type);\n \t    /* Don't clobber a value that might be part of a default\n \t       parameter value.  */\n+\t    mark_addressable (slot);\n \t    if (TREE_PERMANENT (args))\n \t      args = tree_cons (0, build1 (ADDR_EXPR, type, slot),\n \t\t\t\tTREE_CHAIN (args));"}]}