{"sha": "61f727fe02c8d9a42b7e45505bf853231415a525", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmNzI3ZmUwMmM4ZDlhNDJiN2U0NTUwNWJmODUzMjMxNDE1YTUyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-04T09:02:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-04T09:02:01Z"}, "message": "re PR target/69454 (ix86_expand_prologue internal compiler error: Segmentation fault)\n\n\tPR target/69454\n\t* config/i386/i386.c (convert_scalars_to_vector): Remove\n\tstack alignment fixes.\n\t(ix86_option_override_internal): Disable TARGET_STV if stack\n\tmight not be aligned enough.\n\t(ix86_minimum_alignment): Assert that TARGET_STV is false.\n\n\t* gcc.target/i386/pr69454-1.c: New test.\n\t* gcc.target/i386/pr69454-2.c: New test.\n\nFrom-SVN: r233128", "tree": {"sha": "998adbb47ccffae371918a482d2f81c08f06132d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/998adbb47ccffae371918a482d2f81c08f06132d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61f727fe02c8d9a42b7e45505bf853231415a525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f727fe02c8d9a42b7e45505bf853231415a525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f727fe02c8d9a42b7e45505bf853231415a525", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f727fe02c8d9a42b7e45505bf853231415a525/comments", "author": null, "committer": null, "parents": [{"sha": "07d88205a6bd6cc94fdf981f399a3871bce6d3f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d88205a6bd6cc94fdf981f399a3871bce6d3f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d88205a6bd6cc94fdf981f399a3871bce6d3f2"}], "stats": {"total": 63, "additions": 52, "deletions": 11}, "files": [{"sha": "1bbb60529329ce41c50892e0a3b163513e15848c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61f727fe02c8d9a42b7e45505bf853231415a525", "patch": "@@ -1,3 +1,14 @@\n+2016-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\t    Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/69454\n+\t* config/i386/i386.c (convert_scalars_to_vector): Remove\n+\tstack alignment fixes.\n+\t(ix86_option_override_internal): Disable TARGET_STV if stack\n+\tmight not be aligned enough.\n+\t(ix86_minimum_alignment): Assert that TARGET_STV is false.\n+\n 2016-02-04  Victoria Stepanyan  <victoria.stepanyan@amd.com>\n \n \t* gcc/config/i386/x86-tune.def: Disable default prefetching "}, {"sha": "366325441f93789e59068ff3a0e72d430660d2e6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=61f727fe02c8d9a42b7e45505bf853231415a525", "patch": "@@ -3588,16 +3588,6 @@ convert_scalars_to_vector ()\n   bitmap_obstack_release (NULL);\n   df_process_deferred_rescans ();\n \n-  /* Conversion means we may have 128bit register spills/fills\n-     which require aligned stack.  */\n-  if (converted_insns)\n-    {\n-      if (crtl->stack_alignment_needed < 128)\n-\tcrtl->stack_alignment_needed = 128;\n-      if (crtl->stack_alignment_estimated < 128)\n-\tcrtl->stack_alignment_estimated = 128;\n-    }\n-\n   return 0;\n }\n \n@@ -5453,6 +5443,13 @@ ix86_option_override_internal (bool main_args_p,\n     opts->x_target_flags |= MASK_VZEROUPPER;\n   if (!(opts_set->x_target_flags & MASK_STV))\n     opts->x_target_flags |= MASK_STV;\n+  /* Disable STV if -mpreferred-stack-boundary=2 or\n+     -mincoming-stack-boundary=2 - the needed\n+     stack realignment will be extra cost the pass doesn't take into\n+     account and the pass can't realign the stack.  */\n+  if (ix86_preferred_stack_boundary < 64\n+      || ix86_incoming_stack_boundary < 64)\n+    opts->x_target_flags &= ~MASK_STV;\n   if (!ix86_tune_features[X86_TUNE_AVX256_UNALIGNED_LOAD_OPTIMAL]\n       && !(opts_set->x_target_flags & MASK_AVX256_SPLIT_UNALIGNED_LOAD))\n     opts->x_target_flags |= MASK_AVX256_SPLIT_UNALIGNED_LOAD;\n@@ -29323,7 +29320,10 @@ ix86_minimum_alignment (tree exp, machine_mode mode,\n   if ((mode == DImode || (type && TYPE_MODE (type) == DImode))\n       && (!type || !TYPE_USER_ALIGN (type))\n       && (!decl || !DECL_USER_ALIGN (decl)))\n-    return 32;\n+    {\n+      gcc_checking_assert (!TARGET_STV);\n+      return 32;\n+    }\n \n   return align;\n }"}, {"sha": "a28ead2a0739f5c7f5ec3bfe202b8aaf902ec40e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61f727fe02c8d9a42b7e45505bf853231415a525", "patch": "@@ -1,3 +1,9 @@\n+2016-02-04  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\tPR target/69454\n+\t* gcc.target/i386/pr69454-1.c: New test.\n+\t* gcc.target/i386/pr69454-2.c: New test.\n+\n 2016-02-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/69251"}, {"sha": "12ecfd324c615cb0bddd9f7c4eb354453c732bfe", "filename": "gcc/testsuite/gcc.target/i386/pr69454-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69454-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69454-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69454-1.c?ref=61f727fe02c8d9a42b7e45505bf853231415a525", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -msse2 -mno-accumulate-outgoing-args -mpreferred-stack-boundary=2\" } */\n+\n+typedef struct { long long w64[2]; } V128;\n+extern V128* fn2(void);\n+long long a;\n+V128 b;\n+void fn1() {\n+  V128 *c = fn2();\n+  c->w64[0] = a ^ b.w64[0];\n+}"}, {"sha": "28bab93ea34780003ccf7207a418a2c80db48cd4", "filename": "gcc/testsuite/gcc.target/i386/pr69454-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69454-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f727fe02c8d9a42b7e45505bf853231415a525/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69454-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69454-2.c?ref=61f727fe02c8d9a42b7e45505bf853231415a525", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -mpreferred-stack-boundary=2\" } */\n+\n+extern void fn2 ();\n+long long a, b;\n+\n+void fn1 ()\n+{\n+  long long c = a;\n+  a = b ^ a;\n+  fn2 ();\n+  a = c;\n+}"}]}