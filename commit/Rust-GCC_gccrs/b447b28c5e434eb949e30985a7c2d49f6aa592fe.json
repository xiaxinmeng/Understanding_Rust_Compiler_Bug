{"sha": "b447b28c5e434eb949e30985a7c2d49f6aa592fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ0N2IyOGM1ZTQzNGViOTQ5ZTMwOTg1YTdjMmQ0OWY2YWE1OTJmZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-04-10T20:49:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-04-10T20:49:11Z"}, "message": "re PR c++/80176 (cannot bind reference to static member function using object access expression)\n\n\tPR c++/80176\n\t* tree.c (lvalue_kind): For COMPONENT_REF with BASELINK second\n\toperand, if it is a static member function, recurse on the\n\tBASELINK.\n\n\t* g++.dg/init/ref23.C: New test.\n\nFrom-SVN: r246825", "tree": {"sha": "942477203dd8b4098eb50cb3c29b741ccb1724c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/942477203dd8b4098eb50cb3c29b741ccb1724c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b447b28c5e434eb949e30985a7c2d49f6aa592fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b447b28c5e434eb949e30985a7c2d49f6aa592fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b447b28c5e434eb949e30985a7c2d49f6aa592fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b447b28c5e434eb949e30985a7c2d49f6aa592fe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "b7cbca58e95d0351dcaea35bca91024813430840", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b447b28c5e434eb949e30985a7c2d49f6aa592fe", "patch": "@@ -1,3 +1,10 @@\n+2017-04-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/80176\n+\t* tree.c (lvalue_kind): For COMPONENT_REF with BASELINK second\n+\toperand, if it is a static member function, recurse on the\n+\tBASELINK.\n+\n 2017-04-10  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/80348"}, {"sha": "acb9b8eef0529888c383a579e173d810ff23d475", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b447b28c5e434eb949e30985a7c2d49f6aa592fe", "patch": "@@ -105,6 +105,17 @@ lvalue_kind (const_tree ref)\n       return op1_lvalue_kind;\n \n     case COMPONENT_REF:\n+      if (BASELINK_P (TREE_OPERAND (ref, 1)))\n+\t{\n+\t  tree fn = BASELINK_FUNCTIONS (TREE_OPERAND (ref, 1));\n+\n+\t  /* For static member function recurse on the BASELINK, we can get\n+\t     here e.g. from reference_binding.  If BASELINK_FUNCTIONS is\n+\t     OVERLOAD, the overload is resolved first if possible through\n+\t     resolve_address_of_overloaded_function.  */\n+\t  if (TREE_CODE (fn) == FUNCTION_DECL && DECL_STATIC_FUNCTION_P (fn))\n+\t    return lvalue_kind (TREE_OPERAND (ref, 1));\n+\t}\n       op1_lvalue_kind = lvalue_kind (TREE_OPERAND (ref, 0));\n       /* Look at the member designator.  */\n       if (!op1_lvalue_kind)"}, {"sha": "746150b60c5562b80c3fa6c2527eeaf6a71fdb2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b447b28c5e434eb949e30985a7c2d49f6aa592fe", "patch": "@@ -1,3 +1,8 @@\n+2017-04-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/80176\n+\t* g++.dg/init/ref23.C: New test.\n+\n 2017-04-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR tree-optimization/80304"}, {"sha": "12b8851f2b96674100523cbda611d0aeea794110", "filename": "gcc/testsuite/g++.dg/init/ref23.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b447b28c5e434eb949e30985a7c2d49f6aa592fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref23.C?ref=b447b28c5e434eb949e30985a7c2d49f6aa592fe", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/80176\n+// { dg-do compile }\n+\n+struct X { static void foo(); static void baz(int); static int baz(double); } x;\n+struct Y { void o(unsigned char); static void o(int); void o(double); } y;\n+void X::foo() {}\n+static void bar() {}\n+void (&r1)() = x.foo;\n+void (&r2)() = X::foo;\n+void (&r3)() = bar;\n+void (&r4)(int) = x.baz;\n+int (&r5)(double) = x.baz;\n+void (&r6)(int) = X::baz;\n+int (&r7)(double) = X::baz;\n+void (&r8)(int) = y.o;"}]}