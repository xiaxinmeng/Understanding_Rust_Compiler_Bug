{"sha": "a79e3b31be51d16c6dcc87722d35fe8cc3227355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc5ZTNiMzFiZTUxZDE2YzZkY2M4NzcyMmQzNWZlOGNjMzIyNzM1NQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-16T18:14:02Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-17T14:21:59Z"}, "message": "grouped expr wip", "tree": {"sha": "4b6153a5621609d79e46156dd66baa79ce872c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b6153a5621609d79e46156dd66baa79ce872c02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a79e3b31be51d16c6dcc87722d35fe8cc3227355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79e3b31be51d16c6dcc87722d35fe8cc3227355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79e3b31be51d16c6dcc87722d35fe8cc3227355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79e3b31be51d16c6dcc87722d35fe8cc3227355/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b06df5d4a95ec728ade9230bec945d5d3661f87d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06df5d4a95ec728ade9230bec945d5d3661f87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b06df5d4a95ec728ade9230bec945d5d3661f87d"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "58de087d11a19adb87e63a652ab5e6086343ebf3", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a79e3b31be51d16c6dcc87722d35fe8cc3227355/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a79e3b31be51d16c6dcc87722d35fe8cc3227355/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h?ref=a79e3b31be51d16c6dcc87722d35fe8cc3227355", "patch": "@@ -182,6 +182,11 @@ class ResolveExpr : public ResolverBase\n       });\n   }\n \n+  void visit (AST::GroupedExpr &expr)\n+  {\n+    ResolveExpr::go (expr.get_expr_in_parens ().get (), expr.get_node_id ());\n+  }\n+\n private:\n   ResolveExpr (NodeId parent) : ResolverBase (parent) {}\n };"}]}