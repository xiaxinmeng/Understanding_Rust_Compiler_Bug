{"sha": "0d3be08a23e839c3fd67764135a055707da261cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzYmUwOGEyM2U4MzljM2ZkNjc3NjQxMzVhMDU1NzA3ZGEyNjFjZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-02T17:01:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-02T17:40:32Z"}, "message": "x86: Add tests for piecewise move and store\n\n\t* gcc.target/i386/pieces-memcpy-10.c: New test.\n\t* gcc.target/i386/pieces-memcpy-11.c: Likewise.\n\t* gcc.target/i386/pieces-memcpy-12.c: Likewise.\n\t* gcc.target/i386/pieces-memcpy-13.c: Likewise.\n\t* gcc.target/i386/pieces-memcpy-14.c: Likewise.\n\t* gcc.target/i386/pieces-memcpy-15.c: Likewise.\n\t* gcc.target/i386/pieces-memcpy-16.c: Likewise.\n\t* gcc.target/i386/pieces-memset-1.c: Likewise.\n\t* gcc.target/i386/pieces-memset-2.c: Likewise.\n\t* gcc.target/i386/pieces-memset-3.c: Likewise.\n\t* gcc.target/i386/pieces-memset-4.c: Likewise.\n\t* gcc.target/i386/pieces-memset-5.c: Likewise.\n\t* gcc.target/i386/pieces-memset-6.c: Likewise.\n\t* gcc.target/i386/pieces-memset-7.c: Likewise.\n\t* gcc.target/i386/pieces-memset-8.c: Likewise.\n\t* gcc.target/i386/pieces-memset-9.c: Likewise.\n\t* gcc.target/i386/pieces-memset-10.c: Likewise.\n\t* gcc.target/i386/pieces-memset-11.c: Likewise.\n\t* gcc.target/i386/pieces-memset-12.c: Likewise.\n\t* gcc.target/i386/pieces-memset-13.c: Likewise.\n\t* gcc.target/i386/pieces-memset-14.c: Likewise.\n\t* gcc.target/i386/pieces-memset-15.c: Likewise.\n\t* gcc.target/i386/pieces-memset-16.c: Likewise.\n\t* gcc.target/i386/pieces-memset-17.c: Likewise.\n\t* gcc.target/i386/pieces-memset-18.c: Likewise.\n\t* gcc.target/i386/pieces-memset-19.c: Likewise.\n\t* gcc.target/i386/pieces-memset-20.c: Likewise.\n\t* gcc.target/i386/pieces-memset-21.c: Likewise.\n\t* gcc.target/i386/pieces-memset-22.c: Likewise.\n\t* gcc.target/i386/pieces-memset-23.c: Likewise.\n\t* gcc.target/i386/pieces-memset-24.c: Likewise.\n\t* gcc.target/i386/pieces-memset-25.c: Likewise.\n\t* gcc.target/i386/pieces-memset-26.c: Likewise.\n\t* gcc.target/i386/pieces-memset-27.c: Likewise.\n\t* gcc.target/i386/pieces-memset-28.c: Likewise.\n\t* gcc.target/i386/pieces-memset-29.c: Likewise.\n\t* gcc.target/i386/pieces-memset-30.c: Likewise.\n\t* gcc.target/i386/pieces-memset-31.c: Likewise.\n\t* gcc.target/i386/pieces-memset-32.c: Likewise.\n\t* gcc.target/i386/pieces-memset-33.c: Likewise.\n\t* gcc.target/i386/pieces-memset-34.c: Likewise.\n\t* gcc.target/i386/pieces-memset-35.c: Likewise.\n\t* gcc.target/i386/pieces-memset-36.c: Likewise.\n\t* gcc.target/i386/pieces-memset-37.c: Likewise.\n\t* gcc.target/i386/pieces-memset-38.c: Likewise.\n\t* gcc.target/i386/pieces-memset-39.c: Likewise.\n\t* gcc.target/i386/pieces-memset-40.c: Likewise.\n\t* gcc.target/i386/pieces-memset-41.c: Likewise.\n\t* gcc.target/i386/pieces-memset-42.c: Likewise.\n\t* gcc.target/i386/pieces-memset-43.c: Likewise.\n\t* gcc.target/i386/pieces-memset-44.c: Likewise.", "tree": {"sha": "129d5e3e60ee14edfb3cff8cfd0aa8714de5cff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/129d5e3e60ee14edfb3cff8cfd0aa8714de5cff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d3be08a23e839c3fd67764135a055707da261cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d3be08a23e839c3fd67764135a055707da261cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d3be08a23e839c3fd67764135a055707da261cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d3be08a23e839c3fd67764135a055707da261cf/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf159e5e124838ddfdb91e0688b1df60645d4ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf159e5e124838ddfdb91e0688b1df60645d4ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf159e5e124838ddfdb91e0688b1df60645d4ba9"}], "stats": {"total": 879, "additions": 879, "deletions": 0}, "files": [{"sha": "5faee21f9b9931c8bf8294bcd5d551815c4dab45", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-10.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-10.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=sandybridge\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "b8917a7f91762e02bfd688b15717b4106990b519", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-11.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-11.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "f1432ebe517860941c2caccb07a9baf697747383", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-12.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-12.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "97e6067fec9c4229f04c8c2db1a1e29ed218a8b6", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-13.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-13.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "7addc4c0a28caa329f3bba99b5a8cdf67a254e5f", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-14.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-14.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "695e8c3fa673cfe385e8002208d56198b80d4da5", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-15.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-15.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "728eba5ea3d8ec634a87abf4f4236938f392e437", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-16.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-16.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst, *src;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memcpy (dst, src, 34);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "3d248d447ea42b8fb6fe47d268625b546fdd7533", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-7.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-7.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+void\n+foo (int a1, int a2, int a3, int a4, int a5, int a6, char *dst, char *src)\n+{\n+  __builtin_memcpy (dst, src, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "c13a2beb2f0170a4bcd798e752d6f463a6c7e4c3", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-8.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-8.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=generic\" } */\n+\n+void\n+foo (int a1, int a2, int a3, int a4, int a5, int a6, char *dst, char *src)\n+{\n+  __builtin_memcpy (dst, src, 18);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "238f88b275eb7c1216f6bb1a6800073b0666664d", "filename": "gcc/testsuite/gcc.target/i386/pieces-memcpy-9.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memcpy-9.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f -mtune=generic\" } */\n+\n+void\n+foo (int a1, int a2, int a3, int a4, int a5, int a6, char *dst, char *src)\n+{\n+  __builtin_memcpy (dst, src, 19);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "2b8032684b3c2be2da9d89fd8e2a4fb3a9862d70", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-1.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "a6390d1bd8f5e4f3277f73c8af5991e942936689", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-10.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-10.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "3fb9038b04ff3773496387eb09cf2a446ce3d2c8", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-11.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-11.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "d9a10bc038e8d73a171fe8de7ad92fe9155afe6d", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-12.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-12.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "7f2cd3f58ecdf431ed0174ad291491c20265a4a7", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-13.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-13.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "45ece482464a1065aa503bc2e672e8f35f3059ad", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-14.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-14.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "2123958f8361afbf8dde3dbceada822a4dd8e183", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-15.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-15.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "1c5d124cecc67df344d0fe90a0408938cbc7ea70", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-16.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-16.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "6cdb33557c0ef1222bbe53de83f03e2549e1090c", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-17.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-17.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "02f889899d852c58070101da53b47b89c7870e29", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-18.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-18.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 3, 18);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "7e9cf2e26d8c81a67fb866fa0dda364716eebc53", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-19.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-19.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "649f344e8f639789a2e4a39c4c3f810f684ed4fc", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-2.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */"}, {"sha": "b8747e669e85460e898c6358e6dcdeaf7be61ec4", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-20.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-20.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "d87d084bf2a1cb1de2c5a13d804fe87b801b1005", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-21.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-21.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor(?:d|)\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu(?:64|8)\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vzeroupper\" } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "5f3c454ef8fdcefa278e62e1c471c6c419ae59b4", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-22.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-22.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "a3b4ffc18e00deef6eefaedc8c231178913b557a", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-23.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-23.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "5243f270f16ea6bdc73ff8e92032e0f9499f6127", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-24.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-24.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "195ddb635ebdeea4c677e1faee0acdcad678dfe4", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-25.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-25.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "13606b2da54be590f33b548b3e73d3a3504c8f98", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-26.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-26.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "c764f6ffbce8f8b90bea771e405a25b737295819", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-27.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-27.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor(?:d|)\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu(?:64|8|)\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "83c2d3f0fde012146d9e61ad2bb26abf8482639c", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-28.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-28.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "650e6fe66a56185beecdcdf1b0f102f753250866", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-29.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-29.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 64);\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "2aed6dbc68e35eafe11ef805b5c5b34639d2cce6", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-3.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512bw -mno-avx512vl -mavx512f -mtune=intel\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vinserti64x4\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" { target { ! ia32 } } } } */"}, {"sha": "dcec2c700fcbe252fe4dffe967c821334f7ad3cd", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-30.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-30.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512f -mavx2 -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 64);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "f7b5d5bfe1dbe5a2e49e484501be23937d812572", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-31.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-31.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpternlogd\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "c5ca0bd17ba290f3f7fb67e5b0615c1fbdf7979f", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-32.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-32.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "a87d1b80ae67594970195f7c040520656aa3a929", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-33.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-33.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 33);\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "0c2f1ee6049f63f8337d77c7cf7ef3d47955b088", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-34.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-34.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512f -mavx2 -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "2b9a4da8dac5cb44ee8a272e7134ff3bc6df327b", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-35.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-35.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 34);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "d1f1263c7b211031854b54e03d239201da665a50", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-36.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-36.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512f -mavx2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "ec59497b11614fb5582eafcf3375c25eb116cffe", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-37.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-37.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512f -mavx2 -mtune=generic\" } */\n+\n+void\n+foo (int a1, int a2, int a3, int a4, int a5, int a6, int x, char *dst)\n+{\n+  __builtin_memset (dst, x, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "ed4a24a54fda5b767ad54a92f490596b1f773d5c", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-38.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-38.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512f -mavx2 -mtune=sandybridge\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "0ed88b274bd4742c0b27c6985ac1915ea1642897", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-39.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-39.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-39.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-39.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512bw -mtune=generic\" } */\n+\n+void\n+foo (int a1, int a2, int a3, int a4, int a5, int a6, int x, char *dst)\n+{\n+  __builtin_memset (dst, x, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vinserti64x4\" } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "9256919bfdf8d86654579c41c4109fe708da6497", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-4.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "4eda73ead5924786994f4edd77b5a8f5ff7db7e0", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-40.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-40.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx512f -mavx2 -mtune=sandybridge\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 66);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "f86b6986da908c5b14fa19cdd2c8c0e5a8a6ee11", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-41.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-41.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=sandybridge\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "df0c122aae71d4d010064719a632e5b42895b9d0", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-42.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-42.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=sandybridge\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "2f2179c2df9e3797b5f6b7276cd00cb4a4c8be92", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-43.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-43.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=sandybridge\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpcmpeqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 2 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "ecc31be1a34748bf04933e105310cd76271e566e", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-44.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-44.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 0, 48);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "3e95db5efef82731f1505bcd6d1cf896266c6725", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-5.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=haswell\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */"}, {"sha": "d795663e1e5cfa27aef37c66fef307d883413b40", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-6.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=intel\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 33);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" { target { ! ia32 } } } } */"}, {"sha": "fd1598698176b3a9366081f43954a1fe7a04c272", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-7.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-7.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx -msse2 -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movups\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "7df0019ef63137bdb77be1c91654f00ede3df6a2", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-8.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-8.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx2 -mavx -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}, {"sha": "1ead154fe1ed6846082277be62b56503d56979bd", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-9.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3be08a23e839c3fd67764135a055707da261cf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-9.c?ref=0d3be08a23e839c3fd67764135a055707da261cf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f -mtune=generic\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int x)\n+{\n+  __builtin_memset (dst, x, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* No need to dynamically realign the stack here.  */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* Nor use a frame pointer.  */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */"}]}