{"sha": "996caac6daf068f5db3b8455db336c1df62ec4f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk2Y2FhYzZkYWYwNjhmNWRiM2I4NDU1ZGIzMzZjMWRmNjJlYzRmOQ==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2007-09-24T09:20:34Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2007-09-24T09:20:34Z"}, "message": "[patch][Bug middle-end/33472] ICE and invalid rtl sharing with complex on\nx86_64-mingw.\n\n2007-09-24  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* i386.c: (return_in_memory_ms_64): Handle return types for complex types.\n\nFrom-SVN: r128710", "tree": {"sha": "cb96f44c1051999d0e08cfe8682787a70d595649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb96f44c1051999d0e08cfe8682787a70d595649"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/996caac6daf068f5db3b8455db336c1df62ec4f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996caac6daf068f5db3b8455db336c1df62ec4f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996caac6daf068f5db3b8455db336c1df62ec4f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996caac6daf068f5db3b8455db336c1df62ec4f9/comments", "author": null, "committer": null, "parents": [{"sha": "40bc41879b1d03a4098d9e7e3689970cf88aedc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bc41879b1d03a4098d9e7e3689970cf88aedc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40bc41879b1d03a4098d9e7e3689970cf88aedc2"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "350663c9240643cc9f8d5ce6740f994c944f3a39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996caac6daf068f5db3b8455db336c1df62ec4f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996caac6daf068f5db3b8455db336c1df62ec4f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=996caac6daf068f5db3b8455db336c1df62ec4f9", "patch": "@@ -1,3 +1,7 @@\n+2007-09-24  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* i386.c:  (return_in_memory_ms_64): Handle return types for complex types.\n+\n 2007-09-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure.ac (ld_vers): Support GNU linker version xx.xx.*"}, {"sha": "c01bcbb32e1a084fb42fedeb3eef48404621be40", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996caac6daf068f5db3b8455db336c1df62ec4f9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996caac6daf068f5db3b8455db336c1df62ec4f9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=996caac6daf068f5db3b8455db336c1df62ec4f9", "patch": "@@ -4721,11 +4721,12 @@ return_in_memory_ms_64 (const_tree type, enum machine_mode mode)\n   HOST_WIDE_INT size = int_size_in_bytes (type);\n \n   /* __m128 and friends are returned in xmm0.  */\n-  if (size == 16 && VECTOR_MODE_P (mode))\n+  if (!COMPLEX_MODE_P (mode) && size == 16 && VECTOR_MODE_P (mode))\n     return 0;\n \n-  /* Otherwise, the size must be exactly in [1248].  */\n-  return (size != 1 && size != 2 && size != 4 && size != 8);\n+  /* Otherwise, the size must be exactly in [1248]. But not for complex. */\n+  return (size != 1 && size != 2 && size != 4 && size != 8)\n+         || COMPLEX_MODE_P (mode);\n }\n \n int"}]}