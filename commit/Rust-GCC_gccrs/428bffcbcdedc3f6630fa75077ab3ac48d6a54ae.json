{"sha": "428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4YmZmY2JjZGVkYzNmNjYzMGZhNzUwNzdhYjNhYzQ4ZDZhNTRhZQ==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2012-11-07T19:49:51Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2012-11-07T19:49:51Z"}, "message": "invoke.texi (-mcpu=power8): Document.\n\n\t* doc/invoke.texi (-mcpu=power8): Document.\n\t* config.in (HAVE_AS_POWER8): New.\n\t* config.gcc: Add cpu_type power8.\n\t* configure.ac: (HAVE_AS_POWER8): Check for assembler support for\n\tthe POWER8 instructions.\n\t* configure: Regenerate.\n\t* config/rs6000/rs6000.h: (ASM_CPU_POWER8_SPEC): Define.\n\t(ASM_CPU_SPEC): Pass %(asm_cpu_power8) for -mcpu=power8.\n\t(EXTRA_SPECS): Add asm_cpu_power8 spec string.\n\t* config/rs6000/rs6000-cpus.def (processor_target_table): Alias\n\tPOWER8 to POWER7.\n\t* config/rs6000/rs6000-tables.opt: Regenerate.\n\t* config/rs6000/driver-rs6000.c (ASM_CPU_SPEC): For -mcpu=power8,\n\tpass %(asm_cpu_power8)/-mpwr8.\n\t* config/rs6000/aix53.h: Likewise.\n\t* config/rs6000/aix61.h: Likewise.\n\nFrom-SVN: r193307", "tree": {"sha": "10251efaddcf0da133477c54d3d8677f44805212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10251efaddcf0da133477c54d3d8677f44805212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca78ecf41b07749728154abb7ec5fcd4bc3185d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca78ecf41b07749728154abb7ec5fcd4bc3185d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca78ecf41b07749728154abb7ec5fcd4bc3185d8"}], "stats": {"total": 117, "additions": 108, "deletions": 9}, "files": [{"sha": "ae956a5cf6353fb29413f05c0e9047a14df48e78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -1,3 +1,22 @@\n+2012-11-07  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* doc/invoke.texi (-mcpu=power8): Document.\n+\t* config.in (HAVE_AS_POWER8): New.\n+\t* config.gcc: Add cpu_type power8.\n+\t* configure.ac: (HAVE_AS_POWER8): Check for assembler support for\n+\tthe POWER8 instructions.\n+\t* configure: Regenerate.\n+\t* config/rs6000/rs6000.h: (ASM_CPU_POWER8_SPEC): Define.\n+\t(ASM_CPU_SPEC): Pass %(asm_cpu_power8) for -mcpu=power8.\n+\t(EXTRA_SPECS): Add asm_cpu_power8 spec string.\n+\t* config/rs6000/rs6000-cpus.def (processor_target_table): Alias\n+\tPOWER8 to POWER7.\n+\t* config/rs6000/rs6000-tables.opt: Regenerate.\n+\t* config/rs6000/driver-rs6000.c (ASM_CPU_SPEC): For -mcpu=power8,\n+\tpass %(asm_cpu_power8)/-mpwr8.\n+\t* config/rs6000/aix53.h: Likewise.\n+\t* config/rs6000/aix61.h: Likewise.\n+\n 2012-11-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/55224"}, {"sha": "b0f6f1d0c4aa134f5f54d171deeca8d7ff8161b9", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -424,7 +424,7 @@ powerpc*-*-*)\n \textra_headers=\"ppc-asm.h altivec.h spe.h ppu_intrinsics.h paired.h spu2vmx.h vec_types.h si2vmx.h\"\n \tneed_64bit_hwint=yes\n \tcase x$with_cpu in\n-\t    xpowerpc64|xdefault64|x6[23]0|x970|xG5|xpower[34567]|xpower6x|xrs64a|xcell|xa2|xe500mc64|xe5500|Xe6500)\n+\t    xpowerpc64|xdefault64|x6[23]0|x970|xG5|xpower[345678]|xpower6x|xrs64a|xcell|xa2|xe500mc64|xe5500|Xe6500)\n \t\tcpu_is_64bit=yes\n \t\t;;\n \tesac\n@@ -3460,7 +3460,7 @@ case \"${target}\" in\n \t\t\t\teval \"with_$which=405\"\n \t\t\t\t;;\n \t\t\t\"\" | common \\\n-\t\t\t| power | power[234567] | power6x | powerpc | powerpc64 \\\n+\t\t\t| power | power[2345678] | power6x | powerpc | powerpc64 \\\n \t\t\t| rios | rios1 | rios2 | rsc | rsc1 | rs64a \\\n \t\t\t| 401 | 403 | 405 | 405fp | 440 | 440fp | 464 | 464fp \\\n \t\t\t| 476 | 476fp | 505 | 601 | 602 | 603 | 603e | ec603e \\"}, {"sha": "ee2a4d8b57c1affff1df120a9c84a8828c7637f8", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -441,6 +441,12 @@\n #endif\n \n \n+/* Define if your assembler supports POWER8 instructions. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_POWER8\n+#endif\n+\n+\n /* Define if your assembler supports .ref */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_REF"}, {"sha": "baafb51af295858a08c4e594e798d614df3ddeed", "filename": "gcc/config/rs6000/aix53.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Faix53.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Faix53.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix53.h?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -62,6 +62,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcpu=power6: -mpwr6} \\\n %{mcpu=power6x: -mpwr6} \\\n %{mcpu=power7: -mpwr7} \\\n+%{mcpu=power8: -mpwr8} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rs64a: -mppc} \\\n %{mcpu=603: -m603} \\"}, {"sha": "3fa48a8b9f6cbc5b2bb249539b1951fe0e24d3c6", "filename": "gcc/config/rs6000/aix61.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Faix61.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Faix61.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix61.h?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -62,6 +62,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcpu=power6: -mpwr6} \\\n %{mcpu=power6x: -mpwr6} \\\n %{mcpu=power7: -mpwr7} \\\n+%{mcpu=power8: -mpwr8} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rs64a: -mppc} \\\n %{mcpu=603: -m603} \\"}, {"sha": "13381168e8ef2e5e35788551aa85c7cd2d9a1fdf", "filename": "gcc/config/rs6000/driver-rs6000.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -354,6 +354,7 @@ static const struct asm_name asm_names[] = {\n   { \"power6\",\t\"-mpwr6\" },\n   { \"power6x\",\t\"-mpwr6\" },\n   { \"power7\",\t\"-mpwr7\" },\n+  { \"power8\",\t\"-mpwr8\" },\n   { \"powerpc\",\t\"-mppc\" },\n   { \"rs64a\",\t\"-mppc\" },\n   { \"603\",\t\"-m603\" },\n@@ -379,6 +380,7 @@ static const struct asm_name asm_names[] = {\n   { \"power6\",\t\"%(asm_cpu_power6) -maltivec\" },\n   { \"power6x\",\t\"%(asm_cpu_power6) -maltivec\" },\n   { \"power7\",\t\"%(asm_cpu_power7)\" },\n+  { \"power8\",\t\"%(asm_cpu_power8)\" },\n   { \"powerpc\",\t\"-mppc\" },\n   { \"rs64a\",\t\"-mppc64\" },\n   { \"401\",\t\"-mppc\" },"}, {"sha": "9119f30d89470699cbb3cc2c7ce7748e2f4ab28e", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -166,6 +166,10 @@ RS6000_CPU (\"power7\", PROCESSOR_POWER7,   /* Don't add MASK_ISEL by default */\n \t    POWERPC_7400_MASK | MASK_POWERPC64 | MASK_PPC_GPOPT | MASK_MFCRF\n \t    | MASK_POPCNTB | MASK_FPRND | MASK_CMPB | MASK_DFP | MASK_POPCNTD\n \t    | MASK_VSX | MASK_RECIP_PRECISION)\n+RS6000_CPU (\"power8\", PROCESSOR_POWER7,   /* Don't add MASK_ISEL by default */\n+\t    POWERPC_7400_MASK | MASK_POWERPC64 | MASK_PPC_GPOPT | MASK_MFCRF\n+\t    | MASK_POPCNTB | MASK_FPRND | MASK_CMPB | MASK_DFP | MASK_POPCNTD\n+\t    | MASK_VSX | MASK_RECIP_PRECISION)\n RS6000_CPU (\"powerpc\", PROCESSOR_POWERPC, 0)\n RS6000_CPU (\"powerpc64\", PROCESSOR_POWERPC64, MASK_PPC_GFXOPT | MASK_POWERPC64)\n RS6000_CPU (\"rs64\", PROCESSOR_RS64A, MASK_PPC_GFXOPT | MASK_POWERPC64)"}, {"sha": "001988140d29fa7d68e0b9dd4be0f46190464620", "filename": "gcc/config/rs6000/rs6000-tables.opt", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Frs6000-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Frs6000-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-tables.opt?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -177,11 +177,14 @@ EnumValue\n Enum(rs6000_cpu_opt_value) String(power7) Value(49)\n \n EnumValue\n-Enum(rs6000_cpu_opt_value) String(powerpc) Value(50)\n+Enum(rs6000_cpu_opt_value) String(power8) Value(50)\n \n EnumValue\n-Enum(rs6000_cpu_opt_value) String(powerpc64) Value(51)\n+Enum(rs6000_cpu_opt_value) String(powerpc) Value(51)\n \n EnumValue\n-Enum(rs6000_cpu_opt_value) String(rs64) Value(52)\n+Enum(rs6000_cpu_opt_value) String(powerpc64) Value(52)\n+\n+EnumValue\n+Enum(rs6000_cpu_opt_value) String(rs64) Value(53)\n "}, {"sha": "f7b0be277769d9895b7b82984c95d9d9342400fd", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -89,6 +89,12 @@\n #define ASM_CPU_POWER7_SPEC \"-mpower4 -maltivec\"\n #endif\n \n+#ifdef HAVE_AS_POWER8\n+#define ASM_CPU_POWER8_SPEC \"-mpower8\"\n+#else\n+#define ASM_CPU_POWER8_SPEC \"-mpower4 -maltivec\"\n+#endif\n+\n #ifdef HAVE_AS_DCI\n #define ASM_CPU_476_SPEC \"-m476\"\n #else\n@@ -112,6 +118,7 @@\n %{mcpu=power6: %(asm_cpu_power6) -maltivec} \\\n %{mcpu=power6x: %(asm_cpu_power6) -maltivec} \\\n %{mcpu=power7: %(asm_cpu_power7)} \\\n+%{mcpu=power8: %(asm_cpu_power8)} \\\n %{mcpu=a2: -ma2} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rs64a: -mppc64} \\\n@@ -184,6 +191,7 @@\n   { \"asm_cpu_power5\",\t\tASM_CPU_POWER5_SPEC },\t\t\t\\\n   { \"asm_cpu_power6\",\t\tASM_CPU_POWER6_SPEC },\t\t\t\\\n   { \"asm_cpu_power7\",\t\tASM_CPU_POWER7_SPEC },\t\t\t\\\n+  { \"asm_cpu_power8\",\t\tASM_CPU_POWER8_SPEC },\t\t\t\\\n   { \"asm_cpu_476\",\t\tASM_CPU_476_SPEC },\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n "}, {"sha": "55164b66c9205a8af04967d1ef85d49feaf19076", "filename": "gcc/configure", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -25210,6 +25210,48 @@ if test $gcc_cv_as_powerpc_popcntd = yes; then\n \n $as_echo \"#define HAVE_AS_POPCNTD 1\" >>confdefs.h\n \n+fi\n+\n+    case $target in\n+      *-*-aix*) conftest_s='\t.machine \"pwr8\"\n+\t.csect .text[PR]';;\n+      *) conftest_s='\t.machine power8\n+\t.text';;\n+    esac\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for power8 support\" >&5\n+$as_echo_n \"checking assembler for power8 support... \" >&6; }\n+if test \"${gcc_cv_as_powerpc_power8+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_powerpc_power8=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 19 \\) \\* 1000 + 2`\n+  then gcc_cv_as_powerpc_power8=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    $as_echo \"$conftest_s\" > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -a32 -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_powerpc_power8=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_power8\" >&5\n+$as_echo \"$gcc_cv_as_powerpc_power8\" >&6; }\n+if test $gcc_cv_as_powerpc_power8 = yes; then\n+\n+$as_echo \"#define HAVE_AS_POWER8 1\" >>confdefs.h\n+\n fi\n \n     case $target in"}, {"sha": "fbda2cc02079e974092c39f33121d6d4cefe991e", "filename": "gcc/configure.ac", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -3863,6 +3863,19 @@ LCF0:\n       [AC_DEFINE(HAVE_AS_POPCNTD, 1,\n \t  [Define if your assembler supports POPCNTD instructions.])])\n \n+    case $target in\n+      *-*-aix*) conftest_s='\t.machine \"pwr8\"\n+\t.csect .text[[PR]]';;\n+      *) conftest_s='\t.machine power8\n+\t.text';;\n+    esac\n+\n+    gcc_GAS_CHECK_FEATURE([power8 support],\n+      gcc_cv_as_powerpc_power8, [2,19,2], -a32,\n+      [$conftest_s],,\n+      [AC_DEFINE(HAVE_AS_POWER8, 1,\n+\t  [Define if your assembler supports POWER8 instructions.])])\n+\n     case $target in\n       *-*-aix*) conftest_s='\t.csect .text[[PR]]\n \tlwsync';;"}, {"sha": "f6d3a588809771b2ac45ce422dc710f056426b09", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428bffcbcdedc3f6630fa75077ab3ac48d6a54ae/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=428bffcbcdedc3f6630fa75077ab3ac48d6a54ae", "patch": "@@ -17101,7 +17101,7 @@ Supported values for @var{cpu_type} are @samp{401}, @samp{403},\n @samp{e300c3}, @samp{e500mc}, @samp{e500mc64}, @samp{e5500},\n @samp{e6500}, @samp{ec603e}, @samp{G3}, @samp{G4}, @samp{G5},\n @samp{titan}, @samp{power3}, @samp{power4}, @samp{power5}, @samp{power5+},\n-@samp{power6}, @samp{power6x}, @samp{power7}, @samp{powerpc},\n+@samp{power6}, @samp{power6x}, @samp{power7}, @samp{power8}, @samp{powerpc},\n @samp{powerpc64}, and @samp{rs64}.\n \n @option{-mcpu=powerpc}, and @option{-mcpu=powerpc64} specify pure 32-bit\n@@ -17903,9 +17903,9 @@ which handle the double-precision reciprocal square root calculations.\n @opindex mrecip-precision\n Assume (do not assume) that the reciprocal estimate instructions\n provide higher-precision estimates than is mandated by the PowerPC\n-ABI.  Selecting @option{-mcpu=power6} or @option{-mcpu=power7}\n-automatically selects @option{-mrecip-precision}.  The double-precision \n-square root estimate instructions are not generated by\n+ABI.  Selecting @option{-mcpu=power6}, @option{-mcpu=power7} or\n+@option{-mcpu=power8} automatically selects @option{-mrecip-precision}.\n+The double-precision square root estimate instructions are not generated by\n default on low-precision machines, since they do not provide an\n estimate that converges after three steps.\n "}]}