{"sha": "21440b2da2e62429e7d5f156c10433966a718bc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE0NDBiMmRhMmU2MjQyOWU3ZDVmMTU2YzEwNDMzOTY2YTcxOGJjMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-03-17T13:10:24Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-03-17T13:10:24Z"}, "message": "re PR target/39477 (Incorrect document for regparm attribute)\n\n2009-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/39477\n\t* doc/extend.texi: Correct register behavior for regparm on\n\tIntel 386.\n\nFrom-SVN: r144903", "tree": {"sha": "3e270e51d601dd5931f486f1a1d67e0998e0df38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e270e51d601dd5931f486f1a1d67e0998e0df38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21440b2da2e62429e7d5f156c10433966a718bc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21440b2da2e62429e7d5f156c10433966a718bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21440b2da2e62429e7d5f156c10433966a718bc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21440b2da2e62429e7d5f156c10433966a718bc0/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8905c6aa80516ca6c97ecf139e31431fec6d5d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8905c6aa80516ca6c97ecf139e31431fec6d5d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8905c6aa80516ca6c97ecf139e31431fec6d5d1"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "42240dccb254840f27bcd8bd76d0c4761a18dcfd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21440b2da2e62429e7d5f156c10433966a718bc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21440b2da2e62429e7d5f156c10433966a718bc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21440b2da2e62429e7d5f156c10433966a718bc0", "patch": "@@ -1,3 +1,9 @@\n+2009-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/39477\n+\t* doc/extend.texi: Correct register behavior for regparm on\n+\tIntel 386.\n+\n 2009-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/39476"}, {"sha": "d335cde893bdced05d81ee4c88971f665d953eae", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21440b2da2e62429e7d5f156c10433966a718bc0/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21440b2da2e62429e7d5f156c10433966a718bc0/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=21440b2da2e62429e7d5f156c10433966a718bc0", "patch": "@@ -2792,7 +2792,7 @@ default).  Lazy binding will send the first call via resolving code in\n the loader, which might assume EAX, EDX and ECX can be clobbered, as\n per the standard calling conventions.  Solaris 8 is affected by this.\n GNU systems with GLIBC 2.1 or higher, and FreeBSD, are believed to be\n-safe since the loaders there save all registers.  (Lazy binding can be\n+safe since the loaders there save EAX, EDX and ECX.  (Lazy binding can be\n disabled with the linker or the loader if desired, to avoid the\n problem.)\n "}]}