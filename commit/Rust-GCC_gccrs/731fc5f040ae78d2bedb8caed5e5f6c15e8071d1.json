{"sha": "731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMxZmM1ZjA0MGFlNzhkMmJlZGI4Y2FlZDVlNWY2YzE1ZTgwNzFkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-10-01T07:31:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-10-01T07:31:49Z"}, "message": "re PR libffi/45677 (Bad stack allocation for ffi function calls on x86-64)\n\n\tPR libffi/45677\n\t* src/x86/ffi64.c (ffi_prep_cif_machdep): Ensure cif->bytes is\n\ta multiple of 8.\n\t* testsuite/libffi.call/many2.c: New test.\n\nFrom-SVN: r164829", "tree": {"sha": "cb68ecf8788e12e49305ed8b8af678fb3921a2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb68ecf8788e12e49305ed8b8af678fb3921a2e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16045c71e76e48153446fe2d4b59c6c1b482e3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16045c71e76e48153446fe2d4b59c6c1b482e3ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16045c71e76e48153446fe2d4b59c6c1b482e3ac"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "02a2b15032c8c892ce5142619e6cad08eea9e143", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "patch": "@@ -1,3 +1,10 @@\n+2010-10-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libffi/45677\n+\t* src/x86/ffi64.c (ffi_prep_cif_machdep): Ensure cif->bytes is\n+\ta multiple of 8.\n+\t* testsuite/libffi.call/many2.c: New test.\n+\n 2010-08-20  Mark Wielaard  <mjw@redhat.com>\n \n \t* src/closures.c (open_temp_exec_file_mnt): Check if getmntent_r"}, {"sha": "340b8d0f4bb7aaa9c94e3396a6ea71595096e243", "filename": "libffi/src/x86/ffi64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/libffi%2Fsrc%2Fx86%2Fffi64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/libffi%2Fsrc%2Fx86%2Fffi64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi64.c?ref=731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "patch": "@@ -378,7 +378,7 @@ ffi_prep_cif_machdep (ffi_cif *cif)\n \t  if (align < 8)\n \t    align = 8;\n \n-\t  bytes = ALIGN(bytes, align);\n+\t  bytes = ALIGN (bytes, align);\n \t  bytes += cif->arg_types[i]->size;\n \t}\n       else\n@@ -390,7 +390,7 @@ ffi_prep_cif_machdep (ffi_cif *cif)\n   if (ssecount)\n     flags |= 1 << 11;\n   cif->flags = flags;\n-  cif->bytes = bytes;\n+  cif->bytes = ALIGN (bytes, 8);\n \n   return FFI_OK;\n }"}, {"sha": "10771592fc88891b7cbda2f641735c9986c41b24", "filename": "libffi/testsuite/libffi.call/many2.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/libffi%2Ftestsuite%2Flibffi.call%2Fmany2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731fc5f040ae78d2bedb8caed5e5f6c15e8071d1/libffi%2Ftestsuite%2Flibffi.call%2Fmany2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fmany2.c?ref=731fc5f040ae78d2bedb8caed5e5f6c15e8071d1", "patch": "@@ -0,0 +1,54 @@\n+/* Area:        ffi_call\n+   Purpose:     Check uint8_t arguments.\n+   Limitations: none.\n+   PR:          PR45677.\n+   Originator:  Dan Witte <dwitte@gmail.com> 20100916  */\n+\n+/* { dg-do run } */\n+\n+#include \"ffitest.h\"\n+\n+#define NARGS 7\n+\n+typedef unsigned char u8;\n+\n+__attribute__((noinline)) uint8_t\n+foo (uint8_t a, uint8_t b, uint8_t c, uint8_t d,\n+     uint8_t e, uint8_t f, uint8_t g)\n+{\n+  return a + b + c + d + e + f + g;\n+}\n+\n+uint8_t\n+bar (uint8_t a, uint8_t b, uint8_t c, uint8_t d,\n+     uint8_t e, uint8_t f, uint8_t g)\n+{\n+  return foo (a, b, c, d, e, f, g);\n+}\n+\n+int\n+main (void)\n+{\n+  ffi_type *ffitypes[NARGS];\n+  int i;\n+  ffi_cif cif;\n+  ffi_arg result = 0;\n+  uint8_t args[NARGS];\n+  void *argptrs[NARGS];\n+\n+  for (i = 0; i < NARGS; ++i)\n+    ffitypes[i] = &ffi_type_uint8;\n+\n+  CHECK (ffi_prep_cif (&cif, FFI_DEFAULT_ABI, NARGS,\n+\t\t       &ffi_type_uint8, ffitypes) == FFI_OK);\n+\n+  for (i = 0; i < NARGS; ++i)\n+    {\n+      args[i] = i;\n+      argptrs[i] = &args[i];\n+    }\n+  ffi_call (&cif, FFI_FN (bar), &result, argptrs);\n+\n+  CHECK (result == 21);\n+  return 0;\n+}"}]}