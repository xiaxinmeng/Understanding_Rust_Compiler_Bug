{"sha": "c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNmMzIyZDgwMzY1YzY1ZjMzM2I0YTQ0YTAxYzBkOGZlN2RmNGJiMQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-11-28T22:01:29Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-28T22:01:29Z"}, "message": "2003-11-28  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetAddress.java\n\t(lookup): New method that doesnt lookup \"0.0.0.0\".\n\t(ImplLookup): Renamed from lookup.\n\t* java/net/natInetAddressNoNet.cc\n\t(ImplLookup): Renamed from lookup.\n\t* java/net/natInetAddressPosix.cc\n\t(ImplLookup): Renamed from lookup.\n\t* java/net/natInetAddressWin32.cc\n\t(ImplLookup): Renamed from lookup.\n\nFrom-SVN: r74026", "tree": {"sha": "dc0afd9f7d8e5d2536d916eb5fc3e45fda6abd88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc0afd9f7d8e5d2536d916eb5fc3e45fda6abd88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/comments", "author": null, "committer": null, "parents": [{"sha": "bb6ed2ac9916c2a4a483b2a2f78a59a850335e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb6ed2ac9916c2a4a483b2a2f78a59a850335e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb6ed2ac9916c2a4a483b2a2f78a59a850335e9a"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "faf77cdf9e3bfcd80c8dda0afe60754973d2266f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "patch": "@@ -1,3 +1,15 @@\n+2003-11-28  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetAddress.java\n+\t(lookup): New method that doesnt lookup \"0.0.0.0\".\n+\t(ImplLookup): Renamed from lookup.\n+\t* java/net/natInetAddressNoNet.cc\n+\t(ImplLookup): Renamed from lookup.\n+\t* java/net/natInetAddressPosix.cc\n+\t(ImplLookup): Renamed from lookup.\n+\t* java/net/natInetAddressWin32.cc\n+\t(ImplLookup): Renamed from lookup.\n+\n 2003-11-28  Bryce McKinlay  <bryce@mckinlay.net.nz>\n \n \t* configure: Rebuilt."}, {"sha": "f2c14f8380e1d17fc2b6fa909cf8d7d694cc0296", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "patch": "@@ -564,8 +564,23 @@ public static InetAddress getByAddress (String host, byte[] addr)\n    */\n   private static native byte[] aton (String host);\n \n-  private static native InetAddress[] lookup (String hostname,\n-\t\t                              InetAddress addr, boolean all);\n+  private static native InetAddress[] implLookup(String hostname,\n+\t\t                                 InetAddress addr,\n+\t\t\t\t\t\t boolean all);\n+\n+  private static InetAddress[] lookup (String hostname,\n+\t\t\t\t       InetAddress addr, boolean all)\n+  {\n+    if (addr.equals(ANY_IF))\n+      {\n+\tbyte[] zeros = { 0, 0, 0, 0 };\n+\tInetAddress[] result = new InetAddress[1];\n+\tresult[0] = new InetAddress(zeros, \"0.0.0.0\");\n+\treturn result;\n+      }\n+\n+    return implLookup(hostname, addr, all);\n+  }\n \n   private static native int getFamily (byte[] address);\n "}, {"sha": "266fb604ddad6fdca8f32d9a7c02b1fbd353d9c4", "filename": "libjava/java/net/natInetAddressNoNet.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FnatInetAddressNoNet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FnatInetAddressNoNet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressNoNet.cc?ref=c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "patch": "@@ -24,7 +24,7 @@ java::net::InetAddress::getFamily (jbyteArray bytes)\n }\n \n JArray<java::net::InetAddress*> *\n-java::net::InetAddress::lookup (jstring, java::net::InetAddress *, jboolean)\n+java::net::InetAddress::implLookup (jstring, java::net::InetAddress *, jboolean)\n {\n   return NULL;\n }"}, {"sha": "f760b3677ba78bf830d31ace41d01105560a27f8", "filename": "libjava/java/net/natInetAddressPosix.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressPosix.cc?ref=c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "patch": "@@ -106,8 +106,9 @@ java::net::InetAddress::getFamily (jbyteArray bytes)\n \n \n JArray<java::net::InetAddress*> *\n-java::net::InetAddress::lookup (jstring host, java::net::InetAddress* iaddr,\n-\t\t\t\tjboolean all)\n+java::net::InetAddress::implLookup (jstring host,\n+\t\t\t\t    java::net::InetAddress* iaddr,\n+\t\t\t\t    jboolean all)\n {\n   struct hostent *hptr = NULL;\n #if defined (HAVE_GETHOSTBYNAME_R) || defined (HAVE_GETHOSTBYADDR_R)"}, {"sha": "d32f45c3c6d5a0064fc04e1f5c79955d85224ffa", "filename": "libjava/java/net/natInetAddressWin32.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FnatInetAddressWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f322d80365c65f333b4a44a01c0d8fe7df4bb1/libjava%2Fjava%2Fnet%2FnatInetAddressWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddressWin32.cc?ref=c3f322d80365c65f333b4a44a01c0d8fe7df4bb1", "patch": "@@ -50,8 +50,9 @@ java::net::InetAddress::getFamily (jbyteArray bytes)\n \n \n JArray<java::net::InetAddress*> *\n-java::net::InetAddress::lookup (jstring host, java::net::InetAddress* iaddr,\n-        jboolean all)\n+java::net::InetAddress::implLookup (jstring host,\n+\t\t\t\t    java::net::InetAddress* iaddr,\n+\t\t\t\t    jboolean all)\n {\n   struct hostent *hptr = NULL;\n   if (host != NULL)"}]}