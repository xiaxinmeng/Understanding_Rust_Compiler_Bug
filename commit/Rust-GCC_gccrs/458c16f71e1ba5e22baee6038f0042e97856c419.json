{"sha": "458c16f71e1ba5e22baee6038f0042e97856c419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4YzE2ZjcxZTFiYTVlMjJiYWVlNjAzOGYwMDQyZTk3ODU2YzQxOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-06-26T23:25:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-06-26T23:25:22Z"}, "message": "Fix thinko in last change.\n\nFrom-SVN: r12335", "tree": {"sha": "33f0fe22b6ef2dc81d96a4a8bd92ed755cb23c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33f0fe22b6ef2dc81d96a4a8bd92ed755cb23c13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458c16f71e1ba5e22baee6038f0042e97856c419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458c16f71e1ba5e22baee6038f0042e97856c419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458c16f71e1ba5e22baee6038f0042e97856c419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458c16f71e1ba5e22baee6038f0042e97856c419/comments", "author": null, "committer": null, "parents": [{"sha": "ea06b0ed750afd5cc4c8aa33a6e69d06d38edfde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea06b0ed750afd5cc4c8aa33a6e69d06d38edfde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea06b0ed750afd5cc4c8aa33a6e69d06d38edfde"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "8c081b8213539690b890bdea50843e55fbfef604", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458c16f71e1ba5e22baee6038f0042e97856c419/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458c16f71e1ba5e22baee6038f0042e97856c419/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=458c16f71e1ba5e22baee6038f0042e97856c419", "patch": "@@ -5290,7 +5290,11 @@\n {\n   operands[2] = gen_reg_rtx (SImode);\n   if (GET_CODE (operands[1]) != REG)\n-    force_reg (SImode, operands[1]);\n+    {\n+      rtx tmp = gen_reg_rtx (Pmode);\n+      emit_move_insn (tmp, operands[1]);\n+      operands[1] = tmp;\n+    }\n }\")\n \n (define_insn \"\""}]}