{"sha": "20b32e50e22de63de27708dfe50c5f51cb29eaac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBiMzJlNTBlMjJkZTYzZGUyNzcwOGRmZTUwYzVmNTFjYjI5ZWFhYw==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2014-09-12T09:42:42Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2014-09-12T09:42:42Z"}, "message": "[AArch64] Fix cost for Q register moves\n\n2014-09-12  Wilco Dijkstra  <wdijkstr@arm.com>\n\n  * gcc/config/aarch64/aarch64.c (aarch64_register_move_cost): Fix Q register\n  move handling.\n  (generic_regmove_cost): Undo raised FP2FP move cost as Q register moves are\n  now handled correctly.\n\nFrom-SVN: r215207", "tree": {"sha": "edf33746a4b54fbaff2d193e35859d79aa464b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edf33746a4b54fbaff2d193e35859d79aa464b0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20b32e50e22de63de27708dfe50c5f51cb29eaac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b32e50e22de63de27708dfe50c5f51cb29eaac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b32e50e22de63de27708dfe50c5f51cb29eaac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b32e50e22de63de27708dfe50c5f51cb29eaac/comments", "author": null, "committer": null, "parents": [{"sha": "3be0766211a509edfca09bb402706094c22e0921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be0766211a509edfca09bb402706094c22e0921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be0766211a509edfca09bb402706094c22e0921"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "b10f285bcd712ec8d70c9ea567bf86eb2d2c184c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b32e50e22de63de27708dfe50c5f51cb29eaac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b32e50e22de63de27708dfe50c5f51cb29eaac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20b32e50e22de63de27708dfe50c5f51cb29eaac", "patch": "@@ -1,3 +1,10 @@\n+2014-09-12  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_register_move_cost): Fix Q register\n+\tmove handling.\n+\t(generic_regmove_cost): Undo raised FP2FP move cost as Q register moves\n+\tare now handled correctly.\n+\n 2014-09-12  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_register_move_cost): Add cost"}, {"sha": "73ddb0db98b24b7710df0d301bfcfb45a8e6fc78", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b32e50e22de63de27708dfe50c5f51cb29eaac/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b32e50e22de63de27708dfe50c5f51cb29eaac/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=20b32e50e22de63de27708dfe50c5f51cb29eaac", "patch": "@@ -215,10 +215,7 @@ static const struct cpu_regmove_cost generic_regmove_cost =\n   NAMED_PARAM (GP2GP, 1),\n   NAMED_PARAM (GP2FP, 2),\n   NAMED_PARAM (FP2GP, 2),\n-  /* We currently do not provide direct support for TFmode Q->Q move.\n-     Therefore we need to raise the cost above 2 in order to have\n-     reload handle the situation.  */\n-  NAMED_PARAM (FP2FP, 4)\n+  NAMED_PARAM (FP2FP, 2)\n };\n \n /* Generic costs for vector insn classes.  */\n@@ -5961,7 +5958,7 @@ aarch64_register_move_cost (enum machine_mode mode,\n      secondary reload.  A general register is used as a scratch to move\n      the upper DI value and the lower DI value is moved directly,\n      hence the cost is the sum of three moves. */\n-  if (! TARGET_SIMD && GET_MODE_SIZE (mode) == 128)\n+  if (! TARGET_SIMD && GET_MODE_SIZE (mode) == 16)\n     return regmove_cost->GP2FP + regmove_cost->FP2GP + regmove_cost->FP2FP;\n \n   return regmove_cost->FP2FP;"}]}