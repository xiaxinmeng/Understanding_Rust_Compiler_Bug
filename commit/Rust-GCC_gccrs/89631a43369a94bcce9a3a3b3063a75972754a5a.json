{"sha": "89631a43369a94bcce9a3a3b3063a75972754a5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2MzFhNDMzNjlhOTRiY2NlOWEzYTNiMzA2M2E3NTk3Mjc1NGE1YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-12-12T03:48:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-12-12T03:48:55Z"}, "message": "re PR c++/57510 (subobjects not destroyed when exception thrown during list-initialization)\n\n\tPR c++/57510\n\t* typeck2.c (split_nonconstant_init_1): Handle arrays here.\n\t(store_init_value): Not here.\n\t(split_nonconstant_init): Look through TARGET_EXPR.  No longer static.\n\t* cp-tree.h: Declare split_nonconstant_init.\n\t* call.c (set_up_extended_ref_temp): Use split_nonconstant_init.\n\nFrom-SVN: r218653", "tree": {"sha": "957668d11d15ae27eea8fc37f49bc6c98e00cb03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/957668d11d15ae27eea8fc37f49bc6c98e00cb03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89631a43369a94bcce9a3a3b3063a75972754a5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89631a43369a94bcce9a3a3b3063a75972754a5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89631a43369a94bcce9a3a3b3063a75972754a5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89631a43369a94bcce9a3a3b3063a75972754a5a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "923e09ee92afd63f0e6aff37ed796952196bb60b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923e09ee92afd63f0e6aff37ed796952196bb60b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923e09ee92afd63f0e6aff37ed796952196bb60b"}], "stats": {"total": 74, "additions": 61, "deletions": 13}, "files": [{"sha": "be8f3a00cdeb3bf3dfb46847fb1bf85e579fd26f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=89631a43369a94bcce9a3a3b3063a75972754a5a", "patch": "@@ -1,3 +1,12 @@\n+2014-12-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/57510\n+\t* typeck2.c (split_nonconstant_init_1): Handle arrays here.\n+\t(store_init_value): Not here.\n+\t(split_nonconstant_init): Look through TARGET_EXPR.  No longer static.\n+\t* cp-tree.h: Declare split_nonconstant_init.\n+\t* call.c (set_up_extended_ref_temp): Use split_nonconstant_init.\n+\n 2014-12-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* typeck.c (maybe_warn_about_useless_cast): Remove unnecessary"}, {"sha": "312dfdf242101a2434caa68d443ace2dd23949f7", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=89631a43369a94bcce9a3a3b3063a75972754a5a", "patch": "@@ -9574,7 +9574,7 @@ set_up_extended_ref_temp (tree decl, tree expr, vec<tree, va_gc> **cleanups,\n   else\n     /* Create the INIT_EXPR that will initialize the temporary\n        variable.  */\n-    init = build2 (INIT_EXPR, type, var, expr);\n+    init = split_nonconstant_init (var, expr);\n   if (at_function_scope_p ())\n     {\n       add_decl_expr (var);"}, {"sha": "ad1cc71162ff02a9ca6a783325f7398f6f782da2", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=89631a43369a94bcce9a3a3b3063a75972754a5a", "patch": "@@ -6291,6 +6291,7 @@ extern int abstract_virtuals_error_sfinae\t(tree, tree, tsubst_flags_t);\n extern int abstract_virtuals_error_sfinae\t(abstract_class_use, tree, tsubst_flags_t);\n \n extern tree store_init_value\t\t\t(tree, tree, vec<tree, va_gc>**, int);\n+extern tree split_nonconstant_init\t\t(tree, tree);\n extern bool check_narrowing\t\t\t(tree, tree, tsubst_flags_t);\n extern tree digest_init\t\t\t\t(tree, tree, tsubst_flags_t);\n extern tree digest_init_flags\t\t\t(tree, tree, int);"}, {"sha": "c53a9b529236e917693c4871778be4c61d9d6e55", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=89631a43369a94bcce9a3a3b3063a75972754a5a", "patch": "@@ -604,6 +604,17 @@ split_nonconstant_init_1 (tree dest, tree init)\n     case ARRAY_TYPE:\n       inner_type = TREE_TYPE (type);\n       array_type_p = true;\n+      if ((TREE_SIDE_EFFECTS (init)\n+\t   && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type))\n+\t  || array_of_runtime_bound_p (type))\n+\t{\n+\t  /* For an array, we only need/want a single cleanup region rather\n+\t     than one per element.  */\n+\t  tree code = build_vec_init (dest, NULL_TREE, init, false, 1,\n+\t\t\t\t      tf_warning_or_error);\n+\t  add_stmt (code);\n+\t  return true;\n+\t}\n       /* FALLTHRU */\n \n     case RECORD_TYPE:\n@@ -721,11 +732,13 @@ split_nonconstant_init_1 (tree dest, tree init)\n    perform the non-constant part of the initialization to DEST.\n    Returns the code for the runtime init.  */\n \n-static tree\n+tree\n split_nonconstant_init (tree dest, tree init)\n {\n   tree code;\n \n+  if (TREE_CODE (init) == TARGET_EXPR)\n+    init = TARGET_EXPR_INITIAL (init);\n   if (TREE_CODE (init) == CONSTRUCTOR)\n     {\n       code = push_stmt_list ();\n@@ -830,17 +843,7 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n       && (TREE_SIDE_EFFECTS (value)\n \t  || array_of_runtime_bound_p (type)\n \t  || ! reduced_constant_expression_p (value)))\n-    {\n-      if (TREE_CODE (type) == ARRAY_TYPE\n-\t  && (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (type))\n-\t      || array_of_runtime_bound_p (type)))\n-\t/* For an array, we only need/want a single cleanup region rather\n-\t   than one per element.  */\n-\treturn build_vec_init (decl, NULL_TREE, value, false, 1,\n-\t\t\t       tf_warning_or_error);\n-      else\n-\treturn split_nonconstant_init (decl, value);\n-    }\n+    return split_nonconstant_init (decl, value);\n   /* If the value is a constant, just put it in DECL_INITIAL.  If DECL\n      is an automatic variable, the middle end will turn this into a\n      dynamic initialization later.  */"}, {"sha": "330517af697832ca211c7848e68a410e441cf74c", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist90.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist90.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631a43369a94bcce9a3a3b3063a75972754a5a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist90.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist90.C?ref=89631a43369a94bcce9a3a3b3063a75972754a5a", "patch": "@@ -0,0 +1,35 @@\n+// PR c++/57510\n+// { dg-do run { target c++11 } }\n+\n+#include <initializer_list>\n+\n+struct counter\n+{\n+  static int n;\n+\n+  counter() { ++n; }\n+  counter(const counter&) { ++n; }\n+  ~counter() { --n; }\n+};\n+\n+int counter::n = 0;\n+\n+struct X\n+{\n+    X () { if (counter::n > 1) throw 1; }\n+\n+    counter c;\n+};\n+\n+int main ()\n+{\n+  try\n+  {\n+    auto x = { X{}, X{} };\n+  }\n+  catch (...)\n+  {\n+    if ( counter::n != 0 )\n+      throw;\n+  }\n+}"}]}