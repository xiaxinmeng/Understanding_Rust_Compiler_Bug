{"sha": "9d00e777071bd518e97524915a17aacf3b14acb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwMGU3NzcwNzFiZDUxOGU5NzUyNDkxNWExN2FhY2YzYjE0YWNiNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-07T06:41:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-07T06:41:25Z"}, "message": "entered into RCS\n\nFrom-SVN: r931", "tree": {"sha": "5d8e600aa67f9bfd57b9a99cf51ef45f345fa956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d8e600aa67f9bfd57b9a99cf51ef45f345fa956"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d00e777071bd518e97524915a17aacf3b14acb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d00e777071bd518e97524915a17aacf3b14acb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d00e777071bd518e97524915a17aacf3b14acb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d00e777071bd518e97524915a17aacf3b14acb4/comments", "author": null, "committer": null, "parents": [{"sha": "6dc42e49d3dac756ec72e10f3bf7687f9c8542c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc42e49d3dac756ec72e10f3bf7687f9c8542c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc42e49d3dac756ec72e10f3bf7687f9c8542c2"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "eb608785ceff394b091c4fff220c1698fb17a767", "filename": "gcc/config/m88k/x-dolph", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d00e777071bd518e97524915a17aacf3b14acb4/gcc%2Fconfig%2Fm88k%2Fx-dolph", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d00e777071bd518e97524915a17aacf3b14acb4/gcc%2Fconfig%2Fm88k%2Fx-dolph", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fx-dolph?ref=9d00e777071bd518e97524915a17aacf3b14acb4", "patch": "@@ -1,6 +1,6 @@\n INSTALL = cp\n \n # Green Hills C on Dolphin UNIX System V/88 Release 3.2  Version 3.5/5.60 does\n-# not proviede alloca.\n+# not provide alloca.\n \n ALLOCA=alloca.o"}, {"sha": "24647e84f73acf04000dbad3c25d59a72a01bab5", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d00e777071bd518e97524915a17aacf3b14acb4/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d00e777071bd518e97524915a17aacf3b14acb4/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=9d00e777071bd518e97524915a17aacf3b14acb4", "patch": "@@ -3318,7 +3318,7 @@ is_public (expr, identifier)\n \t{\n \t  if (decl = is_ivar (TYPE_FIELDS (basetype), identifier))\n \t    {\n-\t      /* important diffence between the Stepstone translator:\n+\t      /* important difference between the Stepstone translator:\n \t\t \n \t\t all instance variables should be public within the context\n \t\t of the implementation...\n@@ -3961,7 +3961,7 @@ start_method_def (method)\n \t\t\t\t   build1 (INDIRECT_REF, NULLT, _cmd_id)));\n #endif /* not OBJC_INT_SELECTORS */\n \n-  /* generate argument delclarations if a keyword_decl */\n+  /* generate argument declarations if a keyword_decl */\n   if (METHOD_SEL_ARGS (method))\n     {\n       tree arglist = METHOD_SEL_ARGS (method);\n@@ -4148,7 +4148,7 @@ really_start_method (method, parmlist)\n \n   method_decl = build_nt (CALL_EXPR, method_id, parmlist, NULLT);\n \n-  /* check the delclarator portion of the return type for the method */\n+  /* check the declarator portion of the return type for the method */\n   if (ret_decl = TREE_VALUE (TREE_TYPE (method)))\n     {\n       /*\n@@ -4691,7 +4691,7 @@ gen_declaration (atype_or_adecl, buf)\n       tree declspecs;\t\t/* \"identifier_node\", \"record_type\" */\n       tree declarator;\t\t/* \"array_ref\", \"indirect_ref\", \"call_expr\"... */\n \n-      /* we have a \"raw\", abstract delclarator (typename) */\n+      /* we have a \"raw\", abstract declarator (typename) */\n       declarator = TREE_VALUE (atype_or_adecl);\n       declspecs  = TREE_PURPOSE (atype_or_adecl);\n "}]}