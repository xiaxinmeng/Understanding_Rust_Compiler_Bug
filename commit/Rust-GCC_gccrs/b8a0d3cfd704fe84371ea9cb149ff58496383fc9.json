{"sha": "b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhMGQzY2ZkNzA0ZmU4NDM3MWVhOWNiMTQ5ZmY1ODQ5NjM4M2ZjOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-08-01T17:55:24Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-08-01T17:55:24Z"}, "message": "re PR fortran/32936 (ALLOCATE: \"STAT expression ... must be a variable\" - but it is one)\n\n2007-08-01  Tobias Burnus  <burnus@net-b.de>\n\n       PR fortran/32936\n       * match.c (gfc_match_allocate): Better check that STAT is\n       a variable.\n\n       * check.c (gfc_check_allocated): Reorder checks to improve\n       error message.\n\n2007-08-01  Tobias Burnus  <burnus@net-b.de>\n\n       PR fortran/32936\n       * gfortran.dg/allocate_stat.f90: New.\n\nFrom-SVN: r127135", "tree": {"sha": "160db656889ff31c1d6edfee7050056b9d5b9251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/160db656889ff31c1d6edfee7050056b9d5b9251"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fe428c67045321f9f66b7051f60f549323b2694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe428c67045321f9f66b7051f60f549323b2694", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fe428c67045321f9f66b7051f60f549323b2694"}], "stats": {"total": 131, "additions": 127, "deletions": 4}, "files": [{"sha": "81bff2b42ca545fb75490cd14f8bca8146afd67a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "patch": "@@ -1,3 +1,12 @@\n+2007-08-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32936\n+\t* match.c (gfc_match_allocate): Better check that STAT is\n+\ta variable.\n+\n+\t* check.c (gfc_check_allocated): Reorder checks to improve\n+\terror message.\n+\n 2007-08-01  Nick Clifton  <nickc@redhat.com>\n \n \t* arith.c: Change copyright header to refer to version 3 of the"}, {"sha": "b615f7334cbd159b702b3af4f04d662f16e8f99d", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "patch": "@@ -488,9 +488,6 @@ gfc_check_allocated (gfc_expr *array)\n   if (variable_check (array, 0) == FAILURE)\n     return FAILURE;\n \n-  if (array_check (array, 0) == FAILURE)\n-    return FAILURE;\n-\n   attr = gfc_variable_attr (array, NULL);\n   if (!attr.allocatable)\n     {\n@@ -500,6 +497,9 @@ gfc_check_allocated (gfc_expr *array)\n       return FAILURE;\n     }\n \n+  if (array_check (array, 0) == FAILURE)\n+    return FAILURE;\n+\n   return SUCCESS;\n }\n "}, {"sha": "39e39af29a6a209473c7583dc8ddbfbb0bde3751", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "patch": "@@ -2000,6 +2000,8 @@ gfc_match_allocate (void)\n \n   if (stat != NULL)\n     {\n+      bool is_variable;\n+\n       if (stat->symtree->n.sym->attr.intent == INTENT_IN)\n \t{\n \t  gfc_error (\"STAT variable '%s' of ALLOCATE statement at %C cannot \"\n@@ -2014,7 +2016,38 @@ gfc_match_allocate (void)\n \t  goto cleanup;\n \t}\n \n-      if (stat->symtree->n.sym->attr.flavor != FL_VARIABLE)\n+      is_variable = false;\n+      if (stat->symtree->n.sym->attr.flavor == FL_VARIABLE)\n+\tis_variable = true;\n+      else if (stat->symtree->n.sym->attr.function\n+\t  && stat->symtree->n.sym->result == stat->symtree->n.sym\n+\t  && (gfc_current_ns->proc_name == stat->symtree->n.sym\n+\t      || (gfc_current_ns->parent\n+\t\t  && gfc_current_ns->parent->proc_name\n+\t\t     == stat->symtree->n.sym)))\n+\tis_variable = true;\n+      else if (gfc_current_ns->entries\n+\t       && stat->symtree->n.sym->result == stat->symtree->n.sym)\n+\t{\n+\t  gfc_entry_list *el;\n+\t  for (el = gfc_current_ns->entries; el; el = el->next)\n+\t    if (el->sym == stat->symtree->n.sym)\n+\t      {\n+\t\tis_variable = true;\n+\t      }\n+\t}\n+      else if (gfc_current_ns->parent && gfc_current_ns->parent->entries\n+\t       && stat->symtree->n.sym->result == stat->symtree->n.sym)\n+\t{\n+\t  gfc_entry_list *el;\n+\t  for (el = gfc_current_ns->parent->entries; el; el = el->next)\n+\t    if (el->sym == stat->symtree->n.sym)\n+\t      {\n+\t\tis_variable = true;\n+\t      }\n+\t}\n+\n+      if (!is_variable)\n \t{\n \t  gfc_error (\"STAT expression at %C must be a variable\");\n \t  goto cleanup;"}, {"sha": "0755f4f73d05fcff12de77ed5b625c1340b14b0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "patch": "@@ -1,3 +1,8 @@\n+2007-08-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32936\n+\t* gfortran.dg/allocate_stat.f90: New.\n+\n 2007-08-01  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc.target/i386/pr23098.c: XFAIL on vxworks targets."}, {"sha": "1361d779226ad7da8adf9a820cd8831573f0816e", "filename": "gcc/testsuite/gfortran.dg/allocate_stat.f90", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a0d3cfd704fe84371ea9cb149ff58496383fc9/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat.f90?ref=b8a0d3cfd704fe84371ea9cb149ff58496383fc9", "patch": "@@ -0,0 +1,76 @@\n+! { dg-do compile }\n+! PR fortran/32936\n+!\n+!\n+function all_res()\n+  implicit none\n+  real, pointer :: gain \n+  integer :: all_res\n+  allocate (gain,STAT=all_res)\n+  deallocate(gain)\n+  call bar()\n+contains\n+  subroutine bar()\n+    real, pointer :: gain2\n+    allocate (gain2,STAT=all_res)\n+    deallocate(gain2)\n+  end subroutine bar\n+end function all_res\n+\n+function func()\n+  implicit none\n+  real, pointer :: gain \n+  integer :: all_res2, func\n+  func = 0\n+entry all_res2\n+  allocate (gain,STAT=all_res2)\n+  deallocate(gain)\n+contains\n+  subroutine test\n+    implicit none\n+    real, pointer :: gain2\n+     allocate (gain2,STAT=all_res2)\n+     deallocate(gain2)\n+  end subroutine test\n+end function func\n+\n+function func2() result(res)\n+  implicit none\n+  real, pointer :: gain \n+  integer :: res\n+  allocate (gain,STAT=func2) ! { dg-error \"Expected VARIABLE\" }\n+  deallocate(gain)\n+  res = 0\n+end function func2\n+\n+subroutine sub()\n+  implicit none\n+  interface\n+    integer function func2()\n+    end function\n+  end interface\n+  real, pointer :: gain \n+  integer, parameter :: res = 2\n+  allocate (gain,STAT=func2) ! { dg-error \"STAT expression at .1. must be a variable\" }\n+  deallocate(gain)\n+end subroutine sub\n+\n+module test\n+contains\n+ function one()\n+   integer :: one, two\n+   integer, pointer :: ptr\n+   allocate(ptr, stat=one)\n+   if(one == 0) deallocate(ptr)\n+ entry two\n+   allocate(ptr, stat=two)\n+   if(associated(ptr)) deallocate(ptr)\n+ end function one\n+ subroutine sub()\n+   integer, pointer :: p\n+   allocate(p, stat=one) ! { dg-error \"STAT expression at .1. must be a variable\" }\n+   if(associated(p)) deallocate(p)\n+   allocate(p, stat=two) ! { dg-error \"STAT expression at .1. must be a variable\" }\n+   if(associated(p)) deallocate(p)\n+ end subroutine sub\n+end module test"}]}