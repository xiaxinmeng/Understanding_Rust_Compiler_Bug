{"sha": "f9c91f8a9084e72fec5758f0e97da8ac4b557692", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjljOTFmOGE5MDg0ZTcyZmVjNTc1OGYwZTk3ZGE4YWM0YjU1NzY5Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-22T12:17:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-22T12:17:12Z"}, "message": "lto-streamer.h (lto_symtab_clear_resolution): Remove.\n\n2009-10-22  Richard Guenther  <rguenther@suse.de>\n\n\t* lto-streamer.h (lto_symtab_clear_resolution): Remove.\n\t* lto-symtab.c (lto_symtab_clear_resolution): Likewise.\n\n\tlto/\n\t* lto.c (lto_fixup_data_t): Remove free_list member.\n\t(lto_fixup_tree): Do not insert into free_list.\n\t(free_decl): Remove.\n\t(lto_fixup_decls): Remove free-list handling.\n\nFrom-SVN: r153452", "tree": {"sha": "d44acbe4445b1db4d19a3a590df6f07142ffeaff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d44acbe4445b1db4d19a3a590df6f07142ffeaff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9c91f8a9084e72fec5758f0e97da8ac4b557692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c91f8a9084e72fec5758f0e97da8ac4b557692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9c91f8a9084e72fec5758f0e97da8ac4b557692", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c91f8a9084e72fec5758f0e97da8ac4b557692/comments", "author": null, "committer": null, "parents": [{"sha": "86a8a2e50951cbaa820371ad943f165d6cb10f35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a8a2e50951cbaa820371ad943f165d6cb10f35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a8a2e50951cbaa820371ad943f165d6cb10f35"}], "stats": {"total": 116, "additions": 29, "deletions": 87}, "files": [{"sha": "5d91f8713b61e46f54c9daa767656433d29e3bc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9c91f8a9084e72fec5758f0e97da8ac4b557692", "patch": "@@ -1,21 +1,27 @@\n+2009-10-22  Richard Guenther  <rguenther@suse.de>\n+\n+\t* lto-streamer.h (lto_symtab_clear_resolution): Remove.\n+\t* lto-symtab.c (lto_symtab_clear_resolution): Likewise.\n+\n 2009-10-22  Jan Hubicka  <jh@suse.cz>\n \n-\tPR tree-optimize/40556                                                                                                                                         \n-\t* ipa-reference.c (has_proper_scope_for_analysis): Add fixme about global vars.                                                                                \n-\t(check_call): Handle only indirect calls.                                                                                                                      \n-\t(propagate_bits): Update comment.                                                                                                                              \n-\t(write_node_summary_p): Turn bogus check to assert.                                                                                                            \n-\t(ipa_reference_write_summary): Stream calls_read_all properly.                                                                                                 \n-\t(ipa_reference_read_summary): Stream in calls_read_all properly.                                                                                               \n-\t(read_write_all_from_decl): New function.                                                                                                                      \n-\t(propagate): Handle OVERWRITABLE nodes and external calls here.                                                                                                \n-\t* ipa-pre-const.c (check_call): In IPA mode handle indirect calls                                                                                              \n-\tonly.                                                                                                                                                          \n-\t(analyze_function): Do not check visibility here.                                                                                                              \n-\t(add_new_function): We summary OVERWRITABLE too.                                                                                                               \n-\t(generate_summary): Stream OVERWRITABLE nodes too.                                                                                                             \n-\t(propagate): Handle external calls and OVERWRITABLE nodes here.                                                                                                \n-\t(local_pure_const): Check visibility here.                                                                                                                     \n+\tPR tree-optimize/40556\n+\t* ipa-reference.c (has_proper_scope_for_analysis): Add fixme about\n+\tglobal vars.\n+\t(check_call): Handle only indirect calls.\n+\t(propagate_bits): Update comment.\n+\t(write_node_summary_p): Turn bogus check to assert.\n+\t(ipa_reference_write_summary): Stream calls_read_all properly.\n+\t(ipa_reference_read_summary): Stream in calls_read_all properly.\n+\t(read_write_all_from_decl): New function.\n+\t(propagate): Handle OVERWRITABLE nodes and external calls here.\n+\t* ipa-pre-const.c (check_call): In IPA mode handle indirect calls\n+\tonly.\n+\t(analyze_function): Do not check visibility here.\n+\t(add_new_function): We summary OVERWRITABLE too.\n+\t(generate_summary): Stream OVERWRITABLE nodes too.\n+\t(propagate): Handle external calls and OVERWRITABLE nodes here.\n+\t(local_pure_const): Check visibility here.\n \n 2009-10-22  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "4b8b845dfe878ee9b18a47ea8a5166738d45983a", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=f9c91f8a9084e72fec5758f0e97da8ac4b557692", "patch": "@@ -847,7 +847,6 @@ extern void lto_symtab_register_decl (tree, ld_plugin_symbol_resolution_t,\n extern void lto_symtab_merge_decls (void);\n extern tree lto_symtab_prevailing_decl (tree decl);\n extern enum ld_plugin_symbol_resolution lto_symtab_get_resolution (tree decl);\n-extern void lto_symtab_clear_resolution (tree decl);\n \n \n /* In lto-opts.c.  */"}, {"sha": "d292a571e87da6e2fff2572f895c71d9f7f9f1e2", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=f9c91f8a9084e72fec5758f0e97da8ac4b557692", "patch": "@@ -641,53 +641,4 @@ lto_symtab_prevailing_decl (tree decl)\n   return ret->decl;\n }\n \n-/* Remove any storage used to store resolution of DECL.  */\n-\n-void\n-lto_symtab_clear_resolution (tree decl)\n-{\n-  struct lto_symtab_entry_def temp;\n-  lto_symtab_entry_t head;\n-  void **slot;\n-\n-  if (!TREE_PUBLIC (decl))\n-    return;\n-\n-  /* LTO FIXME: There should be no DECL_ABSTRACT in the middle end. */\n-  if (TREE_CODE (decl) == FUNCTION_DECL && DECL_ABSTRACT (decl))\n-    return;\n-\n-  gcc_assert (DECL_ASSEMBLER_NAME_SET_P (decl));\n-\n-  lto_symtab_maybe_init_hash_table ();\n-  temp.id = DECL_ASSEMBLER_NAME (decl);\n-  slot = htab_find_slot (lto_symtab_identifiers, &temp, NO_INSERT);\n-  if (!*slot)\n-    return;\n-\n-  head = (lto_symtab_entry_t) *slot;\n-  if (head->decl == decl)\n-    {\n-      if (head->next)\n-\t{\n-\t  *slot = head->next;\n-\t  head->next = NULL;\n-\t}\n-      else\n-\thtab_remove_elt (lto_symtab_identifiers, &temp);\n-    }\n-  else\n-    {\n-      lto_symtab_entry_t e;\n-      while (head->next && head->next->decl != decl)\n-\thead = head->next;\n-      if (head->next)\n-\t{\n-\t  e = head->next;\n-\t  head->next = e->next;\n-\t  e->next = NULL;\n-\t}\n-    }\n-}\n-\n #include \"gt-lto-symtab.h\""}, {"sha": "dd0ff8ec195ef66ac644cde1c4b8d7bc8f0e7be7", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=f9c91f8a9084e72fec5758f0e97da8ac4b557692", "patch": "@@ -1,3 +1,10 @@\n+2009-10-22  Richard Guenther  <rguenther@suse.de>\n+\n+\t* lto.c (lto_fixup_data_t): Remove free_list member.\n+\t(lto_fixup_tree): Do not insert into free_list.\n+\t(free_decl): Remove.\n+\t(lto_fixup_decls): Remove free-list handling.\n+\n 2009-10-22  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_fixup_jump_functions): New function."}, {"sha": "79af51f347884b67c237069aa2159479bbfe36a2", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c91f8a9084e72fec5758f0e97da8ac4b557692/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=f9c91f8a9084e72fec5758f0e97da8ac4b557692", "patch": "@@ -1193,7 +1193,6 @@ lto_execute_ltrans (char *const *files)\n \n \n typedef struct {\n-  struct pointer_set_t *free_list;\n   struct pointer_set_t *seen;\n } lto_fixup_data_t;\n \n@@ -1528,8 +1527,6 @@ lto_fixup_tree (tree *tp, int *walk_subtrees, void *data)\n \t\tlto_mark_nothrow_fndecl (prevailing);\n \t    }\n \n-\t  pointer_set_insert (fixup_data->free_list, t);\n-\n \t   /* Also replace t with prevailing defintion.  We don't want to\n \t      insert the other defintion in the seen set as we want to\n \t      replace all instances of it.  */\n@@ -1638,20 +1635,6 @@ lto_fixup_state_aux (void **slot, void *aux)\n   return 1;\n }\n \n-/* A callback to pointer_set_traverse. Frees the tree pointed by p. Removes\n-   from it from the UID -> DECL mapping. */\n-\n-static bool\n-free_decl (const void *p, void *data ATTRIBUTE_UNUSED)\n-{\n-  const_tree ct = (const_tree) p;\n-  tree t = CONST_CAST_TREE (ct);\n-\n-  lto_symtab_clear_resolution (t);\n-\n-  return true;\n-}\n-\n /* Fixup pointers in jump functions.\n    TODO: We need some generic solution that will allow tree pointers in\n    function summaries.  */\n@@ -1707,11 +1690,9 @@ lto_fixup_decls (struct lto_file_decl_data **files)\n {\n   unsigned int i;\n   tree decl;\n-  struct pointer_set_t *free_list = pointer_set_create ();\n   struct pointer_set_t *seen = pointer_set_create ();\n   lto_fixup_data_t data;\n \n-  data.free_list = free_list;\n   data.seen = seen;\n   for (i = 0; files[i]; i++)\n     {\n@@ -1732,8 +1713,6 @@ lto_fixup_decls (struct lto_file_decl_data **files)\n   if (ipa_edge_args_vector)\n     lto_fixup_jump_functions (&data);\n \n-  pointer_set_traverse (free_list, free_decl, NULL);\n-  pointer_set_destroy (free_list);\n   pointer_set_destroy (seen);\n }\n "}]}