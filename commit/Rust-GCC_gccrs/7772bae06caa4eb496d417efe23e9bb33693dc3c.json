{"sha": "7772bae06caa4eb496d417efe23e9bb33693dc3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3MmJhZTA2Y2FhNGViNDk2ZDQxN2VmZTIzZTliYjMzNjkzZGMzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-05-21T14:29:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-05-21T14:29:11Z"}, "message": "re PR tree-optimization/53366 (wrong code generation by tree vectorizer using AVX)\n\n\tPR tree-optimization/53366\n\t* tree-vect-slp.c (vect_supported_load_permutation_p): Don't shortcut\n\ttests if complex_numbers == 2, but there are non-complex number loads\n\ttoo.\n\n\t* gcc.dg/torture/pr53366-1.c: New test.\n\t* gcc.dg/torture/pr53366-2.c: New test.\n\t* gcc.target/i386/pr53366-1.c: New test.\n\t* gcc.target/i386/pr53366-2.c: New test.\n\nFrom-SVN: r187717", "tree": {"sha": "4fad66eaca5a76ae4d23737387633a4cb659fe0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fad66eaca5a76ae4d23737387633a4cb659fe0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7772bae06caa4eb496d417efe23e9bb33693dc3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7772bae06caa4eb496d417efe23e9bb33693dc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7772bae06caa4eb496d417efe23e9bb33693dc3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7772bae06caa4eb496d417efe23e9bb33693dc3c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "017a202055c0bdd4529960e6d38992a910649966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017a202055c0bdd4529960e6d38992a910649966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017a202055c0bdd4529960e6d38992a910649966"}], "stats": {"total": 137, "additions": 136, "deletions": 1}, "files": [{"sha": "d7bdb9916e632c6a33263f87126cd2871a0a6964", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -1,5 +1,10 @@\n 2012-05-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/53366\n+\t* tree-vect-slp.c (vect_supported_load_permutation_p): Don't shortcut\n+\ttests if complex_numbers == 2, but there are non-complex number loads\n+\ttoo.\n+\n \tPR tree-optimization/53409\n \t* tree-vect-loop.c (vect_analyze_loop_operations): Don't check\n \tvinfo_for_stmt (op_def_stmt) if op_def_stmt isn't inside loop."}, {"sha": "1f1bcb48b3e38338500bd014d2341cc9e71627b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -1,5 +1,11 @@\n 2012-05-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/53366\n+\t* gcc.dg/torture/pr53366-1.c: New test.\n+\t* gcc.dg/torture/pr53366-2.c: New test.\n+\t* gcc.target/i386/pr53366-1.c: New test.\n+\t* gcc.target/i386/pr53366-2.c: New test.\n+\n \tPR tree-optimization/53409\n \t* gcc.c-torture/compile/pr53409.c: New test.\n "}, {"sha": "ca9997ed2d43dd0e6889aa8d272fb16e10b29461", "filename": "gcc/testsuite/gcc.dg/torture/pr53366-1.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53366-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53366-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53366-1.c?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -0,0 +1,70 @@\n+/* PR tree-optimization/53366 */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+struct S { double v[3]; };\n+struct T { struct S r, i; };\n+struct U { struct T j[5]; };\n+\n+void\n+foo (struct U *__restrict p1, struct U *__restrict p2,\n+     struct S l1, struct S l2, struct S l3, struct S l4,\n+     const double _Complex * __restrict x, int y, int z)\n+{\n+  int i, j;\n+  while (y < z - 2)\n+    {\n+      for (j = 0; j < 5; ++j)\n+\t{\n+\t  double a = __real__ x[5 * y + j];\n+\t  double b = __imag__ x[5 * y + j];\n+\t  double c = __real__ x[5 * (y + 2) + j];\n+\t  double d = __imag__ x[5 * (y + 2) + j];\n+\t  double e = __real__ x[5 * (y + 1) + j];\n+\t  double f = __imag__ x[5 * (y + 1) + j];\n+\t  double g = __real__ x[5 * (y + 3) + j];\n+\t  double h = __imag__ x[5 * (y + 3) + j];\n+\t  for (i = 0; i < 3; ++i)\n+\t    {\n+\t      p1->j[j].r.v[i] += l2.v[i] * a;\n+\t      p1->j[j].r.v[i] += l4.v[i] * c;\n+\t      p1->j[j].i.v[i] += l2.v[i] * b;\n+\t      p1->j[j].i.v[i] += l4.v[i] * d;\n+\t      p2->j[j].r.v[i] += l3.v[i] * e;\n+\t      p2->j[j].r.v[i] += l1.v[i] * g;\n+\t      p2->j[j].i.v[i] += l3.v[i] * f;\n+\t      p2->j[j].i.v[i] += l1.v[i] * h;\n+\t    }\n+\t}\n+      y += 4;\n+    }\n+}\n+\n+_Complex double x[5005];\n+struct U p1, p2;\n+\n+int\n+main ()\n+{\n+  int i, j;\n+  struct S l1, l2, l3, l4;\n+  for (i = 0; i < 5005; ++i)\n+    x[i] = i + 1.0iF * (2 * i);\n+  for (i = 0; i < 3; ++i)\n+    {\n+      l1.v[i] = 1;\n+      l2.v[i] = 2;\n+      l3.v[i] = 3;\n+      l4.v[i] = 4;\n+    }\n+  foo (&p1, &p2, l1, l2, l3, l4, x, 5, 1000);\n+  for (j = 0; j < 5; ++j)\n+    for (i = 0; i < 3; ++i)\n+      if (p1.j[j].r.v[i] != 3752430 + j * 1494.0\n+\t  || p1.j[j].i.v[i] != p1.j[j].r.v[i] * 2\n+\t  || p2.j[j].r.v[i] != 2502450 + j * 996.0\n+\t  || p2.j[j].i.v[i] != p2.j[j].r.v[i] * 2)\n+\tabort ();\n+  return 0;\n+}"}, {"sha": "6be6a5610bff55bdd07cd60ba663810c8acae824", "filename": "gcc/testsuite/gcc.dg/torture/pr53366-2.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53366-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53366-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53366-2.c?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -0,0 +1,43 @@\n+/* PR tree-optimization/53366 */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+struct T { float r[3], i[3]; };\n+struct U { struct T j[2]; };\n+\n+void __attribute__ ((noinline))\n+foo (struct U *__restrict y, const float _Complex *__restrict x)\n+{\n+  int i, j;\n+  for (j = 0; j < 2; ++j)\n+    {\n+      float a = __real__ x[j];\n+      float b = __imag__ x[j];\n+      float c = __real__ x[j + 2];\n+      float d = __imag__ x[j + 2];\n+      for (i = 0; i < 3; ++i)\n+        {\n+          y->j[j].r[i] = y->j[j].r[i] + a + c;\n+          y->j[j].i[i] = y->j[j].i[i] + b + d;\n+        }\n+    }\n+}\n+\n+_Complex float x[4];\n+struct U y;\n+\n+int\n+main ()\n+{\n+  int i, j;\n+  for (i = 0; i < 4; ++i)\n+    x[i] = i + 1.0iF * (2 * i);\n+  foo (&y, x);\n+  for (j = 0; j < 2; ++j)\n+    for (i = 0; i < 3; ++i)\n+      if (y.j[j].r[i] != __real__ (x[j] + x[j + 2])\n+          || y.j[j].i[i] != __imag__ (x[j] + x[j + 2]))\n+        __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c24a594b8d2e2f271d593bb0f3ffab6be7d3810a", "filename": "gcc/testsuite/gcc.target/i386/pr53366-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53366-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53366-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53366-1.c?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -0,0 +1,5 @@\n+/* PR tree-optimization/53366 */\n+/* { dg-do run { target avx_runtime } } */\n+/* { dg-options \"-O3 -mavx\" } */\n+\n+#include \"../../gcc.dg/torture/pr53366-1.c\""}, {"sha": "77270a0b0ab6ea0d8cebdc27c4c37f4a18fc47a2", "filename": "gcc/testsuite/gcc.target/i386/pr53366-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53366-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53366-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53366-2.c?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -0,0 +1,5 @@\n+/* PR tree-optimization/53366 */\n+/* { dg-do run { target avx_runtime } } */\n+/* { dg-options \"-O3 -mavx\" } */\n+\n+#include \"../../gcc.dg/torture/pr53366-2.c\""}, {"sha": "4690a4e92115311fa59cdf6900e6647a5bb1af94", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7772bae06caa4eb496d417efe23e9bb33693dc3c/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=7772bae06caa4eb496d417efe23e9bb33693dc3c", "patch": "@@ -1199,7 +1199,8 @@ vect_supported_load_permutation_p (slp_instance slp_instn, int group_size,\n \n   /* We checked that this case ok, so there is no need to proceed with \n      permutation tests.  */\n-  if (complex_numbers == 2)\n+  if (complex_numbers == 2\n+      && VEC_length (slp_tree, SLP_INSTANCE_LOADS (slp_instn)) == 2)\n     {\n       VEC_free (slp_tree, heap, SLP_INSTANCE_LOADS (slp_instn));\n       VEC_free (int, heap, SLP_INSTANCE_LOAD_PERMUTATION (slp_instn));"}]}