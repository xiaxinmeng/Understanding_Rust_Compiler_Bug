{"sha": "8a6c4339182e5148b15d865234dc5e29733c2441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE2YzQzMzkxODJlNTE0OGIxNWQ4NjUyMzRkYzVlMjk3MzNjMjQ0MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-12-16T05:49:45Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-12-16T05:49:45Z"}, "message": "dependency.c, [...]: Fix comment typos.\n\n\t* dependency.c, resolve.c, trans-array.c: Fix comment typos.\n\t* gfortran.texi: Fix typos.\n\nFrom-SVN: r108624", "tree": {"sha": "0c53df79693e16d06087c8abb8053b872eebca54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c53df79693e16d06087c8abb8053b872eebca54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a6c4339182e5148b15d865234dc5e29733c2441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6c4339182e5148b15d865234dc5e29733c2441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a6c4339182e5148b15d865234dc5e29733c2441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6c4339182e5148b15d865234dc5e29733c2441/comments", "author": null, "committer": null, "parents": [{"sha": "a075400701ad4fa485acb0308b318506bf32dd0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a075400701ad4fa485acb0308b318506bf32dd0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a075400701ad4fa485acb0308b318506bf32dd0d"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "94980f84941e45450e473e0739b55396b673eb78", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8a6c4339182e5148b15d865234dc5e29733c2441", "patch": "@@ -1,3 +1,8 @@\n+2005-12-16  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* dependency.c, resolve.c, trans-array.c: Fix comment typos.\n+\t* gfortran.texi: Fix typos.\n+\n 2005-12-14  Erik Edelmann  <eedelman@gcc.gnu.org>\n \n \tPR fortran/18197"}, {"sha": "4a795602414a1f7bffcbecfcfcb75fdc7c366b9e", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=8a6c4339182e5148b15d865234dc5e29733c2441", "patch": "@@ -176,7 +176,7 @@ gfc_is_same_range (gfc_array_ref * ar1, gfc_array_ref * ar2, int n, int def)\n \n \n /* Some array-returning intrinsics can be implemented by reusing the\n-   data from one of the array arguments.  For example, TRANPOSE does\n+   data from one of the array arguments.  For example, TRANSPOSE does\n    not necessarily need to allocate new data: it can be implemented\n    by copying the original array's descriptor and simply swapping the\n    two dimension specifications."}, {"sha": "b4f1bf95c22228fcbb292fc2476a75e6686945bf", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=8a6c4339182e5148b15d865234dc5e29733c2441", "patch": "@@ -962,7 +962,7 @@ The value of the conversion can be queried by using\n \n @code{CONVERT} works between big- and little-endian for\n @code{INTEGER} values of all supported kinds and for @code{REAL}\n-on IEEE sytems of kinds 4 and 8.  Conversion between different\n+on IEEE systems of kinds 4 and 8.  Conversion between different\n ``extended double'' types on different architectures such as\n m68k and x86_64, which gfortran\n supports as @code{REAL(KIND=10)} will probably not work."}, {"sha": "de2da6355ecfe3cb8579e87d81870e4108c923ef", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=8a6c4339182e5148b15d865234dc5e29733c2441", "patch": "@@ -288,7 +288,7 @@ resolve_contained_fntype (gfc_symbol * sym, gfc_namespace * ns)\n \n   /*Fortran 95 Draft Standard, page 51, Section 5.1.1.5, on the Character type,\n     lists the only ways a character length value of * can be used: dummy arguments\n-    of proceedures, named constants, and function results in external functions.\n+    of procedures, named constants, and function results in external functions.\n     Internal function results are not on that list; ergo, not permitted.  */\n \n   if (sym->ts.type == BT_CHARACTER)"}, {"sha": "a9981a375dfc42ad0f8b22d4c4bd803baf2e33ef", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6c4339182e5148b15d865234dc5e29733c2441/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=8a6c4339182e5148b15d865234dc5e29733c2441", "patch": "@@ -673,7 +673,7 @@ gfc_trans_allocate_temp_array (stmtblock_t * pre, stmtblock_t * post,\n }\n \n \n-/* Generate code to tranpose array EXPR by creating a new descriptor\n+/* Generate code to transpose array EXPR by creating a new descriptor\n    in which the dimension specifications have been reversed.  */\n \n void"}]}