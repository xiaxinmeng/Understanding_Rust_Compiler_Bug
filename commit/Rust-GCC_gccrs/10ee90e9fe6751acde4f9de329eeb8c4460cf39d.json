{"sha": "10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBlZTkwZTlmZTY3NTFhY2RlNGY5ZGUzMjllZWI4YzQ0NjBjZjM5ZA==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-03-12T11:19:30Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-03-12T11:19:30Z"}, "message": "Committing forgotten headers from r185218.\n\nFrom-SVN: r185223", "tree": {"sha": "c36ced5f0bd69dc2e42ab43e97e058fbdcba1280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c36ced5f0bd69dc2e42ab43e97e058fbdcba1280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/comments", "author": null, "committer": null, "parents": [{"sha": "7b5c5139a96b384e2372b4bcd579a4f0b83201d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5c5139a96b384e2372b4bcd579a4f0b83201d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b5c5139a96b384e2372b4bcd579a4f0b83201d2"}], "stats": {"total": 165, "additions": 165, "deletions": 0}, "files": [{"sha": "6dad9e09ac20e36daa1b14abf7a851f152c6e6f1", "filename": "gcc/config/i386/rtmintrin.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Fconfig%2Fi386%2Frtmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Fconfig%2Fi386%2Frtmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtmintrin.h?ref=10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "patch": "@@ -0,0 +1,77 @@\n+/* Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _IMMINTRIN_H_INCLUDED\n+# error \"Never use <rtmintrin.h> directly; include <immintrin.h> instead.\"\n+#endif\n+\n+#ifndef __RTM__\n+# error \"RTM instruction set not enabled\"\n+#endif /* __RTM__ */\n+\n+#ifndef _RTMINTRIN_H_INCLUDED\n+#define _RTMINTRIN_H_INCLUDED\n+\n+#define _XBEGIN_STARTED\t\t(~0u)\n+#define _XABORT_EXPLICIT\t(1 << 0)\n+#define _XABORT_RETRY\t\t(1 << 1)\n+#define _XABORT_CONFLICT\t(1 << 2)\n+#define _XABORT_CAPACITY\t(1 << 3)\n+#define _XABORT_DEBUG\t\t(1 << 4)\n+#define _XABORT_NESTED\t\t(1 << 5)\n+#define _XABORT_CODE(x)\t\t(((x) >> 24) & 0xFF)\n+\n+/* Start an RTM code region.  Return _XBEGIN_STARTED on success and the\n+   abort condition otherwise.  */\n+extern __inline unsigned int\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_xbegin (void)\n+{\n+  return __builtin_ia32_xbegin ();\n+}\n+\n+/* Specify the end of an RTM code region.  If it corresponds to the\n+   outermost transaction, then attempts the transaction commit.  If the\n+   commit fails, then control is transferred to the outermost transaction\n+   fallback handler.  */\n+extern __inline void\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_xend (void)\n+{\n+  __builtin_ia32_xend ();\n+}\n+\n+/* Force an RTM abort condition. The control is transferred to the\n+   outermost transaction fallback handler with the abort condition IMM.  */\n+#ifdef __OPTIMIZE__\n+extern __inline void\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_xabort (const unsigned int imm)\n+{\n+  __builtin_ia32_xabort (imm);\n+}\n+#else\n+#define _xabort(N)  __builtin_ia32_xabort (N);\n+#endif /* __OPTIMIZE__ */\n+\n+#endif /* _RTMINTRIN_H_INCLUDED */"}, {"sha": "fadf1a9f4f0bd4f2ae653479bdb3306a2b416179", "filename": "gcc/config/i386/xtestintrin.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Fconfig%2Fi386%2Fxtestintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Fconfig%2Fi386%2Fxtestintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxtestintrin.h?ref=10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "patch": "@@ -0,0 +1,44 @@\n+/* Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _IMMINTRIN_H_INCLUDED\n+# error \"Never use <xtestintrin.h> directly; include <immintrin.h> instead.\"\n+#endif\n+\n+#ifndef __RTM__\n+# error \"RTM instruction set not enabled\"\n+#endif /* __RTM__ */\n+\n+#ifndef _XTESTINTRIN_H_INCLUDED\n+#define _XTESTINTRIN_H_INCLUDED\n+\n+/* Return non-zero if the instruction executes inside an RTM or HLE code\n+   region.  Return zero otherwise.   */\n+extern __inline int\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_xtest (void)\n+{\n+  return __builtin_ia32_xtest ();\n+}\n+\n+#endif /* _XTESTINTRIN_H_INCLUDED */"}, {"sha": "808095d273439b8b5195d6d91c4e43a2a5f2fd7d", "filename": "gcc/testsuite/gcc.target/i386/rtm-xabort-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xabort-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xabort-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xabort-1.c?ref=10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mrtm\" } */\n+/* { dg-final { scan-assembler \"\\txabort\" } } */\n+\n+#include <immintrin.h>\n+\n+void\n+rtm_test (void)\n+{\n+  _xabort (13);\n+}"}, {"sha": "caced5f5f96dfd70788c059d0895bd91b866fe45", "filename": "gcc/testsuite/gcc.target/i386/rtm-xbegin-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xbegin-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xbegin-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xbegin-1.c?ref=10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mrtm\" } */\n+/* { dg-final { scan-assembler \"\\txbegin\" } } */\n+\n+#include <immintrin.h>\n+\n+unsigned int\n+rtm_test (void)\n+{\n+  return _xbegin ();\n+}"}, {"sha": "2bd8a0a9ceb144c8cf05d2678227d0369dcf3652", "filename": "gcc/testsuite/gcc.target/i386/rtm-xend-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xend-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xend-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xend-1.c?ref=10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mrtm\" } */\n+/* { dg-final { scan-assembler \"\\txend\" } } */\n+\n+#include <immintrin.h>\n+\n+void\n+rtm_test (void)\n+{\n+  _xend ();\n+}"}, {"sha": "cdf346fcb26a5d4b3f9f4cbaeeebcae8f09c8b8c", "filename": "gcc/testsuite/gcc.target/i386/rtm-xtest-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xtest-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ee90e9fe6751acde4f9de329eeb8c4460cf39d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xtest-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frtm-xtest-1.c?ref=10ee90e9fe6751acde4f9de329eeb8c4460cf39d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mrtm -dp\" } */\n+/* { dg-final { scan-assembler \"\\txtest\" } } */\n+\n+#include <immintrin.h>\n+\n+int\n+rtm_xtest (void)\n+{\n+  return _xtest ();\n+}"}]}