{"sha": "4e20d9c461087c46560b6485b7f4b00e43a07f00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyMGQ5YzQ2MTA4N2M0NjU2MGI2NDg1YjdmNGIwMGU0M2EwN2YwMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-12-02T11:56:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-12-02T11:56:35Z"}, "message": "tree-cfg.c (mark_used_vars): New function.\n\n2005-12-02  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-cfg.c (mark_used_vars): New function.\n\t(dump_function_to_file): Dump only used VAR_DECLs.\n\n\t* gcc.dg/tree-ssa/20031106-6.c: Remove XFAIL.\n\nFrom-SVN: r107885", "tree": {"sha": "b9948aa9acc8156c53c4d1222fa1f58d8b8a8648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9948aa9acc8156c53c4d1222fa1f58d8b8a8648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e20d9c461087c46560b6485b7f4b00e43a07f00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e20d9c461087c46560b6485b7f4b00e43a07f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e20d9c461087c46560b6485b7f4b00e43a07f00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e20d9c461087c46560b6485b7f4b00e43a07f00/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ac1b88953853f4ae1cd2fd09d40fb85fe0d3de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac1b88953853f4ae1cd2fd09d40fb85fe0d3de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac1b88953853f4ae1cd2fd09d40fb85fe0d3de5"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "c949c5fa4af8937943367cb2745faf60061711cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e20d9c461087c46560b6485b7f4b00e43a07f00", "patch": "@@ -1,3 +1,8 @@\n+2005-12-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (mark_used_vars): New function.\n+\t(dump_function_to_file): Dump only used VAR_DECLs.\n+\n 2005-12-02  Richard Guenther  <rguenther@suse.de>\n \n \t* convert.c (convert_to_integer): Fix compare for nonpositive"}, {"sha": "27a310f604c227449962da574b91747e9ff152aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e20d9c461087c46560b6485b7f4b00e43a07f00", "patch": "@@ -1,3 +1,7 @@\n+2005-12-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/20031106-6.c: Remove XFAIL.\n+\n 2005-12-02  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* gcc.dg/lvalue-2.c (f0): Put \"error: \" marker back."}, {"sha": "8708fe12dcf296d280002e3e3a25d80fc2a6e077", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-6.c?ref=4e20d9c461087c46560b6485b7f4b00e43a07f00", "patch": "@@ -25,5 +25,5 @@ struct s foo (struct s r)\n \n /* There should be no references to any of \"temp_struct*\"\n    temporaries.  */\n-/* { dg-final { scan-tree-dump-times \"temp_struct\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"temp_struct\" 0 \"optimized\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "497715abac0020480586b329b00154b5b62c3889", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e20d9c461087c46560b6485b7f4b00e43a07f00/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=4e20d9c461087c46560b6485b7f4b00e43a07f00", "patch": "@@ -4425,6 +4425,26 @@ tree_duplicate_sese_region (edge entry, edge exit,\n }\n \n \n+static tree\n+mark_used_vars (tree *tp, int *walk_subtrees, void *used_vars_)\n+{\n+  bitmap *used_vars = (bitmap *)used_vars_;\n+\n+  if (walk_subtrees\n+      && IS_TYPE_OR_DECL_P (*tp))\n+    *walk_subtrees = 0;\n+\n+  if (!SSA_VAR_P (*tp))\n+    return NULL_TREE;\n+\n+  if (TREE_CODE (*tp) == SSA_NAME)\n+    bitmap_set_bit (*used_vars, DECL_UID (SSA_NAME_VAR (*tp)));\n+  else\n+    bitmap_set_bit (*used_vars, DECL_UID (*tp));\n+\n+  return NULL_TREE;\n+}\n+\n /* Dump FUNCTION_DECL FN to file FILE using FLAGS (see TDF_* in tree.h)  */\n \n void\n@@ -4459,18 +4479,47 @@ dump_function_to_file (tree fn, FILE *file, int flags)\n      BIND_EXPRs, so display them separately.  */\n   if (cfun && cfun->decl == fn && cfun->unexpanded_var_list)\n     {\n+      bitmap used_vars = BITMAP_ALLOC (NULL);\n       ignore_topmost_bind = true;\n \n+      /* Record vars we'll use dumping the functions tree.  */\n+      if (cfun->cfg && basic_block_info)\n+\t{\n+\t  FOR_EACH_BB (bb)\n+\t    {\n+\t      block_stmt_iterator bsi;\n+\t      for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))\n+\t        walk_tree (bsi_stmt_ptr (bsi), mark_used_vars,\n+\t\t\t   &used_vars, NULL);\n+\t    }\n+\t  for (vars = cfun->unexpanded_var_list; vars;\n+\t       vars = TREE_CHAIN (vars))\n+\t    {\n+\t      var = TREE_VALUE (vars);\n+\t      if (TREE_CODE (var) == VAR_DECL\n+\t\t  && DECL_INITIAL (var)\n+\t\t  && bitmap_bit_p (used_vars, DECL_UID (var)))\n+\t\twalk_tree (&DECL_INITIAL (var), mark_used_vars,\n+\t\t\t   &used_vars, NULL);\n+\t    }\n+\t}\n+\n+      /* Dump used vars.  */\n       fprintf (file, \"{\\n\");\n       for (vars = cfun->unexpanded_var_list; vars; vars = TREE_CHAIN (vars))\n \t{\n \t  var = TREE_VALUE (vars);\n+\t  if (cfun->cfg && basic_block_info\n+\t      && !bitmap_bit_p (used_vars, DECL_UID (var)))\n+            continue;\n \n \t  print_generic_decl (file, var, flags);\n \t  fprintf (file, \"\\n\");\n \n \t  any_var = true;\n \t}\n+\n+      BITMAP_FREE (used_vars);\n     }\n \n   if (cfun && cfun->decl == fn && cfun->cfg && basic_block_info)"}]}