{"sha": "61474454b453e664f80c0bd93ff4217d58a8dfba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0NzQ0NTRiNDUzZTY2NGY4MGMwYmQ5M2ZmNDIxN2Q1OGE4ZGZiYQ==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-04-10T11:08:12Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-04-10T11:08:12Z"}, "message": "cpplex.c (skip_block_comment): Use pointer arithmetic rather than GETC ().\n\n\t* cpplex.c (skip_block_comment): Use pointer arithmetic rather\n\tthan GETC ().\n\t* cpphash.h: (CPP_BUMP_BUFFER_LINE_CUR, CPP_BUMP_LINE_CUR): New.\n\nFrom-SVN: r33052", "tree": {"sha": "ea7c10d47e64bc4b4b2d6a71203a4f70e05d04fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea7c10d47e64bc4b4b2d6a71203a4f70e05d04fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61474454b453e664f80c0bd93ff4217d58a8dfba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61474454b453e664f80c0bd93ff4217d58a8dfba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61474454b453e664f80c0bd93ff4217d58a8dfba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61474454b453e664f80c0bd93ff4217d58a8dfba/comments", "author": null, "committer": null, "parents": [{"sha": "775afb2516d17b4a3c63ffe7be4d7144a75fb0a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775afb2516d17b4a3c63ffe7be4d7144a75fb0a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775afb2516d17b4a3c63ffe7be4d7144a75fb0a1"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "be455f9777bfb10c150505a65cf325d0d75e490c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61474454b453e664f80c0bd93ff4217d58a8dfba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61474454b453e664f80c0bd93ff4217d58a8dfba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61474454b453e664f80c0bd93ff4217d58a8dfba", "patch": "@@ -1,3 +1,9 @@\n+2000-04-10  Neil Booth  <NeilB@earthling.net>\n+\n+\t* cpplex.c (skip_block_comment): Use pointer arithmetic rather\n+\tthan GETC ().\n+\t* cpphash.h: (CPP_BUMP_BUFFER_LINE_CUR, CPP_BUMP_LINE_CUR): New.\n+\n 2000-04-10  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* invoke.texi (-fno-gnu-keywords): Remove classof, headof,\n@@ -23561,3 +23567,5 @@ Wed May 19 00:34:40 1999  Jeffrey A Law  (law@cygnus.com)\n \tgcc-2.95 branch.\n \n See ChangeLog.1 for earlier changes.\n+\n+\t\n\\ No newline at end of file"}, {"sha": "fb4d913cb274758e8dc4c1bc7c1f3b784e2862db", "filename": "gcc/cpphash.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61474454b453e664f80c0bd93ff4217d58a8dfba/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61474454b453e664f80c0bd93ff4217d58a8dfba/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=61474454b453e664f80c0bd93ff4217d58a8dfba", "patch": "@@ -221,6 +221,10 @@ extern unsigned char _cpp_IStable[256];\n #define CPP_BUMP_BUFFER_LINE(PBUF) ((PBUF)->lineno++,\\\n \t\t\t\t    (PBUF)->line_base = (PBUF)->cur)\n #define CPP_BUMP_LINE(PFILE) CPP_BUMP_BUFFER_LINE(CPP_BUFFER(PFILE))\n+#define CPP_BUMP_BUFFER_LINE_CUR(PBUF, CUR) ((PBUF)->lineno++,\\\n+\t\t\t\t             (PBUF)->line_base = CUR)\n+#define CPP_BUMP_LINE_CUR(PFILE, CUR) \\\n+                            CPP_BUMP_BUFFER_LINE_CUR(CPP_BUFFER(PFILE), CUR)\n #define CPP_PREV_BUFFER(BUFFER) ((BUFFER)->prev)\n \n /* Are we in column 1 right now?  Used mainly for -traditional handling"}, {"sha": "0dd6ff7c19a943ac1bb8f6c95a3eb37d9c654977", "filename": "gcc/cpplex.c", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61474454b453e664f80c0bd93ff4217d58a8dfba/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61474454b453e664f80c0bd93ff4217d58a8dfba/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=61474454b453e664f80c0bd93ff4217d58a8dfba", "patch": "@@ -248,33 +248,41 @@ static void\n skip_block_comment (pfile)\n      cpp_reader *pfile;\n {\n-  int c, prev_c = -1;\n   long line, col;\n+  const U_CHAR *limit, *cur;\n \n   FORWARD(1);\n   cpp_buf_line_and_col (CPP_BUFFER (pfile), &line, &col);\n-  for (;;)\n+  limit = CPP_BUFFER (pfile)->rlimit;\n+  cur = CPP_BUFFER (pfile)->cur;\n+\n+  while (cur < limit)\n     {\n-      c = GETC ();\n-      if (c == EOF)\n-\t{\n-\t  cpp_error_with_line (pfile, line, col, \"unterminated comment\");\n-\t  return;\n-\t}\n-      else if (c == '\\n' || c == '\\r')\n+      char c = *cur++;\n+      if (c == '\\n' || c == '\\r')\n \t{\n \t  /* \\r cannot be a macro escape marker here. */\n \t  if (!ACTIVE_MARK_P (pfile))\n-\t    CPP_BUMP_LINE (pfile);\n+\t    CPP_BUMP_LINE_CUR (pfile, cur);\n \t}\n-      else if (c == '/' && prev_c == '*')\n-\treturn;\n-      else if (c == '*' && prev_c == '/'\n-\t       && CPP_OPTION (pfile, warn_comments))\n-\tcpp_warning (pfile, \"`/*' within comment\");\n+      else if (c == '*')\n+\t{\n+\t  /* Check for teminator.  */\n+\t  if (cur < limit && *cur == '/')\n+\t    goto out;\n \n-      prev_c = c;\n+\t  /* Warn about comment starter embedded in comment.  */\n+\t  if (cur[-2] == '/' && CPP_OPTION (pfile, warn_comments))\n+\t    cpp_warning_with_line (pfile, CPP_BUFFER (pfile)->lineno,\n+\t\t\t\t   cur - CPP_BUFFER (pfile)->line_base,\n+\t\t\t\t   \"'/*' within comment\");\n+\t}\n     }\n+\n+  cpp_error_with_line (pfile, line, col, \"unterminated comment\");\n+  cur--;\n+ out:\n+  CPP_BUFFER (pfile)->cur = cur + 1;\n }\n \n /* Skip a C++/Chill line comment.  We know it's a comment, and point"}]}