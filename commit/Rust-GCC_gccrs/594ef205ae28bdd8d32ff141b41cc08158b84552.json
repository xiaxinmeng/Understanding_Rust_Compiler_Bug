{"sha": "594ef205ae28bdd8d32ff141b41cc08158b84552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk0ZWYyMDVhZTI4YmRkOGQzMmZmMTQxYjQxY2MwODE1OGI4NDU1Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-17T12:00:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-17T12:00:38Z"}, "message": "Implement P0084R2, Emplace return type, for C++17\n\n\t* doc/xml/manual/status_cxx2017.xml: Update status.\n\t* doc/html/*: Regenerate.\n\t* include/bits/deque.tcc (deque::emplace_front, deque::emplace_back):\n\tReturn a reference in C++17 mode.\n\t* include/bits/forward_list.h (forward_list::emplace_front): Likewise.\n\t* include/bits/stl_bvector.h (vector<bool>::emplace_back): Likewise.\n\t* include/bits/stl_deque.h (deque::emplace_front, deque::emplace_back):\n\tLikewise.\n\t* include/bits/stl_list.h (list::emplace_front, list::emplace_back):\n\tLikewise.\n\t* include/bits/stl_queue.h (queue::emplace): Likewise.\n\t* include/bits/stl_stack.h (stack::emplace): Likewise.\n\t* include/bits/stl_vector.h (vector::emplace_back): Likewise.\n\t* include/bits/vector.tcc (vector::emplace_back): Likewise.\n\t* include/debug/deque (__gnu_debug::deque::emplace_front)\n\t(__gnu_debug::deque::emplace_back): Likewise.\n\t* include/debug/vector (__gnu_debug::vector::emplace_back): Likewise.\n\t* testsuite/23_containers/deque/modifiers/emplace/cxx17_return.cc:\n\tNew.\n\t* testsuite/23_containers/forward_list/modifiers/\n\templace_cxx17_return.cc: New.\n\t* testsuite/23_containers/list/modifiers/emplace/cxx17_return.cc: New.\n\t* testsuite/23_containers/queue/members/emplace_cxx17_return.cc: New.\n\t* testsuite/23_containers/stack/members/emplace_cxx17_return.cc: New.\n\t* testsuite/23_containers/vector/bool/emplace_cxx17_return.cc: New.\n\t* testsuite/23_containers/vector/modifiers/emplace/cxx17_return.cc:\n\tNew.\n\nFrom-SVN: r241234", "tree": {"sha": "4448cc191ed8fe068e5d19fb7061973f2254a06e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4448cc191ed8fe068e5d19fb7061973f2254a06e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/594ef205ae28bdd8d32ff141b41cc08158b84552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594ef205ae28bdd8d32ff141b41cc08158b84552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/594ef205ae28bdd8d32ff141b41cc08158b84552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594ef205ae28bdd8d32ff141b41cc08158b84552/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d47d3849186bd649cf5062e4a0070f89cf8b7352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47d3849186bd649cf5062e4a0070f89cf8b7352", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47d3849186bd649cf5062e4a0070f89cf8b7352"}], "stats": {"total": 455, "additions": 440, "deletions": 15}, "files": [{"sha": "b31c1dd331a4a804519d26ce2429eb6de34796a5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -1,3 +1,33 @@\n+2016-10-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2017.xml: Update status.\n+\t* doc/html/*: Regenerate.\n+\t* include/bits/deque.tcc (deque::emplace_front, deque::emplace_back):\n+\tReturn a reference in C++17 mode.\n+\t* include/bits/forward_list.h (forward_list::emplace_front): Likewise.\n+\t* include/bits/stl_bvector.h (vector<bool>::emplace_back): Likewise.\n+\t* include/bits/stl_deque.h (deque::emplace_front, deque::emplace_back):\n+\tLikewise.\n+\t* include/bits/stl_list.h (list::emplace_front, list::emplace_back):\n+\tLikewise.\n+\t* include/bits/stl_queue.h (queue::emplace): Likewise.\n+\t* include/bits/stl_stack.h (stack::emplace): Likewise.\n+\t* include/bits/stl_vector.h (vector::emplace_back): Likewise.\n+\t* include/bits/vector.tcc (vector::emplace_back): Likewise.\n+\t* include/debug/deque (__gnu_debug::deque::emplace_front)\n+\t(__gnu_debug::deque::emplace_back): Likewise.\n+\t* include/debug/vector (__gnu_debug::vector::emplace_back): Likewise.\n+\t* testsuite/23_containers/deque/modifiers/emplace/cxx17_return.cc:\n+\tNew.\n+\t* testsuite/23_containers/forward_list/modifiers/\n+\templace_cxx17_return.cc: New.\n+\t* testsuite/23_containers/list/modifiers/emplace/cxx17_return.cc: New.\n+\t* testsuite/23_containers/queue/members/emplace_cxx17_return.cc: New.\n+\t* testsuite/23_containers/stack/members/emplace_cxx17_return.cc: New.\n+\t* testsuite/23_containers/vector/bool/emplace_cxx17_return.cc: New.\n+\t* testsuite/23_containers/vector/modifiers/emplace/cxx17_return.cc:\n+\tNew.\n+\n 2016-10-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/22_locale/classification/isblank.cc: Remove 'test'"}, {"sha": "7a79f0d83b0f9e7f0a5a1e9c5d9891c006a87566", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -706,11 +706,11 @@\n \t</a>\n       </td><td align=\"center\"> 6.2 (3.0)</td><td align=\"left\"><code class=\"code\"> __cpp_lib_incomplete_container_elements &gt;= 201505 </code>\n \t     (the feature was always supported, but the macro was not defined until GCC 6.2)\n-      </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Emplace return type </td><td align=\"left\">\n+      </td></tr><tr><td align=\"left\"> Emplace return type </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0084r2.pdf\" target=\"_top\">\n \tP0084R2\n \t</a>\n-      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">Improved insertion interface for unique-key maps</td><td align=\"left\">\n+      </td><td align=\"center\"> 7 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">Improved insertion interface for unique-key maps</td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4279.html\" target=\"_top\">\n \t  N4279\n \t</a>"}, {"sha": "f37d7be8a47aa61f1e13d49ad09a13822f9cd51d", "filename": "libstdc++-v3/doc/html/manual/test.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -322,7 +322,7 @@\n       <span class=\"command\"><strong>make</strong></span>, or via options for the DejaGnu test framework\n       (described below). The latter approach uses the\n       <code class=\"option\">--target_board</code> option that was shown earlier.\n-      For example, to run the tests with <code class=\"option\">-O1 -D_GLIBCXX_ASSERT</code>\n+      For example, to run the tests with <code class=\"option\">-O1 -D_GLIBCXX_ASSERTIONS</code>\n       you could use:\n </p><pre class=\"programlisting\">    make RUNTESTFLAGS=--target_board=unix/-O1/-D_GLIBCXX_ASSERTIONS</pre><p>\n     </p><p>"}, {"sha": "a1190bc1afa529e2cf1b7a4452777603b13324f9", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -542,14 +542,13 @@ Feature-testing recommendations for C++</link>.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry> Emplace return type </entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0084r2.pdf\">\n \tP0084R2\n \t</link>\n       </entry>\n-      <entry align=\"center\"> No </entry>\n+      <entry align=\"center\"> 7 </entry>\n       <entry/>\n     </row>\n "}, {"sha": "796b0cd9239cce1950c04246c9c503920b68bb1b", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -129,7 +129,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n   template<typename _Tp, typename _Alloc>\n     template<typename... _Args>\n+#if __cplusplus > 201402L\n+      typename deque<_Tp, _Alloc>::reference\n+#else\n       void\n+#endif\n       deque<_Tp, _Alloc>::\n       emplace_front(_Args&&... __args)\n       {\n@@ -142,11 +146,18 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t  }\n \telse\n \t  _M_push_front_aux(std::forward<_Args>(__args)...);\n+#if __cplusplus > 201402L\n+\treturn front();\n+#endif\n       }\n \n   template<typename _Tp, typename _Alloc>\n     template<typename... _Args>\n+#if __cplusplus > 201402L\n+      typename deque<_Tp, _Alloc>::reference\n+#else\n       void\n+#endif\n       deque<_Tp, _Alloc>::\n       emplace_back(_Args&&... __args)\n       {\n@@ -160,6 +171,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t  }\n \telse\n \t  _M_push_back_aux(std::forward<_Args>(__args)...);\n+#if __cplusplus > 201402L\n+\treturn back();\n+#endif\n       }\n #endif\n "}, {"sha": "0ea88063d7ed0a87449e6a7acdf2a0c0db3cab96", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -797,10 +797,19 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n        *  and references.\n        */\n       template<typename... _Args>\n-        void\n+#if __cplusplus > 201402L\n+        reference\n+#else\n+\tvoid\n+#endif\n         emplace_front(_Args&&... __args)\n-        { this->_M_insert_after(cbefore_begin(),\n-                                std::forward<_Args>(__args)...); }\n+        {\n+\t  this->_M_insert_after(cbefore_begin(),\n+                                std::forward<_Args>(__args)...);\n+#if __cplusplus > 201402L\n+\t  return front();\n+#endif\n+\t}\n \n       /**\n        *  @brief  Add data to the front of the %forward_list."}, {"sha": "2e231b9d86bb582069954abd6c21894fe9279b76", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -1056,9 +1056,18 @@ template<typename _Alloc>\n \n #if __cplusplus >= 201103L\n     template<typename... _Args>\n+#if __cplusplus > 201402L\n+      reference\n+#else\n       void\n+#endif\n       emplace_back(_Args&&... __args)\n-      { push_back(bool(__args...)); }\n+      {\n+\tpush_back(bool(__args...));\n+#if __cplusplus > 201402L\n+\treturn back();\n+#endif\n+      }\n \n     template<typename... _Args>\n       iterator"}, {"sha": "8539a08f3a9e4a9c5e03bb4f9efb5cbd209868e2", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -1519,7 +1519,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { emplace_front(std::move(__x)); }\n \n       template<typename... _Args>\n-        void\n+#if __cplusplus > 201402L\n+\treference\n+#else\n+\tvoid\n+#endif\n         emplace_front(_Args&&... __args);\n #endif\n \n@@ -1552,7 +1556,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { emplace_back(std::move(__x)); }\n \n       template<typename... _Args>\n-        void\n+#if __cplusplus > 201402L\n+\treference\n+#else\n+\tvoid\n+#endif\n         emplace_back(_Args&&... __args);\n #endif\n "}, {"sha": "8693a6f55c6a70e3572862c52bd7f3c4a11057d3", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -1069,9 +1069,18 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       { this->_M_insert(begin(), std::move(__x)); }\n \n       template<typename... _Args>\n-        void\n+#if __cplusplus > 201402L\n+        reference\n+#else\n+\tvoid\n+#endif\n         emplace_front(_Args&&... __args)\n-        { this->_M_insert(begin(), std::forward<_Args>(__args)...); }\n+        {\n+\t  this->_M_insert(begin(), std::forward<_Args>(__args)...);\n+#if __cplusplus > 201402L\n+\t  return front();\n+#endif\n+\t}\n #endif\n \n       /**\n@@ -1110,9 +1119,18 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       { this->_M_insert(end(), std::move(__x)); }\n \n       template<typename... _Args>\n-        void\n+#if __cplusplus > 201402L\n+        reference\n+#else\n+\tvoid\n+#endif\n         emplace_back(_Args&&... __args)\n-        { this->_M_insert(end(), std::forward<_Args>(__args)...); }\n+        {\n+\t  this->_M_insert(end(), std::forward<_Args>(__args)...);\n+#if __cplusplus > 201402L\n+        return back();\n+#endif\n+\t}\n #endif\n \n       /**"}, {"sha": "178e4b2c22bf97b4612cb04a4e0dd9d4a3138f60", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -247,10 +247,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       push(value_type&& __x)\n       { c.push_back(std::move(__x)); }\n \n+#if __cplusplus > 201402L\n+      template<typename... _Args>\n+\tdecltype(auto)\n+\templace(_Args&&... __args)\n+\t{ return c.emplace_back(std::forward<_Args>(__args)...); }\n+#else\n       template<typename... _Args>\n         void\n         emplace(_Args&&... __args)\n \t{ c.emplace_back(std::forward<_Args>(__args)...); }\n+#endif\n #endif\n \n       /**"}, {"sha": "ebc8816d56a122de9feb27e0033b26be4741f9a6", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -223,10 +223,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       push(value_type&& __x)\n       { c.push_back(std::move(__x)); }\n \n+#if __cplusplus > 201402L\n+      template<typename... _Args>\n+\tdecltype(auto)\n+\templace(_Args&&... __args)\n+\t{ return c.emplace_back(std::forward<_Args>(__args)...); }\n+#else\n       template<typename... _Args>\n         void\n         emplace(_Args&&... __args)\n \t{ c.emplace_back(std::forward<_Args>(__args)...); }\n+#endif\n #endif\n \n       /**"}, {"sha": "efc569b9c847033e22256e2c18184c578ba70060", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -960,7 +960,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { emplace_back(std::move(__x)); }\n \n       template<typename... _Args>\n+#if __cplusplus > 201402L\n+        reference\n+#else\n \tvoid\n+#endif\n \templace_back(_Args&&... __args);\n #endif\n "}, {"sha": "b6050d34cc9e0570849d5ee7ba35829d06070e25", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -87,7 +87,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #if __cplusplus >= 201103L\n   template<typename _Tp, typename _Alloc>\n     template<typename... _Args>\n+#if __cplusplus > 201402L\n+      typename vector<_Tp, _Alloc>::reference\n+#else\n       void\n+#endif\n       vector<_Tp, _Alloc>::\n       emplace_back(_Args&&... __args)\n       {\n@@ -99,6 +103,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t  }\n \telse\n \t  _M_realloc_insert(end(), std::forward<_Args>(__args)...);\n+#if __cplusplus > 201402L\n+\treturn back();\n+#endif\n       }\n #endif\n "}, {"sha": "bf4cba6e72523411d45d7af94cb03fbce22cf595", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -386,19 +386,33 @@ namespace __debug\n       { emplace_back(std::move(__x)); }\n \n       template<typename... _Args>\n+#if __cplusplus > 201402L\n+\treference\n+#else\n \tvoid\n+#endif\n \templace_front(_Args&&... __args)\n \t{\n \t  _Base::emplace_front(std::forward<_Args>(__args)...);\n \t  this->_M_invalidate_all();\n+#if __cplusplus > 201402L\n+\t  return front();\n+#endif\n \t}\n \n       template<typename... _Args>\n+#if __cplusplus > 201402L\n+\treference\n+#else\n \tvoid\n+#endif\n \templace_back(_Args&&... __args)\n \t{\n \t  _Base::emplace_back(std::forward<_Args>(__args)...);\n \t  this->_M_invalidate_all();\n+#if __cplusplus > 201402L\n+\t  return back();\n+#endif\n \t}\n \n       template<typename... _Args>"}, {"sha": "b2d70bd5f6b651b8bea0c9187bf5269d98340e94", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -478,14 +478,21 @@ namespace __debug\n \t{ emplace_back(std::move(__x)); }\n \n       template<typename... _Args>\n+#if __cplusplus > 201402L\n+\tdeque<_Tp, _Alloc>::reference\n+#else\n \tvoid\n+#endif\n \templace_back(_Args&&... __args)\n \t{\n \t  bool __realloc = this->_M_requires_reallocation(this->size() + 1);\n \t  _Base::emplace_back(std::forward<_Args>(__args)...);\n \t  if (__realloc)\n \t    this->_M_invalidate_all();\n \t  this->_M_update_guaranteed_capacity();\n+#if __cplusplus > 201402L\n+\t  return back();\n+#endif\n \t}\n #endif\n "}, {"sha": "3e5da9602978b9fcc9a99e990c2223957e8bfaae", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/emplace/cxx17_return.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Femplace%2Fcxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Femplace%2Fcxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Femplace%2Fcxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::deque<int>;\n+\n+void\n+test01()\n+{\n+  test_type x{1, 2, 3, 4};\n+  test_type::reference r = x.emplace_front(0);\n+  VERIFY( r == 0 );\n+  VERIFY( &r == &x.front() );\n+}\n+\n+void\n+test02()\n+{\n+  test_type x{1, 2, 3, 4};\n+  test_type::reference r = x.emplace_back(5);\n+  VERIFY( r == 5 );\n+  VERIFY( &r == &x.back() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "b91c1ca3397a82015d9c22276111f3e6891883f4", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/emplace_cxx17_return.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2Femplace_cxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2Femplace_cxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2Femplace_cxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <forward_list>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::forward_list<int>;\n+\n+void\n+test01()\n+{\n+  test_type x{1, 2, 3, 4};\n+  test_type::reference r = x.emplace_front(0);\n+  VERIFY( r == 0 );\n+  VERIFY( &r == &x.front() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "c88d8d2426c1fd252e6d220afaaae3c32e635529", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/emplace/cxx17_return.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Femplace%2Fcxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Femplace%2Fcxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Femplace%2Fcxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <list>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::list<int>;\n+\n+void\n+test01()\n+{\n+  test_type x{1, 2, 3, 4};\n+  test_type::reference r = x.emplace_front(0);\n+  VERIFY( r == 0 );\n+  VERIFY( &r == &x.front() );\n+}\n+\n+void\n+test02()\n+{\n+  test_type x{1, 2, 3, 4};\n+  test_type::reference r = x.emplace_back(5);\n+  VERIFY( r == 5 );\n+  VERIFY( &r == &x.back() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "a618e9ceb36d191b7b490cb0eea9465694ac2ab2", "filename": "libstdc++-v3/testsuite/23_containers/queue/members/emplace_cxx17_return.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2Femplace_cxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2Femplace_cxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2Femplace_cxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <queue>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::queue<int>;\n+\n+void\n+test01()\n+{\n+  test_type x{ test_type::container_type{1, 2, 3, 4} };\n+  test_type::reference r = x.emplace(5);\n+  VERIFY( r == 5 );\n+  VERIFY( &r == &x.back() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "76964ebe7a252ac808a25a84964fe97f6a551784", "filename": "libstdc++-v3/testsuite/23_containers/stack/members/emplace_cxx17_return.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2Femplace_cxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2Femplace_cxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2Femplace_cxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <stack>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::stack<int>;\n+\n+void\n+test01()\n+{\n+  test_type x{ test_type::container_type{1, 2, 3, 4} };\n+  test_type::reference r = x.emplace(5);\n+  VERIFY( r == 5 );\n+  VERIFY( &r == &x.top() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "d4f70fb0de9779acf0a2dec5e6320af110dd9898", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/emplace_cxx17_return.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Femplace_cxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Femplace_cxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Femplace_cxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::vector<bool>;\n+\n+void\n+test02()\n+{\n+  test_type x{true, true};\n+  test_type::reference r = x.emplace_back(false);\n+  VERIFY( r == false );\n+}\n+\n+int\n+main()\n+{\n+  test02();\n+}"}, {"sha": "9006dabbfc2308b75ddde60061be0ffde45a4ab6", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/emplace/cxx17_return.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Femplace%2Fcxx17_return.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/594ef205ae28bdd8d32ff141b41cc08158b84552/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Femplace%2Fcxx17_return.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Femplace%2Fcxx17_return.cc?ref=594ef205ae28bdd8d32ff141b41cc08158b84552", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+using test_type = std::vector<int>;\n+\n+void\n+test02()\n+{\n+  test_type x{1, 2, 3, 4};\n+  test_type::reference r = x.emplace_back(5);\n+  VERIFY( r == 5 );\n+  VERIFY( &r == &x.back() );\n+}\n+\n+int\n+main()\n+{\n+  test02();\n+}"}]}