{"sha": "98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThhZmYwYjUyZWU5YzY1ZWRmNzA5OWFjMmEyM2I0N2VmODEzZWE0Nw==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-07-04T18:12:08Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-07-04T18:12:08Z"}, "message": "ropeimpl.h (_Rope_RopeRep::_M_free_c_string): Replace destroy by _Destroy.\n\n2001-07-04  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* include/ext/ropeimpl.h (_Rope_RopeRep::_M_free_c_string):\n\tReplace destroy by _Destroy.\n\t(_Rope_RopeRep::_S_free_string): Likewise.\n\t(rope::c_str()): Likewise.\n\t* include/ext/slist (_Slist_base::_M_erase_after>): Likewise.\n\t(_Slist_base::_M_erase_after): Likewise.\n\t(slist::_M_create_node): Replace construct by _Construct.\n\t(slist::pop_front): Replace destroy by _Destroy.\n\t* include/ext/stl_hashtable.h (hashtable::_M_new_node): Replace\n\tconstruct by _Construct.\n\t(hashtable::_M_delete_node): Replace destroy by _Destroy.\n\t* include/ext/stl_rope.h (rope::rope): Replace construct by\n\t_Construct.\n\t(rope::copy): Replace destroy by _Destroy.\n\nFrom-SVN: r43764", "tree": {"sha": "c61e6f1470472aed66d0653a85eaf6a3f07ff125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c61e6f1470472aed66d0653a85eaf6a3f07ff125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/comments", "author": null, "committer": null, "parents": [{"sha": "84a5b4f858fc2aec5f871e606cdfef3dd4a15948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84a5b4f858fc2aec5f871e606cdfef3dd4a15948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84a5b4f858fc2aec5f871e606cdfef3dd4a15948"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "2ecebf2bb0a1b1b144eab28bd6001c874d60b0ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "patch": "@@ -1,3 +1,20 @@\n+2001-07-04  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* include/ext/ropeimpl.h (_Rope_RopeRep::_M_free_c_string):\n+\tReplace destroy by _Destroy.\n+\t(_Rope_RopeRep::_S_free_string): Likewise.\n+\t(rope::c_str()): Likewise.\n+\t* include/ext/slist (_Slist_base::_M_erase_after>): Likewise.\n+\t(_Slist_base::_M_erase_after): Likewise.\n+\t(slist::_M_create_node): Replace construct by _Construct.\n+\t(slist::pop_front): Replace destroy by _Destroy.\n+\t* include/ext/stl_hashtable.h (hashtable::_M_new_node): Replace\n+\tconstruct by _Construct.\n+\t(hashtable::_M_delete_node): Replace destroy by _Destroy.\n+\t* include/ext/stl_rope.h (rope::rope): Replace construct by\n+\t_Construct.\n+\t(rope::copy): Replace destroy by _Destroy.\n+\n 2001-07-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/localefwd.h: Format.\t"}, {"sha": "0604c033c8a46597385bdde70c127411b055f5ad", "filename": "libstdc++-v3/include/ext/ropeimpl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h?ref=98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "patch": "@@ -317,7 +317,7 @@ inline void _Rope_RopeRep<_CharT,_Alloc>::_M_free_c_string()\n     _CharT* __cstr = _M_c_string;\n     if (0 != __cstr) {\n \tsize_t __size = _M_size + 1;\n-\tdestroy(__cstr, __cstr + __size);\n+\t_Destroy(__cstr, __cstr + __size);\n \t_Data_deallocate(__cstr, __size);\n     }\n }\n@@ -329,7 +329,7 @@ template <class _CharT, class _Alloc>\n \t\t\t\t\t\t           allocator_type __a)\n {\n     if (!_S_is_basic_char_type((_CharT*)0)) {\n-\tdestroy(__s, __s + __n);\n+\t_Destroy(__s, __s + __n);\n     }\n //  This has to be a static member, so this gets a bit messy\n         __a.deallocate(\n@@ -1453,7 +1453,7 @@ const _CharT* rope<_CharT,_Alloc>::c_str() const {\n \t// It must have been added in the interim.  Hence it had to have been\n \t// separately allocated.  Deallocate the old copy, since we just\n \t// replaced it.\n-\tdestroy(__old_c_string, __old_c_string + __s + 1);\n+\t_Destroy(__old_c_string, __old_c_string + __s + 1);\n \t_Data_deallocate(__old_c_string, __s + 1);\n       }\n #   endif"}, {"sha": "8dca4bffcd6ebe6c4cbded3ca3740e5ed267662d", "filename": "libstdc++-v3/include/ext/slist", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist?ref=98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "patch": "@@ -265,7 +265,7 @@ protected:\n     _Slist_node<_Tp>* __next = (_Slist_node<_Tp>*) (__pos->_M_next);\n     _Slist_node_base* __next_next = __next->_M_next;\n     __pos->_M_next = __next_next;\n-    destroy(&__next->_M_data);\n+    _Destroy(&__next->_M_data);\n     _M_put_node(__next);\n     return __next_next;\n   }\n@@ -280,7 +280,7 @@ _Slist_base<_Tp,_Alloc>::_M_erase_after(_Slist_node_base* __before_first,\n   while (__cur != __last_node) {\n     _Slist_node<_Tp>* __tmp = __cur;\n     __cur = (_Slist_node<_Tp>*) __cur->_M_next;\n-    destroy(&__tmp->_M_data);\n+    _Destroy(&__tmp->_M_data);\n     _M_put_node(__tmp);\n   }\n   __before_first->_M_next = __last_node;\n@@ -318,7 +318,7 @@ private:\n   _Node* _M_create_node(const value_type& __x) {\n     _Node* __node = this->_M_get_node();\n     __STL_TRY {\n-      construct(&__node->_M_data, __x);\n+      _Construct(&__node->_M_data, __x);\n       __node->_M_next = 0;\n     }\n     __STL_UNWIND(this->_M_put_node(__node));\n@@ -328,7 +328,7 @@ private:\n   _Node* _M_create_node() {\n     _Node* __node = this->_M_get_node();\n     __STL_TRY {\n-      construct(&__node->_M_data);\n+      _Construct(&__node->_M_data);\n       __node->_M_next = 0;\n     }\n     __STL_UNWIND(this->_M_put_node(__node));\n@@ -425,7 +425,7 @@ public:\n   void pop_front() {\n     _Node* __node = (_Node*) this->_M_head._M_next;\n     this->_M_head._M_next = __node->_M_next;\n-    destroy(&__node->_M_data);\n+    _Destroy(&__node->_M_data);\n     this->_M_put_node(__node);\n   }\n "}, {"sha": "c0c8b661a46d14cf00001111e7d46e75a4aa91a0", "filename": "libstdc++-v3/include/ext/stl_hashtable.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_hashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_hashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_hashtable.h?ref=98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "patch": "@@ -517,15 +517,15 @@ class hashtable {\n     _Node* __n = _M_get_node();\n     __n->_M_next = 0;\n     __STL_TRY {\n-      construct(&__n->_M_val, __obj);\n+      _Construct(&__n->_M_val, __obj);\n       return __n;\n     }\n     __STL_UNWIND(_M_put_node(__n));\n   }\n   \n   void _M_delete_node(_Node* __n)\n   {\n-    destroy(&__n->_M_val);\n+    _Destroy(&__n->_M_val);\n     _M_put_node(__n);\n   }\n "}, {"sha": "d50bb885f1252b654643178edcb25206be69957f", "filename": "libstdc++-v3/include/ext/stl_rope.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_rope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aff0b52ee9c65edf7099ac2a23b47ef813ea47/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_rope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_rope.h?ref=98aff0b52ee9c65edf7099ac2a23b47ef813ea47", "patch": "@@ -1540,7 +1540,7 @@ class rope : public _Rope_base<_CharT,_Alloc> {\n         {\n             _CharT* __buf = _Data_allocate(_S_rounded_up_size(1));\n \n-            construct(__buf, __c);\n+            _Construct(__buf, __c);\n             __STL_TRY {\n                 _M_tree_ptr = _S_new_RopeLeaf(__buf, 1, __a);\n             }\n@@ -1642,7 +1642,7 @@ class rope : public _Rope_base<_CharT,_Alloc> {\n         }\n \n         void copy(_CharT* __buffer) const {\n-            destroy(__buffer, __buffer + size());\n+            _Destroy(__buffer, __buffer + size());\n             _S_flatten(_M_tree_ptr, __buffer);\n         }\n \n@@ -1656,7 +1656,7 @@ class rope : public _Rope_base<_CharT,_Alloc> {\n             size_t __size = size();\n             size_t __len = (__pos + __n > __size? __size - __pos : __n);\n \n-            destroy(__buffer, __buffer + __len);\n+            _Destroy(__buffer, __buffer + __len);\n             _S_flatten(_M_tree_ptr, __pos, __len, __buffer);\n             return __len;\n         }"}]}