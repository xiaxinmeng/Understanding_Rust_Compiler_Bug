{"sha": "5fd8300bd5fda7ade5791662c5909094b22850ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkODMwMGJkNWZkYTdhZGU1NzkxNjYyYzU5MDkwOTRiMjI4NTBhYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-06-16T16:46:31Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-06-16T16:46:31Z"}, "message": "bitmap.c (bitmap_clear): Don't declare as inline.\n\n\t* bitmap.c (bitmap_clear): Don't declare as inline.\n\t* gimple.c (gimplify_assign): Likewise.\n\t* tree-ssa-sccvn.c (vn_nary_op_compute_hash): Likewise.\n\t* haifa-sched.c (insn_cost): Don't declare with HAIFA_INLINE.\n\t(sched_scan_info): Remove duplicate definition.\n\nFrom-SVN: r148539", "tree": {"sha": "8a7ef94683b5b2f9d6ddab64390028d3726cc272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a7ef94683b5b2f9d6ddab64390028d3726cc272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fd8300bd5fda7ade5791662c5909094b22850ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd8300bd5fda7ade5791662c5909094b22850ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd8300bd5fda7ade5791662c5909094b22850ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd8300bd5fda7ade5791662c5909094b22850ab/comments", "author": null, "committer": null, "parents": [{"sha": "fe673cc9cbe324d73a2250d51c207527090a5439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe673cc9cbe324d73a2250d51c207527090a5439", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe673cc9cbe324d73a2250d51c207527090a5439"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "794442cc1e88e752ea941c11426bce39a0c63ef0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fd8300bd5fda7ade5791662c5909094b22850ab", "patch": "@@ -1,3 +1,11 @@\n+2009-06-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* bitmap.c (bitmap_clear): Don't declare as inline.\n+\t* gimple.c (gimplify_assign): Likewise.\n+\t* tree-ssa-sccvn.c (vn_nary_op_compute_hash): Likewise.\n+\t* haifa-sched.c (insn_cost): Don't declare with HAIFA_INLINE.\n+\t(sched_scan_info): Remove duplicate definition.\n+\n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n \n \t* c-common.c (skip_evaluation): Don't define."}, {"sha": "61a40ee352dde4b874014195eb2a74881649c6e1", "filename": "gcc/bitmap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=5fd8300bd5fda7ade5791662c5909094b22850ab", "patch": "@@ -291,7 +291,7 @@ bitmap_elt_clear_from (bitmap head, bitmap_element *elt)\n \n /* Clear a bitmap by freeing the linked list.  */\n \n-inline void\n+void\n bitmap_clear (bitmap head)\n {\n   if (head->first)"}, {"sha": "91057b4db89a39d69315a05e45e7f3ef2207b718", "filename": "gcc/gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=5fd8300bd5fda7ade5791662c5909094b22850ab", "patch": "@@ -448,7 +448,7 @@ gimple_build_assign_with_ops_stat (enum tree_code subcode, tree lhs, tree op1,\n \n    This function returns the newly created GIMPLE_ASSIGN tuple.  */\n \n-inline gimple\n+gimple\n gimplify_assign (tree dst, tree src, gimple_seq *seq_p)\n { \n   tree t = build2 (MODIFY_EXPR, TREE_TYPE (dst), dst, src);"}, {"sha": "eff10c87628e9e194b820c2c8366e68a8aee9123", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=5fd8300bd5fda7ade5791662c5909094b22850ab", "patch": "@@ -601,7 +601,7 @@ static rtx last_scheduled_insn;\n /* Compute cost of executing INSN.\n    This is the number of cycles between instruction issue and\n    instruction results.  */\n-HAIFA_INLINE int\n+int\n insn_cost (rtx insn)\n {\n   int cost;\n@@ -4721,8 +4721,6 @@ check_cfg (rtx head, rtx tail)\n \n #endif /* ENABLE_CHECKING */\n \n-const struct sched_scan_info_def *sched_scan_info;\n-\n /* Extend per basic block data structures.  */\n static void\n extend_bb (void)"}, {"sha": "8557b0b07c9d37215f28c682afcd907fc9be06bd", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd8300bd5fda7ade5791662c5909094b22850ab/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=5fd8300bd5fda7ade5791662c5909094b22850ab", "patch": "@@ -1362,7 +1362,7 @@ vn_reference_insert_pieces (tree vuse, alias_set_type set, tree type,\n \n /* Compute and return the hash value for nary operation VBO1.  */\n \n-inline hashval_t\n+hashval_t\n vn_nary_op_compute_hash (const vn_nary_op_t vno1)\n {\n   hashval_t hash = 0;"}]}