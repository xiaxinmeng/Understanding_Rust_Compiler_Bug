{"sha": "0083dd669163646b53f80d35dc3c57e403ba7637", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA4M2RkNjY5MTYzNjQ2YjUzZjgwZDM1ZGMzYzU3ZTQwM2JhNzYzNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:18:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:18:11Z"}, "message": "[multiple changes]\n\n2014-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* checks.adb (Apply_Address_Clause_Check): Only issue the new\n\twarning if the propagation warning is issued.\n\n2014-06-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb: Minor reformatting.\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case Pred):\n\tHandle float range check case (Expand_N_Attribute_Reference,\n\tcase Succ): Handle float range check case.\n\t* sem_attr.adb (Analyze_Attribute, case Pred/Succ): Handle float\n\trange check case.\n\n2014-06-13  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.ads (Compute_Builder_Switches): Change name of\n\tparameter Root_Environment to Env.\n\t* prj-conf.adb (Check_Switches): Call Locate_Runtime with the\n\tEnv parameter of procedure Get_Or_Create_Configuration_File.\n\t(Locate_Runtime): Call Find_Rts_In_Path with the Project_Path\n\tof new parameter Env.\n\t* prj-conf.ads (Locate_Runtime): New parameter Env of type\n\tPrj.Tree.Environment.\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Minor comment clarification for Check_Float_Overflow.\n\nFrom-SVN: r211623", "tree": {"sha": "4d83aa0d07ee44d2aa76746150ffeb18efd2486d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d83aa0d07ee44d2aa76746150ffeb18efd2486d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0083dd669163646b53f80d35dc3c57e403ba7637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0083dd669163646b53f80d35dc3c57e403ba7637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0083dd669163646b53f80d35dc3c57e403ba7637", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0083dd669163646b53f80d35dc3c57e403ba7637/comments", "author": null, "committer": null, "parents": [{"sha": "890f1954eda1d56f49006a75594a1b960eec96e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890f1954eda1d56f49006a75594a1b960eec96e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890f1954eda1d56f49006a75594a1b960eec96e1"}], "stats": {"total": 149, "additions": 124, "deletions": 25}, "files": [{"sha": "d5a1fdee0ad468f3165b5381fe045b2db15ef95e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -1,3 +1,35 @@\n+2014-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* checks.adb (Apply_Address_Clause_Check): Only issue the new\n+\twarning if the propagation warning is issued.\n+\n+2014-06-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting.\n+\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case Pred):\n+\tHandle float range check case (Expand_N_Attribute_Reference,\n+\tcase Succ): Handle float range check case.\n+\t* sem_attr.adb (Analyze_Attribute, case Pred/Succ): Handle float\n+\trange check case.\n+\n+2014-06-13  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.ads (Compute_Builder_Switches): Change name of\n+\tparameter Root_Environment to Env.\n+\t* prj-conf.adb (Check_Switches): Call Locate_Runtime with the\n+\tEnv parameter of procedure Get_Or_Create_Configuration_File.\n+\t(Locate_Runtime): Call Find_Rts_In_Path with the Project_Path\n+\tof new parameter Env.\n+\t* prj-conf.ads (Locate_Runtime): New parameter Env of type\n+\tPrj.Tree.Environment.\n+\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Minor comment clarification for Check_Float_Overflow.\n+\n 2014-06-13  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_attr.adb, exp_ch9.adb, lib-writ.adb, g-comlin.adb: Minor"}, {"sha": "66c0d91c88fc096e96ef150931bbd57a10cfaeae", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -767,6 +767,7 @@ package body Checks is\n \n          if Nkind (First (Actions (N))) = N_Raise_Program_Error\n            and then not Warnings_Off (E)\n+           and then Warn_On_Non_Local_Exception\n            and then Restriction_Active (No_Exception_Propagation)\n          then\n             Error_Msg_N"}, {"sha": "827a6dc172a5b7e5f9d3ba9fe101add56dbe0b83", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -4440,7 +4440,8 @@ package body Exp_Attr is\n       ----------\n \n       --  1. Deal with enumeration types with holes\n-      --  2. For floating-point, generate call to attribute function\n+      --  2. For floating-point, generate call to attribute function and deal\n+      --       with range checking if Check_Float_Overflow modde.\n       --  3. For other cases, deal with constraint checking\n \n       when Attribute_Pred => Pred :\n@@ -4512,9 +4513,36 @@ package body Exp_Attr is\n             Analyze_And_Resolve (N, Typ);\n \n          --  For floating-point, we transform 'Pred into a call to the Pred\n-         --  floating-point attribute function in Fat_xxx (xxx is root type)\n+         --  floating-point attribute function in Fat_xxx (xxx is root type).\n \n          elsif Is_Floating_Point_Type (Ptyp) then\n+\n+            --  Handle case of range check. The Do_Range_Check flag is set only\n+            --  in Check_Float_Overflow mode, and what we need is a specific\n+            --  check against typ'First, since that is the only overflow case.\n+\n+            declare\n+               Expr : constant Node_Id := First (Exprs);\n+            begin\n+               if Do_Range_Check (Expr) then\n+                  Set_Do_Range_Check (Expr, False);\n+                  Insert_Action (N,\n+                    Make_Raise_Constraint_Error (Loc,\n+                      Condition =>\n+                        Make_Op_Eq (Loc,\n+                          Left_Opnd  => Duplicate_Subexpr (Expr),\n+                          Right_Opnd =>\n+                            Make_Attribute_Reference (Loc,\n+                              Attribute_Name => Name_First,\n+                              Prefix         =>\n+                                New_Occurrence_Of (Base_Type (Ptyp), Loc))),\n+                      Reason => CE_Range_Check_Failed),\n+                  Suppress => All_Checks);\n+               end if;\n+            end;\n+\n+            --  Transform into call to attribute function\n+\n             Expand_Fpt_Attribute_R (N);\n             Analyze_And_Resolve (N, Typ);\n \n@@ -5563,6 +5591,33 @@ package body Exp_Attr is\n          --  floating-point attribute function in Fat_xxx (xxx is root type)\n \n          elsif Is_Floating_Point_Type (Ptyp) then\n+\n+            --  Handle case of range check. The Do_Range_Check flag is set only\n+            --  in Check_Float_Overflow mode, and what we need is a specific\n+            --  check against typ'Last, since that is the only overflow case.\n+\n+            declare\n+               Expr : constant Node_Id := First (Exprs);\n+            begin\n+               if Do_Range_Check (Expr) then\n+                  Set_Do_Range_Check (Expr, False);\n+                  Insert_Action (N,\n+                    Make_Raise_Constraint_Error (Loc,\n+                      Condition =>\n+                        Make_Op_Eq (Loc,\n+                          Left_Opnd  => Duplicate_Subexpr (Expr),\n+                          Right_Opnd =>\n+                            Make_Attribute_Reference (Loc,\n+                              Attribute_Name => Name_Last,\n+                              Prefix         =>\n+                                New_Occurrence_Of (Base_Type (Ptyp), Loc))),\n+                      Reason    => CE_Range_Check_Failed),\n+                    Suppress => All_Checks);\n+               end if;\n+            end;\n+\n+            --  Transform into call to attribute function\n+\n             Expand_Fpt_Attribute_R (N);\n             Analyze_And_Resolve (N, Typ);\n "}, {"sha": "5b9eb86c2cbb62e4cc38fbf329fa378dd8ab4d0c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -12559,7 +12559,7 @@ package body Exp_Ch4 is\n       --  hook pointer is null.\n \n       procedure Find_Enclosing_Contexts (N : Node_Id);\n-      --  Find the logical context where N appears, and initializae\n+      --  Find the logical context where N appears, and initialize\n       --  Hook_Context and Finalization_Context accordingly. Also\n       --  sets Finalize_Always.\n "}, {"sha": "9790b8e883f0761c3cafe18192465504f7ab6ae6", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -1779,7 +1779,8 @@ as overflow checking could be guaranteed.\n The @code{Check_Float_Overflow}\n configuration pragma achieves this effect. If a unit is compiled\n subject to this configuration pragma, then all operations\n-on predefined floating-point types will be treated as\n+on predefined floating-point types including operations on\n+base types of these floating-point types will be treated as\n though those types were constrained, and overflow checks\n will be generated. The @code{Constraint_Error}\n exception is raised if the result is out of range."}, {"sha": "74be6988cfa59c54ce4366916e28407504e0ce85", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -5327,7 +5327,7 @@ package body Make is\n             if Compute_Builder then\n                Do_Compute_Builder_Switches\n                  (Project_Tree     => Project_Tree,\n-                  Root_Environment => Root_Environment,\n+                  Env              => Root_Environment,\n                   Main_Project     => Main_Project,\n                   Only_For_Lang    => Name_Ada);\n "}, {"sha": "b0dfe3565e53417e546cf8cda3b08417d7745f28", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -3173,7 +3173,7 @@ package body Makeutl is\n \n    procedure Compute_Builder_Switches\n      (Project_Tree        : Project_Tree_Ref;\n-      Root_Environment    : in out Prj.Tree.Environment;\n+      Env                 : in out Prj.Tree.Environment;\n       Main_Project        : Project_Id;\n       Only_For_Lang       : Name_Id := No_Name)\n    is\n@@ -3312,7 +3312,7 @@ package body Makeutl is\n            and then Default_Switches_Array /= No_Array\n          then\n             Prj.Err.Error_Msg\n-              (Root_Environment.Flags,\n+              (Env.Flags,\n                \"Default_Switches forbidden in presence of \" &\n                \"Global_Compilation_Switches. Use Switches instead.\",\n                Project_Tree.Shared.Arrays.Table\n@@ -3432,7 +3432,7 @@ package body Makeutl is\n                      Name_Len := Name_Len + Name_Len;\n \n                      Prj.Err.Error_Msg\n-                       (Root_Environment.Flags,\n+                       (Env.Flags,\n                         '\"' & Name_Buffer (1 .. Name_Len) &\n                         \"\"\" is not a builder switch. Consider moving \" &\n                         \"it to Global_Compilation_Switches.\","}, {"sha": "370f32ae14e2c320bc81fe5b3c3cee4343c25a3e", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -323,7 +323,7 @@ package Makeutl is\n \n    procedure Compute_Builder_Switches\n      (Project_Tree     : Project_Tree_Ref;\n-      Root_Environment : in out Prj.Tree.Environment;\n+      Env              : in out Prj.Tree.Environment;\n       Main_Project     : Project_Id;\n       Only_For_Lang    : Name_Id := No_Name);\n    --  Compute the builder switches and global compilation switches. Every time"}, {"sha": "1becd7028c351df37de7447336eba0f3f49ac70a", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006-2013, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -721,7 +721,7 @@ package body Prj.Conf is\n                               Set_Runtime_For\n                                 (Name_Ada,\n                                  Name_Buffer (7 .. Name_Len));\n-                              Locate_Runtime (Name_Ada, Project_Tree);\n+                              Locate_Runtime (Name_Ada, Project_Tree, Env);\n                            end if;\n \n                         elsif Name_Len > 7\n@@ -748,7 +748,7 @@ package body Prj.Conf is\n \n                                  if not Runtime_Name_Set_For (Lang) then\n                                     Set_Runtime_For (Lang, RTS);\n-                                    Locate_Runtime (Lang, Project_Tree);\n+                                    Locate_Runtime (Lang, Project_Tree, Env);\n                                  end if;\n                               end;\n                            end if;\n@@ -1518,7 +1518,8 @@ package body Prj.Conf is\n \n    procedure Locate_Runtime\n      (Language     : Name_Id;\n-      Project_Tree : Prj.Project_Tree_Ref)\n+      Project_Tree : Prj.Project_Tree_Ref;\n+      Env          : Prj.Tree.Environment)\n    is\n       function Is_Base_Name (Path : String) return Boolean;\n       --  Returns True if Path has no directory separator\n@@ -1551,7 +1552,7 @@ package body Prj.Conf is\n    begin\n       if not Is_Base_Name (RTS_Name) then\n          Full_Path :=\n-           Find_Rts_In_Path (Root_Environment.Project_Path, RTS_Name);\n+           Find_Rts_In_Path (Env.Project_Path, RTS_Name);\n \n          if Full_Path = null then\n             Fail_Program (Project_Tree, \"cannot find RTS \" & RTS_Name);"}, {"sha": "df830ad93b6db1a29ac38bb8cceff8ecf767a5ab", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006-2013, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -218,7 +218,8 @@ package Prj.Conf is\n \n    procedure Locate_Runtime\n      (Language     : Name_Id;\n-      Project_Tree : Prj.Project_Tree_Ref);\n+      Project_Tree : Prj.Project_Tree_Ref;\n+      Env          : Prj.Tree.Environment);\n    --  If RTS_Name is a base name (a name without path separator), then\n    --  do nothing. Otherwise, convert it to an absolute path (possibly by\n    --  searching it in the project path) and call Set_Runtime_For with the"}, {"sha": "bda9f357cc1ce8ba5c0c23b75cceebd535618cef", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0083dd669163646b53f80d35dc3c57e403ba7637/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0083dd669163646b53f80d35dc3c57e403ba7637", "patch": "@@ -2409,6 +2409,8 @@ package body Sem_Attr is\n          end if;\n       end if;\n \n+      --  Cases where prefix must be resolvable by itself\n+\n       if Is_Overloaded (P)\n         and then Aname /= Name_Access\n         and then Aname /= Name_Address\n@@ -4835,17 +4837,20 @@ package body Sem_Attr is\n          if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_SPARK_Restriction\n-              (\"attribute% is not allowed for type%\", P);\n+            Check_SPARK_Restriction (\"attribute% is not allowed for type%\", P);\n          end if;\n \n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n-         --  Nothing to do for real type case\n+         --  For real types, enable range check in Check_Overflow_Mode only\n \n          if Is_Real_Type (P_Type) then\n-            null;\n+            if Check_Float_Overflow\n+              and then not Range_Checks_Suppressed (P_Base_Type)\n+            then\n+               Enable_Range_Check (E1);\n+            end if;\n \n          --  If not modular type, test for overflow check required\n \n@@ -5739,17 +5744,20 @@ package body Sem_Attr is\n          if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_SPARK_Restriction\n-              (\"attribute% is not allowed for type%\", P);\n+            Check_SPARK_Restriction (\"attribute% is not allowed for type%\", P);\n          end if;\n \n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n-         --  Nothing to do for real type case\n+         --  For real types, enable range check in Check_Overflow_Mode only\n \n          if Is_Real_Type (P_Type) then\n-            null;\n+            if Check_Float_Overflow\n+              and then not Range_Checks_Suppressed (P_Base_Type)\n+            then\n+               Enable_Range_Check (E1);\n+            end if;\n \n          --  If not modular type, test for overflow check required\n "}]}