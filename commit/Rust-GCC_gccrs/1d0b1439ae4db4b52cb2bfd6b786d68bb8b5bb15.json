{"sha": "1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQwYjE0MzlhZTRkYjRiNTJjYjJiZmQ2Yjc4NmQ2OGJiOGI1YmIxNQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-07-01T13:35:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-01T13:35:38Z"}, "message": "[Ada] Improve error message on mult/div between fixed-point and integer\n\nMultiplication and division of a fixed-point type by an integer type is\nonly defined by default for type Integer. Clarify the error message to\nexplain that a conversion is needed in other cases.\n\nAlso change an error message to start with lowercase as it should be.\n\n2019-07-01  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb (Operator_Check): Refine error message.\n\nFrom-SVN: r272866", "tree": {"sha": "8564f4a30bd851f6021a87f58e68814c03266dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8564f4a30bd851f6021a87f58e68814c03266dfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25feb37fc665e0c46ee2deec9f47f5ffd4cdd702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25feb37fc665e0c46ee2deec9f47f5ffd4cdd702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25feb37fc665e0c46ee2deec9f47f5ffd4cdd702"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "cf6dc8a2e74ba775f2b98652b7b4ec5e63231d4a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15", "patch": "@@ -1,3 +1,7 @@\n+2019-07-01  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch4.adb (Operator_Check): Refine error message.\n+\n 2019-07-01  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* libgnat/a-calend.ads: Revert \"Global => null\" contracts on"}, {"sha": "03a156a3f77c0cba9f8adc386b3be825297896e2", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=1d0b1439ae4db4b52cb2bfd6b786d68bb8b5bb15", "patch": "@@ -7375,7 +7375,7 @@ package body Sem_Ch4 is\n                                   Etype (Next_Formal (First_Formal (Op_Id))))\n                            then\n                               Error_Msg_N\n-                                (\"No legal interpretation for operator&\", N);\n+                                (\"no legal interpretation for operator&\", N);\n                               Error_Msg_NE\n                                 (\"\\use clause on& would make operation legal\",\n                                  N, Scope (Op_Id));\n@@ -7393,6 +7393,26 @@ package body Sem_Ch4 is\n                            Error_Msg_NE (\"\\left operand has}!\",  N, Etype (L));\n                            Error_Msg_NE (\"\\right operand has}!\", N, Etype (R));\n \n+                           --  For multiplication and division operators with\n+                           --  a fixed-point operand and an integer operand,\n+                           --  indicate that the integer operand should be of\n+                           --  type Integer.\n+\n+                           if Nkind_In (N, N_Op_Multiply, N_Op_Divide)\n+                             and then Is_Fixed_Point_Type (Etype (L))\n+                             and then Is_Integer_Type (Etype (R))\n+                           then\n+                              Error_Msg_N (\"\\convert right operand to \"\n+                                           & \"`Integer`\", N);\n+\n+                           elsif Nkind (N) = N_Op_Multiply\n+                             and then Is_Fixed_Point_Type (Etype (R))\n+                             and then Is_Integer_Type (Etype (L))\n+                           then\n+                              Error_Msg_N (\"\\convert left operand to \"\n+                                           & \"`Integer`\", N);\n+                           end if;\n+\n                         --  For concatenation operators it is more difficult to\n                         --  determine which is the wrong operand. It is worth\n                         --  flagging explicitly an access type, for those who"}]}