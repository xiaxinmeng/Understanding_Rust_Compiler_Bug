{"sha": "693d710f2ad03341b24d45d1b2ab75533d67687e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzZDcxMGYyYWQwMzM0MWIyNGQ0NWQxYjJhYjc1NTMzZDY3Njg3ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-05-03T12:51:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-05-03T12:51:33Z"}, "message": "re PR fortran/27395 (Problem with arrays in the OpenMP REDUCTION clause in Fortran)\n\n\tPR fortran/27395\n\t* gimplify.c (gimplify_scan_omp_clauses): Compare OMP_CLAUSE_CODE\n\trather than TREE_CODE to OMP_CLAUSE_REDUCTION.  Set also GOVD_SEEN\n\tbit for OMP_CLAUSE_REDUCTION_PLACEHOLDER.\n\n\t* testsuite/libgomp.fortran/pr27395-1.f90: New test.\n\t* testsuite/libgomp.fortran/pr27395-2.f90: New test.\n\nFrom-SVN: r113494", "tree": {"sha": "5d4261cec1895613e4c02fd637f62bdfa2874e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d4261cec1895613e4c02fd637f62bdfa2874e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/693d710f2ad03341b24d45d1b2ab75533d67687e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693d710f2ad03341b24d45d1b2ab75533d67687e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693d710f2ad03341b24d45d1b2ab75533d67687e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693d710f2ad03341b24d45d1b2ab75533d67687e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "832a0c1d090950cef0735c66b16955944b063579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832a0c1d090950cef0735c66b16955944b063579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/832a0c1d090950cef0735c66b16955944b063579"}], "stats": {"total": 78, "additions": 76, "deletions": 2}, "files": [{"sha": "902857b933f919ec0c9a3089c6ea88f38e6a68dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693d710f2ad03341b24d45d1b2ab75533d67687e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693d710f2ad03341b24d45d1b2ab75533d67687e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=693d710f2ad03341b24d45d1b2ab75533d67687e", "patch": "@@ -1,3 +1,10 @@\n+2006-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/27395\n+\t* gimplify.c (gimplify_scan_omp_clauses): Compare OMP_CLAUSE_CODE\n+\trather than TREE_CODE to OMP_CLAUSE_REDUCTION.  Set also GOVD_SEEN\n+\tbit for OMP_CLAUSE_REDUCTION_PLACEHOLDER.\n+\n 2006-05-02  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/26626"}, {"sha": "91b88810f38e2f63a963449f35a8d1e4d8b38c7a", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693d710f2ad03341b24d45d1b2ab75533d67687e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693d710f2ad03341b24d45d1b2ab75533d67687e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=693d710f2ad03341b24d45d1b2ab75533d67687e", "patch": "@@ -4510,11 +4510,11 @@ gimplify_scan_omp_clauses (tree *list_p, tree *pre_p, bool in_parallel)\n \t      && DECL_BY_REFERENCE (TREE_OPERAND (decl, 0)))\n \t    OMP_CLAUSE_DECL (c) = decl = TREE_OPERAND (decl, 0);\n \t  omp_add_variable (ctx, decl, flags);\n-\t  if (TREE_CODE (c) == OMP_CLAUSE_REDUCTION\n+\t  if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_REDUCTION\n \t      && OMP_CLAUSE_REDUCTION_PLACEHOLDER (c))\n \t    {\n \t      omp_add_variable (ctx, OMP_CLAUSE_REDUCTION_PLACEHOLDER (c),\n-\t\t\t\tGOVD_LOCAL);\n+\t\t\t\tGOVD_LOCAL | GOVD_SEEN);\n \t      gimplify_omp_ctxp = ctx;\n \t      push_gimplify_context ();\n \t      gimplify_stmt (&OMP_CLAUSE_REDUCTION_INIT (c));"}, {"sha": "d04194cd4a65529bab3165f36b7330e634d24307", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693d710f2ad03341b24d45d1b2ab75533d67687e/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693d710f2ad03341b24d45d1b2ab75533d67687e/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=693d710f2ad03341b24d45d1b2ab75533d67687e", "patch": "@@ -1,3 +1,9 @@\n+2006-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/27395\n+\t* testsuite/libgomp.fortran/pr27395-1.f90: New test.\n+\t* testsuite/libgomp.fortran/pr27395-2.f90: New test.\n+\n 2006-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/26943"}, {"sha": "380a107760bc3e3c068534cd9b8608dcc610adff", "filename": "libgomp/testsuite/libgomp.fortran/pr27395-1.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693d710f2ad03341b24d45d1b2ab75533d67687e/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693d710f2ad03341b24d45d1b2ab75533d67687e/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90?ref=693d710f2ad03341b24d45d1b2ab75533d67687e", "patch": "@@ -0,0 +1,31 @@\n+! PR fortran/27395\n+! { dg-do run }\n+\n+program pr27395_1\n+  implicit none\n+  integer, parameter :: n=10,m=1001\n+  integer :: i\n+  integer, dimension(n) :: sumarray\n+  call foo(n,m,sumarray)\n+  do i=1,n\n+    if (sumarray(i).ne.m*i) call abort\n+  end do\n+end program pr27395_1\n+\n+subroutine foo(n,m,sumarray)\n+  use omp_lib, only : omp_get_thread_num\n+  implicit none\n+  integer, intent(in) :: n,m\n+  integer, dimension(n), intent(out) :: sumarray\n+  integer :: i,j\n+  sumarray(:)=0\n+!$OMP PARALLEL DEFAULT(shared) NUM_THREADS(4)\n+!$OMP DO PRIVATE(j,i), REDUCTION(+:sumarray)\n+  do j=1,m\n+    do i=1,n\n+      sumarray(i)=sumarray(i)+i\n+    end do\n+  end do\n+!$OMP END DO\n+!$OMP END PARALLEL\n+end subroutine foo"}, {"sha": "b3cb255f6dd7ce13ccdad6521a35a367f45b7c94", "filename": "libgomp/testsuite/libgomp.fortran/pr27395-2.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693d710f2ad03341b24d45d1b2ab75533d67687e/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693d710f2ad03341b24d45d1b2ab75533d67687e/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90?ref=693d710f2ad03341b24d45d1b2ab75533d67687e", "patch": "@@ -0,0 +1,30 @@\n+! PR fortran/27395\n+! { dg-do run }\n+\n+program pr27395_2\n+  implicit none\n+  integer, parameter :: n=10,m=1001\n+  integer :: i\n+  call foo(n,m)\n+end program pr27395_2\n+\n+subroutine foo(n,m)\n+  use omp_lib, only : omp_get_thread_num\n+  implicit none\n+  integer, intent(in) :: n,m\n+  integer :: i,j\n+  integer, dimension(n) :: sumarray\n+  sumarray(:)=0\n+!$OMP PARALLEL DEFAULT(shared) NUM_THREADS(4)\n+!$OMP DO PRIVATE(j,i), REDUCTION(+:sumarray)\n+  do j=1,m\n+    do i=1,n\n+      sumarray(i)=sumarray(i)+i\n+    end do\n+  end do\n+!$OMP END DO\n+!$OMP END PARALLEL\n+  do i=1,n\n+    if (sumarray(i).ne.m*i) call abort\n+  end do\n+end subroutine foo"}]}