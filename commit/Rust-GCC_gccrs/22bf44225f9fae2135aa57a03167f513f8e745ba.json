{"sha": "22bf44225f9fae2135aa57a03167f513f8e745ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiZjQ0MjI1ZjlmYWUyMTM1YWE1N2EwMzE2N2Y1MTNmOGU3NDViYQ==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-03-19T00:01:20Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-03-19T00:01:20Z"}, "message": "final.c (insn_noperands): Change type to unsigned int.\n\nP\n\t* final.c (insn_noperands): Change type to unsigned int.\n\t(final_scan_insn): Likewise for noperands;\n\tproperly check operand number boundaries.\n\nFrom-SVN: r18693", "tree": {"sha": "f0f8a8d33e4a552b7ff922b2ffab91daf10cac9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0f8a8d33e4a552b7ff922b2ffab91daf10cac9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22bf44225f9fae2135aa57a03167f513f8e745ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22bf44225f9fae2135aa57a03167f513f8e745ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22bf44225f9fae2135aa57a03167f513f8e745ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22bf44225f9fae2135aa57a03167f513f8e745ba/comments", "author": null, "committer": null, "parents": [{"sha": "af7da1998dad45df5494051a3ea59aa6b6b850ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7da1998dad45df5494051a3ea59aa6b6b850ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7da1998dad45df5494051a3ea59aa6b6b850ea"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "aeb767711269eb99a2cc5424a9dee9be8c25c8ab", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22bf44225f9fae2135aa57a03167f513f8e745ba/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22bf44225f9fae2135aa57a03167f513f8e745ba/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=22bf44225f9fae2135aa57a03167f513f8e745ba", "patch": "@@ -161,7 +161,7 @@ extern int length_unit_log; /* This is defined in insn-attrtab.c.  */\n static rtx this_is_asm_operands;\n \n /* Number of operands of this insn, for an `asm' with operands.  */\n-static int insn_noperands;\n+static unsigned int insn_noperands;\n \n /* Compare optimization flag.  */\n \n@@ -2366,7 +2366,7 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t/* Detect `asm' construct with operands.  */\n \tif (asm_noperands (body) >= 0)\n \t  {\n-\t    int noperands = asm_noperands (body);\n+\t    unsigned int noperands = asm_noperands (body);\n \t    rtx *ops = (rtx *) alloca (noperands * sizeof (rtx));\n \t    char *string;\n \n@@ -3255,7 +3255,7 @@ output_asm_insn (template, operands)\n \n \t    if (! (*p >= '0' && *p <= '9'))\n \t      output_operand_lossage (\"operand number missing after %-letter\");\n-\t    else if (this_is_asm_operands && c >= insn_noperands)\n+\t    else if (this_is_asm_operands && (c < 0 || (unsigned int) c >= insn_noperands))\n \t      output_operand_lossage (\"operand number out of range\");\n \t    else if (letter == 'l')\n \t      output_asm_label (operands[c]);\n@@ -3288,7 +3288,7 @@ output_asm_insn (template, operands)\n \telse if (*p >= '0' && *p <= '9')\n \t  {\n \t    c = atoi (p);\n-\t    if (this_is_asm_operands && c >= insn_noperands)\n+\t    if (this_is_asm_operands && (c < 0 || (unsigned int) c >= insn_noperands))\n \t      output_operand_lossage (\"operand number out of range\");\n \t    else\n \t      output_operand (operands[c], 0);"}]}