{"sha": "75c09e7d3c1604854c30701a620511c4aa568e12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjMDllN2QzYzE2MDQ4NTRjMzA3MDFhNjIwNTExYzRhYTU2OGUxMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-10-23T22:59:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-23T22:59:52Z"}, "message": "misc.c (gnat_init, [...]): Now static.\n\n\t* misc.c (gnat_init, gnat_init_options, gnat_decode_option):\n\tNow static.\n\t(LANG_HOOKS_GET_ALIAS_SET): New macro.\n\t(gnat_expand_expr, case NULL_EXPR): Always call set_mem_attributes.\n\t(gnat_get_alias_set): Renamed from lang_get_alias_set.\n\t* gigi.h (gnat_decode_option, gnat_init_option, gnat_init):\n\tDelete declarations.\n\t(gnat_get_alias_set): Likewise.\n\nFrom-SVN: r46449", "tree": {"sha": "706cf36e2334b199ff85b105df71b6f0e4e4566c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/706cf36e2334b199ff85b105df71b6f0e4e4566c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75c09e7d3c1604854c30701a620511c4aa568e12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c09e7d3c1604854c30701a620511c4aa568e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c09e7d3c1604854c30701a620511c4aa568e12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c09e7d3c1604854c30701a620511c4aa568e12/comments", "author": null, "committer": null, "parents": [{"sha": "4b6c167260f42134dc465ccd05b68d38a3b275d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6c167260f42134dc465ccd05b68d38a3b275d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6c167260f42134dc465ccd05b68d38a3b275d3"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "0d7dcbd5463d719db91b730b0a08e8d057112d76", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c09e7d3c1604854c30701a620511c4aa568e12/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c09e7d3c1604854c30701a620511c4aa568e12/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=75c09e7d3c1604854c30701a620511c4aa568e12", "patch": "@@ -1,3 +1,14 @@\n+Tue Oct 23 19:00:51 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* misc.c (gnat_init, gnat_init_options, gnat_decode_option):\n+\tNow static.\n+\t(LANG_HOOKS_GET_ALIAS_SET): New macro.\n+\t(gnat_expand_expr, case NULL_EXPR): Always call set_mem_attributes.\n+\t(gnat_get_alias_set): Renamed from lang_get_alias_set.\n+\t* gigi.h (gnat_decode_option, gnat_init_option, gnat_init):\n+\tDelete declarations.\n+\t(gnat_get_alias_set): Likewise.\n+\n 2001-10-22  Geert Bosh  <bosch@gnat.com>\n \n \t* Make-lang.in (gnattools, cross-gnattools): Remove gnatmem."}, {"sha": "82848532b058831f368d517b21e5509b9b8b34aa", "filename": "gcc/ada/gigi.h", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c09e7d3c1604854c30701a620511c4aa568e12/gcc%2Fada%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c09e7d3c1604854c30701a620511c4aa568e12/gcc%2Fada%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgigi.h?ref=75c09e7d3c1604854c30701a620511c4aa568e12", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *                            $Revision: 1.1 $\n+ *                            $Revision: 1.2 $\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -34,18 +34,6 @@\n \n /* Declare all functions and types used by gigi.  */\n \n-/* Decode all the language specific options that cannot be decoded by GCC. The\n-   option decoding phase of GCC calls this routine on the flags that it cannot\n-   decode. This routine returns 1 if it is successful, otherwise it\n-   returns 0. */\n-extern int gnat_decode_option\tPARAMS ((int, char **));\n-\n-/* Perform all initialization steps for option processing.  */\n-extern void gnat_init_options\tPARAMS ((void));\n-\n-/* Perform all the initialization steps that are language-specific.  */\n-extern void gnat_init\t\tPARAMS ((void));\n-\n /* See if DECL has an RTL that is indirect via a pseudo-register or a\n    memory location and replace it with an indirect reference if so.\n    This improves the debugger's ability to display the value.  */\n@@ -68,9 +56,6 @@ extern tree make_transform_expr PARAMS ((Node_Id));\n    here that a __builtin_setjmp was done to BUF.  */\n extern void update_setjmp_buf PARAMS ((tree));\n \n-/* Get the alias set corresponding to a type or expression.  */\n-extern HOST_WIDE_INT gnat_get_alias_set\tPARAMS ((tree));\n-\n /* GNU_TYPE is a type. Determine if it should be passed by reference by\n    default.  */\n extern int default_pass_by_ref\tPARAMS ((tree));"}, {"sha": "298bfc394a9c3e43d1539ca739a82cbac650b1e8", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c09e7d3c1604854c30701a620511c4aa568e12/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c09e7d3c1604854c30701a620511c4aa568e12/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=75c09e7d3c1604854c30701a620511c4aa568e12", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                           C Implementation File                          *\n  *                                                                          *\n- *                             $Revision: 1.4 $\n+ *                             $Revision: 1.5 $\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -108,6 +108,11 @@ const char *gnat_tree_code_name[] = {\n };\n #undef DEFTREECODE\n \n+static void gnat_init\t\t\tPARAMS ((void));\n+static void gnat_init_options\t\tPARAMS ((void));\n+static int gnat_decode_option\t\tPARAMS ((int, char **));\n+static HOST_WIDE_INT gnat_get_alias_set\tPARAMS ((tree));\n+\n /* Structure giving our language-specific hooks.  */\n \n #undef  LANG_HOOKS_INIT\n@@ -116,6 +121,10 @@ const char *gnat_tree_code_name[] = {\n #define LANG_HOOKS_INIT_OPTIONS\t\tgnat_init_options\n #undef  LANG_HOOKS_DECODE_OPTION\n #define LANG_HOOKS_DECODE_OPTION\tgnat_decode_option\n+#undef LANG_HOOKS_HONOR_READONLY\n+#define LANG_HOOKS_HONOR_READONLY\t1\n+#undef LANG_HOOKS_GET_ALIAS_SET\n+#define LANG_HOOKS_GET_ALIAS_SET\tgnat_get_alias_set\n \n struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n@@ -641,9 +650,12 @@ gnat_expand_expr (exp, target, tmode, modifier)\n       /* We aren't going to be doing anything with this memory, but allocate\n \t it anyway.  If it's variable size, make a bogus address.  */\n       if (! host_integerp (TYPE_SIZE_UNIT (type), 1))\n-\treturn gen_rtx_MEM (BLKmode, virtual_stack_vars_rtx);\n+\tresult = gen_rtx_MEM (BLKmode, virtual_stack_vars_rtx);\n       else\n-\treturn assign_temp (type, 0, TREE_ADDRESSABLE (exp), 1);\n+\tresult = assign_temp (type, 0, TREE_ADDRESSABLE (exp), 1);\n+\n+      set_mem_attributes (result, exp, 1);\n+      return result;\n \n     case ALLOCATE_EXPR:\n       return\n@@ -935,8 +947,8 @@ get_type_alignment (gnat_type)\n \n /* Get the alias set corresponding to a type or expression.  */\n \n-HOST_WIDE_INT\n-lang_get_alias_set (type)\n+static HOST_WIDE_INT\n+gnat_get_alias_set (type)\n      tree type;\n {\n   /* If this is a padding type, use the type of the first field.  */"}]}