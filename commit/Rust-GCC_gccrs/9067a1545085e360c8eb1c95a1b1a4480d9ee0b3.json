{"sha": "9067a1545085e360c8eb1c95a1b1a4480d9ee0b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2N2ExNTQ1MDg1ZTM2MGM4ZWIxYzk1YTFiMWE0NDgwZDllZTBiMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-23T14:20:53Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-23T14:22:55Z"}, "message": "gcov: fix reading of zero sections.\n\nI noticed that during coverage build of binutils.\n\ngcc/ChangeLog:\n\n\t* gcov.c (read_count_file): Never call gcov_sync with a negative\n\tvalue.", "tree": {"sha": "7575432093358b577ad53c8e19984b1683efac99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7575432093358b577ad53c8e19984b1683efac99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9067a1545085e360c8eb1c95a1b1a4480d9ee0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9067a1545085e360c8eb1c95a1b1a4480d9ee0b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9067a1545085e360c8eb1c95a1b1a4480d9ee0b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9067a1545085e360c8eb1c95a1b1a4480d9ee0b3/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66b30a807918ee1cf89b3376bb410b9046639b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66b30a807918ee1cf89b3376bb410b9046639b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b66b30a807918ee1cf89b3376bb410b9046639b8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "36938bd0fcea12d87de5d315b3bc19fa6ef4cf6f", "filename": "gcc/gcov.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9067a1545085e360c8eb1c95a1b1a4480d9ee0b3/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9067a1545085e360c8eb1c95a1b1a4480d9ee0b3/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=9067a1545085e360c8eb1c95a1b1a4480d9ee0b3", "patch": "@@ -1940,6 +1940,7 @@ read_count_file (void)\n   while ((tag = gcov_read_unsigned ()))\n     {\n       unsigned length = gcov_read_unsigned ();\n+      int read_length = (int)length;\n       unsigned long base = gcov_position ();\n \n       if (tag == GCOV_TAG_OBJECT_SUMMARY)\n@@ -1972,18 +1973,17 @@ read_count_file (void)\n \t}\n       else if (tag == GCOV_TAG_FOR_COUNTER (GCOV_COUNTER_ARCS) && fn)\n \t{\n-\t  int read_length = (int)length;\n \t  length = abs (read_length);\n \t  if (length != GCOV_TAG_COUNTER_LENGTH (fn->counts.size ()))\n \t    goto mismatch;\n \n \t  if (read_length > 0)\n \t    for (ix = 0; ix != fn->counts.size (); ix++)\n \t      fn->counts[ix] += gcov_read_counter ();\n-\t  else\n-\t    length = 0;\n \t}\n-      gcov_sync (base, length);\n+      if (read_length < 0)\n+\tread_length = 0;\n+      gcov_sync (base, read_length);\n       if ((error = gcov_is_error ()))\n \t{\n \t  fnotice (stderr,"}]}