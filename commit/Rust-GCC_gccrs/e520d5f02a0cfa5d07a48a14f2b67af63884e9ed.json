{"sha": "e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUyMGQ1ZjAyYTBjZmE1ZDA3YTQ4YTE0ZjJiNjdhZjYzODg0ZTllZA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-01-30T17:44:56Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-01-30T17:44:56Z"}, "message": "re PR fortran/69566 ([OOP] Failure of SELECT TYPE with unlimited polymorphic function result)\n\n2016-01-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/69566\n\t* trans-expr.c (gfc_conv_procedure_call): Correct expression\n\tfor 'ulim_copy', which was missing a test for 'comp'.\n\n2016-01-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/69566\n\t* gfortran.dg/unlimited_polymorphic_25.f03: New test.\n\nFrom-SVN: r233011", "tree": {"sha": "66f16fc94949bc0d5590b9fd23904195383e552e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66f16fc94949bc0d5590b9fd23904195383e552e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/comments", "author": null, "committer": null, "parents": [{"sha": "343c05d39f7fcdf55178853884113715bc7bcc2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343c05d39f7fcdf55178853884113715bc7bcc2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343c05d39f7fcdf55178853884113715bc7bcc2b"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "e4401f7040b780758718829cc225a5de7978f1c5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "patch": "@@ -1,3 +1,9 @@\n+2016-01-30  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/69566\n+\t* trans-expr.c (gfc_conv_procedure_call): Correct expression\n+\tfor 'ulim_copy', which was missing a test for 'comp'.\n+\n 2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/62536"}, {"sha": "74f519ed87bce23033b2f1f5d5bc8d3373297bf5", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "patch": "@@ -4723,8 +4723,9 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n      is the third and fourth argument to such a function call a value\n      denoting the number of elements to copy (i.e., most of the time the\n      length of a deferred length string).  */\n-  ulim_copy = formal == NULL && UNLIMITED_POLY (sym)\n-      && strcmp (\"_copy\", comp->name) == 0;\n+  ulim_copy = (formal == NULL)\n+\t       && UNLIMITED_POLY (sym)\n+\t       && comp && (strcmp (\"_copy\", comp->name) == 0);\n \n   /* Evaluate the arguments.  */\n   for (arg = args, argc = 0; arg != NULL;"}, {"sha": "df468e11db8d0cb25bada8eb8483b249085f18c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "patch": "@@ -1,3 +1,8 @@\n+2016-01-30  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/69566\n+\t* gfortran.dg/unlimited_polymorphic_25.f03: New test.\n+\n 2016-01-30  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/68490"}, {"sha": "0eb9c7a76f6bde6f4b0e688e0e57b7e5ddc3de3f", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_25.f03", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_25.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e520d5f02a0cfa5d07a48a14f2b67af63884e9ed/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_25.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_25.f03?ref=e520d5f02a0cfa5d07a48a14f2b67af63884e9ed", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+!\n+! Tests the fix for PR69566, in which a boolean expression testing a\n+! the component of a pointer did not check the pointer, resulting in\n+! the ICE.\n+!\n+! Contributed by Janus Weil  <janus@gcc.gnu.org>\n+!\n+  print *, associated(return_pointer()) ! ICE\n+contains\n+  function return_pointer()\n+    class(*), pointer :: return_pointer(:)\n+  end function\n+end"}]}