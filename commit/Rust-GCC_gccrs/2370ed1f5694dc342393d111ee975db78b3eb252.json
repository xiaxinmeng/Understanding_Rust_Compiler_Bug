{"sha": "2370ed1f5694dc342393d111ee975db78b3eb252", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM3MGVkMWY1Njk0ZGMzNDIzOTNkMTExZWU5NzVkYjc4YjNlYjI1Mg==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1999-05-07T10:13:49Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1999-05-07T10:13:49Z"}, "message": "Make it possible to compile with __USE_MALLOC.\n\nFrom-SVN: r26818", "tree": {"sha": "baa136b6ab291d88694307fee7ba164ccd75cac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baa136b6ab291d88694307fee7ba164ccd75cac4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2370ed1f5694dc342393d111ee975db78b3eb252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2370ed1f5694dc342393d111ee975db78b3eb252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2370ed1f5694dc342393d111ee975db78b3eb252", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2370ed1f5694dc342393d111ee975db78b3eb252/comments", "author": null, "committer": null, "parents": [{"sha": "ef179a264402b2263909b8e09aabc57ed45a5f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef179a264402b2263909b8e09aabc57ed45a5f22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef179a264402b2263909b8e09aabc57ed45a5f22"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "208309a389b56de98736efc9136021880059e331", "filename": "libstdc++/stl/stl_alloc.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2370ed1f5694dc342393d111ee975db78b3eb252/libstdc%2B%2B%2Fstl%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2370ed1f5694dc342393d111ee975db78b3eb252/libstdc%2B%2B%2Fstl%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_alloc.h?ref=2370ed1f5694dc342393d111ee975db78b3eb252", "patch": "@@ -894,21 +894,23 @@ inline bool operator!=(const __malloc_alloc_template<__inst>&,\n }\n #endif /* __STL_FUNCTION_TMPL_PARTIAL_ORDER */\n \n+#ifndef __USE_MALLOC\n template <bool __threads, int __inst>\n inline bool operator==(const __default_alloc_template<__threads, __inst>&,\n                        const __default_alloc_template<__threads, __inst>&)\n {\n   return true;\n }\n \n-#ifdef __STL_FUNCTION_TMPL_PARTIAL_ORDER\n+# ifdef __STL_FUNCTION_TMPL_PARTIAL_ORDER\n template <bool __threads, int __inst>\n inline bool operator!=(const __default_alloc_template<__threads, __inst>&,\n                        const __default_alloc_template<__threads, __inst>&)\n {\n   return false;\n }\n-#endif /* __STL_FUNCTION_TMPL_PARTIAL_ORDER */\n+# endif /* __STL_FUNCTION_TMPL_PARTIAL_ORDER */\n+#endif\n \n template <class _Alloc>\n inline bool operator==(const debug_alloc<_Alloc>&,\n@@ -983,6 +985,7 @@ struct _Alloc_traits<_Tp, __malloc_alloc_template<__inst> >\n   typedef __allocator<_Tp, __malloc_alloc_template<__inst> > allocator_type;\n };\n \n+#ifndef __USE_MALLOC\n template <class _Tp, bool __threads, int __inst>\n struct _Alloc_traits<_Tp, __default_alloc_template<__threads, __inst> >\n {\n@@ -992,6 +995,7 @@ struct _Alloc_traits<_Tp, __default_alloc_template<__threads, __inst> >\n   typedef __allocator<_Tp, __default_alloc_template<__threads, __inst> >\n           allocator_type;\n };\n+#endif\n \n template <class _Tp, class _Alloc>\n struct _Alloc_traits<_Tp, debug_alloc<_Alloc> >\n@@ -1013,6 +1017,7 @@ struct _Alloc_traits<_Tp,\n   typedef __allocator<_Tp, __malloc_alloc_template<__inst> > allocator_type;\n };\n \n+#ifndef __USE_MALLOC\n template <class _Tp, class _Tp1, bool __thr, int __inst>\n struct _Alloc_traits<_Tp,\n                       __allocator<_Tp1,\n@@ -1024,6 +1029,7 @@ struct _Alloc_traits<_Tp,\n   typedef __allocator<_Tp, __default_alloc_template<__thr,__inst> >\n           allocator_type;\n };\n+#endif\n \n template <class _Tp, class _Tp1, class _Alloc>\n struct _Alloc_traits<_Tp, __allocator<_Tp1, debug_alloc<_Alloc> > >"}, {"sha": "2a221fbaee9866fcfda74670c7e11269129ffd97", "filename": "libstdc++/stlinst.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2370ed1f5694dc342393d111ee975db78b3eb252/libstdc%2B%2B%2Fstlinst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2370ed1f5694dc342393d111ee975db78b3eb252/libstdc%2B%2B%2Fstlinst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstlinst.cc?ref=2370ed1f5694dc342393d111ee975db78b3eb252", "patch": "@@ -3,6 +3,8 @@\n \n #include <alloc.h>\n \n+#ifndef __USE_MALLOC\n template class __default_alloc_template<__NODE_ALLOCATOR_THREADS, 0>;\n+#endif\n \n template class  __malloc_alloc_template<0>;"}]}