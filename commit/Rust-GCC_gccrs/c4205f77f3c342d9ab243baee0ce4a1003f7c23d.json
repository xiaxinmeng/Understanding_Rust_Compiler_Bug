{"sha": "c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyMDVmNzdmM2MzNDJkOWFiMjQzYmFlZTBjZTRhMTAwM2Y3YzIzZA==", "commit": {"author": {"name": "Frank Everdij", "email": "f.p.x.everdij@tudelft.nl", "date": "2009-12-26T04:59:25Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2009-12-26T04:59:25Z"}, "message": "IRIX support\n\nFrom-SVN: r155470", "tree": {"sha": "bdb1509b9afa7e4407e279f35b11ca4940a86ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdb1509b9afa7e4407e279f35b11ca4940a86ac1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/comments", "author": {"login": "frankeverdij", "id": 19719049, "node_id": "MDQ6VXNlcjE5NzE5MDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/19719049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankeverdij", "html_url": "https://github.com/frankeverdij", "followers_url": "https://api.github.com/users/frankeverdij/followers", "following_url": "https://api.github.com/users/frankeverdij/following{/other_user}", "gists_url": "https://api.github.com/users/frankeverdij/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankeverdij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankeverdij/subscriptions", "organizations_url": "https://api.github.com/users/frankeverdij/orgs", "repos_url": "https://api.github.com/users/frankeverdij/repos", "events_url": "https://api.github.com/users/frankeverdij/events{/privacy}", "received_events_url": "https://api.github.com/users/frankeverdij/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "124f60ab29f46aefdf892a4fcf981e4e292eb08c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124f60ab29f46aefdf892a4fcf981e4e292eb08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124f60ab29f46aefdf892a4fcf981e4e292eb08c"}], "stats": {"total": 71, "additions": 61, "deletions": 10}, "files": [{"sha": "7e18f65cf37e563cfc88f4fe7b476e61ad7ad659", "filename": "libffi/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "patch": "@@ -1,3 +1,19 @@\n+2009-12-25  Frank Everdij <f.p.x.everdij@tudelft.nl>\n+\n+\t* include/ffi.h.in: Placed '__GNUC__' ifdef around\n+\t'__attribute__((aligned(8)))' in ffi_closure, fixes compile for\n+\tIRIX MIPSPro c99.\n+\t* include/ffi_common.h: Added '__sgi' define to non\n+\t'__attribute__((__mode__()))' integer typedefs.\n+        * src/mips/ffi.c (ffi_call, ffi_closure_mips_inner_O32,\n+\tffi_closure_mips_inner_N32): Added 'defined(_MIPSEB)' to BE check.\n+\t(ffi_closure_mips_inner_O32, ffi_closure_mips_inner_N32): Added\n+\tFFI_LONGDOUBLE support and alignment(N32 only).\n+\t* src/mips/ffitarget.h: Corrected '#include <sgidefs.h>' for IRIX and\n+\tfixed non '__attribute__((__mode__()))' integer typedefs.\n+\t* src/mips/n32.S: Put '#ifdef linux' around '.abicalls' and '.eh_frame'\n+\tsince they are Linux/GNU Assembler specific.\n+\n 2009-12-25  Bradley Smith  <brad@brad-smith.co.uk>\n \n \t* configure.ac, Makefile.am, src/avr32/ffi.c,"}, {"sha": "32f610323b4d870291ca0ba7649e6786492d8aef", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "patch": "@@ -256,7 +256,11 @@ typedef struct {\n   ffi_cif   *cif;\n   void     (*fun)(ffi_cif*,void*,void**,void*);\n   void      *user_data;\n+#ifdef __GNUC__\n } ffi_closure __attribute__((aligned (8)));\n+#else\n+} ffi_closure;\n+#endif\n \n void *ffi_closure_alloc (size_t size, void **code);\n void ffi_closure_free (void *);"}, {"sha": "42cace915022092029207d422e22d5504dfc6871", "filename": "libffi/include/ffi_common.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Finclude%2Fffi_common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Finclude%2Fffi_common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi_common.h?ref=c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "patch": "@@ -84,15 +84,21 @@ typedef struct\n } extended_cif;\n \n /* Terse sized type definitions.  */\n-#ifdef _MSC_VER\n+#if defined(_MSC_VER) || defined(__sgi)\n typedef unsigned char UINT8;\n typedef signed char   SINT8;\n typedef unsigned short UINT16;\n typedef signed short   SINT16;\n typedef unsigned int UINT32;\n typedef signed int   SINT32;\n+# ifdef _MSC_VER\n typedef unsigned __int64 UINT64;\n typedef signed __int64   SINT64;\n+# else\n+# include <inttypes.h>\n+typedef uint64_t UINT64;\n+typedef int64_t  SINT64;\n+# endif\n #else\n typedef unsigned int UINT8  __attribute__((__mode__(__QI__)));\n typedef signed int   SINT8  __attribute__((__mode__(__QI__)));"}, {"sha": "d714cc9e998ae4c9bedce493605a999fefc2cd94", "filename": "libffi/src/mips/ffi.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Fsrc%2Fmips%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Fsrc%2Fmips%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffi.c?ref=c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "patch": "@@ -625,7 +625,7 @@ void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n \t  {\n \t    rvalue_copy = alloca (8);\n \t    copy_rvalue = 1;\n-#ifdef __MIPSEB__\n+#if defined(__MIPSEB__) || defined(_MIPSEB)\n \t    copy_offset = 4;\n #endif\n \t  }\n@@ -772,9 +772,10 @@ ffi_closure_mips_inner_O32 (ffi_closure *closure,\n     {\n       if (i < 2 && !seen_int &&\n \t  (arg_types[i]->type == FFI_TYPE_FLOAT ||\n-\t   arg_types[i]->type == FFI_TYPE_DOUBLE))\n+\t   arg_types[i]->type == FFI_TYPE_DOUBLE ||\n+\t   arg_types[i]->type == FFI_TYPE_LONGDOUBLE))\n \t{\n-#ifdef __MIPSEB__\n+#if defined(__MIPSEB__) || defined(_MIPSEB)\n \t  if (arg_types[i]->type == FFI_TYPE_FLOAT)\n \t    avaluep[i] = ((char *) &fpr[i]) + sizeof (float);\n \t  else\n@@ -931,10 +932,16 @@ ffi_closure_mips_inner_N32 (ffi_closure *closure,\n   while (i < avn)\n     {\n       if (arg_types[i]->type == FFI_TYPE_FLOAT\n-\t  || arg_types[i]->type == FFI_TYPE_DOUBLE)\n+\t  || arg_types[i]->type == FFI_TYPE_DOUBLE\n+\t  || arg_types[i]->type == FFI_TYPE_LONGDOUBLE)\n         {\n           argp = (argn >= 8 || soft_float) ? ar + argn : fpr + argn;\n-#ifdef __MIPSEB__\n+          if ((arg_types[i]->type == FFI_TYPE_LONGDOUBLE) && ((unsigned)argp & (arg_types[i]->alignment-1)))\n+            {\n+              argp=(ffi_arg*)ALIGN(argp,arg_types[i]->alignment);\n+              argn++;\n+            }\n+#if defined(__MIPSEB__) || defined(_MIPSEB)\n           if (arg_types[i]->type == FFI_TYPE_FLOAT && argn < 8)\n             avaluep[i] = ((char *) argp) + sizeof (float);\n           else"}, {"sha": "c5f4e0568416434f9246d69f0332b5acce2856ee", "filename": "libffi/src/mips/ffitarget.h", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Fsrc%2Fmips%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Fsrc%2Fmips%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffitarget.h?ref=c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "patch": "@@ -28,7 +28,10 @@\n #define LIBFFI_TARGET_H\n \n #ifdef linux\n-#include <asm/sgidefs.h>\n+# include <asm/sgidefs.h>\n+#else\n+# include <sgidefs.h>\n+#endif\n #  ifndef _ABIN32\n #    define _ABIN32 _MIPS_SIM_NABI32\n #  endif\n@@ -38,7 +41,6 @@\n #  ifndef _ABIO32\n #    define _ABIO32 _MIPS_SIM_ABI32\n #  endif\n-#endif\n \n #if !defined(_MIPS_SIM)\n -- something is very wrong --\n@@ -154,15 +156,27 @@\n # endif /* _MIPS_SIM==_ABI64 */\n #endif /* !FFI_MIPS_O32 */\n #else /* !LIBFFI_ASM */\n-#ifdef FFI_MIPS_O32\n+# ifdef __GNUC__\n+#  ifdef FFI_MIPS_O32\n /* O32 stack frames have 32bit integer args */\n typedef unsigned int     ffi_arg __attribute__((__mode__(__SI__)));\n typedef signed   int     ffi_sarg __attribute__((__mode__(__SI__)));\n #else\n /* N32 and N64 frames have 64bit integer args */\n typedef unsigned int     ffi_arg __attribute__((__mode__(__DI__)));\n typedef signed   int     ffi_sarg __attribute__((__mode__(__DI__)));\n-#endif\n+#  endif\n+# else\n+#  ifdef FFI_MIPS_O32\n+/* O32 stack frames have 32bit integer args */\n+typedef __uint32_t ffi_arg;\n+typedef __int32_t ffi_sarg;\n+#  else\n+/* N32 and N64 frames have 64bit integer args */\n+typedef __uint64_t ffi_arg;\n+typedef __int64_t ffi_sarg;\n+#  endif\n+# endif /* __GNUC__ */\n \n typedef enum ffi_abi {\n   FFI_FIRST_ABI = 0,"}, {"sha": "81e81bcb4e965d8517509a8bdcb605791cdf0e9c", "filename": "libffi/src/mips/n32.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Fsrc%2Fmips%2Fn32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4205f77f3c342d9ab243baee0ce4a1003f7c23d/libffi%2Fsrc%2Fmips%2Fn32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fn32.S?ref=c4205f77f3c342d9ab243baee0ce4a1003f7c23d", "patch": "@@ -40,7 +40,9 @@\n \n #define SIZEOF_FRAME\t( 8 * FFI_SIZEOF_ARG )\n \n+#ifdef linux\n \t.abicalls\n+#endif\n \t.text\n \t.align\t2\n \t.globl\tffi_call_N32\n@@ -527,6 +529,7 @@ cls_epilogue:\n .LFE2:\t\n \t.end\tffi_closure_N32\n \n+#ifdef linux\n         .section        .eh_frame,\"aw\",@progbits\n .Lframe1:\n         .4byte  .LECIE1-.LSCIE1\t\t# length\n@@ -583,5 +586,6 @@ cls_epilogue:\n \t.uleb128 (SIZEOF_FRAME2 - RA_OFF2)/4\n \t.align\tEH_FRAME_ALIGN\n .LEFDE3:\n+#endif /* linux */\t\n \t\n #endif"}]}