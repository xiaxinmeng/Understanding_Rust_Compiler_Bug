{"sha": "9bf714c23f5dd6d340571d090f2b22d7f67a9503", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJmNzE0YzIzZjVkZDZkMzQwNTcxZDA5MGYyYjIyZDdmNjdhOTUwMw==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gmail.com", "date": "2012-09-17T13:02:39Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "2012-09-17T13:02:39Z"}, "message": "configure.ac: Substitute CPU_OPT_EXT_RANDOM.\n\n\n\t* configure.ac: Substitute CPU_OPT_EXT_RANDOM.\n\t* configure.host: Define cpu_opt_ext_random to location of the\n\toptimized version of <ext/random>.\n\t* include/Makefile.am (ext_headers): Add ${ext_host_headers}.\n\t(ext_host_headers): Define.\n\t* include/ext/random (simd_fast_mersenne_twister_engine<>\n\t::operator==): Don't define function here.\n\t* include/ext/random.tcc (simd_fast_mersenne_twister_engine): Don't\n\tdefine code using SSE2 here.  Define generic code only if\n\t_GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ is not defined.\n\t(simd_fast_mersenne_twister_engine<>\n\t::operator==): Define here if\n\t_GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL is not defined.\n\t* config/cpu/generic/opt/ext/opt_random.h: New file.\n\t* config/cpu/i486/opt/ext/opt_random.h: New file.\n\t* libsupc++/Makefile.in: Regenerated.\n\t* testsuite/Makefile.in: Regenerated.\n\t* po/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\n\t* doc/Makefile.in: Regenerated.\n\t* aclocal.m4: Regenerated.\n\t* python/Makefile.in: Regenerated.\n\t* include/Makefile.in: Regenerated.\n\t* src/c++98/Makefile.in: Regenerated.\n\t* src/c++11/Makefile.in: Regenerated.\n\t* src/Makefile.in: Regenerated.\n\nFrom-SVN: r191384", "tree": {"sha": "d7dd8518a53243c3c4a4c33acac065a0342f9e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7dd8518a53243c3c4a4c33acac065a0342f9e72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bf714c23f5dd6d340571d090f2b22d7f67a9503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf714c23f5dd6d340571d090f2b22d7f67a9503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf714c23f5dd6d340571d090f2b22d7f67a9503", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf714c23f5dd6d340571d090f2b22d7f67a9503/comments", "author": {"login": "drepper", "id": 2918631, "node_id": "MDQ6VXNlcjI5MTg2MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2918631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drepper", "html_url": "https://github.com/drepper", "followers_url": "https://api.github.com/users/drepper/followers", "following_url": "https://api.github.com/users/drepper/following{/other_user}", "gists_url": "https://api.github.com/users/drepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/drepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drepper/subscriptions", "organizations_url": "https://api.github.com/users/drepper/orgs", "repos_url": "https://api.github.com/users/drepper/repos", "events_url": "https://api.github.com/users/drepper/events{/privacy}", "received_events_url": "https://api.github.com/users/drepper/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4a76e5242236301f4713efae30642fb39e5d0eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a76e5242236301f4713efae30642fb39e5d0eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4a76e5242236301f4713efae30642fb39e5d0eb"}], "stats": {"total": 699, "additions": 493, "deletions": 206}, "files": [{"sha": "f56df9aebc1858926b9b0cf1b13d1bd50dd50309", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,3 +1,33 @@\n+2012-09-17  Ulrich Drepper  <drepper@gmail.com>\n+\n+\t* configure.ac: Substitute CPU_OPT_EXT_RANDOM.\n+\t* configure.host: Define cpu_opt_ext_random to location of the\n+\toptimized version of <ext/random>.\n+\t* include/Makefile.am (ext_headers): Add ${ext_host_headers}.\n+\t(ext_host_headers): Define.\n+\t* include/ext/random (simd_fast_mersenne_twister_engine<>\n+\t::operator==): Don't define function here.\n+\t* include/ext/random.tcc (simd_fast_mersenne_twister_engine): Don't\n+\tdefine code using SSE2 here.  Define generic code only if\n+\t_GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ is not defined.\n+\t(simd_fast_mersenne_twister_engine<>\n+\t::operator==): Define here if\n+\t_GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL is not defined.\n+\t* config/cpu/generic/opt/ext/opt_random.h: New file.\n+\t* config/cpu/i486/opt/ext/opt_random.h: New file.\n+\t* libsupc++/Makefile.in: Regenerated.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* po/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* doc/Makefile.in: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\t* python/Makefile.in: Regenerated.\n+\t* include/Makefile.in: Regenerated.\n+\t* src/c++98/Makefile.in: Regenerated.\n+\t* src/c++11/Makefile.in: Regenerated.\n+\t* src/Makefile.in: Regenerated.\n+\n 2012-09-16  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* include/ext/random.tcc (__gnu_cxx::rice_distribution<>"}, {"sha": "fce27821687cb7b79d7968be14b1e0f81d545d52", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -125,6 +125,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -382,7 +383,7 @@ all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n \n .SUFFIXES:\n-am--refresh:\n+am--refresh: Makefile\n \t@:\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)\n \t@for dep in $?; do \\\n@@ -407,6 +408,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n@@ -418,10 +420,8 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n $(am__aclocal_m4_deps):\n \n config.h: stamp-h1\n-\t@if test ! -f $@; then \\\n-\t  rm -f stamp-h1; \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \\\n-\telse :; fi\n+\t@if test ! -f $@; then rm -f stamp-h1; else :; fi\n+\t@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi\n \n stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n \t@rm -f stamp-h1\n@@ -580,10 +580,15 @@ install-am: all-am\n \n installcheck: installcheck-recursive\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "8a0ec9e3886c330b3b3a735cd88b24e62fe546d2", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 39, "deletions": 23, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,7 +1,8 @@\n-# generated automatically by aclocal 1.11.1 -*- Autoconf -*-\n+# generated automatically by aclocal 1.11.3 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-# 2005, 2006, 2007, 2008, 2009  Free Software Foundation, Inc.\n+# 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation,\n+# Inc.\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -19,12 +20,15 @@ You have another version of autoconf.  It may work, but is not guaranteed to.\n If you have problems, you may need to regenerate the build system entirely.\n To do so, use the procedure documented by the package, typically `autoreconf'.])])\n \n-# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.\n+# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008, 2011 Free Software\n+# Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n+# serial 1\n+\n # AM_AUTOMAKE_VERSION(VERSION)\n # ----------------------------\n # Automake X.Y traces this macro to ensure aclocal.m4 has been\n@@ -34,7 +38,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION],\n [am__api_version='1.11'\n dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to\n dnl require some minimum version.  Point them to the right macro.\n-m4_if([$1], [1.11.1], [],\n+m4_if([$1], [1.11.3], [],\n       [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl\n ])\n \n@@ -50,19 +54,21 @@ m4_define([_AM_AUTOCONF_VERSION], [])\n # Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.\n # This function is AC_REQUIREd by AM_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-[AM_AUTOMAKE_VERSION([1.11.1])dnl\n+[AM_AUTOMAKE_VERSION([1.11.3])dnl\n m4_ifndef([AC_AUTOCONF_VERSION],\n   [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n _AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])\n \n # AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n \n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2003, 2005, 2011 Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n+# serial 1\n+\n # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n # `$srcdir', `$srcdir/..', or `$srcdir/../..'.\n@@ -283,12 +289,15 @@ for _am_header in $config_headers :; do\n done\n echo \"timestamp for $_am_arg\" >`AS_DIRNAME([\"$_am_arg\"])`/stamp-h[]$_am_stamp_count])\n \n-# Copyright (C) 2001, 2003, 2005, 2008  Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2003, 2005, 2008, 2011 Free Software Foundation,\n+# Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n+# serial 1\n+\n # AM_PROG_INSTALL_SH\n # ------------------\n # Define $install_sh.\n@@ -307,8 +316,8 @@ AC_SUBST(install_sh)])\n # Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n # From Jim Meyering\n \n-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008\n-# Free Software Foundation, Inc.\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008,\n+# 2011 Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n@@ -328,7 +337,7 @@ AC_DEFUN([AM_MAINTAINER_MODE],\n        [disable], [m4_define([am_maintainer_other], [enable])],\n        [m4_define([am_maintainer_other], [enable])\n         m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\n-AC_MSG_CHECKING([whether to am_maintainer_other maintainer-specific portions of Makefiles])\n+AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n   dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n   AC_ARG_ENABLE([maintainer-mode],\n [  --][am_maintainer_other][-maintainer-mode  am_maintainer_other make rules and dependencies not useful\n@@ -387,12 +396,15 @@ else\n fi\n ])\n \n-# Copyright (C) 2003, 2004, 2005, 2006  Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2004, 2005, 2006, 2011 Free Software Foundation,\n+# Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n+# serial 1\n+\n # AM_PROG_MKDIR_P\n # ---------------\n # Check for `mkdir -p'.\n@@ -415,27 +427,28 @@ esac\n \n # Helper functions for option handling.                     -*- Autoconf -*-\n \n-# Copyright (C) 2001, 2002, 2003, 2005, 2008  Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2002, 2003, 2005, 2008, 2010 Free Software\n+# Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 4\n+# serial 5\n \n # _AM_MANGLE_OPTION(NAME)\n # -----------------------\n AC_DEFUN([_AM_MANGLE_OPTION],\n [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n \n # _AM_SET_OPTION(NAME)\n-# ------------------------------\n+# --------------------\n # Set option NAME.  Presently that only means defining a flag for this option.\n AC_DEFUN([_AM_SET_OPTION],\n [m4_define(_AM_MANGLE_OPTION([$1]), 1)])\n \n # _AM_SET_OPTIONS(OPTIONS)\n-# ----------------------------------\n+# ------------------------\n # OPTIONS is a space-separated list of Automake options.\n AC_DEFUN([_AM_SET_OPTIONS],\n [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n@@ -511,12 +524,14 @@ Check your system clock])\n fi\n AC_MSG_RESULT(yes)])\n \n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2003, 2005, 2011 Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n+# serial 1\n+\n # AM_PROG_INSTALL_STRIP\n # ---------------------\n # One issue with vendor `install' (even GNU) is that you can't\n@@ -539,13 +554,13 @@ fi\n INSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\n AC_SUBST([INSTALL_STRIP_PROGRAM])])\n \n-# Copyright (C) 2006, 2008  Free Software Foundation, Inc.\n+# Copyright (C) 2006, 2008, 2010 Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 2\n+# serial 3\n \n # _AM_SUBST_NOTMAKE(VARIABLE)\n # ---------------------------\n@@ -554,13 +569,13 @@ AC_SUBST([INSTALL_STRIP_PROGRAM])])\n AC_DEFUN([_AM_SUBST_NOTMAKE])\n \n # AM_SUBST_NOTMAKE(VARIABLE)\n-# ---------------------------\n+# --------------------------\n # Public sister of _AM_SUBST_NOTMAKE.\n AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n \n # Check how to create a tarball.                            -*- Autoconf -*-\n \n-# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005, 2012 Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n@@ -582,10 +597,11 @@ AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n # a tarball read from stdin.\n #     $(am__untar) < result.tar\n AC_DEFUN([_AM_PROG_TAR],\n-[# Always define AMTAR for backward compatibility.\n-AM_MISSING_PROG([AMTAR], [tar])\n+[# Always define AMTAR for backward compatibility.  Yes, it's still used\n+# in the wild :-(  We should find a proper way to deprecate it ...\n+AC_SUBST([AMTAR], ['$${TAR-tar}'])\n m4_if([$1], [v7],\n-     [am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'],\n+     [am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'],\n      [m4_case([$1], [ustar],, [pax],,\n               [m4_fatal([Unknown tar format])])\n AC_MSG_CHECKING([how to create a $1 tar archive])"}, {"sha": "cc64f18a50eb505b2053f7d2953312f162fe2e45", "filename": "libstdc++-v3/config/cpu/generic/opt/ext/opt_random.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fopt%2Fext%2Fopt_random.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fopt%2Fext%2Fopt_random.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fopt%2Fext%2Fopt_random.h?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -0,0 +1,38 @@\n+// Optimizations for random number extensions, generic version -*- C++ -*-\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file ext/random.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{ext/random}\n+ */\n+\n+#ifndef _EXT_OPT_RANDOM_H\n+#define _EXT_OPT_RANDOM_H 1\n+\n+#pragma GCC system_header\n+\n+\n+\n+\n+#endif // _EXT_OPT_RANDOM_H"}, {"sha": "cd06f3f342d86eccd0038ae801e25513d51699b0", "filename": "libstdc++-v3/config/cpu/i486/opt/ext/opt_random.h", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fopt%2Fext%2Fopt_random.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fopt%2Fext%2Fopt_random.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fopt%2Fext%2Fopt_random.h?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -0,0 +1,134 @@\n+// Optimizations for random number extensions, x86 version -*- C++ -*-\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file ext/random.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{ext/random}\n+ */\n+\n+#ifndef _EXT_OPT_RANDOM_H\n+#define _EXT_OPT_RANDOM_H 1\n+\n+#pragma GCC system_header\n+\n+\n+namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  namespace {\n+\n+    template<size_t __sl1, size_t __sl2, size_t __sr1, size_t __sr2,\n+\t     uint32_t __msk1, uint32_t __msk2, uint32_t __msk3, uint32_t __msk4>\n+      inline __m128i __sse2_recursion(__m128i __a, __m128i __b,\n+\t\t\t\t      __m128i __c, __m128i __d)\n+      {\n+\t__m128i __y = _mm_srli_epi32(__b, __sr1);\n+\t__m128i __z = _mm_srli_si128(__c, __sr2);\n+\t__m128i __v = _mm_slli_epi32(__d, __sl1);\n+\t__z = _mm_xor_si128(__z, __a);\n+\t__z = _mm_xor_si128(__z, __v);\n+\t__m128i __x = _mm_slli_si128(__a, __sl2);\n+\t__y = _mm_and_si128(__y, _mm_set_epi32(__msk4, __msk3, __msk2, __msk1));\n+\t__z = _mm_xor_si128(__z, __x);\n+\treturn _mm_xor_si128(__z, __y);\n+      }\n+\n+  }\n+\n+\n+#define _GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ\t1\n+  template<typename _UIntType, size_t __m,\n+\t   size_t __pos1, size_t __sl1, size_t __sl2,\n+\t   size_t __sr1, size_t __sr2,\n+\t   uint32_t __msk1, uint32_t __msk2,\n+\t   uint32_t __msk3, uint32_t __msk4,\n+\t   uint32_t __parity1, uint32_t __parity2,\n+\t   uint32_t __parity3, uint32_t __parity4>\n+    void simd_fast_mersenne_twister_engine<_UIntType, __m,\n+\t\t\t\t\t   __pos1, __sl1, __sl2, __sr1, __sr2,\n+\t\t\t\t\t   __msk1, __msk2, __msk3, __msk4,\n+\t\t\t\t\t   __parity1, __parity2, __parity3,\n+\t\t\t\t\t   __parity4>::\n+    _M_gen_rand(void)\n+    {\n+      __m128i __r1 = _mm_load_si128(&_M_state[_M_nstate - 2]);\n+      __m128i __r2 = _mm_load_si128(&_M_state[_M_nstate - 1]);\n+\n+      size_t __i;\n+      for (__i = 0; __i < _M_nstate - __pos1; ++__i)\n+\t{\n+\t  __m128i __r = __sse2_recursion<__sl1, __sl2, __sr1, __sr2,\n+\t\t\t\t\t __msk1, __msk2, __msk3, __msk4>\n+\t    (_M_state[__i], _M_state[__i + __pos1], __r1, __r2);\n+\t  _mm_store_si128(&_M_state[__i], __r);\n+\t  __r1 = __r2;\n+\t  __r2 = __r;\n+\t}\n+      for (; __i < _M_nstate; ++__i)\n+\t{\n+\t  __m128i __r = __sse2_recursion<__sl1, __sl2, __sr1, __sr2,\n+\t\t\t\t\t __msk1, __msk2, __msk3, __msk4>\n+\t    (_M_state[__i], _M_state[__i + __pos1 - _M_nstate], __r1, __r2);\n+\t  _mm_store_si128(&_M_state[__i], __r);\n+\t  __r1 = __r2;\n+\t  __r2 = __r;\n+\t}\n+\n+      _M_pos = 0;\n+    }\n+\n+\n+#define _GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL\t1\n+  template<typename _UIntType, size_t __m,\n+\t   size_t __pos1, size_t __sl1, size_t __sl2,\n+\t   size_t __sr1, size_t __sr2,\n+\t   uint32_t __msk1, uint32_t __msk2,\n+\t   uint32_t __msk3, uint32_t __msk4,\n+\t   uint32_t __parity1, uint32_t __parity2,\n+\t   uint32_t __parity3, uint32_t __parity4>\n+    bool\n+    operator==(const __gnu_cxx::simd_fast_mersenne_twister_engine<_UIntType,\n+\t       __m, __pos1, __sl1, __sl2, __sr1, __sr2,\n+\t       __msk1, __msk2, __msk3, __msk4,\n+\t       __parity1, __parity2, __parity3, __parity4>& __lhs,\n+\t       const __gnu_cxx::simd_fast_mersenne_twister_engine<_UIntType,\n+\t       __m, __pos1, __sl1, __sl2, __sr1, __sr2,\n+\t       __msk1, __msk2, __msk3, __msk4,\n+\t       __parity1, __parity2, __parity3, __parity4>& __rhs)\n+    {\n+      __m128i __res = _mm_cmpeq_epi8(__lhs._M_state[0], __rhs._M_state[0]);\n+      for (size_t __i = 1; __i < __lhs._M_nstate; ++__i)\n+\t__res = _mm_and_si128(__res, _mm_cmpeq_epi8(__lhs._M_state[__i],\n+\t\t\t\t\t\t    __rhs._M_state[__i]));\n+      return (_mm_movemask_epi8(__res) == 0xffff\n+\t      && __lhs._M_pos == __rhs._M_pos);\n+    }\n+\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace\n+\n+\n+#endif // _EXT_OPT_RANDOM_H"}, {"sha": "1f50a1ca12192c3576c700d36575f4e74b98a767", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -611,6 +611,7 @@ glibcxx_toolexeclibdir\n glibcxx_toolexecdir\n gxx_include_dir\n glibcxx_prefixdir\n+CPU_OPT_EXT_RANDOM\n ERROR_CONSTANTS_SRCDIR\n OS_INC_SRCDIR\n ABI_TWEAKS_SRCDIR\n@@ -3527,11 +3528,11 @@ MAKEINFO=${MAKEINFO-\"${am_missing_run}makeinfo\"}\n \n # We need awk for the \"check\" target.  The system \"awk\" is bad on\n # some platforms.\n-# Always define AMTAR for backward compatibility.\n+# Always define AMTAR for backward compatibility.  Yes, it's still used\n+# in the wild :-(  We should find a proper way to deprecate it ...\n+AMTAR='$${TAR-tar}'\n \n-AMTAR=${AMTAR-\"${am_missing_run}tar\"}\n-\n-am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'\n+am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'\n \n \n \n@@ -11509,7 +11510,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11512 \"configure\"\n+#line 11513 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11615,7 +11616,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11618 \"configure\"\n+#line 11619 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14997,7 +14998,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 15000 \"configure\"\n+#line 15001 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15332,7 +15333,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15335 \"configure\"\n+#line 15336 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15367,7 +15368,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15370 \"configure\"\n+#line 15371 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15402,7 +15403,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15405 \"configure\"\n+#line 15406 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15438,7 +15439,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15441 \"configure\"\n+#line 15442 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15517,7 +15518,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15520 \"configure\"\n+#line 15521 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15559,7 +15560,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15562 \"configure\"\n+#line 15563 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15593,7 +15594,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15596 \"configure\"\n+#line 15597 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -71606,6 +71607,8 @@ CPU_DEFINES_SRCDIR=config/${cpu_defines_dir}\n OS_INC_SRCDIR=config/${os_include_dir}\n ERROR_CONSTANTS_SRCDIR=config/${error_constants_dir}\n ABI_TWEAKS_SRCDIR=config/${abi_tweaks_dir}\n+CPU_OPT_EXT_RANDOM=config/${cpu_opt_ext_random}\n+\n \n \n "}, {"sha": "3943669a7eb23f327c64d9ea03add3a840484cc8", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -399,13 +399,15 @@ CPU_DEFINES_SRCDIR=config/${cpu_defines_dir}\n OS_INC_SRCDIR=config/${os_include_dir}\n ERROR_CONSTANTS_SRCDIR=config/${error_constants_dir}\n ABI_TWEAKS_SRCDIR=config/${abi_tweaks_dir}\n+CPU_OPT_EXT_RANDOM=config/${cpu_opt_ext_random}\n AC_SUBST(ATOMICITY_SRCDIR)\n AC_SUBST(ATOMIC_WORD_SRCDIR)\n AC_SUBST(ATOMIC_FLAGS)\n AC_SUBST(CPU_DEFINES_SRCDIR)\n AC_SUBST(ABI_TWEAKS_SRCDIR)\n AC_SUBST(OS_INC_SRCDIR)\n AC_SUBST(ERROR_CONSTANTS_SRCDIR)\n+AC_SUBST(CPU_OPT_EXT_RANDOM)\n \n \n # Determine cross-compile flags and AM_CONDITIONALs."}, {"sha": "8b7aae7155bba853cc54b326b0c112deab408f5e", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -50,6 +50,8 @@\n #   cpu_defines_dir        location of cpu_defines.h\n #                          defaults to generic.\n #\n+#   cpu_opt_ext_random     path name of random.h containing CPU-specific\n+#                          optimizations\n #\n #   error_constants_dir    location of error_constants.h\n #                          defaults to os/generic.\n@@ -183,6 +185,18 @@ if test -f ${glibcxx_srcdir}/config/${cpu_include_dir}/cxxabi_tweaks.h ; then\n fi\n \n \n+# Set directory with CPU-specific optimization\n+cpu_opt_dir=${cpu_include_dir}/opt\n+test -d ${glibcxx_srcdir}/config/${cpu_include_dir}/opt ||\n+cpu_opt_dir=cpu/generic/opt\n+# For each header with CPU-specific optimizations check whether it\n+# exists in ${cpu_opt_dir}.  If not, point the variable at the\n+# appropriate file in the generic directory.\n+cpu_opt_ext_random=${cpu_opt_dir}/ext/opt_random.h\n+test -f ${glibcxx_srcdir}/config/${cpu_opt_ext_random} ||\n+cpu_opt_ext_random=cpu/generic/opt/ext/opt_random.h\n+\n+\n # Set any OS-dependent bits.\n # Set the os_include_dir.\n # Set the error_costants_dir."}, {"sha": "d43657fd8d91523447218fa71e44dcc9de4f3df9", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -97,6 +97,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -589,6 +590,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -624,10 +626,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "00750045c4ae97526d90f01c2e98374e1787d465", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -533,12 +533,16 @@ ext_headers = \\\n \t${ext_srcdir}/vstring.tcc \\\n \t${ext_srcdir}/vstring_fwd.h \\\n \t${ext_srcdir}/vstring_util.h \\\n-\t${ext_compat_headers}\n+\t${ext_compat_headers} \\\n+\t${ext_host_headers}\n \n ext_compat_headers = \\\n \t${backward_srcdir}/hash_set \\\n \t${backward_srcdir}/hash_map\n \n+ext_host_headers = \\\n+\t${glibcxx_srcdir}/${CPU_OPT_EXT_RANDOM}\n+\n tr1_srcdir = ${glibcxx_srcdir}/include/tr1\n tr1_builddir = ./tr1\n tr1_headers = \\"}, {"sha": "f0d13653abb583bd41ea8041639afec640dd38fa", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -97,6 +97,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -785,12 +786,16 @@ ext_headers = \\\n \t${ext_srcdir}/vstring.tcc \\\n \t${ext_srcdir}/vstring_fwd.h \\\n \t${ext_srcdir}/vstring_util.h \\\n-\t${ext_compat_headers}\n+\t${ext_compat_headers} \\\n+\t${ext_host_headers}\n \n ext_compat_headers = \\\n \t${backward_srcdir}/hash_set \\\n \t${backward_srcdir}/hash_map\n \n+ext_host_headers = \\\n+\t${glibcxx_srcdir}/${CPU_OPT_EXT_RANDOM}\n+\n tr1_srcdir = ${glibcxx_srcdir}/include/tr1\n tr1_builddir = ./tr1\n tr1_headers = \\\n@@ -1178,6 +1183,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -1213,10 +1219,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "08b7f3ef8fbcf9f2d0589c90dcca95108ff13e77", "filename": "libstdc++-v3/include/ext/random", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -121,24 +121,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn _M_stateT[_M_pos++];\n       }\n \n-#ifdef __SSE2__\n-      friend bool\n-      operator==(const simd_fast_mersenne_twister_engine& __lhs,\n-\t\t const simd_fast_mersenne_twister_engine& __rhs)\n-      { __m128i __res = _mm_cmpeq_epi8(__lhs._M_state[0], __rhs._M_state[0]);\n-\tfor (size_t __i = 1; __i < __lhs._M_nstate; ++__i)\n-\t  __res = _mm_and_si128(__res, _mm_cmpeq_epi8(__lhs._M_state[__i],\n-\t\t\t\t\t\t      __rhs._M_state[__i]));\n-\treturn (_mm_movemask_epi8(__res) == 0xffff\n-\t\t&& __lhs._M_pos == __rhs._M_pos); }\n-#else\n-      friend bool\n-      operator==(const simd_fast_mersenne_twister_engine& __lhs,\n-\t\t const simd_fast_mersenne_twister_engine& __rhs)\n-      { return (std::equal(__lhs._M_stateT, __lhs._M_stateT + state_size,\n-\t\t\t   __rhs._M_stateT)\n-\t\t&& __lhs._M_pos == __rhs._M_pos); }\n-#endif\n+      template<typename _UIntType_2, size_t __m_2,\n+\t       size_t __pos1_2, size_t __sl1_2, size_t __sl2_2,\n+\t       size_t __sr1_2, size_t __sr2_2,\n+\t       uint32_t __msk1_2, uint32_t __msk2_2,\n+\t       uint32_t __msk3_2, uint32_t __msk4_2,\n+\t       uint32_t __parity1_2, uint32_t __parity2_2,\n+\t       uint32_t __parity3_2, uint32_t __parity4_2>\n+\tfriend bool\n+\toperator==(const simd_fast_mersenne_twister_engine<_UIntType_2,\n+\t\t   __m_2, __pos1_2, __sl1_2, __sl2_2, __sr1_2, __sr2_2,\n+\t\t   __msk1_2, __msk2_2, __msk3_2, __msk4_2,\n+\t\t   __parity1_2, __parity2_2, __parity3_2, __parity4_2>& __lhs,\n+\t\t   const simd_fast_mersenne_twister_engine<_UIntType_2,\n+\t\t   __m_2, __pos1_2, __sl1_2, __sl2_2, __sr1_2, __sr2_2,\n+\t\t   __msk1_2, __msk2_2, __msk3_2, __msk4_2,\n+\t\t   __parity1_2, __parity2_2, __parity3_2, __parity4_2>& __rhs);\n \n       template<typename _UIntType_2, size_t __m_2,\n \t       size_t __pos1_2, size_t __sl1_2, size_t __sl2_2,\n@@ -1142,8 +1140,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return !(__d1 == __d2); }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace std\n+} // namespace __gnu_cxx\n \n+#include \"opt_random.h\"\n #include \"random.tcc\"\n \n #endif /* _EXT_RANDOM */"}, {"sha": "eca8772f7676bcfb391afe044c2abc823013719c", "filename": "libstdc++-v3/include/ext/random.tcc", "status": "modified", "additions": 24, "deletions": 65, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -202,71 +202,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n \n-#ifdef  __SSE2__\n-\n-  namespace {\n-\n-    template<size_t __sl1, size_t __sl2, size_t __sr1, size_t __sr2,\n-\t     uint32_t __msk1, uint32_t __msk2, uint32_t __msk3, uint32_t __msk4>\n-      inline __m128i __sse2_recursion(__m128i __a, __m128i __b,\n-\t\t\t\t      __m128i __c, __m128i __d)\n-      {\n-\t__m128i __y = _mm_srli_epi32(__b, __sr1);\n-\t__m128i __z = _mm_srli_si128(__c, __sr2);\n-\t__m128i __v = _mm_slli_epi32(__d, __sl1);\n-\t__z = _mm_xor_si128(__z, __a);\n-\t__z = _mm_xor_si128(__z, __v);\n-\t__m128i __x = _mm_slli_si128(__a, __sl2);\n-\t__y = _mm_and_si128(__y, _mm_set_epi32(__msk4, __msk3, __msk2, __msk1));\n-\t__z = _mm_xor_si128(__z, __x);\n-\treturn _mm_xor_si128(__z, __y);\n-      }\n-\n-  }\n-\n-\n-  template<typename _UIntType, size_t __m,\n-\t   size_t __pos1, size_t __sl1, size_t __sl2,\n-\t   size_t __sr1, size_t __sr2,\n-\t   uint32_t __msk1, uint32_t __msk2,\n-\t   uint32_t __msk3, uint32_t __msk4,\n-\t   uint32_t __parity1, uint32_t __parity2,\n-\t   uint32_t __parity3, uint32_t __parity4>\n-    void simd_fast_mersenne_twister_engine<_UIntType, __m,\n-\t\t\t\t\t   __pos1, __sl1, __sl2, __sr1, __sr2,\n-\t\t\t\t\t   __msk1, __msk2, __msk3, __msk4,\n-\t\t\t\t\t   __parity1, __parity2, __parity3,\n-\t\t\t\t\t   __parity4>::\n-    _M_gen_rand(void)\n-    {\n-      __m128i __r1 = _mm_load_si128(&_M_state[_M_nstate - 2]);\n-      __m128i __r2 = _mm_load_si128(&_M_state[_M_nstate - 1]);\n-\n-      size_t __i;\n-      for (__i = 0; __i < _M_nstate - __pos1; ++__i)\n-\t{\n-\t  __m128i __r = __sse2_recursion<__sl1, __sl2, __sr1, __sr2,\n-\t\t\t\t\t __msk1, __msk2, __msk3, __msk4>\n-\t    (_M_state[__i], _M_state[__i + __pos1], __r1, __r2);\n-\t  _mm_store_si128(&_M_state[__i], __r);\n-\t  __r1 = __r2;\n-\t  __r2 = __r;\n-\t}\n-      for (; __i < _M_nstate; ++__i)\n-\t{\n-\t  __m128i __r = __sse2_recursion<__sl1, __sl2, __sr1, __sr2,\n-\t\t\t\t\t __msk1, __msk2, __msk3, __msk4>\n-\t    (_M_state[__i], _M_state[__i + __pos1 - _M_nstate], __r1, __r2);\n-\t  _mm_store_si128(&_M_state[__i], __r);\n-\t  __r1 = __r2;\n-\t  __r2 = __r;\n-\t}\n-\n-      _M_pos = 0;\n-    }\n-\n-\n-#else\n+#ifndef  _GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ\n \n   namespace {\n \n@@ -374,6 +310,29 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #endif\n \n+#ifndef _GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL\n+  template<typename _UIntType, size_t __m,\n+\t   size_t __pos1, size_t __sl1, size_t __sl2,\n+\t   size_t __sr1, size_t __sr2,\n+\t   uint32_t __msk1, uint32_t __msk2,\n+\t   uint32_t __msk3, uint32_t __msk4,\n+\t   uint32_t __parity1, uint32_t __parity2,\n+\t   uint32_t __parity3, uint32_t __parity4>\n+    bool\n+    operator==(const __gnu_cxx::simd_fast_mersenne_twister_engine<_UIntType,\n+\t       __m, __pos1, __sl1, __sl2, __sr1, __sr2,\n+\t       __msk1, __msk2, __msk3, __msk4,\n+\t       __parity1, __parity2, __parity3, __parity4>& __lhs,\n+\t       const __gnu_cxx::simd_fast_mersenne_twister_engine<_UIntType,\n+\t       __m, __pos1, __sl1, __sl2, __sr1, __sr2,\n+\t       __msk1, __msk2, __msk3, __msk4,\n+\t       __parity1, __parity2, __parity3, __parity4>& __rhs)\n+    {\n+      return (std::equal(__lhs._M_stateT, __lhs._M_stateT + state_size,\n+\t\t\t __rhs._M_stateT)\n+\t      && __lhs._M_pos == __rhs._M_pos);\n+    }\n+#endif\n \n   template<typename _UIntType, size_t __m,\n \t   size_t __pos1, size_t __sl1, size_t __sl2,"}, {"sha": "8d275c08bbce3ecbcf9d1cdc8eed78db086dc11e", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -86,6 +86,12 @@ am__nobase_list = $(am__nobase_strip_setup); \\\n am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bitsdir)\" \\\n \t\"$(DESTDIR)$(stddir)\"\n LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n@@ -157,6 +163,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -509,6 +516,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -558,9 +566,9 @@ clean-toolexeclibLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libsupc++.la: $(libsupc___la_OBJECTS) $(libsupc___la_DEPENDENCIES) \n+libsupc++.la: $(libsupc___la_OBJECTS) $(libsupc___la_DEPENDENCIES) $(EXTRA_libsupc___la_DEPENDENCIES) \n \t$(CXXLINK) -rpath $(toolexeclibdir) $(libsupc___la_OBJECTS) $(libsupc___la_LIBADD) $(LIBS)\n-libsupc++convenience.la: $(libsupc__convenience_la_OBJECTS) $(libsupc__convenience_la_DEPENDENCIES) \n+libsupc++convenience.la: $(libsupc__convenience_la_OBJECTS) $(libsupc__convenience_la_DEPENDENCIES) $(EXTRA_libsupc__convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libsupc__convenience_la_OBJECTS) $(libsupc__convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -661,10 +669,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "d2cc65afe52df636e228f0f3e771629506db9d70", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -97,6 +97,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -318,6 +319,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -353,10 +355,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "2acb9037cf581447012dca753cca45ed9bc7b230", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -88,6 +88,12 @@ am__nobase_list = $(am__nobase_strip_setup); \\\n am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n am__installdirs = \"$(DESTDIR)$(pythondir)\"\n DATA = $(nobase_python_DATA)\n ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n@@ -121,6 +127,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -332,6 +339,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -367,9 +375,7 @@ uninstall-nobase_pythonDATA:\n \t@$(NORMAL_UNINSTALL)\n \t@list='$(nobase_python_DATA)'; test -n \"$(pythondir)\" || list=; \\\n \t$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \\\n-\ttest -n \"$$files\" || exit 0; \\\n-\techo \" ( cd '$(DESTDIR)$(pythondir)' && rm -f\" $$files \")\"; \\\n-\tcd \"$(DESTDIR)$(pythondir)\" && rm -f $$files\n+\tdir='$(DESTDIR)$(pythondir)'; $(am__uninstall_files_from_dir)\n tags: TAGS\n TAGS:\n \n@@ -393,10 +399,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "0a7af2a2b712364cd217c8b66ae7b0edfac3c608", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -85,6 +85,12 @@ am__nobase_list = $(am__nobase_strip_setup); \\\n am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n@@ -150,6 +156,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -473,6 +480,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -513,7 +521,7 @@ clean-toolexeclibLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) \n+libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) $(EXTRA_libstdc___la_DEPENDENCIES) \n \t$(libstdc___la_LINK) -rpath $(toolexeclibdir) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -689,10 +697,15 @@ install-am: all-am\n \n installcheck: installcheck-recursive\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "67ded81400e1b2e67450a073df7a4cd5c3975bea", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -114,6 +114,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -406,6 +407,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -424,7 +426,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) \n+libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) $(EXTRA_libc__11convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -513,10 +515,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "b2f2be48a14c248206bf8ea308eb50ce98b8c202", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -129,6 +129,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -474,6 +475,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -492,7 +494,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libc++98convenience.la: $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_DEPENDENCIES) \n+libc++98convenience.la: $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_DEPENDENCIES) $(EXTRA_libc__98convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -581,10 +583,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "16f83f3113c8757284c93ecd9667d17e6578d382", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf714c23f5dd6d340571d090f2b22d7f67a9503/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=9bf714c23f5dd6d340571d090f2b22d7f67a9503", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# Makefile.in generated by automake 1.11.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n-# Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n+# Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -97,6 +97,7 @@ CNUMERIC_CC = @CNUMERIC_CC@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n CSTDIO_H = @CSTDIO_H@\n CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n@@ -349,6 +350,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n+$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -384,10 +386,15 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t  `test -z '$(STRIP)' || \\\n-\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n mostlyclean-generic:\n \n clean-generic:"}]}