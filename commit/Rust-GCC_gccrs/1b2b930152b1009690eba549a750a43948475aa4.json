{"sha": "1b2b930152b1009690eba549a750a43948475aa4", "node_id": "C_kwDOANBUbNoAKDFiMmI5MzAxNTJiMTAwOTY5MGViYTU0OWE3NTBhNDM5NDg0NzVhYTQ", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-11-18T15:20:12Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-11-18T15:26:55Z"}, "message": "Fix typo.\n\nlibgomp/ChangeLog:\n\n\t* alloc.c (gomp_aligned_alloc): Fix typo.", "tree": {"sha": "aa694e40a93bf0d85a4d3baa7f743e74a34cc71c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa694e40a93bf0d85a4d3baa7f743e74a34cc71c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b2b930152b1009690eba549a750a43948475aa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2b930152b1009690eba549a750a43948475aa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b2b930152b1009690eba549a750a43948475aa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2b930152b1009690eba549a750a43948475aa4/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90de06a7b3ce6ae8381136e58a2dde91fbbb6eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90de06a7b3ce6ae8381136e58a2dde91fbbb6eff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90de06a7b3ce6ae8381136e58a2dde91fbbb6eff"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fa58a58fce6262a32f44a1fbe2d17c9e1609046d", "filename": "libgomp/alloc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2b930152b1009690eba549a750a43948475aa4/libgomp%2Falloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2b930152b1009690eba549a750a43948475aa4/libgomp%2Falloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Falloc.c?ref=1b2b930152b1009690eba549a750a43948475aa4", "patch": "@@ -75,7 +75,7 @@ gomp_aligned_alloc (size_t al, size_t size)\n #elif defined(HAVE_POSIX_MEMALIGN)\n   if (posix_memalign (&ret, al, size) != 0)\n     ret = NULL;\n-#lif defined(HAVE_ALIGNED_ALLOC)\n+#elif defined(HAVE_ALIGNED_ALLOC)\n   {\n     size_t sz = (size + al - 1) & ~(al - 1);\n     if (__builtin_expect (sz >= size, 1))"}]}