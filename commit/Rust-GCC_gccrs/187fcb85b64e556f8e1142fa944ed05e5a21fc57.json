{"sha": "187fcb85b64e556f8e1142fa944ed05e5a21fc57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg3ZmNiODViNjRlNTU2ZjhlMTE0MmZhOTQ0ZWQwNWU1YTIxZmM1Nw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-09-22T01:54:41Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-09-22T01:54:41Z"}, "message": "re PR target/37170 (gcc.dg/weak/weak-1.c)\n\n\tPR middle-end/37170\n\tPR middle-end/37280\n\t* gcc.dg/weak/weak-15.c, gcc.dg/weak/weak-16.c,\n\tg++.dg/ext/inline1.C: New tests.\n\nFrom-SVN: r140540", "tree": {"sha": "260c382923a70dfdbc147094e351b12a26aae542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/260c382923a70dfdbc147094e351b12a26aae542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/187fcb85b64e556f8e1142fa944ed05e5a21fc57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187fcb85b64e556f8e1142fa944ed05e5a21fc57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187fcb85b64e556f8e1142fa944ed05e5a21fc57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187fcb85b64e556f8e1142fa944ed05e5a21fc57/comments", "author": null, "committer": null, "parents": [{"sha": "c70d0414afa803f535420815116971725933234c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c70d0414afa803f535420815116971725933234c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c70d0414afa803f535420815116971725933234c"}], "stats": {"total": 117, "additions": 109, "deletions": 8}, "files": [{"sha": "ca0e70872a963437cc8f48fa1b5788dc5f4764c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=187fcb85b64e556f8e1142fa944ed05e5a21fc57", "patch": "@@ -1,3 +1,10 @@\n+2008-09-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR middle-end/37170\n+\tPR middle-end/37280\n+\t* gcc.dg/weak/weak-15.c, gcc.dg/weak/weak-16.c,\n+\tg++.dg/ext/inline1.C: New tests.\n+\n 2008-09-21  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR rtl-optimization/33642\n@@ -2738,7 +2745,7 @@\n \t* gfortran.dg/cshift_char_3.f90:  New test case.\n \t* gfortran.dg/cshift_nan_1.f90:  New test case.\n \n-2008-08-14  Rafael \u00c1vila de Esp\u00edndola  <espindola@google.com>\n+2008-08-14  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n \n \t* gcc.dg/visibility-14.c: New test.\n \t* gcc.dg/visibility-15.c: New test.\n@@ -3460,7 +3467,7 @@\n \tPR tree-optimization/36967\n \t* gfortran.dg/pr36967.f: New testcase.\n \n-2008-07-30  Rafael \u00c1vila de Esp\u00edndola  <espindola@google.com>\n+2008-07-30  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n \n \t* gcc.dg/visibility-14.c: New test.\n \t* gcc.dg/visibility-15.c: New test.\n@@ -5154,7 +5161,7 @@\n \tdg-additional-sources.\n \t(profopt-execute): Handle additional sources.\n \n-2008-05-28  Rafael Esp\u00edndola  <espindola@google.com>\n+2008-05-28  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n \n \t* gcc.dg/20080528-1.c: New test.\n \n@@ -5291,7 +5298,7 @@\n \t* g++.dg/template/inline1.C: For the not-defined symbol, use the\n \tpattern from g++.dg/template/qualttp17.C.\n \n-2008-05-23  Rafael Esp\u00edndola  <espindola@google.com>\n+2008-05-23  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n \n \t* gcc.c-torture/compile/20080522-1.c: Move to gcc.dg.\n \t* gcc.dg/20080522-1.c: Moved from gcc.c-torture.\n@@ -5329,7 +5336,7 @@\n \t* gfortran.dg/cshift_large_1.f90:  New test.\n \t* gfortran.dg/eoshift_large_1.f90:  New test.\n \n-2008-05-22  Rafael Esp\u00edndola  <espindola@google.com>\n+2008-05-22  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n \n \t* gcc.c-torture/compile/20080522-1.c: New testcase.\n \n@@ -6094,7 +6101,7 @@\n \tPR fortran/36162\n \t* gfortran.dg/module_widestring_1.f90: New test.\n \n-2008-05-08  Rafael Esp\u00edndola  <espindola@google.com>\n+2008-05-08  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n \n \t* gcc.dg/vect/vect-111.c: Rename to no-trapping-math-vect-111.c\n \t* gcc.dg/vect/vect-ifcvt-11.c: Rename to no-trapping-math-vect-ifcvt-11.c\n@@ -7033,7 +7040,7 @@\n \tPR fortran/35780\n \t* gfortran.dg/simplify_argN_1.f90: New test.\n \n-2008-04-06  Tobias Schl\u00fcter  <tobi@gcc.gnu.org>\n+2008-04-06  Tobias Schl\u00c3\u00bcter  <tobi@gcc.gnu.org>\n \n \tPR fortran/35832\n \t* gfortran.dg/io_constraints_2.f90: Adapt to new error message.\n@@ -8794,7 +8801,7 @@\n \t* g++.dg/torture/pr35164-1.C: New testcase.\n \t* g++.dg/torture/pr35164-2.C: Likewise.\n \n-2008-02-15  Dominique d'Humi\u00e8res  <dominiq@lps.ens.fr>\n+2008-02-15  Dominique d'Humi\u00c3\u00a8res  <dominiq@lps.ens.fr>\n \n \tPR testsuite/35119\n \t* g++.dg/template/spec35.C: Change the regular expressions"}, {"sha": "7e5f062e05859d9dee7f8b53f10ce951dfe591ed", "filename": "gcc/testsuite/g++.dg/ext/inline1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finline1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finline1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finline1.C?ref=187fcb85b64e556f8e1142fa944ed05e5a21fc57", "patch": "@@ -0,0 +1,34 @@\n+// { dg-do compile }\n+// { dg-options \"-O\" }\n+// Make sure inlined non-outlined functions aren't marked weak.\n+// We'd get a \".weak xyzzy\" annotation trigged by the second declaration.\n+\n+// { dg-final { scan-assembler-not \"weak\\[^ \\t\\]*\\[ \\t\\]_?xyzzy\" } } \n+\n+// The next check isn't really part of the actual test, just to make\n+// sure there's no outline-copy of xyzzy, because if that really\n+// happened, it *should* be marked linkonce or perhaps weak.\n+// { dg-final { scan-assembler-not \"xyzzy\" } } \n+\n+extern int x;\n+extern void foo(void);\n+extern void bar(void);\n+\n+extern \"C\" inline int xyzzy(int a)\n+{\n+  foo();\n+  return a + x;\n+}\n+\n+extern \"C\" int xyzzy(int);\n+\n+extern inline int plugh(int c)\n+{\n+  return xyzzy (c);\n+}\n+\n+int y;\n+void doit(int b)\n+{\n+  y = xyzzy (b) + plugh (b);\n+}"}, {"sha": "2218ca4a74698296bc67bfea2e1ea425d9f72065", "filename": "gcc/testsuite/gcc.dg/weak/weak-15.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-15.c?ref=187fcb85b64e556f8e1142fa944ed05e5a21fc57", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-options \"-fno-common\" } */\n+\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?a\" } } */\n+/* { dg-final { scan-assembler-not \"weak\\[^ \\t\\]*\\[ \\t\\]_?b\" } } */\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?c\" } } */\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?d\" } } */\n+\n+#pragma weak a\n+extern char a[];\n+\n+char *user_a(void)\n+{\n+  return a+1;\n+}\n+\n+int x;\n+int extern inline b(int y)\n+{\n+  return x+y;\n+}\n+\n+extern int b(int y);\n+\n+int user_b(int z)\n+{\n+  return b(z);\n+}\n+\n+#pragma weak c\n+extern int c;\n+\n+int *user_c = &c;\n+\n+#pragma weak d\n+extern char d[];\n+\n+char *user_d = &d[1];"}, {"sha": "3bcf3885d7dd763ac4ed6c0e2d434ebafedf5429", "filename": "gcc/testsuite/gcc.dg/weak/weak-16.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187fcb85b64e556f8e1142fa944ed05e5a21fc57/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-16.c?ref=187fcb85b64e556f8e1142fa944ed05e5a21fc57", "patch": "@@ -0,0 +1,21 @@\n+/* From PR37280.  */\n+/* { dg-do compile } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-options \"-fno-common -Os\" } */\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?kallsyms_token_index\" } } */\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?kallsyms_token_table\" } } */\n+\n+extern int kallsyms_token_index[] __attribute__((weak));\n+extern int kallsyms_token_table[] __attribute__((weak));\n+void kallsyms_expand_symbol(int *result)\n+{\n+  int len = *result;\n+  int *tptr;\n+  while(len) {\n+    tptr = &kallsyms_token_table[ kallsyms_token_index[*result] ];\n+    len--;\n+    while (*tptr) tptr++;\n+    *tptr = 1;\n+  }\n+ *result = 0;\n+}"}]}