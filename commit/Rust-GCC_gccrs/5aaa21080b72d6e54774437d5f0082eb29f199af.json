{"sha": "5aaa21080b72d6e54774437d5f0082eb29f199af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhYTIxMDgwYjcyZDZlNTQ3NzQ0MzdkNWYwMDgyZWIyOWYxOTlhZg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-10-09T21:17:11Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-10-09T21:17:11Z"}, "message": "linker-map.gnu: Make more *_type_info bits visible.\n\n\n2003-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* config/linker-map.gnu: Make more *_type_info bits visible.\n\tMove new/delete bits back into GLIBCXX space.\n\n\t* include/bits/locale_classes.h: Move _M_id out of line, so that\n\tlocale::id::_S_highwater can be removed from the export list.\n\t* src/locale.cc (locale::id::_M_id): Define.\n\nFrom-SVN: r72287", "tree": {"sha": "a8c4cc82d879d7cf0dcff2dcfbe1038425f7ae4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8c4cc82d879d7cf0dcff2dcfbe1038425f7ae4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aaa21080b72d6e54774437d5f0082eb29f199af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aaa21080b72d6e54774437d5f0082eb29f199af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aaa21080b72d6e54774437d5f0082eb29f199af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aaa21080b72d6e54774437d5f0082eb29f199af/comments", "author": null, "committer": null, "parents": [{"sha": "b0c6e48ff6e7876e373c5b491f34b10062dc721a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c6e48ff6e7876e373c5b491f34b10062dc721a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c6e48ff6e7876e373c5b491f34b10062dc721a"}], "stats": {"total": 127, "additions": 88, "deletions": 39}, "files": [{"sha": "08950d9f9f7618745853f824f0b76951e68b0361", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5aaa21080b72d6e54774437d5f0082eb29f199af", "patch": "@@ -1,3 +1,12 @@\n+2003-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* config/linker-map.gnu: Make more *_type_info bits visible.\n+\tMove new/delete bits back into GLIBCXX space.\n+\n+\t* include/bits/locale_classes.h: Move _M_id out of line, so that\n+\tlocale::id::_S_highwater can be removed from the export list.\n+\t* src/locale.cc (locale::id::_M_id): Define.\n+\t\n 2003-10-09  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* testsuite/lib/libstdc++.exp: Set LD_LIBRARY_PATH_64 for"}, {"sha": "adbd390e59f59c5e2b5c2207010fafc681400efd", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 69, "deletions": 32, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=5aaa21080b72d6e54774437d5f0082eb29f199af", "patch": "@@ -38,7 +38,7 @@ GLIBCXX_3.4 {\n       std::locale::facet::_S_destroy_c_locale*;\n       std::locale::[A-Zg-h]*;\n       std::locale::id::[A-Za-z]*;\n-      std::locale::id::_S_highwater;\n+      std::locale::id::_M_id*;\n       std::locale::[A-Zj-z]*;\n       std::locale::_[A-Ha-z]*;\n       std::locale::_Impl::[A-Za-z]*;\n@@ -62,6 +62,26 @@ GLIBCXX_3.4 {\n \n     # Names not in an 'extern' block are mangled names.\n \n+    # operator new(size_t)\n+    _Znw[jm];\n+    # operator new(size_t, std::nothrow_t const&)\n+    _Znw[jm]RKSt9nothrow_t;\n+\n+    # operator delete(void*)\n+    _ZdlPv;\n+    # operator delete(void*, std::nothrow_t const&)\n+    _ZdlPvRKSt9nothrow_t;\n+\n+    # operator new[](size_t)\n+    _Zna[jm];\n+    # operator new[](size_t, std::nothrow_t const&)\n+    _Zna[jm]RKSt9nothrow_t;\n+\n+    # operator delete[](void*)\n+    _ZdaPv;\n+    # operator delete[](void*, std::nothrow_t const&)\n+    _ZdaPvRKSt9nothrow_t;\n+\n     # std::locale destructors\n     _ZNSt6localeD*;\n \t\n@@ -84,6 +104,12 @@ GLIBCXX_3.4 {\n     _ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_;\n     _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_;\n \n+    # std::__ctype_abstract_base*\n+    _ZNSt21__ctype_abstract_base*;\n+\n+    # std::__codecvt_abstract_base*\n+    _ZNStSt23__codecvt_abstract_base*;\n+\n     # virtual table\n     _ZTVNSt8ios_base7failureE;\n     _ZTVNSt6locale5facetE;\n@@ -221,57 +247,68 @@ CXXABI_1.3 {\n     __gxx_personality_sj0;\n     __dynamic_cast;\n \n-    # operator new(size_t)\n-    _Znw[jm];\n-    # operator new(size_t, std::nothrow_t const&)\n-    _Znw[jm]RKSt9nothrow_t;\n-\n-    # operator delete(void*)\n-    _ZdlPv;\n-    # operator delete(void*, std::nothrow_t const&)\n-    _ZdlPvRKSt9nothrow_t;\n-\n-    # operator new[](size_t)\n-    _Zna[jm];\n-    # operator new[](size_t, std::nothrow_t const&)\n-    _Zna[jm]RKSt9nothrow_t;\n-\n-    # operator delete[](void*)\n-    _ZdaPv;\n-    # operator delete[](void*, std::nothrow_t const&)\n-    _ZdaPvRKSt9nothrow_t;\n+    # *_type_info classes, ctor and dtor\n+    _ZN10__cxxabiv117__array_type_info*;\n+    _ZN10__cxxabiv117__class_type_info*;\n+    _ZN10__cxxabiv116__enum_type_info*;\n+    _ZN10__cxxabiv120__function_type_info*;\n+    _ZN10__cxxabiv123__fundamental_type_info*;\n+    _ZN10__cxxabiv117__pbase_type_info*;\n+    _ZN10__cxxabiv129__pointer_to_member_type_info*;\n+    _ZN10__cxxabiv119__pointer_type_info*;\n+    _ZN10__cxxabiv120__si_class_type_info*;\n+    _ZN10__cxxabiv121__vmi_class_type_info*;\n+\n+    # *_type_info classes, member functions\n+    _ZNK10__cxxabiv117__class_type_info*;\n+    _ZNK10__cxxabiv120__function_type_info*;\n+    _ZNK10__cxxabiv117__pbase_type_info*;\n+    _ZNK10__cxxabiv129__pointer_to_member_type_info*;\n+    _ZNK10__cxxabiv119__pointer_type_info*;\n+    _ZNK10__cxxabiv120__si_class_type_info*;\n+    _ZNK10__cxxabiv121__vmi_class_type_info*;\n \n     # virtual table\n-    _ZTVN10__cxxabiv117__class_type_infoE;\n-    _ZTVN10__cxxabiv120__si_class_type_infoE;\n-    _ZTVN10__cxxabiv121__vmi_class_type_infoE;\n-    _ZTVN10__cxxabiv123__fundamental_type_infoE;\n     _ZTVN10__cxxabiv117__array_type_infoE;\n-    _ZTVN10__cxxabiv120__function_type_infoE;\n+    _ZTVN10__cxxabiv117__class_type_infoE;\n     _ZTVN10__cxxabiv116__enum_type_infoE;\n+    _ZTVN10__cxxabiv120__function_type_infoE;\n+    _ZTVN10__cxxabiv123__fundamental_type_infoE;\n     _ZTVN10__cxxabiv117__pbase_type_infoE;\n-    _ZTVN10__cxxabiv119__pointer_type_infoE;\n     _ZTVN10__cxxabiv129__pointer_to_member_type_infoE;\n+    _ZTVN10__cxxabiv119__pointer_type_infoE;\n+    _ZTVN10__cxxabiv120__si_class_type_infoE;\n+    _ZTVN10__cxxabiv121__vmi_class_type_infoE;\n \n     # typeinfo structure (and some names)\n     _ZTI[a-z];\n     _ZTIP[a-z];\n     _ZTIPK[a-z];\n-    _ZTIN10__cxxabiv117__class_type_infoE;\n-    _ZTIN10__cxxabiv120__si_class_type_infoE;\n-    _ZTIN10__cxxabiv121__vmi_class_type_infoE;\n-    _ZTIN10__cxxabiv123__fundamental_type_infoE;\n     _ZTIN10__cxxabiv117__array_type_infoE;\n-    _ZTIN10__cxxabiv120__function_type_infoE;\n+    _ZTIN10__cxxabiv117__class_type_infoE;\n     _ZTIN10__cxxabiv116__enum_type_infoE;\n+    _ZTIN10__cxxabiv120__function_type_infoE;\n+    _ZTIN10__cxxabiv123__fundamental_type_infoE;\n     _ZTIN10__cxxabiv117__pbase_type_infoE;\n-    _ZTIN10__cxxabiv119__pointer_type_infoE;\n     _ZTIN10__cxxabiv129__pointer_to_member_type_infoE;\n+    _ZTIN10__cxxabiv119__pointer_type_infoE;\n+    _ZTIN10__cxxabiv120__si_class_type_infoE;\n+    _ZTIN10__cxxabiv121__vmi_class_type_infoE;\n \n     # typeinfo name\n     _ZTS[a-z];\n     _ZTSP[a-z];\n     _ZTSPK[a-z];\n+    _ZTSN10__cxxabiv117__array_type_infoE;\n+    _ZTSN10__cxxabiv117__class_type_infoE;\n+    _ZTSN10__cxxabiv116__enum_type_infoE;\n+    _ZTSN10__cxxabiv120__function_type_infoE;\n+    _ZTSN10__cxxabiv123__fundamental_type_infoE;\n+    _ZTSN10__cxxabiv117__pbase_type_infoE;\n+    _ZTSN10__cxxabiv129__pointer_to_member_type_infoE;\n+    _ZTSN10__cxxabiv119__pointer_type_infoE;\n+    _ZTSN10__cxxabiv120__si_class_type_infoE;\n+    _ZTSN10__cxxabiv121__vmi_class_type_infoE;\n \n     # __gnu_cxx::_verbose_terminate_handler()\n     _ZN9__gnu_cxx27__verbose_terminate_handlerEv;"}, {"sha": "62dabff85a715474d7f71845bb2dd85505199d6f", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=5aaa21080b72d6e54774437d5f0082eb29f199af", "patch": "@@ -289,13 +289,8 @@ namespace std\n     // counted on to be zero-initialized.\n     id() { }\n \n-    inline size_t\n-    _M_id() const\n-    {\n-      if (!_M_index)\n-\t_M_index = 1 + __exchange_and_add(&_S_highwater, 1);\n-      return _M_index - 1;\n-    }\n+    size_t\n+    _M_id() const;\n   };\n \n "}, {"sha": "f5b36044e581a00ac02b4cb9b7132c2c219bd349", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aaa21080b72d6e54774437d5f0082eb29f199af/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=5aaa21080b72d6e54774437d5f0082eb29f199af", "patch": "@@ -68,6 +68,14 @@ namespace std\n   __gthread_once_t \t\tlocale::_S_once = __GTHREAD_ONCE_INIT;\n #endif\n \n+  size_t\n+  locale::id::_M_id() const\n+  {\n+    if (!_M_index)\n+      _M_index = 1 + __exchange_and_add(&_S_highwater, 1);\n+    return _M_index - 1;\n+  }\n+\n   // Definitions for static const data members of locale::id\n   _Atomic_word locale::id::_S_highwater;  // init'd to 0 by linker\n "}]}