{"sha": "de6147508bdf9f319ad246031e58a9983461034e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2MTQ3NTA4YmRmOWYzMTlhZDI0NjAzMWU1OGE5OTgzNDYxMDM0ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-11-18T17:07:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-18T17:07:24Z"}, "message": "re PR c++/63934 ([C++] internal compiler error: in adjust_temp_type, at cp/constexpr.c:1020)\n\n\tPR c++/63934\n\t* constexpr.c (cxx_eval_call_expression): Check DECL_CONSTRUCTOR_P\n\trather than VOID_TYPE_P.\n\nFrom-SVN: r217729", "tree": {"sha": "53b4559d47a26ddc6ee87eb8ea55094d828dba04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b4559d47a26ddc6ee87eb8ea55094d828dba04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de6147508bdf9f319ad246031e58a9983461034e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6147508bdf9f319ad246031e58a9983461034e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6147508bdf9f319ad246031e58a9983461034e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6147508bdf9f319ad246031e58a9983461034e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d2d755e862d70f29ba26ad71c563de35ec230de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2d755e862d70f29ba26ad71c563de35ec230de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2d755e862d70f29ba26ad71c563de35ec230de"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "28d8796842d6e52ef55a7c73532625a82ae14ac9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6147508bdf9f319ad246031e58a9983461034e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6147508bdf9f319ad246031e58a9983461034e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=de6147508bdf9f319ad246031e58a9983461034e", "patch": "@@ -1,5 +1,9 @@\n 2014-11-18  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/63934\n+\t* constexpr.c (cxx_eval_call_expression): Check DECL_CONSTRUCTOR_P\n+\trather than VOID_TYPE_P.\n+\n \t* pt.c (instantiate_template_1): Use tsubst_aggr_type for context.\n \n \tPR c++/58102"}, {"sha": "4325caa0672d5eac7535724dba0b7b7795b5c6f8", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6147508bdf9f319ad246031e58a9983461034e/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6147508bdf9f319ad246031e58a9983461034e/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=de6147508bdf9f319ad246031e58a9983461034e", "patch": "@@ -1328,7 +1328,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t\t\t\t\t    addr, non_constant_p, overflow_p,\n \t\t\t\t\t    &jump_target);\n \n-\t      if (VOID_TYPE_P (TREE_TYPE (res)))\n+\t      if (DECL_CONSTRUCTOR_P (fun))\n \t\t/* This can be null for a subobject constructor call, in\n \t\t   which case what we care about is the initialization\n \t\t   side-effects rather than the value.  We could get at the\n@@ -1367,7 +1367,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t{\n \t  /* If this was a call to initialize an object, set the type of\n \t     the CONSTRUCTOR to the type of that object.  */\n-\t  if (DECL_CONSTRUCTOR_P (fun))\n+\t  if (DECL_CONSTRUCTOR_P (fun) && !use_new_call)\n \t    {\n \t      tree ob_arg = get_nth_callarg (t, 0);\n \t      STRIP_NOPS (ob_arg);"}]}