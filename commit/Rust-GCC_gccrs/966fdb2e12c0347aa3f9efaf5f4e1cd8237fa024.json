{"sha": "966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2ZmRiMmUxMmMwMzQ3YWEzZjllZmFmNWY0ZTFjZDgyMzdmYTAyNA==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-22T00:11:16Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-22T00:15:28Z"}, "message": "Handle a_2= &b properly in range calculations.\n\nwhen processing assignments, we were using the type of b instead of type\nof &b when computing a range.  This was usually filtered out by FRE.\nturning it off exposed it.\n\n\tgcc/\n\tPR tree-optimization/97520\n\t* gimple-range.cc (range_of_non_trivial_assignment): Handle x = &a\n\tby returning a non-zero range.\n\tgcc/testsuite/\n\t* gcc.dg/pr97520.c: New.", "tree": {"sha": "75e85ac0b6215c99666bc3368d246c2318e5ba09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e85ac0b6215c99666bc3368d246c2318e5ba09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024/comments", "author": null, "committer": null, "parents": [{"sha": "0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f41b5e02fa47db2080b77e4e1f7cd3305457c05"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "267ebad757fddc7719faa448e80a3fc68d204833", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024", "patch": "@@ -446,17 +446,31 @@ gimple_ranger::range_of_non_trivial_assignment (irange &r, gimple *stmt)\n     return false;\n \n   tree base = gimple_range_base_of_assignment (stmt);\n-  if (base && TREE_CODE (base) == MEM_REF\n-      && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)\n+  if (base)\n     {\n-      int_range_max range1;\n-      tree ssa = TREE_OPERAND (base, 0);\n-      if (range_of_expr (range1, ssa, stmt))\n+      if (TREE_CODE (base) == MEM_REF)\n \t{\n-\t  tree type = TREE_TYPE (ssa);\n-\t  range_operator *op = range_op_handler (POINTER_PLUS_EXPR, type);\n-\t  int_range<2> offset (TREE_OPERAND (base, 1), TREE_OPERAND (base, 1));\n-\t  op->fold_range (r, type, range1, offset);\n+\t  if (TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)\n+\t    {\n+\t      int_range_max range1;\n+\t      tree ssa = TREE_OPERAND (base, 0);\n+\t      if (range_of_expr (range1, ssa, stmt))\n+\t\t{\n+\t\t  tree type = TREE_TYPE (ssa);\n+\t\t  range_operator *op = range_op_handler (POINTER_PLUS_EXPR,\n+\t\t\t\t\t\t\t type);\n+\t\t  int_range<2> offset (TREE_OPERAND (base, 1),\n+\t\t\t\t       TREE_OPERAND (base, 1));\n+\t\t  op->fold_range (r, type, range1, offset);\n+\t\t  return true;\n+\t\t}\n+\t    }\n+\t  return false;\n+\t}\n+      if (gimple_assign_rhs_code (stmt) == ADDR_EXPR)\n+\t{\n+\t  // Handle \"= &a\"  and return non-zero.\n+\t  r = range_nonzero (TREE_TYPE (gimple_assign_rhs1 (stmt)));\n \t  return true;\n \t}\n     }"}, {"sha": "9f665959138c09655e50fefdf9bfb755ca3bc87f", "filename": "gcc/testsuite/gcc.dg/pr97520.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97520.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97520.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97520.c?ref=966fdb2e12c0347aa3f9efaf5f4e1cd8237fa024", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-fre\" } */\n+\n+char a;\n+void b() {\n+  char *c[5];\n+  char *d = &a;\n+  &d;\n+  *(c[4] = d);\n+}\n+int main() { return 0; }"}]}