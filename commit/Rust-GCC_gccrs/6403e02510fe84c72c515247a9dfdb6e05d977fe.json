{"sha": "6403e02510fe84c72c515247a9dfdb6e05d977fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwM2UwMjUxMGZlODRjNzJjNTE1MjQ3YTlkZmRiNmUwNWQ5NzdmZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-11-15T02:10:25Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-11-15T19:39:21Z"}, "message": "testsuite: Update scanning symbol sections to support AIX.\n\ngcc/testsuite:\n\n\t* lib/scanasm.exp (parse_section_of_symbols): Also look for AIX\n\tXCOFF CSECT notation.\n\t* g++.dg/opt/const4.C: Also look for AIX XCOFF \"[RO]\".\n\t* gcc.dg/20021029-1.c: Likewise.\n\t* gcc.dg/array-quals-1.c: Likewise and \"[RW]\".\n\t* g++.dg/gomp/tls-5.C: Also look for AIX XCOFF \"[TL]\".\n\t* gcc.dg/pr25376.c: Accept AIX decoration around named section\n\tand function descriptor.", "tree": {"sha": "1413f01fd8e0a23bc5b8fd56e7aac608d0546ded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1413f01fd8e0a23bc5b8fd56e7aac608d0546ded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6403e02510fe84c72c515247a9dfdb6e05d977fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6403e02510fe84c72c515247a9dfdb6e05d977fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6403e02510fe84c72c515247a9dfdb6e05d977fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6403e02510fe84c72c515247a9dfdb6e05d977fe/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3be949a563eb1ef23f777587b58f85cc7b9ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b3be949a563eb1ef23f777587b58f85cc7b9ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b3be949a563eb1ef23f777587b58f85cc7b9ef6"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "b18a1277edcb580d1045bea0de9ed5f1e0306b04", "filename": "gcc/testsuite/g++.dg/gomp/tls-5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftls-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftls-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftls-5.C?ref=6403e02510fe84c72c515247a9dfdb6e05d977fe", "patch": "@@ -1,8 +1,8 @@\n // The reference temp should be TLS, not normal data.\n // { dg-require-effective-target c++11 }\n // { dg-final { scan-assembler-not \"\\\\.data\" { target tls_native xfail powerpc-*-aix* } } }\n-// { dg-final { scan-assembler-symbol-section {^_?ir$} {^\\.tbss} } }\n-// { dg-final { scan-assembler-symbol-section {^_?_ZGR2ir_$} {^\\.tdata} } }\n+// { dg-final { scan-assembler-symbol-section {^_?ir$} {^\\.tbss|\\[TL\\]} } }\n+// { dg-final { scan-assembler-symbol-section {^_?_ZGR2ir_$} {^\\.tdata|\\[TL\\]} } }\n \n extern int&& ir;\n #pragma omp threadprivate (ir)"}, {"sha": "75ee0e6ba8455f32106a16609d5fcb589ceed688", "filename": "gcc/testsuite/g++.dg/opt/const4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fconst4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fconst4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fconst4.C?ref=6403e02510fe84c72c515247a9dfdb6e05d977fe", "patch": "@@ -3,7 +3,7 @@\n // that have it.\n // { dg-do compile }\n \n-// { dg-final { scan-assembler-symbol-section {constant_variable} {^\\.(const|rodata)} } }\n+// { dg-final { scan-assembler-symbol-section {constant_variable} {^\\.(const|rodata)|\\[RO\\]} } }\n const int constant_variable[] __attribute__ ((__used__)) = { 0, 1, 2, 3 };\n \n // The MMIX port always switches to the .data section at the end of a file."}, {"sha": "57c2b48f13c4fbaa75d6669326f477bcd4cd6c96", "filename": "gcc/testsuite/gcc.dg/20021029-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-1.c?ref=6403e02510fe84c72c515247a9dfdb6e05d977fe", "patch": "@@ -3,7 +3,7 @@\n /* { dg-do compile { target fpic } } */\n /* { dg-options \"-O2 -fpic\" } */\n /* { dg-final { scan-assembler-not \".data.rel.ro.local\" } } */\n-/* { dg-final { scan-assembler-symbol-section {ar} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {ar} {^\\.(const|rodata)|\\[RO\\]} } } */\n /* { dg-require-effective-target label_values } */\n /* { dg-require-effective-target indirect_jumps } */\n "}, {"sha": "31aa1d3cb3fcd25f36d63747f2b067f7c2fa4923", "filename": "gcc/testsuite/gcc.dg/array-quals-1.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c?ref=6403e02510fe84c72c515247a9dfdb6e05d977fe", "patch": "@@ -6,46 +6,46 @@\n /* { dg-options \"-Wno-discarded-array-qualifiers\" } */\n /* The MMIX port always switches to the .data section at the end of a file.  */\n /* { dg-final { scan-assembler-not \"\\\\.data(?!\\\\.rel\\\\.ro)\" { xfail powerpc*-*-aix* mmix-*-* x86_64-*-mingw* } } } */\n-/* { dg-final { scan-assembler-symbol-section {^_?a$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?a$} {^\\.(const|rodata)|\\[RO\\]} } } */\n static const int a[2] = { 1, 2 };\n-/* { dg-final { scan-assembler-symbol-section {^_?a1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?a1$} {^\\.(const|rodata)|\\[RO\\]} } } */\n const int a1[2] = { 1, 2 };\n typedef const int ci;\n-/* { dg-final { scan-assembler-symbol-section {^_?b$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?b$} {^\\.(const|rodata)|\\[RO\\]} } } */\n static ci b[2] = { 3, 4 };\n-/* { dg-final { scan-assembler-symbol-section {^_?b1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?b1$} {^\\.(const|rodata)|\\[RO\\]} } } */\n ci b1[2] = { 3, 4 };\n typedef int ia[2];\n-/* { dg-final { scan-assembler-symbol-section {^_?c$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?c$} {^\\.(const|rodata)|\\[RO\\]} } } */\n static const ia c = { 5, 6 };\n-/* { dg-final { scan-assembler-symbol-section {^_?c1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?c1$} {^\\.(const|rodata)|\\[RO\\]} } } */\n const ia c1 = { 5, 6 };\n typedef const int cia[2];\n-/* { dg-final { scan-assembler-symbol-section {^_?d$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?d$} {^\\.(const|rodata)|\\[RO\\]} } } */\n static cia d = { 7, 8 };\n-/* { dg-final { scan-assembler-symbol-section {^_?d1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?d1$} {^\\.(const|rodata)|\\[RO\\]} } } */\n cia d1 = { 7, 8 };\n-/* { dg-final { scan-assembler-symbol-section {^_?e$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?e$} {^\\.(const|rodata)|\\[RO\\]} } } */\n static cia e[2] = { { 1, 2 }, { 3, 4 } };\n-/* { dg-final { scan-assembler-symbol-section {^_?e1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?e1$} {^\\.(const|rodata)|\\[RO\\]} } } */\n cia e1[2] = { { 1, 2 }, { 3, 4 } };\n-/* { dg-final { scan-assembler-symbol-section {^_?p$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?p$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const p = &a;\n-/* { dg-final { scan-assembler-symbol-section {^_?q$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?q$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const q = &b;\n-/* { dg-final { scan-assembler-symbol-section {^_?r$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?r$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const r = &c;\n-/* { dg-final { scan-assembler-symbol-section {^_?s$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?s$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const s = &d;\n-/* { dg-final { scan-assembler-symbol-section {^_?t$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?t$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const t = &e;\n-/* { dg-final { scan-assembler-symbol-section {^_?p1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?p1$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const p1 = &a1;\n-/* { dg-final { scan-assembler-symbol-section {^_?q1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?q1$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const q1 = &b1;\n-/* { dg-final { scan-assembler-symbol-section {^_?r1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?r1$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const r1 = &c1;\n-/* { dg-final { scan-assembler-symbol-section {^_?s1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?s1$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const s1 = &d1;\n-/* { dg-final { scan-assembler-symbol-section {^_?t1$} {^\\.(const|rodata)} } } */\n+/* { dg-final { scan-assembler-symbol-section {^_?t1$} {^\\.(const|rodata)|\\[RW\\]} } } */\n void *const t1 = &e1;"}, {"sha": "accf3235b67e08562347bb4f92aca966dc909c68", "filename": "gcc/testsuite/gcc.dg/pr25376.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25376.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25376.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25376.c?ref=6403e02510fe84c72c515247a9dfdb6e05d977fe", "patch": "@@ -7,4 +7,4 @@ void simple (void)\n }\n \n /* { dg-final { scan-assembler \"my_named_section\" } } */\n-/* { dg-final { scan-assembler-symbol-section {simple$} {^my_named_section$} } } */\n+/* { dg-final { scan-assembler-symbol-section {simple$} {^\\.?my_named_section|simple\\[DS\\]} } } */"}, {"sha": "43b76495ad850f7ac5ee0fa6400720c17e01055b", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403e02510fe84c72c515247a9dfdb6e05d977fe/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=6403e02510fe84c72c515247a9dfdb6e05d977fe", "patch": "@@ -303,7 +303,7 @@ proc dg-scan-symbol-section { name testcase output_file symbol_pattern expected_\n proc parse_section_of_symbols { filename result } {\n     upvar $result up_result\n \n-    set section_pattern {^\\s*(?:\\.section\\s+(.*)|(\\.const|\\.data|\\.text)\\s*)$}\n+    set section_pattern {^\\s*(?:(\\.section|\\.csect)\\s+(.*)|(\\.const|\\.data|\\.text)\\s*)$}\n     set label_pattern {^(\\S+):$}\n \n     set fd [open $filename r]"}]}