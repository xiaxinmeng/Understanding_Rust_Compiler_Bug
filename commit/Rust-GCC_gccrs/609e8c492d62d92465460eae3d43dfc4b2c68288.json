{"sha": "609e8c492d62d92465460eae3d43dfc4b2c68288", "node_id": "C_kwDOANBUbNoAKDYwOWU4YzQ5MmQ2MmQ5MjQ2NTQ2MGVhZTNkNDNkZmM0YjJjNjgyODg", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-02-26T22:17:23Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-03-04T03:02:23Z"}, "message": "x86: Always return pseudo register in ix86_gen_scratch_sse_rtx\n\nix86_gen_scratch_sse_rtx returns XMM7/XMM15/XMM31 as a scratch vector\nregister to prevent RTL optimizers from removing vector register.  It\nintroduces a conflict with explicit XMM7/XMM15/XMM31 usage and when it\nis called by RTL optimizers, it may introduce conflicting usages of\nXMM7/XMM15/XMM31.\n\nChange ix86_gen_scratch_sse_rtx to always return a pseudo register and\nxfail x86 tests which are optimized with a hard scratch register.\n\ngcc/\n\n\tPR target/104704\n\t* config/i386/i386.cc (ix86_gen_scratch_sse_rtx): Always return\n\ta pseudo register.\n\ngcc/testsuite/\n\n\tPR target/104704\n\t* gcc.target/i386/incoming-11.c: Xfail.\n\t* gcc.target/i386/pieces-memset-3.c: Likewise.\n\t* gcc.target/i386/pieces-memset-37.c: Likewise.\n\t* gcc.target/i386/pieces-memset-39.c: Likewise.\n\t* gcc.target/i386/pieces-memset-46.c: Likewise.\n\t* gcc.target/i386/pieces-memset-47.c: Likewise.\n\t* gcc.target/i386/pieces-memset-48.c: Likewise.\n\t* gcc.target/i386/pr90773-5.c: Likewise.\n\t* gcc.target/i386/pr90773-14.c: Likewise.\n\t* gcc.target/i386/pr90773-17.c: Likewise.\n\t* gcc.target/i386/pr100865-8a.c: Likewise.\n\t* gcc.target/i386/pr100865-8c.c: Likewise.\n\t* gcc.target/i386/pr100865-9c.c: Likewise.\n\t* gcc.target/i386/pieces-memset-21.c: Always expect vzeroupper.\n\t* gcc.target/i386/pr82941-1.c: Likewise.\n\t* gcc.target/i386/pr82942-1.c: Likewise.\n\t* gcc.target/i386/pr82990-1.c: Likewise.\n\t* gcc.target/i386/pr82990-3.c: Likewise.\n\t* gcc.target/i386/pr82990-5.c: Likewise.\n\t* gcc.target/i386/pr100865-11b.c: Expect vmovdqa instead of\n\tvmovdqa64.\n\t* gcc.target/i386/pr100865-12b.c: Likewise.\n\t* gcc.target/i386/pr100865-8b.c: Likewise.\n\t* gcc.target/i386/pr100865-9b.c: Likewise.\n\t* gcc.target/i386/pr104704-1.c: New test.\n\t* gcc.target/i386/pr104704-2.c: Likewise.\n\t* gcc.target/i386/pr104704-3.c: Likewise.\n\t* gcc.target/i386/pr104704-4.c: Likewise.\n\t* gcc.target/i386/pr104704-5.c: Likewise.\n\t* gcc.target/i386/pr104704-6.c: Likewise.", "tree": {"sha": "afee96a75b3547442cf5a61d10a700d7d019bf08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afee96a75b3547442cf5a61d10a700d7d019bf08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/609e8c492d62d92465460eae3d43dfc4b2c68288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/609e8c492d62d92465460eae3d43dfc4b2c68288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/609e8c492d62d92465460eae3d43dfc4b2c68288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/609e8c492d62d92465460eae3d43dfc4b2c68288/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc03ebdceafce7948596aa3b9bb9653ba8205c6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc03ebdceafce7948596aa3b9bb9653ba8205c6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc03ebdceafce7948596aa3b9bb9653ba8205c6d"}], "stats": {"total": 275, "additions": 225, "deletions": 50}, "files": [{"sha": "95219902694aad8ab42db96c8db5b4052685b138", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -23786,24 +23786,7 @@ ix86_optab_supported_p (int op, machine_mode mode1, machine_mode,\n rtx\n ix86_gen_scratch_sse_rtx (machine_mode mode)\n {\n-  if (TARGET_SSE && !lra_in_progress)\n-    {\n-      unsigned int regno;\n-      if (TARGET_64BIT)\n-\t{\n-\t  /* In 64-bit mode, use XMM31 to avoid vzeroupper and always\n-\t     use XMM31 for CSE.  */\n-\t  if (ix86_hard_regno_mode_ok (LAST_EXT_REX_SSE_REG, mode))\n-\t    regno = LAST_EXT_REX_SSE_REG;\n-\t  else\n-\t    regno = LAST_REX_SSE_REG;\n-\t}\n-      else\n-\tregno = LAST_SSE_REG;\n-      return gen_rtx_REG (mode, regno);\n-    }\n-  else\n-    return gen_reg_rtx (mode);\n+  return gen_reg_rtx (mode);\n }\n \n /* Address space support."}, {"sha": "a06fdee477d7740971c3e4476c6a371b56740a43", "filename": "gcc/testsuite/gcc.target/i386/incoming-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-11.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -15,4 +15,4 @@ void f()\n \tfor (i = 0; i < 100; i++) q[i] = 1;\n }\n \n-/* { dg-final { scan-assembler-not \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%esp\" } } */\n+/* { dg-final { scan-assembler-not \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%esp\"  { xfail *-*-* } } } */"}, {"sha": "a04f7eb55c7806b7f79e9b8b4dbebfb9c80f37eb", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-21.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-21.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -11,8 +11,7 @@ foo (void)\n \n /* { dg-final { scan-assembler-times \"vpxor(?:d|)\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu(?:64|8)\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n-/* { dg-final { scan-assembler-not \"vzeroupper\" { target { ! ia32 } } } } */\n-/* { dg-final { scan-assembler \"vzeroupper\" { target ia32 } } } */\n+/* { dg-final { scan-assembler \"vzeroupper\" } } */\n /* No need to dynamically realign the stack here.  */\n /* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n /* Nor use a frame pointer.  */"}, {"sha": "765441a7c4a40d73b6e233dcd11f1656bf82aa26", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-3.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -13,6 +13,6 @@ foo (int x)\n /* { dg-final { scan-assembler-times \"vinserti64x4\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n /* No need to dynamically realign the stack here.  */\n-/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" { xfail *-*-* } } } */\n /* Nor use a frame pointer.  */\n-/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" { xfail *-*-* } } } */"}, {"sha": "0c5056be54d88ae6ffa1a943238ef3ca1cfcd596", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-37.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-37.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -10,6 +10,6 @@ foo (int a1, int a2, int a3, int a4, int a5, int a6, int x, char *dst)\n /* { dg-final { scan-assembler-times \"vpbroadcastb\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n /* No need to dynamically realign the stack here.  */\n-/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" { xfail *-*-* } } } */\n /* Nor use a frame pointer.  */\n-/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" { xfail *-*-* } } } */"}, {"sha": "e33644c2f10e969eaa96d92bba4519838a9cb0c4", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-39.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-39.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-39.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-39.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -11,6 +11,6 @@ foo (int a1, int a2, int a3, int a4, int a5, int a6, int x, char *dst)\n /* { dg-final { scan-assembler-not \"vinserti64x4\" } } */\n /* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n /* No need to dynamically realign the stack here.  */\n-/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n+/* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" { xfail *-*-* } } } */\n /* Nor use a frame pointer.  */\n-/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" } } */\n+/* { dg-final { scan-assembler-not \"%\\[re\\]bp\" { xfail *-*-* } } } */"}, {"sha": "be1b054eed2b9ce8b2b53862847901ecaa7209e7", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-46.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-46.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -10,7 +10,7 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\n\\]*%zmm\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 { xfail *-*-* } } } */\n /* No need to dynamically realign the stack here.  */\n /* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n /* Nor use a frame pointer.  */"}, {"sha": "78d3290c74fb415bdce75b29d662b005be453dce", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-47.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-47.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -10,7 +10,7 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"vmovdqu(?:8|)\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vmovw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 { xfail *-*-* } } } */\n /* No need to dynamically realign the stack here.  */\n /* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n /* Nor use a frame pointer.  */"}, {"sha": "6342dbb91b00ea85733499f957e65bb7a151be9a", "filename": "gcc/testsuite/gcc.target/i386/pieces-memset-48.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpieces-memset-48.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -10,7 +10,7 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"vmovdqu(?:8|)\\[ \\\\t\\]+\\[^\\n\\]*%ymm\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vmovw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 { xfail *-*-* } } } */\n /* No need to dynamically realign the stack here.  */\n /* { dg-final { scan-assembler-not \"and\\[^\\n\\r]*%\\[re\\]sp\" } } */\n /* Nor use a frame pointer.  */"}, {"sha": "12d55b9a64242a8a033c52ef4ae1416ada50837c", "filename": "gcc/testsuite/gcc.target/i386/pr100865-11b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-11b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-11b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-11b.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -5,4 +5,4 @@\n \n /* { dg-final { scan-assembler-times \"movabsq\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpbroadcastq\\[\\\\t \\]+%(?:r|e)\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "63a5629b90c172f68733b7809841a48fd3c5bbec", "filename": "gcc/testsuite/gcc.target/i386/pr100865-12b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-12b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-12b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-12b.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -5,4 +5,4 @@\n \n /* { dg-final { scan-assembler-times \"movabsq\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpbroadcastq\\[\\\\t \\]+%(?:r|e)\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "911b14d4a250b29a37a4f7e9b705205687f3992f", "filename": "gcc/testsuite/gcc.target/i386/pr100865-8a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8a.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -20,5 +20,5 @@ foo (void)\n     array[i] = MK_CONST128_BROADCAST_SIGNED (-45);\n }\n \n-/* { dg-final { scan-assembler-times \"(?:vpbroadcastd|vpshufd)\\[\\\\t \\]+\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vpbroadcastd|vpshufd)\\[\\\\t \\]+\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 { xfail *-*-* } } } */\n /* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "99a10ad83bd085f1bc64e786cd7127770025bed7", "filename": "gcc/testsuite/gcc.target/i386/pr100865-8b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8b.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -4,4 +4,4 @@\n #include \"pr100865-8a.c\"\n \n /* { dg-final { scan-assembler-times \"vpbroadcastd\\[\\\\t \\]+%(?:r|e)\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "00682edb8c9f727b210ea412d28f3dac44face27", "filename": "gcc/testsuite/gcc.target/i386/pr100865-8c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-8c.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -3,5 +3,5 @@\n \n #include \"pr100865-8a.c\"\n \n-/* { dg-final { scan-assembler-times \"vpshufd\\[\\\\t \\]+\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpshufd\\[\\\\t \\]+\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 { xfail *-*-* } } } */\n /* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "146962485258e408a6733fc8a29424126164cee6", "filename": "gcc/testsuite/gcc.target/i386/pr100865-9b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-9b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-9b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-9b.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -4,4 +4,4 @@\n #include \"pr100865-9a.c\"\n \n /* { dg-final { scan-assembler-times \"vpbroadcastw\\[\\\\t \\]+%(?:r|e)\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "8ffcdc1629d3ae15e9609d95c6c4d39f7315dc36", "filename": "gcc/testsuite/gcc.target/i386/pr100865-9c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-9c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-9c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100865-9c.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -3,5 +3,5 @@\n \n #include \"pr100865-9a.c\"\n \n-/* { dg-final { scan-assembler-times \"vpshufd\\[\\\\t \\]+\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpshufd\\[\\\\t \\]+\\[^\\n\\]*, %xmm\\[0-9\\]+\" 1 { xfail *-*-* } } } */\n /* { dg-final { scan-assembler-times \"vmovdqa\\[\\\\t \\]%xmm\\[0-9\\]+, \" 16 } } */"}, {"sha": "28c499f4c44e1a969fd983c932454cf9b0652e5d", "filename": "gcc/testsuite/gcc.target/i386/pr104704-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-1.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f\" } */\n+\n+#include <immintrin.h>\n+\n+__m512d y, z;\n+\n+int i;\n+\n+__attribute__((noipa))\n+int\n+do_test (void)\n+{\n+  register int xmm31 __asm (\"xmm31\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm31));\n+  z = y;\n+  register int xmm2 __asm (\"xmm2\") = xmm31;\n+  asm volatile (\"\" : \"+v\" (xmm2));\n+  return xmm2;\n+}\n+\n+__attribute__((target(\"arch=x86-64\")))\n+int\n+main (void)\n+{\n+ if (__builtin_cpu_supports (\"avx512f\"))\n+   {\n+     i = 4;\n+     if (do_test () != 4)\n+       __builtin_abort ();\n+   }\n+  return 0;\n+}"}, {"sha": "79b04b2543a9e8f26fb731a3a6b0f184f718d6dc", "filename": "gcc/testsuite/gcc.target/i386/pr104704-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-2.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx2\" } */\n+\n+#include <immintrin.h>\n+\n+__m256d y, z;\n+\n+int i;\n+\n+__attribute__((noipa))\n+int\n+do_test (void)\n+{\n+  register int xmm15 __asm (\"xmm15\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm15));\n+  z = y;\n+  register int xmm2 __asm (\"xmm2\") = xmm15;\n+  asm volatile (\"\" : \"+v\" (xmm2));\n+  return xmm2;\n+}\n+\n+__attribute__((target(\"arch=x86-64\")))\n+int\n+main (void)\n+{\n+ if (__builtin_cpu_supports (\"avx2\"))\n+   {\n+     i = 4;\n+     if (do_test () != 4)\n+       __builtin_abort ();\n+   }\n+  return 0;\n+}"}, {"sha": "d0648d82fbd0404bdc6106d416f4b20b7fc22507", "filename": "gcc/testsuite/gcc.target/i386/pr104704-3.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-3.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O2 -march=i686 -msse2\" } */\n+\n+#include <immintrin.h>\n+\n+__m128d y, z;\n+\n+int i;\n+\n+__attribute__((noipa))\n+int\n+do_test (void)\n+{\n+  register int xmm7 __asm (\"xmm7\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm7));\n+  z = y;\n+  register int xmm2 __asm (\"xmm2\") = xmm7;\n+  asm volatile (\"\" : \"+v\" (xmm2));\n+  return xmm2;\n+}\n+\n+__attribute__((target(\"arch=i486\")))\n+int\n+main (void)\n+{\n+ if (__builtin_cpu_supports (\"sse2\"))\n+   {\n+     i = 4;\n+     if (do_test () != 4)\n+       __builtin_abort ();\n+   }\n+  return 0;\n+}"}, {"sha": "c97666293b75666e910f533bcaa065bcbb1d611d", "filename": "gcc/testsuite/gcc.target/i386/pr104704-4.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-4.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=x86-64 -mavx512f\" } */\n+\n+#include <immintrin.h>\n+\n+char z[128];\n+\n+int i;\n+\n+__attribute__((noipa))\n+int\n+do_test (void)\n+{\n+  register int xmm31 __asm (\"xmm31\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm31));\n+  __builtin_memset (&z, 0, sizeof (z));\n+  register int xmm2 __asm (\"xmm2\") = xmm31;\n+  asm volatile (\"\" : \"+v\" (xmm2));\n+  return xmm2;\n+}\n+\n+__attribute__((target(\"arch=x86-64\")))\n+int\n+main (void)\n+{\n+ if (__builtin_cpu_supports (\"avx512f\"))\n+   {\n+     i = 4;\n+     if (do_test () != 4)\n+       __builtin_abort ();\n+   }\n+  return 0;\n+}"}, {"sha": "de9466e697d2899b957dec4dc4cdfa71aef8b9a8", "filename": "gcc/testsuite/gcc.target/i386/pr104704-5.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-5.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=x86-64 -mtune=skylake -mavx2\" } */\n+\n+#include <immintrin.h>\n+\n+char z[64];\n+\n+int i;\n+\n+__attribute__((noipa))\n+int\n+do_test (void)\n+{\n+  register int xmm15 __asm (\"xmm15\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm15));\n+  __builtin_memset (&z, 0, sizeof (z));\n+  register int xmm2 __asm (\"xmm2\") = xmm15;\n+  asm volatile (\"\" : \"+v\" (xmm2));\n+  return xmm2;\n+}\n+\n+__attribute__((target(\"arch=x86-64\")))\n+int\n+main (void)\n+{\n+ if (__builtin_cpu_supports (\"avx2\"))\n+   {\n+     i = 4;\n+     if (do_test () != 4)\n+       __builtin_abort ();\n+   }\n+  return 0;\n+}"}, {"sha": "e6a4cb840ee644084abea7905295c435ca745337", "filename": "gcc/testsuite/gcc.target/i386/pr104704-6.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104704-6.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O2 -march=i686 -mtune=skylake -msse2\" } */\n+\n+#include <immintrin.h>\n+\n+char z[16];\n+\n+int i;\n+\n+__attribute__((noipa))\n+int\n+do_test (void)\n+{\n+  register int xmm7 __asm (\"xmm7\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm7));\n+  __builtin_memset (&z, 0, sizeof (z));\n+  register int xmm2 __asm (\"xmm2\") = xmm7;\n+  asm volatile (\"\" : \"+v\" (xmm2));\n+  return xmm2;\n+}\n+\n+__attribute__((target(\"arch=i486\")))\n+int\n+main (void)\n+{\n+ if (__builtin_cpu_supports (\"sse2\"))\n+   {\n+     i = 4;\n+     if (do_test () != 4)\n+       __builtin_abort ();\n+   }\n+  return 0;\n+}"}, {"sha": "d7e530d511613d384fa9715e9d75074ec9316eb1", "filename": "gcc/testsuite/gcc.target/i386/pr82941-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82941-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82941-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82941-1.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -11,5 +11,4 @@ pr82941 ()\n   z = y;\n }\n \n-/* { dg-final { scan-assembler-times \"vzeroupper\" 1 { target ia32 } } } */\n-/* { dg-final { scan-assembler-not \"vzeroupper\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"vzeroupper\" 1 } } */"}, {"sha": "9cdf81a9d6033ff3533b0cc2ea1febbab4cb8e66", "filename": "gcc/testsuite/gcc.target/i386/pr82942-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82942-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82942-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82942-1.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -3,5 +3,4 @@\n \n #include \"pr82941-1.c\"\n \n-/* { dg-final { scan-assembler-times \"vzeroupper\" 1 { target ia32 } } } */\n-/* { dg-final { scan-assembler-not \"vzeroupper\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"vzeroupper\" 1 } } */"}, {"sha": "ff1d6d40eb2688c431bd234eff554d92d5c25f0f", "filename": "gcc/testsuite/gcc.target/i386/pr82990-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-1.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -11,5 +11,4 @@ pr82941 ()\n   z = y;\n }\n \n-/* { dg-final { scan-assembler-times \"vzeroupper\" 1 { target ia32 } } } */\n-/* { dg-final { scan-assembler-not \"vzeroupper\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"vzeroupper\" 1 } } */"}, {"sha": "201fa98d8d413ff23bffecb0deed9073ec2af216", "filename": "gcc/testsuite/gcc.target/i386/pr82990-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-3.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -3,5 +3,4 @@\n \n #include \"pr82941-1.c\"\n \n-/* { dg-final { scan-assembler-times \"vzeroupper\" 1 { target ia32 } } } */\n-/* { dg-final { scan-assembler-not \"vzeroupper\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"vzeroupper\" 1 } } */"}, {"sha": "9932bdc537568e9724e855db308bab071c0f03c9", "filename": "gcc/testsuite/gcc.target/i386/pr82990-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82990-5.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -11,5 +11,4 @@ pr82941 ()\n   z = y;\n }\n \n-/* { dg-final { scan-assembler-times \"vzeroupper\" 1 { target ia32 } } } */\n-/* { dg-final { scan-assembler-not \"vzeroupper\" { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"vzeroupper\" 1 } } */"}, {"sha": "60763bb7c37a4a5f8c62b838cf4642a6c98389ac", "filename": "gcc/testsuite/gcc.target/i386/pr90773-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-14.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -10,4 +10,4 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"movups\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movd\\[\\\\t \\]+%xmm\\[0-9\\]+, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movd\\[\\\\t \\]+%xmm\\[0-9\\]+, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 { xfail *-*-* } } } */"}, {"sha": "570748366f87af5ebb89e7fdf16b494ad4791ecd", "filename": "gcc/testsuite/gcc.target/i386/pr90773-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-17.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -11,4 +11,4 @@ foo (void)\n \n /* { dg-final { scan-assembler-times \"vpbroadcastb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu8\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovd\\[\\\\t \\]+%xmm\\[0-9\\]+, 15\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovd\\[\\\\t \\]+%xmm\\[0-9\\]+, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 { xfail *-*-* } } } */"}, {"sha": "9ef96279960de86f866d9fc4fca74b1bbf940937", "filename": "gcc/testsuite/gcc.target/i386/pr90773-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/609e8c492d62d92465460eae3d43dfc4b2c68288/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-5.c?ref=609e8c492d62d92465460eae3d43dfc4b2c68288", "patch": "@@ -10,4 +10,4 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"movups\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movq\\[\\\\t \\]+%xmm\\[0-9\\]+, 13\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\[\\\\t \\]+%xmm\\[0-9\\]+, 13\\\\(%\\[\\^,\\]+\\\\)\" 1 { xfail *-*-* } } } */"}]}