{"sha": "fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3MDgwZDJjOGFhYjg0MjVmOTg3YzliMTY4ZjRlZDQyYWQ2ODBjZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@apple.com", "date": "2004-06-23T17:05:45Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-06-23T17:05:45Z"}, "message": "[multiple changes]\n\n2004-06-23  Andrew Pinski  <apinski@apple.com>\n\n        * c-typeck.c (composite_type):\n        <case POINTER_TYPE>: Build a qualified type of\n        the new type.\n        <case ARRAY_TYPE>: Likewise.\n        <case FUNCTION_TYPE>: Likewise.\n\n2006-06-23  Andrew Pinski  <apinski@apple.com>\n\n        * gcc.dg/c90-array-quals.c: New test.\n\nFrom-SVN: r83557", "tree": {"sha": "81de925d99dd8d6aac449de7f291d5528e894bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81de925d99dd8d6aac449de7f291d5528e894bd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/comments", "author": null, "committer": null, "parents": [{"sha": "701b17c2dc9a6d35097455e6fd410d4dabce29e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701b17c2dc9a6d35097455e6fd410d4dabce29e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/701b17c2dc9a6d35097455e6fd410d4dabce29e7"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "e2ca75138bc118fb0c92d9a15df8e725e24f274a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "patch": "@@ -1,3 +1,11 @@\n+2004-06-23  Andrew Pinski  <apinski@apple.com>\n+\n+\t* c-typeck.c (composite_type):\n+\t<case POINTER_TYPE>: Build a qualified type of\n+\tthe new type.\n+\t<case ARRAY_TYPE>: Likewise.\n+\t<case FUNCTION_TYPE>: Likewise.\n+\n 2004-06-23  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR optimization/15633"}, {"sha": "6a4e1dbe42f81a6009ad9c1a8a98620ae4bbfca7", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "patch": "@@ -253,7 +253,8 @@ composite_type (tree t1, tree t2)\n \ttree pointed_to_2 = TREE_TYPE (t2);\n \ttree target = composite_type (pointed_to_1, pointed_to_2);\n \tt1 = build_pointer_type (target);\n-\treturn build_type_attribute_variant (t1, attributes);\n+\tt1 = build_type_attribute_variant (t1, attributes);\n+\treturn qualify_type (t1, t2);\n       }\n \n     case ARRAY_TYPE:\n@@ -266,7 +267,8 @@ composite_type (tree t1, tree t2)\n \t  return build_type_attribute_variant (t2, attributes);\n \t/* Merge the element types, and have a size if either arg has one.  */\n \tt1 = build_array_type (elt, TYPE_DOMAIN (TYPE_DOMAIN (t1) ? t1 : t2));\n-\treturn build_type_attribute_variant (t1, attributes);\n+\tt1 = build_type_attribute_variant (t1, attributes);\n+\treturn qualify_type (t1, t2);\n       }\n \n     case FUNCTION_TYPE:\n@@ -289,13 +291,15 @@ composite_type (tree t1, tree t2)\n \t/* Simple way if one arg fails to specify argument types.  */\n \tif (TYPE_ARG_TYPES (t1) == 0)\n \t {\n-\t   t1 = build_function_type (valtype, TYPE_ARG_TYPES (t2));\n-\t   return build_type_attribute_variant (t1, attributes);\n+\t    t1 = build_function_type (valtype, TYPE_ARG_TYPES (t2));\n+\t    t1 = build_type_attribute_variant (t1, attributes);\n+\t    return qualify_type (t1, t2);\n \t }\n \tif (TYPE_ARG_TYPES (t2) == 0)\n \t {\n \t   t1 = build_function_type (valtype, TYPE_ARG_TYPES (t1));\n-\t   return build_type_attribute_variant (t1, attributes);\n+\t   t1 = build_type_attribute_variant (t1, attributes);\n+\t   return qualify_type (t1, t2);\n \t }\n \n \t/* If both args specify argument types, we must merge the two\n@@ -365,6 +369,7 @@ composite_type (tree t1, tree t2)\n \n \tc_override_global_bindings_to_false = false;\n \tt1 = build_function_type (valtype, newargs);\n+\tt1 = qualify_type (t1, t2);\n \t/* ... falls through ...  */\n       }\n "}, {"sha": "2afaf6e07a2418af34231609d0cc532a1ef7933b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "patch": "@@ -1,3 +1,7 @@\n+2006-06-23  Andrew Pinski  <apinski@apple.com>\n+\n+\t* gcc.dg/c90-array-quals.c: New test.\n+\n 2006-06-22  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/noreturn-1.c (foo5): Update function does return lineno."}, {"sha": "228e79f65c9f10924e9fa228a5d10133f0727a2c", "filename": "gcc/testsuite/gcc.dg/c90-array-quals.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-quals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7080d2c8aab8425f987c9b168f4ed42ad680cd/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-quals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-quals.c?ref=fe7080d2c8aab8425f987c9b168f4ed42ad680cd", "patch": "@@ -0,0 +1,3 @@\n+extern int (*const a)[];\n+extern int (*const a)[10];\n+extern int (*const a)[];"}]}