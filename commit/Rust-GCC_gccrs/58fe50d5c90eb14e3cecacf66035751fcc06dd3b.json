{"sha": "58fe50d5c90eb14e3cecacf66035751fcc06dd3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThmZTUwZDVjOTBlYjE0ZTNjZWNhY2Y2NjAzNTc1MWZjYzA2ZGQzYg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2013-10-28T03:26:58Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2013-10-28T03:26:58Z"}, "message": "tree-ssa-loop-ivopts.c (strip_offset_1): Change parameter type.\n\n\t* tree-ssa-loop-ivopts.c (strip_offset_1): Change parameter type.\n\tCount DECL_FIELD_BIT_OFFSET for COMPONENT_REF.\n\t(strip_offset): Convert offset to unsigned number.\n\nFrom-SVN: r204116", "tree": {"sha": "38cdfd7e7a7dee8c0659010ec6aae19ac9d32a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38cdfd7e7a7dee8c0659010ec6aae19ac9d32a29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58fe50d5c90eb14e3cecacf66035751fcc06dd3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fe50d5c90eb14e3cecacf66035751fcc06dd3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fe50d5c90eb14e3cecacf66035751fcc06dd3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fe50d5c90eb14e3cecacf66035751fcc06dd3b/comments", "author": null, "committer": null, "parents": [{"sha": "b72631e8518562d44530a1a96de427ac6eeca1eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b72631e8518562d44530a1a96de427ac6eeca1eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b72631e8518562d44530a1a96de427ac6eeca1eb"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "461439a308b7c273687ad1b0d11312aaf1836d46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fe50d5c90eb14e3cecacf66035751fcc06dd3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fe50d5c90eb14e3cecacf66035751fcc06dd3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58fe50d5c90eb14e3cecacf66035751fcc06dd3b", "patch": "@@ -1,3 +1,9 @@\n+2013-10-28  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (strip_offset_1): Change parameter type.\n+\tCount DECL_FIELD_BIT_OFFSET for COMPONENT_REF.\n+\t(strip_offset): Convert offset to unsigned number.\n+\n 2013-10-27  Tom de Vries  <tom@codesourcery.com>\n \n \t* cfgexpand.c (gimple_expand_cfg): Remove test for parm_birth_insn."}, {"sha": "0210dbbad3df77299bc5ad12522c798038243ad6", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fe50d5c90eb14e3cecacf66035751fcc06dd3b/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fe50d5c90eb14e3cecacf66035751fcc06dd3b/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=58fe50d5c90eb14e3cecacf66035751fcc06dd3b", "patch": "@@ -2023,12 +2023,12 @@ find_interesting_uses (struct ivopts_data *data)\n \n static tree\n strip_offset_1 (tree expr, bool inside_addr, bool top_compref,\n-\t\tunsigned HOST_WIDE_INT *offset)\n+\t\tHOST_WIDE_INT *offset)\n {\n   tree op0 = NULL_TREE, op1 = NULL_TREE, tmp, step;\n   enum tree_code code;\n   tree type, orig_type = TREE_TYPE (expr);\n-  unsigned HOST_WIDE_INT off0, off1, st;\n+  HOST_WIDE_INT off0, off1, st;\n   tree orig_expr = expr;\n \n   STRIP_NOPS (expr);\n@@ -2119,19 +2119,32 @@ strip_offset_1 (tree expr, bool inside_addr, bool top_compref,\n       break;\n \n     case COMPONENT_REF:\n-      if (!inside_addr)\n-\treturn orig_expr;\n+      {\n+\ttree field;\n \n-      tmp = component_ref_field_offset (expr);\n-      if (top_compref\n-\t  && cst_and_fits_in_hwi (tmp))\n-\t{\n-\t  /* Strip the component reference completely.  */\n-\t  op0 = TREE_OPERAND (expr, 0);\n-\t  op0 = strip_offset_1 (op0, inside_addr, top_compref, &off0);\n-\t  *offset = off0 + int_cst_value (tmp);\n-\t  return op0;\n-\t}\n+\tif (!inside_addr)\n+\t  return orig_expr;\n+\n+\ttmp = component_ref_field_offset (expr);\n+\tfield = TREE_OPERAND (expr, 1);\n+\tif (top_compref\n+\t    && cst_and_fits_in_hwi (tmp)\n+\t    && cst_and_fits_in_hwi (DECL_FIELD_BIT_OFFSET (field)))\n+\t  {\n+\t    HOST_WIDE_INT boffset, abs_off;\n+\n+\t    /* Strip the component reference completely.  */\n+\t    op0 = TREE_OPERAND (expr, 0);\n+\t    op0 = strip_offset_1 (op0, inside_addr, top_compref, &off0);\n+\t    boffset = int_cst_value (DECL_FIELD_BIT_OFFSET (field));\n+\t    abs_off = abs_hwi (boffset) / BITS_PER_UNIT;\n+\t    if (boffset < 0)\n+\t      abs_off = -abs_off;\n+\n+\t    *offset = off0 + int_cst_value (tmp) + abs_off;\n+\t    return op0;\n+\t  }\n+      }\n       break;\n \n     case ADDR_EXPR:\n@@ -2182,7 +2195,10 @@ strip_offset_1 (tree expr, bool inside_addr, bool top_compref,\n static tree\n strip_offset (tree expr, unsigned HOST_WIDE_INT *offset)\n {\n-  return strip_offset_1 (expr, false, false, offset);\n+  HOST_WIDE_INT off;\n+  tree core = strip_offset_1 (expr, false, false, &off);\n+  *offset = off;\n+  return core;\n }\n \n /* Returns variant of TYPE that can be used as base for different uses."}]}