{"sha": "9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQxOTg5MTM4NmMzZDBhNDYyNmI2YzA4YTRiY2M3ZGQ5ZjU2Y2ZiNQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-03-13T17:35:08Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-13T17:35:08Z"}, "message": "Document PARAM_LOOP_BLOCK_TILE_SIZE.\n\n2010-03-09  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* doc/invoke.texi (PARAM_LOOP_BLOCK_TILE_SIZE): Document.\n\nFrom-SVN: r157435", "tree": {"sha": "9deb693dc124e10203d6089824623291943a423e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9deb693dc124e10203d6089824623291943a423e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f3803148ffa5702cb86f43a6bf2ecaeacb1b1bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3803148ffa5702cb86f43a6bf2ecaeacb1b1bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3803148ffa5702cb86f43a6bf2ecaeacb1b1bd"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "3a49ccc5288531593acc28a134f304b46ce799bd", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5", "patch": "@@ -1,3 +1,7 @@\n+2010-03-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* doc/invoke.texi (PARAM_LOOP_BLOCK_TILE_SIZE): Document.\n+\n 2010-03-09  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/43306"}, {"sha": "8648405e130cf8f762a4491776d651eadd63b6ae", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9d19891386c3d0a4626b6c08a4bcc7dd9f56cfb5", "patch": "@@ -6675,16 +6675,18 @@ Graphite loop transformation infrastructure.\n Perform loop strip mining transformations on loops.  Strip mining\n splits a loop into two nested loops.  The outer loop has strides\n equal to the strip size and the inner loop has strides of the\n-original loop within a strip.  For example, given a loop like:\n+original loop within a strip.  The strip length can be changed\n+using the @option{loop-block-tile-size} parameter.  For example,\n+given a loop like:\n @smallexample\n DO I = 1, N\n   A(I) = A(I) + C\n ENDDO\n @end smallexample\n loop strip mining will transform the loop as if the user had written:\n @smallexample\n-DO II = 1, N, 4\n-  DO I = II, min (II + 3, N)\n+DO II = 1, N, 51\n+  DO I = II, min (II + 50, N)\n     A(I) = A(I) + C\n   ENDDO\n ENDDO\n@@ -6697,7 +6699,9 @@ enable the Graphite loop transformation infrastructure.\n @item -floop-block\n Perform loop blocking transformations on loops.  Blocking strip mines\n each loop in the loop nest such that the memory accesses of the\n-element loops fit inside caches.  For example, given a loop like:\n+element loops fit inside caches.  The strip length can be changed\n+using the @option{loop-block-tile-size} parameter.  For example, given\n+a loop like:\n @smallexample\n DO I = 1, N\n   DO J = 1, M\n@@ -6707,10 +6711,10 @@ ENDDO\n @end smallexample\n loop blocking will transform the loop as if the user had written:\n @smallexample\n-DO II = 1, N, 64\n-  DO JJ = 1, M, 64\n-    DO I = II, min (II + 63, N)\n-      DO J = JJ, min (JJ + 63, M)\n+DO II = 1, N, 51\n+  DO JJ = 1, M, 51\n+    DO I = II, min (II + 50, N)\n+      DO J = JJ, min (JJ + 50, M)\n         A(J, I) = B(I) + C(J)\n       ENDDO\n     ENDDO\n@@ -8501,6 +8505,11 @@ To avoid exponential effects in the detection of SCoPs, the functions\n with more than 100 basic blocks are not handled by the Graphite loop\n transforms.\n \n+@item loop-block-tile-size\n+The default factor for the loop blocking or strip mining transforms,\n+enabled with @option{-floop-block} or @option{-floop-strip-mine}, is\n+51.\n+\n @end table\n @end table\n "}]}