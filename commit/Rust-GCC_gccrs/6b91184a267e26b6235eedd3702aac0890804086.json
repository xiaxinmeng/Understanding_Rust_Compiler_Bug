{"sha": "6b91184a267e26b6235eedd3702aac0890804086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI5MTE4NGEyNjdlMjZiNjIzNWVlZGQzNzAyYWFjMDg5MDgwNDA4Ng==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-01T16:48:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-01T16:48:43Z"}, "message": "Merge #463\n\n463: Always print compiler debug info on stderr r=philberty a=CohenArthur\n\nI am starting my work on cargo-gccrs, and the output from the compiler messes with what cargo expects as output. Since much of the debug prints are already done on `stderr` instead of `stdout`, this PR fixes what I believe to be the few remaining cases using `stdout`.\r\n\r\nI used the following regexes (with ripgrep) to find all remaining instances of debug prints on `stdout`: `[^f]printf` and `fprintf \\(stdout`\n\nCo-authored-by: CohenArthur <arthur.cohen@epita.fr>", "tree": {"sha": "40c2b9406232c6a263197f24207bef4756a75b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40c2b9406232c6a263197f24207bef4756a75b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b91184a267e26b6235eedd3702aac0890804086", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgtmTrCRBK7hj4Ov3rIwAAnQwIAAndb5oaheLUqhaYZF4r7n69\n1GvwUZ3J17YewNjCuuyAv9Nj3i2FJcMNRqnA5yBPSCUSl8LzMlt8p5OTFh+P6uVk\nqn3MOw+aHWcAaUjS6Xmbjc8FKNkocaG8ZOJ28FqbgpUXGnXeDPZgteiudPrPiXKf\nhrZgS3DWgY8dbv7ZKFUS3Y6Dsbb4azE8xjjcibXqkp52m93K89cUpBmcbDkBdwVk\n7lJ7GQ3Hp7sgaaoGg86Xqjkcq1hxjuU5R7uZ6e+Od1vQenlVYysBxlHh4rVf94JR\nFlepHPGyY4hpckqNNsbzMSDOcUNoL/D4qkbfzpdqK69ykycDS2zBVDHTe1iMRdM=\n=sH+l\n-----END PGP SIGNATURE-----\n", "payload": "tree 40c2b9406232c6a263197f24207bef4756a75b19\nparent 2a644a5ebb5e4b8f8dd52e5da1c87b73f2ae7f1b\nparent 40d74620519e1157a2008dbc06821dfda8b295da\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622566123 +0000\ncommitter GitHub <noreply@github.com> 1622566123 +0000\n\nMerge #463\n\n463: Always print compiler debug info on stderr r=philberty a=CohenArthur\n\nI am starting my work on cargo-gccrs, and the output from the compiler messes with what cargo expects as output. Since much of the debug prints are already done on `stderr` instead of `stdout`, this PR fixes what I believe to be the few remaining cases using `stdout`.\r\n\r\nI used the following regexes (with ripgrep) to find all remaining instances of debug prints on `stdout`: `[^f]printf` and `fprintf \\(stdout`\n\nCo-authored-by: CohenArthur <arthur.cohen@epita.fr>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b91184a267e26b6235eedd3702aac0890804086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b91184a267e26b6235eedd3702aac0890804086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b91184a267e26b6235eedd3702aac0890804086/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a644a5ebb5e4b8f8dd52e5da1c87b73f2ae7f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a644a5ebb5e4b8f8dd52e5da1c87b73f2ae7f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a644a5ebb5e4b8f8dd52e5da1c87b73f2ae7f1b"}, {"sha": "40d74620519e1157a2008dbc06821dfda8b295da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d74620519e1157a2008dbc06821dfda8b295da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d74620519e1157a2008dbc06821dfda8b295da"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2c4399e934933f54412cbe7f2bed087858d289b4", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b91184a267e26b6235eedd3702aac0890804086/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b91184a267e26b6235eedd3702aac0890804086/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=6b91184a267e26b6235eedd3702aac0890804086", "patch": "@@ -456,7 +456,7 @@ Session::parse_files (int num_files, const char **files)\n \n   for (int i = 0; i < num_files; i++)\n     {\n-      printf (\"Attempting to parse file: %s\\n\", files[i]);\n+      fprintf (stderr, \"Attempting to parse file: %s\\n\", files[i]);\n       parse_file (files[i]);\n     }\n   /* TODO: should semantic analysis be dealed with here? or per file? for now,"}, {"sha": "285ed1c2c40a380a04717dce531b2718b5a3539d", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b91184a267e26b6235eedd3702aac0890804086/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b91184a267e26b6235eedd3702aac0890804086/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=6b91184a267e26b6235eedd3702aac0890804086", "patch": "@@ -142,8 +142,8 @@ class BaseType\n \n   void debug () const\n   {\n-    printf (\"[%p] %s\\n\", static_cast<const void *> (this),\n-\t    debug_str ().c_str ());\n+    fprintf (stderr, \"[%p] %s\\n\", static_cast<const void *> (this),\n+\t     debug_str ().c_str ());\n   }\n \n protected:\n@@ -319,7 +319,7 @@ class StructFieldType\n \n   StructFieldType *clone () const;\n \n-  void debug () const { printf (\"%s\\n\", as_string ().c_str ()); }\n+  void debug () const { fprintf (stderr, \"%s\\n\", as_string ().c_str ()); }\n \n private:\n   HirId ref;"}]}