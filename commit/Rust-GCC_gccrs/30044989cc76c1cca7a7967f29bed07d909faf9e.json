{"sha": "30044989cc76c1cca7a7967f29bed07d909faf9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwNDQ5ODljYzc2YzFjY2E3YTc5NjdmMjliZWQwN2Q5MDlmYWY5ZQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-04-07T10:12:48Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-04-07T10:12:48Z"}, "message": "[NDS32] Clean up nds32.h.\n\ngcc/\n\t* config/nds32/nds32.h: Clean up obsolete macros.\n\nFrom-SVN: r259209", "tree": {"sha": "89e21e334b6afd9a09579c2e4a55afc96a97f909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89e21e334b6afd9a09579c2e4a55afc96a97f909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30044989cc76c1cca7a7967f29bed07d909faf9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30044989cc76c1cca7a7967f29bed07d909faf9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30044989cc76c1cca7a7967f29bed07d909faf9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30044989cc76c1cca7a7967f29bed07d909faf9e/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2feae6cdf25ad2d1cb2fc48ab000b4ca4c5ec793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feae6cdf25ad2d1cb2fc48ab000b4ca4c5ec793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2feae6cdf25ad2d1cb2fc48ab000b4ca4c5ec793"}], "stats": {"total": 63, "additions": 4, "deletions": 59}, "files": [{"sha": "f758d3712b11ef5a4d6eb526383234bb8681e7f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30044989cc76c1cca7a7967f29bed07d909faf9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30044989cc76c1cca7a7967f29bed07d909faf9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30044989cc76c1cca7a7967f29bed07d909faf9e", "patch": "@@ -1,3 +1,7 @@\n+2018-04-07  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.h: Clean up obsolete macros.\n+\n 2018-04-07  Monk Chiang  <sh.chiang04@gmail.com>\n \n \t* config/nds32/constants.md (unspec_element, unspec_volatile_element):"}, {"sha": "330252fb57ae4263f24cd2d50eb2ae87b84f1ab1", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30044989cc76c1cca7a7967f29bed07d909faf9e/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30044989cc76c1cca7a7967f29bed07d909faf9e/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=30044989cc76c1cca7a7967f29bed07d909faf9e", "patch": "@@ -44,65 +44,6 @@ enum nds32_expand_result_type\n   EXPAND_CREATE_TEMPLATE\n };\n \n-/* Check instruction LS-37-FP-implied form.\n-   Note: actually its immediate range is imm9u\n-         since it is used for lwi37/swi37 instructions.  */\n-#define NDS32_LS_37_FP_P(rt, ra, imm)       \\\n-  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS \\\n-   && REGNO (ra) == FP_REGNUM               \\\n-   && satisfies_constraint_Iu09 (imm))\n-\n-/* Check instruction LS-37-SP-implied form.\n-   Note: actually its immediate range is imm9u\n-         since it is used for lwi37/swi37 instructions.  */\n-#define NDS32_LS_37_SP_P(rt, ra, imm)       \\\n-  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS \\\n-   && REGNO (ra) == SP_REGNUM               \\\n-   && satisfies_constraint_Iu09 (imm))\n-\n-\n-/* Check load/store instruction form : Rt3, Ra3, imm3u.  */\n-#define NDS32_LS_333_P(rt, ra, imm, mode) nds32_ls_333_p (rt, ra, imm, mode)\n-\n-/* Check load/store instruction form : Rt4, Ra5, const_int_0.\n-   Note: no need to check ra because Ra5 means it covers all registers.  */\n-#define NDS32_LS_450_P(rt, ra, imm)                     \\\n-  ((imm == const0_rtx)                                  \\\n-   && (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS         \\\n-       || REGNO_REG_CLASS (REGNO (rt)) == MIDDLE_REGS))\n-\n-/* Check instruction RRI-333-form.  */\n-#define NDS32_RRI_333_P(rt, ra, imm)           \\\n-  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS    \\\n-   && REGNO_REG_CLASS (REGNO (ra)) == LOW_REGS \\\n-   && satisfies_constraint_Iu03 (imm))\n-\n-/* Check instruction RI-45-form.  */\n-#define NDS32_RI_45_P(rt, ra, imm)                     \\\n-  (REGNO (rt) == REGNO (ra)                            \\\n-   && (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS        \\\n-       || REGNO_REG_CLASS (REGNO (rt)) == MIDDLE_REGS) \\\n-   && satisfies_constraint_Iu05 (imm))\n-\n-\n-/* Check instruction RR-33-form.  */\n-#define NDS32_RR_33_P(rt, ra)                   \\\n-  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS     \\\n-   && REGNO_REG_CLASS (REGNO (ra)) == LOW_REGS)\n-\n-/* Check instruction RRR-333-form.  */\n-#define NDS32_RRR_333_P(rt, ra, rb)             \\\n-  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS     \\\n-   && REGNO_REG_CLASS (REGNO (ra)) == LOW_REGS  \\\n-   && REGNO_REG_CLASS (REGNO (rb)) == LOW_REGS)\n-\n-/* Check instruction RR-45-form.\n-   Note: no need to check rb because Rb5 means it covers all registers.  */\n-#define NDS32_RR_45_P(rt, ra, rb)               \\\n-  (REGNO (rt) == REGNO (ra)                     \\\n-   && (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS \\\n-       || REGNO_REG_CLASS (REGNO (rt)) == MIDDLE_REGS))\n-\n /* Classifies address type to distinguish 16-bit/32-bit format.  */\n enum nds32_16bit_address_type\n {"}]}