{"sha": "9d72d99675ced5b9f02313c05f01de2a8d03b8d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3MmQ5OTY3NWNlZDViOWYwMjMxM2MwNWYwMWRlMmE4ZDAzYjhkOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-01-27T12:41:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-01-27T12:41:40Z"}, "message": "* config/i386/i386.h (CALL_USED_REGISTERS): Fix comment pastos.\n\nFrom-SVN: r94321", "tree": {"sha": "bfe176bfc63b09c8186796d81d7480702cca718d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfe176bfc63b09c8186796d81d7480702cca718d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d72d99675ced5b9f02313c05f01de2a8d03b8d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d72d99675ced5b9f02313c05f01de2a8d03b8d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d72d99675ced5b9f02313c05f01de2a8d03b8d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d72d99675ced5b9f02313c05f01de2a8d03b8d8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8dd2f3a64a689127b43a7b4ca3260d93b977cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8dd2f3a64a689127b43a7b4ca3260d93b977cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8dd2f3a64a689127b43a7b4ca3260d93b977cc5"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "47c64d85887fa36074b4112e11611ddd578494e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d72d99675ced5b9f02313c05f01de2a8d03b8d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d72d99675ced5b9f02313c05f01de2a8d03b8d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d72d99675ced5b9f02313c05f01de2a8d03b8d8", "patch": "@@ -1,5 +1,7 @@\n 2005-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/i386.h (CALL_USED_REGISTERS): Fix comment pastos.\n+\n \tPR c/18946\n \t* c-decl.c (warn_if_shadowing): Handle old_decl error_mark_node.\n \t(pushdecl): Only use DECL_FILE_SCOPE_P if DECL_P."}, {"sha": "e155a4f56e45f50bdeae80e523a46c9ab77970d9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d72d99675ced5b9f02313c05f01de2a8d03b8d8/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d72d99675ced5b9f02313c05f01de2a8d03b8d8/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9d72d99675ced5b9f02313c05f01de2a8d03b8d8", "patch": "@@ -967,10 +967,10 @@ extern int x86_prefetch_sse;\n    and the register where structure-value addresses are passed.\n    Aside from that, you can include as many other registers as you like.\n \n-   The value is zero if the register is not fixed on either 32 or\n-   64 bit targets, one if the register if fixed on both 32 and 64\n-   bit targets, two if it is only fixed on 32bit targets and three\n-   if its only fixed on 64bit targets.\n+   The value is zero if the register is not call used on either 32 or\n+   64 bit targets, one if the register if call used on both 32 and 64\n+   bit targets, two if it is only call used on 32bit targets and three\n+   if its only call used on 64bit targets.\n    Proper values are computed in the CONDITIONAL_REGISTER_USAGE.\n */\n #define CALL_USED_REGISTERS\t\t\t\t\t\\\n@@ -1735,7 +1735,7 @@ typedef struct ix86_args {\n   int words;\t\t\t/* # words passed so far */\n   int nregs;\t\t\t/* # registers available for passing */\n   int regno;\t\t\t/* next available register number */\n-  int fastcall;\t\t/* fastcall calling convention is used */\n+  int fastcall;\t\t\t/* fastcall calling convention is used */\n   int sse_words;\t\t/* # sse words passed so far */\n   int sse_nregs;\t\t/* # sse registers available for passing */\n   int warn_sse;\t\t\t/* True when we want to warn about SSE ABI.  */"}]}