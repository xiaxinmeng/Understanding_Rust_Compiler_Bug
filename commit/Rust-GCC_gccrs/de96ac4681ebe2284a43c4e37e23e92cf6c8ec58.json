{"sha": "de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU5NmFjNDY4MWViZTIyODRhNDNjNGUzN2UyM2U5MmNmNmM4ZWM1OA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-06-08T23:22:26Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-06-08T23:22:26Z"}, "message": "*: Add copyright notice.\n\n\n2001-06-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/2767\n\tlibstdc++/2989\n\tlibstdc++/2992\n\t* include/std/*: Add copyright notice.\n\t* include/c_std/bits/*: Use using statements instead of extern \"C\".\n\t* include/c_std/bits/std_cmath.h: Don't overload double versions\n\tof math functions with __buitin versions, use global version to\n\tprevent ambiguities. Remove define hacks.\n\t* include/c_std/bits/std_cwchar.h: Using declarations for \"C\"\n\tfunctions that have changed signatures and std::\n\tdeclarations. Remove define hacks.\n\t* include/c_std/bits/std_cwchar.h: Same, plus remove ambiguous\n\t__builtins in std::. Remove define hacks.\n\t* testsuite/17_intro/headers_c.cc: Add tests.\n\t* testsuite/17_intro/headers_c++.cc: Add test.\n\nFrom-SVN: r43061", "tree": {"sha": "5b2ccfa15614160e0477485463b1b2a6313742bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b2ccfa15614160e0477485463b1b2a6313742bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/comments", "author": null, "committer": null, "parents": [{"sha": "86c99549914362bc54b0872166324522901c2ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c99549914362bc54b0872166324522901c2ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c99549914362bc54b0872166324522901c2ca1"}], "stats": {"total": 2231, "additions": 1705, "deletions": 526}, "files": [{"sha": "de335218f43d7db330e7b57650ab2d5c74f3e276", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,21 @@\n+2001-06-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/2767\n+\tlibstdc++/2989\n+\tlibstdc++/2992\n+\t* include/std/*: Add copyright notice.\n+\t* include/c_std/bits/*: Use using statements instead of extern \"C\".\n+\t* include/c_std/bits/std_cmath.h: Don't overload double versions\n+\tof math functions with __buitin versions, use global version to\n+\tprevent ambiguities. Remove define hacks.\n+\t* include/c_std/bits/std_cwchar.h: Using declarations for \"C\"\n+\tfunctions that have changed signatures and std::\n+\tdeclarations. Remove define hacks.\n+\t* include/c_std/bits/std_cwchar.h: Same, plus remove ambiguous\n+\t__builtins in std::. Remove define hacks.\n+\t* testsuite/17_intro/headers_c.cc: Add tests.\n+\t* testsuite/17_intro/headers_c++.cc: Add test.\n+\n 2001-06-07  Loren J. Rittle  <ljrittle@acm.org>\n \t    John David Anglin  <dave@hiauly1.hia.nrc.ca>\n "}, {"sha": "533f2e23967eb538663d3dc23e47cd63a7c09313", "filename": "libstdc++-v3/include/c_std/bits/std_cassert.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -34,7 +34,7 @@\n // No include guards on this header...\n \n #pragma GCC system_header\n-#include <assert.h>\n+#include_next <assert.h>\n \n \n "}, {"sha": "f03a93d82a181d718b3b9ecdc890da0449e1fc57", "filename": "libstdc++-v3/include/c_std/bits/std_cctype.h", "status": "modified", "additions": 15, "deletions": 29, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cctype.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,15 +31,13 @@\n // ISO C++ 14882: <ccytpe>\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CCTYPE\n #define _CPP_CCTYPE 1\n \n #include <bits/c++config.h>\n \n #pragma GCC system_header\n-#include <ctype.h>\n+#include_next <ctype.h>\n \n // Get rid of those macros defined in <ctype.h> in lieu of real functions.\n #undef isalnum\n@@ -59,32 +57,20 @@\n \n namespace std\n {\n-  extern \"C\" int isalnum(int __c);\n-  extern \"C\" int isalpha(int __c);\n-  extern \"C\" int isblank(int __c);\n-  extern \"C\" int iscntrl(int __c);\n-  extern \"C\" int isdigit(int __c);\n-  extern \"C\" int isgraph(int __c);\n-  extern \"C\" int islower(int __c);\n-  extern \"C\" int isprint(int __c);\n-  extern \"C\" int ispunct(int __c);\n-  extern \"C\" int isspace(int __c);\n-  extern \"C\" int isupper(int __c);\n-  extern \"C\" int isxdigit(int __c);\n-  extern \"C\" int tolower(int __c);\n-  extern \"C\" int toupper(int __c);\n+  using ::isalnum;\n+  using ::isalpha;\n+  using ::isblank;\n+  using ::iscntrl;\n+  using ::isdigit;\n+  using ::isgraph;\n+  using ::islower;\n+  using ::isprint;\n+  using ::ispunct;\n+  using ::isspace;\n+  using ::isupper;\n+  using ::isxdigit;\n+  using ::tolower;\n+  using ::toupper;\n }\n \n #endif \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "cb5a94f476278ab93f9fe96e07f875441b280d6a", "filename": "libstdc++-v3/include/c_std/bits/std_cerrno.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,13 +31,11 @@\n // ISO C++ 14882: 19.3  Error numbers\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CERRNO\n #define _CPP_CERRNO 1\n \n #pragma GCC system_header\n-#include <errno.h>\n+#include_next <errno.h>\n \n // Adhere to section 17.4.1.2 clause 5 of ISO 14882:1998\n #ifndef errno"}, {"sha": "0dfdd2eaf5f7a187abaaae5363488b08d3e1b42b", "filename": "libstdc++-v3/include/c_std/bits/std_cfloat.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cfloat.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,13 +31,10 @@\n // ISO C++ 14882: 18.2.2  Implementation properties: C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CFLOAT\n #define _CPP_CFLOAT 1\n \n #pragma GCC system_header\n-#include <float.h>\n+#include_next <float.h>\n \n #endif\n-"}, {"sha": "1eb8c0bb27a86dcc15a0ee811213ee484469328c", "filename": "libstdc++-v3/include/c_std/bits/std_climits.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_climits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_climits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_climits.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,17 +31,10 @@\n // ISO C++ 14882: 18.2.2  Implementation properties: C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CLIMITS\n #define _CPP_CLIMITS\t1\n \n #pragma GCC system_header\n-#include <limits.h>\n+#include_next <limits.h>\n \n #endif\n-\n-\n-\n-\n-"}, {"sha": "9a3da1986b61bfcc408f640cc85b16a3922adf70", "filename": "libstdc++-v3/include/c_std/bits/std_clocale.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_clocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_clocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_clocale.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,15 +31,13 @@\n // ISO C++ 14882: 18.2.2  Implementation properties: C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CLOCALE\n #define _CPP_CLOCALE 1\n \n #include <bits/c++config.h>\n \n #pragma GCC system_header\n-#include <locale.h>\n+#include_next <locale.h>\n \n // Get rid of those macros defined in <locale.h> in lieu of real functions.\n #undef setlocale\n@@ -48,11 +46,8 @@\n namespace std\n {\n   using ::lconv;\n-  extern \"C\" char* setlocale(int, const char*); \n-  extern \"C\" struct lconv* localeconv(void);\n+  using ::setlocale;\n+  using ::localeconv;\n }\n \n #endif\n-\n-\n-"}, {"sha": "312e0a699220c4ba235624cd426850b3da74052b", "filename": "libstdc++-v3/include/c_std/bits/std_cmath.h", "status": "modified", "additions": 27, "deletions": 99, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,26 +31,13 @@\n // ISO C++ 14882: 26.5  C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CMATH\n #define _CPP_CMATH 1\n \n #include <bits/c++config.h>\n-#include <bits/std_cstdlib.h>\n- \n-#pragma GCC system_header\n-\n-// Need to mangle these \"C\" functions.  Ideally, we could like to do the\n-// same for the remaining of the \"C\" functions but they do not have\n-// builtin implementations.  So, they are still of nuisance.\n-#define abs __glibcpp_abs\n-#define cos __glibcpp_cos\n-#define fabs __glibcpp_fabs\n-#define sin __glibcpp_sin\n-#define sqrt __glibcpp_sqrt\n \n-#include <math.h>\n+#pragma GCC system_header\n+#include_next <math.h>\n \n // Get rid of those macros defined in <math.h> in lieu of real functions.\n #undef abs\n@@ -91,7 +78,6 @@ namespace std\n       return __x < _Tp() ? -__x : __x;\n     }\n \n-  // abs.\n   inline float\n   abs(float __x)\n   { return __builtin_fabsf(__x); }\n@@ -104,8 +90,6 @@ namespace std\n   abs(long double __x)\n   { return __builtin_fabsl(__x); }\n \n-\n-  // acos.\n #if _GLIBCPP_HAVE_ACOSF\n   inline float \n   acos(float __x) { return ::acosf(__x); }\n@@ -114,7 +98,7 @@ namespace std\n   acos(float __x) { return ::acos(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double acos(double __x);\n+  using ::acos;\n   \n #if _GLIBCPP_HAVE_ACOSL\n   inline long double \n@@ -124,8 +108,6 @@ namespace std\n   acos(long double __x) { return ::acos(static_cast<double>(__x)); }\n #endif\n \n-\n-  // asin.\n #if _GLIBCPP_HAVE_ASINF\n   inline float \n   asin(float __x) { return ::asinf(__x); }\n@@ -134,7 +116,7 @@ namespace std\n   asin(float __x) { return ::asin(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double asin(double __x);\n+  using ::asin;\n \n #if _GLIBCPP_HAVE_ASINL\n   inline long double \n@@ -144,8 +126,6 @@ namespace std\n   asin(long double __x) { return ::asin(static_cast<double>(__x)); }\n #endif\n \n-\n-  // atan.\n #if _GLIBCPP_HAVE_ATANF\n   inline float \n   atan(float __x) { return ::atanf(__x); }\n@@ -154,7 +134,7 @@ namespace std\n   atan(float __x) { return ::atan(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double atan(double __x);\n+  using ::atan;\n \n #if _GLIBCPP_HAVE_ATANL\n   inline long double \n@@ -164,8 +144,6 @@ namespace std\n   atan(long double __x) { return ::atan(static_cast<double>(__x)); }\n #endif\n \n-\n-  // atan2.\n #if _GLIBCPP_HAVE_ATAN2F\n   inline float \n   atan2(float __y, float __x) { return ::atan2f(__y, __x); }\n@@ -175,7 +153,7 @@ namespace std\n   { return ::atan2(static_cast<double>(__y), static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double atan2(double __y, double __x);\n+  using ::atan2;\n \n #if _GLIBCPP_HAVE_ATAN2L\n   inline long double \n@@ -186,8 +164,6 @@ namespace std\n   { return ::atan2(static_cast<double>(__y), static_cast<double>(__x)); }\n #endif\n \n-\n-  // ceil.\n #if _GLIBCPP_HAVE_CEILF\n   inline float \n   ceil(float __x) { return ::ceilf(__x); }\n@@ -196,7 +172,7 @@ namespace std\n   ceil(float __x) { return ::ceil(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double ceil(double __x);\n+  using ::ceil;\n \n #if _GLIBCPP_HAVE_CEILL\n   inline long double \n@@ -206,22 +182,16 @@ namespace std\n   ceil(long double __x) { return ::ceil(static_cast<double>(__x)); }\n #endif\n \n-\n-  // cos.\n   inline float\n   cos(float __x)\n   { return __builtin_cosf(__x); }\n \n-  inline double\n-  cos(double __x)\n-  { return __builtin_cos(__x); }\n+  using ::cos;\n \n   inline long double\n   cos(long double __x)\n   { return __builtin_cosl(__x); }\n \n-\n-  // cosh.\n #if _GLIBCPP_HAVE_COSHF\n   inline float \n   cosh(float __x) { return ::coshf(__x); }\n@@ -230,7 +200,7 @@ namespace std\n   cosh(float __x) { return ::cosh(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double cosh(double __x);\n+  using ::cosh;\n \n #if _GLIBCPP_HAVE_COSHL\n   inline long double \n@@ -240,8 +210,6 @@ namespace std\n   cosh(long double __x) { return ::cosh(static_cast<double>(__x)); }\n #endif\n \n-\n-  // exp.\n #if _GLIBCPP_HAVE_EXPF\n   inline float \n   exp(float __x) { return ::expf(__x); }\n@@ -250,7 +218,7 @@ namespace std\n   exp(float __x) { return ::exp(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double exp(double __x);\n+  using ::exp;\n \n #if _GLIBCPP_HAVE_EXPL\n   inline long double \n@@ -260,22 +228,16 @@ namespace std\n   exp(long double __x) { return ::exp(static_cast<double>(__x)); }\n #endif\n \n-\n-  // fabs.\n   inline float\n   fabs(float __x)\n   { return __builtin_fabsf(__x); }\n \n-  inline double\n-  fabs(double __x)\n-  { return __builtin_fabs(__x); }\n+  using ::fabs;\n \n   inline long double\n   fabs(long double __x)\n   { return __builtin_fabsl(__x); }\n \n-\n-  // floor.\n #if _GLIBCPP_HAVE_FLOORF\n   inline float \n   floor(float __x) { return ::floorf(__x); }\n@@ -284,7 +246,7 @@ namespace std\n   floor(float __x) { return ::floor(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double floor(double __x);\n+  using ::floor;\n \n #if _GLIBCPP_HAVE_FLOORL\n   inline long double \n@@ -294,8 +256,6 @@ namespace std\n   floor(long double __x) { return ::floor(static_cast<double>(__x)); }\n #endif\n \n-\n-  // fmod.\n #if _GLIBCPP_HAVE_FMODF\n   inline float \n   fmod(float __x, float __y) { return ::fmodf(__x, __y); }\n@@ -305,7 +265,7 @@ namespace std\n   { return ::fmod(static_cast<double>(__x), static_cast<double>(__y)); }\n #endif\n \n-  extern \"C\" double fmod(double __x, double __y);\n+  using ::fmod;\n \n #if _GLIBCPP_HAVE_FMODL\n   inline long double \n@@ -316,8 +276,6 @@ namespace std\n   { return ::fmod(static_cast<double>(__x), static_cast<double>(__y)); }\n #endif\n \n-\n-  // frexp.\n #if _GLIBCPP_HAVE_FREXPF\n   inline float \n   frexp(float __x, int* __exp) { return ::frexpf(__x, __exp); }\n@@ -326,7 +284,7 @@ namespace std\n   frexp(float __x, int* __exp) { return ::frexp(__x, __exp); }\n #endif\n \n-  extern \"C\" double frexp(double __x, int* __exp);\n+  using ::frexp;\n \n #if _GLIBCPP_HAVE_FREXPL\n   inline long double \n@@ -337,8 +295,6 @@ namespace std\n   { return ::frexp(static_cast<double>(__x), __exp); }\n #endif\n \n-\n-  // ldexp.\n #if _GLIBCPP_HAVE_LDEXPF\n   inline float \n   ldexp(float __x, int __exp) { return ::ldexpf(__x, __exp); }\n@@ -348,7 +304,7 @@ namespace std\n   { return ::ldexp(static_cast<double>(__x), __exp); }\n #endif\n \n-  extern \"C\" double ldexp(double __x, int __exp);\n+  using ::ldexp;\n \n #if _GLIBCPP_HAVE_LDEXPL\n   inline long double \n@@ -359,8 +315,6 @@ namespace std\n   { return ::ldexp(static_cast<double>(__x), __exp); }\n #endif\n \n-\n-  // log.\n #if _GLIBCPP_HAVE_LOGF\n   inline float \n   log(float __x) { return ::logf(__x); }\n@@ -369,7 +323,7 @@ namespace std\n   { return ::log(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double log(double __x);\n+  using ::log;\n \n #if _GLIBCPP_HAVE_LOGL\n   inline long double \n@@ -379,8 +333,6 @@ namespace std\n   log(long double __x) { return ::log(static_cast<double>(__x)); }\n #endif\n \n-\n-  // log10.\n #if _GLIBCPP_HAVE_LOG10F\n   inline float \n   log10(float __x) { return ::log10f(__x); }\n@@ -389,7 +341,7 @@ namespace std\n   log10(float __x) { return ::log10(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double log10(double __x);\n+  using ::log10;\n \n #if _GLIBCPP_HAVE_LOG10L\n   inline long double \n@@ -399,8 +351,6 @@ namespace std\n   log10(long double __x) { return ::log10(static_cast<double>(__x)); }\n #endif\n \n-\n-  // modf.\n #if _GLIBCPP_HAVE_MODFF\n   inline float \n   modf(float __x, float* __iptr) { return ::modff(__x, __iptr); }\n@@ -415,7 +365,7 @@ namespace std\n   }\n #endif\n \n-  extern \"C\" double modf(double __x, double* __iptr);\n+  using ::modf;\n \n #if _GLIBCPP_HAVE_MODFL\n   inline long double \n@@ -431,8 +381,6 @@ namespace std\n   }\n #endif\n \n-\n-  // pow.\n   template<typename _Tp>\n     inline _Tp\n     __pow_helper(_Tp __x, int __n)\n@@ -451,7 +399,7 @@ namespace std\n   { return ::pow(static_cast<double>(__x), static_cast<double>(__y)); }\n #endif\n \n-  extern \"C\" double pow(double __x, double __y);\n+  using ::pow;\n \n #if _GLIBCPP_HAVE_POWL\n   inline long double \n@@ -464,38 +412,26 @@ namespace std\n \n   inline float \n   pow(float __x, int __n)\n-  {\n-    return __pow_helper(__x, __n);\n-  }\n+  { return __pow_helper(__x, __n); }\n \n   inline double \n   pow(double __x, int __i)\n-  {\n-    return __pow_helper(__x, __i);\n-  }\n+  { return __pow_helper(__x, __i); }\n \n   inline long double \n   pow(long double __x, int __n)\n-  {\n-    return __pow_helper(__x, __n);\n-  }\n-\n+  { return __pow_helper(__x, __n); }\n \n-  // sin.\n   inline float\n   sin(float __x)\n   { return __builtin_sinf(__x); }\n \n-  inline double\n-  sin(double __x)\n-  { return __builtin_sin(__x); }\n+  using ::sin;\n \n   inline long double\n   sin(long double __x)\n   { return __builtin_sinl(__x); }\n \n-  \n-  // sinh.\n #if _GLIBCPP_HAVE_SINHF\n   inline float \n   sinh(float __x) { return ::sinhf(__x); }\n@@ -504,7 +440,7 @@ namespace std\n   sinh(float __x) { return ::sinh(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double sinh(double __x);\n+  using ::sinh;\n \n #if _GLIBCPP_HAVE_SINHL\n   inline long double \n@@ -514,22 +450,16 @@ namespace std\n   sinh(long double __x) { return ::sinh(static_cast<double>(__x)); }\n #endif\n \n-\n-  // sqrt.\n   inline float\n   sqrt(float __x)\n   { return __builtin_sqrtf(__x); }\n \n-  inline double\n-  sqrt(double __x)\n-  { return __builtin_fsqrt(__x); }\n+  using ::sqrt;\n \n   inline long double\n   sqrt(long double __x)\n   { return __builtin_sqrtl(__x); }\n \n-\n-  // tan.\n #if _GLIBCPP_HAVE_TANF\n   inline float \n   tan(float __x) { return ::tanf(__x); }\n@@ -538,7 +468,7 @@ namespace std\n   tan(float __x) { return ::tan(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double tan(double __x);\n+  using ::tan;\n \n #if _GLIBCPP_HAVE_TANL\n   inline long double \n@@ -548,8 +478,6 @@ namespace std\n   tan(long double __x) { return ::tan(static_cast<double>(__x)); }\n #endif\n \n-\n-  // tanh.\n #if _GLIBCPP_HAVE_TANHF\n   inline float \n   tanh(float __x) { return ::tanhf(__x); }\n@@ -558,7 +486,7 @@ namespace std\n   tanh(float __x) { return ::tanh(static_cast<double>(__x)); }\n #endif\n \n-  extern \"C\" double tanh(double __x);\n+  using ::tanh;\n \n #if _GLIBCPP_HAVE_TANHL\n   inline long double "}, {"sha": "73648aeb8fdf8284df2a41d1222480e50b7d82ed", "filename": "libstdc++-v3/include/c_std/bits/std_csetjmp.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,13 +31,11 @@\n // ISO C++ 14882: 20.4.6  C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSETJMP\n #define _CPP_CSETJMP 1\n \n #pragma GCC system_header\n-#include <setjmp.h>\n+#include_next <setjmp.h>\n \n // Get rid of those macros defined in <setjmp.h> in lieu of real functions.\n #undef longjmp\n@@ -50,7 +48,7 @@\n namespace std\n {\n   using ::jmp_buf;\n-  extern \"C\" void longjmp(jmp_buf, int);\n+  using ::longjmp;\n }\n \n #endif"}, {"sha": "f30d9e00078fd1283d1b08380f152d57e271abc9", "filename": "libstdc++-v3/include/c_std/bits/std_csignal.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csignal.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,22 +31,20 @@\n // ISO C++ 14882: 20.4.6  C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSIGNAL\n #define _CPP_CSIGNAL 1\n \n #pragma GCC system_header\n-#include <signal.h>\n+#include_next <signal.h>\n \n // Get rid of those macros defined in <signal.h> in lieu of real functions.\n #undef raise\n \n namespace std\n {\n   using ::sig_atomic_t;\n-  extern \"C\" void (*signal(int, void (*__func)(int)))(int); \n-  extern \"C\" int raise(int);\n+  using ::signal;\n+  using ::raise;\n }\n \n #endif"}, {"sha": "c327520ae1f178f1ed456faab770a4ce4dc7b63c", "filename": "libstdc++-v3/include/c_std/bits/std_cstdarg.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdarg.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,13 +31,11 @@\n // ISO C++ 14882: 20.4.6  C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSTDARG\n #define _CPP_CSTDARG 1\n \n #pragma GCC system_header\n-#include <stdarg.h>\n+#include_next <stdarg.h>\n \n // Adhere to section 17.4.1.2 clause 5 of ISO 14882:1998\n #ifndef va_end"}, {"sha": "79c89a668bc56af08f2457478aed3e80a3f66c3d", "filename": "libstdc++-v3/include/c_std/bits/std_cstddef.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstddef.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,13 +31,11 @@\n // ISO C++ 14882: 18.1  Types\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSTDDEF\n #define _CPP_CSTDDEF 1\n \n #pragma GCC system_header\n-#include <stddef.h>\n+#include_next <stddef.h>\n \n namespace std \n {"}, {"sha": "aecf40784b6217ac7b2bb73c0471a9aed8bb1eec", "filename": "libstdc++-v3/include/c_std/bits/std_cstdio.h", "status": "modified", "additions": 47, "deletions": 57, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,8 +31,6 @@\n // ISO C++ 14882: 27.8.2  C Library files\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSTDIO\n #define _CPP_CSTDIO 1\n \n@@ -41,7 +39,7 @@\n #include <bits/std_cstddef.h>\n \n #pragma GCC system_header\n-#include <stdio.h>\n+#include_next <stdio.h>\n \n // Get rid of those macros defined in <stdio.h> in lieu of real functions.\n #undef remove\n@@ -96,60 +94,52 @@ namespace std\n   using ::FILE;\n   using ::fpos_t;\n \n-  extern \"C\" int remove(const char*); \n-  extern \"C\" int rename(const char*, const char*); \n-  extern \"C\" FILE* tmpfile(void); \n-  extern \"C\" char* tmpnam(char*); \n-  extern \"C\" int fclose(FILE*); \n-  extern \"C\" int fflush(FILE*); \n-  extern \"C\" FILE* fopen(const char*, const char*); \n-  extern \"C\" FILE* freopen(const char*, const char*, FILE*); \n-  extern \"C\" void setbuf(FILE*, char*);\n-  extern \"C\" int setvbuf(FILE*, char*, int, size_t); \n-  extern \"C\" int fprintf(FILE*, const char*, ...); \n-  extern \"C\" int fscanf(FILE*, const char*, ...); \n-  extern \"C\" int printf(const char*, ...); \n-  extern \"C\" int scanf(const char*, ...); \n-  extern \"C\" int snprintf(char *, size_t, const char*, ...);\n-  extern \"C\" int sprintf(char *, const char*, ...); \n-  extern \"C\" int sscanf(const char*, const char*, ...); \n-  extern \"C\" int vfprintf(FILE*, const char*, va_list); \n-  extern \"C\" int vfscanf(FILE*, const char*, va_list); \n-  extern \"C\" int vprintf(const char*, va_list); \n-  extern \"C\" int vscanf(const char*, va_list); \n-  extern \"C\" int vsnprintf(char*, size_t, const char*, va_list); \n-  extern \"C\" int vsprintf(char*, const char*, va_list); \n-  extern \"C\" int vsscanf(const char*, const char*, va_list); \n-  extern \"C\" int fgetc(FILE *); \n-  extern \"C\" char *fgets(char*, int, FILE*); \n-  extern \"C\" int fputc(int, FILE*); \n-  extern \"C\" int fputs(const char*, FILE*); \n-  extern \"C\" int getc(FILE*); \n-  extern \"C\" int getchar(void); \n-  extern \"C\" char *gets(char*); \n-  extern \"C\" int putc(int, FILE*); \n-  extern \"C\" int putchar(int); \n-  extern \"C\" int puts(const char*); \n-  extern \"C\" int ungetc(int, FILE*);\n-  extern \"C\" size_t fread(void*, size_t, size_t, FILE*); \n-  extern \"C\" size_t fwrite(const void*, size_t, size_t, FILE*); \n-  extern \"C\" int fgetpos(FILE*, fpos_t*); \n-  extern \"C\" int fseek(FILE*, long int, int); \n-  extern \"C\" int fsetpos(FILE*, const fpos_t*); \n-  extern \"C\" long int ftell(FILE*); \n-  extern \"C\" void rewind(FILE*); \n-  extern \"C\" void clearerr(FILE*); \n-  extern \"C\" int feof(FILE*); \n-  extern \"C\" int ferror(FILE*); \n-  extern \"C\" void perror(const char*);\n+  using ::remove;\n+  using ::rename;\n+  using ::tmpfile;\n+  using ::tmpnam;\n+  using ::fclose;\n+  using ::fflush;\n+  using ::fopen;\n+  using ::freopen;\n+  using ::setbuf;\n+  using ::setvbuf;\n+  using ::fprintf;\n+  using ::fscanf;\n+  using ::printf;\n+  using ::scanf;\n+  using ::snprintf;\n+  using ::sprintf;\n+  using ::sscanf;\n+  using ::vfprintf;\n+  using ::vfscanf;\n+  using ::vprintf;\n+  using ::vscanf;\n+  using ::vsnprintf;\n+  using ::vsprintf;\n+  using ::vsscanf;\n+  using ::fgetc;\n+  using ::fgets;\n+  using ::fputc;\n+  using ::fputs;\n+  using ::getc;\n+  using ::getchar;\n+  using ::gets;\n+  using ::putc;\n+  using ::putchar;\n+  using ::puts;\n+  using ::ungetc;\n+  using ::fread;\n+  using ::fwrite;\n+  using ::fgetpos;\n+  using ::fseek;\n+  using ::fsetpos;\n+  using ::ftell;\n+  using ::rewind;\n+  using ::clearerr;\n+  using ::feof;\n+  using ::ferror;\n+  using ::perror;\n }\n \n #endif\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "3577f74fe55fe3d5befc27bb66b374fe9d7b7b60", "filename": "libstdc++-v3/include/c_std/bits/std_cstdlib.h", "status": "modified", "additions": 40, "deletions": 43, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,16 +31,13 @@\n // ISO C++ 14882: 20.4.6  C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSTDLIB\n #define _CPP_CSTDLIB 1\n \n #include <bits/c++config.h>\n-#include <bits/std_cstddef.h>\n \n #pragma GCC system_header\n-#include <stdlib.h>\n+#include_next <stdlib.h>\n \n // Get rid of those macros defined in <stdlib.h> in lieu of real functions.\n #undef atof\n@@ -82,47 +79,47 @@\n \n namespace std \n {\n+  using ::size_t;\t// cstddef\n+\n   using ::div_t;\n   using ::ldiv_t;\n \n-  extern \"C\" double atof(const char*); \n-  extern \"C\" int atoi(const char*); \n-  extern \"C\" long int atol(const char*); \n-  extern \"C\" double strtod(const char*, char**); \n-  extern \"C\" float strtof(const char*, char**); \n-  extern \"C\" long int strtol(const char*, char**, int); \n-  extern \"C\" unsigned long int strtoul(const char*, char**, int);\n-  extern \"C\" int rand(void); \n-  extern \"C\" void srand(unsigned int); \n-  extern \"C\" void* calloc(size_t, size_t); \n-  extern \"C\" void free(void*); \n-  extern \"C\" void* malloc(size_t); \n-  extern \"C\" void* realloc(void*, size_t); \n-  extern \"C\" void abort(void); \n-  extern \"C\" int atexit(void (*func)(void)); \n-  extern \"C\" void exit(int); \n-  extern \"C\" void _Exit(int); \n-  extern \"C\" char*getenv(const char*); \n-  extern \"C\" int system(const char*); \n-  extern \"C\" void* bsearch(const void*, const void*, size_t, size_t, \n-\t\t\t   int (*comp)(const void *, const void *)); \n-  extern \"C\" void qsort(void*, size_t, size_t, \n-\t\t\tint (*comp)(const void *, const void *)); \n-  extern \"C\" int abs(int); \n-  extern \"C\" long int labs(long int); \n-  extern \"C\" div_t div(int, int); \n-  extern \"C\" ldiv_t ldiv(long int, long int); \n-  extern \"C\" int mblen(const char*, size_t); \n-  extern \"C\" int mbtowc(wchar_t*, const char*, size_t); \n-  extern \"C\" int wctomb(char*, wchar_t); \n-  extern \"C\" size_t mbstowcs(wchar_t*, const char*, size_t); \n-  extern \"C\" size_t wcstombs(char*, const wchar_t*, size_t);\n+  using ::atof;\n+  using ::atoi;\n+  using ::atol;\n+  using ::strtod;\n+  using ::strtof;\n+  using ::strtol;\n+  using ::strtoul;\n+  using ::rand;\n+  using ::srand;\n+  using ::calloc;\n+  using ::free;\n+  using ::malloc;\n+  using ::realloc;\n+  using ::abort;\n+  using ::atexit;\n+  using ::exit;\n+  using ::_Exit;\n+  using ::getenv;\n+  using ::system;\n+  using ::bsearch;\n+  using ::qsort;\n+  using ::abs;\n+  using ::labs;\n+  using ::div;\n+  using ::ldiv;\n+  using ::mblen;\n+  using ::mbtowc;\n+  using ::wctomb;\n+  using ::mbstowcs;\n+  using ::wcstombs;\n \n   inline long \n-  abs(long __i) { return ::labs(__i); }\n+  abs(long __i) { return labs(__i); }\n \n   inline ldiv_t\n-  div(long __i, long __j) { return ::ldiv(__i, __j); }\n+  div(long __i, long __j) { return ldiv(__i, __j); }\n } // namespace std\n \n #if _GLIBCPP_USE_C99\n@@ -144,20 +141,20 @@ namespace __gnu_cxx\n   lldiv(long long __n, long long __d)\n   { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n \n-  extern \"C\" long long int atoll(const char*); \n-  extern \"C\" long long int strtoll(const char*, char**, int); \n-  extern \"C\" unsigned long long int strtoull(const char*, char**, int); \n+  using ::atoll;\n+  using ::strtoll;\n+  using ::strtoull;\n \n #ifdef _GLIBCPP_HAVE_STRTOLD\n-  extern \"C\" long double strtold(const char*, char**); \n+  using ::strtold; \n #endif\n } // namespace __gnu_cxx\n \n namespace std\n {\n   using __gnu_cxx::lldiv_t;\n   using __gnu_cxx::abs;\n-  //using __gnu_cxx::llabs; // XXX ???\n+  using __gnu_cxx::llabs; \n   using __gnu_cxx::div;\n   using __gnu_cxx::lldiv;\n   using __gnu_cxx::atoll;"}, {"sha": "850c4d312aca0390fc49a0c469c0cf3fabfef54b", "filename": "libstdc++-v3/include/c_std/bits/std_cstring.h", "status": "modified", "additions": 30, "deletions": 119, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstring.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,41 +31,11 @@\n // ISO C++ 14882: 20.4.6  C library\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CSTRING\n #define _CPP_CSTRING 1\n \n-#include <bits/c++config.h>\n-#include <bits/std_cstddef.h>\n-\n-\n-// Need to mangle these \"C\" functions because C++ modifies their signature.\n-#define memcpy __glibcpp_memcpy\n-#define memmove __glibcpp_memmove\n-#define strcpy __glibcpp_strcpy\n-#define strncpy __glibcpp_strncpy\n-#define strcat __glibcpp_strcat\n-#define strncat __glibcpp_strncat\n-#define memcmp __glibcpp_memcmp\n-#define strcmp __glibcpp_strcmp\n-#define strcoll __glibcpp_strcoll\n-#define strncmp __glibcpp_strncmp\n-#define strxfrm __glibcpp_strxfrm\n-#define memchr __glibcpp_memchr\n-#define strchr __glibcpp_strchr\n-#define strcspn __glibcpp_strcspn\n-#define strpbrk __glibcpp_strpbrk\n-#define strrchr __glibcpp_strrchr\n-#define strspn __glibcpp_strspn\n-#define strstr __glibcpp_strstr\n-#define strtok __glibcpp_strtok\n-#define memset __glibcpp_memset\n-#define strerror __glibcpp_strerror\n-#define strlen __glibcpp_strlen\n-\n #pragma GCC system_header\n-#include <string.h>\n+#include_next <string.h>\n \n // Get rid of those macros defined in <string.h> in lieu of real functions.\n #undef memcpy\n@@ -93,114 +63,55 @@\n \n namespace std \n {\n-  inline void*\n-  memcpy(void* __p1, const void* __p2, size_t __n)\n-  { return __builtin_memcpy(__p1, __p2, __n); }\n-\n-  extern \"C\" void* memmove(void*, const void*, size_t); \n-\n-  inline char*\n-  strcpy(char* __s1, const char* __s2)\n-  { return __builtin_strcpy(__s1, __s2); }\n-\n-  inline char*\n-  strncpy(char* __s1, const char* __s2, size_t __n)\n-  { return __builtin_strncpy(__s1, __s2, __n); }\n-\n-  inline char*\n-  strcat(char* __s1, const char* __s2)\n-  { return __builtin_strcat(__s1, __s2); }\n-\n-  inline char*\n-  strncat(char* __s1, const char* __s2, size_t __n)\n-  { return __builtin_strncat(__s1, __s2, __n); }\n-\n-  inline int\n-  memcmp(const void* __p1, const void* __p2, size_t __n)\n-  { return __builtin_memcmp(__p1, __p2, __n); }\n-\n-  inline int\n-  strcmp(const char* __s1, const char* __s2)\n-  { return __builtin_strcmp(__s1, __s2); }\n-\n-  extern \"C\" int strcoll(const char*, const char*); \n-\n-  inline int\n-  strncmp(const char* __s1, const char* __s2, size_t __n)\n-  { return __builtin_strncmp(__s1, __s2, __n); }\n-\n-  extern \"C\" size_t strxfrm(char*, const char*, size_t); \n-  extern \"C\" const void* memchr(const void*, int, size_t); \n+  using ::size_t;\t// cstddef\n+\n+  using ::memcpy;\n+  using ::memmove;\n+  using ::strcpy;\n+  using ::strncpy;\n+  using ::strcat;\n+  using ::strncat;\n+  using ::memcmp;\n+  using ::strcmp;\n+  using ::strcoll;\n+  using ::strncmp;\n+  using ::strxfrm;\n+  using ::strcspn;\n+  using ::strspn;\n+  using ::strtok;\n+  using ::memset;\n+  using ::strerror;\n+  using ::strlen;\n+\n+  using ::memchr;\n \n   inline void*\n   memchr(void* __p, int __c, size_t __n)\n-  {\n-    return const_cast<void*>(memchr(const_cast<const void*>(__p), __c, __n));\n-  }\n+  { return memchr(const_cast<const void*>(__p), __c, __n); }\n \n-  inline const char*\n-  strchr(const char* __s1, int __n)\n-  { return const_cast<const char*>(__builtin_strchr(__s1, __n)); }\n+  using ::strchr;\n \n   inline char*\n   strchr(char* __s1, int __n)\n-  {\n-    return \n-      const_cast<char*>(__builtin_strchr(const_cast<const char*>(__s1), __n));\n-  }\n-\n-  inline size_t\n-  strcspn(const char* __s1, const char* __s2)\n-  { return __builtin_strcspn(__s1, __s2); }\n+  { return __builtin_strchr(const_cast<const char*>(__s1), __n); }\n \n-  inline const char*\n-  strpbrk(const char* __s1, const char* __s2)\n-  { return const_cast<char*>(__builtin_strpbrk(__s1, __s2)); }\n+  using ::strpbrk;\n \n   inline char*\n   strpbrk(char* __s1, const char* __s2)\n-  {\n-    return const_cast<char*>\n-      (__builtin_strpbrk(const_cast<const char*>(__s1), __s2));\n-  }\n+  { return __builtin_strpbrk(const_cast<const char*>(__s1), __s2); }\n \n-  inline const char*\n-  strrchr(const char* __s1, int __n)\n-  { return const_cast<char*>(__builtin_strrchr(__s1, __n)); }\n+  using ::strrchr;\n \n   inline char*\n   strrchr(char* __s1, int __n)\n   { return __builtin_strrchr(const_cast<const char*>(__s1), __n); }\n \n-  inline size_t\n-  strspn(const char* __s1, const char* __s2)\n-  { return __builtin_strspn(__s1, __s2); }\n-\n-  inline const char*\n-  strstr(const char* __s1, const char* __s2)\n-  { return const_cast<char*>(__builtin_strstr (__s1, __s2)); }\n+  using ::strstr;\n \n   inline char*\n   strstr(char* __s1, const char* __s2)\n-  {\n-    return (const_cast<char*>\n-\t    (__builtin_strstr(const_cast<const char*>(__s1), __s2)));\n-  }\n-\n-  extern \"C\" char* strtok(char*, const char*); \n-\n-  inline void*\n-  memset(void* __p, int __c, size_t __n)\n-  { return __builtin_memset(__p, __c, __n); }\n-\n-  extern \"C\" char* strerror(int); \n-\n-  inline size_t\n-  strlen(const char* __s)\n-  { return __builtin_strlen(__s); }\n+  { return __builtin_strstr(const_cast<const char*>(__s1), __s2); }\n }\n \n #endif\n-\n-\n-"}, {"sha": "2fc6e427e4171120d2d97c8c1cc092829616c04b", "filename": "libstdc++-v3/include/c_std/bits/std_ctime.h", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_ctime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_ctime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_ctime.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,16 +31,11 @@\n // ISO C++ 14882: 20.5  Date and time\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CTIME\n #define _CPP_CTIME 1\n \n-#include <bits/c++config.h>\n-#include <bits/std_cstddef.h>\n-\n #pragma GCC system_header\n-#include <time.h>\n+#include_next <time.h>\n \n // Get rid of those macros defined in <time.h> in lieu of real functions.\n #undef clock\n@@ -55,19 +50,21 @@\n \n namespace std\n {\n+  using ::size_t;\t// cstddef\n+\n   using ::clock_t;\n   using ::time_t;\n   using ::tm;\n \n-  extern \"C\" clock_t clock(void); \n-  extern \"C\" double difftime(time_t, time_t); \n-  extern \"C\" time_t mktime(struct tm*); \n-  extern \"C\" time_t time(time_t*); \n-  extern \"C\" char* asctime(const struct tm*); \n-  extern \"C\" char* ctime(const time_t*); \n-  extern \"C\" struct tm* gmtime(const time_t*); \n-  extern \"C\" struct tm* localtime(const time_t*); \n-  extern \"C\" size_t strftime(char*, size_t, const char*, const struct tm*);\n+  using ::clock;\n+  using ::difftime;\n+  using ::mktime;\n+  using ::time;\n+  using ::asctime;\n+  using ::ctime;\n+  using ::gmtime;\n+  using ::localtime;\n+  using ::strftime;\n }\n \n #endif"}, {"sha": "5c7db09d6c1ce1c9b5d01d181e2bafc5b96c8a80", "filename": "libstdc++-v3/include/c_std/bits/std_cwchar.h", "status": "modified", "additions": 100, "deletions": 95, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,26 +31,14 @@\n // ISO C++ 14882: ???\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CWCHAR\n #define _CPP_CWCHAR 1\n \n #include <bits/c++config.h>\n-#include <bits/std_cstddef.h>\n-#include <bits/std_cstdio.h>\n-#include <bits/std_cstdarg.h>\n \n #if _GLIBCPP_HAVE_WCHAR_H\n-// Need to mangle these \"C\" functions because C++ modifies their signature.\n-#define wcschr  __glibcpp_wcschr\n-#define wcsbrk  __glibcpp_wcspbrk\n-#define wcsrchr  __glibcpp_wcsrchr\n-#define wcsstr  __glibcpp_wcsstr\n-#define wmemchr  __glibcpp_wmemchr\n-\n #pragma GCC system_header\n-#include <wchar.h>\n+#include_next <wchar.h>\n #endif\n \n // Need to do a bit of trickery here with mbstate_t as char_traits\n@@ -71,6 +59,22 @@ namespace std\n }\n \n // Get rid of those macros defined in <wchar.h> in lieu of real functions.\n+#undef btowc\n+#undef wctob\n+#undef fgetwc\n+#undef fgetwc\n+#undef fgetws\n+#undef fputwc\n+#undef fputws\n+#undef fwide\n+#undef fwprintf\n+#undef fwscanf\n+#undef swprintf\n+#undef swscanf\n+#undef vfwprintf\n+#undef vfwscanf\n+#undef vswprintf\n+#undef vswscanf\n #undef vwprintf\n #undef vwscanf\n #undef wprintf\n@@ -98,118 +102,119 @@ namespace std\n #undef wcscoll\n #undef wcsncmp\n #undef wcsxfrm\n-#undef wcschr\n #undef wcscspn\n #undef wcslen\n-#undef wcspbrk\n-#undef wcsrchr\n #undef wcsspn\n-#undef wcsstr\n #undef wcstok\n-#undef wmemchr\n #undef wmemcmp\n #undef wmemcpy\n #undef wmemmove\n #undef wmemset\n #undef wcsftime\n-#undef wcstold\n-#undef wcstoll\n-#undef wcstoull\n+\n+#undef wcschr\n+#undef wcspbrk\n+#undef wcsrchr\n+#undef wcsstr\n+#undef wmemchr\n \n #if _GLIBCPP_USE_WCHAR_T\n namespace std\n {\n+  using ::size_t;\t// cstddef\n+\n   using ::wint_t;\n \n-  extern \"C\" wint_t btowc(int); \n-  extern \"C\" int wctob(wint_t); \n-  extern \"C\" wint_t fgetwc(FILE*); \n-  extern \"C\" wchar_t* fgetws(wchar_t*, int, FILE*); \n-  extern \"C\" wint_t fputwc(wchar_t, FILE*); \n-  extern \"C\" int fputws(const wchar_t*, FILE*); \n-  extern \"C\" int fwide(FILE*, int); \n-  extern \"C\" int fwprintf(FILE*, const wchar_t*, ...); \n-  extern \"C\" int fwscanf(FILE*, const wchar_t*, ...); \n-  extern \"C\" int swprintf(wchar_t*, size_t, const wchar_t*, ...); \n-  extern \"C\" int swscanf(const wchar_t*, const wchar_t*, ...); \n-  extern \"C\" int vfwprintf(FILE*, const wchar_t*, va_list); \n-  extern \"C\" int vfwscanf(FILE*, const wchar_t*, va_list); \n-  extern \"C\" int vswprintf(wchar_t*, size_t, const wchar_t*, va_list); \n-  extern \"C\" int vswscanf(const wchar_t*, const wchar_t*, va_list); \n-  extern \"C\" int vwprintf(const wchar_t*, va_list); \n-  extern \"C\" int vwscanf(const wchar_t*, va_list); \n-  extern \"C\" int wprintf(const wchar_t*, ...); \n-  extern \"C\" int wscanf(const wchar_t*, ...); \n-  extern \"C\" wint_t getwc(FILE* stream); \n-  extern \"C\" wint_t getwchar(void); \n-  extern \"C\" int mbsinit(const mbstate_t*); \n-  extern \"C\" size_t mbrlen(const char*, size_t, mbstate_t*); \n-  extern \"C\" size_t mbrtowc(wchar_t*, const char*, size_t, mbstate_t*); \n-  extern \"C\" size_t mbsrtowcs(wchar_t*, const char**, size_t, mbstate_t*); \n-  extern \"C\" size_t wcsrtombs(char*, const wchar_t **, size_t, mbstate_t*);\n-  extern \"C\" wint_t putwc(wchar_t, FILE*); \n-  extern \"C\" wint_t putwchar(wchar_t); \n-  extern \"C\" wint_t ungetwc(wint_t, FILE*);\n-  extern \"C\" size_t wcrtomb(char*, wchar_t, mbstate_t*); \n-  extern \"C\" double wcstod(const wchar_t*, wchar_t**); \n-  extern \"C\" float wcstof(const wchar_t*, wchar_t**); \n-  extern \"C\" long int wcstol(const wchar_t*, wchar_t**, int); \n-  extern \"C\" unsigned long int wcstoul(const wchar_t*, wchar_t**, int); \n-  extern \"C\" wchar_t* wcscpy(wchar_t* s1, const wchar_t*); \n-  extern \"C\" wchar_t* wcsncpy(wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" wchar_t* wcscat(wchar_t*, const wchar_t*); \n-  extern \"C\" wchar_t* wcsncat(wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" int wcscmp(const wchar_t*, const wchar_t*); \n-  extern \"C\" int wcscoll(const wchar_t*, const wchar_t*); \n-  extern \"C\" int wcsncmp(const wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" size_t wcsxfrm(wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" const wchar_t* wcschr(const wchar_t*, wchar_t); \n+  using ::btowc;\n+  using ::wctob;\n+  using ::fgetwc;\n+  using ::fgetwc;\n+  using ::fgetws;\n+  using ::fputwc;\n+  using ::fputws;\n+  using ::fwide;\n+  using ::fwprintf;\n+  using ::fwscanf;\n+  using ::swprintf;\n+  using ::swscanf;\n+  using ::vfwprintf;\n+  using ::vfwscanf;\n+  using ::vswprintf;\n+  using ::vswscanf;\n+  using ::vwprintf;\n+  using ::vwscanf;\n+  using ::wprintf;\n+  using ::wscanf;\n+  using ::getwc;\n+  using ::getwchar;\n+  using ::mbsinit;\n+  using ::mbrlen;\n+  using ::mbrtowc;\n+  using ::mbsrtowcs;\n+  using ::wcsrtombs;\n+  using ::putwc;\n+  using ::putwchar;\n+  using ::ungetwc;\n+  using ::wcrtomb;\n+  using ::wcstod;\n+  using ::wcstof;\n+  using ::wcstol;\n+  using ::wcstoul;\n+  using ::wcscpy;\n+  using ::wcsncpy;\n+  using ::wcscat;\n+  using ::wcsncat;\n+  using ::wcscmp;\n+  using ::wcscoll;\n+  using ::wcsncmp;\n+  using ::wcsxfrm;\n+  using ::wcscspn;\n+  using ::wcslen;\n+  using ::wcsspn;\n+  using ::wcstok;\n+  using ::wmemcmp;\n+  using ::wmemcpy;\n+  using ::wmemmove;\n+  using ::wmemset;\n+  using ::wcsftime;\n+\n+  using ::wcschr;\n+\n   inline wchar_t*\n   wcschr(wchar_t* __p, wchar_t __c)\n-  {\n-    return const_cast<wchar_t*>(wcschr(const_cast<const wchar_t*>(__p), __c));\n-  }\n-  extern \"C\" size_t wcscspn(const wchar_t*, const wchar_t*); \n-  extern \"C\" size_t wcslen(const wchar_t*); \n-  extern \"C\" const wchar_t* wcspbrk(const wchar_t*, const wchar_t*); \n+  { return wcschr(const_cast<const wchar_t*>(__p), __c); }\n+\n+  using ::wcspbrk;\n+\n   inline wchar_t*\n   wcspbrk(wchar_t* __s1, wchar_t* __s2)\n-  {\n-    return const_cast<wchar_t*>(wcspbrk(const_cast<const wchar_t*>(__s1), __s2));\n-  }\n-  extern \"C\" const wchar_t* wcsrchr(const wchar_t*, wchar_t); \n+  { return wcspbrk(const_cast<const wchar_t*>(__s1), __s2); }\n+\n+  using ::wcsrchr;\n+\n   inline wchar_t*\n   wcsrchr(wchar_t* __p, wchar_t __c)\n-  {\n-    return const_cast<wchar_t*>(wcsrchr(const_cast<const wchar_t*>(__p), __c));\n-  }\n-  extern \"C\" size_t wcsspn(const wchar_t*, const wchar_t*); \n-  extern \"C\" const wchar_t* wcsstr(const wchar_t*, const wchar_t*); \n+  { return wcsrchr(const_cast<const wchar_t*>(__p), __c); }\n+\n+  using ::wcsstr;\n+\n   inline wchar_t*\n   wcsstr(wchar_t* __s1, wchar_t* __s2)\n-  {\n-    return const_cast<wchar_t*>(wcsstr(const_cast<const wchar_t*>(__s1), __s2));\n-  }\n-  extern \"C\" wchar_t* wcstok(wchar_t*, const wchar_t*, wchar_t**); \n-  extern \"C\" const wchar_t* wmemchr(const wchar_t*, wchar_t, size_t);\n+  { return wcsstr(const_cast<const wchar_t*>(__s1), __s2); }\n+\n+  using ::wmemchr;\n+\n   inline wchar_t*\n   wmemchr(wchar_t* __p, wchar_t __c, size_t __n)\n-  {\n-    return const_cast<wchar_t*>(wmemchr(const_cast<const wchar_t*>(__p), __c, __n));\n-  }\n-  extern \"C\" int wmemcmp(const wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" wchar_t* wmemcpy(wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" wchar_t* wmemmove(wchar_t*, const wchar_t*, size_t); \n-  extern \"C\" wchar_t* wmemset(wchar_t*, wchar_t, size_t); \n-  extern \"C\" size_t wcsftime(wchar_t*, size_t, const wchar_t*, const struct tm*); \n+  { return wmemchr(const_cast<const wchar_t*>(__p), __c, __n); }\n }\n \n #if _GLIBCPP_USE_C99\n namespace __gnu_cxx\n {\n-  extern \"C\" long double wcstold(const wchar_t*, wchar_t**); \n-  extern \"C\" long long int wcstoll(const wchar_t*, wchar_t**, int); \n-  extern \"C\" unsigned long long int wcstoull(const wchar_t*, wchar_t**, int); \n+  using ::wcstold;\n+  using ::wcstoll;\n+  using ::wcstoull;\n }\n \n namespace std"}, {"sha": "8fd58d0ecea14aadb1cb7ec4c8c6c183e9581020", "filename": "libstdc++-v3/include/c_std/bits/std_cwctype.h", "status": "modified", "additions": 21, "deletions": 30, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwctype.h?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -31,15 +31,11 @@\n // ISO C++ 14882: <cwctype>\n //\n \n-// Note: This is not a conforming implementation.\n-\n #ifndef _CPP_CWCTYPE\n #define _CPP_CWCTYPE 1\n \n-#include <bits/std_cwchar.h>\n-\n #pragma GCC system_header\n-#include <wctype.h>\n+#include_next <wctype.h>\n \n // Get rid of those macros defined in <wctype.h> in lieu of real functions.\n #undef iswalnum\n@@ -63,34 +59,29 @@\n \n namespace std\n {\n+  using ::wint_t; \t  // cwchar\n+\n   using ::wctype_t;\n   using ::wctrans_t;\n \n-  extern \"C\" int iswalnum(wint_t); \n-  extern \"C\" int iswalpha(wint_t); \n-  extern \"C\" int iswblank(wint_t); \n-  extern \"C\" int iswcntrl(wint_t); \n-  extern \"C\" int iswdigit(wint_t); \n-  extern \"C\" int iswgraph(wint_t); \n-  extern \"C\" int iswlower(wint_t); \n-  extern \"C\" int iswprint(wint_t); \n-  extern \"C\" int iswpunct(wint_t); \n-  extern \"C\" int iswspace(wint_t); \n-  extern \"C\" int iswupper(wint_t); \n-  extern \"C\" int iswxdigit(wint_t);\n-  extern \"C\" int iswctype(wint_t, wctype_t); \n-  extern \"C\" wctype_t wctype(const char *); \n-  extern \"C\" wint_t towlower(wint_t); \n-  extern \"C\" wint_t towupper(wint_t); \n-  extern \"C\" wint_t towctrans(wint_t, wctrans_t); \n-  extern \"C\" wctrans_t wctrans(const char*);\n+  using ::iswalnum;\n+  using ::iswalpha;\n+  using ::iswblank;\n+  using ::iswcntrl;\n+  using ::iswdigit;\n+  using ::iswgraph;\n+  using ::iswlower;\n+  using ::iswprint;\n+  using ::iswprint;\n+  using ::iswpunct;\n+  using ::iswspace;\n+  using ::iswupper;\n+  using ::iswxdigit;\n+  using ::iswctype;\n+  using ::towlower;\n+  using ::towupper;\n+  using ::towctrans;\n+  using ::wctrans;\n }\n \n #endif \n-\n-\n-\n-\n-\n-\n-"}, {"sha": "06a553fdddb8f0737d38eeb3f88f83f2693b3a46", "filename": "libstdc++-v3/include/std/algorithm", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_ALGORITHM\n #include <bits/std_algorithm.h>\n #endif"}, {"sha": "9ce6c7962da419c03ef82c92c38ea33cd6b9dfb9", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_BITSET\n #include <bits/std_bitset.h>\n #endif"}, {"sha": "fe0b8b5b645c35cf4eeaa8302f778e3bb3911798", "filename": "libstdc++-v3/include/std/cassert", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcassert", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcassert", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcassert?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n // This one should not have include guards.\n #include <bits/std_cassert.h>\n "}, {"sha": "868e4be335ca13b9f1ef28e6b8230d4e4abf82fa", "filename": "libstdc++-v3/include/std/cctype", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcctype?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CCTYPE\n #include <bits/std_cctype.h>\n #endif"}, {"sha": "b7bfe3a393d9432cdf242e31d59052e3254cef19", "filename": "libstdc++-v3/include/std/cerrno", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcerrno", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcerrno", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcerrno?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CERRNO\n #include <bits/std_cerrno.h>\n #endif"}, {"sha": "d91824d38ae9b7303f46d26a81bdb252ca98cf93", "filename": "libstdc++-v3/include/std/cfloat", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcfloat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcfloat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcfloat?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CFLOAT\n #include <bits/std_cfloat.h>\n #endif"}, {"sha": "f5dd444bd17d8767d1fb6434cca500c1ce1c9b7b", "filename": "libstdc++-v3/include/std/ciso646", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fciso646", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fciso646", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fciso646?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -0,0 +1,28 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License."}, {"sha": "afadc6403d528d0f7694a98eaa389543ee658fd4", "filename": "libstdc++-v3/include/std/climits", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclimits?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CLIMITS\n #include <bits/std_climits.h>\n #endif"}, {"sha": "8a62dfa886d1ca25bb3632dc3786e5594c6ad3b6", "filename": "libstdc++-v3/include/std/clocale", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclocale", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclocale", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclocale?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CLOCALE\n #include <bits/std_clocale.h>\n #endif"}, {"sha": "95da649724abcec349534fdb969ee8f31a500ada", "filename": "libstdc++-v3/include/std/cmath", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcmath?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CMATH\n #include <bits/std_cmath.h>\n #endif"}, {"sha": "dfc144ffdc396e26172bde0cabbe6bce0eb3f2af", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_COMPLEX\n #include <bits/std_complex.h>\n #endif"}, {"sha": "ce6fb32c957b460a5743c811a39da2082e322b8a", "filename": "libstdc++-v3/include/std/csetjmp", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsetjmp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsetjmp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsetjmp?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,31 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n \n #ifndef _CPP_CSETJMP\n #include <bits/std_csetjmp.h>"}, {"sha": "b3da42a9a739dbeb68dbb6487bc18926f05f2ec8", "filename": "libstdc++-v3/include/std/csignal", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsignal", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsignal", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsignal?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,31 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n \n #ifndef _CPP_CSIGNAL\n #include <bits/std_csignal.h>"}, {"sha": "36032b22c234aa0db8beff70cd680c88eaf3aeab", "filename": "libstdc++-v3/include/std/cstdarg", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdarg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdarg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdarg?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,31 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n \n #ifndef _CPP_CSTDARG\n #include <bits/std_cstdarg.h>"}, {"sha": "086bb726b2bfa27556464460aa068cb6a6f96fb1", "filename": "libstdc++-v3/include/std/cstddef", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstddef", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstddef", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstddef?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CSTDDEF\n #include <bits/std_cstddef.h>\n #endif"}, {"sha": "4d8aced1f8c4e793efac2a333efc3bdba275d83c", "filename": "libstdc++-v3/include/std/cstdio", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdio?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CSTDIO\n #include <bits/std_cstdio.h>\n #endif"}, {"sha": "7796c6b3254360a375d5eb0fe42bcfa7003102bb", "filename": "libstdc++-v3/include/std/cstdlib", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdlib?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CSTDLIB\n #include <bits/std_cstdlib.h>\n #endif"}, {"sha": "8d30ba8a9cb4e8db238aca3bc725952cda137945", "filename": "libstdc++-v3/include/std/cstring", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstring?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CSTRING\n #include <bits/std_cstring.h>\n #endif"}, {"sha": "b19136e87a690bba948f6e32d1cd1467d619e6c0", "filename": "libstdc++-v3/include/std/ctime", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fctime", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fctime", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fctime?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CTIME\n #include <bits/std_ctime.h>\n #endif"}, {"sha": "311b2e9e31fdb8505e2d3181ca8172853aa5cec3", "filename": "libstdc++-v3/include/std/cwchar", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwchar?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CWCHAR\n #include <bits/std_cwchar.h>\n #endif"}, {"sha": "4cf2e7dfe774bd173cd123bbde54db3d9a082b91", "filename": "libstdc++-v3/include/std/cwctype", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwctype?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_CWCTYPE\n #include <bits/std_cwctype.h>\n #endif"}, {"sha": "c8ee81e9e6b2238fa60f977625210306a0d3ac50", "filename": "libstdc++-v3/include/std/deque", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_DEQUE\n #include <bits/std_deque.h>\n #endif"}, {"sha": "1a68f5ab19f844ccbc31b6e840aa7f814b21bc8a", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_FSTREAM\n #include <bits/std_fstream.h>\n #endif"}, {"sha": "ea48352643e03c4ddfeaf7d995c0ea1c1ab54c50", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_FUNCTIONAL\n #include <bits/std_functional.h>\n #endif"}, {"sha": "2aa00fa9de9b852167bcb1cc885867f6a2d411c2", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_IOMANIP\n #include <bits/std_iomanip.h>\n #endif"}, {"sha": "ff398de06817af882e928cdf8f4c9ecd28be7f8b", "filename": "libstdc++-v3/include/std/ios", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fios", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fios", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fios?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_IOS\n #include <bits/std_ios.h>\n #endif"}, {"sha": "3756982abe1a747a7ae222d2e30433eef9c83c11", "filename": "libstdc++-v3/include/std/iosfwd", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_IOSFWD\n #include <bits/std_iosfwd.h>\n #endif"}, {"sha": "a85fd08ca5a2f05f0d062f0f2fe7b3cd6c38b5f4", "filename": "libstdc++-v3/include/std/iostream", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_IOSTREAM\n #include <bits/std_iostream.h>\n #endif"}, {"sha": "9c6bc55eb3c250a98c4b7f21b524d9ec16395c21", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_ISTREAM\n #include <bits/std_istream.h>\n #endif"}, {"sha": "2560439638ab3244fd7c21e3687e81b60083d167", "filename": "libstdc++-v3/include/std/iterator", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_ITERATOR\n #include <bits/std_iterator.h>\n #endif"}, {"sha": "8a52c9cfb8186b93f89f124abbbfec93f8ddd64e", "filename": "libstdc++-v3/include/std/limits", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_LIMITS\n #include <bits/std_limits.h>\n #endif"}, {"sha": "a32e18d127d892f89985d4d56b3e743496cff142", "filename": "libstdc++-v3/include/std/list", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_LIST\n #include <bits/std_list.h>\n #endif"}, {"sha": "56c416d8c5db9b4f5a6ae96e49b0c0a7eb2e9fb5", "filename": "libstdc++-v3/include/std/locale", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flocale", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flocale", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flocale?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_LOCALE\n #include <bits/std_locale.h>\n #endif"}, {"sha": "06c638d5444c5237eefc5d38f31a54981bc213d9", "filename": "libstdc++-v3/include/std/map", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_MAP\n #include <bits/std_map.h>\n #endif"}, {"sha": "ca98df6dadd49cd2b6f5283def573aafb5d241fa", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_MEMORY\n #include <bits/std_memory.h>\n #endif"}, {"sha": "32ba67d1a05706a5d5d7527221725c1517300d51", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_NUMERIC\n #include <bits/std_numeric.h>\n #endif"}, {"sha": "4564be746abc445948e033ae2b24be8d31f7e8c4", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_OSTREAM\n #include <bits/std_ostream.h>\n #endif"}, {"sha": "c4464bf9b8fc7da896463951695019d2909e30f6", "filename": "libstdc++-v3/include/std/queue", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_QUEUE\n #include <bits/std_queue.h>\n #endif"}, {"sha": "62d671853396e0970801c3200577647c18a69562", "filename": "libstdc++-v3/include/std/set", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_SET\n #include <bits/std_set.h>\n #endif"}, {"sha": "1a393ed67eec3ae4619ec6aab6e342d1f941fde0", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_SSTREAM\n #include <bits/std_sstream.h>\n #endif"}, {"sha": "793a003237c2a3c4c53c0ab9d737b3fdd2ba5b12", "filename": "libstdc++-v3/include/std/stack", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_STACK\n #include <bits/std_stack.h>\n #endif"}, {"sha": "d9e93f2ef9a75966e34cf0e3df301e4066b852f1", "filename": "libstdc++-v3/include/std/stdexcept", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_STDEXCEPT\n #include <bits/std_stdexcept.h>\n #endif"}, {"sha": "ec6c7b57e18b379dec43989b9466dddc5a49fdb6", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_STREAMBUF\n #include <bits/std_streambuf.h>\n #endif"}, {"sha": "a766cddc81e3687429a0a58f191a51b96e7a4c89", "filename": "libstdc++-v3/include/std/string", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_STRING\n #include <bits/std_string.h>\n #endif"}, {"sha": "787e7997340a8eccd5a0ea05ec8d6a18ab61c52c", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_UTILITY\n #include <bits/std_utility.h>\n #endif"}, {"sha": "cb13d82f6921dc8da929d05ae1c989d99faf7a7d", "filename": "libstdc++-v3/include/std/valarray", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_VALARRAY\n #include <bits/std_valarray.h>\n #endif"}, {"sha": "ce2f51e7b22ddb666afcf4c83c20f879944422cb", "filename": "libstdc++-v3/include/std/vector", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -1,3 +1,32 @@\n+// -*- C++ -*- std header.\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #ifndef _CPP_VECTOR\n #include <bits/std_vector.h>\n #endif"}, {"sha": "cb6a71d9e13c7e8acd5930eda8c4662597da035c", "filename": "libstdc++-v3/testsuite/17_intro/headers_c++.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c%2B%2B.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c%2B%2B.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c%2B%2B.cc?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -67,4 +67,18 @@\n   #include <wctype.h>\n #endif\n \n+// libstdc++/2992\n+namespace bar\n+{\n+  int foo(const char *x)\n+  { return strlen(x); }\n+};\n+\n+\n int main() { return 0; }\n+\n+\n+\n+\n+\n+"}, {"sha": "b4fe65895d9187266876c4ba007d9214cf29b18c", "filename": "libstdc++-v3/testsuite/17_intro/headers_c.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de96ac4681ebe2284a43c4e37e23e92cf6c8ec58/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders_c.cc?ref=de96ac4681ebe2284a43c4e37e23e92cf6c8ec58", "patch": "@@ -67,4 +67,12 @@\n   #include <cwctype>\n #endif\n \n+// libstdc++/2992\n+namespace bar\n+{\n+  int foo(const char *x)\n+  { return strlen(x); }\n+};\n+\n+\n int main() { return 0; }"}]}