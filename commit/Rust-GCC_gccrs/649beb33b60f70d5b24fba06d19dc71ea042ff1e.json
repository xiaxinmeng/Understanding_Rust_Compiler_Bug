{"sha": "649beb33b60f70d5b24fba06d19dc71ea042ff1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5YmViMzNiNjBmNzBkNWIyNGZiYTA2ZDE5ZGM3MWVhMDQyZmYxZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2011-03-28T14:37:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2011-03-28T14:37:47Z"}, "message": "var-tracking.c (canonicalize_values_mark): Delete unused lhs assignment.\n\n\t* var-tracking.c (canonicalize_values_mark): Delete unused\n\tlhs assignment.\n\t(canonicalize_values_star, set_variable_part): Likewise.\n\t(clobber_variable_part, delete_variable_part): Likewise.\n\nFrom-SVN: r171606", "tree": {"sha": "c93cd62234cf7107e1217dbfd9fa2902fb6e335d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c93cd62234cf7107e1217dbfd9fa2902fb6e335d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/649beb33b60f70d5b24fba06d19dc71ea042ff1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649beb33b60f70d5b24fba06d19dc71ea042ff1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649beb33b60f70d5b24fba06d19dc71ea042ff1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649beb33b60f70d5b24fba06d19dc71ea042ff1e/comments", "author": null, "committer": null, "parents": [{"sha": "d5b8da97ebbc80048d486fbe3a0936d033f99aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5b8da97ebbc80048d486fbe3a0936d033f99aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5b8da97ebbc80048d486fbe3a0936d033f99aaf"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "ac86016629ecbd7a92181042f800844ed387ef85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649beb33b60f70d5b24fba06d19dc71ea042ff1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649beb33b60f70d5b24fba06d19dc71ea042ff1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=649beb33b60f70d5b24fba06d19dc71ea042ff1e", "patch": "@@ -1,3 +1,10 @@\n+2011-03-28  Jeff Law  <law@redhat.com>\n+\n+\t* var-tracking.c (canonicalize_values_mark): Delete unused\n+\tlhs assignment.\n+\t(canonicalize_values_star, set_variable_part): Likewise.\n+\t(clobber_variable_part, delete_variable_part): Likewise.\n+\n 2011-03-28  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* gcse.c (free_gcse_mem): Free reg_set_bitmap."}, {"sha": "ef0293790492b97dd219f9ce4f5f951672a3e23d", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649beb33b60f70d5b24fba06d19dc71ea042ff1e/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649beb33b60f70d5b24fba06d19dc71ea042ff1e/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=649beb33b60f70d5b24fba06d19dc71ea042ff1e", "patch": "@@ -3117,8 +3117,8 @@ canonicalize_values_mark (void **slot, void *data)\n \t    decl_or_value odv = dv_from_value (node->loc);\n \t    void **oslot = shared_hash_find_slot_noinsert (set->vars, odv);\n \n-\t    oslot = set_slot_part (set, val, oslot, odv, 0,\n-\t\t\t\t   node->init, NULL_RTX);\n+\t    set_slot_part (set, val, oslot, odv, 0,\n+\t\t\t   node->init, NULL_RTX);\n \n \t    VALUE_RECURSED_INTO (node->loc) = true;\n \t  }\n@@ -3329,8 +3329,8 @@ canonicalize_values_star (void **slot, void *data)\n       }\n \n   if (val)\n-    cslot = set_slot_part (set, val, cslot, cdv, 0,\n-\t\t\t   VAR_INIT_STATUS_INITIALIZED, NULL_RTX);\n+    set_slot_part (set, val, cslot, cdv, 0,\n+\t\t   VAR_INIT_STATUS_INITIALIZED, NULL_RTX);\n \n   slot = clobber_slot_part (set, cval, slot, 0, NULL);\n \n@@ -3401,7 +3401,7 @@ canonicalize_vars_star (void **slot, void *data)\n \n   slot = set_slot_part (set, cval, slot, dv, 0,\n \t\t\tnode->init, node->set_src);\n-  slot = clobber_slot_part (set, cval, slot, 0, node->set_src);\n+  clobber_slot_part (set, cval, slot, 0, node->set_src);\n \n   return 1;\n }\n@@ -7038,7 +7038,7 @@ set_variable_part (dataflow_set *set, rtx loc,\n       if (!slot)\n \tslot = shared_hash_find_slot_unshare (&set->vars, dv, iopt);\n     }\n-  slot = set_slot_part (set, loc, slot, dv, offset, initialized, set_src);\n+  set_slot_part (set, loc, slot, dv, offset, initialized, set_src);\n }\n \n /* Remove all recorded register locations for the given variable part\n@@ -7119,7 +7119,7 @@ clobber_variable_part (dataflow_set *set, rtx loc, decl_or_value dv,\n   if (!slot)\n     return;\n \n-  slot = clobber_slot_part (set, loc, slot, offset, set_src);\n+  clobber_slot_part (set, loc, slot, offset, set_src);\n }\n \n /* Delete the part of variable's location from dataflow set SET.  The\n@@ -7218,7 +7218,7 @@ delete_variable_part (dataflow_set *set, rtx loc, decl_or_value dv,\n   if (!slot)\n     return;\n \n-  slot = delete_slot_part (set, loc, slot, offset);\n+  delete_slot_part (set, loc, slot, offset);\n }\n \n /* Structure for passing some other parameters to function"}]}