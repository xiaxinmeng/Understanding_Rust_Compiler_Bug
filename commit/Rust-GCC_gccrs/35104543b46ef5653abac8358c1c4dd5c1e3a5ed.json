{"sha": "35104543b46ef5653abac8358c1c4dd5c1e3a5ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUxMDQ1NDNiNDZlZjU2NTNhYmFjODM1OGMxYzRkZDVjMWUzYTVlZA==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1994-08-29T21:43:34Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1994-08-29T21:43:34Z"}, "message": "Added coff and elf support.\n\nFrom-SVN: r7999", "tree": {"sha": "2f54e7795993d8e5ce24f85a0b3fc58520a1828d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f54e7795993d8e5ce24f85a0b3fc58520a1828d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35104543b46ef5653abac8358c1c4dd5c1e3a5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35104543b46ef5653abac8358c1c4dd5c1e3a5ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35104543b46ef5653abac8358c1c4dd5c1e3a5ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35104543b46ef5653abac8358c1c4dd5c1e3a5ed/comments", "author": null, "committer": null, "parents": [{"sha": "fd39ad06e41015c3783096cfec3b2737a26efcc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd39ad06e41015c3783096cfec3b2737a26efcc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd39ad06e41015c3783096cfec3b2737a26efcc1"}], "stats": {"total": 84, "additions": 76, "deletions": 8}, "files": [{"sha": "4c9fe3526aedc441d51d2651eb7ce68029a4a152", "filename": "gcc/listing", "status": "modified", "additions": 76, "deletions": 8, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35104543b46ef5653abac8358c1c4dd5c1e3a5ed/gcc%2Flisting", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35104543b46ef5653abac8358c1c4dd5c1e3a5ed/gcc%2Flisting", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flisting?ref=35104543b46ef5653abac8358c1c4dd5c1e3a5ed", "patch": "@@ -3,6 +3,9 @@\n # listing is always written to stdout.\n # Author: Igor Metz <metz@iam.unibe.ch>\n \n+# Revision 1.4  94/08/26  13:58:27  coxs <coxs@dg-rtp.dg.com>\n+# lister now guesses how to should be configured. Added elf and coff support.\n+#\n # Revision 1.3  89/12/18  13:58:27  metz\n # lister must now be configured before it can be used. This is done in the\n # /bin/sh part of the code.\n@@ -31,18 +34,46 @@\n # i386     for i386 (Sun i386, ...)\n # i386-linux for i386 (Linux, ...)\n \n-# uncomment the line you need:\n+# Guess what kind of objects we are creating and thus what type of assembler\n+# symbols to look for\n+\n+ex /tmp/$$.c <<END >/dev/null\n+a\n+main (){}\n+.\n+w\n+q\n+END\n+WD=`pwd`\n+cd /tmp\n+gcc -c $$.c\n+case \"`file $$.o`\" in \n+*ELF*) MYSYS=elf ;;\n+*COFF*|*BCS*) MYSYS=coff ;;\n+*mc68k*|*M68000*) MYSYS=mc68030 ;;\n+*SPARC*) MYSYS=sparc ;;\n+*386*) MYSYS=i386 ;;\n+esac\n+rm $$.c $$.o\n+cd $WD\n+\n+# uncomment the line you need if the above guesses incorrectly:\n # MYSYS=mc68020\n # MYSYS=mc68030\n # MYSYS=sparc\n # MYSYS=i386\n # MYSYS=i386-linux\n # MYSYS=`mach`  # this will work on Suns with SunOS > 4.0.0\n+# MYSYS=elf\n+# MYSYS=coff\n \n+WHOAMI=$0\n+if [ $# -gt 0 ] ; then\n FILENAME=$1\n shift\n+fi\n \n-exec gawk -vsys=$MYSYS -voptions=\"$*\" '\n+exec gawk -v whoami=$WHOAMI -vsys=$MYSYS -voptions=\"$*\" '\n # commandline arguments:\n #  ARGV[0] = \"gawk\"\n #  ARGV[1] = processid\n@@ -68,9 +99,26 @@ BEGIN {\n   # check processor architecture and set sourcecode line_hint accordingly\n   if (sys == \"sparc\" || sys == \"i386\") {\n     line_hint = \"^[ \\t]*\\.stabn.*\"\n+    line_field = 3;\n+    line_delimiter = \",\";\n+    line_offset = 0;\n   }\n   else if (sys == \"mc68020\" || sys == \"mc68030\" || sys == \"i386-linux\") {\n     line_hint = \"^[ \\t]*\\.stabd.*\"\n+    line_field = 3;\n+    line_delimiter = \",\";\n+    line_offset = 0;\n+  }\n+  else if (sys == \"elf\") {\n+    line_hint = \"section.*\\.line\"\n+    line_field = 3;\n+    line_delimiter = \"\\t\";\n+    line_offset = 0;\n+  }\n+  else if (sys == \"coff\") {\n+    line_hint = \"^[ \\t]*ln\"\n+    line_field = 3;\n+    line_delimiter = \"\\t\";\n   }\n   else {\n     error(\"Processor type \" sys \" is not supported yet, sorry\")\n@@ -89,14 +137,15 @@ BEGIN {\n \n   while ( getline asm_code < asm_filename > 0 ) {\n     if ( (ignore_stabd==0) && (asm_code ~ line_hint)) {\n+      while ( sys == \"elf\" && (asm_code !~ \"word\" && asm_code !~ \"byte\") && \n+        getline asm_code < asm_filename > 0);\n       # source line hint found. Split the line into fields separated by commas.\n       # num_of_fields is 4 for sparc, 3 for m68k\n-      num_of_fields = split(asm_code, fields, \",\")\n-      newlineno = fields[3] + 0 # the line number we are looking for is field 3\n+      num_of_fields = split(asm_code, fields, line_delimiter)\n+      newlineno = fields[line_field] + line_offset;\n \n       if (newlineno > oldlineno) {\n-        while ( newlineno > c_lineno ) {\n-\t  getline c_code < c_filename\n+        while ( newlineno > c_lineno && getline c_code < c_filename > 0) {\n \t  c_lineno++\n \t  printf(\"%4d %s\\n\", c_lineno, c_code)\n \t}\n@@ -112,6 +161,25 @@ BEGIN {\n         ignore_stabd = 1\n       }\n     }\n+    else if ( sys == \"elf\" && asm_code ~ \"section.*\\.debug\" ) {\n+      while ( asm_code !~ \"^[ \\t]*previous\" &&\n+\t      asm_code !~ \"\\.popsection\" && \n+              getline asm_code < asm_filename > 0 );\n+      if ( ! (getline asm_code < asm_filename > 0)) break;\n+    }\n+    else if ( sys == \"coff\" && asm_code ~ \"^[ \\t]*sdef\" ) {\n+      if ( asm_code ~ \"\\.bf\" ) {\n+         while ( asm_code !~ \"^[ \\t]*line\" && \n+                 getline asm_code < asm_filename > 0 ) {\n+           num_of_fields = split(asm_code, fields, \"\\t\")\n+           line_offset = fields[line_field] - 1;\n+         }\n+      }\n+      while ( asm_code !~ \"^[ \\t]*endef\" && \n+              getline asm_code < asm_filename > 0 ) {\n+      }\n+      if ( ! (getline asm_code < asm_filename > 0)) break;\n+    }\n     printf(\"\\t\\t\\t%s\\n\", asm_code)\n   }\n \n@@ -120,7 +188,7 @@ BEGIN {\n }\n \n function usage() {\n-    printf(\"usage: %s filename compiler-options\\n\", argv[0]) > \"/dev/stderr\"\n+    printf(\"usage: %s filename compiler-options\\n\", whoami) > \"/dev/stderr\"\n }\n \n function error(s) {\n@@ -139,7 +207,7 @@ function parse_cmdline(    i) {\n   if ( match(c_filename, \".C\") || match(c_filename, \".cc\") ) {\n     cmdline = \"g++\"\n   }\n-  else if (match(c_filename, \".c\")) {\n+  else if (match(c_filename, \".c\") || match(c_filename, \".i\")) {\n     cmdline = \"gcc\"\n   }\n   else {"}]}