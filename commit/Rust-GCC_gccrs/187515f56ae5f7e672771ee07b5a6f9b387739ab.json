{"sha": "187515f56ae5f7e672771ee07b5a6f9b387739ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg3NTE1ZjU2YWU1ZjdlNjcyNzcxZWUwN2I1YTZmOWIzODc3MzlhYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-01-26T09:02:55Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-01-26T09:02:55Z"}, "message": "rtl.c (get_mode_alignment): Moved to...\n\n* rtl.c (get_mode_alignment): Moved to...\n* stor-layout.c: ... here.\n\nFrom-SVN: r61824", "tree": {"sha": "1097a5d5da2e27530730d4af660b61faa604c164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1097a5d5da2e27530730d4af660b61faa604c164"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/187515f56ae5f7e672771ee07b5a6f9b387739ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187515f56ae5f7e672771ee07b5a6f9b387739ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187515f56ae5f7e672771ee07b5a6f9b387739ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187515f56ae5f7e672771ee07b5a6f9b387739ab/comments", "author": null, "committer": null, "parents": [{"sha": "6ebd2ef4423713984ac1b4fc42adce7114e75646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ebd2ef4423713984ac1b4fc42adce7114e75646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ebd2ef4423713984ac1b4fc42adce7114e75646"}], "stats": {"total": 53, "additions": 28, "deletions": 25}, "files": [{"sha": "6c6e0278d132661a10a2054a69003a08f8de3ba4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187515f56ae5f7e672771ee07b5a6f9b387739ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187515f56ae5f7e672771ee07b5a6f9b387739ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=187515f56ae5f7e672771ee07b5a6f9b387739ab", "patch": "@@ -1,5 +1,8 @@\n 2003-01-26  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* rtl.c (get_mode_alignment): Moved to...\n+\t* stor-layout.c: ... here.\n+\n \t* print-rtl.c (print_rtx): Don't print MEM details in\n \tGENERATOR_FILEs.\n "}, {"sha": "6414aec7d6c3bc1f39d46f91f962ffa609c51ce7", "filename": "gcc/rtl.c", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187515f56ae5f7e672771ee07b5a6f9b387739ab/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187515f56ae5f7e672771ee07b5a6f9b387739ab/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=187515f56ae5f7e672771ee07b5a6f9b387739ab", "patch": "@@ -1,6 +1,6 @@\n /* RTL utility routines.\n-   Copyright (C) 1987, 1988, 1991, 1994, 1997, 1998, 1999, 2000, 2001, 2002\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1991, 1994, 1997, 1998, 1999, 2000, 2001, 2002,\n+   2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -398,29 +398,6 @@ shallow_copy_rtx (orig)\n \n   return copy;\n }\n-\n-/* Return the alignment of MODE. This will be bounded by 1 and\n-   BIGGEST_ALIGNMENT.  */\n-\n-unsigned int\n-get_mode_alignment (mode)\n-     enum machine_mode mode;\n-{\n-  unsigned int alignment;\n-\n-  if (GET_MODE_CLASS (mode) == MODE_COMPLEX_FLOAT\n-      || GET_MODE_CLASS (mode) == MODE_COMPLEX_INT)\n-    alignment = GET_MODE_UNIT_SIZE (mode);\n-  else\n-    alignment = GET_MODE_SIZE (mode);\n-\n-  /* Extract the LSB of the size.  */\n-  alignment = alignment & -alignment;\n-  alignment *= BITS_PER_UNIT;\n-\n-  alignment = MIN (BIGGEST_ALIGNMENT, MAX (1, alignment));\n-  return alignment;\n-}\n \f\n /* This is 1 until after the rtl generation pass.  */\n int rtx_equal_function_value_matters;"}, {"sha": "4a55b66b95279ccc0eeb24b44d966f1db2954e90", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187515f56ae5f7e672771ee07b5a6f9b387739ab/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187515f56ae5f7e672771ee07b5a6f9b387739ab/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=187515f56ae5f7e672771ee07b5a6f9b387739ab", "patch": "@@ -305,6 +305,29 @@ int_mode_for_mode (mode)\n   return mode;\n }\n \n+/* Return the alignment of MODE. This will be bounded by 1 and\n+   BIGGEST_ALIGNMENT.  */\n+\n+unsigned int\n+get_mode_alignment (mode)\n+     enum machine_mode mode;\n+{\n+  unsigned int alignment;\n+\n+  if (GET_MODE_CLASS (mode) == MODE_COMPLEX_FLOAT\n+      || GET_MODE_CLASS (mode) == MODE_COMPLEX_INT)\n+    alignment = GET_MODE_UNIT_SIZE (mode);\n+  else\n+    alignment = GET_MODE_SIZE (mode);\n+\n+  /* Extract the LSB of the size.  */\n+  alignment = alignment & -alignment;\n+  alignment *= BITS_PER_UNIT;\n+\n+  alignment = MIN (BIGGEST_ALIGNMENT, MAX (1, alignment));\n+  return alignment;\n+}\n+\n /* Return the value of VALUE, rounded up to a multiple of DIVISOR.\n    This can only be applied to objects of a sizetype.  */\n "}]}