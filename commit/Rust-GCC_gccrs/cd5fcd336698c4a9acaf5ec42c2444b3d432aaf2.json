{"sha": "cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1ZmNkMzM2Njk4YzRhOWFjYWY1ZWM0MmMyNDQ0YjNkNDMyYWFmMg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2004-12-17T15:09:11Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-12-17T15:09:11Z"}, "message": "re PR java/18931 (Java bytecode ICE in except.c remove_unreachable_regions)\n\n2004-12-17  Andrew Haley  <aph@redhat.com>\n\n        PR java/18931\n        * typeck.c (convert): Use a CONVERT_EXPR when converting to\n        BOOLEAN_TYPE or CHAR_TYPE.\n        (convert_to_boolean, convert_to_char) : Remove.\n        * convert.h (convert_to_boolean, convert_to_char) : Remove.\n        * expr.c (expand_load_internal): Do type conversion if type is not\n        as required.\n\nFrom-SVN: r92314", "tree": {"sha": "84788bbf3494f51aaf3b9a72b5efd940a15ed280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84788bbf3494f51aaf3b9a72b5efd940a15ed280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9a490a0cb9683fb985762334680a9489dce6090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a490a0cb9683fb985762334680a9489dce6090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a490a0cb9683fb985762334680a9489dce6090"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "fba183309451c677627abae547e760cd2a4db4ea", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "patch": "@@ -1,3 +1,13 @@\n+2004-12-17  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/18931\n+\t* typeck.c (convert): Use a CONVERT_EXPR when converting to\n+\tBOOLEAN_TYPE or CHAR_TYPE.\n+\t(convert_to_boolean, convert_to_char) : Remove.\n+\t* convert.h (convert_to_boolean, convert_to_char) : Remove.\n+\t* expr.c (expand_load_internal): Do type conversion if type is not\n+\tas required.\n+\t\n 2004-12-13  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/18459\n@@ -51,7 +61,7 @@\n \trange we're demoting.\n \n 2004-12-03  Andrew Haley  <aph@redhat.com>\n-\n+\t\n \tPR java/18697 \n \t* class.c (layout_class_method): Don't fail to override a method\n \tsimply because it has DECL_ARTIFICIAL set."}, {"sha": "c27ceed2510c76e1966295b179b196d1e33d5f47", "filename": "gcc/java/convert.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2Fconvert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2Fconvert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconvert.h?ref=cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "patch": "@@ -20,8 +20,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* Written by Jeffrey Hsu <hsu@cygnus.com> */\n \n-extern tree convert_to_boolean (tree, tree);\n-extern tree convert_to_char (tree, tree);\n extern tree convert_to_integer (tree type, tree expr);\n extern tree convert_to_real (tree type, tree expr);\n extern tree convert_to_pointer (tree type, tree expr);"}, {"sha": "8c1ad70e14170314c67b909b38e5f9e8f4d7194a", "filename": "gcc/java/expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "patch": "@@ -1329,6 +1329,9 @@ expand_load_internal (int index, tree type, int pc)\n      value into it.  Then we push this new local on the stack.\n      Hopefully this all gets optimized out.  */\n   copy = build_decl (VAR_DECL, NULL_TREE, type);\n+  if (INTEGRAL_TYPE_P (type)\n+      && TREE_TYPE (copy) != TREE_TYPE (var))\n+    var = convert (type, var);\n   java_add_local_var (copy);\n   java_add_stmt (build2 (MODIFY_EXPR, TREE_TYPE (var), copy, var));\n   "}, {"sha": "2b85e475d95bdbb384497dc86f20de5b4ffc89f8", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=cd5fcd336698c4a9acaf5ec42c2444b3d432aaf2", "patch": "@@ -129,8 +129,8 @@ convert (tree type, tree expr)\n     return error_mark_node;\n   if (code == VOID_TYPE)\n     return build1 (CONVERT_EXPR, type, expr);\n-  if (code == BOOLEAN_TYPE)\n-    return fold (convert_to_boolean (type, expr));\n+  if (code == BOOLEAN_TYPE || code ==  CHAR_TYPE)\n+    return fold (build1 (CONVERT_EXPR, type, expr));\n   if (code == INTEGER_TYPE)\n     {\n       if ((really_constant_p (expr)\n@@ -151,27 +151,13 @@ convert (tree type, tree expr)\n     }\t  \n   if (code == REAL_TYPE)\n     return fold (convert_to_real (type, expr));\n-  if (code == CHAR_TYPE)\n-    return fold (convert_to_char (type, expr));\n   if (code == POINTER_TYPE)\n     return fold (convert_to_pointer (type, expr));\n   error (\"conversion to non-scalar type requested\");\n   return error_mark_node;\n }\n \n \n-tree\n-convert_to_char (tree type, tree expr)\n-{\n-  return build1 (NOP_EXPR, type, expr);\n-}\n-\n-tree\n-convert_to_boolean (tree type, tree expr)\n-{\n-  return build1 (NOP_EXPR, type, expr);\n-}\n-\n /* Return a data type that has machine mode MODE.\n    If the mode is an integer,\n    then UNSIGNEDP selects between signed and unsigned types.  */"}]}