{"sha": "1da8ab97a129ded60471ffcc2595ddce67336cd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRhOGFiOTdhMTI5ZGVkNjA0NzFmZmNjMjU5NWRkY2U2NzMzNmNkOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-30T11:00:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-30T11:00:35Z"}, "message": "Mark 2nd argument of delete operator as needed (PR tree-optimization/91270).\n\n2019-07-30  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/91270\n\t* tree-ssa-dce.c (propagate_necessity): Mark 2nd argument\n\tof delete operator as needed.\n2019-07-30  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/91270\n\t* g++.dg/torture/pr91270.C: New test.\n\nFrom-SVN: r273906", "tree": {"sha": "ecadba9c3e02b27aff8ff76cdbcd62a2611e04a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecadba9c3e02b27aff8ff76cdbcd62a2611e04a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1da8ab97a129ded60471ffcc2595ddce67336cd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da8ab97a129ded60471ffcc2595ddce67336cd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1da8ab97a129ded60471ffcc2595ddce67336cd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da8ab97a129ded60471ffcc2595ddce67336cd8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1b3d827832f883e0634b18c88eb2bbde335aa42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b3d827832f883e0634b18c88eb2bbde335aa42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b3d827832f883e0634b18c88eb2bbde335aa42"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "425eea11a7cb17b6b17a2223b12278eb847aecff", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1da8ab97a129ded60471ffcc2595ddce67336cd8", "patch": "@@ -1,3 +1,9 @@\n+2019-07-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/91270\n+\t* tree-ssa-dce.c (propagate_necessity): Mark 2nd argument\n+\tof delete operator as needed.\n+\n 2019-07-25  Martin Liska  <mliska@suse.cz>\n \t    Dominik Infuhr  <dominik.infuehr@theobroma-systems.com>\n "}, {"sha": "bad5687182392feb22178f32a313590f5110d1c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1da8ab97a129ded60471ffcc2595ddce67336cd8", "patch": "@@ -1,3 +1,8 @@\n+2019-07-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/91270\n+\t* g++.dg/torture/pr91270.C: New test.\n+\n 2019-07-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/vect/vect-cond-arith-7.c: New test."}, {"sha": "60d766e9e9f0ab808c5c8bba0e6918fb1420c36b", "filename": "gcc/testsuite/g++.dg/torture/pr91270.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr91270.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr91270.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr91270.C?ref=1da8ab97a129ded60471ffcc2595ddce67336cd8", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+\n+struct S {\n+  ~S();\n+};\n+int a = 123;\n+void fn1() {\n+  S *s = new S[a];\n+  delete[] s;\n+}"}, {"sha": "bec13cd593092ba67e2413f26b7dd3119179e3fb", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da8ab97a129ded60471ffcc2595ddce67336cd8/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=1da8ab97a129ded60471ffcc2595ddce67336cd8", "patch": "@@ -804,10 +804,11 @@ propagate_necessity (bool aggressive)\n \t  /* If this is a call to free which is directly fed by an\n \t     allocation function do not mark that necessary through\n \t     processing the argument.  */\n-\t  if (gimple_call_builtin_p (stmt, BUILT_IN_FREE)\n-\t      || (is_gimple_call (stmt)\n-\t\t  && gimple_call_operator_delete_p (as_a <gcall *> (stmt))))\n-\n+\t  bool is_delete_operator\n+\t    = (is_gimple_call (stmt)\n+\t       && gimple_call_operator_delete_p (as_a <gcall *> (stmt)));\n+\t  if (is_delete_operator\n+\t      || gimple_call_builtin_p (stmt, BUILT_IN_FREE))\n \t    {\n \t      tree ptr = gimple_call_arg (stmt, 0);\n \t      gimple *def_stmt;\n@@ -822,7 +823,17 @@ propagate_necessity (bool aggressive)\n \t\t\t   || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_MALLOC\n \t\t\t   || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_CALLOC))\n \t\t      || DECL_IS_REPLACEABLE_OPERATOR_NEW_P (def_callee)))\n-\t\tcontinue;\n+\t\t{\n+\t\t  /* Some delete operators have size as 2nd argument.  */\n+\t\t  if (is_delete_operator && gimple_call_num_args (stmt) >= 2)\n+\t\t    {\n+\t\t      tree size_argument = gimple_call_arg (stmt, 1);\n+\t\t      if (TREE_CODE (size_argument) == SSA_NAME)\n+\t\t\tmark_operand_necessary (size_argument);\n+\t\t    }\n+\n+\t\t  continue;\n+\t\t}\n \t    }\n \n \t  FOR_EACH_SSA_TREE_OPERAND (use, stmt, iter, SSA_OP_USE)"}]}