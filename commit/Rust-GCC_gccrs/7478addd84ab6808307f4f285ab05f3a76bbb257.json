{"sha": "7478addd84ab6808307f4f285ab05f3a76bbb257", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3OGFkZGQ4NGFiNjgwODMwN2Y0ZjI4NWFiMDVmM2E3NmJiYjI1Nw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-10T07:35:09Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-10T10:46:12Z"}, "message": "libphobos: Use libdruntime as a convenience library for libphobos.\n\nAs a prerequesite for PR94304, it becomes easier to manage selectively\ncompiling sublibraries when there's only one library to link to.\n\nSo a druntime convenience library is built to be part of phobos, however\nseparate druntime library is still built and installed, to allow linking\nonly to the core runtime explicitly, rather than pulling in the entire\nstandard library with it.\n\nThe gdc driver no longer generates an '-lgdruntime' option, and the\ninclusion of the libdruntime library path has been removed from the\ntestsuite.\n\ngcc/d/ChangeLog:\n\n\t* d-spec.cc (LIBDRUNTIME): Remove.\n\t(LIBDRUNTIME_PROFILE): Remove.\n\t(lang_specific_driver): Don't link in libgdruntime.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/gdc.exp (gdc_link_flags): Remove libdruntime library path.\n\nlibphobos/ChangeLog:\n\n\t* d_rules.am (libdgruntime_la_LINK): Move to libdruntime/Makefile.am.\n\t(libgphobos_la_LINK): Move to src/Makefile.am\n\t* libdruntime/Makefile.am: Add libgdruntime_convenience library.\n\t* libdruntime/Makefile.in: Regenerate.\n\t* src/Makefile.am (libgphobos_la_LIBADD): Add libgdruntime_convenience\n\tlibrary.\n\t(libgphobos_la_DEPENDENCIES): Likewise.\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/lib/libphobos.exp: Remove libdruntime library paths.\n\t* testsuite/testsuite_flags.in: Likewise.", "tree": {"sha": "a02427985f419db2885fb3a43c254876a39a8baf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a02427985f419db2885fb3a43c254876a39a8baf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7478addd84ab6808307f4f285ab05f3a76bbb257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7478addd84ab6808307f4f285ab05f3a76bbb257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7478addd84ab6808307f4f285ab05f3a76bbb257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7478addd84ab6808307f4f285ab05f3a76bbb257/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c4a05f251ae8a39fa896524defaf4228328c259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4a05f251ae8a39fa896524defaf4228328c259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c4a05f251ae8a39fa896524defaf4228328c259"}], "stats": {"total": 258, "additions": 183, "deletions": 75}, "files": [{"sha": "5f7e9672866c6fc3de80591836195e3a1fc0c1af", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -1,3 +1,9 @@\n+2020-04-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.cc (LIBDRUNTIME): Remove.\n+\t(LIBDRUNTIME_PROFILE): Remove.\n+\t(lang_specific_driver): Don't link in libgdruntime.\n+\n 2020-04-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/94425"}, {"sha": "e0844222520aa3ec84eba057bd0fe939ab30c8b3", "filename": "gcc/d/d-spec.cc", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Fd%2Fd-spec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Fd%2Fd-spec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-spec.cc?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -44,13 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #define LIBPHOBOS_PROFILE LIBPHOBOS\n #endif\n \n-#ifndef LIBDRUNTIME\n-#define LIBDRUNTIME \"gdruntime\"\n-#endif\n-#ifndef LIBDRUNTIME_PROFILE\n-#define LIBDRUNTIME_PROFILE LIBDRUNTIME\n-#endif\n-\n /* What do with libgphobos.  */\n enum phobos_action\n {\n@@ -322,7 +315,7 @@ lang_specific_driver (cl_decoded_option **in_decoded_options,\n \n   /* Make sure to have room for the trailing NULL argument.\n      - needstdcxx might add `-lstdcxx'\n-     - libphobos adds `-Bstatic -lphobos -ldruntime -Bdynamic'\n+     - libphobos adds `-Bstatic -lphobos -Bdynamic'\n      - only_source adds 1 more arg, also maybe add `-o'.  */\n   num_args = argc + need_stdcxx + shared_libgcc + need_phobos * 4 + 2;\n   new_decoded_options = XNEWVEC (cl_decoded_option, num_args);\n@@ -442,11 +435,6 @@ lang_specific_driver (cl_decoded_option **in_decoded_options,\n \t\t       CL_DRIVER, &new_decoded_options[j]);\n       added_libraries++;\n       j++;\n-      generate_option (OPT_l,\n-\t\t       saw_profile_flag ? LIBDRUNTIME_PROFILE : LIBDRUNTIME, 1,\n-\t\t       CL_DRIVER, &new_decoded_options[j]);\n-      added_libraries++;\n-      j++;\n \n #ifdef HAVE_LD_STATIC_DYNAMIC\n       if (phobos_library == PHOBOS_DYNAMIC && static_link)"}, {"sha": "bced3e27d86de08fa273ff941592ac363ad33ae3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -1,3 +1,7 @@\n+2020-04-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lib/gdc.exp (gdc_link_flags): Remove libdruntime library paths.\n+\n 2020-04-10  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \t* g++.dg/coroutines/co-await-syntax-10.C: New test."}, {"sha": "3912d9c1e2196d839c1f5c7279fb3f2a06a90dbf", "filename": "gcc/testsuite/lib/gdc.exp", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Ftestsuite%2Flib%2Fgdc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/gcc%2Ftestsuite%2Flib%2Fgdc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgdc.exp?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -146,16 +146,11 @@ proc gdc_link_flags { paths } {\n \t    append flags \"-L${gccpath}/libphobos/src/.libs \"\n \t    append ld_library_path \":${gccpath}/libphobos/src/.libs\"\n \t}\n-\tif { [file exists \"${gccpath}/libphobos/libdruntime/.libs/libgdruntime.a\"] \\\n-\t     || [file exists \"${gccpath}/libphobos/libdruntime/.libs/libgdruntime.${shlib_ext}\"] } {\n-\t    append flags \"-L${gccpath}/libphobos/libdruntime/.libs \"\n-\t    append ld_library_path \":${gccpath}/libphobos/libdruntime/.libs\"\n-\t}\n \t# Static linking is default. If only the shared lib is available adjust\n \t# flags to always use it. If both are available, set SHARED_OPTION which\n \t# will be added to PERMUTE_ARGS\n-\tif { [file exists \"${gccpath}/libphobos/libdruntime/.libs/libgdruntime.${shlib_ext}\"] } {\n-\t    if { [file exists \"${gccpath}/libphobos/libdruntime/.libs/libgdruntime.a\"] } {\n+\tif { [file exists \"${gccpath}/libphobos/src/.libs/libgphobos.${shlib_ext}\"] } {\n+\t    if { [file exists \"${gccpath}/libphobos/src/.libs/libgphobos.a\"] } {\n \t\tset SHARED_OPTION \"-shared-libphobos\"\n \t    } else {\n \t\tappend flags \"-shared-libphobos \"\n@@ -181,11 +176,6 @@ proc gdc_link_flags { paths } {\n \t    append flags \"-B${libphobos} -L${libphobos} \"\n \t    append ld_library_path \":${libphobos}\"\n \t}\n-\tset libdruntime [lookfor_file ${tool_root_dir} libgdruntime]\n-\tif { $libdruntime != \"\" } {\n-\t    append flags \"-L${libdruntime} \"\n-\t    append ld_library_path \":${libdruntime}\"\n-\t}\n \tset libiberty [lookfor_file ${tool_root_dir} libiberty]\n \tif { $libiberty != \"\" } {\n \t    append flags \"-L${libiberty} \""}, {"sha": "653f48115bdf49aab37372070761cee734deaebe", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -1,3 +1,16 @@\n+2020-04-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d_rules.am (libdgruntime_la_LINK): Move to libdruntime/Makefile.am.\n+\t(libgphobos_la_LINK): Move to src/Makefile.am\n+\t* libdruntime/Makefile.am: Add libgdruntime_convenience library.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* src/Makefile.am (libgphobos_la_LIBADD): Add libgdruntime_convenience\n+\tlibrary.\n+\t(libgphobos_la_DEPENDENCIES): Likewise.\n+\t* src/Makefile.in: Regenerate.\n+\t* testsuite/lib/libphobos.exp: Remove libdruntime library paths.\n+\t* testsuite/testsuite_flags.in: Likewise.\n+\n 2020-04-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* configure: Regenerate."}, {"sha": "c05c8e8c6909ccc7d77d3ee374be13433e76b318", "filename": "libphobos/d_rules.am", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Fd_rules.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Fd_rules.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fd_rules.am?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -32,14 +32,3 @@ toolexeclibdir = $(libphobos_toolexeclibdir)\n \n LTDCOMPILE = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(GDC) $(AM_DFLAGS)\n-\n-# Also override library link commands: This is not strictly\n-# required, but we want to record additional dependencies such\n-# as pthread in the library\n-libgdruntime_la_LINK = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(libgdruntime_la_LDFLAGS) $(LDFLAGS) -o $@\n-\n-libgphobos_la_LINK = $(LIBTOOL) --tag=D $(libgphobos_la_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(libgphobos_la_LDFLAGS) $(LDFLAGS) -o $@"}, {"sha": "e1a38153de0fd23e1c254d950799c92c54d2f786", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -119,13 +119,30 @@ DRUNTIME_DSOURCES_GENERATED = gcc/config.d gcc/libbacktrace.d\n ALL_DRUNTIME_SOURCES = $(DRUNTIME_DSOURCES) $(DRUNTIME_CSOURCES) \\\n \t$(DRUNTIME_SOURCES_CONFIGURED) $(DRUNTIME_DSOURCES_GENERATED)\n \n+# Need this library to both be part of libgphobos.a, and installed separately.\n+# 1) separate libgdruntime.la\n toolexeclib_LTLIBRARIES = libgdruntime.la\n libgdruntime_la_SOURCES = $(ALL_DRUNTIME_SOURCES)\n libgdruntime_la_LIBTOOLFLAGS =\n libgdruntime_la_LDFLAGS = -Wc,-nophoboslib,-dstartfiles,-B../src,-Bgcc \\\n     -version-info $(libtool_VERSION)\n libgdruntime_la_LIBADD = $(LIBATOMIC) $(LIBBACKTRACE)\n libgdruntime_la_DEPENDENCIES = $(DRTSTUFF)\n+# Also override library link commands: This is not strictly\n+# required, but we want to record additional dependencies such\n+# as pthread in the library\n+libgdruntime_la_LINK = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(libgdruntime_la_LDFLAGS) $(LDFLAGS) -o $@\n+\n+# 2) integrated libgdruntime_convenience.la that is to be part of libgphobos.a\n+noinst_LTLIBRARIES = libgdruntime_convenience.la\n+libgdruntime_convenience_la_SOURCES = $(libgdruntime_la_SOURCES)\n+libgdruntime_convenience_la_LIBTOOLFLAGS = $(libgdruntime_la_LIBTOOLFLAGS)\n+libgdruntime_convenience_la_LDFLAGS = $(libgdruntime_la_LDFLAGS)\n+libgdruntime_convenience_la_LIBADD = $(libgdruntime_la_LIBADD)\n+libgdruntime_convenience_la_DEPENDENCIES = $(libgdruntime_la_DEPENDENCIES)\n+libgdruntime_convenience_la_LINK = $(libgdruntime_la_LINK)\n \n # Handles generated files as well\n install-data-local:"}, {"sha": "3bb023ffc976d78f7d3471321f44fb8496639fae", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 115, "deletions": 18, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -181,7 +181,7 @@ am__uninstall_files_from_dir = { \\\n   }\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n \t\"$(DESTDIR)$(toolexeclibdir)\"\n-LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n+LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n am__dirstamp = $(am__leading_dot)dirstamp\n am__objects_1 = core/atomic.lo core/attribute.lo core/bitop.lo \\\n@@ -459,6 +459,30 @@ am__objects_34 = $(am__objects_1) $(am__objects_2) $(am__objects_32) \\\n \t$(am__objects_33)\n am_libgdruntime_la_OBJECTS = $(am__objects_34)\n libgdruntime_la_OBJECTS = $(am_libgdruntime_la_OBJECTS)\n+am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n+am__objects_35 = core/stdc/libgdruntime_convenience_la-errno_.lo\n+@DRUNTIME_CPU_AARCH64_TRUE@am__objects_36 = config/aarch64/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_ARM_TRUE@am__objects_37 = config/arm/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_MIPS_TRUE@am__objects_38 = config/mips/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_39 = config/powerpc/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_POWERPC64_TRUE@am__objects_40 = config/powerpc64/libgdruntime_convenience_la-callwithstack.lo\n+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_41 = config/mingw/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_42 = config/x86/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_43 = config/systemz/libgdruntime_convenience_la-get_tls_offset.lo\n+@DRUNTIME_CPU_S390_TRUE@am__objects_44 = config/s390/libgdruntime_convenience_la-get_tls_offset.lo\n+am__objects_45 = $(am__objects_4) $(am__objects_6) $(am__objects_8) \\\n+\t$(am__objects_10) $(am__objects_12) $(am__objects_14) \\\n+\t$(am__objects_16) $(am__objects_18) $(am__objects_20) \\\n+\t$(am__objects_22) $(am__objects_36) $(am__objects_37) \\\n+\t$(am__objects_38) $(am__objects_39) $(am__objects_40) \\\n+\t$(am__objects_41) $(am__objects_42) $(am__objects_43) \\\n+\t$(am__objects_44)\n+am__objects_46 = $(am__objects_1) $(am__objects_35) $(am__objects_45) \\\n+\t$(am__objects_33)\n+am__objects_47 = $(am__objects_46)\n+am_libgdruntime_convenience_la_OBJECTS = $(am__objects_47)\n+libgdruntime_convenience_la_OBJECTS =  \\\n+\t$(am_libgdruntime_convenience_la_OBJECTS)\n AM_V_P = $(am__v_P_@AM_V@)\n am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n am__v_P_0 = false\n@@ -505,7 +529,8 @@ AM_V_CCLD = $(am__v_CCLD_@AM_V@)\n am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\n am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n am__v_CCLD_1 = \n-SOURCES = $(libgdruntime_la_SOURCES)\n+SOURCES = $(libgdruntime_la_SOURCES) \\\n+\t$(libgdruntime_convenience_la_SOURCES)\n am__can_run_installinfo = \\\n   case $$AM_UPDATE_INFO_DIR in \\\n     n|no|NO) false;; \\\n@@ -689,18 +714,6 @@ LTDCOMPILE = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(GDC) $(AM_DFLAGS)\n \n \n-# Also override library link commands: This is not strictly\n-# required, but we want to record additional dependencies such\n-# as pthread in the library\n-libgdruntime_la_LINK = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(libgdruntime_la_LDFLAGS) $(LDFLAGS) -o $@\n-\n-libgphobos_la_LINK = $(LIBTOOL) --tag=D $(libgphobos_la_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(libgphobos_la_LDFLAGS) $(LDFLAGS) -o $@\n-\n-\n # Include D build rules\n \n # Make sure GDC can find libdruntime include files\n@@ -741,6 +754,9 @@ DRUNTIME_DSOURCES_GENERATED = gcc/config.d gcc/libbacktrace.d\n ALL_DRUNTIME_SOURCES = $(DRUNTIME_DSOURCES) $(DRUNTIME_CSOURCES) \\\n \t$(DRUNTIME_SOURCES_CONFIGURED) $(DRUNTIME_DSOURCES_GENERATED)\n \n+\n+# Need this library to both be part of libgphobos.a, and installed separately.\n+# 1) separate libgdruntime.la\n toolexeclib_LTLIBRARIES = libgdruntime.la\n libgdruntime_la_SOURCES = $(ALL_DRUNTIME_SOURCES)\n libgdruntime_la_LIBTOOLFLAGS = \n@@ -749,6 +765,22 @@ libgdruntime_la_LDFLAGS = -Wc,-nophoboslib,-dstartfiles,-B../src,-Bgcc \\\n \n libgdruntime_la_LIBADD = $(LIBATOMIC) $(LIBBACKTRACE)\n libgdruntime_la_DEPENDENCIES = $(DRTSTUFF)\n+# Also override library link commands: This is not strictly\n+# required, but we want to record additional dependencies such\n+# as pthread in the library\n+libgdruntime_la_LINK = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(libgdruntime_la_LDFLAGS) $(LDFLAGS) -o $@\n+\n+\n+# 2) integrated libgdruntime_convenience.la that is to be part of libgphobos.a\n+noinst_LTLIBRARIES = libgdruntime_convenience.la\n+libgdruntime_convenience_la_SOURCES = $(libgdruntime_la_SOURCES)\n+libgdruntime_convenience_la_LIBTOOLFLAGS = $(libgdruntime_la_LIBTOOLFLAGS)\n+libgdruntime_convenience_la_LDFLAGS = $(libgdruntime_la_LDFLAGS)\n+libgdruntime_convenience_la_LIBADD = $(libgdruntime_la_LIBADD)\n+libgdruntime_convenience_la_DEPENDENCIES = $(libgdruntime_la_DEPENDENCIES)\n+libgdruntime_convenience_la_LINK = $(libgdruntime_la_LINK)\n \n # Source file definitions. Boring stuff, auto-generated with\n # https://gist.github.com/jpf91/8ad1dbc9902d6ad876313f134c6527d1\n@@ -1024,6 +1056,17 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n $(am__aclocal_m4_deps):\n \n+clean-noinstLTLIBRARIES:\n+\t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n+\t@list='$(noinst_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+\n install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n \t@$(NORMAL_INSTALL)\n \t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n@@ -1745,6 +1788,29 @@ gcc/libbacktrace.lo: gcc/$(am__dirstamp)\n \n libgdruntime.la: $(libgdruntime_la_OBJECTS) $(libgdruntime_la_DEPENDENCIES) $(EXTRA_libgdruntime_la_DEPENDENCIES) \n \t$(AM_V_GEN)$(libgdruntime_la_LINK) -rpath $(toolexeclibdir) $(libgdruntime_la_OBJECTS) $(libgdruntime_la_LIBADD) $(LIBS)\n+core/stdc/libgdruntime_convenience_la-errno_.lo:  \\\n+\tcore/stdc/$(am__dirstamp)\n+config/aarch64/libgdruntime_convenience_la-switchcontext.lo:  \\\n+\tconfig/aarch64/$(am__dirstamp)\n+config/arm/libgdruntime_convenience_la-switchcontext.lo:  \\\n+\tconfig/arm/$(am__dirstamp)\n+config/mips/libgdruntime_convenience_la-switchcontext.lo:  \\\n+\tconfig/mips/$(am__dirstamp)\n+config/powerpc/libgdruntime_convenience_la-switchcontext.lo:  \\\n+\tconfig/powerpc/$(am__dirstamp)\n+config/powerpc64/libgdruntime_convenience_la-callwithstack.lo:  \\\n+\tconfig/powerpc64/$(am__dirstamp)\n+config/mingw/libgdruntime_convenience_la-switchcontext.lo:  \\\n+\tconfig/mingw/$(am__dirstamp)\n+config/x86/libgdruntime_convenience_la-switchcontext.lo:  \\\n+\tconfig/x86/$(am__dirstamp)\n+config/systemz/libgdruntime_convenience_la-get_tls_offset.lo:  \\\n+\tconfig/systemz/$(am__dirstamp)\n+config/s390/libgdruntime_convenience_la-get_tls_offset.lo:  \\\n+\tconfig/s390/$(am__dirstamp)\n+\n+libgdruntime_convenience.la: $(libgdruntime_convenience_la_OBJECTS) $(libgdruntime_convenience_la_DEPENDENCIES) $(EXTRA_libgdruntime_convenience_la_DEPENDENCIES) \n+\t$(AM_V_GEN)$(libgdruntime_convenience_la_LINK)  $(libgdruntime_convenience_la_OBJECTS) $(libgdruntime_convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n@@ -1888,6 +1954,33 @@ config/systemz/libgdruntime_la-get_tls_offset.lo: config/systemz/get_tls_offset.\n config/s390/libgdruntime_la-get_tls_offset.lo: config/s390/get_tls_offset.S\n \t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/s390/libgdruntime_la-get_tls_offset.lo `test -f 'config/s390/get_tls_offset.S' || echo '$(srcdir)/'`config/s390/get_tls_offset.S\n \n+config/aarch64/libgdruntime_convenience_la-switchcontext.lo: config/aarch64/switchcontext.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/aarch64/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/aarch64/switchcontext.S' || echo '$(srcdir)/'`config/aarch64/switchcontext.S\n+\n+config/arm/libgdruntime_convenience_la-switchcontext.lo: config/arm/switchcontext.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/arm/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/arm/switchcontext.S' || echo '$(srcdir)/'`config/arm/switchcontext.S\n+\n+config/mips/libgdruntime_convenience_la-switchcontext.lo: config/mips/switchcontext.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/mips/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/mips/switchcontext.S' || echo '$(srcdir)/'`config/mips/switchcontext.S\n+\n+config/powerpc/libgdruntime_convenience_la-switchcontext.lo: config/powerpc/switchcontext.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/powerpc/switchcontext.S' || echo '$(srcdir)/'`config/powerpc/switchcontext.S\n+\n+config/powerpc64/libgdruntime_convenience_la-callwithstack.lo: config/powerpc64/callwithstack.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc64/libgdruntime_convenience_la-callwithstack.lo `test -f 'config/powerpc64/callwithstack.S' || echo '$(srcdir)/'`config/powerpc64/callwithstack.S\n+\n+config/mingw/libgdruntime_convenience_la-switchcontext.lo: config/mingw/switchcontext.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/mingw/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/mingw/switchcontext.S' || echo '$(srcdir)/'`config/mingw/switchcontext.S\n+\n+config/x86/libgdruntime_convenience_la-switchcontext.lo: config/x86/switchcontext.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/x86/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/x86/switchcontext.S' || echo '$(srcdir)/'`config/x86/switchcontext.S\n+\n+config/systemz/libgdruntime_convenience_la-get_tls_offset.lo: config/systemz/get_tls_offset.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/systemz/libgdruntime_convenience_la-get_tls_offset.lo `test -f 'config/systemz/get_tls_offset.S' || echo '$(srcdir)/'`config/systemz/get_tls_offset.S\n+\n+config/s390/libgdruntime_convenience_la-get_tls_offset.lo: config/s390/get_tls_offset.S\n+\t$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/s390/libgdruntime_convenience_la-get_tls_offset.lo `test -f 'config/s390/get_tls_offset.S' || echo '$(srcdir)/'`config/s390/get_tls_offset.S\n+\n .c.o:\n \t$(AM_V_CC)$(COMPILE) -c -o $@ $<\n \n@@ -1900,6 +1993,9 @@ config/s390/libgdruntime_la-get_tls_offset.lo: config/s390/get_tls_offset.S\n core/stdc/libgdruntime_la-errno_.lo: core/stdc/errno_.c\n \t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o core/stdc/libgdruntime_la-errno_.lo `test -f 'core/stdc/errno_.c' || echo '$(srcdir)/'`core/stdc/errno_.c\n \n+core/stdc/libgdruntime_convenience_la-errno_.lo: core/stdc/errno_.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o core/stdc/libgdruntime_convenience_la-errno_.lo `test -f 'core/stdc/errno_.c' || echo '$(srcdir)/'`core/stdc/errno_.c\n+\n mostlyclean-libtool:\n \t-rm -f *.lo\n \n@@ -2117,8 +2213,8 @@ maintainer-clean-generic:\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n clean: clean-am\n \n-clean-am: clean-generic clean-libtool clean-toolexeclibLTLIBRARIES \\\n-\tmostlyclean-am\n+clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES mostlyclean-am\n \n distclean: distclean-am\n \t-rm -f Makefile\n@@ -2189,8 +2285,9 @@ uninstall-am: uninstall-toolexeclibDATA \\\n .MAKE: install-am install-strip\n \n .PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \\\n-\tclean-libtool clean-toolexeclibLTLIBRARIES cscopelist-am ctags \\\n-\tctags-am distclean distclean-compile distclean-generic \\\n+\tclean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES cscopelist-am ctags ctags-am \\\n+\tdistclean distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-tags dvi dvi-am html html-am info \\\n \tinfo-am install install-am install-data install-data-am \\\n \tinstall-data-local install-dvi install-dvi-am install-exec \\"}, {"sha": "51e3f5015654c9db9d99d1d961be8e123da08c8a", "filename": "libphobos/src/Makefile.am", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.am?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -42,8 +42,17 @@ libgphobos_la_SOURCES = $(ALL_PHOBOS_SOURCES)\n libgphobos_la_LIBTOOLFLAGS =\n libgphobos_la_LDFLAGS = -Wc,-nophoboslib,-dstartfiles,-B../libdruntime/gcc \\\n     -version-info $(libtool_VERSION)\n-libgphobos_la_LIBADD = ../libdruntime/libgdruntime.la $(LIBZ)\n-libgphobos_la_DEPENDENCIES = libgphobos.spec\n+libgphobos_la_LIBADD = \\\n+    ../libdruntime/libgdruntime_convenience.la $(LIBZ)\n+libgphobos_la_DEPENDENCIES = \\\n+    ../libdruntime/libgdruntime_convenience.la libgphobos.spec\n+\n+# Also override library link commands: This is not strictly\n+# required, but we want to record additional dependencies such\n+# as pthread in the library\n+libgphobos_la_LINK = $(LIBTOOL) --tag=D $(libgphobos_la_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(libgphobos_la_LDFLAGS) $(LDFLAGS) -o $@\n \n # Handles generated files as well\n install-data-local:"}, {"sha": "da9ba834c4bf657431433d107c3726307e2feb07", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -419,18 +419,6 @@ LTDCOMPILE = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(GDC) $(AM_DFLAGS)\n \n \n-# Also override library link commands: This is not strictly\n-# required, but we want to record additional dependencies such\n-# as pthread in the library\n-libgdruntime_la_LINK = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(libgdruntime_la_LDFLAGS) $(LDFLAGS) -o $@\n-\n-libgphobos_la_LINK = $(LIBTOOL) --tag=D $(libgphobos_la_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(libgphobos_la_LDFLAGS) $(LDFLAGS) -o $@\n-\n-\n # Include D build rules\n \n # Make sure GDC can find libdruntime and libphobos include files\n@@ -459,8 +447,20 @@ libgphobos_la_LIBTOOLFLAGS =\n libgphobos_la_LDFLAGS = -Wc,-nophoboslib,-dstartfiles,-B../libdruntime/gcc \\\n     -version-info $(libtool_VERSION)\n \n-libgphobos_la_LIBADD = ../libdruntime/libgdruntime.la $(LIBZ)\n-libgphobos_la_DEPENDENCIES = libgphobos.spec\n+libgphobos_la_LIBADD = \\\n+    ../libdruntime/libgdruntime_convenience.la $(LIBZ)\n+\n+libgphobos_la_DEPENDENCIES = \\\n+    ../libdruntime/libgdruntime_convenience.la libgphobos.spec\n+\n+\n+# Also override library link commands: This is not strictly\n+# required, but we want to record additional dependencies such\n+# as pthread in the library\n+libgphobos_la_LINK = $(LIBTOOL) --tag=D $(libgphobos_la_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(libgphobos_la_LDFLAGS) $(LDFLAGS) -o $@\n+\n \n # Source file definitions. Boring stuff, auto-generated with\n # https://gist.github.com/jpf91/8744acebc9dcf1e9d1a35cdff20afbb2"}, {"sha": "7e6e53e9d5c350a7d760ef33d8ed0c76f2756337", "filename": "libphobos/testsuite/lib/libphobos.exp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Ftestsuite%2Flib%2Flibphobos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Ftestsuite%2Flib%2Flibphobos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Flib%2Flibphobos.exp?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -162,10 +162,6 @@ proc libphobos_init { args } {\n \tappend ld_library_path \":${gccdir}\"\n     }\n \n-    if { [file exists \"${blddir}/libdruntime/.libs/libgdruntime.${shlib_ext}\"] } {\n-\tappend ld_library_path \":${blddir}/libdruntime/.libs\"\n-    }\n-\n     if { [file exists \"${blddir}/src/.libs/libgphobos.${shlib_ext}\"] } {\n \tappend ld_library_path \":${blddir}/src/.libs\"\n     }"}, {"sha": "c5dcac2054f6c007d81e98c167cc9c10cc683768", "filename": "libphobos/testsuite/testsuite_flags.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7478addd84ab6808307f4f285ab05f3a76bbb257/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Ftestsuite_flags.in?ref=7478addd84ab6808307f4f285ab05f3a76bbb257", "patch": "@@ -42,7 +42,6 @@ case ${query} in\n     --gdcldflags)\n       GDCLDFLAGS=\"-B${BUILD_DIR}/src\n                   -B${BUILD_DIR}/libdruntime/gcc\n-                  -L${BUILD_DIR}/libdruntime/.libs\n                   -L${BUILD_DIR}/src/.libs\"\n       echo ${GDCLDFLAGS}\n       ;;"}]}