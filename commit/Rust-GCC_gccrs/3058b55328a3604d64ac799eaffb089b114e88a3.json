{"sha": "3058b55328a3604d64ac799eaffb089b114e88a3", "node_id": "C_kwDOANBUbNoAKDMwNThiNTUzMjhhMzYwNGQ2NGFjNzk5ZWFmZmIwODliMTE0ZTg4YTM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-12T08:40:02Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-12T13:26:11Z"}, "message": "privacy: reachability: Visit all struct generic predicates", "tree": {"sha": "7e425f9a87cc6fa3f4b2ff318b94c9628ff96c62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e425f9a87cc6fa3f4b2ff318b94c9628ff96c62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3058b55328a3604d64ac799eaffb089b114e88a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3058b55328a3604d64ac799eaffb089b114e88a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3058b55328a3604d64ac799eaffb089b114e88a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3058b55328a3604d64ac799eaffb089b114e88a3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "415586f0e22684dc7e73a2f4d6c0ec66ea42b3a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415586f0e22684dc7e73a2f4d6c0ec66ea42b3a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415586f0e22684dc7e73a2f4d6c0ec66ea42b3a4"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "ccef318ed1154230357a545b168009d36d1e708e", "filename": "gcc/rust/privacy/rust-privacy-check.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-privacy-check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-privacy-check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-check.cc?ref=3058b55328a3604d64ac799eaffb089b114e88a3", "patch": "@@ -18,6 +18,7 @@\n \n #include \"rust-privacy-check.h\"\n #include \"rust-reachability.h\"\n+#include \"rust-hir-type-check.h\"\n \n extern bool\n saw_errors (void);\n@@ -28,7 +29,8 @@ void\n Resolver::resolve (HIR::Crate &crate)\n {\n   PrivacyContext ctx;\n-  auto visitor = ReachabilityVisitor (ctx);\n+  auto ty_ctx = ::Rust::Resolver::TypeCheckContext::get ();\n+  auto visitor = ReachabilityVisitor (ctx, *ty_ctx);\n \n   const auto &items = crate.items;\n   for (auto &item : items)"}, {"sha": "47fe7dfcf48f8866a47beb4a00703586022ca44b", "filename": "gcc/rust/privacy/rust-privacy-check.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-privacy-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-privacy-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-check.h?ref=3058b55328a3604d64ac799eaffb089b114e88a3", "patch": "@@ -24,6 +24,7 @@\n #include \"rust-hir-expr.h\"\n #include \"rust-hir-stmt.h\"\n #include \"rust-hir-item.h\"\n+#include \"rust-hir-type-check.h\"\n \n namespace Rust {\n namespace Privacy {"}, {"sha": "8c1e9bedf92f2ede51d8b925e30b0b75db4d58c7", "filename": "gcc/rust/privacy/rust-reachability.cc", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-reachability.cc?ref=3058b55328a3604d64ac799eaffb089b114e88a3", "patch": "@@ -17,6 +17,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include \"rust-reachability.h\"\n+#include \"rust-tyty.h\"\n \n namespace Rust {\n namespace Privacy {\n@@ -80,12 +81,34 @@ ReachabilityVisitor::visit (HIR::StructStruct &struct_item)\n \tif (field.get_visibility ().is_public ())\n \t  ctx.update_reachability (field.get_mappings (), struct_reach);\n \n-      // for (auto &generic : struct_item.get_generic_params ())\n-      // FIXME: How do we visit these generics's predicates with the\n-      // reachability visitor?\n-\n-      // FIXME: How do we get each generic's predicates from here?\n-      // TypeContext?\n+      for (auto &generic : struct_item.get_generic_params ())\n+\t{\n+\t  switch (generic->get_kind ())\n+\t    {\n+\t    case HIR::GenericParam::LIFETIME:\n+\t      break;\n+\t    case HIR::GenericParam::TYPE:\n+\t      TyTy::BaseType *generic_ty = nullptr;\n+\t      rust_assert (\n+\t\tty_ctx.lookup_type (generic->get_mappings ().get_hirid (),\n+\t\t\t\t    &generic_ty));\n+\n+\t      if (generic_ty->get_kind () == TyTy::PARAM)\n+\t\t{\n+\t\t  auto generic_param\n+\t\t    = static_cast<TyTy::ParamType *> (generic_ty);\n+\t\t  for (const auto &bound :\n+\t\t       generic_param->get_specified_bounds ())\n+\t\t    {\n+\t\t      const auto trait = bound.get ()->get_hir_trait_ref ();\n+\t\t      ctx.update_reachability (trait->get_mappings (),\n+\t\t\t\t\t       struct_reach);\n+\t\t    }\n+\t\t}\n+\n+\t      break;\n+\t    }\n+\t}\n \n       // for (auto &field : struct_item.get_fields ())\n       // if (field.get_visibility ().is_public ())"}, {"sha": "75ed2699df661cfdc8c60346006c45312579d230", "filename": "gcc/rust/privacy/rust-reachability.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-reachability.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3058b55328a3604d64ac799eaffb089b114e88a3/gcc%2Frust%2Fprivacy%2Frust-reachability.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-reachability.h?ref=3058b55328a3604d64ac799eaffb089b114e88a3", "patch": "@@ -25,6 +25,7 @@\n #include \"rust-hir-expr.h\"\n #include \"rust-hir-stmt.h\"\n #include \"rust-hir-item.h\"\n+#include \"rust-hir-type-check.h\"\n \n namespace Rust {\n namespace Privacy {\n@@ -40,8 +41,9 @@ namespace Privacy {\n class ReachabilityVisitor : public HIR::HIRVisItemVisitor\n {\n public:\n-  ReachabilityVisitor (PrivacyContext &ctx)\n-    : current_level (ReachLevel::Reachable), ctx (ctx)\n+  ReachabilityVisitor (PrivacyContext &ctx,\n+\t\t       const ::Rust::Resolver::TypeCheckContext &ty_ctx)\n+    : current_level (ReachLevel::Reachable), ctx (ctx), ty_ctx (ty_ctx)\n   {}\n \n   virtual void visit (HIR::Module &mod);\n@@ -62,6 +64,7 @@ class ReachabilityVisitor : public HIR::HIRVisItemVisitor\n private:\n   ReachLevel current_level;\n   PrivacyContext &ctx;\n+  const ::Rust::Resolver::TypeCheckContext &ty_ctx;\n };\n } // namespace Privacy\n } // namespace Rust"}]}