{"sha": "f5b4dc38852f755de9c48cb78a773ab4e84b8078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjViNGRjMzg4NTJmNzU1ZGU5YzQ4Y2I3OGE3NzNhYjRlODRiODA3OA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-18T12:29:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-18T17:41:57Z"}, "message": "libstdc++: P2116R0 Remove tuple-like protocol support from fixed-extent span\n\nFollowing this change it's no longer possible to use std::span with\nstructured bindings or with the tuple-like API. It will probably come\nback for C++23 though.\n\n\tP2116R0 Remove tuple-like protocol support from fixed-extent span\n\t* include/std/span (get, tuple_size, tuple_element): Remove.\n\t* testsuite/23_containers/span/everything.cc: Remove checks for\n\ttuple-like API.\n\t* testsuite/23_containers/span/get_neg.cc: Remove.\n\t* testsuite/23_containers/span/tuple_element_dynamic_neg.cc: Remove.\n\t* testsuite/23_containers/span/tuple_element_oob_neg.cc: Remove.\n\t* testsuite/23_containers/span/tuple_size_neg.cc: Remove.", "tree": {"sha": "4a6eee1406af310422fbdb41557d107b74a5507e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a6eee1406af310422fbdb41557d107b74a5507e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5b4dc38852f755de9c48cb78a773ab4e84b8078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5b4dc38852f755de9c48cb78a773ab4e84b8078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5b4dc38852f755de9c48cb78a773ab4e84b8078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5b4dc38852f755de9c48cb78a773ab4e84b8078/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7"}], "stats": {"total": 150, "additions": 11, "deletions": 139}, "files": [{"sha": "75346953416d5bc9338386e0acc0ad774078cad0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5b4dc38852f755de9c48cb78a773ab4e84b8078/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5b4dc38852f755de9c48cb78a773ab4e84b8078/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f5b4dc38852f755de9c48cb78a773ab4e84b8078", "patch": "@@ -1,3 +1,14 @@\n+2020-02-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tP2116R0 Remove tuple-like protocol support from fixed-extent span\n+\t* include/std/span (get, tuple_size, tuple_element): Remove.\n+\t* testsuite/23_containers/span/everything.cc: Remove checks for\n+\ttuple-like API.\n+\t* testsuite/23_containers/span/get_neg.cc: Remove.\n+\t* testsuite/23_containers/span/tuple_element_dynamic_neg.cc: Remove.\n+\t* testsuite/23_containers/span/tuple_element_oob_neg.cc: Remove.\n+\t* testsuite/23_containers/span/tuple_size_neg.cc: Remove.\n+\n 2020-02-17  Patrick Palka  <ppalka@redhat.com>\n \n \tP2106R0 Alternative wording for GB315 and GB316"}, {"sha": "b8d5e0797a2278ed09f40543d9a13f8fc2c34e56", "filename": "libstdc++-v3/include/std/span", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5b4dc38852f755de9c48cb78a773ab4e84b8078/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5b4dc38852f755de9c48cb78a773ab4e84b8078/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan?ref=f5b4dc38852f755de9c48cb78a773ab4e84b8078", "patch": "@@ -440,36 +440,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return {reinterpret_cast<byte*>(__sp.data()), __sp.size_bytes()};\n     }\n \n-  // tuple helpers\n-  template<size_t _Index, typename _Type, size_t _Extent>\n-    constexpr _Type&\n-    get(span<_Type, _Extent> __sp) noexcept\n-    {\n-      static_assert(_Extent != dynamic_extent && _Index < _Extent,\n-\t\"get<I> can only be used with a span of non-dynamic (fixed) extent\");\n-      return __sp[_Index];\n-    }\n-\n-  template<typename _Tp> struct tuple_size;\n-  template<size_t __i, typename _Tp> struct tuple_element;\n-\n-  template<typename _Type, size_t _Extent>\n-    struct tuple_size<span<_Type, _Extent>>\n-    : public integral_constant<size_t, _Extent>\n-    {\n-      static_assert(_Extent != dynamic_extent, \"tuple_size can only \"\n-\t\"be used with a span of non-dynamic (fixed) extent\");\n-    };\n-\n-  template<size_t _Index, typename _Type, size_t _Extent>\n-    struct tuple_element<_Index, span<_Type, _Extent>>\n-    {\n-      static_assert(_Extent != dynamic_extent, \"tuple_element can only \"\n-\t\"be used with a span of non-dynamic (fixed) extent\");\n-      static_assert(_Index < _Extent, \"Index is less than Extent\");\n-      using type = _Type;\n-    };\n-\n   namespace ranges\n   {\n     template<typename> extern inline const bool enable_safe_range;"}, {"sha": "0cca06fa4fe63e343c8cfe98419674425e54f679", "filename": "libstdc++-v3/testsuite/23_containers/span/everything.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5b4dc38852f755de9c48cb78a773ab4e84b8078/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Feverything.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5b4dc38852f755de9c48cb78a773ab4e84b8078/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Feverything.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Feverything.cc?ref=f5b4dc38852f755de9c48cb78a773ab4e84b8078", "patch": "@@ -104,8 +104,6 @@ main()\n   static_assert(data_span_first.size() == 3);\n   static_assert(data_span_first.front() == 0);\n   static_assert(data_span_first.back() == 2);\n-  static_assert(std::tuple_size_v<decltype(data_span_first)> == 3);\n-  static_assert(std::is_same_v<std::tuple_element_t<0, decltype(data_span_first)>, const int>);\n \n   constexpr auto data_span_first_dyn = data_span.first(4);\n   static_assert(\n@@ -122,8 +120,6 @@ main()\n   static_assert(data_span_last.size() == 5);\n   static_assert(data_span_last.front() == 4);\n   static_assert(data_span_last.back() == 8);\n-  static_assert(std::tuple_size_v<decltype(data_span_last)> == 5);\n-  static_assert(std::is_same_v<std::tuple_element_t<0, decltype(data_span_last)>, const int>);\n \n   constexpr auto data_span_last_dyn = data_span.last(6);\n   static_assert("}, {"sha": "65ff412e2528aaa8068e89370544fc07b659c598", "filename": "libstdc++-v3/testsuite/23_containers/span/get_neg.cc", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fget_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fget_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fget_neg.cc?ref=aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7", "patch": "@@ -1,30 +0,0 @@\n-// Copyright (C) 2019-2020 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// { dg-options \"-std=c++2a\" }\n-// { dg-do compile { target c++2a } }\n-\n-#include <span>\n-#include <tuple>\n-\n-int\n-main()\n-{\n-  std::span<int, std::dynamic_extent> myspan((int*)nullptr, (std::size_t)0);\n-  std::get<0>(myspan); // { dg-error \"here\" }\n-}\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }"}, {"sha": "b96d88839f666327f6fb8c9a047a59dc7215ac5b", "filename": "libstdc++-v3/testsuite/23_containers/span/tuple_element_dynamic_neg.cc", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_element_dynamic_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_element_dynamic_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_element_dynamic_neg.cc?ref=aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7", "patch": "@@ -1,25 +0,0 @@\n-// Copyright (C) 2019-2020 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// { dg-options \"-std=c++2a\" }\n-// { dg-do compile { target c++2a } }\n-\n-#include <span>\n-#include <tuple>\n-\n-std::tuple_element<0, std::span<int, std::dynamic_extent>> ts; // { dg-error \"here\" }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }"}, {"sha": "e9627abff336a1f2160b34c1fe9a07211b122a64", "filename": "libstdc++-v3/testsuite/23_containers/span/tuple_element_oob_neg.cc", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_element_oob_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_element_oob_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_element_oob_neg.cc?ref=aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7", "patch": "@@ -1,25 +0,0 @@\n-// Copyright (C) 2019-2020 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// { dg-options \"-std=c++2a\" }\n-// { dg-do compile { target c++2a } }\n-\n-#include <span>\n-#include <tuple>\n-\n-std::tuple_element<3, std::span<int, 2>> te; // { dg-error \"here\" }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }"}, {"sha": "16294738dda0fea9cc08035f791b0ae701c5382a", "filename": "libstdc++-v3/testsuite/23_containers/span/tuple_size_neg.cc", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_size_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_size_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ftuple_size_neg.cc?ref=aa667c3f36d6a78e1b38e7a9a26899fd385bfcb7", "patch": "@@ -1,25 +0,0 @@\n-// Copyright (C) 2019-2020 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// { dg-options \"-std=c++2a\" }\n-// { dg-do compile { target c++2a } }\n-\n-#include <span>\n-#include <tuple>\n-\n-std::tuple_size<std::span<int, std::dynamic_extent>> ts; // { dg-error \"here\" }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }"}]}