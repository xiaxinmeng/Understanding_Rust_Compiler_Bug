{"sha": "8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkMWRkZTcyYmViMDZiNWYzZjE4M2FhNGQxNTBjYjg4OTM0NWJjMQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2009-10-14T12:05:33Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2009-10-14T12:05:33Z"}, "message": "extended.texi: Replace the dash character with @minus{} in situations where it is being used...\n\n    * gcc/doc/extended.texi: Replace the dash character with\n    @minus{} in situations where it is being used as a minus\n    symbol.\n    * gcc/doc/tm.texi: Likewise.\n    * gcc/doc/invoke.texi: Likewise.\n    * gcc/doc/md.texi: Likewise.\n\nFrom-SVN: r152765", "tree": {"sha": "5e63e9deef69fed5470116f0263624b3a010b0c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e63e9deef69fed5470116f0263624b3a010b0c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96c169e15643ebffb7144837a54c760331d91c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c169e15643ebffb7144837a54c760331d91c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c169e15643ebffb7144837a54c760331d91c21"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "08ce63e5802e5df120691e96f0c3ca023e8d3982", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "patch": "@@ -1,3 +1,11 @@\n+2009-10-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc/doc/extended.texi: Replace the dash character with\n+\t@minus{} in situations where it is being used as a minus\n+\tsymbol.\n+\t* gcc/doc/tm.texi: Likewise.\n+\t* gcc/doc/md.texi: Likewise.\n+\n 2009-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/41543"}, {"sha": "a0f66214e3fbc2917d88db851b46b6d52ee1fae6", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "patch": "@@ -9740,7 +9740,7 @@ storing the value 32767 if the result overflows.\n \n @item int __builtin_subs (int @var{x}, int @var{y})\n Saturating subtraction.  Return the result of subtracting @var{y} from\n-@var{x}, storing the value -32768 if the result overflows.\n+@var{x}, storing the value @minus{}32768 if the result overflows.\n \n @item void __builtin_halt (void)\n Halt.  The processor will stop execution.  This built-in is useful for"}, {"sha": "8a1a389924c35849af7539d90a2444ff4a43bc88", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "patch": "@@ -1756,7 +1756,7 @@ Constant integer 1\n A floating point constant 0.0\n \n @item R\n-Integer constant in the range -6 @dots{} 5.\n+Integer constant in the range @minus{}6 @dots{} 5.\n \n @item Q\n A memory address based on Y or Z pointer with displacement.\n@@ -1787,7 +1787,7 @@ Constant that fits in 4 bits\n Constant that fits in 5 bits\n \n @item L\n-Constant that is one of -1, 4, -4, 7, 8, 12, 16, 20, 32, 48\n+Constant that is one of @minus{}1, 4, @minus{}4, 7, 8, 12, 16, 20, 32, 48\n \n @item G\n Floating point constant that is legal for store immediate\n@@ -2381,13 +2381,13 @@ RETN, RETI, RETX, RETE, ASTAT, SEQSTAT and USP.\n Any register except accumulators or CC.\n \n @item Ksh\n-Signed 16 bit integer (in the range -32768 to 32767)\n+Signed 16 bit integer (in the range @minus{}32768 to 32767)\n \n @item Kuh\n Unsigned 16 bit integer (in the range 0 to 65535)\n \n @item Ks7\n-Signed 7 bit integer (in the range -64 to 63)\n+Signed 7 bit integer (in the range @minus{}64 to 63)\n \n @item Ku7\n Unsigned 7 bit integer (in the range 0 to 127)\n@@ -2396,10 +2396,10 @@ Unsigned 7 bit integer (in the range 0 to 127)\n Unsigned 5 bit integer (in the range 0 to 31)\n \n @item Ks4\n-Signed 4 bit integer (in the range -8 to 7)\n+Signed 4 bit integer (in the range @minus{}8 to 7)\n \n @item Ks3\n-Signed 3 bit integer (in the range -3 to 4)\n+Signed 3 bit integer (in the range @minus{}3 to 4)\n \n @item Ku3\n Unsigned 3 bit integer (in the range 0 to 7)\n@@ -2511,28 +2511,28 @@ Matches multiple registers in a PARALLEL to form a larger register.\n Used to match function return values.\n \n @item Is3\n--8 @dots{} 7\n+@minus{}8 @dots{} 7\n \n @item IS1\n--128 @dots{} 127\n+@minus{}128 @dots{} 127\n \n @item IS2\n--32768 @dots{} 32767\n+@minus{}32768 @dots{} 32767\n \n @item IU2\n 0 @dots{} 65535\n \n @item In4\n--8 @dots{} -1 or 1 @dots{} 8\n+@minus{}8 @dots{} @minus{}1 or 1 @dots{} 8\n \n @item In5\n--16 @dots{} -1 or 1 @dots{} 16\n+@minus{}16 @dots{} @minus{}1 or 1 @dots{} 16\n \n @item In6\n--32 @dots{} -1 or 1 @dots{} 32\n+@minus{}32 @dots{} @minus{}1 or 1 @dots{} 32\n \n @item IM2\n--65536 @dots{} -1\n+@minus{}65536 @dots{} @minus{}1\n \n @item Ilb\n An 8 bit value with exactly one bit set.\n@@ -2717,7 +2717,7 @@ A constant that cannot be loaded using @code{lui}, @code{addiu}\n or @code{ori}.\n \n @item N\n-A constant in the range -65535 to -1 (inclusive).\n+A constant in the range @minus{}65535 to @minus{}1 (inclusive).\n \n @item O\n A signed 15-bit constant.\n@@ -2893,7 +2893,7 @@ A register indirect memory operand\n A constant in the range of 0 to 255.\n \n @item N\n-A constant in the range of 0 to -255.\n+A constant in the range of 0 to @minus{}255.\n \n @end table\n \n@@ -3012,7 +3012,7 @@ An immediate for and/xor/or instructions.  const_int is treated as a 32 bit valu\n An immediate for the @code{iohl} instruction.  const_int is treated as a 32 bit value.  \n \n @item I\n-A constant in the range [-64, 63] for shift/rotate instructions.  \n+A constant in the range [@minus{}64, 63] for shift/rotate instructions.  \n \n @item J\n An unsigned 7-bit constant for conversion/nop/channel instructions.  \n@@ -3083,7 +3083,7 @@ Value appropriate as displacement.\n @table @code\n @item (0..4095)\n for short displacement\n-@item (-524288..524287)\n+@item (@minus{}524288..524287)\n for long displacement\n @end table\n "}, {"sha": "8588852bec96ca2b021ee8338ae9f20b5567a8e7", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1dde72beb06b5f3f183aa4d150cb889345bc1/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=8ad1dde72beb06b5f3f183aa4d150cb889345bc1", "patch": "@@ -5628,7 +5628,7 @@ should comply with the semantics expected by @code{REALIGN_LOAD}\n described above.\n If this hook is not defined, then @var{addr} will be used as\n the argument @var{OFF} to @code{REALIGN_LOAD}, in which case the low\n-log2(@var{VS})-1 bits of @var{addr} will be considered.\n+log2(@var{VS}) @minus{} 1 bits of @var{addr} will be considered.\n @end deftypefn\n \n @deftypefn {Target Hook} tree TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN (tree @var{x})\n@@ -6610,7 +6610,7 @@ speculative dependencies and therefore can be scheduled speculatively.\n The hook is used to check if the pattern of @var{insn} has a speculative\n version and, in case of successful check, to generate that speculative\n pattern.  The hook should return 1, if the instruction has a speculative form,\n-or -1, if it doesn't.  @var{request} describes the type of requested\n+or @minus{}1, if it doesn't.  @var{request} describes the type of requested\n speculation.  If the return value equals 1 then @var{new_pat} is assigned\n the generated speculative pattern.\n @end deftypefn"}]}