{"sha": "e1b7f42ec66b9a00db2b30f1e00b707bbad9f452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFiN2Y0MmVjNjZiOWEwMGRiMmIzMGYxZTAwYjcwN2JiYWQ5ZjQ1Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-12-02T08:50:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-12-02T08:50:57Z"}, "message": "re PR fortran/64137 (Fortran FE builds invalid GENERIC)\n\n2014-12-02  Richard Biener  <rguenther@suse.de>\n\n\tPR fortran/64137\n\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Check\n\tproper expressions type, use proper type for computing\n\t-Huge - 1.\n\nFrom-SVN: r218259", "tree": {"sha": "298a8a9a6a5d2c9af29a5225315beacf21c36ff1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/298a8a9a6a5d2c9af29a5225315beacf21c36ff1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b489f313c3924f681862c3dea2861b4210e29a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b489f313c3924f681862c3dea2861b4210e29a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b489f313c3924f681862c3dea2861b4210e29a6"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "4bf21edef6091d2350d64e3a60e21876f616044b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e1b7f42ec66b9a00db2b30f1e00b707bbad9f452", "patch": "@@ -1,3 +1,10 @@\n+2014-12-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR fortran/64137\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Check\n+\tproper expressions type, use proper type for computing\n+\t-Huge - 1.\n+\n 2014-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-openmp.c (gfc_omp_finish_clause,"}, {"sha": "d5972077940043be2819c5e0c7536e88715f0b2b", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b7f42ec66b9a00db2b30f1e00b707bbad9f452/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=e1b7f42ec66b9a00db2b30f1e00b707bbad9f452", "patch": "@@ -3729,9 +3729,9 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, enum tree_code op)\n      possible value is HUGE in both cases.  */\n   if (op == GT_EXPR)\n     tmp = fold_build1_loc (input_location, NEGATE_EXPR, TREE_TYPE (tmp), tmp);\n-  if (op == GT_EXPR && expr->ts.type == BT_INTEGER)\n+  if (op == GT_EXPR && arrayexpr->ts.type == BT_INTEGER)\n     tmp = fold_build2_loc (input_location, MINUS_EXPR, TREE_TYPE (tmp), tmp,\n-\t\t\t   build_int_cst (type, 1));\n+\t\t\t   build_int_cst (TREE_TYPE (tmp), 1));\n \n   gfc_add_modify (&se->pre, limit, tmp);\n "}]}