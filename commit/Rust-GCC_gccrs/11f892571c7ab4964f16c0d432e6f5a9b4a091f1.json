{"sha": "11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "node_id": "C_kwDOANBUbNoAKDExZjg5MjU3MWM3YWI0OTY0ZjE2YzBkNDMyZTZmNWE5YjRhMDkxZjE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-10-26T07:58:47Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-08T08:35:03Z"}, "message": "ada: Clean up call to check if aspects are present\n\nCode cleanup; semantics is unaffected.\n\ngcc/ada/\n\n\t* exp_ch6.adb, exp_put_image.adb, sem_aggr.adb, sem_attr.adb,\n\tsem_ch5.adb, sem_type.adb, sem_util.adb: Replace\n\t\"Present (Find_Aspect (...))\" with \"Has_Aspect\".", "tree": {"sha": "4612ff1d68f622f1f07999993a396ad74005b2a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4612ff1d68f622f1f07999993a396ad74005b2a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45656a992eb18bfefe2e6e20d3b425afe945af28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45656a992eb18bfefe2e6e20d3b425afe945af28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45656a992eb18bfefe2e6e20d3b425afe945af28"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "1466e4dc36a8a151cd958b87c0f097bbe28edf85", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -3305,8 +3305,8 @@ package body Exp_Ch6 is\n            or else No (Aspect)\n \n            --  Do not fold if multiple applicable predicate aspects\n-           or else Present (Find_Aspect (Subt, Aspect_Static_Predicate))\n-           or else Present (Find_Aspect (Subt, Aspect_Predicate))\n+           or else Has_Aspect (Subt, Aspect_Static_Predicate)\n+           or else Has_Aspect (Subt, Aspect_Predicate)\n            or else Augments_Other_Dynamic_Predicate (Aspect)\n            or else CodePeer_Mode\n          then"}, {"sha": "eaedebe40019713374d30edbcfc2521f6b04f257", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -1045,7 +1045,7 @@ package body Exp_Put_Image is\n       declare\n          U_Type : constant Entity_Id := Underlying_Type (Entity (Prefix (N)));\n       begin\n-         if Present (Find_Aspect (U_Type, Aspect_Put_Image)) then\n+         if Has_Aspect (U_Type, Aspect_Put_Image) then\n             return True;\n          end if;\n "}, {"sha": "3a093d2600752e3e7140ee107691df71f6c71812", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -1052,7 +1052,7 @@ package body Sem_Aggr is\n       elsif Is_Array_Type (Typ) and then Null_Record_Present (N) then\n          Error_Msg_N (\"null record forbidden in array aggregate\", N);\n \n-      elsif Present (Find_Aspect (Typ, Aspect_Aggregate))\n+      elsif Has_Aspect (Typ, Aspect_Aggregate)\n         and then Ekind (Typ) /= E_Record_Type\n         and then Ada_Version >= Ada_2022\n       then"}, {"sha": "de4e8aa681cdfec23d87d45051503a9694796e5e", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -5996,8 +5996,8 @@ package body Sem_Attr is\n                --  Verify that prefix can be iterated upon.\n \n                if Is_Array_Type (Typ)\n-                 or else Present (Find_Aspect (Typ, Aspect_Default_Iterator))\n-                 or else Present (Find_Aspect (Typ, Aspect_Iterable))\n+                 or else Has_Aspect (Typ, Aspect_Default_Iterator)\n+                 or else Has_Aspect (Typ, Aspect_Iterable)\n                then\n                   null;\n                else"}, {"sha": "7bca6d39dd26118cf1d22697786fddc9c20c5385", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -2191,7 +2191,7 @@ package body Sem_Ch5 is\n             if Is_Array_Type (Typ)\n               or else Is_Reversible_Iterator (Typ)\n               or else\n-                (Present (Find_Aspect (Typ, Aspect_Iterable))\n+                (Has_Aspect (Typ, Aspect_Iterable)\n                   and then\n                     Present\n                       (Get_Iterable_Type_Primitive (Typ, Name_Previous)))"}, {"sha": "718c29754c1a0d2b627b6e6da9ffd73135f162ed", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -1007,7 +1007,7 @@ package body Sem_Type is\n \n       elsif Ada_Version >= Ada_2022\n         and then T2 = Any_Composite\n-        and then Present (Find_Aspect (T1, Aspect_Aggregate))\n+        and then Has_Aspect (T1, Aspect_Aggregate)\n       then\n          return True;\n "}, {"sha": "e43581ec6e9947644d75a464baabcd46a236d21b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f892571c7ab4964f16c0d432e6f5a9b4a091f1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=11f892571c7ab4964f16c0d432e6f5a9b4a091f1", "patch": "@@ -13309,7 +13309,7 @@ package body Sem_Util is\n \n    begin\n       return Nkind (Exp) = N_Aggregate\n-        and then Present (Find_Aspect (Etype (Exp), Aspect_Aggregate))\n+        and then Has_Aspect (Etype (Exp), Aspect_Aggregate)\n         and then not Is_Record_Aggregate;\n    end Is_Container_Aggregate;\n \n@@ -21718,18 +21718,16 @@ package body Sem_Util is\n       --  type has the appropriate user-defined literal aspect.\n \n       return (Nkind (N) in N_Numeric_Or_String_Literal\n-        and then Present (Find_Aspect (Typ, Literal_Aspect_Map (Nkind (N)))))\n+        and then Has_Aspect (Typ, Literal_Aspect_Map (Nkind (N))))\n           or else\n             (Is_Entity_Name (N)\n               and then Present (Entity (N))\n               and then\n                 ((Ekind (Entity (N)) = E_Named_Integer\n-                    and then\n-                      Present (Find_Aspect (Typ, Aspect_Integer_Literal)))\n+                    and then Has_Aspect (Typ, Aspect_Integer_Literal))\n                    or else\n                      (Ekind (Entity (N)) = E_Named_Real\n-                        and then\n-                          Present (Find_Aspect (Typ, Aspect_Real_Literal)))));\n+                        and then Has_Aspect (Typ, Aspect_Real_Literal))));\n    end Is_User_Defined_Literal;\n \n    --------------------------------------\n@@ -32563,7 +32561,7 @@ package body Sem_Util is\n         (Typ : Entity_Id) return Boolean\n       is\n       begin\n-         return Present (Find_Aspect (Typ, Aspect_Designated_Storage_Model));\n+         return Has_Aspect (Typ, Aspect_Designated_Storage_Model);\n       end Has_Designated_Storage_Model_Aspect;\n \n       -----------------------------------\n@@ -32573,7 +32571,7 @@ package body Sem_Util is\n       function Has_Storage_Model_Type_Aspect (Typ : Entity_Id) return Boolean\n       is\n       begin\n-         return Present (Find_Aspect (Typ, Aspect_Storage_Model_Type));\n+         return Has_Aspect (Typ, Aspect_Storage_Model_Type);\n       end Has_Storage_Model_Type_Aspect;\n \n       --------------------------"}]}