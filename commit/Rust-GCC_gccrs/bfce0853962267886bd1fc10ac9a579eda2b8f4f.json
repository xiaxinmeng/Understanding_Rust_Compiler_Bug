{"sha": "bfce0853962267886bd1fc10ac9a579eda2b8f4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZjZTA4NTM5NjIyNjc4ODZiZDFmYzEwYWM5YTU3OWVkYTJiOGY0Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-05-17T17:24:00Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-05-17T17:24:00Z"}, "message": "re PR c++/26068 (extern \"C\" static function should not be allowed)\n\n\tPR c++/26068\n\t* parser.c (cp_parser_set_storage_class): Check for \n\tinvalid uses of storage classes on unbraced linkage\n\tspecifications.\n\t(cp_parser_decl_specifier_seq): Pass keywords, not storage classes,\n\tto cp_parser_set_storage_class.\n\tPR c++/26068\n\t* g++.dg/opt/pr17697-3.C: Remove invalid extern specifier.\n\t* g++.dg/parse/linkage1.C: New test.\n\nFrom-SVN: r113869", "tree": {"sha": "531ac8a47e645064c282b18d247a23a103c45683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/531ac8a47e645064c282b18d247a23a103c45683"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfce0853962267886bd1fc10ac9a579eda2b8f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfce0853962267886bd1fc10ac9a579eda2b8f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfce0853962267886bd1fc10ac9a579eda2b8f4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfce0853962267886bd1fc10ac9a579eda2b8f4f/comments", "author": null, "committer": null, "parents": [{"sha": "b9cebd5026fbd40b0ea3af4c9dc388b356e5fd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cebd5026fbd40b0ea3af4c9dc388b356e5fd48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cebd5026fbd40b0ea3af4c9dc388b356e5fd48"}], "stats": {"total": 112, "additions": 76, "deletions": 36}, "files": [{"sha": "3c93c355f1a4f51f1cacdda402f0ef63d4bc01ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bfce0853962267886bd1fc10ac9a579eda2b8f4f", "patch": "@@ -1,3 +1,12 @@\n+2006-05-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/26068\n+\t* parser.c (cp_parser_set_storage_class): Check for \n+\tinvalid uses of storage classes on unbraced linkage\n+\tspecifications.\n+\t(cp_parser_decl_specifier_seq): Pass keywords, not storage classes,\n+\tto cp_parser_set_storage_class.\n+\n 2006-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/27491"}, {"sha": "c6124835599548949b4be862ddd85098c5c5df10", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 49, "deletions": 35, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=bfce0853962267886bd1fc10ac9a579eda2b8f4f", "patch": "@@ -1747,7 +1747,7 @@ static tree cp_parser_sizeof_operand\n static bool cp_parser_declares_only_class_p\n   (cp_parser *);\n static void cp_parser_set_storage_class\n-  (cp_decl_specifier_seq *, cp_storage_class);\n+  (cp_parser *, cp_decl_specifier_seq *, enum rid);\n static void cp_parser_set_decl_spec_type\n   (cp_decl_specifier_seq *, tree, bool);\n static bool cp_parser_friend_p\n@@ -7463,39 +7463,13 @@ cp_parser_decl_specifier_seq (cp_parser* parser,\n \t     GNU Extension:\n \t       thread  */\n \tcase RID_AUTO:\n-\t  /* Consume the token.  */\n-\t  cp_lexer_consume_token (parser->lexer);\n-\t  cp_parser_set_storage_class (decl_specs, sc_auto);\n-\t  break;\n \tcase RID_REGISTER:\n-\t  /* Consume the token.  */\n-\t  cp_lexer_consume_token (parser->lexer);\n-\t  cp_parser_set_storage_class (decl_specs, sc_register);\n-\t  break;\n \tcase RID_STATIC:\n-\t  /* Consume the token.  */\n-\t  cp_lexer_consume_token (parser->lexer);\n-\t  if (decl_specs->specs[(int) ds_thread])\n-\t    {\n-\t      error (\"%<__thread%> before %<static%>\");\n-\t      decl_specs->specs[(int) ds_thread] = 0;\n-\t    }\n-\t  cp_parser_set_storage_class (decl_specs, sc_static);\n-\t  break;\n \tcase RID_EXTERN:\n-\t  /* Consume the token.  */\n-\t  cp_lexer_consume_token (parser->lexer);\n-\t  if (decl_specs->specs[(int) ds_thread])\n-\t    {\n-\t      error (\"%<__thread%> before %<extern%>\");\n-\t      decl_specs->specs[(int) ds_thread] = 0;\n-\t    }\n-\t  cp_parser_set_storage_class (decl_specs, sc_extern);\n-\t  break;\n \tcase RID_MUTABLE:\n \t  /* Consume the token.  */\n \t  cp_lexer_consume_token (parser->lexer);\n-\t  cp_parser_set_storage_class (decl_specs, sc_mutable);\n+\t  cp_parser_set_storage_class (parser, decl_specs, token->keyword);\n \t  break;\n \tcase RID_THREAD:\n \t  /* Consume the token.  */\n@@ -16133,16 +16107,56 @@ cp_parser_declares_only_class_p (cp_parser *parser)\n \t  || cp_lexer_next_token_is (parser->lexer, CPP_COMMA));\n }\n \n-/* Update the DECL_SPECS to reflect the STORAGE_CLASS.  */\n+/* Update the DECL_SPECS to reflect the storage class indicated by\n+   KEYWORD.  */\n \n static void\n-cp_parser_set_storage_class (cp_decl_specifier_seq *decl_specs,\n-\t\t\t     cp_storage_class storage_class)\n+cp_parser_set_storage_class (cp_parser *parser,\n+\t\t\t     cp_decl_specifier_seq *decl_specs,\n+\t\t\t     enum rid keyword)\n {\n-  if (decl_specs->storage_class != sc_none)\n-    decl_specs->multiple_storage_classes_p = true;\n-  else\n-    decl_specs->storage_class = storage_class;\n+  cp_storage_class storage_class;\n+\n+  if (parser->in_unbraced_linkage_specification_p)\n+    {\n+      error (\"invalid use of %qD in linkage specification\",\n+\t     ridpointers[keyword]);\n+      return;\n+    }\n+  else if (decl_specs->storage_class != sc_none)\n+    {\n+      decl_specs->multiple_storage_classes_p = true;\n+      return;\n+    }\n+\n+  if ((keyword == RID_EXTERN || keyword == RID_STATIC)\n+      && decl_specs->specs[(int) ds_thread])\n+    {\n+      error (\"%<__thread%> before %qD\", ridpointers[keyword]);\n+      decl_specs->specs[(int) ds_thread] = 0;\n+    }\n+\n+  switch (keyword) \n+    {\n+    case RID_AUTO:\n+      storage_class = sc_auto;\n+      break;\n+    case RID_REGISTER:\n+      storage_class = sc_register;\n+      break;\n+    case RID_STATIC:\n+      storage_class = sc_static;\n+      break;\n+    case RID_EXTERN:\n+      storage_class = sc_extern;\n+      break;\n+    case RID_MUTABLE:\n+      storage_class = sc_mutable;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n+  decl_specs->storage_class = storage_class;\n }\n \n /* Update the DECL_SPECS to reflect the TYPE_SPEC.  If USER_DEFINED_P"}, {"sha": "b5f5dca03557ca525c96e9b544089a2937183e15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bfce0853962267886bd1fc10ac9a579eda2b8f4f", "patch": "@@ -1,3 +1,9 @@\n+2006-05-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/26068\n+\t* g++.dg/opt/pr17697-3.C: Remove invalid extern specifier.\n+\t* g++.dg/parse/linkage1.C: New test.\n+\n 2006-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/27548"}, {"sha": "630441c25f78f970f64338ff06ca7db4d2f12b4a", "filename": "gcc/testsuite/g++.dg/opt/pr17697-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-3.C?ref=bfce0853962267886bd1fc10ac9a579eda2b8f4f", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run }\n // { dg-options \"-O2\" }\n \n-extern \"C\" extern int strcmp (const char *s, const char *t);\n+extern \"C\" int strcmp (const char *s, const char *t);\n \n namespace A\n {"}, {"sha": "4a0d8942e52d5160e8c8b05ef2ceca392910cfd3", "filename": "gcc/testsuite/g++.dg/parse/linkage1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flinkage1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfce0853962267886bd1fc10ac9a579eda2b8f4f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flinkage1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flinkage1.C?ref=bfce0853962267886bd1fc10ac9a579eda2b8f4f", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/26068\n+\n+extern \"C\" auto int a; // { dg-error \"linkage\" }\n+extern \"C\" register int b; // { dg-error \"linkage\" }\n+extern \"C\" static void c(); // { dg-error \"linkage\" }\n+extern \"C\" extern void d(); // { dg-error \"linkage\" }\n+extern \"C\" mutable int e; // { dg-error \"linkage\" }\n+\n+extern \"C\" {\n+  static void f();\n+}"}]}