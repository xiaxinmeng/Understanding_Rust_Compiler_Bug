{"sha": "f56e675de51d00f2ddaede1933175374628f6952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU2ZTY3NWRlNTFkMDBmMmRkYWVkZTE5MzMxNzUzNzQ2MjhmNjk1Mg==", "commit": {"author": {"name": "Tomas Bily", "email": "tbily@suse.cz", "date": "2009-01-12T15:37:09Z"}, "committer": {"name": "Tomas Bily", "email": "tomby@gcc.gnu.org", "date": "2009-01-12T15:37:09Z"}, "message": "re PR tree-optimization/38385 (ICE with -O2 -ftree-loop-distribution)\n\n        PR middlend/38385\n        * tree-loop-distribution.c (prop_phis): New function.\n        (generate_builtin): Call prop_phis.\n        * testsuite/gcc.dg/tree-ssa/pr38385.c: New file.\n\nFrom-SVN: r143291", "tree": {"sha": "e1e3f644a0682e8328a8ea1037b43d04118503c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1e3f644a0682e8328a8ea1037b43d04118503c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f56e675de51d00f2ddaede1933175374628f6952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56e675de51d00f2ddaede1933175374628f6952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f56e675de51d00f2ddaede1933175374628f6952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56e675de51d00f2ddaede1933175374628f6952/comments", "author": null, "committer": null, "parents": [{"sha": "c2152239ace246c45e1ec2b50af196762d18782a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2152239ace246c45e1ec2b50af196762d18782a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2152239ace246c45e1ec2b50af196762d18782a"}], "stats": {"total": 164, "additions": 164, "deletions": 0}, "files": [{"sha": "ebe85fa61f60e0d2b166ff64e6b5531c982122c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56e675de51d00f2ddaede1933175374628f6952/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56e675de51d00f2ddaede1933175374628f6952/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f56e675de51d00f2ddaede1933175374628f6952", "patch": "@@ -1,3 +1,10 @@\n+2009-01-12  Tomas Bily  <tbily@suse.cz>\n+\n+\tPR middlend/38385\n+        * tree-loop-distribution.c (prop_phis): New function.\n+        (generate_builtin): Call prop_phis.\n+        * testsuite/gcc.dg/tree-ssa/pr38385.c: New file.\n+\n 2009-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/38807"}, {"sha": "a49c93e26108abfed2a21f7fb53be6eb16da81bb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr38385.c", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56e675de51d00f2ddaede1933175374628f6952/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38385.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56e675de51d00f2ddaede1933175374628f6952/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38385.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38385.c?ref=f56e675de51d00f2ddaede1933175374628f6952", "patch": "@@ -0,0 +1,124 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-distribution\" } */\n+\n+struct rtx_def\n+{\n+  int a;\n+};\n+\n+typedef struct rtx_def *rtx;\n+\n+struct rd {\n+  int alternative_enabled_p[100];\n+  rtx operand[100];\n+  int n_operands;\n+};\n+\n+rtx this_insn;\n+int n_reloads;\n+int n_replacements;\n+int n_earlyclobbers;\n+int replace_reloads;\n+int hard_regs_live_known;\n+short* static_reload_reg_p;\n+struct rd recog_data;\n+\n+int\n+find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n+\t      short *reload_reg_p)\n+{\n+  int i, j;\n+  int noperands = replace;\n+\n+  int no_input_reloads = 0;\n+  int n_alternatives = replace;\n+  char this_alternative_match_win[30];\n+  char this_alternative_win[30];\n+  char this_alternative_earlyclobber[30];\n+  int this_alternative_matches[30];\n+  int goal_alternative[30];\n+  int this_alternative_number;\n+\n+  char goal_alternative_match_win[30];\n+  char goal_alternative_win[30];\n+  int best;\n+\n+  int operand_mode[30];\n+  int retval = 0;\n+\n+  for (this_alternative_number = 0;\n+       this_alternative_number < n_alternatives;\n+       this_alternative_number++)\n+    {\n+\n+      int losers = 0;\n+      int bad = 0;\n+      \n+      if (!recog_data.alternative_enabled_p[this_alternative_number])\n+\t{\n+\t  int i;\n+\t  \n+\t  for (i = 0; i < recog_data.n_operands; i++)\n+\t    ;\n+\t  \n+\t  continue;\n+\t}\n+      \n+      for (i = 0; i < noperands; i++)\n+\tif (this_alternative_earlyclobber[i]\n+\t    && (this_alternative_win[i] || this_alternative_match_win[i]))\n+\t  {\n+\t    if (j != noperands)\n+\t      {\n+\t\tlosers++;\n+\t\t\n+\t\tfor (j = 0; j < noperands; j++)\n+\t\t  if (this_alternative_matches[j] == i\n+\t\t      && this_alternative_match_win[j])\n+\t\t    {\n+\t\t      this_alternative_win[j] = 0;\n+\t\t      this_alternative_match_win[j] = 0;\n+\t\t      losers++;\n+\t\t    }\n+\t      }\n+\t  }\n+      \n+      if (losers == 0)\n+\t{\n+\t  for (i = 0; i < noperands; i++)\n+\t    {\n+\t      goal_alternative_win[i] = 0;\n+\t      goal_alternative_match_win[i] = 0;\n+\t    }\n+\t  \n+\t  goto finish;\n+\t}\n+\n+      if (! bad && best > losers)\n+\t{\n+\t  for (i = 0; i < noperands; i++)\n+\t    {\n+\t      goal_alternative[i] = 0;\n+\t      goal_alternative_win[i] = 0;\n+\t    }\n+\t}\n+    }\n+  \n+\n+ finish:\n+\n+  for (i = 0; i < noperands; i++)\n+    if (! goal_alternative_win[i])\n+      {\n+\trtx op = recog_data.operand[i];\n+\tint mode = operand_mode[i];\n+\t\n+\tif (((ix86_preferred_reload_class ((op), (goal_alternative[i])) == 2)\n+\t     || no_input_reloads)\n+\t    && mode != 0)\n+\t  {}\n+      }\n+\n+  return retval;\n+}\n+"}, {"sha": "745957fcea29ca1d6d2bd971712b1d143e318871", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f56e675de51d00f2ddaede1933175374628f6952/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f56e675de51d00f2ddaede1933175374628f6952/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=f56e675de51d00f2ddaede1933175374628f6952", "patch": "@@ -331,6 +331,38 @@ generate_memset_zero (gimple stmt, tree op0, tree nb_iter,\n   return res;\n }\n \n+/* Propagate phis in BB b to their uses and remove them.  */\n+\n+static void\n+prop_phis (basic_block b)\n+{\n+  gimple_stmt_iterator psi;\n+  gimple_seq phis = phi_nodes (b);\n+\n+  for (psi = gsi_start (phis); !gsi_end_p (psi); )\n+    {\n+      gimple phi = gsi_stmt (psi);\n+      tree def = gimple_phi_result (phi), use = gimple_phi_arg_def (phi, 0);\n+\n+      gcc_assert (gimple_phi_num_args (phi) == 1);\n+\n+      if (!is_gimple_reg (def))\n+\t{\n+\t  imm_use_iterator iter;\n+\t  use_operand_p use_p;\n+\t  gimple stmt;\n+\n+\t  FOR_EACH_IMM_USE_STMT (stmt, iter, def)\n+\t    FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n+\t      SET_USE (use_p, use);\n+\t}\n+      else\n+\treplace_uses_by (def, use);\n+\n+      remove_phi_node (&psi, true);\n+    }\n+}\n+\n /* Tries to generate a builtin function for the instructions of LOOP\n    pointed to by the bits set in PARTITION.  Returns true when the\n    operation succeeded.  */\n@@ -400,6 +432,7 @@ generate_builtin (struct loop *loop, bitmap partition, bool copy_p)\n       unsigned nbbs = loop->num_nodes;\n       basic_block src = loop_preheader_edge (loop)->src;\n       basic_block dest = single_exit (loop)->dest;\n+      prop_phis (dest);\n       make_edge (src, dest, EDGE_FALLTHRU);\n       set_immediate_dominator (CDI_DOMINATORS, dest, src);\n       cancel_loop_tree (loop);"}]}