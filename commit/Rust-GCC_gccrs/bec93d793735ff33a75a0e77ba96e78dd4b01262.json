{"sha": "bec93d793735ff33a75a0e77ba96e78dd4b01262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjOTNkNzkzNzM1ZmYzM2E3NWEwZTc3YmE5NmU3OGRkNGIwMTI2Mg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2006-10-08T13:21:42Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-10-08T13:21:42Z"}, "message": "re PR fortran/28585 (Fortran 2003: Support NEW_LINE intrinsic)\n\n\tPR fortran/28585\n\n\t* intrinsic.c (add_functions): Add new_line Fortran 2003 intrinsic.\n\t* intrinsic.h: Add gfc_simplify_new_line and gfc_check_new_line\n\tprototypes.\n\t* check.c (gfc_check_new_line): New function.\n\t* simplify.c (gfc_simplify_new_line): New function.\n\t* intrinsic.texi: Document new_line intrinsic.\n\n\t* gfortran.dg/new_line.f90: New test.\n\nFrom-SVN: r117555", "tree": {"sha": "4454e84128bde146be79c1a71c6c353d05b947ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4454e84128bde146be79c1a71c6c353d05b947ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec93d793735ff33a75a0e77ba96e78dd4b01262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec93d793735ff33a75a0e77ba96e78dd4b01262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec93d793735ff33a75a0e77ba96e78dd4b01262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec93d793735ff33a75a0e77ba96e78dd4b01262/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac25120de29ce52ab034ba79612657f8c9cdfbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac25120de29ce52ab034ba79612657f8c9cdfbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac25120de29ce52ab034ba79612657f8c9cdfbe"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "e9b52e435e991b7f51d771b5fbaef99a5e297e69", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -1,3 +1,13 @@\n+2006-10-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/28585\n+\t* intrinsic.c (add_functions): Add new_line Fortran 2003 intrinsic.\n+\t* intrinsic.h: Add gfc_simplify_new_line and gfc_check_new_line\n+\tprototypes.\n+\t* check.c (gfc_check_new_line): New function.\n+\t* simplify.c (gfc_simplify_new_line): New function.\n+\t* intrinsic.texi: Document new_line intrinsic.\n+\n 2006-10-07  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/16580"}, {"sha": "4884265a329ffffc18da0d9ce1ba2c078ca5a14d", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -1827,6 +1827,14 @@ gfc_check_nearest (gfc_expr * x, gfc_expr * s)\n   return SUCCESS;\n }\n \n+try\n+gfc_check_new_line (gfc_expr * a)\n+{\n+  if (type_check (a, 0, BT_CHARACTER) == FAILURE)\n+    return FAILURE;\n+\n+  return SUCCESS;\n+}\n \n try\n gfc_check_null (gfc_expr * mold)"}, {"sha": "9c30205b3e40bc5b377201c8cb335cfdd0641cda", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -1910,6 +1910,10 @@ add_functions (void)\n \n   make_generic (\"nearest\", GFC_ISYM_NEAREST, GFC_STD_F95);\n \n+  add_sym_1 (\"new_line\", 0, 0, BT_CHARACTER, dc, GFC_STD_F2003,\n+             gfc_check_new_line, gfc_simplify_new_line, NULL,\n+             i, BT_CHARACTER, dc, REQUIRED);\n+\n   add_sym_2 (\"nint\", 1, 1, BT_INTEGER, di, GFC_STD_F77,\n \t     gfc_check_a_ikind, gfc_simplify_nint, gfc_resolve_nint,\n \t     a, BT_REAL, dr, REQUIRED, kind, BT_INTEGER, di, OPTIONAL);"}, {"sha": "a7cdd85b3c3d41a57997957850ea151b1bacc1b9", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -98,6 +98,7 @@ try gfc_check_merge (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_minloc_maxloc (gfc_actual_arglist *);\n try gfc_check_minval_maxval (gfc_actual_arglist *);\n try gfc_check_nearest (gfc_expr *, gfc_expr *);\n+try gfc_check_new_line (gfc_expr *);\n try gfc_check_null (gfc_expr *);\n try gfc_check_pack (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_precision (gfc_expr *);\n@@ -255,6 +256,7 @@ gfc_expr *gfc_simplify_modulo (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_mvbits (gfc_expr *, gfc_expr *, gfc_expr *, gfc_expr *,\n \t\t\t       gfc_expr *);\n gfc_expr *gfc_simplify_nearest (gfc_expr *, gfc_expr *);\n+gfc_expr *gfc_simplify_new_line (gfc_expr *);\n gfc_expr *gfc_simplify_nint (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_null (gfc_expr *);\n gfc_expr *gfc_simplify_idnint (gfc_expr *);"}, {"sha": "ebb5e53b5856887e46b4af5e3f4a3127cb2a703c", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -183,6 +183,7 @@ Some intrinsics have documentation yet to be completed as indicated by 'document\n * @code{MODULO}:        MODULO,    Modulo function\n * @code{MVBITS}:        MVBITS,    Move bits from one integer to another\n * @code{NEAREST}:       NEAREST,   Nearest representable number\n+* @code{NEW_LINE}:      NEW_LINE,  New line character\n * @code{NINT}:          NINT,      Nearest whole number\n * @code{NOT}:           NOT,       Logical negation\n * @code{NULL}:          NULL,      Function that returns an disassociated pointer\n@@ -5879,6 +5880,45 @@ end program test_nearest\n \n \n \n+@node NEW_LINE\n+@section @code{NEW_LINE} --- New line character\n+@findex @code{NEW_LINE} intrinsic\n+@findex @code{NEW_LINE} intrinsic\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{NEW_LINE(C)} returns the new-line character\n+\n+@item @emph{Standard}:\n+F2003 and later\n+\n+@item @emph{Class}:\n+Elemental function\n+\n+@item @emph{Syntax}:\n+@code{C = NEW_LINE(C)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{C}    @tab The argument shall be a scalar or array of the\n+                      type @code{CHARACTER}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+Returns a @var{CHARACTER} scalar of length one with the new-line character of\n+the same kind as parameter @var{C}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program newline\n+  implicit none\n+  write(*,'(A)') 'This is record 1.'//NEW_LINE('A')//'This is record 2.'\n+end program newline\n+@end smallexample\n+@end table\n+\n+\n+\n @node NINT\n @section @code{NINT} --- Nearest whole number\n @findex @code{NINT} intrinsic"}, {"sha": "9d35bae749e0d86ef17a64a6c94e76cca3c2f9ce", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -2614,6 +2614,25 @@ simplify_nint (const char *name, gfc_expr * e, gfc_expr * k)\n }\n \n \n+gfc_expr *\n+gfc_simplify_new_line (gfc_expr * e)\n+{\n+  gfc_expr *result;\n+\n+  if (e->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (BT_CHARACTER, e->ts.kind, &e->where);\n+\n+  result->value.character.string = gfc_getmem (2);\n+\n+  result->value.character.length = 1;\n+  result->value.character.string[0] = '\\n';\n+  result->value.character.string[1] = '\\0';     /* For debugger */\n+  return result;\n+}\n+\n+\n gfc_expr *\n gfc_simplify_nint (gfc_expr * e, gfc_expr * k)\n {"}, {"sha": "9446d2164370318129094edfc7c7cfa038789269", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -1,3 +1,8 @@\n+2006-10-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/28585\n+\t* gfortran.dg/new_line.f90: New test.\n+\n 2006-10-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/builtins-config.h: Ensure we use -std=c99 on solaris2."}, {"sha": "355ca30209b36eab695a4d727694f679732db1fd", "filename": "gcc/testsuite/gfortran.dg/new_line.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ftestsuite%2Fgfortran.dg%2Fnew_line.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec93d793735ff33a75a0e77ba96e78dd4b01262/gcc%2Ftestsuite%2Fgfortran.dg%2Fnew_line.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnew_line.f90?ref=bec93d793735ff33a75a0e77ba96e78dd4b01262", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do run }\n+! Checks Fortran 2003's new_line intrinsic function\n+! PR fortran/28585\n+program new_line_check\n+    implicit none\n+    if(achar(10) /= new_line('a')) call abort()\n+end program new_line_check"}]}