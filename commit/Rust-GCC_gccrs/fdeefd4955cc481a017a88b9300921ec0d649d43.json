{"sha": "fdeefd4955cc481a017a88b9300921ec0d649d43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRlZWZkNDk1NWNjNDgxYTAxN2E4OGI5MzAwOTIxZWMwZDY0OWQ0Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-05T16:04:53Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-05T16:04:53Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r902", "tree": {"sha": "f4bb3ed1d7f54df7002808a767175f743e254502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4bb3ed1d7f54df7002808a767175f743e254502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdeefd4955cc481a017a88b9300921ec0d649d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdeefd4955cc481a017a88b9300921ec0d649d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdeefd4955cc481a017a88b9300921ec0d649d43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdeefd4955cc481a017a88b9300921ec0d649d43/comments", "author": null, "committer": null, "parents": [{"sha": "aaf9712e79c6bdfcdb337d621e80e517aebd955b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf9712e79c6bdfcdb337d621e80e517aebd955b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf9712e79c6bdfcdb337d621e80e517aebd955b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "e37bb9e0422f19f9170675fe4ea1eb1f560dd8c6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdeefd4955cc481a017a88b9300921ec0d649d43/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdeefd4955cc481a017a88b9300921ec0d649d43/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=fdeefd4955cc481a017a88b9300921ec0d649d43", "patch": "@@ -1147,13 +1147,6 @@ build_array_ref (array, index)\n     {\n       tree rval, type;\n \n-      if (index != error_mark_node\n-\t  && TREE_CODE (TREE_TYPE (index)) != INTEGER_TYPE)\n-\t{\n-\t  error (\"array subscript is not an integer\");\n-\t  return error_mark_node;\n-\t}\n-\n       /* Subscripting with type char is likely to lose\n \t on a machine where chars are signed.\n \t So warn on any machine, but optionally.\n@@ -1167,6 +1160,13 @@ build_array_ref (array, index)\n       /* Apply default promotions *after* noticing character types.  */\n       index = default_conversion (index);\n \n+      /* Require integer *after* promotion, for sake of enums.  */\n+      if (TREE_CODE (TREE_TYPE (index)) != INTEGER_TYPE)\n+\t{\n+\t  error (\"array subscript is not an integer\");\n+\t  return error_mark_node;\n+\t}\n+\n       /* An array that is indexed by a non-constant\n \t cannot be stored in a register; we must be able to do\n \t address arithmetic on its address."}]}