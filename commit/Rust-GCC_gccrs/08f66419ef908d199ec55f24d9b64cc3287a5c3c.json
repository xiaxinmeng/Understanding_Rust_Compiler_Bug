{"sha": "08f66419ef908d199ec55f24d9b64cc3287a5c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmNjY0MTllZjkwOGQxOTllYzU1ZjI0ZDliNjRjYzMyODdhNWMzYw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-10-10T15:23:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-10-10T15:23:33Z"}, "message": "[Ada] Assertion_Policy (Ignore) ignores invariants\n\n2019-10-10  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads, einfo.adb (Invariants_Ignored): New flag on types.\n\tThis leaves just one unused flag.\n\t* sem_prag.adb (Invariant): Set the flag if appropriate.\n\t* exp_util.adb (Make_Invariant_Call): Check the flag.\n\nFrom-SVN: r276818", "tree": {"sha": "10ee39e225039967caa8681796419e1f5bcfb49c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10ee39e225039967caa8681796419e1f5bcfb49c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08f66419ef908d199ec55f24d9b64cc3287a5c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f66419ef908d199ec55f24d9b64cc3287a5c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f66419ef908d199ec55f24d9b64cc3287a5c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f66419ef908d199ec55f24d9b64cc3287a5c3c/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d145e5628f3a72abb2991e2fe9f45af963500ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d145e5628f3a72abb2991e2fe9f45af963500ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d145e5628f3a72abb2991e2fe9f45af963500ee5"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "082fcf463a22736c1bcb21d1e3551d756924c042", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=08f66419ef908d199ec55f24d9b64cc3287a5c3c", "patch": "@@ -1,4 +1,6 @@\n-2019-10-10  Arnaud Charlet  <charlet@adacore.com>\n+2019-10-10  Bob Duff  <duff@adacore.com>\n \n-\t* gnat1drv.adb (Gnat1drv): Skip code generation when handling an\n-\tincomplete unit with -gnatceg.\n\\ No newline at end of file\n+\t* einfo.ads, einfo.adb (Invariants_Ignored): New flag on types.\n+\tThis leaves just one unused flag.\n+\t* sem_prag.adb (Invariant): Set the flag if appropriate.\n+\t* exp_util.adb (Make_Invariant_Call): Check the flag.\n\\ No newline at end of file"}, {"sha": "98b508f6590529a5ccdf1ff8234eece4fc0d6cdc", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=08f66419ef908d199ec55f24d9b64cc3287a5c3c", "patch": "@@ -629,8 +629,8 @@ package body Einfo is\n    --    Is_Activation_Record            Flag305\n    --    Needs_Activation_Record         Flag306\n    --    Is_Loop_Parameter               Flag307\n+   --    Invariants_Ignored              Flag308\n \n-   --    (unused)                        Flag308\n    --    (unused)                        Flag309\n \n    --  Note: Flag310-317 are defined in atree.ads/adb, but not yet in atree.h\n@@ -2077,6 +2077,12 @@ package body Einfo is\n       return Node21 (Id);\n    end Interface_Name;\n \n+   function Invariants_Ignored (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Type (Id));\n+      return Flag308 (Id);\n+   end Invariants_Ignored;\n+\n    function Is_Abstract_Subprogram (Id : E) return B is\n    begin\n       pragma Assert (Is_Overloadable (Id));\n@@ -5278,6 +5284,12 @@ package body Einfo is\n       Set_Node21 (Id, V);\n    end Set_Interface_Name;\n \n+   procedure Set_Invariants_Ignored (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Type (Id));\n+      Set_Flag308 (Id, V);\n+   end Set_Invariants_Ignored;\n+\n    procedure Set_Is_Abstract_Subprogram (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Overloadable (Id));\n@@ -9785,6 +9797,7 @@ package body Einfo is\n       W (\"In_Package_Body\",                 Flag48  (Id));\n       W (\"In_Private_Part\",                 Flag45  (Id));\n       W (\"In_Use\",                          Flag8   (Id));\n+      W (\"Invariants_Ignored\",              Flag308 (Id));\n       W (\"Is_Abstract_Subprogram\",          Flag19  (Id));\n       W (\"Is_Abstract_Type\",                Flag146 (Id));\n       W (\"Is_Access_Constant\",              Flag69  (Id));"}, {"sha": "536663142cc20779124bac599679ddd24a13df2f", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=08f66419ef908d199ec55f24d9b64cc3287a5c3c", "patch": "@@ -1739,7 +1739,7 @@ package Einfo is\n \n --    Has_Inherited_Invariants (Flag291) [base type only]\n --       Defined in all type entities. Set on private extensions and derived\n---       types which inherit at least on class-wide invariant from a parent or\n+--       types which inherit at least one class-wide invariant from a parent or\n --       an interface type. The flag is also set on the full view of a private\n --       extension for completeness.\n \n@@ -1841,7 +1841,7 @@ package Einfo is\n --       when the type is subject to pragma Default_Initial_Condition.\n \n --    Has_Own_Invariants (Flag232) [base type only]\n---       Defined in all type entities. Set on any type which defines at least\n+--       Defined in all type entities. Set on any type that defines at least\n --       one invariant of its own. The flag is also set on the full view of a\n --       private type for completeness.\n \n@@ -2259,6 +2259,11 @@ package Einfo is\n --       implemented by a tagged type that are not already implemented by the\n --       ancestors (Ada 2005: AI-251).\n \n+--    Invariants_Ignored (Flag308)\n+--       Defined on all types. Indicates whether the type declaration is in\n+--       a context where Assertion_Policy is Ignore, in which case no checks\n+--       (static or dynamic) must be generated for objects of the type.\n+\n --    Invariant_Procedure (synthesized)\n --       Defined in types and subtypes. Set for private types and their full\n --       views if one or more [class-wide] invariants apply to the type, or\n@@ -7272,6 +7277,7 @@ package Einfo is\n    function Interface_Alias                     (Id : E) return E;\n    function Interface_Name                      (Id : E) return N;\n    function Interfaces                          (Id : E) return L;\n+   function Invariants_Ignored                  (Id : E) return B;\n    function Is_Abstract_Subprogram              (Id : E) return B;\n    function Is_Abstract_Type                    (Id : E) return B;\n    function Is_Access_Constant                  (Id : E) return B;\n@@ -7973,6 +7979,7 @@ package Einfo is\n    procedure Set_Interface_Alias                 (Id : E; V : E);\n    procedure Set_Interface_Name                  (Id : E; V : N);\n    procedure Set_Interfaces                      (Id : E; V : L);\n+   procedure Set_Invariants_Ignored              (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Subprogram          (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Type                (Id : E; V : B := True);\n    procedure Set_Is_Access_Constant              (Id : E; V : B := True);\n@@ -8801,6 +8808,7 @@ package Einfo is\n    pragma Inline (Interface_Alias);\n    pragma Inline (Interface_Name);\n    pragma Inline (Interfaces);\n+   pragma Inline (Invariants_Ignored);\n    pragma Inline (Is_Abstract_Subprogram);\n    pragma Inline (Is_Abstract_Type);\n    pragma Inline (Is_Access_Constant);\n@@ -9338,6 +9346,7 @@ package Einfo is\n    pragma Inline (Set_Interface_Alias);\n    pragma Inline (Set_Interface_Name);\n    pragma Inline (Set_Interfaces);\n+   pragma Inline (Set_Invariants_Ignored);\n    pragma Inline (Set_Is_Abstract_Subprogram);\n    pragma Inline (Set_Is_Abstract_Type);\n    pragma Inline (Set_Is_Access_Constant);"}, {"sha": "36c900b2a28cddb7a654ba2d028b07d98838e20d", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=08f66419ef908d199ec55f24d9b64cc3287a5c3c", "patch": "@@ -9388,10 +9388,16 @@ package body Exp_Util is\n       Proc_Id := Invariant_Procedure (Typ);\n       pragma Assert (Present (Proc_Id));\n \n-      return\n-        Make_Procedure_Call_Statement (Loc,\n-          Name                   => New_Occurrence_Of (Proc_Id, Loc),\n-          Parameter_Associations => New_List (Relocate_Node (Expr)));\n+      --  Ignore the invariant if that policy is in effect\n+\n+      if Invariants_Ignored (Typ) then\n+         return Make_Null_Statement (Loc);\n+      else\n+         return\n+           Make_Procedure_Call_Statement (Loc,\n+             Name                   => New_Occurrence_Of (Proc_Id, Loc),\n+             Parameter_Associations => New_List (Relocate_Node (Expr)));\n+      end if;\n    end Make_Invariant_Call;\n \n    ------------------------"}, {"sha": "f9ce1d9ae2568e5fe8611695c903e08ee2d6665f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f66419ef908d199ec55f24d9b64cc3287a5c3c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=08f66419ef908d199ec55f24d9b64cc3287a5c3c", "patch": "@@ -18816,6 +18816,15 @@ package body Sem_Prag is\n \n             Set_Has_Own_Invariants (Typ);\n \n+            --  Set the Invariants_Ignored flag if that policy is in effect\n+\n+            Set_Invariants_Ignored (Typ,\n+              Present (Check_Policy_List)\n+                and then\n+                  (Policy_In_Effect (Name_Invariant) = Name_Ignore\n+                     and then\n+                   Policy_In_Effect (Name_Type_Invariant) = Name_Ignore));\n+\n             --  If the invariant is class-wide, then it can be inherited by\n             --  derived or interface implementing types. The type is said to\n             --  have \"inheritable\" invariants."}]}