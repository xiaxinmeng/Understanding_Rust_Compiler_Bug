{"sha": "4f419f8cdc734f82c04c3bc36659185912458998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY0MTlmOGNkYzczNGY4MmMwNGMzYmMzNjY1OTE4NTkxMjQ1ODk5OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-04-30T14:23:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-04-30T14:23:11Z"}, "message": "re PR c++/60951 ([C++11] ICE with braced-init-list assignment and constexpr constructor)\n\n\tPR c++/60951\n\t* typeck2.c (massage_init_elt): Use maybe_constant_init.\n\nFrom-SVN: r209933", "tree": {"sha": "a895b2142a5c67b6f0e76c3d9d371d6e9f029774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a895b2142a5c67b6f0e76c3d9d371d6e9f029774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f419f8cdc734f82c04c3bc36659185912458998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f419f8cdc734f82c04c3bc36659185912458998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f419f8cdc734f82c04c3bc36659185912458998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f419f8cdc734f82c04c3bc36659185912458998/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8df07a2c14eafd6b3b52b2126c4e58b4107ea784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df07a2c14eafd6b3b52b2126c4e58b4107ea784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df07a2c14eafd6b3b52b2126c4e58b4107ea784"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "a3878830a6e1e1d3dec25ae7bb78302c8b93af9c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f419f8cdc734f82c04c3bc36659185912458998/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f419f8cdc734f82c04c3bc36659185912458998/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4f419f8cdc734f82c04c3bc36659185912458998", "patch": "@@ -1,3 +1,8 @@\n+2014-04-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/60951\n+\t* typeck2.c (massage_init_elt): Use maybe_constant_init.\n+\n 2014-04-30  Marek Polacek  <polacek@redhat.com>\n \n \t* typeck.c (cp_build_binary_op): Call ubsan_instrument_division"}, {"sha": "044d971935270970b6b87c5b8529bee37653eec3", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f419f8cdc734f82c04c3bc36659185912458998/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f419f8cdc734f82c04c3bc36659185912458998/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=4f419f8cdc734f82c04c3bc36659185912458998", "patch": "@@ -1138,7 +1138,7 @@ massage_init_elt (tree type, tree init, tsubst_flags_t complain)\n   /* When we defer constant folding within a statement, we may want to\n      defer this folding as well.  */\n   tree t = fold_non_dependent_expr_sfinae (init, complain);\n-  t = maybe_constant_value (t);\n+  t = maybe_constant_init (t);\n   if (TREE_CONSTANT (t))\n     init = t;\n   return init;"}, {"sha": "7e4da11a2df0f8bafe1c43d4001c5e19118fb603", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-aggr1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f419f8cdc734f82c04c3bc36659185912458998/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-aggr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f419f8cdc734f82c04c3bc36659185912458998/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-aggr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-aggr1.C?ref=4f419f8cdc734f82c04c3bc36659185912458998", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/60951\n+// { dg-do compile { target c++11 } }\n+\n+struct Foo {\n+  constexpr Foo(int x = 0) : memb(x) {}\n+  int memb;\n+};\n+\n+struct FooContainer {\n+  Foo foo[2];\n+};\n+\n+void fubar() {\n+  int nonConst = 0;\n+  FooContainer fooContainer;\n+  fooContainer = { { 0, nonConst } };\n+}"}]}