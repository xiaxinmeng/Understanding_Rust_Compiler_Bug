{"sha": "161a649cb95838bb373e2bcdaab050d2215c9754", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYxYTY0OWNiOTU4MzhiYjM3M2UyYmNkYWFiMDUwZDIyMTVjOTc1NA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2007-01-25T21:05:18Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2007-01-25T21:05:18Z"}, "message": "jvmti-int.h (_Jv_GetJDWP_JVMTIEnv): Declare.\n\n        * include/jvmti-int.h (_Jv_GetJDWP_JVMTIEnv): Declare.\n        * gnu/classpath/jdwp/natVMVirtualMachine.cc\n        (_Jv_GetJDWP_JVMTIEnv): New function.\n        * gnu/classpath/jdwp/natVMMethod.cc (getName): Implement.\n        (getSignature): Implement.\n        (getModifiers): Implement.\n\nFrom-SVN: r121185", "tree": {"sha": "1f03282fde89cfd286c4b75b454f98b454bb2d3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f03282fde89cfd286c4b75b454f98b454bb2d3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/161a649cb95838bb373e2bcdaab050d2215c9754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161a649cb95838bb373e2bcdaab050d2215c9754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/161a649cb95838bb373e2bcdaab050d2215c9754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161a649cb95838bb373e2bcdaab050d2215c9754/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22fa69dace0a41ac78a0fd7a1db1f00e5fc8c3b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22fa69dace0a41ac78a0fd7a1db1f00e5fc8c3b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22fa69dace0a41ac78a0fd7a1db1f00e5fc8c3b1"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "37d61bcbb29609d6c9fd8a3094e875c4d1ae21b9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=161a649cb95838bb373e2bcdaab050d2215c9754", "patch": "@@ -1,3 +1,12 @@\n+2007-01-25  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti-int.h (_Jv_GetJDWP_JVMTIEnv): Declare.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(_Jv_GetJDWP_JVMTIEnv): New function.\n+\t* gnu/classpath/jdwp/natVMMethod.cc (getName): Implement.\n+\t(getSignature): Implement.\n+\t(getModifiers): Implement.\n+\n 2007-01-25  Andrew Haley  <aph@redhat.com>\n \n \t* configure, Makefile.in, include/config.h.in: Rebuilt."}, {"sha": "07d5622c70453ad164a5d9a83d765239a7bb629e", "filename": "libjava/gnu/classpath/jdwp/natVMMethod.cc", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMMethod.cc?ref=161a649cb95838bb373e2bcdaab050d2215c9754", "patch": "@@ -1,6 +1,6 @@\n // natVMMethod.cc -- native support for VMMethod\n \n-/* Copyright (C) 2006 Free Software Foundation\n+/* Copyright (C) 2006, 2007 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -11,28 +11,46 @@ details.  */\n #include <config.h>\n #include <gcj/cni.h>\n #include <java-interp.h>\n+#include <jvmti.h>\n+#include \"jvmti-int.h\"\n \n #include <gnu/classpath/jdwp/VMMethod.h>\n #include <gnu/classpath/jdwp/exception/JdwpInternalErrorException.h>\n #include <gnu/classpath/jdwp/util/LineTable.h>\n #include <gnu/classpath/jdwp/util/VariableTable.h>\n \n-java::lang::String*\n+jstring\n gnu::classpath::jdwp::VMMethod::getName ()\n {\n-  return NULL;\n+  jvmtiEnv *env = _Jv_GetJDWP_JVMTIEnv ();\n+  jmethodID method = reinterpret_cast<jmethodID> (_methodId);\n+  char *name;\n+  env->GetMethodName (method, &name, NULL, NULL);\n+  jstring string = JvNewStringUTF (name);\n+  env->Deallocate (reinterpret_cast<unsigned char *> (name));\n+  return string;\n }\n \n-java::lang::String*\n+jstring\n gnu::classpath::jdwp::VMMethod::getSignature ()\n {\n-  return NULL;\n+  jvmtiEnv *env = _Jv_GetJDWP_JVMTIEnv ();\n+  jmethodID method = reinterpret_cast<jmethodID> (_methodId);\n+  char *signature;\n+  env->GetMethodName (method, NULL, &signature, NULL);\n+  jstring string = JvNewStringUTF (signature);\n+  env->Deallocate (reinterpret_cast<unsigned char *> (signature));\n+  return string;\n }\n \n jint\n gnu::classpath::jdwp::VMMethod::getModifiers ()\n {\n-  return 0;\n+  jvmtiEnv *env = _Jv_GetJDWP_JVMTIEnv ();\n+  jmethodID method = reinterpret_cast<jmethodID> (_methodId);\n+  jint flags;\n+  env->GetMethodModifiers (method, &flags);\n+  return flags;\n }\n \n gnu::classpath::jdwp::util::LineTable *"}, {"sha": "ef4fe281d2f87da1e7ff65b842aa09f89e045701", "filename": "libjava/gnu/classpath/jdwp/natVMVirtualMachine.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc?ref=161a649cb95838bb373e2bcdaab050d2215c9754", "patch": "@@ -48,6 +48,12 @@ static void JNICALL jdwpVMInitCB (jvmtiEnv *, JNIEnv *, jthread);\n // JVMTI environment\n static jvmtiEnv *_jdwp_jvmtiEnv;\n \n+jvmtiEnv *\n+_Jv_GetJDWP_JVMTIEnv (void)\n+{\n+  return _jdwp_jvmtiEnv;\n+}\n+\n void\n gnu::classpath::jdwp::VMVirtualMachine::initialize ()\n {"}, {"sha": "822163afa0dcad04ddd9e34ab46dd5e68960c411", "filename": "libjava/include/jvmti-int.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2Finclude%2Fjvmti-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161a649cb95838bb373e2bcdaab050d2215c9754/libjava%2Finclude%2Fjvmti-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvmti-int.h?ref=161a649cb95838bb373e2bcdaab050d2215c9754", "patch": "@@ -1,5 +1,5 @@\n /* jvmti-int.h -- Internal JVMTI definitions\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -82,4 +82,7 @@ namespace JVMTI\n    For speed, this function should only be called after \n    JVMTI_REQUESTED_EVENT is checked. */\n extern void _Jv_JVMTI_PostEvent (jvmtiEvent type, jthread event_thread,\t\t\t\t ...);\n+// Returns the jvmtiEnv used by the JDWP backend\n+extern jvmtiEnv *_Jv_GetJDWP_JVMTIEnv (void);\n+\n #endif /* __GCJ_JVMTI_INT_H__ */"}]}