{"sha": "d05cc98eafce6ea54bea577e95051a67431ee2db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1Y2M5OGVhZmNlNmVhNTRiZWE1NzdlOTUwNTFhNjc0MzFlZTJkYg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-07-22T02:23:27Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-07-22T02:23:27Z"}, "message": "c-decl.c (start_decl): Don't call maybe_apply_pragma_weak here.\n\n\t* c-decl.c (start_decl): Don't call maybe_apply_pragma_weak here.\n\t(finish_decl): Call maybe_apply_pragma_weak here.\n\t(grokdeclarator): Check that DECL_ASSEMBLER_NAME isn't set before\n\tTREE_PUBLIC and TREE_STATIC are decided.\n\t(start_function): Move call to maybe_apply_pragma_weak.  Check that\n\tDECL_ASSEMBLER_NAME isn't set too early.\n\nFrom-SVN: r69660", "tree": {"sha": "98098a4e404ebad844fcaa48331d8916995c5166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98098a4e404ebad844fcaa48331d8916995c5166"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05cc98eafce6ea54bea577e95051a67431ee2db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05cc98eafce6ea54bea577e95051a67431ee2db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05cc98eafce6ea54bea577e95051a67431ee2db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05cc98eafce6ea54bea577e95051a67431ee2db/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "905bd7b527bc0134241aad1d566fd55bf09a5ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905bd7b527bc0134241aad1d566fd55bf09a5ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/905bd7b527bc0134241aad1d566fd55bf09a5ef5"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "33ac2fe9d61360da32822d10bcc5be8c3ea62a32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05cc98eafce6ea54bea577e95051a67431ee2db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05cc98eafce6ea54bea577e95051a67431ee2db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d05cc98eafce6ea54bea577e95051a67431ee2db", "patch": "@@ -1,5 +1,12 @@\n 2003-07-22  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* c-decl.c (start_decl): Don't call maybe_apply_pragma_weak here.\n+\t(finish_decl): Call maybe_apply_pragma_weak here.\n+\t(grokdeclarator): Check that DECL_ASSEMBLER_NAME isn't set before\n+\tTREE_PUBLIC and TREE_STATIC are decided.\n+\t(start_function): Move call to maybe_apply_pragma_weak.  Check that\n+\tDECL_ASSEMBLER_NAME isn't set too early.\n+\n \t* cpplex.c (_cpp_process_line_notes): Mention option name in\n \ttrigraphs warning.\n "}, {"sha": "6f5e631e936109f73f1b31718ca9dbe2096e18cb", "filename": "gcc/c-decl.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05cc98eafce6ea54bea577e95051a67431ee2db/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05cc98eafce6ea54bea577e95051a67431ee2db/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=d05cc98eafce6ea54bea577e95051a67431ee2db", "patch": "@@ -2706,10 +2706,6 @@ start_decl (tree declarator, tree declspecs, int initialized, tree attributes)\n   /* Set attributes here so if duplicate decl, will have proper attributes.  */\n   decl_attributes (&decl, attributes, 0);\n \n-  /* If #pragma weak was used, mark the decl weak now.  */\n-  if (current_binding_level == global_binding_level)\n-    maybe_apply_pragma_weak (decl);\n-\n   if (TREE_CODE (decl) == FUNCTION_DECL\n       && DECL_DECLARED_INLINE_P (decl)\n       && DECL_UNINLINABLE (decl)\n@@ -2890,6 +2886,10 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n       SET_DECL_ASSEMBLER_NAME (decl, get_identifier (starred));\n     }\n \n+  /* If #pragma weak was used, mark the decl weak now.  */\n+  if (current_binding_level == global_binding_level)\n+    maybe_apply_pragma_weak (decl);\n+\n   /* Output the assembler code and/or RTL code for variables and functions,\n      unless the type is an undefined structure or union.\n      If not, it will get done when the type is completed.  */\n@@ -4466,6 +4466,13 @@ grokdeclarator (tree declarator, tree declspecs,\n     if (C_TYPE_FIELDS_VOLATILE (TREE_TYPE (decl)))\n       c_mark_addressable (decl);\n \n+#ifdef ENABLE_CHECKING\n+  /* This is the earliest point at which we might know the assembler\n+     name of a variable.  Thus, if it's known before this, die horribly.  */\n+  if (DECL_ASSEMBLER_NAME_SET_P (decl))\n+    abort ();\n+#endif\n+\n     decl_attributes (&decl, returned_attrs, 0);\n \n     return decl;\n@@ -5540,10 +5547,6 @@ start_function (tree declspecs, tree declarator, tree attributes)\n \n   decl_attributes (&decl1, attributes, 0);\n \n-  /* If #pragma weak was used, mark the decl weak now.  */\n-  if (current_binding_level == global_binding_level)\n-    maybe_apply_pragma_weak (decl1);\n-\n   if (DECL_DECLARED_INLINE_P (decl1)\n       && DECL_UNINLINABLE (decl1)\n       && lookup_attribute (\"noinline\", DECL_ATTRIBUTES (decl1)))\n@@ -5635,6 +5638,17 @@ start_function (tree declspecs, tree declarator, tree attributes)\n   if (current_function_decl != 0)\n     TREE_PUBLIC (decl1) = 0;\n \n+#ifdef ENABLE_CHECKING\n+  /* This is the earliest point at which we might know the assembler\n+     name of the function.  Thus, if it's set before this, die horribly.  */\n+  if (DECL_ASSEMBLER_NAME_SET_P (decl1))\n+    abort ();\n+#endif\n+\n+  /* If #pragma weak was used, mark the decl weak now.  */\n+  if (current_binding_level == global_binding_level)\n+    maybe_apply_pragma_weak (decl1);\n+\n   /* Warn for unlikely, improbable, or stupid declarations of `main'.  */\n   if (warn_main > 0 && MAIN_NAME_P (DECL_NAME (decl1)))\n     {"}]}