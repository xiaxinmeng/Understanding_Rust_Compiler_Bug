{"sha": "24a521606976445d6b3c0c116c73aa126c70cf9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhNTIxNjA2OTc2NDQ1ZDZiM2MwYzExNmM3M2FhMTI2YzcwY2Y5Yg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-10-31T22:08:55Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-10-31T22:08:55Z"}, "message": "pa.c (pa_select_section): Use new style declaration.\n\n\t* pa.c (pa_select_section): Use new style declaration.\n\t* som.h (readonly_data): Likewise.\n\nFrom-SVN: r73160", "tree": {"sha": "e5adac182d250ba43a3b974ce3135a08a3957e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5adac182d250ba43a3b974ce3135a08a3957e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24a521606976445d6b3c0c116c73aa126c70cf9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a521606976445d6b3c0c116c73aa126c70cf9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24a521606976445d6b3c0c116c73aa126c70cf9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24a521606976445d6b3c0c116c73aa126c70cf9b/comments", "author": null, "committer": null, "parents": [{"sha": "38f391a52ec117103a1d1620869a83444857834e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f391a52ec117103a1d1620869a83444857834e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f391a52ec117103a1d1620869a83444857834e"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "90e6b6e59d4a0c1e5adbd2eb03479cfd09586140", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a521606976445d6b3c0c116c73aa126c70cf9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a521606976445d6b3c0c116c73aa126c70cf9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24a521606976445d6b3c0c116c73aa126c70cf9b", "patch": "@@ -1,3 +1,8 @@\n+2003-10-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (pa_select_section): Use new style declaration.\n+\t* som.h (readonly_data): Likewise.\n+\n 2003-10-31  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* config/rs6000/rs6000.c: Update to C90 prototypes."}, {"sha": "89bcd6656e5946fcc9a1dca190b76d508d88947d", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a521606976445d6b3c0c116c73aa126c70cf9b/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a521606976445d6b3c0c116c73aa126c70cf9b/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=24a521606976445d6b3c0c116c73aa126c70cf9b", "patch": "@@ -8578,10 +8578,8 @@ cmpib_comparison_operator (rtx op, enum machine_mode mode)\n    not be placed in the read-only data section.  */\n \n static void\n-pa_select_section (exp, reloc, align)\n-     tree exp;\n-     int reloc;\n-     unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n+pa_select_section (tree exp, int reloc,\n+\t\t   unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED)\n {\n   if (TREE_CODE (exp) == VAR_DECL\n       && TREE_READONLY (exp)"}, {"sha": "42265cbbe8bbb8f6e91dd290a6e30aab6ffc8c48", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24a521606976445d6b3c0c116c73aa126c70cf9b/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24a521606976445d6b3c0c116c73aa126c70cf9b/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=24a521606976445d6b3c0c116c73aa126c70cf9b", "patch": "@@ -234,7 +234,7 @@ do {\t\t\t\t\t\t\t\t\\\n #define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n extern void readonly_data (void);\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n-readonly_data ()\t\t\t\t\t\t\t\\\n+readonly_data (void)\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (in_section != in_readonly_data)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\"}]}