{"sha": "f04f2fcd3d40f944f29189b1f995aa35ea04a379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA0ZjJmY2QzZDQwZjk0NGYyOTE4OWIxZjk5NWFhMzVlYTA0YTM3OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-05-28T18:28:56Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-05-28T18:28:56Z"}, "message": "Fix incorrect code generation with bit insns on H8/SX.\n\n\t* config/h8300/logical.md (HImode H8/SX bit-and splitter): Don't\n\tmake a nonzero adjustment to the memory offset.\n\t(b<ior,xor>hi_msx): Turn into a splitter.", "tree": {"sha": "a3ad24ce61184f06e66fe5726cdd95907204417e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ad24ce61184f06e66fe5726cdd95907204417e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f04f2fcd3d40f944f29189b1f995aa35ea04a379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04f2fcd3d40f944f29189b1f995aa35ea04a379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04f2fcd3d40f944f29189b1f995aa35ea04a379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04f2fcd3d40f944f29189b1f995aa35ea04a379/comments", "author": null, "committer": null, "parents": [{"sha": "2815558a2dbd0ee73de4bf01abb36d609026da6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2815558a2dbd0ee73de4bf01abb36d609026da6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2815558a2dbd0ee73de4bf01abb36d609026da6e"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "a099bbb4f5fa564d11c815245c44f3e8db6fd568", "filename": "gcc/config/h8300/logical.md", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04f2fcd3d40f944f29189b1f995aa35ea04a379/gcc%2Fconfig%2Fh8300%2Flogical.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04f2fcd3d40f944f29189b1f995aa35ea04a379/gcc%2Fconfig%2Fh8300%2Flogical.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flogical.md?ref=f04f2fcd3d40f944f29189b1f995aa35ea04a379", "patch": "@@ -14,22 +14,14 @@\n   [(set (match_operand:HI 0 \"bit_register_indirect_operand\")\n \t(and:HI (match_operand:HI 1 \"bit_register_indirect_operand\")\n \t\t(match_operand:HI 2 \"single_zero_operand\")))]\n-  \"TARGET_H8300SX\"\n+  \"TARGET_H8300SX && abs (INTVAL (operands[2])) > 0xff\"\n   [(set (match_dup 0)\n \t(and:QI (match_dup 1)\n \t\t(match_dup 2)))]\n   {\n-    if (abs (INTVAL (operands[2])) > 0xFF)\n-      {\n-\toperands[0] = adjust_address (operands[0], QImode, 0);\n-\toperands[1] = adjust_address (operands[1], QImode, 0);\n-\toperands[2] = GEN_INT ((INTVAL (operands[2])) >> 8);\n-      }\n-    else\n-      {\n-\toperands[0] = adjust_address (operands[0], QImode, 1);\n-\toperands[1] = adjust_address (operands[1], QImode, 1);\n-      }\n+    operands[0] = adjust_address (operands[0], QImode, 0);\n+    operands[1] = adjust_address (operands[1], QImode, 0);\n+    operands[2] = GEN_INT ((INTVAL (operands[2])) >> 8);\n   })\n \n (define_insn \"bclrhi_msx\"\n@@ -134,13 +126,19 @@\n   { return <CODE> == IOR ? \"bset\\\\t%V2,%0\" : \"bnot\\\\t%V2,%0\"; }\n   [(set_attr \"length\" \"8\")])\n \n-(define_insn \"b<code>hi_msx\"\n-  [(set (match_operand:HI 0 \"bit_register_indirect_operand\" \"=m\")\n-\t(ors:HI (match_operand:HI 1 \"bit_register_indirect_operand\" \"%0\")\n-\t\t(match_operand:HI 2 \"single_one_operand\" \"Y2\")))]\n-  \"TARGET_H8300SX\"\n-  { return <CODE> == IOR ? \"bset\\\\t%V2,%0\" : \"bnot\\\\t%V2,%0\"; }\n-  [(set_attr \"length\" \"8\")])\n+(define_split\n+  [(set (match_operand:HI 0 \"bit_register_indirect_operand\")\n+\t(ors:HI (match_operand:HI 1 \"bit_register_indirect_operand\")\n+\t\t(match_operand:HI 2 \"single_one_operand\")))]\n+  \"TARGET_H8300SX && abs (INTVAL (operands[2])) > 0xff\"\n+  [(set (match_dup 0)\n+\t(and:QI (match_dup 1)\n+\t\t(match_dup 2)))]\n+  {\n+    operands[0] = adjust_address (operands[0], QImode, 0);\n+    operands[1] = adjust_address (operands[1], QImode, 0);\n+    operands[2] = GEN_INT ((INTVAL (operands[2])) >> 8);\n+  })\n \n (define_insn \"<code>qi3_1\"\n   [(set (match_operand:QI 0 \"bit_operand\" \"=U,rQ\")"}]}