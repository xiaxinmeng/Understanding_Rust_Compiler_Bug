{"sha": "a191802c42bb6bf7b34acad3cc413a7c0c69015b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE5MTgwMmM0MmJiNmJmN2IzNGFjYWQzY2M0MTNhN2MwYzY5MDE1Yg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-02-19T16:28:37Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-02-19T16:28:37Z"}, "message": "natStackTrace.cc: Include platform.h immediately after config.h.\n\n\t* gnu/gcj/runtime/natStackTrace.cc: Include platform.h immediately\n\tafter config.h.  Use <> for consistency.\n\t* java/lang/natObject.cc: Likewise.\n\t* java/lang/natRuntime.cc: Likewise.\n\t* java/lang/natSystem.cc: Likewise.\n\t* java/util/natTimeZone.cc: Likewise.\n\t* win32.cc: Likewise.\n\t* include/posix.h (fcntl, socket, connect, close, bind, accept,\n\tlisten, write, read): Undef to avoid interference from OS macros.\n\nFrom-SVN: r63122", "tree": {"sha": "55e28161084820223bfd22506591a202176c976e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55e28161084820223bfd22506591a202176c976e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a191802c42bb6bf7b34acad3cc413a7c0c69015b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a191802c42bb6bf7b34acad3cc413a7c0c69015b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a191802c42bb6bf7b34acad3cc413a7c0c69015b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a191802c42bb6bf7b34acad3cc413a7c0c69015b/comments", "author": null, "committer": null, "parents": [{"sha": "f380a0cedb3a3ed53cb3455e23c3f5a1e3708110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f380a0cedb3a3ed53cb3455e23c3f5a1e3708110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f380a0cedb3a3ed53cb3455e23c3f5a1e3708110"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "8c495344485050cf65223cb2f05504991aac69fc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -1,3 +1,15 @@\n+2003-02-19  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* gnu/gcj/runtime/natStackTrace.cc: Include platform.h immediately\n+\tafter config.h.  Use <> for consistency.\n+\t* java/lang/natObject.cc: Likewise.\n+\t* java/lang/natRuntime.cc: Likewise.\n+\t* java/lang/natSystem.cc: Likewise.\n+\t* java/util/natTimeZone.cc: Likewise.\n+\t* win32.cc: Likewise.\n+\t* include/posix.h (fcntl, socket, connect, close, bind, accept,\n+\tlisten, write, read): Undef to avoid interference from OS macros.\n+\n 2003-02-19  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/ByteBufferImpl.java"}, {"sha": "d39cd00dbababac8c6f5cc3bc82d5fb313ad3e7d", "filename": "libjava/gnu/gcj/runtime/natStackTrace.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatStackTrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatStackTrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatStackTrace.cc?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -1,6 +1,6 @@\n // natStackTrace.cc - native helper methods for Throwable\n \n-/* Copyright (C) 2000, 2002  Free Software Foundation, Inc\n+/* Copyright (C) 2000, 2002, 2003  Free Software Foundation, Inc\n \n    This file is part of libgcj.\n \n@@ -16,6 +16,7 @@ details.  */\n  */\n \n #include <config.h>\n+#include <platform.h>\n \n #include <string.h>\n \n@@ -31,8 +32,6 @@ details.  */\n #include <java/util/IdentityHashMap.h>\n #include <java/lang/ArrayIndexOutOfBoundsException.h>\n \n-#include \"platform.h\"\n-\n #include <sys/types.h>\n \n #include <stdlib.h>"}, {"sha": "0aadd47d3b388167afea42a6bd4491c95ed27f06", "filename": "libjava/include/posix.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Finclude%2Fposix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Finclude%2Fposix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix.h?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -60,6 +60,8 @@ _Jv_platform_close_on_exec (jint fd)\n   ::fcntl (fd, F_SETFD, FD_CLOEXEC);\n }\n \n+#undef fcntl\n+\n #ifdef JV_HASH_SYNCHRONIZATION\n inline void\n _Jv_platform_usleep (unsigned long usecs)\n@@ -80,18 +82,24 @@ _Jv_socket (int domain, int type, int protocol)\n   return ::socket (domain, type, protocol);\n }\n \n+#undef socket\n+\n inline int\n _Jv_connect (jint fd, sockaddr *ptr, int len)\n {\n    return ::connect (fd, ptr, len);\n }\n \n+#undef connect\n+\n inline int\n _Jv_close (jint fd)\n {\n   return ::close (fd);\n }\n \n+#undef close\n+\n // Avoid macro definitions of bind from system headers, e.g. on\n // Solaris 7 with _XOPEN_SOURCE.  FIXME\n inline int\n@@ -100,31 +108,41 @@ _Jv_bind (int fd, struct sockaddr *addr, int addrlen)\n   return ::bind (fd, addr, addrlen);\n }\n \n+#undef bind\n+\n // Same problem with accept on Tru64 UNIX with _POSIX_PII_SOCKET\n inline int\n _Jv_accept (int fd, struct sockaddr *addr, socklen_t *addrlen)\n {\n   return ::accept (fd, addr, addrlen);\n }\n \n+#undef accept\n+\n inline int\n _Jv_listen (int fd, int backlog)\n {\n   return ::listen (fd, backlog);\n }\n \n+#undef listen\n+\n inline int\n _Jv_write(int s, void *buf, int len)\n {\n   return ::write (s, buf, len);\n }\n \n+#undef write\n+\n inline int\n _Jv_read(int s, void *buf, int len)\n {\n   return ::read (s, buf, len);\n }\n \n+#undef read\n+\n #endif /* DISABLE_JAVA_NET */\n \n #endif /* __JV_POSIX_H__ */"}, {"sha": "33f3e8de27fae202243e7970c1d9b1c9eed753ee", "filename": "libjava/java/lang/natObject.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Flang%2FnatObject.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Flang%2FnatObject.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatObject.cc?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -1,6 +1,6 @@\n // natObject.cc - Implementation of the Object class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -9,6 +9,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n+#include <platform.h>\n \n #include <string.h>\n \n@@ -28,8 +29,6 @@ details.  */\n #include <java/lang/Cloneable.h>\n #include <java/lang/Thread.h>\n \n-#include \"platform.h\"\n-\n #ifdef LOCK_DEBUG\n #  include <stdio.h>\n #endif"}, {"sha": "9879b259dd5ebef4191681b61fb2ee13835c9714", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -9,6 +9,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n+#include <platform.h>\n \n #include <stdlib.h>\n \n@@ -33,8 +34,6 @@ details.  */\n \n #include <jni.h>\n \n-#include \"platform.h\"\n-\n #ifdef HAVE_PWD_H\n #include <pwd.h>\n #endif"}, {"sha": "e2d423243867bca2b9f877def761503d7389869a", "filename": "libjava/java/lang/natSystem.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Flang%2FnatSystem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Flang%2FnatSystem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatSystem.cc?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -1,6 +1,6 @@\n // natSystem.cc - Native code implementing System class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001 , 2002 Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -9,6 +9,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n+#include <platform.h>\n \n #include <stdio.h>\n #include <string.h>\n@@ -24,8 +25,6 @@ details.  */\n #include <java/io/PrintStream.h>\n #include <java/io/InputStream.h>\n \n-#include \"platform.h\"\n-\n \f\n \n void"}, {"sha": "cb564a9759118edc4a68221e94d785e41c6d667c", "filename": "libjava/java/util/natTimeZone.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Futil%2FnatTimeZone.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fjava%2Futil%2FnatTimeZone.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FnatTimeZone.cc?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -1,6 +1,6 @@\n // natTimeZone.cc -- Native side of TimeZone class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -9,12 +9,11 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n+#include <platform.h>\n \n #include <gcj/cni.h>\n #include <jvm.h>\n \n-#include \"platform.h\"\n-\n #include <java/util/TimeZone.h>\n #include <java/lang/Character.h>\n #include <java/lang/Integer.h>"}, {"sha": "59c3be244b6eda83f74539b11dfcd569d103260b", "filename": "libjava/win32.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fwin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a191802c42bb6bf7b34acad3cc413a7c0c69015b/libjava%2Fwin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32.cc?ref=a191802c42bb6bf7b34acad3cc413a7c0c69015b", "patch": "@@ -1,6 +1,6 @@\n // win32.cc - Helper functions for Microsoft-flavored OSs.\n \n-/* Copyright (C) 2002  Free Software Foundation\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -9,11 +9,11 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n+#include <platform.h>\n #include <jvm.h>\n #include <sys/timeb.h>\n #include <stdlib.h>\n \n-#include \"platform.h\"\n #include <java/lang/ArithmeticException.h>\n #include <java/util/Properties.h>\n "}]}