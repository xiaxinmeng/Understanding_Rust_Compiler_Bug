{"sha": "be371b9f49e0c4fd7752cad6708fed8b1f2719a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzNzFiOWY0OWUwYzRmZDc3NTJjYWQ2NzA4ZmVkOGIxZjI3MTlhMw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-21T14:02:16Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-26T11:59:23Z"}, "message": "Add backend support to create immutable types\n\nGCC uses qualified types to create const immutability.", "tree": {"sha": "4cd49a36ce274aa268a816ab8c72abda84a08393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cd49a36ce274aa268a816ab8c72abda84a08393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be371b9f49e0c4fd7752cad6708fed8b1f2719a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be371b9f49e0c4fd7752cad6708fed8b1f2719a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be371b9f49e0c4fd7752cad6708fed8b1f2719a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be371b9f49e0c4fd7752cad6708fed8b1f2719a3/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be10fafbb6e06aeb8a818e404ac512f2f1bfce30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be10fafbb6e06aeb8a818e404ac512f2f1bfce30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be10fafbb6e06aeb8a818e404ac512f2f1bfce30"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "184f8fa05b8e73b9677a8625ad6c1a20a961ad7c", "filename": "gcc/rust/rust-backend.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be371b9f49e0c4fd7752cad6708fed8b1f2719a3/gcc%2Frust%2Frust-backend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be371b9f49e0c4fd7752cad6708fed8b1f2719a3/gcc%2Frust%2Frust-backend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-backend.h?ref=be371b9f49e0c4fd7752cad6708fed8b1f2719a3", "patch": "@@ -112,6 +112,9 @@ class Backend\n   // Get a pointer type.\n   virtual Btype *pointer_type (Btype *to_type) = 0;\n \n+  // make type immutable\n+  virtual Btype *immutable_type (Btype *base) = 0;\n+\n   // Get a function type.  The receiver, parameter, and results are\n   // generated from the types in the Function_type.  The Function_type\n   // is provided so that the names are available.  This should return"}, {"sha": "6f8dc4659d5a25524a370df9b09f7418d9e6a4e8", "filename": "gcc/rust/rust-gcc.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be371b9f49e0c4fd7752cad6708fed8b1f2719a3/gcc%2Frust%2Frust-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be371b9f49e0c4fd7752cad6708fed8b1f2719a3/gcc%2Frust%2Frust-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc.cc?ref=be371b9f49e0c4fd7752cad6708fed8b1f2719a3", "patch": "@@ -173,6 +173,8 @@ class Gcc_backend : public Backend\n \n   Btype *pointer_type (Btype *);\n \n+  Btype *immutable_type (Btype *);\n+\n   Btype *function_type (const Btyped_identifier &,\n \t\t\tconst std::vector<Btyped_identifier> &,\n \t\t\tconst std::vector<Btyped_identifier> &, Btype *,\n@@ -848,6 +850,18 @@ Gcc_backend::pointer_type (Btype *to_type)\n   return this->make_type (type);\n }\n \n+// Get immutable type\n+\n+Btype *\n+Gcc_backend::immutable_type (Btype *base)\n+{\n+  tree type_tree = base->get_tree ();\n+  if (type_tree == error_mark_node)\n+    return this->error_type ();\n+  tree constified = build_qualified_type (type_tree, TYPE_QUAL_CONST);\n+  return this->make_type (constified);\n+}\n+\n // Make a function type.\n \n Btype *"}]}