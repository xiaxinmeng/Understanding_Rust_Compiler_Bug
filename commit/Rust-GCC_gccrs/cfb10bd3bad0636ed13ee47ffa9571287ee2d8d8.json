{"sha": "cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiMTBiZDNiYWQwNjM2ZWQxM2VlNDdmZmE5NTcxMjg3ZWUyZDhkOA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2006-02-09T16:28:26Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2006-02-09T16:28:26Z"}, "message": "c-common.h (flag_const_strings): Don't declare.\n\n2006-02-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n\n        * c-common.h (flag_const_strings): Don't declare.\n        * c-common.c (flag_const_strings): Remove.\n        * c.opt (fconst_strings): Remove.\n        * c-opts.c (c_common_handle_option): Remove\n        * <OPT_fconst_strings>.\n        <OPT_Wwrite_strings>: Don't set flag_const_strings.\n        (c_common_init_options): Don't set flag_const_strings.\n        * doc/invoke.texi (-fno-const-strings): Remove documentation.\n\ncp/\n2006-02-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n\n        * typeck.c (string_conv_p): Don't test for flag_const_strings.\n\ntestsuite/ \n2006-02-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n\n        * g++.old-deja/g++.benjamin/15351-2.C: Likewise.\n        * g++.old-deja/g++.benjamin/15351-1.C: Remove.\n\nFrom-SVN: r110804", "tree": {"sha": "b179cc85dddedf0fe8e6f465783c974cde2e7b0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b179cc85dddedf0fe8e6f465783c974cde2e7b0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9fa4363858bbe008735b45d15b0c031ce5ca08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9fa4363858bbe008735b45d15b0c031ce5ca08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9fa4363858bbe008735b45d15b0c031ce5ca08b"}], "stats": {"total": 123, "additions": 31, "deletions": 92}, "files": [{"sha": "ae18ebd6b5159c782379fd5624743484420eb5cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -1,3 +1,13 @@\n+2006-02-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* c-common.h (flag_const_strings): Don't declare.\n+\t* c-common.c (flag_const_strings): Remove.\n+\t* c.opt (fconst_strings): Remove.\n+\t* c-opts.c (c_common_handle_option): Remove <OPT_fconst_strings>.\n+\t<OPT_Wwrite_strings>: Don't set flag_const_strings.\n+\t(c_common_init_options): Don't set flag_const_strings.\n+\t* doc/invoke.texi (-fno-const-strings): Remove documentation.\n+\n 2006-02-09  Richard Earnshaw  <richard.earnshaw@arm.com>\n \n \t* arm.md (tlobits_cbranch): New pattern."}, {"sha": "4c10bf4dd815aa04a3a3994d005b1fe37993abfd", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -261,11 +261,6 @@ int flag_ms_extensions;\n \n int flag_no_asm;\n \n-/* Nonzero means give string constants the type `const char *', as mandated\n-   by the standard.  */\n-\n-int flag_const_strings;\n-\n /* Nonzero means to treat bitfields as signed unless they say `unsigned'.  */\n \n int flag_signed_bitfields = 1;\n@@ -869,10 +864,14 @@ fix_string_type (tree value)\n \t\t nchars - 1, nchars_max, relevant_std);\n     }\n \n-  /* Create the array type for the string constant.  flag_const_strings\n-     says make the string constant an array of const char so that\n-     copying it to a non-const pointer will get a warning.  For C++,\n-     this is the standard behavior.\n+  /* Create the array type for the string constant.  The ISO C++\n+     standard says that a string literal has type `const char[N]' or\n+     `const wchar_t[N]'.  We use the same logic when invoked as a C\n+     front-end with -Wwrite-strings.\n+     ??? We should change the type of an expression depending on the\n+     state of a warning flag.  We should just be warning -- see how\n+     this is handled in the C++ front-end for the deprecated implicit\n+     conversion from string literals to `char*' or `wchar_t*'.\n \n      The C++ front end relies on TYPE_MAIN_VARIANT of a cv-qualified\n      array type being the unqualified version of that type.\n@@ -883,7 +882,7 @@ fix_string_type (tree value)\n   e_type = wide_flag ? wchar_type_node : char_type_node;\n   i_type = build_index_type (build_int_cst (NULL_TREE, nchars - 1));\n   a_type = build_array_type (e_type, i_type);\n-  if (flag_const_strings)\n+  if (c_dialect_cxx() || warn_write_strings)\n     a_type = c_build_qualified_type (a_type, TYPE_QUAL_CONST);\n \n   TREE_TYPE (value) = a_type;"}, {"sha": "90862f6b0bbacd382c6837925020c6a8c774b277", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -225,7 +225,6 @@ c_common_init_options (unsigned int argc, const char **argv)\n      before passing on command-line options to cpplib.  */\n   cpp_opts->warn_dollars = 0;\n \n-  flag_const_strings = c_dialect_cxx ();\n   flag_exceptions = c_dialect_cxx ();\n   warn_pointer_arith = c_dialect_cxx ();\n \n@@ -531,10 +530,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       break;\n \n     case OPT_Wwrite_strings:\n-      if (!c_dialect_cxx ())\n-\tflag_const_strings = value;\n-      else\n-\twarn_write_strings = value;\n+      warn_write_strings = value;\n       break;\n \n     case OPT_Weffc__:\n@@ -652,10 +648,6 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       flag_conserve_space = value;\n       break;\n \n-    case OPT_fconst_strings:\n-      flag_const_strings = value;\n-      break;\n-\n     case OPT_fconstant_string_class_:\n       constant_string_class_name = arg;\n       break;"}, {"sha": "34739c63c06bf259cb3e8f27e6aeb6d27b1e386b", "filename": "gcc/c.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -469,10 +469,6 @@ fconserve-space\n C++ ObjC++\n Reduce the size of object files\n \n-fconst-strings\n-C++ ObjC++\n-Make string literals \\\"const char[]\\\" not \\\"char[]\\\"\n-\n fconstant-string-class=\n ObjC ObjC++ Joined\n -fconst-string-class=<name>\tUse class <name> for constant strings"}, {"sha": "e3ceaa2240104024e46e1ba7b8ae8021dfbd3193", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -1,3 +1,7 @@\n+2006-02-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* typeck.c (string_conv_p): Don't test for flag_const_strings.\n+\n 2006-02-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/25979"}, {"sha": "df4f6cc7f5e2930b8f274782f5d6d018fee08c3d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -1472,7 +1472,7 @@ string_conv_p (tree totype, tree exp, int warn)\n {\n   tree t;\n \n-  if (! flag_const_strings || TREE_CODE (totype) != POINTER_TYPE)\n+  if (TREE_CODE (totype) != POINTER_TYPE)\n     return 0;\n \n   t = TREE_TYPE (totype);"}, {"sha": "1cbbcbdaa0d1b8c508afdd686053d32bf5bd2028", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -175,7 +175,7 @@ in the following sections.\n @item C++ Language Options\n @xref{C++ Dialect Options,,Options Controlling C++ Dialect}.\n @gccoptlist{-fabi-version=@var{n}  -fno-access-control  -fcheck-new @gol\n--fconserve-space  -ffriend-injection  -fno-const-strings @gol\n+-fconserve-space  -ffriend-injection @gol\n -fno-elide-constructors @gol\n -fno-enforce-eh-specs @gol\n -ffor-scope  -fno-for-scope  -fno-gnu-keywords @gol\n@@ -1450,17 +1450,6 @@ earlier releases.\n This option is for compatibility, and may be removed in a future\n release of G++.\n \n-@item -fno-const-strings\n-@opindex fno-const-strings\n-Give string constants type @code{char *} instead of type @code{const\n-char *}.  By default, G++ uses type @code{const char *} as required by\n-the standard.  Even if you use @option{-fno-const-strings}, you cannot\n-actually modify the value of a string constant.\n-\n-This option might be removed in a future release of G++.  For maximum\n-portability, you should structure your code so that it works with\n-string constants that have type @code{const char *}.\n-\n @item -fno-elide-constructors\n @opindex fno-elide-constructors\n The C++ standard allows an implementation to omit creating a temporary"}, {"sha": "9ba4259cafa967fdb147c76f202ebcdf02522020", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfb10bd3bad0636ed13ee47ffa9571287ee2d8d8", "patch": "@@ -1,3 +1,8 @@\n+2006-02-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* g++.old-deja/g++.benjamin/15351-2.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/15351-1.C: Remove.\n+\n 2006-02-09  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/26179"}, {"sha": "ca52343b3f60ee7dba4f207f8c9fb041344d3ba6", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15351-1.C", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9fa4363858bbe008735b45d15b0c031ce5ca08b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15351-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9fa4363858bbe008735b45d15b0c031ce5ca08b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15351-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15351-1.C?ref=f9fa4363858bbe008735b45d15b0c031ce5ca08b", "patch": "@@ -1,28 +0,0 @@\n-// { dg-do run  }\n-// { dg-options \"-fno-const-strings\" }\n-// 981203 bkoz\n-// g++/15351 - test\n-\n-#include <assert.h>\n-\n-bool gtest;\n-\n-struct acapulco {\n-  acapulco(const char *) { gtest = false; }\n-  acapulco(char *) { gtest = true; }\n-};\n-\n-void foo(void)\n-{\n-  acapulco(\"some such string\\n\");\n-}\n-\n-int main() \n-{\n-  foo();\n-  if (!gtest)\n-    assert (0);\n-\n-  return !gtest;\n-}\n-"}, {"sha": "931f50f62359dec70556dc82a758394a0606fd60", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15351-2.C", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9fa4363858bbe008735b45d15b0c031ce5ca08b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15351-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9fa4363858bbe008735b45d15b0c031ce5ca08b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15351-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15351-2.C?ref=f9fa4363858bbe008735b45d15b0c031ce5ca08b", "patch": "@@ -1,28 +0,0 @@\n-// { dg-do run  }\n-// { dg-options \"-fconst-strings\" }\n-// 981203 bkoz\n-// g++/15351 + test\n-\n-#include <assert.h>\n-\n-bool gtest;\n-\n-struct acapulco {\n-  acapulco(const char *) { gtest = true; }\n-  acapulco(char *) { gtest = false; }\n-};\n-\n-void foo(void)\n-{\n-  acapulco(\"some such string\\n\");\n-}\n-\n-int main() \n-{\n-  foo();\n-  if (!gtest)\n-    assert (0);\n-\n-  return !gtest;\n-}\n-"}]}