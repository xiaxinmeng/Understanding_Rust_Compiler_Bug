{"sha": "000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwMDUxZTFjNWM1ZDgxZjNmYzhkYmQ3Zjk4MDBmMmQxM2ExODhiNQ==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-10-02T16:04:00Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-10-02T16:04:00Z"}, "message": "reject loops early where ivs cannot be represented\n\nFrom-SVN: r228403", "tree": {"sha": "154ae44da974c3076c4fa974309eebb30eb115d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154ae44da974c3076c4fa974309eebb30eb115d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cce7865c1a99ce9bb29c6cc3887f1fedfd84b8f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce7865c1a99ce9bb29c6cc3887f1fedfd84b8f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce7865c1a99ce9bb29c6cc3887f1fedfd84b8f6"}], "stats": {"total": 117, "additions": 58, "deletions": 59}, "files": [{"sha": "f9e53727168744ddd116eecc6b0244451ae71361", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "patch": "@@ -1,3 +1,17 @@\n+2015-10-02  Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-scop-detection.c (loop_ivs_can_be_represented): New.\n+\t(loop_body_is_valid_scop): Call loop_ivs_can_be_represented.\n+\t* graphite-sese-to-poly.c (new_gimple_bb): Renamed new_gimple_poly_bb.\n+\t(free_gimple_bb): Renamed free_gimple_poly_bb.\n+\t(try_generate_gimple_bb): Hoist loop invariant code.\n+\t(analyze_drs_in_stmts): Same.\n+\t(build_scop_drs): Call renamed functions.\n+\t(new_pbb_from_pbb): Same.\n+\t(scop_ivs_can_be_represented): Delete as functionality now moved to\n+\tgraphite-scop-detection.c\n+\t(build_poly_scop): Remove call to scop_ivs_can_be_represented.\n+\n 2015-10-02  Aditya Kumar  <hiraditya@msn.com>\n \n \t* graphite-scop-detection.c (stmt_has_side_effects): New function"}, {"sha": "d6a6705dd5e0eed39c70ce6805a4f5de91f5c5b7", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "patch": "@@ -811,12 +811,40 @@ dot_scop (scop_p scop)\n #endif\n }\n \n+/* Can all ivs be represented by a signed integer?\n+   As ISL might generate negative values in its expressions, signed loop ivs\n+   are required in the backend.  */\n+\n+static bool\n+loop_ivs_can_be_represented (loop_p loop)\n+{\n+  for (gphi_iterator psi = gsi_start_phis (loop->header);\n+       !gsi_end_p (psi); gsi_next (&psi))\n+    {\n+      gphi *phi = psi.phi ();\n+      tree res = PHI_RESULT (phi);\n+      tree type = TREE_TYPE (res);\n+\n+      if (TYPE_UNSIGNED (type)\n+\t  && TYPE_PRECISION (type) >= TYPE_PRECISION (long_long_integer_type_node))\n+        return false;\n+    }\n+  return true;\n+}\n+\n /* Return true when the body of LOOP has statements that can be represented as a\n    valid scop.  */\n \n static bool\n loop_body_is_valid_scop (loop_p loop, sese_l scop)\n {\n+  if (!loop_ivs_can_be_represented (loop))\n+    {\n+      DEBUG_PRINT (dp << \"[scop-detection-fail] loop_\"\n+\t\t      << loop->num << \"IV cannot be represented.\\n\");\n+      return false;\n+    }\n+\n   if (!loop_nest_has_data_refs (loop))\n     {\n       DEBUG_PRINT (dp << \"[scop-detection-fail] loop_\""}, {"sha": "158de1f16d6a137ce3e4ef23f6a5149e19e38e28", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 16, "deletions": 59, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=000051e1c5c5d81f3fc8dbd7f9800f2d13a188b5", "patch": "@@ -199,7 +199,7 @@ reduction_phi_p (sese region, gphi_iterator *psi)\n /* Store the GRAPHITE representation of BB.  */\n \n static gimple_poly_bb_p\n-new_gimple_bb (basic_block bb, vec<data_reference_p> drs)\n+new_gimple_poly_bb (basic_block bb, vec<data_reference_p> drs)\n {\n   gimple_poly_bb_p gbb;\n \n@@ -233,7 +233,7 @@ free_data_refs_aux (vec<data_reference_p> datarefs)\n /* Frees GBB.  */\n \n static void\n-free_gimple_bb (gimple_poly_bb_p gbb)\n+free_gimple_poly_bb (gimple_poly_bb_p gbb)\n {\n   free_data_refs_aux (GBB_DATA_REFS (gbb));\n   free_data_refs (GBB_DATA_REFS (gbb));\n@@ -253,7 +253,7 @@ remove_gbbs_in_scop (scop_p scop)\n   poly_bb_p pbb;\n \n   FOR_EACH_VEC_ELT (SCOP_BBS (scop), i, pbb)\n-    free_gimple_bb (PBB_BLACK_BOX (pbb));\n+    free_gimple_poly_bb (PBB_BLACK_BOX (pbb));\n }\n \n /* Deletes all scops in SCOPS.  */\n@@ -283,25 +283,23 @@ try_generate_gimple_bb (scop_p scop, basic_block bb)\n   vec<data_reference_p> drs;\n   drs.create (5);\n   sese region = SCOP_REGION (scop);\n+\n   loop_p nest = outermost_loop_in_sese (region, bb);\n-  gimple_stmt_iterator gsi;\n+  loop_p loop = bb->loop_father;\n+  if (!loop_in_sese_p (loop, region))\n+    loop = nest;\n \n+  gimple_stmt_iterator gsi;\n   for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n     {\n       gimple *stmt = gsi_stmt (gsi);\n-      loop_p loop;\n-\n       if (is_gimple_debug (stmt))\n \tcontinue;\n \n-      loop = loop_containing_stmt (stmt);\n-      if (!loop_in_sese_p (loop, region))\n-\tloop = nest;\n-\n       graphite_find_data_references_in_stmt (nest, loop, stmt, &drs);\n     }\n \n-  return new_gimple_bb (bb, drs);\n+  return new_gimple_poly_bb (bb, drs);\n }\n \n /* Returns true if all predecessors of BB, that are not dominated by BB, are\n@@ -1861,7 +1859,7 @@ build_scop_drs (scop_p scop)\n   for (i = 0; SCOP_BBS (scop).iterate (i, &pbb); i++)\n     if (GBB_DATA_REFS (PBB_BLACK_BOX (pbb)).is_empty ())\n       {\n-\tfree_gimple_bb (PBB_BLACK_BOX (pbb));\n+\tfree_gimple_poly_bb (PBB_BLACK_BOX (pbb));\n \tfree_poly_bb (pbb);\n \tSCOP_BBS (scop).ordered_remove (i);\n \ti--;\n@@ -1909,19 +1907,18 @@ analyze_drs_in_stmts (scop_p scop, basic_block bb, vec<gimple *> stmts)\n     return;\n \n   nest = outermost_loop_in_sese (region, bb);\n+\n+  loop_p loop = bb->loop_father;\n+  if (!loop_in_sese_p (loop, region))\n+    loop = nest;\n+\n   gbb = gbb_from_bb (bb);\n \n   FOR_EACH_VEC_ELT (stmts, i, stmt)\n     {\n-      loop_p loop;\n-\n       if (is_gimple_debug (stmt))\n \tcontinue;\n \n-      loop = loop_containing_stmt (stmt);\n-      if (!loop_in_sese_p (loop, region))\n-\tloop = nest;\n-\n       graphite_find_data_references_in_stmt (nest, loop, stmt,\n \t\t\t\t\t     &GBB_DATA_REFS (gbb));\n     }\n@@ -1983,7 +1980,7 @@ new_pbb_from_pbb (scop_p scop, poly_bb_p pbb, basic_block bb)\n   vec<data_reference_p> drs;\n   drs.create (3);\n   gimple_poly_bb_p gbb = PBB_BLACK_BOX (pbb);\n-  gimple_poly_bb_p gbb1 = new_gimple_bb (bb, drs);\n+  gimple_poly_bb_p gbb1 = new_gimple_poly_bb (bb, drs);\n   poly_bb_p pbb1 = new_poly_bb (scop, gbb1);\n   int index, n = SCOP_BBS (scop).length ();\n \n@@ -2473,43 +2470,6 @@ nb_pbbs_in_loops (scop_p scop)\n   return res;\n }\n \n-/* Can all ivs be represented by a signed integer?\n-   As ISL might generate negative values in its expressions, signed loop ivs\n-   are required in the backend. */\n-\n-static bool\n-scop_ivs_can_be_represented (scop_p scop)\n-{\n-  loop_p loop;\n-  gphi_iterator psi;\n-  bool result = true;\n-\n-  FOR_EACH_LOOP (loop, 0)\n-    {\n-      if (!loop_in_sese_p (loop, SCOP_REGION (scop)))\n-\tcontinue;\n-\n-      for (psi = gsi_start_phis (loop->header);\n-\t   !gsi_end_p (psi); gsi_next (&psi))\n-\t{\n-\t  gphi *phi = psi.phi ();\n-\t  tree res = PHI_RESULT (phi);\n-\t  tree type = TREE_TYPE (res);\n-\n-\t  if (TYPE_UNSIGNED (type)\n-\t      && TYPE_PRECISION (type) >= TYPE_PRECISION (long_long_integer_type_node))\n-\t    {\n-\t      result = false;\n-\t      break;\n-\t    }\n-\t}\n-      if (!result)\n-\tbreak;\n-    }\n-\n-  return result;\n-}\n-\n /* Builds the polyhedral representation for a SESE region.  */\n \n void\n@@ -2525,9 +2485,6 @@ build_poly_scop (scop_p scop)\n   if (nb_pbbs_in_loops (scop) == 0)\n     return;\n \n-  if (!scop_ivs_can_be_represented (scop))\n-    return;\n-\n   build_sese_loop_nests (region);\n   /* Record all conditions in REGION.  */\n   sese_dom_walker (CDI_DOMINATORS, region).walk (cfun->cfg->x_entry_block_ptr);"}]}