{"sha": "b8093d021225d5b4d492c34c2c5442868e4767ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgwOTNkMDIxMjI1ZDViNGQ0OTJjMzRjMmM1NDQyODY4ZTQ3NjdjYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-06T03:15:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-06T03:15:07Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r399", "tree": {"sha": "8fe5d248359746cfeecea0857acce2c2f64ec1e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fe5d248359746cfeecea0857acce2c2f64ec1e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8093d021225d5b4d492c34c2c5442868e4767ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8093d021225d5b4d492c34c2c5442868e4767ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8093d021225d5b4d492c34c2c5442868e4767ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8093d021225d5b4d492c34c2c5442868e4767ca/comments", "author": null, "committer": null, "parents": [{"sha": "ce1be81dfff0a08f139d85d4f8e268320b7139e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1be81dfff0a08f139d85d4f8e268320b7139e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1be81dfff0a08f139d85d4f8e268320b7139e4"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "3e525cf399472b431c1fdd59f146a12bb99927be", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8093d021225d5b4d492c34c2c5442868e4767ca/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8093d021225d5b4d492c34c2c5442868e4767ca/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=b8093d021225d5b4d492c34c2c5442868e4767ca", "patch": "@@ -2603,24 +2603,25 @@ receiver_is_class_object (receiver)\n    * ...check if it is a call to objc_getClass, if so, give it\n    * special treatment.\n    */\n-  tree exp = 0;\n+  tree exp = TREE_OPERAND (receiver, 0);\n \n-  if ((exp = TREE_OPERAND (receiver, 0)) && (TREE_CODE (exp) == ADDR_EXPR))\n+  if (exp != 0 && (TREE_CODE (exp) == ADDR_EXPR))\n     {\n-      if ((exp = TREE_OPERAND (exp, 0)) && \n-\t  (TREE_CODE (exp) == FUNCTION_DECL) && exp == objc_getClass_decl)\n+      exp = TREE_OPERAND (exp, 0);\n+      if (exp != 0\n+\t  && TREE_CODE (exp) == FUNCTION_DECL && exp == objc_getClass_decl)\n \t{\n \t  /* we have a call to objc_getClass! */\n-\t  tree arg = 0;\n-    \n-\t  if ((arg = TREE_OPERAND (receiver, 1)) &&\n-\t      (TREE_CODE (arg) == TREE_LIST) &&\n-\t      (arg = TREE_VALUE (arg)) &&\n-\t      (TREE_CODE (arg) == NOP_EXPR) &&\n-\t      (arg = TREE_OPERAND (arg, 0)) &&\n-\t      (TREE_CODE (arg) == ADDR_EXPR) &&\n-\t      (arg = TREE_OPERAND (arg, 0)) &&\n-\t      (TREE_CODE (arg) == STRING_CST))\n+\t  tree arg = TREE_OPERAND (receiver, 1);\n+\n+\t  if (arg != 0\n+\t      && TREE_CODE (arg) == TREE_LIST\n+\t      && arg = TREE_VALUE (arg)\n+\t      && TREE_CODE (arg) == NOP_EXPR\n+\t      && arg = TREE_OPERAND (arg, 0)\n+\t      && TREE_CODE (arg) == ADDR_EXPR\n+\t      && arg = TREE_OPERAND (arg, 0)\n+\t      && TREE_CODE (arg) == STRING_CST)\n \t    /* finally, we have the class name */\n \t    return get_identifier (TREE_STRING_POINTER (arg));\n \t}"}, {"sha": "6daca822107a48732702f18c244c8ac81d4457dc", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8093d021225d5b4d492c34c2c5442868e4767ca/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8093d021225d5b4d492c34c2c5442868e4767ca/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=b8093d021225d5b4d492c34c2c5442868e4767ca", "patch": "@@ -702,7 +702,7 @@ reload (first, global, dumpfile)\n     if (reg_renumber[i] == -1 && reg_n_refs[i] != 0)\n       break;\n \n-  if (i == max_regno && num_eliminable = 0 && ! caller_save_needed)\n+  if (i == max_regno && num_eliminable == 0 && ! caller_save_needed)\n     return;\n #endif\n "}]}