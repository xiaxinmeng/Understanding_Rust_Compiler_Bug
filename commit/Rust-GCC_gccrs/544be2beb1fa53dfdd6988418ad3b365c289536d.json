{"sha": "544be2beb1fa53dfdd6988418ad3b365c289536d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ0YmUyYmViMWZhNTNkZmRkNjk4ODQxOGFkM2IzNjVjMjg5NTM2ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-13T10:50:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-13T10:50:21Z"}, "message": "Remove Profile Mode, deprecated since GCC 7.1\n\nThe Profile Mode extension is not used by anybody, nor maintained by\nanybody. The containers do not support the full API specified in recent\nstandards, and so enabling Profile Mode is not source compatible with\nmuch modern C++ code. The heuristics that would check the profile\ninformation and make useful suggestions never materialized, so it isn't\nuseful.\n\nIt should be removed.\n\n\tRemove Profile Mode, deprecated since 7.1.0\n\t* doc/Makefile.am: Remove XML file for profile mode docs.\n\t* doc/Makefile.in: Regenerate.\n\t* doc/xml/authors.xml: Remove authors of profile mode docs.\n\t* doc/xml/manual/appendix_contributing.xml: Remove mention of profile\n\tmode.\n\t* doc/xml/manual/debug.xml: Likewise.\n\t* doc/xml/manual/evolution.xml: Document removal of profile mode.\n\t* doc/xml/manual/profile_mode.xml: Remove profile mode docs.\n\t* doc/xml/manual/spine.xml: Remove profile mode author credit.\n\t* doc/xml/manual/test.xml: Remove docs for dg-require-profile-mode\n\tdirective.\n\t* doc/xml/manual/using.xml: Remove docs for profile mode headers and\n\tmacro.\n\t* doc/html/*: Regenerate.\n\t* include/Makefile.am: Remove profile mode headers.\n\t* include/Makefile.in: Regenerate.\n\t* include/bits/c++config (std::__profile): Remove namespace.\n\t[_GLIBCXX_PROFILE]: Remove checks for macro.\n\t* include/profile/array: Remove.\n\t* include/profile/base.h: Remove.\n\t* include/profile/bitset: Remove.\n\t* include/profile/deque: Remove.\n\t* include/profile/forward_list: Remove.\n\t* include/profile/impl/profiler.h: Remove.\n\t* include/profile/impl/profiler_algos.h: Remove.\n\t* include/profile/impl/profiler_container_size.h: Remove.\n\t* include/profile/impl/profiler_hash_func.h: Remove.\n\t* include/profile/impl/profiler_hashtable_size.h: Remove.\n\t* include/profile/impl/profiler_list_to_slist.h: Remove.\n\t* include/profile/impl/profiler_list_to_vector.h: Remove.\n\t* include/profile/impl/profiler_map_to_unordered_map.h: Remove.\n\t* include/profile/impl/profiler_node.h: Remove.\n\t* include/profile/impl/profiler_state.h: Remove.\n\t* include/profile/impl/profiler_trace.h: Remove.\n\t* include/profile/impl/profiler_vector_size.h: Remove.\n\t* include/profile/impl/profiler_vector_to_list.h: Remove.\n\t* include/profile/iterator_tracker.h: Remove.\n\t* include/profile/list: Remove.\n\t* include/profile/map: Remove.\n\t* include/profile/map.h: Remove.\n\t* include/profile/multimap.h: Remove.\n\t* include/profile/multiset.h: Remove.\n\t* include/profile/ordered_base.h: Remove.\n\t* include/profile/set: Remove.\n\t* include/profile/set.h: Remove.\n\t* include/profile/unordered_base.h: Remove.\n\t* include/profile/unordered_map: Remove.\n\t* include/profile/unordered_set: Remove.\n\t* include/profile/vector: Remove.\n\t* scripts/run_doxygen: Do not process profile mode headers.\n\t* testsuite/23_containers/array/element_access/60497.cc: Don't use\n\tprofile mode type.\n\t* testsuite/23_containers/array/specialized_algorithms/swap_cxx17.cc:\n\tRemove dg-skip-if for profile mode.\n\t* testsuite/23_containers/forward_list/capacity/1.cc: Remove\n\tpreprocessor check for profile mode.\n\t* testsuite/23_containers/list/capacity/29134.cc: Likewise.\n\t* testsuite/23_containers/map/modifiers/extract.cc: Remove dg-skip-if\n\tfor profile mode.\n\t* testsuite/23_containers/map/modifiers/insert_or_assign/1.cc:\n\tLikewise.\n\t* testsuite/23_containers/map/modifiers/try_emplace/1.cc: Likewise.\n\t* testsuite/23_containers/multimap/modifiers/extract.cc: Likewise.\n\t* testsuite/23_containers/multiset/modifiers/extract.cc: Likewise.\n\t* testsuite/23_containers/set/modifiers/extract.cc: Likewise.\n\t* testsuite/23_containers/unordered_map/modifiers/extract.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/modifiers/extract.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/modifiers/extract.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_set/modifiers/extract.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/bool/capacity/29134.cc: Remove\n\tpreprocessor check for profile mode.\n\t* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/modifiers/insert_vs_emplace.cc:\n\tRemove dg-skip-if for profile mode.\n\t* testsuite/25_algorithms/binary_search/partitioned.cc: Likewise.\n\t* testsuite/25_algorithms/equal_range/partitioned.cc: Likewise.\n\t* testsuite/25_algorithms/lexicographical_compare/71545.cc: Likewise.\n\t* testsuite/25_algorithms/lower_bound/partitioned.cc: Likewise.\n\t* testsuite/25_algorithms/upper_bound/partitioned.cc: Likewise.\n\t* testsuite/Makefile.am: Remove profile_flags variable and\n\t* testsuite/Makefile.am: Remove profile_flags variable and\n\tcheck-profile target.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/ext/profile/all.cc: Remove.\n\t* testsuite/ext/profile/mutex_extensions_neg.cc: Remove.\n\t* testsuite/ext/profile/profiler_algos.cc: Remove.\n\t* testsuite/ext/profile/replace_new.cc: Remove.\n\t* testsuite/ext/throw_allocator/deallocate_global.cc: Remove\n\tpreprocessor check for profile mode.\n\t* testsuite/ext/throw_allocator/deallocate_local.cc: Likewise.\n\t* testsuite/lib/libstdc++.exp (check_v3_target_profile_mode): Remove.\n\t(check_v3_target_normal_mode): Do not check for profile mode macro.\n\t* testsuite/libstdc++-prettyprinters/80276.cc: Remove dg-skip-if for\n\tprofile mode.\n\t* testsuite/libstdc++-prettyprinters/compat.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/cxx11.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/cxx17.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/debug.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/debug_cxx11.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/libfundts.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/simple.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/whatis.cc: Likewise.\n\t* testsuite/libstdc++-prettyprinters/whatis2.cc: Likewise.\n\nFrom-SVN: r271120", "tree": {"sha": "c835ee9f02ea205cc796f42a7dbf889fe28560c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c835ee9f02ea205cc796f42a7dbf889fe28560c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/544be2beb1fa53dfdd6988418ad3b365c289536d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544be2beb1fa53dfdd6988418ad3b365c289536d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544be2beb1fa53dfdd6988418ad3b365c289536d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544be2beb1fa53dfdd6988418ad3b365c289536d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d09ca2550da86793e9bcc2820524fc4d6486e74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d09ca2550da86793e9bcc2820524fc4d6486e74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d09ca2550da86793e9bcc2820524fc4d6486e74"}], "stats": {"total": 12393, "additions": 282, "deletions": 12111}, "files": [{"sha": "1a9431bbbb503283ee198f4a036660565f5257f0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,116 @@\n 2019-05-11  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tRemove Profile Mode, deprecated since 7.1.0\n+\t* doc/Makefile.am: Remove XML file for profile mode docs.\n+\t* doc/Makefile.in: Regenerate.\n+\t* doc/xml/authors.xml: Remove authors of profile mode docs.\n+\t* doc/xml/manual/appendix_contributing.xml: Remove mention of profile\n+\tmode.\n+\t* doc/xml/manual/debug.xml: Likewise.\n+\t* doc/xml/manual/evolution.xml: Document removal of profile mode.\n+\t* doc/xml/manual/profile_mode.xml: Remove profile mode docs.\n+\t* doc/xml/manual/spine.xml: Remove profile mode author credit.\n+\t* doc/xml/manual/test.xml: Remove docs for dg-require-profile-mode\n+\tdirective.\n+\t* doc/xml/manual/using.xml: Remove docs for profile mode headers and\n+\tmacro.\n+\t* doc/html/*: Regenerate.\n+\t* include/Makefile.am: Remove profile mode headers.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/bits/c++config (std::__profile): Remove namespace.\n+\t[_GLIBCXX_PROFILE]: Remove checks for macro.\n+\t* include/profile/array: Remove.\n+\t* include/profile/base.h: Remove.\n+\t* include/profile/bitset: Remove.\n+\t* include/profile/deque: Remove.\n+\t* include/profile/forward_list: Remove.\n+\t* include/profile/impl/profiler.h: Remove.\n+\t* include/profile/impl/profiler_algos.h: Remove.\n+\t* include/profile/impl/profiler_container_size.h: Remove.\n+\t* include/profile/impl/profiler_hash_func.h: Remove.\n+\t* include/profile/impl/profiler_hashtable_size.h: Remove.\n+\t* include/profile/impl/profiler_list_to_slist.h: Remove.\n+\t* include/profile/impl/profiler_list_to_vector.h: Remove.\n+\t* include/profile/impl/profiler_map_to_unordered_map.h: Remove.\n+\t* include/profile/impl/profiler_node.h: Remove.\n+\t* include/profile/impl/profiler_state.h: Remove.\n+\t* include/profile/impl/profiler_trace.h: Remove.\n+\t* include/profile/impl/profiler_vector_size.h: Remove.\n+\t* include/profile/impl/profiler_vector_to_list.h: Remove.\n+\t* include/profile/iterator_tracker.h: Remove.\n+\t* include/profile/list: Remove.\n+\t* include/profile/map: Remove.\n+\t* include/profile/map.h: Remove.\n+\t* include/profile/multimap.h: Remove.\n+\t* include/profile/multiset.h: Remove.\n+\t* include/profile/ordered_base.h: Remove.\n+\t* include/profile/set: Remove.\n+\t* include/profile/set.h: Remove.\n+\t* include/profile/unordered_base.h: Remove.\n+\t* include/profile/unordered_map: Remove.\n+\t* include/profile/unordered_set: Remove.\n+\t* include/profile/vector: Remove.\n+\t* scripts/run_doxygen: Do not process profile mode headers.\n+\t* testsuite/23_containers/array/element_access/60497.cc: Don't use\n+\tprofile mode type.\n+\t* testsuite/23_containers/array/specialized_algorithms/swap_cxx17.cc:\n+\tRemove dg-skip-if for profile mode.\n+\t* testsuite/23_containers/forward_list/capacity/1.cc: Remove\n+\tpreprocessor check for profile mode.\n+\t* testsuite/23_containers/list/capacity/29134.cc: Likewise.\n+\t* testsuite/23_containers/map/modifiers/extract.cc: Remove dg-skip-if\n+\tfor profile mode.\n+\t* testsuite/23_containers/map/modifiers/insert_or_assign/1.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/map/modifiers/try_emplace/1.cc: Likewise.\n+\t* testsuite/23_containers/multimap/modifiers/extract.cc: Likewise.\n+\t* testsuite/23_containers/multiset/modifiers/extract.cc: Likewise.\n+\t* testsuite/23_containers/set/modifiers/extract.cc: Likewise.\n+\t* testsuite/23_containers/unordered_map/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/modifiers/extract.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/bool/capacity/29134.cc: Remove\n+\tpreprocessor check for profile mode.\n+\t* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/modifiers/insert_vs_emplace.cc:\n+\tRemove dg-skip-if for profile mode.\n+\t* testsuite/25_algorithms/binary_search/partitioned.cc: Likewise.\n+\t* testsuite/25_algorithms/equal_range/partitioned.cc: Likewise.\n+\t* testsuite/25_algorithms/lexicographical_compare/71545.cc: Likewise.\n+\t* testsuite/25_algorithms/lower_bound/partitioned.cc: Likewise.\n+\t* testsuite/25_algorithms/upper_bound/partitioned.cc: Likewise.\n+\t* testsuite/Makefile.am: Remove profile_flags variable and\n+\t* testsuite/Makefile.am: Remove profile_flags variable and\n+\tcheck-profile target.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/ext/profile/all.cc: Remove.\n+\t* testsuite/ext/profile/mutex_extensions_neg.cc: Remove.\n+\t* testsuite/ext/profile/profiler_algos.cc: Remove.\n+\t* testsuite/ext/profile/replace_new.cc: Remove.\n+\t* testsuite/ext/throw_allocator/deallocate_global.cc: Remove\n+\tpreprocessor check for profile mode.\n+\t* testsuite/ext/throw_allocator/deallocate_local.cc: Likewise.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_profile_mode): Remove.\n+\t(check_v3_target_normal_mode): Do not check for profile mode macro.\n+\t* testsuite/libstdc++-prettyprinters/80276.cc: Remove dg-skip-if for\n+\tprofile mode.\n+\t* testsuite/libstdc++-prettyprinters/compat.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/cxx11.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/cxx17.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/debug.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/debug_cxx11.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/libfundts.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/simple.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/whatis.cc: Likewise.\n+\t* testsuite/libstdc++-prettyprinters/whatis2.cc: Likewise.\n+\n \tRemove array_allocator extension, deprecated since 4.9.0\n \t* doc/xml/manual/allocator.xml: Remove documentation for\n \tarray_allocator."}, {"sha": "b9aca381b7432f159e7eaaaec8bdca707c3d2d30", "filename": "libstdc++-v3/doc/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -336,7 +336,6 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/policy_data_structures.xml \\\n \t${xml_dir}/manual/policy_data_structures_biblio.xml \\\n \t${xml_dir}/manual/prerequisites.xml \\\n-\t${xml_dir}/manual/profile_mode.xml \\\n \t${xml_dir}/manual/shared_ptr.xml \\\n \t${xml_dir}/manual/spine.xml \\\n \t${xml_dir}/manual/status_cxx1998.xml \\"}, {"sha": "5fee1b2d310d951a009c87282ec05662ae25978e", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -477,7 +477,6 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/policy_data_structures.xml \\\n \t${xml_dir}/manual/policy_data_structures_biblio.xml \\\n \t${xml_dir}/manual/prerequisites.xml \\\n-\t${xml_dir}/manual/profile_mode.xml \\\n \t${xml_dir}/manual/shared_ptr.xml \\\n \t${xml_dir}/manual/spine.xml \\\n \t${xml_dir}/manual/status_cxx1998.xml \\"}, {"sha": "2b7f36070f87f5df4f59032217f470e488cc8db2", "filename": "libstdc++-v3/doc/html/index.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -23,7 +23,7 @@\n     </p></div></div></div><hr /></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"book\"><a href=\"manual/index.html\">The GNU C++ Library Manual</a></span></dt><dd><dl><dt><span class=\"part\"><a href=\"manual/intro.html\">I. \n   Introduction\n   \n-</a></span></dt><dd><dl><dt><span class=\"chapter\"><a href=\"manual/status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.1998.status\">Implementation Status</a></span></dt><dt><span class=\"section\"><a href=\"manual/status.html#iso.1998.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2011\">C++ 2011</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.2011.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2014\">C++ 2014</a></span></dt><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2017\">C++ 2017</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.2017.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2020\">C++ 202a</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.2020.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.tr1\">C++ TR1</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.tr1.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.specfun\">C++ IS 29124</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.specfun.specific\">Implementation Specific Behavior</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/license.html\">License</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"section\"><a href=\"manual/license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"section\"><a href=\"manual/bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"manual/setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/configure.html\">Configure</a></span></dt><dt><span class=\"section\"><a href=\"manual/make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.profile_mode\">Profile-based Performance Analysis</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"manual/std_contents.html\">II. \n+</a></span></dt><dd><dl><dt><span class=\"chapter\"><a href=\"manual/status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.1998.status\">Implementation Status</a></span></dt><dt><span class=\"section\"><a href=\"manual/status.html#iso.1998.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2011\">C++ 2011</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.2011.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2014\">C++ 2014</a></span></dt><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2017\">C++ 2017</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.2017.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.2020\">C++ 202a</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.2020.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.tr1\">C++ TR1</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.tr1.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt><dt><span class=\"section\"><a href=\"manual/status.html#status.iso.specfun\">C++ IS 29124</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/status.html#iso.specfun.specific\">Implementation Specific Behavior</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/license.html\">License</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"section\"><a href=\"manual/license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"section\"><a href=\"manual/bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"manual/setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/configure.html\">Configure</a></span></dt><dt><span class=\"section\"><a href=\"manual/make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"manual/std_contents.html\">II. \n     Standard Contents\n   </a></span></dt><dd><dl><dt><span class=\"chapter\"><a href=\"manual/support.html\">4. \n   Support\n@@ -65,7 +65,7 @@\n   Extensions\n   \n </a></span></dt><dd><dl><dt><span class=\"preface\"><a href=\"manual/ext_preface.html\"></a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_compile_checks.html\">16. Compile Time Checks</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/debug_mode.html\">17. Debug Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug_mode_using.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_using.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.methods\">Methods</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.methods.wrappers\">The Wrapper Model</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.methods.safe_iter\">Safe Iterators</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.methods.safe_seq\">Safe Sequences (Containers)</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.methods.precond\">Precondition Checking</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.methods.coexistence\">Release- and debug-mode coexistence</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#methods.coexistence.compile\">Compile-time coexistence of release- and debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#methods.coexistence.link\">Link- and run-time coexistence of release- and\n-    debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#methods.coexistence.alt\">Alternatives for Coexistence</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"manual/parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"manual/parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/profile_mode.html\">19. Profile Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_design.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_api.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_cost_model.html\">Empirical Cost Model</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_impl.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_devel.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_devel.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_devel.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_too_small\">Hashtable Too Small</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_too_large\">Hashtable Too Large</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.inefficient_hash\">Inefficient Hash</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_too_small\">Vector Too Small</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_too_large\">Vector Too Large</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_to_hashtable\">Vector to Hashtable</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_to_vector\">Hashtable to Vector</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_to_list\">Vector to List</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.list_to_vector\">List to Vector</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.list_to_slist\">List to Forward List (Slist)</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.assoc_ord_to_unord\">Ordered to Unordered Associative Container</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.algorithms.sort\">Sort Algorithm Performance</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality.sw_prefetch\">Need Software Prefetch</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality.linked\">Linked Structure Locality</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread.ddtest\">Data Dependence Violations at Container Level</a></span></dt><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread.false_share\">False Sharing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"manual/profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/mt_allocator.html\">20. The mt_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/bitmap_allocator.html\">21. The bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"manual/policy_data_structures.html\">22. Policy-Based Data Structures</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n+    debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#methods.coexistence.alt\">Alternatives for Coexistence</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/debug_mode_design.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"manual/parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"manual/parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/mt_allocator.html\">19. The mt_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"manual/mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/bitmap_allocator.html\">20. The bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"manual/bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"manual/policy_data_structures.html\">21. Policy-Based Data Structures</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n \t    Configuring via Template Parameters\n \t  </a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_data_structures_using.html#pbds.using.tutorial.traits\">\n \t    Querying Container Attributes\n@@ -127,7 +127,7 @@\n \t  Text <code class=\"function\">modify</code> Up\n \t</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#performance.priority_queue.text_modify_down\">\n \t  Text <code class=\"function\">modify</code> Down\n-\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"manual/policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"manual/appendix.html\">IV. \n+\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"manual/policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_containers.html\">22. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_utilities.html\">23. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_algorithms.html\">24. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_numerics.html\">25. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_iterators.html\">26. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_io.html\">27. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_demangling.html\">28. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_concurrency.html\">29. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"manual/appendix.html\">IV. \n   Appendices\n </a></span></dt><dd><dl><dt><span class=\"appendix\"><a href=\"manual/appendix_contributing.html\">A. \n   Contributing\n@@ -142,7 +142,7 @@\n     Existing tests\n </a></span></dt><dt><span class=\"section\"><a href=\"manual/test.html#test.exception.safety.containers\">\n C++11 Requirements Test Sequence Descriptions\n-</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n+</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"manual/abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/api.html#api.rel_101\"><code class=\"constant\">10</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n   </a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.at\">No <code class=\"code\">vector::at</code>, <code class=\"code\">deque::at</code>, <code class=\"code\">string::at</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.eof\">No <code class=\"code\">std::char_traits&lt;char&gt;::eof</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.stringclear\">No <code class=\"code\">string::clear</code></a></span></dt><dt><span class=\"section\"><a href=\"manual/backwards.html#backwards.second.ostreamform_istreamscan\">\n   Removal of <code class=\"code\">ostream::form</code> and <code class=\"code\">istream::scan</code>\n   extensions"}, {"sha": "bb131d3010ca6a716cd543fe897a7967c977635b", "filename": "libstdc++-v3/doc/html/manual/api.html", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -34,7 +34,7 @@\n    GCC 3.4 onwards the default allocator uses <code class=\"code\">new</code> anyway,\n    but for the optional pooling allocators the functionality is enabled by\n    setting <code class=\"literal\">GLIBCXX_FORCE_NEW</code> in the environment, see\n-   <a class=\"link\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\">the mt allocator chapter</a>\n+   <a class=\"link\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\">the mt allocator chapter</a>\n    for details.\n    </p><p>Error handling in iostreams cleaned up, made consistent. </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"api.rel_330\"></a><code class=\"constant\">3.3</code></h3></div></div></div><p>\n   </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"api.rel_340\"></a><code class=\"constant\">3.4</code></h3></div></div></div><p>\n@@ -391,4 +391,6 @@\n   <code class=\"filename\">&lt;experimental/socket&gt;</code>,\n   and\n   <code class=\"filename\">&lt;experimental/timer&gt;</code>.\n+</p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"api.rel_101\"></a><code class=\"constant\">10</code></h3></div></div></div><p> Deprecated features removed:\n+</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"> Profile Mode </li><li class=\"listitem\"><code class=\"classname\">__gnu_cxx::array_allocator</code></li></ul></div><p>\n </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"abi.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_porting.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"backwards.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">ABI Policy and Guidelines\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Backwards Compatibility</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "4e67b78fedbda254afa5dee43757a871e30e8e0e", "filename": "libstdc++-v3/doc/html/manual/appendix.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,7 @@\n     Existing tests\n </a></span></dt><dt><span class=\"section\"><a href=\"test.html#test.exception.safety.containers\">\n C++11 Requirements Test Sequence Descriptions\n-</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n+</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_101\"><code class=\"constant\">10</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n   </a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.at\">No <code class=\"code\">vector::at</code>, <code class=\"code\">deque::at</code>, <code class=\"code\">string::at</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.eof\">No <code class=\"code\">std::char_traits&lt;char&gt;::eof</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.stringclear\">No <code class=\"code\">string::clear</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.ostreamform_istreamscan\">\n   Removal of <code class=\"code\">ostream::form</code> and <code class=\"code\">istream::scan</code>\n   extensions"}, {"sha": "129eeff3492cc1302d6d8688798070517f6fb08f", "filename": "libstdc++-v3/doc/html/manual/appendix_porting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_porting.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_porting.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fappendix_porting.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -14,7 +14,7 @@\n     Existing tests\n </a></span></dt><dt><span class=\"section\"><a href=\"test.html#test.exception.safety.containers\">\n C++11 Requirements Test Sequence Descriptions\n-</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n+</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_101\"><code class=\"constant\">10</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n   </a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.at\">No <code class=\"code\">vector::at</code>, <code class=\"code\">deque::at</code>, <code class=\"code\">string::at</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.eof\">No <code class=\"code\">std::char_traits&lt;char&gt;::eof</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.stringclear\">No <code class=\"code\">string::clear</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.ostreamform_istreamscan\">\n   Removal of <code class=\"code\">ostream::form</code> and <code class=\"code\">istream::scan</code>\n   extensions"}, {"sha": "51f52ea9941c550782579e94193d9e3e5ac97d5f", "filename": "libstdc++-v3/doc/html/manual/bitmap_allocator.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a021.\u00a0The bitmap_allocator</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"mt_allocator_ex_multi.html\" title=\"Multiple Thread Example\" /><link rel=\"next\" href=\"bitmap_allocator_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a021.\u00a0The bitmap_allocator</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_ex_multi.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a020.\u00a0The bitmap_allocator</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"mt_allocator_ex_multi.html\" title=\"Multiple Thread Example\" /><link rel=\"next\" href=\"bitmap_allocator_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a020.\u00a0The bitmap_allocator</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_ex_multi.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator.bitmap\"></a>Chapter\u00a021.\u00a0The bitmap_allocator</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator.bitmap\"></a>Chapter\u00a020.\u00a0The bitmap_allocator</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></div><p>\n </p><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.bitmap.design\"></a>Design</h2></div></div></div><p>\n     As this name suggests, this allocator uses a bit-map to keep track\n     of the used and unused memory locations for its book-keeping"}, {"sha": "0c68eea720f4d4c3bfcf6d72a9f0f5415ce75b86", "filename": "libstdc++-v3/doc/html/manual/bitmap_allocator_impl.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator_impl.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator_impl.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbitmap_allocator_impl.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a021.\u00a0The bitmap_allocator\" /><link rel=\"prev\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a021.\u00a0The bitmap_allocator\" /><link rel=\"next\" href=\"policy_data_structures.html\" title=\"Chapter\u00a022.\u00a0Policy-Based Data Structures\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0The bitmap_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.bitmap.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"bitmap.impl.free_list_store\"></a>Free List Store</h3></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a020.\u00a0The bitmap_allocator\" /><link rel=\"prev\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a020.\u00a0The bitmap_allocator\" /><link rel=\"next\" href=\"policy_data_structures.html\" title=\"Chapter\u00a021.\u00a0Policy-Based Data Structures\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a020.\u00a0The bitmap_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.bitmap.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"bitmap.impl.free_list_store\"></a>Free List Store</h3></div></div></div><p>\n     The Free List Store (referred to as FLS for the remaining part of this\n     document) is the Global memory pool that is shared by all instances of\n     the bitmapped allocator instantiated for any type. This maintains a\n@@ -75,7 +75,7 @@\n   </p><p>\n     Consider a block of size 64 ints. In memory, it would look like this:\n     (assume a 32-bit system where, size_t is a 32-bit entity).\n-  </p><div class=\"table\"><a id=\"table.bitmap_alloc\"></a><p class=\"title\"><strong>Table\u00a021.1.\u00a0Bitmap Allocator Memory Map</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Bitmap Allocator Memory Map\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /><col align=\"left\" class=\"c5\" /></colgroup><tbody><tr><td align=\"left\">268</td><td align=\"left\">0</td><td align=\"left\">4294967295</td><td align=\"left\">4294967295</td><td align=\"left\">Data -&gt; Space for 64 ints</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n+  </p><div class=\"table\"><a id=\"table.bitmap_alloc\"></a><p class=\"title\"><strong>Table\u00a020.1.\u00a0Bitmap Allocator Memory Map</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Bitmap Allocator Memory Map\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /><col align=\"left\" class=\"c5\" /></colgroup><tbody><tr><td align=\"left\">268</td><td align=\"left\">0</td><td align=\"left\">4294967295</td><td align=\"left\">4294967295</td><td align=\"left\">Data -&gt; Space for 64 ints</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n     The first Column(268) represents the size of the Block in bytes as\n     seen by the Bitmap Allocator. Internally, a global free list is\n     used to keep track of the free blocks used and given back by the\n@@ -309,4 +309,4 @@\n     sizeof(size_t) x 8 which is the number of bits in an integer,\n     which can fit exactly in a CPU register. Hence, the term given is\n     exponential growth of the internal pool.\n-  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bitmap_allocator.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a021.\u00a0The bitmap_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a022.\u00a0Policy-Based Data Structures</td></tr></table></div></body></html>\n\\ No newline at end of file\n+  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bitmap_allocator.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a020.\u00a0The bitmap_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a021.\u00a0Policy-Based Data Structures</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "f72404baedb1fc734a1b4ea0efff6a83b9fc1dfc", "filename": "libstdc++-v3/doc/html/manual/bugs.html", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -458,6 +458,14 @@\n                  should neither be constrained nor <code class=\"code\">explicit</code>\n        </em></span>\n     </span></dt><dd><p>Remove <code class=\"code\">explicit</code> from the constructor.\n+    </p></dd><dt><a id=\"manual.bugs.dr2408\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2408\" target=\"_top\">2408</a>:\n+       <span class=\"emphasis\"><em>SFINAE-friendly\n+         <code class=\"code\">common_type</code>/<code class=\"code\">iterator_traits</code>\n+         is missing in C++14\n+       </em></span>\n+    </span></dt><dd><p>Make <code class=\"code\">iterator_traits</code> empty if any of the\n+      types is not present in the iterator.\n+      Make <code class=\"code\">common_type&lt;&gt;</code> empty.\n     </p></dd><dt><a id=\"manual.bugs.dr2415\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2415\" target=\"_top\">2415</a>:\n        <span class=\"emphasis\"><em>Inconsistency between <code class=\"code\">unique_ptr</code> and <code class=\"code\">shared_ptr</code></em></span>\n     </span></dt><dd><p>Create empty an <code class=\"code\">shared_ptr</code> from an empty\n@@ -491,6 +499,12 @@\n        <span class=\"emphasis\"><em><code class=\"code\">std::polar</code> should require a non-negative rho\n        </em></span>\n     </span></dt><dd><p>Add debug mode assertion.\n+    </p></dd><dt><a id=\"manual.bugs.dr2465\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2465\" target=\"_top\">2465</a>:\n+       <span class=\"emphasis\"><em>SFINAE-friendly <code class=\"code\">common_type</code> is nearly impossible\n+       to specialize correctly and regresses key functionality\n+       </em></span>\n+    </span></dt><dd><p>Detect whether <code class=\"code\">decay_t</code> changes either type\n+      and use the decayed types if so.\n     </p></dd><dt><a id=\"manual.bugs.dr2466\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2466\" target=\"_top\">2466</a>:\n        <span class=\"emphasis\"><em><code class=\"code\">allocator_traits::max_size()</code> default behavior is incorrect\n        </em></span>\n@@ -501,14 +515,14 @@\n     </span></dt><dd><p>Avoid using <code class=\"code\">dynamic_cast</code> when it would be\n     ill-formed.\n     </p></dd><dt><a id=\"manual.bugs.dr2537\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2537\" target=\"_top\">2537</a>:\n-       <span class=\"emphasis\"><em>Requirements on the first template parameter of container adaptors\n-       </em></span>\n-    </span></dt><dd><p>Add static assertions to enforce the requirement.\n-    </p></dd><dt><a id=\"manual.bugs.dr2566\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2566\" target=\"_top\">2566</a>:\n        <span class=\"emphasis\"><em>Constructors for <code class=\"code\">priority_queue</code> taking allocators\n \t should call <code class=\"code\">make_heap</code>\n        </em></span>\n     </span></dt><dd><p>Call <code class=\"code\">make_heap</code>.\n+    </p></dd><dt><a id=\"manual.bugs.dr2566\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2566\" target=\"_top\">2566</a>:\n+       <span class=\"emphasis\"><em>Requirements on the first template parameter of container adaptors\n+       </em></span>\n+    </span></dt><dd><p>Add static assertions to enforce the requirement.\n     </p></dd><dt><a id=\"manual.bugs.dr2583\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2583\" target=\"_top\">2583</a>:\n        <span class=\"emphasis\"><em>There is no way to supply an allocator for <code class=\"code\">basic_string(str, pos)</code>\n        </em></span>"}, {"sha": "cdf01bd19952497b038e7882e710fd9196950d9d", "filename": "libstdc++-v3/doc/html/manual/debug.html", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdebug.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -129,7 +129,7 @@\n   <code class=\"literal\">GLIBCXX_FORCE_NEW</code> to keep extraneous pool allocation\n   noise from cluttering debug information.\n   For more details, see the\n-  <a class=\"link\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\">mt allocator</a>\n+  <a class=\"link\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\">mt allocator</a>\n   documentation and look specifically for <code class=\"code\">GLIBCXX_FORCE_NEW</code>.\n </p></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.races\"></a>Data Race Hunting</h3></div></div></div><p>\n   All synchronization primitives used in the library internals need to be\n@@ -233,9 +233,6 @@\n   has compile and run-time checks for many containers.\n   </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.compile_time_checks\"></a>Compile Time Checking</h3></div></div></div><p> The <a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\">Compile-Time\n   Checks</a> extension has compile-time checks for many algorithms.\n-  </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"debug.profile_mode\"></a>Profile-based Performance Analysis</h3></div></div></div><p> The <a class=\"link\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\">Profile-based\n-  Performance Analysis</a> extension has performance checks for many\n-  algorithms.\n   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"using_exceptions.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"std_contents.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Exceptions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0II.\u00a0\n     Standard Contents\n   </td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "b7511c49848e4660ccfdd2e39f7314bc289c3da6", "filename": "libstdc++-v3/doc/html/manual/ext_algorithms.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_algorithms.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_algorithms.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_algorithms.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a025.\u00a0Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_utilities.html\" title=\"Chapter\u00a024.\u00a0Utilities\" /><link rel=\"next\" href=\"ext_numerics.html\" title=\"Chapter\u00a026.\u00a0Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a025.\u00a0Algorithms</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a024.\u00a0Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_utilities.html\" title=\"Chapter\u00a023.\u00a0Utilities\" /><link rel=\"next\" href=\"ext_numerics.html\" title=\"Chapter\u00a025.\u00a0Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a024.\u00a0Algorithms</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.algorithms\"></a>Chapter\u00a025.\u00a0Algorithms</h2></div></div></div><p>25.1.6 (count, count_if) is extended with two more versions of count\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.algorithms\"></a>Chapter\u00a024.\u00a0Algorithms</h2></div></div></div><p>25.1.6 (count, count_if) is extended with two more versions of count\n    and count_if.  The standard versions return their results.  The\n    additional signatures return void, but take a final parameter by\n    reference to which they assign their results, e.g.,\n@@ -19,4 +19,4 @@\n </p><pre class=\"programlisting\">\n    lexicographical_compare_3way(_InputIter1 first1, _InputIter1 last1,\n \t\t\t\t _InputIter2 first2, _InputIter2 last2)</pre><p>which does... what?\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a024.\u00a0Utilities\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a026.\u00a0Numerics</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_numerics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a023.\u00a0Utilities\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a025.\u00a0Numerics</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "ed7a3ea9f4dd0d73879d333d216942f78eebf092", "filename": "libstdc++-v3/doc/html/manual/ext_concurrency.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a030.\u00a0Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_demangling.html\" title=\"Chapter\u00a029.\u00a0Demangling\" /><link rel=\"next\" href=\"ext_concurrency_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a030.\u00a0Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a029.\u00a0Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_demangling.html\" title=\"Chapter\u00a028.\u00a0Demangling\" /><link rel=\"next\" href=\"ext_concurrency_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a029.\u00a0Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a030.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file <code class=\"filename\">&lt;ext/concurrence.h&gt;</code>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a029.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file <code class=\"filename\">&lt;ext/concurrence.h&gt;</code>\n contains all the higher-level\n constructs for playing with threads. In contrast to the atomics layer,\n the concurrence layer consists largely of types. All types are defined within <code class=\"code\">namespace __gnu_cxx</code>.\n@@ -90,4 +90,4 @@\n </p><p>\n Which expand to the appropriate write and read barrier required by the\n host hardware and operating system.\n-</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_impl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a029.\u00a0Demangling\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_impl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a028.\u00a0Demangling\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "23b90f34572b8648e21f810123a012afd560c32e", "filename": "libstdc++-v3/doc/html/manual/ext_concurrency_impl.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_impl.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_impl.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_impl.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"next\" href=\"ext_concurrency_use.html\" title=\"Use\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_use.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.impl.atomic_fallbacks\"></a>Using Built-in Atomic Functions</h3></div></div></div><p>The functions for atomic operations described above are either\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a029.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency.html\" title=\"Chapter\u00a029.\u00a0Concurrency\" /><link rel=\"next\" href=\"ext_concurrency_use.html\" title=\"Use\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a029.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_use.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.impl.atomic_fallbacks\"></a>Using Built-in Atomic Functions</h3></div></div></div><p>The functions for atomic operations described above are either\n implemented via compiler intrinsics (if the underlying host is\n capable) or by library fallbacks.</p><p>Compiler intrinsics (builtins) are always preferred.  However, as\n the compiler builtins for atomics are not universally implemented,\n@@ -49,4 +49,4 @@\n functions, and usage found in the usual &lt;pthread.h&gt; file,\n including <code class=\"code\">pthread_t</code>, <code class=\"code\">pthread_once_t</code>, <code class=\"code\">pthread_create</code>,\n etc.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_concurrency.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_use.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a030.\u00a0Concurrency\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Use</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_concurrency.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_use.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a029.\u00a0Concurrency\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Use</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "6a0d345a910076de84af4c09345ac2b4126130d6", "filename": "libstdc++-v3/doc/html/manual/ext_concurrency_use.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_use.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_use.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_use.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Use</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency_impl.html\" title=\"Implementation\" /><link rel=\"next\" href=\"appendix.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Use</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency_impl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.use\"></a>Use</h2></div></div></div><p>Typical usage of the last two constructs is demonstrated as follows:\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Use</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a029.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency_impl.html\" title=\"Implementation\" /><link rel=\"next\" href=\"appendix.html\" title=\"Part\u00a0IV.\u00a0 Appendices\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Use</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency_impl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a029.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.use\"></a>Use</h2></div></div></div><p>Typical usage of the last two constructs is demonstrated as follows:\n </p><pre class=\"programlisting\">\n #include &lt;ext/concurrence.h&gt;\n "}, {"sha": "cba81484f5babf879e4565dc2bc07527c8cc142e", "filename": "libstdc++-v3/doc/html/manual/ext_containers.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_containers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_containers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_containers.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a023.\u00a0HP/SGI Extensions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"policy_data_structures_ack.html\" title=\"Acknowledgments\" /><link rel=\"next\" href=\"ext_sgi.html\" title=\"Deprecated\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a023.\u00a0HP/SGI Extensions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures_ack.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a022.\u00a0HP/SGI Extensions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"policy_data_structures_ack.html\" title=\"Acknowledgments\" /><link rel=\"next\" href=\"ext_sgi.html\" title=\"Deprecated\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a022.\u00a0HP/SGI Extensions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures_ack.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_sgi.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers\"></a>Chapter\u00a023.\u00a0HP/SGI Extensions</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.sgi\"></a>Backwards Compatibility</h2></div></div></div><p>A few extensions and nods to backwards-compatibility have\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_sgi.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers\"></a>Chapter\u00a022.\u00a0HP/SGI Extensions</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.sgi\"></a>Backwards Compatibility</h2></div></div></div><p>A few extensions and nods to backwards-compatibility have\n     been made with containers.  Those dealing with older SGI-style\n     allocators are dealt with elsewhere.  The remaining ones all deal\n     with bits:"}, {"sha": "879497f7d08fd8c3118476449ff0222b8bef6d89", "filename": "libstdc++-v3/doc/html/manual/ext_demangling.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_demangling.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a029.\u00a0Demangling</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_io.html\" title=\"Chapter\u00a028.\u00a0Input and Output\" /><link rel=\"next\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a029.\u00a0Demangling</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a028.\u00a0Demangling</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_io.html\" title=\"Chapter\u00a027.\u00a0Input and Output\" /><link rel=\"next\" href=\"ext_concurrency.html\" title=\"Chapter\u00a029.\u00a0Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a028.\u00a0Demangling</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.demangle\"></a>Chapter\u00a029.\u00a0Demangling</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.demangle\"></a>Chapter\u00a028.\u00a0Demangling</h2></div></div></div><p>\n     Transforming C++ ABI identifiers (like RTTI symbols) into the\n     original C++ source identifiers is called\n     <span class=\"quote\">\u201c<span class=\"quote\">demangling.</span>\u201d</span>\n@@ -70,4 +70,4 @@\n      be writing C++ in order to demangle C++.  (That also means we have to\n      use crummy memory management facilities, so don't forget to free()\n      the returned char array.)\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a028.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a030.\u00a0Concurrency</td></tr></table></div></body></html>\n\\ No newline at end of file\n+   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a027.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a029.\u00a0Concurrency</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "7bf81dfa8600cfb23c4765fce49199c60eaf7826", "filename": "libstdc++-v3/doc/html/manual/ext_io.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_io.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_io.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_io.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a028.\u00a0Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_iterators.html\" title=\"Chapter\u00a027.\u00a0Iterators\" /><link rel=\"next\" href=\"ext_demangling.html\" title=\"Chapter\u00a029.\u00a0Demangling\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a028.\u00a0Input and Output</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a027.\u00a0Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_iterators.html\" title=\"Chapter\u00a026.\u00a0Iterators\" /><link rel=\"next\" href=\"ext_demangling.html\" title=\"Chapter\u00a028.\u00a0Demangling\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a027.\u00a0Input and Output</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.io\"></a>Chapter\u00a028.\u00a0Input and Output</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.io\"></a>Chapter\u00a027.\u00a0Input and Output</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></div><p>\n     Extensions allowing <code class=\"code\">filebuf</code>s to be constructed from\n     \"C\" types like  FILE*s and file descriptors.\n   </p><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.io.filebuf_derived\"></a>Derived filebufs</h2></div></div></div><p>The v2 library included non-standard extensions to construct\n@@ -43,4 +43,4 @@\n \t <code class=\"classname\">__gnu_cxx::stdio_filebuf</code>.\n \t This class can be constructed from a C <code class=\"code\">FILE*</code> or a file\n \t descriptor, and provides the <code class=\"code\">fd()</code> function.\n-     </p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a027.\u00a0Iterators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a029.\u00a0Demangling</td></tr></table></div></body></html>\n\\ No newline at end of file\n+     </p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_iterators.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_demangling.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a026.\u00a0Iterators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a028.\u00a0Demangling</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "952f1b5bb629ab9a91c65a029aed60ee07ad0020", "filename": "libstdc++-v3/doc/html/manual/ext_iterators.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_iterators.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_iterators.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_iterators.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,13 +1,13 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a027.\u00a0Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_numerics.html\" title=\"Chapter\u00a026.\u00a0Numerics\" /><link rel=\"next\" href=\"ext_io.html\" title=\"Chapter\u00a028.\u00a0Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a027.\u00a0Iterators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a026.\u00a0Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_numerics.html\" title=\"Chapter\u00a025.\u00a0Numerics\" /><link rel=\"next\" href=\"ext_io.html\" title=\"Chapter\u00a027.\u00a0Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a026.\u00a0Iterators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.iterators\"></a>Chapter\u00a027.\u00a0Iterators</h2></div></div></div><p>24.3.2 describes <code class=\"code\">struct iterator</code>, which didn't exist in the\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.iterators\"></a>Chapter\u00a026.\u00a0Iterators</h2></div></div></div><p>24.3.2 describes <code class=\"code\">struct iterator</code>, which didn't exist in the\n    original HP STL implementation (the language wasn't rich enough at the\n    time).  For backwards compatibility, base classes are provided which\n    declare the same nested typedefs:\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>input_iterator</p></li><li class=\"listitem\"><p>output_iterator</p></li><li class=\"listitem\"><p>forward_iterator</p></li><li class=\"listitem\"><p>bidirectional_iterator</p></li><li class=\"listitem\"><p>random_access_iterator</p></li></ul></div><p>24.3.4 describes iterator operation <code class=\"code\">distance</code>, which takes\n    two iterators and returns a result.  It is extended by another signature\n    which takes two iterators and a reference to a result.  The result is\n    modified, and the function returns nothing.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a026.\u00a0Numerics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a028.\u00a0Input and Output</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_io.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a025.\u00a0Numerics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a027.\u00a0Input and Output</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "9b864e1dcf4a1656df0f048895abb963c7885ba4", "filename": "libstdc++-v3/doc/html/manual/ext_numerics.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_numerics.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_numerics.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_numerics.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a026.\u00a0Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_algorithms.html\" title=\"Chapter\u00a025.\u00a0Algorithms\" /><link rel=\"next\" href=\"ext_iterators.html\" title=\"Chapter\u00a027.\u00a0Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a026.\u00a0Numerics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a025.\u00a0Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_algorithms.html\" title=\"Chapter\u00a024.\u00a0Algorithms\" /><link rel=\"next\" href=\"ext_iterators.html\" title=\"Chapter\u00a026.\u00a0Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a025.\u00a0Numerics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.numerics\"></a>Chapter\u00a026.\u00a0Numerics</h2></div></div></div><p>26.4, the generalized numeric operations such as <code class=\"code\">accumulate</code>,\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.numerics\"></a>Chapter\u00a025.\u00a0Numerics</h2></div></div></div><p>26.4, the generalized numeric operations such as <code class=\"code\">accumulate</code>,\n    are extended with the following functions:\n </p><pre class=\"programlisting\">\n    power (x, n);\n@@ -20,4 +20,4 @@\n    <code class=\"code\">value + 1</code> to<code class=\"code\"> *(first + 1)</code> and so on.\"\n </p><pre class=\"programlisting\">\n    void iota(_ForwardIter first, _ForwardIter last, _Tp value);</pre><p>The <code class=\"code\">iota</code> function is included in the ISO C++ 2011 standard.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a025.\u00a0Algorithms\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a027.\u00a0Iterators</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_algorithms.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a024.\u00a0Algorithms\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a026.\u00a0Iterators</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "ae2062954f4fbbb099bb4e4e62f6bcb9da683c38", "filename": "libstdc++-v3/doc/html/manual/ext_sgi.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_sgi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_sgi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_sgi.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Deprecated</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_containers.html\" title=\"Chapter\u00a023.\u00a0HP/SGI Extensions\" /><link rel=\"prev\" href=\"ext_containers.html\" title=\"Chapter\u00a023.\u00a0HP/SGI Extensions\" /><link rel=\"next\" href=\"ext_utilities.html\" title=\"Chapter\u00a024.\u00a0Utilities\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Deprecated</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a023.\u00a0HP/SGI Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.deprecated_sgi\"></a>Deprecated</h2></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Deprecated</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_containers.html\" title=\"Chapter\u00a022.\u00a0HP/SGI Extensions\" /><link rel=\"prev\" href=\"ext_containers.html\" title=\"Chapter\u00a022.\u00a0HP/SGI Extensions\" /><link rel=\"next\" href=\"ext_utilities.html\" title=\"Chapter\u00a023.\u00a0Utilities\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Deprecated</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a022.\u00a0HP/SGI Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.deprecated_sgi\"></a>Deprecated</h2></div></div></div><p>\n      The SGI hashing classes <code class=\"classname\">hash_set</code> and\n      <code class=\"classname\">hash_set</code> have been deprecated by the\n      unordered_set, unordered_multiset, unordered_map,\n@@ -55,4 +55,4 @@\n       associative containers defined in the ISO C++ 2011 standard in the\n       headers <code class=\"filename\">&lt;unordered_map&gt;</code>\n       and <code class=\"filename\">&lt;unordered_set&gt;</code>.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a023.\u00a0HP/SGI Extensions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a024.\u00a0Utilities</td></tr></table></div></body></html>\n\\ No newline at end of file\n+   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"ext_containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_utilities.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a022.\u00a0HP/SGI Extensions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a023.\u00a0Utilities</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "9caf65f89eb6d52bdcc79eac540c129b5213bad3", "filename": "libstdc++-v3/doc/html/manual/ext_utilities.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_utilities.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_utilities.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_utilities.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a024.\u00a0Utilities</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_sgi.html\" title=\"Deprecated\" /><link rel=\"next\" href=\"ext_algorithms.html\" title=\"Chapter\u00a025.\u00a0Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a024.\u00a0Utilities</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_sgi.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a023.\u00a0Utilities</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_sgi.html\" title=\"Deprecated\" /><link rel=\"next\" href=\"ext_algorithms.html\" title=\"Chapter\u00a024.\u00a0Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a023.\u00a0Utilities</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_sgi.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.util\"></a>Chapter\u00a024.\u00a0Utilities</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.util\"></a>Chapter\u00a023.\u00a0Utilities</h2></div></div></div><p>\n     The <code class=\"filename\">&lt;functional&gt;</code> header\n     contains many additional functors\n     and helper functions, extending section 20.3.  They are\n@@ -38,4 +38,4 @@\n </p><p>\n   The specialized algorithms of section 20.4.4 are extended with\n   <code class=\"code\">uninitialized_copy_n</code>.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_sgi.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Deprecated\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a025.\u00a0Algorithms</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"ext_sgi.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_algorithms.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Deprecated\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a024.\u00a0Algorithms</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "e5836efa85d9b0ef574124f97d483347b691a7bd", "filename": "libstdc++-v3/doc/html/manual/extensions.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -6,7 +6,7 @@\n   Extensions\n   <a id=\"id-1.3.5.1.1.1\" class=\"indexterm\"></a>\n </h1></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"preface\"><a href=\"ext_preface.html\"></a></span></dt><dt><span class=\"chapter\"><a href=\"ext_compile_checks.html\">16. Compile Time Checks</a></span></dt><dt><span class=\"chapter\"><a href=\"debug_mode.html\">17. Debug Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_using.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_using.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods\">Methods</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.wrappers\">The Wrapper Model</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.safe_iter\">Safe Iterators</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.safe_seq\">Safe Sequences (Containers)</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.precond\">Precondition Checking</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.coexistence\">Release- and debug-mode coexistence</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.compile\">Compile-time coexistence of release- and debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.link\">Link- and run-time coexistence of release- and\n-    debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.alt\">Alternatives for Coexistence</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"profile_mode.html\">19. Profile Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_api.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_cost_model.html\">Empirical Cost Model</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_devel.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_devel.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_devel.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_too_small\">Hashtable Too Small</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_too_large\">Hashtable Too Large</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.inefficient_hash\">Inefficient Hash</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_too_small\">Vector Too Small</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_too_large\">Vector Too Large</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_to_hashtable\">Vector to Hashtable</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_to_vector\">Hashtable to Vector</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_to_list\">Vector to List</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.list_to_vector\">List to Vector</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.list_to_slist\">List to Forward List (Slist)</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.assoc_ord_to_unord\">Ordered to Unordered Associative Container</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.algorithms.sort\">Sort Algorithm Performance</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality.sw_prefetch\">Need Software Prefetch</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality.linked\">Linked Structure Locality</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread.ddtest\">Data Dependence Violations at Container Level</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread.false_share\">False Sharing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"mt_allocator.html\">20. The mt_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"bitmap_allocator.html\">21. The bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"policy_data_structures.html\">22. Policy-Based Data Structures</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n+    debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.alt\">Alternatives for Coexistence</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"mt_allocator.html\">19. The mt_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"bitmap_allocator.html\">20. The bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"policy_data_structures.html\">21. Policy-Based Data Structures</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n \t    Configuring via Template Parameters\n \t  </a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.traits\">\n \t    Querying Container Attributes\n@@ -68,4 +68,4 @@\n \t  Text <code class=\"function\">modify</code> Up\n \t</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#performance.priority_queue.text_modify_down\">\n \t  Text <code class=\"function\">modify</code> Down\n-\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"index.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_preface.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>\n\\ No newline at end of file\n+\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">22. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">23. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">24. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">25. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">26. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">27. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">28. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">29. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"index.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_preface.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "69b56420978d1c50ccdc6a4b72beaf5e28ca808d", "filename": "libstdc++-v3/doc/html/manual/index.html", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Findex.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,10 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>The GNU C++ Library Manual</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"next\" href=\"intro.html\" title=\"Part\u00a0I.\u00a0 Introduction\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">The GNU C++ Library Manual</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"../index.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"intro.html\">Next</a></td></tr></table><hr /></div><div class=\"book\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual\"></a>The GNU C++ Library Manual</h1></div><div><div class=\"authorgroup\"><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\"></span> <span class=\"surname\"></span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Paolo</span> <span class=\"surname\">Carlini</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Phil</span> <span class=\"surname\">Edwards</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Doug</span> <span class=\"surname\">Gregor</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Benjamin</span> <span class=\"surname\">Kosnik</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Dhruv</span> <span class=\"surname\">Matani</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Jason</span> <span class=\"surname\">Merrill</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Mark</span> <span class=\"surname\">Mitchell</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Nathan</span> <span class=\"surname\">Myers</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Natter</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Stefan</span> <span class=\"surname\">Olsson</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Silvius</span> <span class=\"surname\">Rus</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Johannes</span> <span class=\"surname\">Singler</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Ami</span> <span class=\"surname\">Tavory</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Jonathan</span> <span class=\"surname\">Wakely</span></h3></div></div></div><div><p class=\"copyright\">Copyright \u00a9 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019 \n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>The GNU C++ Library Manual</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"next\" href=\"intro.html\" title=\"Part\u00a0I.\u00a0 Introduction\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">The GNU C++ Library Manual</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"../index.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"intro.html\">Next</a></td></tr></table><hr /></div><div class=\"book\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual\"></a>The GNU C++ Library Manual</h1></div><div><div class=\"authorgroup\"><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\"></span> <span class=\"surname\"></span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Paolo</span> <span class=\"surname\">Carlini</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Phil</span> <span class=\"surname\">Edwards</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Doug</span> <span class=\"surname\">Gregor</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Benjamin</span> <span class=\"surname\">Kosnik</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Dhruv</span> <span class=\"surname\">Matani</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Jason</span> <span class=\"surname\">Merrill</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Mark</span> <span class=\"surname\">Mitchell</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Nathan</span> <span class=\"surname\">Myers</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Natter</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Stefan</span> <span class=\"surname\">Olsson</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Johannes</span> <span class=\"surname\">Singler</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Ami</span> <span class=\"surname\">Tavory</span></h3></div><div class=\"author\"><h3 class=\"author\"><span class=\"firstname\">Jonathan</span> <span class=\"surname\">Wakely</span></h3></div></div></div><div><p class=\"copyright\">Copyright \u00a9 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019 \n       <a class=\"link\" href=\"https://www.fsf.org\" target=\"_top\">FSF</a>\n     </p></div></div><hr /></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"part\"><a href=\"intro.html\">I. \n   Introduction\n   \n-</a></span></dt><dd><dl><dt><span class=\"chapter\"><a href=\"status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.1998.status\">Implementation Status</a></span></dt><dt><span class=\"section\"><a href=\"status.html#iso.1998.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2011\">C++ 2011</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2011.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2014\">C++ 2014</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.2017\">C++ 2017</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2017.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2020\">C++ 202a</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2020.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr1\">C++ TR1</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.tr1.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.specfun\">C++ IS 29124</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.specfun.specific\">Implementation Specific Behavior</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"license.html\">License</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"configure.html\">Configure</a></span></dt><dt><span class=\"section\"><a href=\"make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.profile_mode\">Profile-based Performance Analysis</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"std_contents.html\">II. \n+</a></span></dt><dd><dl><dt><span class=\"chapter\"><a href=\"status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.1998.status\">Implementation Status</a></span></dt><dt><span class=\"section\"><a href=\"status.html#iso.1998.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2011\">C++ 2011</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2011.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2014\">C++ 2014</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.2017\">C++ 2017</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2017.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2020\">C++ 202a</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2020.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr1\">C++ TR1</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.tr1.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.specfun\">C++ IS 29124</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.specfun.specific\">Implementation Specific Behavior</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"license.html\">License</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"configure.html\">Configure</a></span></dt><dt><span class=\"section\"><a href=\"make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"std_contents.html\">II. \n     Standard Contents\n   </a></span></dt><dd><dl><dt><span class=\"chapter\"><a href=\"support.html\">4. \n   Support\n@@ -46,7 +46,7 @@\n   Extensions\n   \n </a></span></dt><dd><dl><dt><span class=\"preface\"><a href=\"ext_preface.html\"></a></span></dt><dt><span class=\"chapter\"><a href=\"ext_compile_checks.html\">16. Compile Time Checks</a></span></dt><dt><span class=\"chapter\"><a href=\"debug_mode.html\">17. Debug Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode.html#manual.ext.debug_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_using.html#debug_mode.using.mode\">Using the Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_using.html#debug_mode.using.specific\">Using a Specific Debug Container</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods\">Methods</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.wrappers\">The Wrapper Model</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.safe_iter\">Safe Iterators</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.safe_seq\">Safe Sequences (Containers)</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.precond\">Precondition Checking</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.methods.coexistence\">Release- and debug-mode coexistence</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.compile\">Compile-time coexistence of release- and debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.link\">Link- and run-time coexistence of release- and\n-    debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.alt\">Alternatives for Coexistence</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"profile_mode.html\">19. Profile Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode.html#manual.ext.profile_mode.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode.html#manual.ext.profile_mode.using\">Using the Profile Mode</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode.html#manual.ext.profile_mode.tuning\">Tuning the Profile Mode</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.wrapper\">Wrapper Model</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.instrumentation\">Instrumentation</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.rtlib\">Run Time Behavior</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.analysis\">Analysis and Diagnostics</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.cost-model\">Cost Model</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.reports\">Reports</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_design.html#manual.ext.profile_mode.design.testing\">Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_api.html\">Extensions for Custom Containers</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_cost_model.html\">Empirical Cost Model</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html\">Implementation Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.stack\">Stack Traces</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.symbols\">Symbolization of Instruction Addresses</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.concurrency\">Concurrency</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.stdlib-in-proflib\">Using the Standard Library in the Instrumentation Implementation</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.malloc-hooks\">Malloc Hooks</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_impl.html#manual.ext.profile_mode.implementation.construction-destruction\">Construction and Destruction of Global Objects</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_devel.html\">Developer Information</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_devel.html#manual.ext.profile_mode.developer.bigpic\">Big Picture</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_devel.html#manual.ext.profile_mode.developer.howto\">How To Add A Diagnostic</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html\">Diagnostics</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.template\">Diagnostic Template</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.containers\">Containers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_too_small\">Hashtable Too Small</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_too_large\">Hashtable Too Large</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.inefficient_hash\">Inefficient Hash</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_too_small\">Vector Too Small</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_too_large\">Vector Too Large</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_to_hashtable\">Vector to Hashtable</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.hashtable_to_vector\">Hashtable to Vector</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.vector_to_list\">Vector to List</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.list_to_vector\">List to Vector</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.list_to_slist\">List to Forward List (Slist)</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.assoc_ord_to_unord\">Ordered to Unordered Associative Container</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.algorithms\">Algorithms</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.algorithms.sort\">Sort Algorithm Performance</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality\">Data Locality</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality.sw_prefetch\">Need Software Prefetch</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.locality.linked\">Linked Structure Locality</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread\">Multithreaded Data Access</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread.ddtest\">Data Dependence Violations at Container Level</a></span></dt><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.mthread.false_share\">False Sharing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"profile_mode_diagnostics.html#manual.ext.profile_mode.analysis.statistics\">Statistics</a></span></dt></dl></dd><dt><span class=\"bibliography\"><a href=\"profile_mode.html#profile_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"mt_allocator.html\">20. The mt_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"bitmap_allocator.html\">21. The bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"policy_data_structures.html\">22. Policy-Based Data Structures</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n+    debug-mode components</a></span></dt><dt><span class=\"section\"><a href=\"debug_mode_design.html#methods.coexistence.alt\">Alternatives for Coexistence</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug_mode_design.html#debug_mode.design.other\">Other Implementations</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"parallel_mode.html\">18. Parallel Mode</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"mt_allocator.html\">19. The mt_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"bitmap_allocator.html\">20. The bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.free_list_store\">Free List Store</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block\">Super Block</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.super_block_data\">Super Block Data Layout</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.max_wasted\">Maximum Wasted Percentage</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.allocate\"><code class=\"function\">allocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.deallocate\"><code class=\"function\">deallocate</code></a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.questions\">Questions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.1\">1</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.2\">2</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.question.3\">3</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.locality\">Locality</a></span></dt><dt><span class=\"section\"><a href=\"bitmap_allocator_impl.html#bitmap.impl.grow_policy\">Overhead and Grow Policy</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"policy_data_structures.html\">21. Policy-Based Data Structures</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n \t    Configuring via Template Parameters\n \t  </a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.traits\">\n \t    Querying Container Attributes\n@@ -108,7 +108,7 @@\n \t  Text <code class=\"function\">modify</code> Up\n \t</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#performance.priority_queue.text_modify_down\">\n \t  Text <code class=\"function\">modify</code> Down\n-\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"appendix.html\">IV. \n+\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">22. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">23. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">24. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">25. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">26. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">27. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">28. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">29. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"appendix.html\">IV. \n   Appendices\n </a></span></dt><dd><dl><dt><span class=\"appendix\"><a href=\"appendix_contributing.html\">A. \n   Contributing\n@@ -123,7 +123,7 @@\n     Existing tests\n </a></span></dt><dt><span class=\"section\"><a href=\"test.html#test.exception.safety.containers\">\n C++11 Requirements Test Sequence Descriptions\n-</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n+</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"abi.html\">ABI Policy and Guidelines</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.cxx_interface\">The C++ Interface</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning\">Versioning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.goals\">Goals</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.history\">History</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.config\">Configuring</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.versioning.active\">Checking Active</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.changes_allowed\">Allowed Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.changes_no\">Prohibited Changes</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.impl\">Implementation</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing\">Testing</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"abi.html#abi.testing.single\">Single ABI Testing</a></span></dt><dt><span class=\"section\"><a href=\"abi.html#abi.testing.multi\">Multiple ABI Testing</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"abi.html#abi.issues\">Outstanding Issues</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html\">API Evolution and Deprecation History</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_300\"><code class=\"constant\">3.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_310\"><code class=\"constant\">3.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_320\"><code class=\"constant\">3.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_330\"><code class=\"constant\">3.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_340\"><code class=\"constant\">3.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_400\"><code class=\"constant\">4.0</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_410\"><code class=\"constant\">4.1</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_420\"><code class=\"constant\">4.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_430\"><code class=\"constant\">4.3</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_440\"><code class=\"constant\">4.4</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_450\"><code class=\"constant\">4.5</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_460\"><code class=\"constant\">4.6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_470\"><code class=\"constant\">4.7</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_480\"><code class=\"constant\">4.8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_490\"><code class=\"constant\">4.9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_51\"><code class=\"constant\">5</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_53\"><code class=\"constant\">5.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_61\"><code class=\"constant\">6</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_71\"><code class=\"constant\">7</code></a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"api.html#api.rel_72\"><code class=\"constant\">7.2</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_73\"><code class=\"constant\">7.3</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"api.html#api.rel_81\"><code class=\"constant\">8</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_91\"><code class=\"constant\">9</code></a></span></dt><dt><span class=\"section\"><a href=\"api.html#api.rel_101\"><code class=\"constant\">10</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html\">Backwards Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first\">First</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.ios_base\">No <code class=\"code\">ios_base</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.first.cout_cin\">No <code class=\"code\">cout</code> in <code class=\"filename\">&lt;ostream.h&gt;</code>, no <code class=\"code\">cin</code> in <code class=\"filename\">&lt;istream.h&gt;</code></a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"backwards.html#backwards.second\">Second</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.std\">Namespace <code class=\"code\">std::</code> not supported</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.iterators\">Illegal iterator usage</a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.isspace\"><code class=\"code\">isspace</code> from <code class=\"filename\">&lt;cctype&gt;</code> is a macro\n   </a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.at\">No <code class=\"code\">vector::at</code>, <code class=\"code\">deque::at</code>, <code class=\"code\">string::at</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.eof\">No <code class=\"code\">std::char_traits&lt;char&gt;::eof</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.stringclear\">No <code class=\"code\">string::clear</code></a></span></dt><dt><span class=\"section\"><a href=\"backwards.html#backwards.second.ostreamform_istreamscan\">\n   Removal of <code class=\"code\">ostream::form</code> and <code class=\"code\">istream::scan</code>\n   extensions\n@@ -143,19 +143,19 @@\n   \n </a></span></dt><dt><span class=\"appendix\"><a href=\"appendix_gpl.html\">D. \n     <acronym class=\"acronym\">GNU</acronym> General Public License version 3\n-  </a></span></dt><dt><span class=\"appendix\"><a href=\"appendix_gfdl.html\">E. GNU Free Documentation License</a></span></dt></dl></dd></dl></div><div class=\"list-of-figures\"><p><strong>List of Figures</strong></p><dl><dt>22.1. <a href=\"policy_data_structures.html#id-1.3.5.9.2.5.3.3.4\">Node Invariants</a></dt><dt>22.2. <a href=\"policy_data_structures.html#id-1.3.5.9.2.5.3.4.4\">Underlying Associative Data Structures</a></dt><dt>22.3. <a href=\"policy_data_structures.html#id-1.3.5.9.2.5.3.5.4.5\">Range Iteration in Different Data Structures</a></dt><dt>22.4. <a href=\"policy_data_structures.html#id-1.3.5.9.2.5.3.5.5.7\">Point Iteration in Hash Data Structures</a></dt><dt>22.5. <a href=\"policy_data_structures.html#id-1.3.5.9.2.5.3.5.6.6\">Effect of erase in different underlying data structures</a></dt><dt>22.6. <a href=\"policy_data_structures.html#id-1.3.5.9.2.5.4.3.3\">Underlying Priority Queue Data Structures</a></dt><dt>22.7. <a href=\"policy_data_structures_using.html#id-1.3.5.9.3.3.6\">Exception Hierarchy</a></dt><dt>22.8. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.3.3.3.14\">Non-unique Mapping Standard Containers</a></dt><dt>22.9. <a href=\"policy_data_structures_design.html#fig.pbds_embedded_lists_2\">\n+  </a></span></dt><dt><span class=\"appendix\"><a href=\"appendix_gfdl.html\">E. GNU Free Documentation License</a></span></dt></dl></dd></dl></div><div class=\"list-of-figures\"><p><strong>List of Figures</strong></p><dl><dt>21.1. <a href=\"policy_data_structures.html#id-1.3.5.8.2.5.3.3.4\">Node Invariants</a></dt><dt>21.2. <a href=\"policy_data_structures.html#id-1.3.5.8.2.5.3.4.4\">Underlying Associative Data Structures</a></dt><dt>21.3. <a href=\"policy_data_structures.html#id-1.3.5.8.2.5.3.5.4.5\">Range Iteration in Different Data Structures</a></dt><dt>21.4. <a href=\"policy_data_structures.html#id-1.3.5.8.2.5.3.5.5.7\">Point Iteration in Hash Data Structures</a></dt><dt>21.5. <a href=\"policy_data_structures.html#id-1.3.5.8.2.5.3.5.6.6\">Effect of erase in different underlying data structures</a></dt><dt>21.6. <a href=\"policy_data_structures.html#id-1.3.5.8.2.5.4.3.3\">Underlying Priority Queue Data Structures</a></dt><dt>21.7. <a href=\"policy_data_structures_using.html#id-1.3.5.8.3.3.6\">Exception Hierarchy</a></dt><dt>21.8. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.3.3.3.14\">Non-unique Mapping Standard Containers</a></dt><dt>21.9. <a href=\"policy_data_structures_design.html#fig.pbds_embedded_lists_2\">\n \t    Effect of embedded lists in\n \t    <code class=\"classname\">std::multimap</code>\n-\t  </a></dt><dt>22.10. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.3.3.3.23\">Non-unique Mapping Containers</a></dt><dt>22.11. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.3.4.3.5\">Point Iterator Hierarchy</a></dt><dt>22.12. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.3.4.4.5\">Invalidation Guarantee Tags Hierarchy</a></dt><dt>22.13. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.3.5.7.4\">Container Tag Hierarchy</a></dt><dt>22.14. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.2.3\">Hash functions, ranged-hash functions, and\n-\t      range-hashing functions</a></dt><dt>22.15. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.5.3.4\">Insert hash sequence diagram</a></dt><dt>22.16. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.5.3.6\">Insert hash sequence diagram with a null policy</a></dt><dt>22.17. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.5.5.5\">Hash policy class diagram</a></dt><dt>22.18. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.3.4.7\">Balls and bins</a></dt><dt>22.19. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.3.5.3.6\">Insert resize sequence diagram</a></dt><dt>22.20. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.3.5.3.9\">Standard resize policy trigger sequence\n-\t\tdiagram</a></dt><dt>22.21. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.3.5.3.10\">Standard resize policy size sequence\n-\t\tdiagram</a></dt><dt>22.22. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.3.3.2.5\">Tree node invariants</a></dt><dt>22.23. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.3.3.2.8\">Tree node invalidation</a></dt><dt>22.24. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.3.3.2.11.3\">A tree and its update policy</a></dt><dt>22.25. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.3.3.2.11.8\">Restoring node invariants</a></dt><dt>22.26. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.3.3.2.11.10\">Insert update sequence</a></dt><dt>22.27. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.3.3.2.11.20\">Useless update path</a></dt><dt>22.28. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.4.3.2.10\">A PATRICIA trie</a></dt><dt>22.29. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.4.3.3.5\">A trie and its update policy</a></dt><dt>22.30. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.5.3.3.3\">A simple list</a></dt><dt>22.31. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.5.3.3.6\">The counter algorithm</a></dt><dt>22.32. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.6.3.3.3\">Underlying Priority-Queue Data-Structures.</a></dt><dt>22.33. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.6.3.4.4\">Priority-Queue Data-Structure Tags.</a></dt><dt>B.1. <a href=\"appendix_porting.html#fig.build_hacking.deps\">Configure and Build File Dependencies</a></dt></dl></div><div class=\"list-of-tables\"><p><strong>List of Tables</strong></p><dl><dt>1.1. <a href=\"status.html#table.cxx98_status\">C++ 1998/2003 Implementation Status</a></dt><dt>1.2. <a href=\"status.html#table.cxx11_status\">C++ 2011 Implementation Status</a></dt><dt>1.3. <a href=\"status.html#table.cxx14_status\">C++ 2014 Implementation Status</a></dt><dt>1.4. <a href=\"status.html#table.ts_status\">C++ Technical Specifications Implementation Status</a></dt><dt>1.5. <a href=\"status.html#table.cxx17_status\">C++ 2017 Implementation Status</a></dt><dt>1.6. <a href=\"status.html#table.cxx17_ts_status\">C++ Technical Specifications Implementation Status</a></dt><dt>1.7. <a href=\"status.html#table.cxx20_status\">C++ 2020 Implementation Status</a></dt><dt>1.8. <a href=\"status.html#table.tr1_status\">C++ TR1 Implementation Status</a></dt><dt>1.9. <a href=\"status.html#table.decfp_status\">C++ TR 24733 Implementation Status</a></dt><dt>1.10. <a href=\"status.html#table.specfun_status\">C++ Special Functions Implementation Status</a></dt><dt>3.1. <a href=\"using.html#table.cmd_options\">C++ Command Options</a></dt><dt>3.2. <a href=\"using_headers.html#table.cxx98_headers\">C++ 1998 Library Headers</a></dt><dt>3.3. <a href=\"using_headers.html#table.cxx98_cheaders\">C++ 1998 Library Headers for C Library Facilities</a></dt><dt>3.4. <a href=\"using_headers.html#table.cxx98_deprheaders\">C++ 1998 Deprecated Library Header</a></dt><dt>3.5. <a href=\"using_headers.html#table.cxx11_headers\">C++ 2011 Library Headers</a></dt><dt>3.6. <a href=\"using_headers.html#table.cxx11_cheaders\">C++ 2011 Library Headers for C Library Facilities</a></dt><dt>3.7. <a href=\"using_headers.html#table.cxx14_headers\">C++ 2014 Library Header</a></dt><dt>3.8. <a href=\"using_headers.html#table.cxx17_headers\">C++ 2017 Library Headers</a></dt><dt>3.9. <a href=\"using_headers.html#table.cxx20_headers\">C++ 2020 Library Headers</a></dt><dt>3.10. <a href=\"using_headers.html#table.cxx20_deprheaders\">C++ 2020 Obsolete Headers</a></dt><dt>3.11. <a href=\"using_headers.html#table.filesystemts_headers\">File System TS Header</a></dt><dt>3.12. <a href=\"using_headers.html#table.libfundts_headers\">Library Fundamentals TS Headers</a></dt><dt>3.13. <a href=\"using_headers.html#table.tr1_headers\">C++ TR 1 Library Headers</a></dt><dt>3.14. <a href=\"using_headers.html#table.tr1_cheaders\">C++ TR 1 Library Headers for C Library Facilities</a></dt><dt>3.15. <a href=\"using_headers.html#table.decfp_headers\">C++ TR 24733 Decimal Floating-Point Header</a></dt><dt>3.16. <a href=\"using_headers.html#table.abi_headers\">C++ ABI Headers</a></dt><dt>3.17. <a href=\"using_headers.html#table.ext_headers\">Extension Headers</a></dt><dt>3.18. <a href=\"using_headers.html#table.debug_headers\">Extension Debug Headers</a></dt><dt>3.19. <a href=\"using_headers.html#table.profile_headers\">Extension Profile Headers</a></dt><dt>3.20. <a href=\"using_headers.html#table.parallel_headers\">Extension Parallel Headers</a></dt><dt>17.1. <a href=\"debug_mode_using.html#table.debug_mode_containers\">Debugging Containers</a></dt><dt>17.2. <a href=\"debug_mode_using.html#table.debug_mode_containers_cxx11\">Debugging Containers C++11</a></dt><dt>18.1. <a href=\"parallel_mode_using.html#table.parallel_algos\">Parallel Algorithms</a></dt><dt>19.1. <a href=\"profile_mode_design.html#table.profile_code_loc\">Profile Code Location</a></dt><dt>19.2. <a href=\"profile_mode_diagnostics.html#table.profile_diagnostics\">Profile Diagnostics</a></dt><dt>21.1. <a href=\"bitmap_allocator_impl.html#table.bitmap_alloc\">Bitmap Allocator Memory Map</a></dt><dt>B.1. <a href=\"documentation_hacking.html#table.doxygen_prereq\">Doxygen Prerequisites</a></dt><dt>B.2. <a href=\"documentation_hacking.html#table.doxygen_cmp\">HTML to Doxygen Markup Comparison</a></dt><dt>B.3. <a href=\"documentation_hacking.html#table.docbook_prereq\">Docbook Prerequisites</a></dt><dt>B.4. <a href=\"documentation_hacking.html#table.docbook_cmp\">HTML to Docbook XML Markup Comparison</a></dt><dt>B.5. <a href=\"documentation_hacking.html#table.docbook_elem\">Docbook XML Element Use</a></dt><dt>B.6. <a href=\"api.html#table.extension_allocators\">Extension Allocators</a></dt><dt>B.7. <a href=\"api.html#table.extension_allocators2\">Extension Allocators Continued</a></dt></dl></div><div class=\"list-of-equations\"><p><strong>List of Equations</strong></p><dl><dt>22.1. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.2.15\">Ranged Hash Function</a></dt><dt>22.2. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.3.3\">Range-Hashing, Division Method</a></dt><dt>22.3. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.3.9\">Division via Prime Modulo</a></dt><dt>22.4. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.3.11\">Division via Bit Mask</a></dt><dt>22.5. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.4.7\">\n+\t  </a></dt><dt>21.10. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.3.3.3.23\">Non-unique Mapping Containers</a></dt><dt>21.11. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.3.4.3.5\">Point Iterator Hierarchy</a></dt><dt>21.12. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.3.4.4.5\">Invalidation Guarantee Tags Hierarchy</a></dt><dt>21.13. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.3.5.7.4\">Container Tag Hierarchy</a></dt><dt>21.14. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.2.3\">Hash functions, ranged-hash functions, and\n+\t      range-hashing functions</a></dt><dt>21.15. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.5.3.4\">Insert hash sequence diagram</a></dt><dt>21.16. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.5.3.6\">Insert hash sequence diagram with a null policy</a></dt><dt>21.17. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.5.5.5\">Hash policy class diagram</a></dt><dt>21.18. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.3.4.7\">Balls and bins</a></dt><dt>21.19. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.3.5.3.6\">Insert resize sequence diagram</a></dt><dt>21.20. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.3.5.3.9\">Standard resize policy trigger sequence\n+\t\tdiagram</a></dt><dt>21.21. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.3.5.3.10\">Standard resize policy size sequence\n+\t\tdiagram</a></dt><dt>21.22. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.3.3.2.5\">Tree node invariants</a></dt><dt>21.23. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.3.3.2.8\">Tree node invalidation</a></dt><dt>21.24. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.3.3.2.11.3\">A tree and its update policy</a></dt><dt>21.25. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.3.3.2.11.8\">Restoring node invariants</a></dt><dt>21.26. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.3.3.2.11.10\">Insert update sequence</a></dt><dt>21.27. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.3.3.2.11.20\">Useless update path</a></dt><dt>21.28. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.4.3.2.10\">A PATRICIA trie</a></dt><dt>21.29. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.4.3.3.5\">A trie and its update policy</a></dt><dt>21.30. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.5.3.3.3\">A simple list</a></dt><dt>21.31. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.5.3.3.6\">The counter algorithm</a></dt><dt>21.32. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.6.3.3.3\">Underlying Priority-Queue Data-Structures.</a></dt><dt>21.33. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.6.3.4.4\">Priority-Queue Data-Structure Tags.</a></dt><dt>B.1. <a href=\"appendix_porting.html#fig.build_hacking.deps\">Configure and Build File Dependencies</a></dt></dl></div><div class=\"list-of-tables\"><p><strong>List of Tables</strong></p><dl><dt>1.1. <a href=\"status.html#table.cxx98_status\">C++ 1998/2003 Implementation Status</a></dt><dt>1.2. <a href=\"status.html#table.cxx11_status\">C++ 2011 Implementation Status</a></dt><dt>1.3. <a href=\"status.html#table.cxx14_status\">C++ 2014 Implementation Status</a></dt><dt>1.4. <a href=\"status.html#table.ts_status\">C++ Technical Specifications Implementation Status</a></dt><dt>1.5. <a href=\"status.html#table.cxx17_status\">C++ 2017 Implementation Status</a></dt><dt>1.6. <a href=\"status.html#table.cxx17_ts_status\">C++ Technical Specifications Implementation Status</a></dt><dt>1.7. <a href=\"status.html#table.cxx20_status\">C++ 2020 Implementation Status</a></dt><dt>1.8. <a href=\"status.html#table.tr1_status\">C++ TR1 Implementation Status</a></dt><dt>1.9. <a href=\"status.html#table.decfp_status\">C++ TR 24733 Implementation Status</a></dt><dt>1.10. <a href=\"status.html#table.specfun_status\">C++ Special Functions Implementation Status</a></dt><dt>3.1. <a href=\"using.html#table.cmd_options\">C++ Command Options</a></dt><dt>3.2. <a href=\"using_headers.html#table.cxx98_headers\">C++ 1998 Library Headers</a></dt><dt>3.3. <a href=\"using_headers.html#table.cxx98_cheaders\">C++ 1998 Library Headers for C Library Facilities</a></dt><dt>3.4. <a href=\"using_headers.html#table.cxx98_deprheaders\">C++ 1998 Deprecated Library Header</a></dt><dt>3.5. <a href=\"using_headers.html#table.cxx11_headers\">C++ 2011 Library Headers</a></dt><dt>3.6. <a href=\"using_headers.html#table.cxx11_cheaders\">C++ 2011 Library Headers for C Library Facilities</a></dt><dt>3.7. <a href=\"using_headers.html#table.cxx14_headers\">C++ 2014 Library Header</a></dt><dt>3.8. <a href=\"using_headers.html#table.cxx17_headers\">C++ 2017 Library Headers</a></dt><dt>3.9. <a href=\"using_headers.html#table.cxx20_headers\">C++ 2020 Library Headers</a></dt><dt>3.10. <a href=\"using_headers.html#table.cxx20_deprheaders\">C++ 2020 Obsolete Headers</a></dt><dt>3.11. <a href=\"using_headers.html#table.filesystemts_headers\">File System TS Header</a></dt><dt>3.12. <a href=\"using_headers.html#table.libfundts_headers\">Library Fundamentals TS Headers</a></dt><dt>3.13. <a href=\"using_headers.html#table.tr1_headers\">C++ TR 1 Library Headers</a></dt><dt>3.14. <a href=\"using_headers.html#table.tr1_cheaders\">C++ TR 1 Library Headers for C Library Facilities</a></dt><dt>3.15. <a href=\"using_headers.html#table.decfp_headers\">C++ TR 24733 Decimal Floating-Point Header</a></dt><dt>3.16. <a href=\"using_headers.html#table.abi_headers\">C++ ABI Headers</a></dt><dt>3.17. <a href=\"using_headers.html#table.ext_headers\">Extension Headers</a></dt><dt>3.18. <a href=\"using_headers.html#table.debug_headers\">Extension Debug Headers</a></dt><dt>3.19. <a href=\"using_headers.html#table.parallel_headers\">Extension Parallel Headers</a></dt><dt>17.1. <a href=\"debug_mode_using.html#table.debug_mode_containers\">Debugging Containers</a></dt><dt>17.2. <a href=\"debug_mode_using.html#table.debug_mode_containers_cxx11\">Debugging Containers C++11</a></dt><dt>18.1. <a href=\"parallel_mode_using.html#table.parallel_algos\">Parallel Algorithms</a></dt><dt>20.1. <a href=\"bitmap_allocator_impl.html#table.bitmap_alloc\">Bitmap Allocator Memory Map</a></dt><dt>B.1. <a href=\"documentation_hacking.html#table.doxygen_prereq\">Doxygen Prerequisites</a></dt><dt>B.2. <a href=\"documentation_hacking.html#table.doxygen_cmp\">HTML to Doxygen Markup Comparison</a></dt><dt>B.3. <a href=\"documentation_hacking.html#table.docbook_prereq\">Docbook Prerequisites</a></dt><dt>B.4. <a href=\"documentation_hacking.html#table.docbook_cmp\">HTML to Docbook XML Markup Comparison</a></dt><dt>B.5. <a href=\"documentation_hacking.html#table.docbook_elem\">Docbook XML Element Use</a></dt><dt>B.6. <a href=\"api.html#table.extension_allocators\">Extension Allocators</a></dt><dt>B.7. <a href=\"api.html#table.extension_allocators2\">Extension Allocators Continued</a></dt></dl></div><div class=\"list-of-equations\"><p><strong>List of Equations</strong></p><dl><dt>21.1. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.2.15\">Ranged Hash Function</a></dt><dt>21.2. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.3.3\">Range-Hashing, Division Method</a></dt><dt>21.3. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.3.9\">Division via Prime Modulo</a></dt><dt>21.4. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.3.11\">Division via Bit Mask</a></dt><dt>21.5. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.4.7\">\n \t\tA Standard String Hash Function\n-\t      </a></dt><dt>22.6. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.2.4.12\">\n+\t      </a></dt><dt>21.6. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.2.4.12\">\n \t\tOnly k String DNA Hash\n-\t      </a></dt><dt>22.7. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.3.4.9\">\n+\t      </a></dt><dt>21.7. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.3.4.9\">\n \t\tProbability of Probe Sequence of Length k\n-\t      </a></dt><dt>22.8. <a href=\"policy_data_structures_design.html#id-1.3.5.9.4.4.2.3.3.4.14\">\n+\t      </a></dt><dt>21.8. <a href=\"policy_data_structures_design.html#id-1.3.5.8.4.4.2.3.3.4.14\">\n \t\tProbability Probe Sequence in Some Bin\n \t      </a></dt></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"../index.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\">\u00a0</td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"intro.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">The GNU C++ Library\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0I.\u00a0\n   Introduction"}, {"sha": "f59b8117fd0ceb6a741ef22bb813c2914e1bdf65", "filename": "libstdc++-v3/doc/html/manual/intro.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fintro.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fintro.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fintro.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -5,4 +5,4 @@\n </th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"index.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library Manual</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"status.html\">Next</a></td></tr></table><hr /></div><div class=\"part\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"manual.intro\"></a>Part\u00a0I.\u00a0\n   Introduction\n   <a id=\"id-1.3.3.1.1.1\" class=\"indexterm\"></a>\n-</h1></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"chapter\"><a href=\"status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.1998.status\">Implementation Status</a></span></dt><dt><span class=\"section\"><a href=\"status.html#iso.1998.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2011\">C++ 2011</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2011.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2014\">C++ 2014</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.2017\">C++ 2017</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2017.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2020\">C++ 202a</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2020.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr1\">C++ TR1</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.tr1.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.specfun\">C++ IS 29124</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.specfun.specific\">Implementation Specific Behavior</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"license.html\">License</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"configure.html\">Configure</a></span></dt><dt><span class=\"section\"><a href=\"make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.profile_mode\">Profile-based Performance Analysis</a></span></dt></dl></dd></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"index.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"index.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"status.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">The GNU C++ Library Manual\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a01.\u00a0Status</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</h1></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"chapter\"><a href=\"status.html\">1. Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#manual.intro.status.iso\">Implementation Status</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#status.iso.1998\">C++ 1998/2003</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.1998.status\">Implementation Status</a></span></dt><dt><span class=\"section\"><a href=\"status.html#iso.1998.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2011\">C++ 2011</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2011.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2014\">C++ 2014</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.2017\">C++ 2017</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2017.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.2020\">C++ 202a</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.2020.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr1\">C++ TR1</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.tr1.specific\">Implementation Specific Behavior</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"status.html#status.iso.tr24733\">C++ TR 24733</a></span></dt><dt><span class=\"section\"><a href=\"status.html#status.iso.specfun\">C++ IS 29124</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"status.html#iso.specfun.specific\">Implementation Specific Behavior</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"license.html\">License</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.gpl\">The Code: GPL</a></span></dt><dt><span class=\"section\"><a href=\"license.html#manual.intro.status.license.fdl\">The Documentation: GPL, FDL</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bugs.html\">Bugs</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.impl\">Implementation Bugs</a></span></dt><dt><span class=\"section\"><a href=\"bugs.html#manual.intro.status.bugs.iso\">Standard Bugs</a></span></dt></dl></dd></dl></dd><dt><span class=\"chapter\"><a href=\"setup.html\">2. Setup</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"setup.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"configure.html\">Configure</a></span></dt><dt><span class=\"section\"><a href=\"make.html\">Make</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"using.html\">3. Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt></dl></dd></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"index.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"index.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"status.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">The GNU C++ Library Manual\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a01.\u00a0Status</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "dae1b739e56949727e8b1748c81e225e2928616d", "filename": "libstdc++-v3/doc/html/manual/io_and_c.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio_and_c.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio_and_c.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fio_and_c.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -3,7 +3,7 @@\n   Input and Output\n   \n </th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"atomics.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"std.io.c\"></a>Interacting with C</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"std.io.c.FILE\"></a>Using FILE* and file descriptors</h3></div></div></div><p>\n-      See the <a class=\"link\" href=\"ext_io.html\" title=\"Chapter\u00a028.\u00a0Input and Output\">extensions</a> for using\n+      See the <a class=\"link\" href=\"ext_io.html\" title=\"Chapter\u00a027.\u00a0Input and Output\">extensions</a> for using\n       <span class=\"type\">FILE</span> and <span class=\"type\">file descriptors</span> with\n       <code class=\"classname\">ofstream</code> and\n       <code class=\"classname\">ifstream</code>."}, {"sha": "b373c31c84c0b998a905198355e832ae167824ae", "filename": "libstdc++-v3/doc/html/manual/memory.html", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -222,19 +222,6 @@\n \t <code class=\"function\">new</code>/<code class=\"function\">delete</code> this is\n \t taken care of elsewhere).\n        </p></li><li class=\"listitem\"><p>\n-       <code class=\"classname\">array_allocator</code>\n-       </p><p>\n-\t Allows allocations of known and fixed sizes using existing\n-\t global or external storage allocated via construction of\n-\t <code class=\"classname\">std::tr1::array</code> objects. By using this\n-\t allocator, fixed size containers (including\n-\t <code class=\"classname\">std::string</code>) can be used without\n-\t instances calling <code class=\"function\">::operator new</code> and\n-\t <code class=\"function\">::operator delete</code>. This capability\n-\t allows the use of STL abstractions without runtime\n-\t complications or overhead, even in situations such as program\n-\t startup. For usage examples, please consult the testsuite.\n-       </p></li><li class=\"listitem\"><p>\n        <code class=\"classname\">debug_allocator</code>\n        </p><p>\n \t A wrapper around an arbitrary allocator A.  It passes on\n@@ -300,14 +287,14 @@\n        </p><p>\n \t A high-performance fixed-size allocator with\n \t exponentially-increasing allocations. It has its own\n-\t <a class=\"link\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\">chapter</a>\n+\t <a class=\"link\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\">chapter</a>\n          in the documentation.\n        </p></li><li class=\"listitem\"><p>\n        <code class=\"classname\">bitmap_allocator</code>\n        </p><p>\n \t A high-performance allocator that uses a bit-map to keep track\n \t of the used and unused memory locations. It has its own\n-\t <a class=\"link\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a021.\u00a0The bitmap_allocator\">chapter</a>\n+\t <a class=\"link\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a020.\u00a0The bitmap_allocator\">chapter</a>\n          in the documentation.\n        </p></li></ol></div></div><div class=\"bibliography\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.biblio\"></a>Bibliography</h4></div></div></div><div class=\"biblioentry\"><a id=\"id-1.3.4.4.4.3.9.2\"></a><p><span class=\"citetitle\"><em class=\"citetitle\">\n     ISO/IEC 14882:1998 Programming languages - C++"}, {"sha": "c7786f02844502d3340fee056e063ea43943b7a4", "filename": "libstdc++-v3/doc/html/manual/mt_allocator.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a020.\u00a0The mt_allocator</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"profile_mode_diagnostics.html\" title=\"Diagnostics\" /><link rel=\"next\" href=\"mt_allocator_design.html\" title=\"Design Issues\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a020.\u00a0The mt_allocator</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"profile_mode_diagnostics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a019.\u00a0The mt_allocator</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"parallel_mode_test.html\" title=\"Testing\" /><link rel=\"next\" href=\"mt_allocator_design.html\" title=\"Design Issues\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a019.\u00a0The mt_allocator</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode_test.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_design.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator.mt\"></a>Chapter\u00a020.\u00a0The mt_allocator</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_design.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator.mt\"></a>Chapter\u00a019.\u00a0The mt_allocator</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"mt_allocator.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_design.html\">Design Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_design.html#allocator.mt.overview\">Overview</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.tune\">Tunable Parameters</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.init\">Initialization</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_impl.html#allocator.mt.deallocation\">Deallocation Notes</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"mt_allocator_ex_single.html\">Single Thread Example</a></span></dt><dt><span class=\"section\"><a href=\"mt_allocator_ex_multi.html\">Multiple Thread Example</a></span></dt></dl></div><p>\n </p><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.intro\"></a>Intro</h2></div></div></div><p>\n   The mt allocator [hereinafter referred to simply as \"the allocator\"]\n   is a fixed size (power of two) allocator that was initially\n@@ -19,4 +19,4 @@\n </p><p>\n   The aim of this document is to describe - from an application point of\n   view - the \"inner workings\" of the allocator.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"profile_mode_diagnostics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_design.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Diagnostics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design Issues</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode_test.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_design.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Testing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design Issues</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "7541c3a8f4b8a3e40a84fb3943b7194d613d1fc0", "filename": "libstdc++-v3/doc/html/manual/mt_allocator_design.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_design.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_design.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_design.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design Issues</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\" /><link rel=\"next\" href=\"mt_allocator_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design Issues</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a020.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.design_issues\"></a>Design Issues</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.overview\"></a>Overview</h3></div></div></div><p> There are three general components to the allocator: a datum\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design Issues</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\" /><link rel=\"next\" href=\"mt_allocator_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design Issues</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.design_issues\"></a>Design Issues</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.overview\"></a>Overview</h3></div></div></div><p> There are three general components to the allocator: a datum\n describing the characteristics of the memory pool, a policy class\n containing this pool that links instantiation types to common or\n individual pools, and a class inheriting from the policy class that is\n@@ -35,4 +35,4 @@\n </pre><p> This class has the interface required for standard library allocator\n classes, namely member functions <code class=\"code\">allocate</code> and\n <code class=\"code\">deallocate</code>, plus others.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"mt_allocator.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_impl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a020.\u00a0The mt_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"mt_allocator.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_impl.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a019.\u00a0The mt_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "67a1154164b765dcc996a33285c81ec82e7352d6", "filename": "libstdc++-v3/doc/html/manual/mt_allocator_ex_multi.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_ex_multi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_ex_multi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_ex_multi.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Multiple Thread Example</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator_ex_single.html\" title=\"Single Thread Example\" /><link rel=\"next\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a021.\u00a0The bitmap_allocator\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Multiple Thread Example</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_ex_single.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a020.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.example_multi\"></a>Multiple Thread Example</h2></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Multiple Thread Example</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator_ex_single.html\" title=\"Single Thread Example\" /><link rel=\"next\" href=\"bitmap_allocator.html\" title=\"Chapter\u00a020.\u00a0The bitmap_allocator\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Multiple Thread Example</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_ex_single.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.example_multi\"></a>Multiple Thread Example</h2></div></div></div><p>\n In the ST example we never used the thread_id variable present in each block.\n Let's start by explaining the purpose of this in a MT application.\n </p><p>\n@@ -103,4 +103,4 @@\n a threads freelist mentioned above). The \"formula\" used can probably\n be improved to further reduce the risk of blocks being \"bounced back\n and forth\" between freelists.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_ex_single.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"mt_allocator.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Single Thread Example\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a021.\u00a0The bitmap_allocator</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_ex_single.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"mt_allocator.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Single Thread Example\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a020.\u00a0The bitmap_allocator</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "6934ec3aca9cde7d09016d3d902b35f4cf27bf34", "filename": "libstdc++-v3/doc/html/manual/mt_allocator_ex_single.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_ex_single.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_ex_single.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_ex_single.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Single Thread Example</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator_impl.html\" title=\"Implementation\" /><link rel=\"next\" href=\"mt_allocator_ex_multi.html\" title=\"Multiple Thread Example\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Single Thread Example</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_impl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a020.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_ex_multi.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.example_single\"></a>Single Thread Example</h2></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Single Thread Example</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator_impl.html\" title=\"Implementation\" /><link rel=\"next\" href=\"mt_allocator_ex_multi.html\" title=\"Multiple Thread Example\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Single Thread Example</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_impl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_ex_multi.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.example_single\"></a>Single Thread Example</h2></div></div></div><p>\n Let's start by describing how the data on a freelist is laid out in memory.\n This is the first two blocks in freelist for thread id 3 in bin 3 (8 bytes):\n </p><pre class=\"programlisting\">"}, {"sha": "2e5926add0056d266ed7e82a0681420976ec255f", "filename": "libstdc++-v3/doc/html/manual/mt_allocator_impl.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_impl.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_impl.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmt_allocator_impl.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a020.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator_design.html\" title=\"Design Issues\" /><link rel=\"next\" href=\"mt_allocator_ex_single.html\" title=\"Single Thread Example\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_design.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a020.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_ex_single.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.tune\"></a>Tunable Parameters</h3></div></div></div><p>Certain allocation parameters can be modified, or tuned. There\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, allocator\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\" /><link rel=\"prev\" href=\"mt_allocator_design.html\" title=\"Design Issues\" /><link rel=\"next\" href=\"mt_allocator_ex_single.html\" title=\"Single Thread Example\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"mt_allocator_design.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a019.\u00a0The mt_allocator</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator_ex_single.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"allocator.mt.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.tune\"></a>Tunable Parameters</h3></div></div></div><p>Certain allocation parameters can be modified, or tuned. There\n exists a nested <code class=\"code\">struct __pool_base::_Tune</code> that contains all\n these parameters, which include settings for\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>Alignment</p></li><li class=\"listitem\"><p>Maximum bytes before calling <code class=\"code\">::operator new</code> directly</p></li><li class=\"listitem\"><p>Minimum bytes</p></li><li class=\"listitem\"><p>Size of underlying global allocations</p></li><li class=\"listitem\"><p>Maximum number of supported threads</p></li><li class=\"listitem\"><p>Migration of deallocations to the global free list</p></li><li class=\"listitem\"><p>Shunt for global <code class=\"code\">new</code> and <code class=\"code\">delete</code></p></li></ul></div><p>Adjusting parameters for a given instance of an allocator can only"}, {"sha": "912c6ef2e8135b26c4fd7fa6dbea0e41b1f19297", "filename": "libstdc++-v3/doc/html/manual/parallel_mode_test.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode_test.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Testing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"C++, library, parallel\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"parallel_mode_design.html\" title=\"Design\" /><link rel=\"next\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Testing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode_design.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"profile_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.test\"></a>Testing</h2></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Testing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"C++, library, parallel\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"parallel_mode_design.html\" title=\"Design\" /><link rel=\"next\" href=\"mt_allocator.html\" title=\"Chapter\u00a019.\u00a0The mt_allocator\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Testing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode_design.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a018.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.test\"></a>Testing</h2></div></div></div><p>\n     Both the normal conformance and regression tests and the\n     supplemental performance tests work.\n   </p><p>\n@@ -22,4 +22,4 @@\n     additional software dependencies than the usual bare-boned text\n     file, and can be generated by using the <code class=\"code\">make\n     doc-performance</code> rule in the testsuite's Makefile.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode_design.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"profile_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a019.\u00a0Profile Mode</td></tr></table></div></body></html>\n\\ No newline at end of file\n+</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"parallel_mode_design.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"parallel_mode.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"mt_allocator.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Design\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a019.\u00a0The mt_allocator</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "6e454bd7f52c69eb43d3d8ec71aa494c153e6ced", "filename": "libstdc++-v3/doc/html/manual/policy_based_data_structures_test.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_based_data_structures_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_based_data_structures_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_based_data_structures_test.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Testing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a022.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_data_structures_design.html\" title=\"Design\" /><link rel=\"next\" href=\"policy_data_structures_ack.html\" title=\"Acknowledgments\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Testing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures_design.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a022.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_ack.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"pbds.test\"></a>Testing</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.test.regression\"></a>Regression</h3></div></div></div><p>The library contains a single comprehensive regression test.\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Testing</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a021.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_data_structures_design.html\" title=\"Design\" /><link rel=\"next\" href=\"policy_data_structures_ack.html\" title=\"Acknowledgments\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Testing</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures_design.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_ack.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"pbds.test\"></a>Testing</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.test.regression\"></a>Regression</h3></div></div></div><p>The library contains a single comprehensive regression test.\n     For a given container type in this library, the test creates\n     an object of the container type and an object of the\n     corresponding standard type (e.g., <code class=\"classname\">std::set</code>). It"}, {"sha": "5744ffee37a6b07727b8cf75ce54fc882f1ba1dc", "filename": "libstdc++-v3/doc/html/manual/policy_data_structures.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a022.\u00a0Policy-Based Data Structures</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bitmap_allocator_impl.html\" title=\"Implementation\" /><link rel=\"next\" href=\"policy_data_structures_using.html\" title=\"Using\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a022.\u00a0Policy-Based Data Structures</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator_impl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a021.\u00a0Policy-Based Data Structures</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"bitmap_allocator_impl.html\" title=\"Implementation\" /><link rel=\"next\" href=\"policy_data_structures_using.html\" title=\"Using\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a021.\u00a0Policy-Based Data Structures</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator_impl.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_using.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers.pbds\"></a>Chapter\u00a022.\u00a0Policy-Based Data Structures</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_using.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers.pbds\"></a>Chapter\u00a021.\u00a0Policy-Based Data Structures</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro\">Intro</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues\">Performance Issues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.issues.priority_queue\">Priority Que</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation\">Goals</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.associative\">Associative</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.iterators\">Iterators</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.associative.functions\">Functional</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures.html#pbds.intro.motivation.priority_queue\">Priority Queues</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.policy\">Policy Choices</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.underlying\">Underlying Data Structures</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures.html#motivation.priority_queue.binary_heap\">Binary Heaps</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.organization\">Organization</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial\">Tutorial</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.basic\">Basic Use</a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.configuring\">\n \t    Configuring via Template Parameters\n \t  </a></span></dt><dt><span class=\"section\"><a href=\"policy_data_structures_using.html#pbds.using.tutorial.traits\">\n \t    Querying Container Attributes\n@@ -248,15 +248,15 @@\n \t\tthese invariants, one must supply some policy that is aware\n \t\tof these changes.  Without this, it would be better to use a\n \t\tlinked list (in itself very efficient for these purposes).\n-\t      </p></li></ol></div><div class=\"figure\"><a id=\"id-1.3.5.9.2.5.3.3.4\"></a><p class=\"title\"><strong>Figure\u00a022.1.\u00a0Node Invariants</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_node_invariants.png\" align=\"middle\" alt=\"Node Invariants\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"motivation.associative.underlying\"></a>Underlying Data Structures</h5></div></div></div><p>\n+\t      </p></li></ol></div><div class=\"figure\"><a id=\"id-1.3.5.8.2.5.3.3.4\"></a><p class=\"title\"><strong>Figure\u00a021.1.\u00a0Node Invariants</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_node_invariants.png\" align=\"middle\" alt=\"Node Invariants\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"motivation.associative.underlying\"></a>Underlying Data Structures</h5></div></div></div><p>\n \t    The standard C++ library contains associative containers based on\n \t    red-black trees and collision-chaining hash tables. These are\n \t    very useful, but they are not ideal for all types of\n \t    settings.\n \t  </p><p>\n \t    The figure below shows the different underlying data structures\n \t    currently supported in this library.\n-\t  </p><div class=\"figure\"><a id=\"id-1.3.5.9.2.5.3.4.4\"></a><p class=\"title\"><strong>Figure\u00a022.2.\u00a0Underlying Associative Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_different_underlying_dss_1.png\" align=\"middle\" alt=\"Underlying Associative Data Structures\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t  </p><div class=\"figure\"><a id=\"id-1.3.5.8.2.5.3.4.4\"></a><p class=\"title\"><strong>Figure\u00a021.2.\u00a0Underlying Associative Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_different_underlying_dss_1.png\" align=\"middle\" alt=\"Underlying Associative Data Structures\" /></div></div></div><br class=\"figure-break\" /><p>\n \t    A shows a collision-chaining hash-table, B shows a probing\n \t    hash-table, C shows a red-black tree, D shows a splay tree, E shows\n \t    a tree based on an ordered vector(implicit in the order of the\n@@ -375,7 +375,7 @@\n \t      no guarantee that the elements traversed will coincide with the\n \t      <span class=\"emphasis\"><em>logical</em></span> elements between 1 and 5, as in\n \t      label B.\n-\t    </p><div class=\"figure\"><a id=\"id-1.3.5.9.2.5.3.5.4.5\"></a><p class=\"title\"><strong>Figure\u00a022.3.\u00a0Range Iteration in Different Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_point_iterators_range_ops_1.png\" align=\"middle\" alt=\"Node Invariants\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t    </p><div class=\"figure\"><a id=\"id-1.3.5.8.2.5.3.5.4.5\"></a><p class=\"title\"><strong>Figure\u00a021.3.\u00a0Range Iteration in Different Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_point_iterators_range_ops_1.png\" align=\"middle\" alt=\"Node Invariants\" /></div></div></div><br class=\"figure-break\" /><p>\n \t      In our opinion, this problem is not caused just because\n \t      red-black trees are order preserving while\n \t      collision-chaining hash tables are (generally) not - it\n@@ -426,7 +426,7 @@\n \t      list, as in the graphic below, label B.  Here the iterators are as\n \t      light as can be, but the hash-table's operations are more\n \t      complicated.\n-\t    </p><div class=\"figure\"><a id=\"id-1.3.5.9.2.5.3.5.5.7\"></a><p class=\"title\"><strong>Figure\u00a022.4.\u00a0Point Iteration in Hash Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_point_iterators_range_ops_2.png\" align=\"middle\" alt=\"Point Iteration in Hash Data Structures\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t    </p><div class=\"figure\"><a id=\"id-1.3.5.8.2.5.3.5.5.7\"></a><p class=\"title\"><strong>Figure\u00a021.4.\u00a0Point Iteration in Hash Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_point_iterators_range_ops_2.png\" align=\"middle\" alt=\"Point Iteration in Hash Data Structures\" /></div></div></div><br class=\"figure-break\" /><p>\n \t      It should be noted that containers based on collision-chaining\n \t      hash-tables are not the only ones with this type of behavior;\n \t      many other self-organizing data structures display it as well.\n@@ -442,7 +442,7 @@\n \t      container. The graphic below shows three cases: A1 and A2 show\n \t      a red-black tree; B1 and B2 show a probing hash-table; C1 and C2\n \t      show a collision-chaining hash table.\n-\t    </p><div class=\"figure\"><a id=\"id-1.3.5.9.2.5.3.5.6.6\"></a><p class=\"title\"><strong>Figure\u00a022.5.\u00a0Effect of erase in different underlying data structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_invalidation_guarantee_erase.png\" align=\"middle\" alt=\"Effect of erase in different underlying data structures\" /></div></div></div><br class=\"figure-break\" /><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n+\t    </p><div class=\"figure\"><a id=\"id-1.3.5.8.2.5.3.5.6.6\"></a><p class=\"title\"><strong>Figure\u00a021.5.\u00a0Effect of erase in different underlying data structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_invalidation_guarantee_erase.png\" align=\"middle\" alt=\"Effect of erase in different underlying data structures\" /></div></div></div><br class=\"figure-break\" /><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n \t\t  Erasing 5 from A1 yields A2. Clearly, an iterator to 3 can\n \t\t  be de-referenced and incremented. The sequence of iterators\n \t\t  changed, but in a way that is well-defined by the interface.\n@@ -678,7 +678,7 @@\n \t    typically less structured than an associative container's tree;\n \t    the third simply uses an associative container. These are\n \t    shown in the figure below with labels A1 and A2, B, and C.\n-\t  </p><div class=\"figure\"><a id=\"id-1.3.5.9.2.5.4.3.3\"></a><p class=\"title\"><strong>Figure\u00a022.6.\u00a0Underlying Priority Queue Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_different_underlying_dss_2.png\" align=\"middle\" alt=\"Underlying Priority Queue Data Structures\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t  </p><div class=\"figure\"><a id=\"id-1.3.5.8.2.5.4.3.3\"></a><p class=\"title\"><strong>Figure\u00a021.6.\u00a0Underlying Priority Queue Data Structures</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_different_underlying_dss_2.png\" align=\"middle\" alt=\"Underlying Priority Queue Data Structures\" /></div></div></div><br class=\"figure-break\" /><p>\n \t    No single implementation can completely replace any of the\n \t    others. Some have better <code class=\"function\">push</code>\n \t    and <code class=\"function\">pop</code> amortized performance, some have"}, {"sha": "e8a8dceaa7ab324f89be46b6a7ccf98d2707886b", "filename": "libstdc++-v3/doc/html/manual/policy_data_structures_ack.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_ack.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_ack.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_ack.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Acknowledgments</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a022.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_based_data_structures_test.html\" title=\"Testing\" /><link rel=\"next\" href=\"ext_containers.html\" title=\"Chapter\u00a023.\u00a0HP/SGI Extensions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Acknowledgments</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_based_data_structures_test.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a022.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"pbds.ack\"></a>Acknowledgments</h2></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Acknowledgments</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a021.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_based_data_structures_test.html\" title=\"Testing\" /><link rel=\"next\" href=\"ext_containers.html\" title=\"Chapter\u00a022.\u00a0HP/SGI Extensions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Acknowledgments</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_based_data_structures_test.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"pbds.ack\"></a>Acknowledgments</h2></div></div></div><p>\n       Written by Ami Tavory and Vladimir Dreizin (IBM Haifa Research\n       Laboratories), and Benjamin Kosnik (Red Hat).\n     </p><p>\n@@ -24,4 +24,4 @@\n       attributing to him any flaws in the design or implementation of the\n       library).\n     </p><p>We would like to thank Matt Austern for the suggestion to\n-    include tries.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"policy_based_data_structures_test.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"policy_data_structures.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Testing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a023.\u00a0HP/SGI Extensions</td></tr></table></div></body></html>\n\\ No newline at end of file\n+    include tries.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"policy_based_data_structures_test.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"policy_data_structures.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_containers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Testing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a022.\u00a0HP/SGI Extensions</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "611b2e76ee9b79ddc5b0624656302d9fdd1781ff", "filename": "libstdc++-v3/doc/html/manual/policy_data_structures_design.html", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_design.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_design.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_design.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a022.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_data_structures_using.html\" title=\"Using\" /><link rel=\"next\" href=\"policy_based_data_structures_test.html\" title=\"Testing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures_using.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a022.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_based_data_structures_test.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.pbds.design\"></a>Design</h2></div></div></div><p></p><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.design.concepts\"></a>Concepts</h3></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"pbds.design.concepts.null_type\"></a>Null Policy Classes</h4></div></div></div><p>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a021.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_data_structures_using.html\" title=\"Using\" /><link rel=\"next\" href=\"policy_based_data_structures_test.html\" title=\"Testing\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures_using.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_based_data_structures_test.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.pbds.design\"></a>Design</h2></div></div></div><p></p><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.design.concepts\"></a>Concepts</h3></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"pbds.design.concepts.null_type\"></a>Null Policy Classes</h4></div></div></div><p>\n \tAssociative containers are typically parametrized by various\n \tpolicies. For example, a hash-based associative container is\n \tparametrized by a hash-functor, transforming each key into an\n@@ -170,15 +170,15 @@\n \t  naturally; collision-chaining hash tables (label B) store\n \t  equivalent-key values in the same bucket, the bucket can be\n \t  arranged so that equivalent-key values are consecutive.\n-\t</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.3.3.3.14\"></a><p class=\"title\"><strong>Figure\u00a022.8.\u00a0Non-unique Mapping Standard Containers</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_embedded_lists_1.png\" align=\"middle\" alt=\"Non-unique Mapping Standard Containers\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.3.3.3.14\"></a><p class=\"title\"><strong>Figure\u00a021.8.\u00a0Non-unique Mapping Standard Containers</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_embedded_lists_1.png\" align=\"middle\" alt=\"Non-unique Mapping Standard Containers\" /></div></div></div><br class=\"figure-break\" /><p>\n \t  Put differently, the standards' non-unique mapping\n \t  associative-containers are associative containers that map\n \t  primary keys to linked lists that are embedded into the\n \t  container. The graphic below shows again the two\n \t  containers from the first graphic above, this time with\n \t  the embedded linked lists of the grayed nodes marked\n \t  explicitly.\n-\t</p><div class=\"figure\"><a id=\"fig.pbds_embedded_lists_2\"></a><p class=\"title\"><strong>Figure\u00a022.9.\u00a0\n+\t</p><div class=\"figure\"><a id=\"fig.pbds_embedded_lists_2\"></a><p class=\"title\"><strong>Figure\u00a021.9.\u00a0\n \t    Effect of embedded lists in\n \t    <code class=\"classname\">std::multimap</code>\n \t  </strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_embedded_lists_2.png\" align=\"middle\" alt=\"Effect of embedded lists in std::multimap\" /></div></div></div><br class=\"figure-break\" /><p>\n@@ -252,7 +252,7 @@\n \t  first graphic above. Labels A and B, respectively. Each shaded\n \t  box represents some size-type or secondary\n \t  associative-container.\n-\t</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.3.3.3.23\"></a><p class=\"title\"><strong>Figure\u00a022.10.\u00a0Non-unique Mapping Containers</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_embedded_lists_3.png\" align=\"middle\" alt=\"Non-unique Mapping Containers\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.3.3.3.23\"></a><p class=\"title\"><strong>Figure\u00a021.10.\u00a0Non-unique Mapping Containers</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_embedded_lists_3.png\" align=\"middle\" alt=\"Non-unique Mapping Containers\" /></div></div></div><br class=\"figure-break\" /><p>\n \t  In the first example above, then, one would use an associative\n \t  container mapping each user to an associative container which\n \t  maps each application id to a start time (see\n@@ -305,7 +305,7 @@\n \tshows invariants for order-preserving containers: point-type\n \titerators are synonymous with range-type iterators.\n \tOrthogonally,  <span class=\"emphasis\"><em>C</em></span>shows invariants for \"set\"\n-\tcontainers: iterators are synonymous with const iterators.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.3.4.3.5\"></a><p class=\"title\"><strong>Figure\u00a022.11.\u00a0Point Iterator Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_point_iterator_hierarchy.png\" align=\"middle\" alt=\"Point Iterator Hierarchy\" /></div></div></div><br class=\"figure-break\" /><p>Note that point-type iterators in self-organizing containers\n+\tcontainers: iterators are synonymous with const iterators.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.3.4.3.5\"></a><p class=\"title\"><strong>Figure\u00a021.11.\u00a0Point Iterator Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_point_iterator_hierarchy.png\" align=\"middle\" alt=\"Point Iterator Hierarchy\" /></div></div></div><br class=\"figure-break\" /><p>Note that point-type iterators in self-organizing containers\n \t(hash-based associative containers) lack movement\n \toperators, such as <code class=\"literal\">operator++</code> - in fact, this\n \tis the reason why this library differentiates from the standard C++ librarys\n@@ -344,7 +344,7 @@\n \t  to the question of whether point-type iterators and range-type\n \t  iterators are valid. The graphic below shows tags corresponding to\n \t  different types of invalidation guarantees.\n-\t</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.3.4.4.5\"></a><p class=\"title\"><strong>Figure\u00a022.12.\u00a0Invalidation Guarantee Tags Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_invalidation_tag_hierarchy.png\" align=\"middle\" alt=\"Invalidation Guarantee Tags Hierarchy\" /></div></div></div><br class=\"figure-break\" /><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>\n+\t</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.3.4.4.5\"></a><p class=\"title\"><strong>Figure\u00a021.12.\u00a0Invalidation Guarantee Tags Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_invalidation_tag_hierarchy.png\" align=\"middle\" alt=\"Invalidation Guarantee Tags Hierarchy\" /></div></div></div><br class=\"figure-break\" /><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>\n \t      <code class=\"classname\">basic_invalidation_guarantee</code>\n \t      corresponds to a basic guarantee that a point-type iterator,\n \t      a found pointer, or a found reference, remains valid as long\n@@ -428,7 +428,7 @@\n \t</p><p>\n \t  This library contains a container tag hierarchy corresponding to the\n \t  diagram below.\n-\t</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.3.5.7.4\"></a><p class=\"title\"><strong>Figure\u00a022.13.\u00a0Container Tag Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_container_tag_hierarchy.png\" align=\"middle\" alt=\"Container Tag Hierarchy\" /></div></div></div><br class=\"figure-break\" /><p>\n+\t</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.3.5.7.4\"></a><p class=\"title\"><strong>Figure\u00a021.13.\u00a0Container Tag Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_container_tag_hierarchy.png\" align=\"middle\" alt=\"Container Tag Hierarchy\" /></div></div></div><br class=\"figure-break\" /><p>\n \t  Given any container <span class=\"type\">Cntnr</span>, the tag of\n \t  the underlying data structure can be found via <code class=\"literal\">typename\n \t  Cntnr::container_category</code>.\n@@ -487,7 +487,7 @@\n \tcollision-chaining container, except for the following.</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p><code class=\"classname\">Comb_Probe_Fn</code> describes how to transform a probe\n \t  sequence into a sequence of positions within the table.</p></li><li class=\"listitem\"><p><code class=\"classname\">Probe_Fn</code> describes a probe sequence policy.</p></li></ol></div><p>Some of the default template values depend on the values of\n \tother parameters, and are explained below.</p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"container.hash.details\"></a>Details</h5></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.hash.details.hash_policies\"></a>Hash Policies</h6></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"details.hash_policies.general\"></a>General</h6></div></div></div><p>Following is an explanation of some functions which hashing\n-\t    involves. The graphic below illustrates the discussion.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.2.2.3\"></a><p class=\"title\"><strong>Figure\u00a022.14.\u00a0Hash functions, ranged-hash functions, and\n+\t    involves. The graphic below illustrates the discussion.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.2.2.3\"></a><p class=\"title\"><strong>Figure\u00a021.14.\u00a0Hash functions, ranged-hash functions, and\n \t      range-hashing functions</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_ranged_hash_range_hashing_fns.png\" align=\"middle\" alt=\"Hash functions, ranged-hash functions, and range-hashing functions\" /></div></div></div><br class=\"figure-break\" /><p>Let U be a domain (e.g., the integers, or the\n \t    strings of 3 characters). A hash-table algorithm needs to map\n \t    elements of U \"uniformly\" into the range [0,..., m -\n@@ -504,7 +504,7 @@\n \t    Z<sub>+</sub>,</p><p>which maps a non-negative hash value, and a non-negative\n \t    range upper-bound into a non-negative integral in the range\n \t    between 0 (inclusive) and the range upper bound (exclusive),\n-\t    i.e., for any r in Z<sub>+</sub>,</p><p>0 \u2264 g(r, m) \u2264 m - 1</p><p>The resulting ranged-hash function, is</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.2.2.15\"></a><p class=\"title\"><strong>Equation\u00a022.1.\u00a0Ranged Hash Function</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n+\t    i.e., for any r in Z<sub>+</sub>,</p><p>0 \u2264 g(r, m) \u2264 m - 1</p><p>The resulting ranged-hash function, is</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.2.2.15\"></a><p class=\"title\"><strong>Equation\u00a021.1.\u00a0Ranged Hash Function</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tf(u , m) = g(h(u), m)\n \t      </span></div></div><br class=\"equation-break\" /><p>From the above, it is obvious that given g and\n \t    h, f can always be composed (however the converse\n@@ -524,7 +524,7 @@\n \t    transforming the sequence of hash values into a sequence of\n \t    positions.</p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"details.hash_policies.range\"></a>Range Hashing</h6></div></div></div><p>Some common choices for range-hashing functions are the\n \t    division, multiplication, and middle-square methods (<a class=\"xref\" href=\"policy_data_structures.html#biblio.knuth98sorting\" title=\"The Art of Computer Programming - Sorting and Searching\">[biblio.knuth98sorting]</a>), defined\n-\t    as</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.2.3.3\"></a><p class=\"title\"><strong>Equation\u00a022.2.\u00a0Range-Hashing, Division Method</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n+\t    as</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.2.3.3\"></a><p class=\"title\"><strong>Equation\u00a021.2.\u00a0Range-Hashing, Division Method</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tg(r, m) = r mod m\n \t      </span></div></div><br class=\"equation-break\" /><p>g(r, m) = \u2308 u/v ( a r mod v ) \u2309</p><p>and</p><p>g(r, m) = \u2308 u/v ( r<sup>2</sup> mod v ) \u2309</p><p>respectively, for some positive integrals u and\n \t    v (typically powers of 2), and some a. Each of\n@@ -535,9 +535,9 @@\n \t    implement using the low\n \t    level % (modulo) operation (for any m), or the\n \t    low level &amp; (bit-mask) operation (for the case where\n-\t    m is a power of 2), i.e.,</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.2.3.9\"></a><p class=\"title\"><strong>Equation\u00a022.3.\u00a0Division via Prime Modulo</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n+\t    m is a power of 2), i.e.,</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.2.3.9\"></a><p class=\"title\"><strong>Equation\u00a021.3.\u00a0Division via Prime Modulo</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tg(r, m) = r % m\n-\t      </span></div></div><br class=\"equation-break\" /><p>and</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.2.3.11\"></a><p class=\"title\"><strong>Equation\u00a022.4.\u00a0Division via Bit Mask</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n+\t      </span></div></div><br class=\"equation-break\" /><p>and</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.2.3.11\"></a><p class=\"title\"><strong>Equation\u00a021.4.\u00a0Division via Bit Mask</strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tg(r, m) = r &amp; m - 1, (with m =\n \t\t2<sup>k</sup> for some k)\n \t      </span></div></div><br class=\"equation-break\" /><p>respectively.</p><p>The % (modulo) implementation has the advantage that for\n@@ -563,7 +563,7 @@\n \t      s = [ s<sub>0</sub>,..., s<sub>t - 1</sub>]\n \t    </p><p>be a string of t characters, each of which is from\n \t    domain S. Consider the following ranged-hash\n-\t    function:</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.2.4.7\"></a><p class=\"title\"><strong>Equation\u00a022.5.\u00a0\n+\t    function:</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.2.4.7\"></a><p class=\"title\"><strong>Equation\u00a021.5.\u00a0\n \t\tA Standard String Hash Function\n \t      </strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tf<sub>1</sub>(s, m) = \u2211 <sub>i =\n@@ -575,7 +575,7 @@\n \t    of a long DNA sequence (and so S = {'A', 'C', 'G',\n \t    'T'}). In this case, scanning the entire string might be\n \t    prohibitively expensive. A possible alternative might be to use\n-\t    only the first k characters of the string, where</p><p>|S|<sup>k</sup> \u2265 m ,</p><p>i.e., using the hash function</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.2.4.12\"></a><p class=\"title\"><strong>Equation\u00a022.6.\u00a0\n+\t    only the first k characters of the string, where</p><p>|S|<sup>k</sup> \u2265 m ,</p><p>i.e., using the hash function</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.2.4.12\"></a><p class=\"title\"><strong>Equation\u00a021.6.\u00a0\n \t\tOnly k String DNA Hash\n \t      </strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tf<sub>2</sub>(s, m) = \u2211 <sub>i\n@@ -606,12 +606,12 @@\n \t      the container transforms the key into a non-negative integral\n \t      using the hash functor (points B and C), and transforms the\n \t      result into a position using the combining functor (points D\n-\t      and E).</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.2.5.3.4\"></a><p class=\"title\"><strong>Figure\u00a022.15.\u00a0Insert hash sequence diagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_range_hashing_seq_diagram.png\" align=\"middle\" alt=\"Insert hash sequence diagram\" /></div></div></div><br class=\"figure-break\" /><p>If <code class=\"classname\">cc_hash_table</code>'s\n+\t      and E).</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.2.5.3.4\"></a><p class=\"title\"><strong>Figure\u00a021.15.\u00a0Insert hash sequence diagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_range_hashing_seq_diagram.png\" align=\"middle\" alt=\"Insert hash sequence diagram\" /></div></div></div><br class=\"figure-break\" /><p>If <code class=\"classname\">cc_hash_table</code>'s\n \t      hash-functor, <code class=\"classname\">Hash_Fn</code> is instantiated by <code class=\"classname\">null_type</code> , then <code class=\"classname\">Comb_Hash_Fn</code> is taken to be\n \t      a ranged-hash function. The graphic below shows an <code class=\"function\">insert</code> sequence\n \t      diagram. The user inserts an element (point A), the container\n \t      transforms the key into a position using the combining functor\n-\t      (points B and C).</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.2.5.3.6\"></a><p class=\"title\"><strong>Figure\u00a022.16.\u00a0Insert hash sequence diagram with a null policy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_range_hashing_seq_diagram2.png\" align=\"middle\" alt=\"Insert hash sequence diagram with a null policy\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"hash_policies.implementation.probe\"></a>\n+\t      (points B and C).</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.2.5.3.6\"></a><p class=\"title\"><strong>Figure\u00a021.16.\u00a0Insert hash sequence diagram with a null policy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_range_hashing_seq_diagram2.png\" align=\"middle\" alt=\"Insert hash sequence diagram with a null policy\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"hash_policies.implementation.probe\"></a>\n \t\tProbing tables\n \t      </h6></div></div></div><p><code class=\"classname\">gp_hash_table</code> is parametrized by\n \t      <code class=\"classname\">Hash_Fn</code>, <code class=\"classname\">Probe_Fn</code>,\n@@ -634,7 +634,7 @@\n \t\ta linear probe and a quadratic probe function,\n \t\trespectively.</p></li></ol></div><p>\n \t\tThe graphic below shows the relationships.\n-\t      </p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.2.5.5.5\"></a><p class=\"title\"><strong>Figure\u00a022.17.\u00a0Hash policy class diagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_policy_cd.png\" align=\"middle\" alt=\"Hash policy class diagram\" /></div></div></div><br class=\"figure-break\" /></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.hash.details.resize_policies\"></a>Resize Policies</h6></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"resize_policies.general\"></a>General</h6></div></div></div><p>Hash-tables, as opposed to trees, do not naturally grow or\n+\t      </p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.2.5.5.5\"></a><p class=\"title\"><strong>Figure\u00a021.17.\u00a0Hash policy class diagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_hash_policy_cd.png\" align=\"middle\" alt=\"Hash policy class diagram\" /></div></div></div><br class=\"figure-break\" /></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.hash.details.resize_policies\"></a>Resize Policies</h6></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"resize_policies.general\"></a>General</h6></div></div></div><p>Hash-tables, as opposed to trees, do not naturally grow or\n \t    shrink. It is necessary to specify policies to determine how\n \t    and when a hash table should change its size. Usually, resize\n \t    policies can be decomposed into orthogonal policies:</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>A size policy indicating how a hash table\n@@ -667,10 +667,10 @@\n \t    and some load factor be denoted by \u0391. We would like to\n \t    calculate the minimal length of k, such that if there were \u0391\n \t    m elements in the hash table, a probe sequence of length k would\n-\t    be found with probability at most 1/m.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.3.4.7\"></a><p class=\"title\"><strong>Figure\u00a022.18.\u00a0Balls and bins</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_balls_and_bins.png\" align=\"middle\" alt=\"Balls and bins\" /></div></div></div><br class=\"figure-break\" /><p>Denote the probability that a probe sequence of length\n+\t    be found with probability at most 1/m.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.3.4.7\"></a><p class=\"title\"><strong>Figure\u00a021.18.\u00a0Balls and bins</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_balls_and_bins.png\" align=\"middle\" alt=\"Balls and bins\" /></div></div></div><br class=\"figure-break\" /><p>Denote the probability that a probe sequence of length\n \t    k appears in bin i by p<sub>i</sub>, the\n \t    length of the probe sequence of bin i by\n-\t    l<sub>i</sub>, and assume uniform distribution. Then</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.3.4.9\"></a><p class=\"title\"><strong>Equation\u00a022.7.\u00a0\n+\t    l<sub>i</sub>, and assume uniform distribution. Then</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.3.4.9\"></a><p class=\"title\"><strong>Equation\u00a021.7.\u00a0\n \t\tProbability of Probe Sequence of Length k\n \t      </strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tp<sub>1</sub> = \n@@ -684,7 +684,7 @@\n \t    l<sub>i</sub> are negatively-dependent\n \t    (<a class=\"xref\" href=\"policy_data_structures.html#biblio.dubhashi98neg\" title=\"Balls and bins: A study in negative dependence\">[biblio.dubhashi98neg]</a>)\n \t    . Let\n-\t    I(.) denote the indicator function. Then</p><div class=\"equation\"><a id=\"id-1.3.5.9.4.4.2.3.3.4.14\"></a><p class=\"title\"><strong>Equation\u00a022.8.\u00a0\n+\t    I(.) denote the indicator function. Then</p><div class=\"equation\"><a id=\"id-1.3.5.8.4.4.2.3.3.4.14\"></a><p class=\"title\"><strong>Equation\u00a021.8.\u00a0\n \t\tProbability Probe Sequence in Some Bin\n \t      </strong></p><div class=\"equation-contents\"><span class=\"mathphrase\">\n \t\tP( exists<sub>i</sub> l<sub>i</sub> \u2265 k ) = \n@@ -723,7 +723,7 @@\n \t      a resize is needed, and if so, what is the new size (points D\n \t      to G); following the resize, it notifies the policy that a\n \t      resize has completed (point H); finally, the element is\n-\t      inserted, and the policy notified (point I).</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.3.5.3.6\"></a><p class=\"title\"><strong>Figure\u00a022.19.\u00a0Insert resize sequence diagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_insert_resize_sequence_diagram1.png\" align=\"middle\" alt=\"Insert resize sequence diagram\" /></div></div></div><br class=\"figure-break\" /><p>In practice, a resize policy can be usually orthogonally\n+\t      inserted, and the policy notified (point I).</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.3.5.3.6\"></a><p class=\"title\"><strong>Figure\u00a021.19.\u00a0Insert resize sequence diagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_insert_resize_sequence_diagram1.png\" align=\"middle\" alt=\"Insert resize sequence diagram\" /></div></div></div><br class=\"figure-break\" /><p>In practice, a resize policy can be usually orthogonally\n \t      decomposed to a size policy and a trigger policy. Consequently,\n \t      the library contains a single class for instantiating a resize\n \t      policy: <code class=\"classname\">hash_standard_resize_policy</code>\n@@ -732,8 +732,8 @@\n \t      both, and acts as a standard delegate (<a class=\"xref\" href=\"policy_data_structures.html#biblio.gof\" title=\"Design Patterns - Elements of Reusable Object-Oriented Software\">[biblio.gof]</a>)\n \t      to these policies.</p><p>The two graphics immediately below show sequence diagrams\n \t      illustrating the interaction between the standard resize policy\n-\t      and its trigger and size policies, respectively.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.3.5.3.9\"></a><p class=\"title\"><strong>Figure\u00a022.20.\u00a0Standard resize policy trigger sequence\n-\t\tdiagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_insert_resize_sequence_diagram2.png\" align=\"middle\" alt=\"Standard resize policy trigger sequence diagram\" /></div></div></div><br class=\"figure-break\" /><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.2.3.3.5.3.10\"></a><p class=\"title\"><strong>Figure\u00a022.21.\u00a0Standard resize policy size sequence\n+\t      and its trigger and size policies, respectively.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.3.5.3.9\"></a><p class=\"title\"><strong>Figure\u00a021.20.\u00a0Standard resize policy trigger sequence\n+\t\tdiagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_insert_resize_sequence_diagram2.png\" align=\"middle\" alt=\"Standard resize policy trigger sequence diagram\" /></div></div></div><br class=\"figure-break\" /><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.2.3.3.5.3.10\"></a><p class=\"title\"><strong>Figure\u00a021.21.\u00a0Standard resize policy size sequence\n \t\tdiagram</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_insert_resize_sequence_diagram3.png\" align=\"middle\" alt=\"Standard resize policy size sequence diagram\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"resize_policies.impl.predefined\"></a>Predefined Policies</h6></div></div></div><p>The library includes the following\n \t      instantiations of size and trigger policies:</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p><code class=\"classname\">hash_load_check_resize_trigger</code>\n \t\timplements a load check trigger policy.</p></li><li class=\"listitem\"><p><code class=\"classname\">cc_hash_max_collision_check_resize_trigger</code>\n@@ -876,7 +876,7 @@\n \t  each node, and maintains node invariants (see <a class=\"xref\" href=\"policy_data_structures.html#biblio.clrs2001\" title=\"Introduction to Algorithms, 2nd edition\">[biblio.clrs2001]</a>.) The first stores in\n \t  each node the size of the sub-tree rooted at the node; the\n \t  second stores at each node the maximal endpoint of the\n-\t  intervals at the sub-tree rooted at the node.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.3.3.2.5\"></a><p class=\"title\"><strong>Figure\u00a022.22.\u00a0Tree node invariants</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_tree_node_invariants.png\" align=\"middle\" alt=\"Tree node invariants\" /></div></div></div><br class=\"figure-break\" /><p>Supporting such trees is difficult for a number of\n+\t  intervals at the sub-tree rooted at the node.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.3.3.2.5\"></a><p class=\"title\"><strong>Figure\u00a021.22.\u00a0Tree node invariants</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_tree_node_invariants.png\" align=\"middle\" alt=\"Tree node invariants\" /></div></div></div><br class=\"figure-break\" /><p>Supporting such trees is difficult for a number of\n \t  reasons:</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>There must be a way to specify what a node's metadata\n \t    should be (if any).</p></li><li class=\"listitem\"><p>Various operations can invalidate node\n \t    invariants.  The graphic below shows how a right rotation,\n@@ -890,7 +890,7 @@\n \t    metadata.</p></li><li class=\"listitem\"><p>It is not feasible to know in advance which methods trees\n \t    can support. Besides the usual <code class=\"classname\">find</code> method, the\n \t    first tree can support a <code class=\"classname\">find_by_order</code> method, while\n-\t    the second can support an <code class=\"classname\">overlaps</code> method.</p></li></ol></div><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.3.3.2.8\"></a><p class=\"title\"><strong>Figure\u00a022.23.\u00a0Tree node invalidation</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_tree_node_invalidations.png\" align=\"middle\" alt=\"Tree node invalidation\" /></div></div></div><br class=\"figure-break\" /><p>These problems are solved by a combination of two means:\n+\t    the second can support an <code class=\"classname\">overlaps</code> method.</p></li></ol></div><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.3.3.2.8\"></a><p class=\"title\"><strong>Figure\u00a021.23.\u00a0Tree node invalidation</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_tree_node_invalidations.png\" align=\"middle\" alt=\"Tree node invalidation\" /></div></div></div><br class=\"figure-break\" /><p>These problems are solved by a combination of two means:\n \t  node iterators, and template-template node updater\n \t  parameters.</p><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.tree.node.iterators\"></a>Node Iterators</h6></div></div></div><p>Each tree-based container defines two additional iterator\n \t    types, <code class=\"classname\">const_node_iterator</code>\n@@ -919,7 +919,7 @@\n \t    <code class=\"classname\">node_update</code> class, and publicly subclasses\n \t    <code class=\"classname\">node_update</code>. The graphic below shows this\n \t    scheme, as well as some predefined policies (which are explained\n-\t    below).</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.3.3.2.11.3\"></a><p class=\"title\"><strong>Figure\u00a022.24.\u00a0A tree and its update policy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_tree_node_updator_policy_cd.png\" align=\"middle\" alt=\"A tree and its update policy\" /></div></div></div><br class=\"figure-break\" /><p><code class=\"classname\">node_update</code> (an instantiation of\n+\t    below).</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.3.3.2.11.3\"></a><p class=\"title\"><strong>Figure\u00a021.24.\u00a0A tree and its update policy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_tree_node_updator_policy_cd.png\" align=\"middle\" alt=\"A tree and its update policy\" /></div></div></div><br class=\"figure-break\" /><p><code class=\"classname\">node_update</code> (an instantiation of\n \t    <code class=\"classname\">Node_Update</code>) must define <code class=\"classname\">metadata_type</code> as\n \t    the type of metadata it requires. For order statistics,\n \t    e.g., <code class=\"classname\">metadata_type</code> might be <code class=\"classname\">size_t</code>.\n@@ -938,15 +938,15 @@\n \t    <code class=\"classname\">nd_it</code>. For example, say node x in the\n \t    graphic below label A has an invalid invariant, but its' children,\n \t    y and z have valid invariants. After the invocation, all three\n-\t    nodes should have valid invariants, as in label B.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.3.3.2.11.8\"></a><p class=\"title\"><strong>Figure\u00a022.25.\u00a0Restoring node invariants</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_restoring_node_invariants.png\" align=\"middle\" alt=\"Restoring node invariants\" /></div></div></div><br class=\"figure-break\" /><p>When a tree operation might invalidate some node invariant,\n+\t    nodes should have valid invariants, as in label B.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.3.3.2.11.8\"></a><p class=\"title\"><strong>Figure\u00a021.25.\u00a0Restoring node invariants</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_restoring_node_invariants.png\" align=\"middle\" alt=\"Restoring node invariants\" /></div></div></div><br class=\"figure-break\" /><p>When a tree operation might invalidate some node invariant,\n \t    it invokes this method in its <code class=\"classname\">node_update</code> base to\n \t    restore the invariant. For example, the graphic below shows\n \t    an <code class=\"function\">insert</code> operation (point A); the tree performs some\n \t    operations, and calls the update functor three times (points B,\n \t    C, and D). (It is well known that any <code class=\"function\">insert</code>,\n \t    <code class=\"function\">erase</code>, <code class=\"function\">split</code> or <code class=\"function\">join</code>, can restore\n \t    all node invariants by a small number of node invariant updates (<a class=\"xref\" href=\"policy_data_structures.html#biblio.clrs2001\" title=\"Introduction to Algorithms, 2nd edition\">[biblio.clrs2001]</a>)\n-\t    .</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.3.3.2.11.10\"></a><p class=\"title\"><strong>Figure\u00a022.26.\u00a0Insert update sequence</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_update_seq_diagram.png\" align=\"middle\" alt=\"Insert update sequence\" /></div></div></div><br class=\"figure-break\" /><p>To complete the description of the scheme, three questions\n+\t    .</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.3.3.2.11.10\"></a><p class=\"title\"><strong>Figure\u00a021.26.\u00a0Insert update sequence</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_update_seq_diagram.png\" align=\"middle\" alt=\"Insert update sequence\" /></div></div></div><br class=\"figure-break\" /><p>To complete the description of the scheme, three questions\n \t    need to be answered:</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>How can a tree which supports order statistics define a\n \t      method such as <code class=\"classname\">find_by_order</code>?</p></li><li class=\"listitem\"><p>How can the node updater base access methods of the\n \t      tree?</p></li><li class=\"listitem\"><p>How can the following cyclic dependency be resolved?\n@@ -988,7 +988,7 @@\n \t      node's metadata (this is halting reducible). In the graphic\n \t      below, assume the shaded node is inserted. The tree would have\n \t      to traverse the useless path shown to the root, applying\n-\t      redundant updates all the way.</p></li></ol></div><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.3.3.2.11.20\"></a><p class=\"title\"><strong>Figure\u00a022.27.\u00a0Useless update path</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_rationale_null_node_updator.png\" align=\"middle\" alt=\"Useless update path\" /></div></div></div><br class=\"figure-break\" /><p>A null policy class, <code class=\"classname\">null_node_update</code>\n+\t      redundant updates all the way.</p></li></ol></div><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.3.3.2.11.20\"></a><p class=\"title\"><strong>Figure\u00a021.27.\u00a0Useless update path</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_rationale_null_node_updator.png\" align=\"middle\" alt=\"Useless update path\" /></div></div></div><br class=\"figure-break\" /><p>A null policy class, <code class=\"classname\">null_node_update</code>\n \t    solves both these problems. The tree detects that node\n \t    invariants are irrelevant, and defines all accordingly.</p></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.tree.details.split\"></a>Split and Join</h6></div></div></div><p>Tree-based containers support split and join methods.\n \t  It is possible to split a tree so that it passes\n@@ -1071,7 +1071,7 @@\n \t  sub-tree with leafs \"a\" and \"as\". The maximal common prefix is\n \t  \"a\". The internal node contains, consequently, to const\n \t  iterators, one pointing to <code class=\"varname\">'a'</code>, and the other to\n-\t  <code class=\"varname\">'s'</code>.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.4.3.2.10\"></a><p class=\"title\"><strong>Figure\u00a022.28.\u00a0A PATRICIA trie</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_pat_trie.png\" align=\"middle\" alt=\"A PATRICIA trie\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.trie.details.node\"></a>Node Invariants</h6></div></div></div><p>Trie-based containers support node invariants, as do\n+\t  <code class=\"varname\">'s'</code>.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.4.3.2.10\"></a><p class=\"title\"><strong>Figure\u00a021.28.\u00a0A PATRICIA trie</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_pat_trie.png\" align=\"middle\" alt=\"A PATRICIA trie\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.trie.details.node\"></a>Node Invariants</h6></div></div></div><p>Trie-based containers support node invariants, as do\n \t  tree-based containers. There are two minor\n \t  differences, though, which, unfortunately, thwart sharing them\n \t  sharing the same node-updating policies:</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>A trie's <code class=\"classname\">Node_Update</code> template-template\n@@ -1080,7 +1080,7 @@\n \t    parametrized by <code class=\"classname\">Cmp_Fn</code>.</p></li><li class=\"listitem\"><p>Tree-based containers store values in all nodes, while\n \t    trie-based containers (at least in this implementation) store\n \t    values in leafs.</p></li></ol></div><p>The graphic below shows the scheme, as well as some predefined\n-\t  policies (which are explained below).</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.4.3.3.5\"></a><p class=\"title\"><strong>Figure\u00a022.29.\u00a0A trie and its update policy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_trie_node_updator_policy_cd.png\" align=\"middle\" alt=\"A trie and its update policy\" /></div></div></div><br class=\"figure-break\" /><p>This library offers the following pre-defined trie node\n+\t  policies (which are explained below).</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.4.3.3.5\"></a><p class=\"title\"><strong>Figure\u00a021.29.\u00a0A trie and its update policy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_trie_node_updator_policy_cd.png\" align=\"middle\" alt=\"A trie and its update policy\" /></div></div></div><br class=\"figure-break\" /><p>This library offers the following pre-defined trie node\n \t  updating policies:</p><div class=\"orderedlist\"><ol class=\"orderedlist\" type=\"1\"><li class=\"listitem\"><p>\n \t\t<code class=\"classname\">trie_order_statistics_node_update</code>\n \t\tsupports order statistics.\n@@ -1128,7 +1128,7 @@\n \t  simple list of integer keys. If we search for the integer 6, we\n \t  are paying an overhead: the link with key 6 is only the fifth\n \t  link; if it were the first link, it could be accessed\n-\t  faster.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.5.3.3.3\"></a><p class=\"title\"><strong>Figure\u00a022.30.\u00a0A simple list</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_simple_list.png\" align=\"middle\" alt=\"A simple list\" /></div></div></div><br class=\"figure-break\" /><p>List-update algorithms reorder lists as elements are\n+\t  faster.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.5.3.3.3\"></a><p class=\"title\"><strong>Figure\u00a021.30.\u00a0A simple list</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_simple_list.png\" align=\"middle\" alt=\"A simple list\" /></div></div></div><br class=\"figure-break\" /><p>List-update algorithms reorder lists as elements are\n \t  accessed. They try to determine, by the access history, which\n \t  keys to move to the front of the list. Some of these algorithms\n \t  require adding some metadata alongside each entry.</p><p>For example, in the graphic below label A shows the counter\n@@ -1138,7 +1138,7 @@\n \t  predetermined value, say 10, as shown in label C, the count is set\n \t  to 0 and the node is moved to the front of the list, as in label\n \t  D.\n-\t  </p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.5.3.3.6\"></a><p class=\"title\"><strong>Figure\u00a022.31.\u00a0The counter algorithm</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_list_update.png\" align=\"middle\" alt=\"The counter algorithm\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.list.details.policies\"></a>Policies</h6></div></div></div><p>this library allows instantiating lists with policies\n+\t  </p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.5.3.3.6\"></a><p class=\"title\"><strong>Figure\u00a021.31.\u00a0The counter algorithm</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_list_update.png\" align=\"middle\" alt=\"The counter algorithm\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.list.details.policies\"></a>Policies</h6></div></div></div><p>this library allows instantiating lists with policies\n \t  implementing any algorithm moving nodes to the front of the\n \t  list (policies implementing algorithms interchanging nodes are\n \t  unsupported).</p><p>Associative containers based on lists are parametrized by a\n@@ -1310,7 +1310,7 @@\n \t  sequence; the second uses a tree (or forest of trees), which is\n \t  typically less structured than an associative container's tree;\n \t  the third simply uses an associative container. These are\n-\t  shown in the graphic below, in labels A1 and A2, label B, and label C.</p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.6.3.3.3\"></a><p class=\"title\"><strong>Figure\u00a022.32.\u00a0Underlying Priority-Queue Data-Structures.</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_priority_queue_different_underlying_dss.png\" align=\"middle\" alt=\"Underlying Priority-Queue Data-Structures.\" /></div></div></div><br class=\"figure-break\" /><p>Roughly speaking, any value that is both pushed and popped\n+\t  shown in the graphic below, in labels A1 and A2, label B, and label C.</p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.6.3.3.3\"></a><p class=\"title\"><strong>Figure\u00a021.32.\u00a0Underlying Priority-Queue Data-Structures.</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_priority_queue_different_underlying_dss.png\" align=\"middle\" alt=\"Underlying Priority-Queue Data-Structures.\" /></div></div></div><br class=\"figure-break\" /><p>Roughly speaking, any value that is both pushed and popped\n \t  from a priority queue must incur a logarithmic expense (in the\n \t  amortized sense). Any priority queue implementation that would\n \t  avoid this, would violate known bounds on comparison-based\n@@ -1390,7 +1390,7 @@\n \t  container <code class=\"classname\">Cntnr</code>, the tag of the underlying\n \t  data structure can be found via <code class=\"classname\">typename \n \t  Cntnr::container_category</code>; this is one of the possible tags shown in the graphic below.\n-\t  </p><div class=\"figure\"><a id=\"id-1.3.5.9.4.4.6.3.4.4\"></a><p class=\"title\"><strong>Figure\u00a022.33.\u00a0Priority-Queue Data-Structure Tags.</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_priority_queue_tag_hierarchy.png\" align=\"middle\" alt=\"Priority-Queue Data-Structure Tags.\" /></div></div></div><br class=\"figure-break\" /><p>Additionally, a traits mechanism can be used to query a\n+\t  </p><div class=\"figure\"><a id=\"id-1.3.5.8.4.4.6.3.4.4\"></a><p class=\"title\"><strong>Figure\u00a021.33.\u00a0Priority-Queue Data-Structure Tags.</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_priority_queue_tag_hierarchy.png\" align=\"middle\" alt=\"Priority-Queue Data-Structure Tags.\" /></div></div></div><br class=\"figure-break\" /><p>Additionally, a traits mechanism can be used to query a\n \t  container type for its attributes. Given any container\n \t  <code class=\"classname\">Cntnr</code>, then </p><pre class=\"programlisting\">__gnu_pbds::container_traits&lt;Cntnr&gt;</pre><p>\n \t  is a traits class identifying the properties of the"}, {"sha": "10c13bedeacd8f4987f0d6efc06d0bdc273f2d84", "filename": "libstdc++-v3/doc/html/manual/policy_data_structures_using.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_using.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_using.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_using.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a022.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_data_structures.html\" title=\"Chapter\u00a022.\u00a0Policy-Based Data Structures\" /><link rel=\"next\" href=\"policy_data_structures_design.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a022.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_design.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.pbds.using\"></a>Using</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.using.prereq\"></a>Prerequisites</h3></div></div></div><p>The library contains only header files, and does not require any\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, policy, container, data, structure, associated, tree, trie, hash, metaprogramming\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"policy_data_structures.html\" title=\"Chapter\u00a021.\u00a0Policy-Based Data Structures\" /><link rel=\"prev\" href=\"policy_data_structures.html\" title=\"Chapter\u00a021.\u00a0Policy-Based Data Structures\" /><link rel=\"next\" href=\"policy_data_structures_design.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a021.\u00a0Policy-Based Data Structures</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_design.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.pbds.using\"></a>Using</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.using.prereq\"></a>Prerequisites</h3></div></div></div><p>The library contains only header files, and does not require any\n       other libraries except the standard C++ library . All classes are\n       defined in namespace <code class=\"code\">__gnu_pbds</code>. The library internally\n       uses macros beginning with <code class=\"code\">PB_DS</code>, but\n@@ -61,7 +61,7 @@\n \tIn addition, there are the following diagnostics classes,\n \tused to report errors specific to this library's data\n \tstructures.\n-      </p><div class=\"figure\"><a id=\"id-1.3.5.9.3.3.6\"></a><p class=\"title\"><strong>Figure\u00a022.7.\u00a0Exception Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_exception_hierarchy.png\" align=\"middle\" alt=\"Exception Hierarchy\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.using.tutorial\"></a>Tutorial</h3></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"pbds.using.tutorial.basic\"></a>Basic Use</h4></div></div></div><p>\n+      </p><div class=\"figure\"><a id=\"id-1.3.5.8.3.3.6\"></a><p class=\"title\"><strong>Figure\u00a021.7.\u00a0Exception Hierarchy</strong></p><div class=\"figure-contents\"><div class=\"mediaobject\" align=\"center\"><img src=\"../images/pbds_exception_hierarchy.png\" align=\"middle\" alt=\"Exception Hierarchy\" /></div></div></div><br class=\"figure-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"pbds.using.tutorial\"></a>Tutorial</h3></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"pbds.using.tutorial.basic\"></a>Basic Use</h4></div></div></div><p>\n \t  For the most part, the policy-based containers containers in\n \t  namespace <code class=\"literal\">__gnu_pbds</code> have the same interface as\n \t  the equivalent containers in the standard C++ library, except for\n@@ -479,4 +479,4 @@\n \t\tvery simple version of Dijkstra's shortest path\n \t\talgorithm:\n \t\t<code class=\"filename\">priority_queue_dijkstra.cc</code>\n-\t      </p></li></ul></div></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"policy_data_structures.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_design.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a022.\u00a0Policy-Based Data Structures\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>\n\\ No newline at end of file\n+\t      </p></li></ul></div></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"policy_data_structures.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"policy_data_structures.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_design.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a021.\u00a0Policy-Based Data Structures\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "102473c47a7a0ee2e4930ce1cdc9f6ee14440133", "filename": "libstdc++-v3/doc/html/manual/source_organization.html", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_organization.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_organization.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fsource_organization.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -45,10 +45,8 @@\n     </dd><dt><span class=\"term\">\n       <code class=\"filename\">include/debug</code>,\n       <code class=\"filename\">include/parallel</code>, and\n-      <code class=\"filename\">include/profile</code>\n     </span></dt><dd>\n-      Headers that implement the Debug Mode, Parallel Mode, and Profile Mode\n-      extensions.\n+      Headers that implement the Debug Mode and Parallel Mode extensions.\n     </dd></dl></div></dd><dt><span class=\"term\"><code class=\"filename\">scripts</code></span></dt><dd>\n     Scripts that are used during the configure, build, make, or test\n     process."}, {"sha": "97bb38c667451b9e88f6b768be2b83c6e8e25f1b", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -91,7 +91,7 @@\n       <code class=\"code\">std::type_info::name()</code> is the mangled type name.\n       You will need to call <code class=\"code\">c++filt</code> and pass the names as\n       command-line parameters to demangle them, or call a\n-      <a class=\"link\" href=\"ext_demangling.html\" title=\"Chapter\u00a029.\u00a0Demangling\">runtime demangler function</a>.\n+      <a class=\"link\" href=\"ext_demangling.html\" title=\"Chapter\u00a028.\u00a0Demangling\">runtime demangler function</a>.\n    </p><p><span class=\"emphasis\"><em>[20.1.5]/5</em></span> <span class=\"emphasis\"><em>\"Implementors are encouraged to\n       supply libraries that can accept allocators that encapsulate more\n       general memory models and that support non-equal instances.  In such\n@@ -1238,7 +1238,9 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0591r4.pdf\" target=\"_top\">\n \tP0591R4\n \t</a>\n-      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  P0595R2 <code class=\"code\">std::is_constant_evaluated()</code> </td><td align=\"left\">\n+      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\n+        <code class=\"code\">std::scoped_allocator_adaptor</code> changes missing in 9.1.0\n+      </td></tr><tr><td align=\"left\">  P0595R2 <code class=\"code\">std::is_constant_evaluated()</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0595r2.html\" target=\"_top\">\n \tP0595R2\n \t</a>"}, {"sha": "ef56a305687313a71aea79145f3f4b39256d6b4f", "filename": "libstdc++-v3/doc/html/manual/test.html", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -533,10 +533,7 @@\n \t(as determined by the <code class=\"literal\">_GLIBCXX_DEBUG</code> macro).\n       </p></dd><dt><span class=\"term\"><code class=\"literal\">dg-require-parallel-mode \"\"</code></span></dt><dd><p>Skip the test if the Parallel Mode is not active\n \t(as determined by the <code class=\"literal\">_GLIBCXX_PARALLEL</code> macro).\n-      </p></dd><dt><span class=\"term\"><code class=\"literal\">dg-require-profile-mode \"\"</code></span></dt><dd><p>Skip the test if the Profile Mode is not active\n-\t(as determined by the <code class=\"literal\">_GLIBCXX_PROFILE</code> macro).\n-      </p></dd><dt><span class=\"term\"><code class=\"literal\">dg-require-normal-mode \"\"</code></span></dt><dd><p>Skip the test if any of Debug, Parallel or Profile\n-\tMode is active.\n+      </p></dd><dt><span class=\"term\"><code class=\"literal\">dg-require-normal-mode \"\"</code></span></dt><dd><p>Skip the test if Debug or Parallel Mode is active.\n       </p></dd><dt><span class=\"term\"><code class=\"literal\">dg-require-atomic-builtins \"\"</code></span></dt><dd><p>Skip the test if atomic operations on <span class=\"type\">bool</span>\n       and <span class=\"type\">int</span> are not lock-free.\n       </p></dd><dt><span class=\"term\"><code class=\"literal\">dg-require-gthreads \"\"</code></span></dt><dd><p>Skip the test if the C++11 thread library is not"}, {"sha": "140896b1f60466643b178dd5d72552e76f35896f", "filename": "libstdc++-v3/doc/html/manual/using.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -2,7 +2,7 @@\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a03.\u00a0Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"intro.html\" title=\"Part\u00a0I.\u00a0 Introduction\" /><link rel=\"prev\" href=\"make.html\" title=\"Make\" /><link rel=\"next\" href=\"using_headers.html\" title=\"Headers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a03.\u00a0Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"make.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0I.\u00a0\n   Introduction\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_headers.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.intro.using\"></a>Chapter\u00a03.\u00a0Using</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.profile_mode\">Profile-based Performance Analysis</a></span></dt></dl></dd></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.flags\"></a>Command Options</h2></div></div></div><p>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_headers.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.intro.using\"></a>Chapter\u00a03.\u00a0Using</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_dual_abi.html\">Dual ABI</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dual_abi.html#manual.intro.using.abi.trouble\">Troubleshooting</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.experimental\">Experimental Library Extensions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.memory.mtalloc\">Non-memory leaks in Pool and MT allocators</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt></dl></dd></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.flags\"></a>Command Options</h2></div></div></div><p>\n       The set of features available in the GNU C++ library is shaped by\n       several <a class=\"link\" href=\"http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Invoking-GCC.html\" target=\"_top\">GCC\n       Command Options</a>. Options that impact libstdc++ are"}, {"sha": "0d5de91fe31e8a2b972886c37929e66341963619", "filename": "libstdc++-v3/doc/html/manual/using_headers.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -89,7 +89,7 @@\n   Also included are files for the C++ ABI interface:\n </p><div class=\"table\"><a id=\"table.abi_headers\"></a><p class=\"title\"><strong>Table\u00a03.16.\u00a0C++ ABI Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"C++ ABI Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">cxxabi.h</code></td><td align=\"left\"><code class=\"filename\">cxxabi_forced.h</code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n   And a large variety of extensions.\n-</p><div class=\"table\"><a id=\"table.ext_headers\"></a><p class=\"title\"><strong>Table\u00a03.17.\u00a0Extension Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /><col align=\"left\" class=\"c5\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">ext/algorithm</code></td><td align=\"left\"><code class=\"filename\">ext/atomicity.h</code></td><td align=\"left\"><code class=\"filename\">ext/array_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/bitmap_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/cast.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/codecvt_specializations.h</code></td><td align=\"left\"><code class=\"filename\">ext/concurrence.h</code></td><td align=\"left\"><code class=\"filename\">ext/debug_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/enc_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/extptr_allocator.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/functional</code></td><td align=\"left\"><code class=\"filename\">ext/iterator</code></td><td align=\"left\"><code class=\"filename\">ext/malloc_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/memory</code></td><td align=\"left\"><code class=\"filename\">ext/mt_allocator.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/new_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/numeric</code></td><td align=\"left\"><code class=\"filename\">ext/numeric_traits.h</code></td><td align=\"left\"><code class=\"filename\">ext/pb_ds/assoc_container.h</code></td><td align=\"left\"><code class=\"filename\">ext/pb_ds/priority_queue.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/pod_char_traits.h</code></td><td align=\"left\"><code class=\"filename\">ext/pool_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/rb_tree</code></td><td align=\"left\"><code class=\"filename\">ext/rope</code></td><td align=\"left\"><code class=\"filename\">ext/slist</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/stdio_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/stdio_sync_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/throw_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/typelist.h</code></td><td align=\"left\"><code class=\"filename\">ext/type_traits.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/vstring.h</code></td><td colspan=\"4\" align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"table.debug_headers\"></a><p class=\"title\"><strong>Table\u00a03.18.\u00a0Extension Debug Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Debug Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /><col align=\"left\" class=\"c5\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">debug/array</code></td><td align=\"left\"><code class=\"filename\">debug/bitset</code></td><td align=\"left\"><code class=\"filename\">debug/deque</code></td><td align=\"left\"><code class=\"filename\">debug/forward_list</code></td><td align=\"left\"><code class=\"filename\">debug/list</code></td></tr><tr><td align=\"left\"><code class=\"filename\">debug/map</code></td><td align=\"left\"><code class=\"filename\">debug/set</code></td><td align=\"left\"><code class=\"filename\">debug/string</code></td><td align=\"left\"><code class=\"filename\">debug/unordered_map</code></td><td align=\"left\"><code class=\"filename\">debug/unordered_set</code></td></tr><tr><td align=\"left\"><code class=\"filename\">debug/vector</code></td><td colspan=\"4\" align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"table.profile_headers\"></a><p class=\"title\"><strong>Table\u00a03.19.\u00a0Extension Profile Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Profile Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">profile/bitset</code></td><td align=\"left\"><code class=\"filename\">profile/deque</code></td><td align=\"left\"><code class=\"filename\">profile/list</code></td><td align=\"left\"><code class=\"filename\">profile/map</code></td></tr><tr><td align=\"left\"><code class=\"filename\">profile/set</code></td><td align=\"left\"><code class=\"filename\">profile/unordered_map</code></td><td align=\"left\"><code class=\"filename\">profile/unordered_set</code></td><td align=\"left\"><code class=\"filename\">profile/vector</code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"table.parallel_headers\"></a><p class=\"title\"><strong>Table\u00a03.20.\u00a0Extension Parallel Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Parallel Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.mixing\"></a>Mixing Headers</h3></div></div></div><p> A few simple rules.\n+</p><div class=\"table\"><a id=\"table.ext_headers\"></a><p class=\"title\"><strong>Table\u00a03.17.\u00a0Extension Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /><col align=\"left\" class=\"c5\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">ext/algorithm</code></td><td align=\"left\"><code class=\"filename\">ext/atomicity.h</code></td><td align=\"left\"><code class=\"filename\">ext/bitmap_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/cast.h</code></td><td class=\"auto-generated\">\u00a0</td></tr><tr><td align=\"left\"><code class=\"filename\">ext/codecvt_specializations.h</code></td><td align=\"left\"><code class=\"filename\">ext/concurrence.h</code></td><td align=\"left\"><code class=\"filename\">ext/debug_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/enc_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/extptr_allocator.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/functional</code></td><td align=\"left\"><code class=\"filename\">ext/iterator</code></td><td align=\"left\"><code class=\"filename\">ext/malloc_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/memory</code></td><td align=\"left\"><code class=\"filename\">ext/mt_allocator.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/new_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/numeric</code></td><td align=\"left\"><code class=\"filename\">ext/numeric_traits.h</code></td><td align=\"left\"><code class=\"filename\">ext/pb_ds/assoc_container.h</code></td><td align=\"left\"><code class=\"filename\">ext/pb_ds/priority_queue.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/pod_char_traits.h</code></td><td align=\"left\"><code class=\"filename\">ext/pool_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/rb_tree</code></td><td align=\"left\"><code class=\"filename\">ext/rope</code></td><td align=\"left\"><code class=\"filename\">ext/slist</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/stdio_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/stdio_sync_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/throw_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/typelist.h</code></td><td align=\"left\"><code class=\"filename\">ext/type_traits.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/vstring.h</code></td><td colspan=\"4\" align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"table.debug_headers\"></a><p class=\"title\"><strong>Table\u00a03.18.\u00a0Extension Debug Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Debug Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /><col align=\"left\" class=\"c5\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">debug/array</code></td><td align=\"left\"><code class=\"filename\">debug/bitset</code></td><td align=\"left\"><code class=\"filename\">debug/deque</code></td><td align=\"left\"><code class=\"filename\">debug/forward_list</code></td><td align=\"left\"><code class=\"filename\">debug/list</code></td></tr><tr><td align=\"left\"><code class=\"filename\">debug/map</code></td><td align=\"left\"><code class=\"filename\">debug/set</code></td><td align=\"left\"><code class=\"filename\">debug/string</code></td><td align=\"left\"><code class=\"filename\">debug/unordered_map</code></td><td align=\"left\"><code class=\"filename\">debug/unordered_set</code></td></tr><tr><td align=\"left\"><code class=\"filename\">debug/vector</code></td><td colspan=\"4\" align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"table.parallel_headers\"></a><p class=\"title\"><strong>Table\u00a03.19.\u00a0Extension Parallel Headers</strong></p><div class=\"table-contents\"><table class=\"table\" summary=\"Extension Parallel Headers\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.mixing\"></a>Mixing Headers</h3></div></div></div><p> A few simple rules.\n </p><p>First, mixing different dialects of the standard headers is not\n possible. It's an all-or-nothing affair. Thus, code like\n </p><pre class=\"programlisting\">"}, {"sha": "44afa81f61469a4407f62ce49144194795cfde92", "filename": "libstdc++-v3/doc/html/manual/using_macros.html", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -103,9 +103,6 @@\n       <code class=\"code\">_GLIBCXX_ASSERTIONS</code> has a non-zero value, otherwise to zero.\n       When defined to a non-zero value, it enables extra error checking and\n       assertions in the parallel mode.\n-      </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_PROFILE</code></span></dt><dd><p>Undefined by default. When defined, compiles user code\n-\tusing the <a class=\"link\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\">profile\n-\tmode</a>.\n       </p></dd><dt><span class=\"term\"><code class=\"code\">__STDCPP_WANT_MATH_SPEC_FUNCS__</code></span></dt><dd><p>Undefined by default. When defined to a non-zero integer constant,\n \tenables support for ISO/IEC 29124 Special Math Functions.\n       </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_SANITIZE_VECTOR</code></span></dt><dd><p>"}, {"sha": "0a120b508e98cfe949698e7b63f2cd5f25b4be28", "filename": "libstdc++-v3/doc/xml/authors.xml", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fauthors.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fauthors.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fauthors.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -92,12 +92,6 @@\n       </para>\n     </personblurb></author>\n \n-  <author><personname><firstname>Silvius</firstname><surname>Rus</surname></personname><personblurb>\n-      <para>\n-\tProfile mode\n-      </para>\n-    </personblurb></author>\n-\n   <author><personname><firstname>Johannes</firstname><surname>Singler</surname></personname><personblurb>\n       <para>\n \tParallel mode"}, {"sha": "ff0ba66c6ed664e685c3d8eeed23e104a1d682cb", "filename": "libstdc++-v3/doc/xml/manual/appendix_contributing.xml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -292,11 +292,9 @@ It has subdirectories:\n     <term>\n       <filename class=\"directory\">include/debug</filename>,\n       <filename class=\"directory\">include/parallel</filename>, and\n-      <filename class=\"directory\">include/profile</filename>\n     </term>\n     <listitem>\n-      Headers that implement the Debug Mode, Parallel Mode, and Profile Mode\n-      extensions.\n+      Headers that implement the Debug Mode and Parallel Mode extensions.\n     </listitem>\n     </varlistentry>\n     </variablelist>"}, {"sha": "bb018569b39956e348358ee2811b6ec168cf3cc3", "filename": "libstdc++-v3/doc/xml/manual/debug.xml", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -354,12 +354,4 @@\n   </para>\n </section>\n \n-<section xml:id=\"debug.profile_mode\" xreflabel=\"debug.profile_mode\"><info><title>Profile-based Performance Analysis</title></info>\n-\n-  <para> The <link linkend=\"manual.ext.profile_mode\">Profile-based\n-  Performance Analysis</link> extension has performance checks for many\n-  algorithms.\n-  </para>\n-</section>\n-\n </section>"}, {"sha": "010907a2f6b0401b969d59e1f2ebdf7b23bb6576", "filename": "libstdc++-v3/doc/xml/manual/evolution.xml", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -948,7 +948,13 @@ now defaults to zero.\n </section>\n \n <section xml:id=\"api.rel_101\"><info><title><constant>10</constant></title></info>\n-<para> <classname>__gnu_cxx::array_allocator</classname> removed. </para>\n+<para> Deprecated features removed:\n+<itemizedlist>\n+<listitem> Profile Mode </listitem>\n+<listitem> <classname>__gnu_cxx::array_allocator</classname> </listitem>\n+</itemizedlist>\n+</para>\n+\n </section>\n \n </section>"}, {"sha": "86e92beffd323d6654e9eadab98e3cb2ee181020", "filename": "libstdc++-v3/doc/xml/manual/extensions.xml", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fextensions.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -107,12 +107,6 @@ extensions, be aware of two things:\n \t    href=\"parallel_mode.xml\">\n </xi:include>\n \n-<!-- Chapter 04 : Profile Mode -->\n-<xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\" parse=\"xml\"\n-\t    href=\"profile_mode.xml\">\n-</xi:include>\n-\n-\n <!-- XXX -->\n <!-- Allocators -->\n <!-- Chapter 05 : __mt_alloc -->"}, {"sha": "fa1b7c993c3877a0367072e4769164073276da2f", "filename": "libstdc++-v3/doc/xml/manual/profile_mode.xml", "status": "removed", "additions": 0, "deletions": 1718, "changes": 1718, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprofile_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprofile_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprofile_mode.xml?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,1718 +0,0 @@\n-<chapter xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\" \n-\t xml:id=\"manual.ext.profile_mode\" xreflabel=\"Profile Mode\">\n-<?dbhtml filename=\"profile_mode.html\"?>\n-\n-<info><title>Profile Mode</title>\n-  <keywordset>\n-    <keyword>C++</keyword>\n-    <keyword>library</keyword>\n-    <keyword>profile</keyword>\n-  </keywordset>\n-</info>\n-\n-\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.intro\" xreflabel=\"Intro\"><info><title>Intro</title></info>\n-  \n-  <para>\n-  <emphasis>Goal: </emphasis>Give performance improvement advice based on\n-  recognition of suboptimal usage patterns of the standard library.\n-  </para>\n-\n-  <para>\n-  <emphasis>Method: </emphasis>Wrap the standard library code.  Insert\n-  calls to an instrumentation library to record the internal state of\n-  various components at interesting entry/exit points to/from the standard\n-  library.  Process trace, recognize suboptimal patterns, give advice.\n-  For details, see the\n-  <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://ieeexplore.ieee.org/document/4907670/\">Perflint\n-  paper presented at CGO 2009</link>.\n-  </para>\n-  <para>\n-  <emphasis>Strengths: </emphasis>\n-<itemizedlist>\n-  <listitem><para>\n-  Unintrusive solution.  The application code does not require any\n-  modification.\n-  </para></listitem>\n-  <listitem><para> The advice is call context sensitive, thus capable of\n-  identifying precisely interesting dynamic performance behavior.\n-  </para></listitem>\n-  <listitem><para>\n-  The overhead model is pay-per-view.  When you turn off a diagnostic class\n-  at compile time, its overhead disappears.\n-  </para></listitem>\n-</itemizedlist>\n-  </para>\n-  <para>\n-  <emphasis>Drawbacks: </emphasis>\n-<itemizedlist>\n-  <listitem><para>\n-  You must recompile the application code with custom options.\n-  </para></listitem>\n-  <listitem><para>You must run the application on representative input.\n-  The advice is input dependent.\n-  </para></listitem>\n-  <listitem><para>\n-  The execution time will increase, in some cases by factors.\n-  </para></listitem>\n-</itemizedlist>\n-  </para>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.using\" xreflabel=\"Using\"><info><title>Using the Profile Mode</title></info>\n-  \n-\n-  <para>\n-  This is the anticipated common workflow for program <code>foo.cc</code>:\n-<programlisting>\n-$ cat foo.cc\n-#include &lt;vector&gt;\n-int main() {\n-  vector&lt;int&gt; v;\n-  for (int k = 0; k &lt; 1024; ++k) v.insert(v.begin(), k);\n-}\n-\n-$ g++ -D_GLIBCXX_PROFILE foo.cc\n-$ ./a.out\n-$ cat libstdcxx-profile.txt\n-vector-to-list: improvement = 5: call stack = 0x804842c ...\n-    : advice = change std::vector to std::list\n-vector-size: improvement = 3: call stack = 0x804842c ...\n-    : advice = change initial container size from 0 to 1024\n-</programlisting>\n-  </para>\n-\n-  <para>\n-  Anatomy of a warning:\n-  <itemizedlist>\n-  <listitem>\n-  <para>\n-  Warning id.  This is a short descriptive string for the class\n-  that this warning belongs to.  E.g., \"vector-to-list\".\n-  </para>\n-  </listitem>\n-  <listitem>\n-  <para>\n-  Estimated improvement.  This is an approximation of the benefit expected\n-  from implementing the change suggested by the warning.  It is given on\n-  a log10 scale.  Negative values mean that the alternative would actually\n-  do worse than the current choice.\n-  In the example above, 5 comes from the fact that the overhead of\n-  inserting at the beginning of a vector vs. a list is around 1024 * 1024 / 2,\n-  which is around 10e5.  The improvement from setting the initial size to\n-  1024 is in the range of 10e3, since the overhead of dynamic resizing is\n-  linear in this case.\n-  </para>\n-  </listitem>\n-  <listitem>\n-  <para>\n-  Call stack.  Currently, the addresses are printed without\n-  symbol name or code location attribution.\n-  Users are expected to postprocess the output using, for instance, addr2line.\n-  </para>\n-  </listitem>\n-  <listitem>\n-  <para>\n-  The warning message.  For some warnings, this is static text, e.g.,\n-  \"change vector to list\".  For other warnings, such as the one above,\n-  the message contains numeric advice, e.g., the suggested initial size\n-  of the vector.\n-  </para>\n-  </listitem>\n-  </itemizedlist>\n-  </para>\n-\n-  <para>Three files are generated.  <code>libstdcxx-profile.txt</code>\n-   contains human readable advice.  <code>libstdcxx-profile.raw</code>\n-   contains implementation specific data about each diagnostic.\n-   Their format is not documented.  They are sufficient to generate\n-   all the advice given in <code>libstdcxx-profile.txt</code>.  The advantage\n-   of keeping this raw format is that traces from multiple executions can\n-   be aggregated simply by concatenating the raw traces.  We intend to\n-   offer an external utility program that can issue advice from a trace.\n-   <code>libstdcxx-profile.conf.out</code> lists the actual diagnostic\n-   parameters used.  To alter parameters, edit this file and rename it to\n-   <code>libstdcxx-profile.conf</code>.\n-  </para>\n-\n-  <para>Advice is given regardless whether the transformation is valid.\n-  For instance, we advise changing a map to an unordered_map even if the\n-  application semantics require that data be ordered.\n-  We believe such warnings can help users understand the performance\n-  behavior of their application better, which can lead to changes\n-  at a higher abstraction level.\n-  </para>\n-\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.tuning\" xreflabel=\"Tuning\"><info><title>Tuning the Profile Mode</title></info>\n-  \n-\n-  <para>Compile time switches and environment variables (see also file\n-   profiler.h).  Unless specified otherwise, they can be set at compile time\n-   using -D_&lt;name&gt; or by setting variable &lt;name&gt;\n-   in the environment where the program is run, before starting execution.\n-  <itemizedlist>\n-  <listitem><para>\n-   <code>_GLIBCXX_PROFILE_NO_&lt;diagnostic&gt;</code>:\n-   disable specific diagnostics.\n-   See section Diagnostics for possible values.\n-   (Environment variables not supported.)\n-   </para></listitem>\n-  <listitem><para>\n-   <code>_GLIBCXX_PROFILE_TRACE_PATH_ROOT</code>: set an alternative root\n-   path for the output files.\n-   </para></listitem>\n-  <listitem><para>_GLIBCXX_PROFILE_MAX_WARN_COUNT: set it to the maximum\n-   number of warnings desired.  The default value is 10.</para></listitem>\n-  <listitem><para>\n-   <code>_GLIBCXX_PROFILE_MAX_STACK_DEPTH</code>: if set to 0,\n-   the advice will\n-   be collected and reported for the program as a whole, and not for each\n-   call context.\n-   This could also be used in continuous regression tests, where you\n-   just need to know whether there is a regression or not.\n-   The default value is 32.\n-   </para></listitem>\n-  <listitem><para>\n-   <code>_GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC</code>:\n-   set a limit on how much memory to use for the accounting tables for each\n-   diagnostic type.  When this limit is reached, new events are ignored\n-   until the memory usage decreases under the limit.  Generally, this means\n-   that newly created containers will not be instrumented until some\n-   live containers are deleted.  The default is 128 MB.\n-   </para></listitem>\n-  <listitem><para>\n-   <code>_GLIBCXX_PROFILE_NO_THREADS</code>:\n-   Make the library not use threads.  If thread local storage (TLS) is not\n-   available, you will get a preprocessor error asking you to set\n-   -D_GLIBCXX_PROFILE_NO_THREADS if your program is single-threaded.\n-   Multithreaded execution without TLS is not supported.\n-   (Environment variable not supported.)\n-   </para></listitem>\n-  <listitem><para>\n-   <code>_GLIBCXX_HAVE_EXECINFO_H</code>:\n-   This name should be defined automatically at library configuration time.\n-   If your library was configured without <code>execinfo.h</code>, but\n-   you have it in your include path, you can define it explicitly.  Without\n-   it, advice is collected for the program as a whole, and not for each\n-   call context.\n-   (Environment variable not supported.)\n-   </para></listitem>\n-  </itemizedlist>\n-  </para>\n-\n-</section>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design\" xreflabel=\"Design\"><info><title>Design</title></info>\n-<?dbhtml filename=\"profile_mode_design.html\"?>\n-  \n-\n-<para>\n-</para>\n-<table frame=\"all\" xml:id=\"table.profile_code_loc\">\n-<title>Profile Code Location</title>\n-\n-<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"c1\"/>\n-<colspec colname=\"c2\"/>\n-\n-<thead>\n-  <row>\n-    <entry>Code Location</entry>\n-    <entry>Use</entry>\n-  </row>\n-</thead>\n-<tbody>\n-  <row>\n-    <entry><code>libstdc++-v3/include/std/*</code></entry>\n-    <entry>Preprocessor code to redirect to profile extension headers.</entry>\n-  </row>\n-  <row>\n-    <entry><code>libstdc++-v3/include/profile/*</code></entry>\n-    <entry>Profile extension public headers (map, vector, ...).</entry>\n-  </row>\n-  <row>\n-    <entry><code>libstdc++-v3/include/profile/impl/*</code></entry>\n-    <entry>Profile extension internals.  Implementation files are\n-     only included from <code>impl/profiler.h</code>, which is the only\n-     file included from the public headers.</entry>\n-  </row>\n-</tbody>\n-</tgroup>\n-</table>\n-\n-<para>\n-</para>\n-\n-<section xml:id=\"manual.ext.profile_mode.design.wrapper\" xreflabel=\"Wrapper\"><info><title>Wrapper Model</title></info>\n-\n-  <para>\n-  In order to get our instrumented library version included instead of the\n-  release one,\n-  we use the same wrapper model as the debug mode.\n-  We subclass entities from the release version.  Wherever\n-  <code>_GLIBCXX_PROFILE</code> is defined, the release namespace is\n-  <code>std::__norm</code>, whereas the profile namespace is\n-  <code>std::__profile</code>.  Using plain <code>std</code> translates\n-  into <code>std::__profile</code>.\n-  </para>\n-  <para>\n-  Whenever possible, we try to wrap at the public interface level, e.g.,\n-  in <code>unordered_set</code> rather than in <code>hashtable</code>,\n-  in order not to depend on implementation.\n-  </para>\n-  <para>\n-  Mixing object files built with and without the profile mode must\n-  not affect the program execution.  However, there are no guarantees to\n-  the accuracy of diagnostics when using even a single object not built with\n-  <code>-D_GLIBCXX_PROFILE</code>.\n-  Currently, mixing the profile mode with debug and parallel extensions is\n-  not allowed.  Mixing them at compile time will result in preprocessor errors.\n-  Mixing them at link time is undefined.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design.instrumentation\" xreflabel=\"Instrumentation\"><info><title>Instrumentation</title></info>\n-\n-  <para>\n-  Instead of instrumenting every public entry and exit point,\n-  we chose to add instrumentation on demand, as needed\n-  by individual diagnostics.\n-  The main reason is that some diagnostics require us to extract bits of\n-  internal state that are particular only to that diagnostic.\n-  We plan to formalize this later, after we learn more about the requirements\n-  of several diagnostics.\n-  </para>\n-  <para>\n-  All the instrumentation points can be switched on and off using\n-  <code>-D[_NO]_GLIBCXX_PROFILE_&lt;diagnostic&gt;</code> options.\n-  With all the instrumentation calls off, there should be negligible\n-  overhead over the release version.  This property is needed to support\n-  diagnostics based on timing of internal operations.  For such diagnostics,\n-  we anticipate turning most of the instrumentation off in order to prevent\n-  profiling overhead from polluting time measurements, and thus diagnostics.\n-  </para>\n-  <para>\n-  All the instrumentation on/off compile time switches live in\n-  <code>include/profile/profiler.h</code>.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design.rtlib\" xreflabel=\"Run Time Behavior\"><info><title>Run Time Behavior</title></info>\n-\n-  <para>\n-  For practical reasons, the instrumentation library processes the trace\n-  partially\n-  rather than dumping it to disk in raw form.  Each event is processed when\n-  it occurs.  It is usually attached a cost and it is aggregated into\n-  the database of a specific diagnostic class.  The cost model\n-  is based largely on the standard performance guarantees, but in some\n-  cases we use knowledge about GCC's standard library implementation.\n-  </para>\n-  <para>\n-  Information is indexed by (1) call stack and (2) instance id or address\n-  to be able to understand and summarize precise creation-use-destruction\n-  dynamic chains.  Although the analysis is sensitive to dynamic instances,\n-  the reports are only sensitive to call context.  Whenever a dynamic instance\n-  is destroyed, we accumulate its effect to the corresponding entry for the\n-  call stack of its constructor location.\n-  </para>\n-\n-  <para>\n-  For details, see\n-   <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://ieeexplore.ieee.org/document/4907670/\">paper presented at\n-   CGO 2009</link>.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design.analysis\" xreflabel=\"Analysis and Diagnostics\"><info><title>Analysis and Diagnostics</title></info>\n-\n-  <para>\n-  Final analysis takes place offline, and it is based entirely on the\n-  generated trace and debugging info in the application binary.\n-  See section Diagnostics for a list of analysis types that we plan to support.\n-  </para>\n-  <para>\n-  The input to the analysis is a table indexed by profile type and call stack.\n-  The data type for each entry depends on the profile type.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design.cost-model\" xreflabel=\"Cost Model\"><info><title>Cost Model</title></info>\n-\n-  <para>\n-  While it is likely that cost models become complex as we get into\n-  more sophisticated analysis, we will try to follow a simple set of rules\n-  at the beginning.\n-  </para>\n-<itemizedlist>\n-  <listitem><para><emphasis>Relative benefit estimation:</emphasis>\n-  The idea is to estimate or measure the cost of all operations\n-  in the original scenario versus the scenario we advise to switch to.\n-  For instance, when advising to change a vector to a list, an occurrence\n-  of the <code>insert</code> method will generally count as a benefit.\n-  Its magnitude depends on (1) the number of elements that get shifted\n-  and (2) whether it triggers a reallocation.\n-  </para></listitem>\n-  <listitem><para><emphasis>Synthetic measurements:</emphasis>\n-  We will measure the relative difference between similar operations on\n-  different containers.  We plan to write a battery of small tests that\n-  compare the times of the executions of similar methods on different\n-  containers.  The idea is to run these tests on the target machine.\n-  If this training phase is very quick, we may decide to perform it at\n-  library initialization time.  The results can be cached on disk and reused\n-  across runs.\n-  </para></listitem>\n-  <listitem><para><emphasis>Timers:</emphasis>\n-  We plan to use timers for operations of larger granularity, such as sort.\n-  For instance, we can switch between different sort methods on the fly\n-  and report the one that performs best for each call context.\n-  </para></listitem>\n-  <listitem><para><emphasis>Show stoppers:</emphasis>\n-  We may decide that the presence of an operation nullifies the advice.\n-  For instance, when considering switching from <code>set</code> to\n-  <code>unordered_set</code>, if we detect use of operator <code>++</code>,\n-  we will simply not issue the advice, since this could signal that the use\n-  care require a sorted container.</para></listitem>\n-</itemizedlist>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design.reports\" xreflabel=\"Reports\"><info><title>Reports</title></info>\n-\n-  <para>\n-There are two types of reports.  First, if we recognize a pattern for which\n-we have a substitute that is likely to give better performance, we print\n-the advice and estimated performance gain.  The advice is usually associated\n-to a code position and possibly a call stack.\n-  </para>\n-  <para>\n-Second, we report performance characteristics for which we do not have\n-a clear solution for improvement.  For instance, we can point to the user\n-the top 10 <code>multimap</code> locations\n-which have the worst data locality in actual traversals.\n-Although this does not offer a solution,\n-it helps the user focus on the key problems and ignore the uninteresting ones.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.design.testing\" xreflabel=\"Testing\"><info><title>Testing</title></info>\n-\n-  <para>\n-  First, we want to make sure we preserve the behavior of the release mode.\n-  You can just type <code>\"make check-profile\"</code>, which\n-  builds and runs the whole test suite in profile mode.\n-  </para>\n-  <para>\n-  Second, we want to test the correctness of each diagnostic.\n-  We created a <code>profile</code> directory in the test suite.\n-  Each diagnostic must come with at least two tests, one for false positives\n-  and one for false negatives.\n-  </para>\n-</section>\n-\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.api\" xreflabel=\"API\"><info><title>Extensions for Custom Containers</title></info>\n-<?dbhtml filename=\"profile_mode_api.html\"?>\n-\n-\n-  <para>\n-  Many large projects use their own data structures instead of the ones in the\n-  standard library.  If these data structures are similar in functionality\n-  to the standard library, they can be instrumented with the same hooks\n-  that are used to instrument the standard library.\n-  The instrumentation API is exposed in file\n-  <code>profiler.h</code> (look for \"Instrumentation hooks\").\n-  </para>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.cost_model\" xreflabel=\"Cost Model\"><info><title>Empirical Cost Model</title></info>\n-<?dbhtml filename=\"profile_mode_cost_model.html\"?>\n-\n-\n-  <para>\n-  Currently, the cost model uses formulas with predefined relative weights\n-  for alternative containers or container implementations.  For instance,\n-  iterating through a vector is X times faster than iterating through a list.\n-  </para>\n-  <para>\n-  (Under development.)\n-  We are working on customizing this to a particular machine by providing\n-  an automated way to compute the actual relative weights for operations\n-  on the given machine.\n-  </para>\n-  <para>\n-  (Under development.)\n-  We plan to provide a performance parameter database format that can be\n-  filled in either by hand or by an automated training mechanism.\n-  The analysis module will then use this database instead of the built in.\n-  generic parameters.\n-  </para>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation\" xreflabel=\"Implementation\"><info><title>Implementation Issues</title></info>\n-<?dbhtml filename=\"profile_mode_impl.html\"?>\n-\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation.stack\" xreflabel=\"Stack Traces\"><info><title>Stack Traces</title></info>\n-\n-  <para>\n-  Accurate stack traces are needed during profiling since we group events by\n-  call context and dynamic instance.  Without accurate traces, diagnostics\n-  may be hard to interpret.  For instance, when giving advice to the user\n-  it is imperative to reference application code, not library code.\n-  </para>\n-  <para>\n-  Currently we are using the libc <code>backtrace</code> routine to get\n-  stack traces.\n-  <code>_GLIBCXX_PROFILE_STACK_DEPTH</code> can be set\n-  to 0 if you are willing to give up call context information, or to a small\n-  positive value to reduce run time overhead.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation.symbols\" xreflabel=\"Symbolization\"><info><title>Symbolization of Instruction Addresses</title></info>\n-\n-  <para>\n-  The profiling and analysis phases use only instruction addresses.\n-  An external utility such as addr2line is needed to postprocess the result.\n-  We do not plan to add symbolization support in the profile extension.\n-  This would require access to symbol tables, debug information tables,\n-  external programs or libraries and other system dependent information.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation.concurrency\" xreflabel=\"Concurrency\"><info><title>Concurrency</title></info>\n-\n-  <para>\n-  Our current model is simplistic, but precise.\n-  We cannot afford to approximate because some of our diagnostics require\n-  precise matching of operations to container instance and call context.\n-  During profiling, we keep a single information table per diagnostic.\n-  There is a single lock per information table.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation.stdlib-in-proflib\" xreflabel=\"Using the Standard Library in the Runtime Library\"><info><title>Using the Standard Library in the Instrumentation Implementation</title></info>\n-\n-  <para>\n-  As much as we would like to avoid uses of libstdc++ within our\n-  instrumentation library, containers such as unordered_map are very\n-  appealing.  We plan to use them as long as they are named properly\n-  to avoid ambiguity.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation.malloc-hooks\" xreflabel=\"Malloc Hooks\"><info><title>Malloc Hooks</title></info>\n-\n-  <para>\n-  User applications/libraries can provide malloc hooks.\n-  When the implementation of the malloc hooks uses stdlibc++, there can\n-  be an infinite cycle between the profile mode instrumentation and the\n-  malloc hook code.\n-  </para>\n-  <para>\n-  We protect against reentrance to the profile mode instrumentation code,\n-  which should avoid this problem in most cases.\n-  The protection mechanism is thread safe and exception safe.\n-  This mechanism does not prevent reentrance to the malloc hook itself,\n-  which could still result in deadlock, if, for instance, the malloc hook\n-  uses non-recursive locks.\n-  XXX: A definitive solution to this problem would be for the profile extension\n-  to use a custom allocator internally, and perhaps not to use libstdc++.\n-  </para>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.implementation.construction-destruction\" xreflabel=\"Construction and Destruction of Global Objects\"><info><title>Construction and Destruction of Global Objects</title></info>\n-\n-  <para>\n-  The profiling library state is initialized at the first call to a profiling\n-  method.  This allows us to record the construction of all global objects.\n-  However, we cannot do the same at destruction time.  The trace is written\n-  by a function registered by <code>atexit</code>, thus invoked by\n-  <code>exit</code>.\n-  </para>\n-</section>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.developer\" xreflabel=\"Developer Information\"><info><title>Developer Information</title></info>\n-<?dbhtml filename=\"profile_mode_devel.html\"?>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.developer.bigpic\" xreflabel=\"Big Picture\"><info><title>Big Picture</title></info>\n-\n-\n-  <para>The profile mode headers are included with\n-   <code>-D_GLIBCXX_PROFILE</code> through preprocessor directives in\n-   <code>include/std/*</code>.\n-  </para>\n-\n-  <para>Instrumented implementations are provided in\n-   <code>include/profile/*</code>.  All instrumentation hooks are macros\n-   defined in <code>include/profile/profiler.h</code>.\n-  </para>\n-\n-  <para>All the implementation of the instrumentation hooks is in\n-   <code>include/profile/impl/*</code>.  Although all the code gets included,\n-   thus is publicly visible, only a small number of functions are called from\n-   outside this directory.  All calls to hook implementations must be\n-   done through macros defined in <code>profiler.h</code>.  The macro\n-   must ensure (1) that the call is guarded against reentrance and\n-   (2) that the call can be turned off at compile time using a\n-   <code>-D_GLIBCXX_PROFILE_...</code> compiler option.\n-  </para>\n-\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.developer.howto\" xreflabel=\"How To Add A Diagnostic\"><info><title>How To Add A Diagnostic</title></info>\n-\n-\n-  <para>Let's say the diagnostic name is \"magic\".\n-  </para>\n-\n-  <para>If you need to instrument a header not already under\n-   <code>include/profile/*</code>, first edit the corresponding header\n-   under <code>include/std/</code> and add a preprocessor directive such\n-   as the one in <code>include/std/vector</code>:\n-<programlisting>\n-#ifdef _GLIBCXX_PROFILE\n-# include &lt;profile/vector&gt;\n-#endif\n-</programlisting>\n-  </para>\n-\n-  <para>If the file you need to instrument is not yet under\n-   <code>include/profile/</code>, make a copy of the one in\n-   <code>include/debug</code>, or the main implementation.\n-   You'll need to include the main implementation and inherit the classes\n-   you want to instrument.  Then define the methods you want to instrument,\n-   define the instrumentation hooks and add calls to them.\n-   Look at <code>include/profile/vector</code> for an example.\n-  </para>\n-\n-  <para>Add macros for the instrumentation hooks in\n-   <code>include/profile/impl/profiler.h</code>.\n-   Hook names must start with <code>__profcxx_</code>.\n-   Make sure they transform\n-   in no code with <code>-D_NO_GLIBCXX_PROFILE_MAGIC</code>.\n-   Make sure all calls to any method in namespace <code>__gnu_profile</code>\n-   is protected against reentrance using macro\n-   <code>_GLIBCXX_PROFILE_REENTRANCE_GUARD</code>.\n-   All names of methods in namespace <code>__gnu_profile</code> called from\n-   <code>profiler.h</code> must start with <code>__trace_magic_</code>.\n-  </para>\n-\n-  <para>Add the implementation of the diagnostic.\n-   <itemizedlist>\n-     <listitem><para>\n-      Create new file <code>include/profile/impl/profiler_magic.h</code>.\n-     </para></listitem>\n-     <listitem><para>\n-      Define class <code>__magic_info: public __object_info_base</code>.\n-      This is the representation of a line in the object table.\n-      The <code>__merge</code> method is used to aggregate information\n-      across all dynamic instances created at the same call context.\n-      The <code>__magnitude</code> must return the estimation of the benefit\n-      as a number of small operations, e.g., number of words copied.\n-      The <code>__write</code> method is used to produce the raw trace.\n-      The <code>__advice</code> method is used to produce the advice string.\n-     </para></listitem>\n-     <listitem><para>\n-      Define class <code>__magic_stack_info: public __magic_info</code>.\n-      This defines the content of a line in the stack table.\n-     </para></listitem>\n-     <listitem><para>\n-      Define class <code>__trace_magic: public __trace_base&lt;__magic_info,\n-      __magic_stack_info&gt;</code>.\n-      It defines the content of the trace associated with this diagnostic.\n-     </para></listitem>\n-    </itemizedlist>\n-  </para>\n-\n-  <para>Add initialization and reporting calls in\n-   <code>include/profile/impl/profiler_trace.h</code>.  Use\n-   <code>__trace_vector_to_list</code> as an example.\n-  </para>\n-\n-  <para>Add documentation in file <code>doc/xml/manual/profile_mode.xml</code>.\n-  </para>\n-</section>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.diagnostics\"><info><title>Diagnostics</title></info>\n-<?dbhtml filename=\"profile_mode_diagnostics.html\"?>\n-\n-\n-  <para>\n-  The table below presents all the diagnostics we intend to implement.\n-  Each diagnostic has a corresponding compile time switch\n-  <code>-D_GLIBCXX_PROFILE_&lt;diagnostic&gt;</code>.\n-  Groups of related diagnostics can be turned on with a single switch.\n-  For instance, <code>-D_GLIBCXX_PROFILE_LOCALITY</code> is equivalent to\n-  <code>-D_GLIBCXX_PROFILE_SOFTWARE_PREFETCH\n-  -D_GLIBCXX_PROFILE_RBTREE_LOCALITY</code>.\n-  </para>\n-\n-  <para>\n-  The benefit, cost, expected frequency and accuracy of each diagnostic\n-  was given a grade from 1 to 10, where 10 is highest.\n-  A high benefit means that, if the diagnostic is accurate, the expected\n-  performance improvement is high.\n-  A high cost means that turning this diagnostic on leads to high slowdown.\n-  A high frequency means that we expect this to occur relatively often.\n-  A high accuracy means that the diagnostic is unlikely to be wrong.\n-  These grades are not perfect.  They are just meant to guide users with\n-  specific needs or time budgets.\n-  </para>\n-\n-<table frame=\"all\" xml:id=\"table.profile_diagnostics\">\n-<title>Profile Diagnostics</title>\n-\n-<tgroup cols=\"7\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"c1\"/>\n-<colspec colname=\"c2\"/>\n-<colspec colname=\"c3\"/>\n-<colspec colname=\"c4\"/>\n-<colspec colname=\"c5\"/>\n-<colspec colname=\"c6\"/>\n-<colspec colname=\"c7\"/>\n-\n-<thead>\n-  <row>\n-    <entry>Group</entry>\n-    <entry>Flag</entry>\n-    <entry>Benefit</entry>\n-    <entry>Cost</entry>\n-    <entry>Freq.</entry>\n-    <entry>Implemented</entry>\n-  </row>\n-</thead>\n-<tbody>\n-  <row>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.containers\">\n-    CONTAINERS</link></entry>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.hashtable_too_small\">\n-    HASHTABLE_TOO_SMALL</link></entry>\n-    <entry>10</entry>\n-    <entry>1</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>yes</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.hashtable_too_large\">\n-    HASHTABLE_TOO_LARGE</link></entry>\n-    <entry>5</entry>\n-    <entry>1</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>yes</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.inefficient_hash\">\n-    INEFFICIENT_HASH</link></entry>\n-    <entry>7</entry>\n-    <entry>3</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>yes</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.vector_too_small\">\n-    VECTOR_TOO_SMALL</link></entry>\n-    <entry>8</entry>\n-    <entry>1</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>yes</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.vector_too_large\">\n-    VECTOR_TOO_LARGE</link></entry>\n-    <entry>5</entry>\n-    <entry>1</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>yes</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.vector_to_hashtable\">\n-    VECTOR_TO_HASHTABLE</link></entry>\n-    <entry>7</entry>\n-    <entry>7</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>no</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.hashtable_to_vector\">\n-    HASHTABLE_TO_VECTOR</link></entry>\n-    <entry>7</entry>\n-    <entry>7</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>no</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.vector_to_list\">\n-    VECTOR_TO_LIST</link></entry>\n-    <entry>8</entry>\n-    <entry>5</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>yes</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.list_to_vector\">\n-    LIST_TO_VECTOR</link></entry>\n-    <entry>10</entry>\n-    <entry>5</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>no</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.assoc_ord_to_unord\">\n-    ORDERED_TO_UNORDERED</link></entry>\n-    <entry>10</entry>\n-    <entry>5</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>only map/unordered_map</entry>\n-  </row>\n-  <row>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.algorithms\">\n-    ALGORITHMS</link></entry>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.algorithms.sort\">\n-    SORT</link></entry>\n-    <entry>7</entry>\n-    <entry>8</entry>\n-    <entry/>\n-    <entry>7</entry>\n-    <entry>no</entry>\n-  </row>\n-  <row>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.locality\">\n-    LOCALITY</link></entry>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.locality.sw_prefetch\">\n-    SOFTWARE_PREFETCH</link></entry>\n-    <entry>8</entry>\n-    <entry>8</entry>\n-    <entry/>\n-    <entry>5</entry>\n-    <entry>no</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.locality.linked\">\n-    RBTREE_LOCALITY</link></entry>\n-    <entry>4</entry>\n-    <entry>8</entry>\n-    <entry/>\n-    <entry>5</entry>\n-    <entry>no</entry>\n-  </row>\n-  <row>\n-    <entry/>\n-    <entry><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#manual.ext.profile_mode.analysis.mthread.false_share\">\n-    FALSE_SHARING</link></entry>\n-    <entry>8</entry>\n-    <entry>10</entry>\n-    <entry/>\n-    <entry>10</entry>\n-    <entry>no</entry>\n-  </row>\n-</tbody>\n-</tgroup>\n-</table>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.template\" xreflabel=\"Template\"><info><title>Diagnostic Template</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_&lt;diagnostic&gt;</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis>  What problem will it diagnose?\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>.\n-  What is the fundamental reason why this is a problem</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>\n-  Percentage reduction in execution time.  When reduction is more than\n-  a constant factor, describe the reduction rate formula.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  What would the advise look like?</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis>\n-  What stdlibc++ components need to be instrumented?</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  How do we decide when to issue the advice?</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  How do we measure benefits?  Math goes here.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-program code\n-...\n-advice sample\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.containers\" xreflabel=\"Containers\"><info><title>Containers</title></info>\n-\n-\n-<para>\n-<emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_CONTAINERS</code>.\n-</para>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.hashtable_too_small\" xreflabel=\"Hashtable Too Small\"><info><title>Hashtable Too Small</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_HASHTABLE_TOO_SMALL</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect hashtables with many\n-  rehash operations, small construction size and large destruction size.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis> Rehash is very expensive.\n-  Read content, follow chains within bucket, evaluate hash function, place at\n-  new location in different order.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis> 36%.\n-  Code similar to example below.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  Set initial size to N at construction site S.\n-  </para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis>\n-  <code>unordered_set, unordered_map</code> constructor, destructor, rehash.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>unordered_[multi]set|map</code>,\n-  record initial size and call context of the constructor.\n-  Record size increase, if any, after each relevant operation such as insert.\n-  Record the estimated rehash cost.</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Number of individual rehash operations * cost per rehash.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1 unordered_set&lt;int&gt; us;\n-2 for (int k = 0; k &lt; 1000000; ++k) {\n-3   us.insert(k);\n-4 }\n-\n-foo.cc:1: advice: Changing initial unordered_set size from 10 to 1000000 saves 1025530 rehash operations.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.hashtable_too_large\" xreflabel=\"Hashtable Too Large\"><info><title>Hashtable Too Large</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_HASHTABLE_TOO_LARGE</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect hashtables which are\n-  never filled up because fewer elements than reserved are ever\n-  inserted.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis> Save memory, which\n-  is good in itself and may also improve memory reference performance through\n-  fewer cache and TLB misses.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis> unknown.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  Set initial size to N at construction site S.\n-  </para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis>\n-  <code>unordered_set, unordered_map</code> constructor, destructor, rehash.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>unordered_[multi]set|map</code>,\n-  record initial size and call context of the constructor, and correlate it\n-  with its size at destruction time.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Number of iteration operations + memory saved.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1 vector&lt;unordered_set&lt;int&gt;&gt; v(100000, unordered_set&lt;int&gt;(100)) ;\n-2 for (int k = 0; k &lt; 100000; ++k) {\n-3   for (int j = 0; j &lt; 10; ++j) {\n-4     v[k].insert(k + j);\n-5  }\n-6 }\n-\n-foo.cc:1: advice: Changing initial unordered_set size from 100 to 10 saves N\n-bytes of memory and M iteration steps.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.inefficient_hash\" xreflabel=\"Inefficient Hash\"><info><title>Inefficient Hash</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_INEFFICIENT_HASH</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect hashtables with polarized\n-  distribution.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis> A non-uniform\n-  distribution may lead to long chains, thus possibly increasing complexity\n-  by a factor up to the number of elements.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis> factor up\n-   to container size.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis> Change hash function\n-  for container built at site S.  Distribution score = N.  Access score = S.\n-  Longest chain = C, in bucket B.\n-  </para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis>\n-  <code>unordered_set, unordered_map</code> constructor, destructor, [],\n-  insert, iterator.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  Count the exact number of link traversals.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Total number of links traversed.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-class dumb_hash {\n- public:\n-  size_t operator() (int i) const { return 0; }\n-};\n-...\n-  unordered_set&lt;int, dumb_hash&gt; hs;\n-  ...\n-  for (int i = 0; i &lt; COUNT; ++i) {\n-    hs.find(i);\n-  }\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.vector_too_small\" xreflabel=\"Vector Too Small\"><info><title>Vector Too Small</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_VECTOR_TOO_SMALL</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis>Detect vectors with many\n-  resize operations, small construction size and large destruction size..\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>Resizing can be expensive.\n-  Copying large amounts of data takes time.  Resizing many small vectors may\n-  have allocation overhead and affect locality.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  Set initial size to N at construction site S.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>vector</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>vector</code>,\n-  record initial size and call context of the constructor.\n-  Record size increase, if any, after each relevant operation such as\n-  <code>push_back</code>.  Record the estimated resize cost.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Total number of words copied * time to copy a word.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1 vector&lt;int&gt; v;\n-2 for (int k = 0; k &lt; 1000000; ++k) {\n-3   v.push_back(k);\n-4 }\n-\n-foo.cc:1: advice: Changing initial vector size from 10 to 1000000 saves\n-copying 4000000 bytes and 20 memory allocations and deallocations.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.vector_too_large\" xreflabel=\"Vector Too Large\"><info><title>Vector Too Large</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_VECTOR_TOO_LARGE</code>\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis>Detect vectors which are\n-  never filled up because fewer elements than reserved are ever\n-  inserted.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>Save memory, which\n-  is good in itself and may also improve memory reference performance through\n-  fewer cache and TLB misses.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  Set initial size to N at construction site S.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>vector</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>vector</code>,\n-  record initial size and call context of the constructor, and correlate it\n-  with its size at destruction time.</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Total amount of memory saved.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1 vector&lt;vector&lt;int&gt;&gt; v(100000, vector&lt;int&gt;(100)) ;\n-2 for (int k = 0; k &lt; 100000; ++k) {\n-3   for (int j = 0; j &lt; 10; ++j) {\n-4     v[k].insert(k + j);\n-5  }\n-6 }\n-\n-foo.cc:1: advice: Changing initial vector size from 100 to 10 saves N\n-bytes of memory and may reduce the number of cache and TLB misses.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.vector_to_hashtable\" xreflabel=\"Vector to Hashtable\"><info><title>Vector to Hashtable</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_VECTOR_TO_HASHTABLE</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect uses of\n-  <code>vector</code> that can be substituted with <code>unordered_set</code>\n-  to reduce execution time.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Linear search in a vector is very expensive, whereas searching in a hashtable\n-  is very quick.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>factor up\n-   to container size.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>Replace\n-  <code>vector</code> with <code>unordered_set</code> at site S.\n-  </para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>vector</code>\n-  operations and access methods.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>vector</code>,\n-  record call context of the constructor.  Issue the advice only if the\n-  only methods called on this <code>vector</code> are <code>push_back</code>,\n-  <code>insert</code> and <code>find</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Cost(vector::push_back) + cost(vector::insert) + cost(find, vector) -\n-  cost(unordered_set::insert) + cost(unordered_set::find).\n-  </para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1  vector&lt;int&gt; v;\n-...\n-2  for (int i = 0; i &lt; 1000; ++i) {\n-3    find(v.begin(), v.end(), i);\n-4  }\n-\n-foo.cc:1: advice: Changing \"vector\" to \"unordered_set\" will save about 500,000\n-comparisons.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.hashtable_to_vector\" xreflabel=\"Hashtable to Vector\"><info><title>Hashtable to Vector</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_HASHTABLE_TO_VECTOR</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect uses of\n-  <code>unordered_set</code> that can be substituted with <code>vector</code>\n-  to reduce execution time.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Hashtable iterator is slower than vector iterator.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>95%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>Replace\n-  <code>unordered_set</code> with <code>vector</code> at site S.\n-  </para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>unordered_set</code>\n-  operations and access methods.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>unordered_set</code>,\n-  record call context of the constructor.  Issue the advice only if the\n-  number of <code>find</code>, <code>insert</code> and <code>[]</code>\n-  operations on this <code>unordered_set</code> are small relative to the\n-  number of elements, and methods <code>begin</code> or <code>end</code>\n-  are invoked (suggesting iteration).</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Number of .</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1  unordered_set&lt;int&gt; us;\n-...\n-2  int s = 0;\n-3  for (unordered_set&lt;int&gt;::iterator it = us.begin(); it != us.end(); ++it) {\n-4    s += *it;\n-5  }\n-\n-foo.cc:1: advice: Changing \"unordered_set\" to \"vector\" will save about N\n-indirections and may achieve better data locality.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.vector_to_list\" xreflabel=\"Vector to List\"><info><title>Vector to List</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_VECTOR_TO_LIST</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect cases where\n-  <code>vector</code> could be substituted with <code>list</code> for\n-  better performance.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Inserting in the middle of a vector is expensive compared to inserting in a\n-  list.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>factor up to\n-   container size.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>Replace vector with list\n-  at site S.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>vector</code>\n-  operations and access methods.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  For each dynamic instance of <code>vector</code>,\n-  record the call context of the constructor.  Record the overhead of each\n-  <code>insert</code> operation based on current size and insert position.\n-  Report instance with high insertion overhead.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  (Sum(cost(vector::method)) - Sum(cost(list::method)), for\n-  method in [push_back, insert, erase])\n-  + (Cost(iterate vector) - Cost(iterate list))</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1  vector&lt;int&gt; v;\n-2  for (int i = 0; i &lt; 10000; ++i) {\n-3    v.insert(v.begin(), i);\n-4  }\n-\n-foo.cc:1: advice: Changing \"vector\" to \"list\" will save about 5,000,000\n-operations.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.list_to_vector\" xreflabel=\"List to Vector\"><info><title>List to Vector</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_LIST_TO_VECTOR</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect cases where\n-  <code>list</code> could be substituted with <code>vector</code> for\n-  better performance.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Iterating through a vector is faster than through a list.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>64%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>Replace list with vector\n-  at site S.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>vector</code>\n-  operations and access methods.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  Issue the advice if there are no <code>insert</code> operations.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-    (Sum(cost(vector::method)) - Sum(cost(list::method)), for\n-  method in [push_back, insert, erase])\n-  + (Cost(iterate vector) - Cost(iterate list))</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1  list&lt;int&gt; l;\n-...\n-2  int sum = 0;\n-3  for (list&lt;int&gt;::iterator it = l.begin(); it != l.end(); ++it) {\n-4    sum += *it;\n-5  }\n-\n-foo.cc:1: advice: Changing \"list\" to \"vector\" will save about 1000000 indirect\n-memory references.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.list_to_slist\" xreflabel=\"List to Forward List\"><info><title>List to Forward List (Slist)</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_LIST_TO_SLIST</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect cases where\n-  <code>list</code> could be substituted with <code>forward_list</code> for\n-  better performance.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  The memory footprint of a forward_list is smaller than that of a list.\n-  This has beneficial effects on memory subsystem, e.g., fewer cache misses.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>40%.\n-  Note that the reduction is only noticeable if the size of the forward_list\n-  node is in fact larger than that of the list node.  For memory allocators\n-  with size classes, you will only notice an effect when the two node sizes\n-  belong to different allocator size classes.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>Replace list with\n-  forward_list at site S.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis><code>list</code>\n-  operations and iteration methods.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  Issue the advice if there are no <code>backwards</code> traversals\n-  or insertion before a given node.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Always true.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1  list&lt;int&gt; l;\n-...\n-2  int sum = 0;\n-3  for (list&lt;int&gt;::iterator it = l.begin(); it != l.end(); ++it) {\n-4    sum += *it;\n-5  }\n-\n-foo.cc:1: advice: Change \"list\" to \"forward_list\".\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.assoc_ord_to_unord\" xreflabel=\"Ordered to Unordered Associative Container\"><info><title>Ordered to Unordered Associative Container</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_ORDERED_TO_UNORDERED</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis>  Detect cases where ordered\n-  associative containers can be replaced with unordered ones.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Insert and search are quicker in a hashtable than in\n-  a red-black tree.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>52%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  Replace set with unordered_set at site S.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis>\n-  <code>set</code>, <code>multiset</code>, <code>map</code>,\n-  <code>multimap</code> methods.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  Issue the advice only if we are not using operator <code>++</code> on any\n-  iterator on a particular <code>[multi]set|map</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  (Sum(cost(hashtable::method)) - Sum(cost(rbtree::method)), for\n-  method in [insert, erase, find])\n-  + (Cost(iterate hashtable) - Cost(iterate rbtree))</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1  set&lt;int&gt; s;\n-2  for (int i = 0; i &lt; 100000; ++i) {\n-3    s.insert(i);\n-4  }\n-5  int sum = 0;\n-6  for (int i = 0; i &lt; 100000; ++i) {\n-7    sum += *s.find(i);\n-8  }\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-</section>\n-\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.algorithms\" xreflabel=\"Algorithms\"><info><title>Algorithms</title></info>\n-\n-\n-  <para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_ALGORITHMS</code>.\n-  </para>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.algorithms.sort\" xreflabel=\"Sorting\"><info><title>Sort Algorithm Performance</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_SORT</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Give measure of sort algorithm\n-  performance based on actual input.  For instance, advise Radix Sort over\n-  Quick Sort for a particular call context.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  See papers:\n-  <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://dl.acm.org/citation.cfm?doid=1065944.1065981\">\n-  A framework for adaptive algorithm selection in STAPL</link> and\n-  <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://ieeexplore.ieee.org/document/4228227/\">\n-  Optimizing Sorting with Machine Learning Algorithms</link>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>60%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis> Change sort algorithm\n-  at site S from X Sort to Y Sort.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis> <code>sort</code>\n-  algorithm.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  Issue the advice if the cost model tells us that another sort algorithm\n-  would do better on this input.  Requires us to know what algorithm we\n-  are using in our sort implementation in release mode.</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Runtime(algo) for algo in [radix, quick, merge, ...]</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.locality\" xreflabel=\"Data Locality\"><info><title>Data Locality</title></info>\n-\n-\n-  <para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_LOCALITY</code>.\n-  </para>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.locality.sw_prefetch\" xreflabel=\"Need Software Prefetch\"><info><title>Need Software Prefetch</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_SOFTWARE_PREFETCH</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Discover sequences of indirect\n-  memory accesses that are not regular, thus cannot be predicted by\n-  hardware prefetchers.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Indirect references are hard to predict and are very expensive when they\n-  miss in caches.</para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>25%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis> Insert prefetch\n-  instruction.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis> Vector iterator and\n-  access operator [].\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  First, get cache line size and page size from system.\n-  Then record iterator dereference sequences for which the value is a pointer.\n-  For each sequence within a container, issue a warning if successive pointer\n-  addresses are not within cache lines and do not form a linear pattern\n-  (otherwise they may be prefetched by hardware).\n-  If they also step across page boundaries, make the warning stronger.\n-  </para>\n-  <para>The same analysis applies to containers other than vector.\n-  However, we cannot give the same advice for linked structures, such as list,\n-  as there is no random access to the n-th element.  The user may still be\n-  able to benefit from this information, for instance by employing frays (user\n-  level light weight threads) to hide the latency of chasing pointers.\n-  </para>\n-  <para>\n-  This analysis is a little oversimplified.  A better cost model could be\n-  created by understanding the capability of the hardware prefetcher.\n-  This model could be trained automatically by running a set of synthetic\n-  cases.\n-  </para>\n-  </listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Total distance between pointer values of successive elements in vectors\n-  of pointers.</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1 int zero = 0;\n-2 vector&lt;int*&gt; v(10000000, &amp;zero);\n-3 for (int k = 0; k &lt; 10000000; ++k) {\n-4   v[random() % 10000000] = new int(k);\n-5 }\n-6 for (int j = 0; j &lt; 10000000; ++j) {\n-7   count += (*v[j] == 0 ? 0 : 1);\n-8 }\n-\n-foo.cc:7: advice: Insert prefetch instruction.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.locality.linked\" xreflabel=\"Linked Structure Locality\"><info><title>Linked Structure Locality</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_RBTREE_LOCALITY</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Give measure of locality of\n-  objects stored in linked structures (lists, red-black trees and hashtables)\n-  with respect to their actual traversal patterns.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>Allocation can be tuned\n-  to a specific traversal pattern, to result in better data locality.\n-  See paper:\n-  <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://parasol.tamu.edu/publications/download.php?file_id=570\">\n-  Custom Memory Allocation for Free</link> by Jula and Rauchwerger.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>30%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis>\n-  High scatter score N for container built at site S.\n-  Consider changing allocation sequence or choosing a structure conscious\n-  allocator.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis> Methods of all\n-  containers using linked structures.</para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  First, get cache line size and page size from system.\n-  Then record the number of successive elements that are on different line\n-  or page, for each traversal method such as <code>find</code>.  Give advice\n-  only if the ratio between this number and the number of total node hops\n-  is above a threshold.</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Sum(same_cache_line(this,previous))</para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n- 1  set&lt;int&gt; s;\n- 2  for (int i = 0; i &lt; 10000000; ++i) {\n- 3    s.insert(i);\n- 4  }\n- 5  set&lt;int&gt; s1, s2;\n- 6  for (int i = 0; i &lt; 10000000; ++i) {\n- 7    s1.insert(i);\n- 8    s2.insert(i);\n- 9  }\n-...\n-      // Fast, better locality.\n-10    for (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); ++it) {\n-11      sum += *it;\n-12    }\n-      // Slow, elements are further apart.\n-13    for (set&lt;int&gt;::iterator it = s1.begin(); it != s1.end(); ++it) {\n-14      sum += *it;\n-15    }\n-\n-foo.cc:5: advice: High scatter score NNN for set built here.  Consider changing\n-the allocation sequence or switching to a structure conscious allocator.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.mthread\" xreflabel=\"Multithreaded Data Access\"><info><title>Multithreaded Data Access</title></info>\n-\n-\n-  <para>\n-  The diagnostics in this group are not meant to be implemented short term.\n-  They require compiler support to know when container elements are written\n-  to.  Instrumentation can only tell us when elements are referenced.\n-  </para>\n-\n-  <para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_MULTITHREADED</code>.\n-  </para>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.mthread.ddtest\" xreflabel=\"Dependence Violations at Container Level\"><info><title>Data Dependence Violations at Container Level</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_DDTEST</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect container elements\n-  that are referenced from multiple threads in the parallel region or\n-  across parallel regions.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis>\n-  Sharing data between threads requires communication and perhaps locking,\n-  which may be expensive.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>?%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis> Change data\n-  distribution or parallel algorithm.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis> Container access methods\n-  and iterators.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  Keep a shadow for each container.  Record iterator dereferences and\n-  container member accesses.  Issue advice for elements referenced by\n-  multiple threads.\n-  See paper: <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://dl.acm.org/citation.cfm?id=207110.207148\">\n-  The LRPD test: speculative run-time parallelization of loops with\n-  privatization and reduction parallelization</link>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Number of accesses to elements referenced from multiple threads\n-  </para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.mthread.false_share\" xreflabel=\"False Sharing\"><info><title>False Sharing</title></info>\n-\n-<itemizedlist>\n-  <listitem><para><emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_FALSE_SHARING</code>.\n-  </para></listitem>\n-  <listitem><para><emphasis>Goal:</emphasis> Detect elements in the\n-  same container which share a cache line, are written by at least one\n-  thread, and accessed by different threads.\n-  </para></listitem>\n-  <listitem><para><emphasis>Fundamentals:</emphasis> Under these assumptions,\n-  cache protocols require\n-  communication to invalidate lines, which may be expensive.\n-  </para></listitem>\n-  <listitem><para><emphasis>Sample runtime reduction:</emphasis>68%.\n-  </para></listitem>\n-  <listitem><para><emphasis>Recommendation:</emphasis> Reorganize container\n-  or use padding to avoid false sharing.</para></listitem>\n-  <listitem><para><emphasis>To instrument:</emphasis> Container access methods\n-  and iterators.\n-  </para></listitem>\n-  <listitem><para><emphasis>Analysis:</emphasis>\n-  First, get the cache line size.\n-  For each shared container, record all the associated iterator dereferences\n-  and member access methods with the thread id.  Compare the address lists\n-  across threads to detect references in two different threads to the same\n-  cache line.  Issue a warning only if the ratio to total references is\n-  significant.  Do the same for iterator dereference values if they are\n-  pointers.</para></listitem>\n-  <listitem><para><emphasis>Cost model:</emphasis>\n-  Number of accesses to same cache line from different threads.\n-  </para></listitem>\n-  <listitem><para><emphasis>Example:</emphasis>\n-<programlisting>\n-1     vector&lt;int&gt; v(2, 0);\n-2 #pragma omp parallel for shared(v, SIZE) schedule(static, 1)\n-3     for (i = 0; i &lt; SIZE; ++i) {\n-4       v[i % 2] += i;\n-5     }\n-\n-OMP_NUM_THREADS=2 ./a.out\n-foo.cc:1: advice: Change container structure or padding to avoid false\n-sharing in multithreaded access at foo.cc:4.  Detected N shared cache lines.\n-</programlisting>\n-</para></listitem>\n-</itemizedlist>\n-</section>\n-\n-</section>\n-\n-\n-<section xml:id=\"manual.ext.profile_mode.analysis.statistics\" xreflabel=\"Statistics\"><info><title>Statistics</title></info>\n-\n-\n-<para>\n-<emphasis>Switch:</emphasis>\n-  <code>_GLIBCXX_PROFILE_STATISTICS</code>.\n-</para>\n-\n-<para>\n-  In some cases the cost model may not tell us anything because the costs\n-  appear to offset the benefits.  Consider the choice between a vector and\n-  a list.  When there are both inserts and iteration, an automatic advice\n-  may not be issued.  However, the programmer may still be able to make use\n-  of this information in a different way.\n-</para>\n-<para>\n-  This diagnostic will not issue any advice, but it will print statistics for\n-  each container construction site.  The statistics will contain the cost\n-  of each operation actually performed on the container.\n-</para>\n-\n-</section>\n-\n-\n-</section>\n-\n-\n-<bibliography xml:id=\"profile_mode.biblio\"><info><title>Bibliography</title></info>\n-\n-\n-  <biblioentry>\n-    <citetitle>\n-      Perflint: A Context Sensitive Performance Advisor for C++ Programs\n-    </citetitle>\n-\n-    <author><personname><firstname>Lixia</firstname><surname>Liu</surname></personname></author>\n-    <author><personname><firstname>Silvius</firstname><surname>Rus</surname></personname></author>\n-\n-    <copyright>\n-      <year>2009</year>\n-      <holder/>\n-    </copyright>\n-\n-    <publisher>\n-      <publishername>\n-\tProceedings of the 2009 International Symposium on Code Generation\n-\tand Optimization\n-      </publishername>\n-    </publisher>\n-  </biblioentry>\n-</bibliography>\n-\n-\n-</chapter>"}, {"sha": "a2cc1294e73f2d5e9cea91b4e05d7effbf6313c1", "filename": "libstdc++-v3/doc/xml/manual/spine.xml", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fspine.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fspine.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fspine.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -126,12 +126,6 @@\n       </para>\n     </personblurb></author>\n \n-  <author><personname><firstname>Silvius</firstname><surname>Rus</surname></personname><personblurb>\n-      <para>\n-\tProfile mode\n-      </para>\n-    </personblurb></author>\n-\n   <author><personname><firstname>Johannes</firstname><surname>Singler</surname></personname><personblurb>\n       <para>\n \tParallel mode"}, {"sha": "19bc9e81ff3b315bc32ad7e70436da7cfb77c147", "filename": "libstdc++-v3/doc/xml/manual/test.xml", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -857,14 +857,8 @@ with specific options, and additional options for 32-bit x86:\n \t(as determined by the <literal>_GLIBCXX_PARALLEL</literal> macro).\n       </para></listitem>\n     </varlistentry>\n-    <varlistentry><term><literal>dg-require-profile-mode \"\"</literal></term>\n-      <listitem><para>Skip the test if the Profile Mode is not active\n-\t(as determined by the <literal>_GLIBCXX_PROFILE</literal> macro).\n-      </para></listitem>\n-    </varlistentry>\n     <varlistentry><term><literal>dg-require-normal-mode \"\"</literal></term>\n-      <listitem><para>Skip the test if any of Debug, Parallel or Profile\n-\tMode is active.\n+      <listitem><para>Skip the test if Debug or Parallel Mode is active.\n       </para></listitem>\n     </varlistentry>\n     <varlistentry><term><literal>dg-require-atomic-builtins \"\"</literal></term>"}, {"sha": "d7fbfe9584dabb978b7499ea2fa6d0248e73eb43", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -804,36 +804,6 @@ compiler supports scalar decimal floating-point types defined via\n \n <para/>\n \n-<table frame=\"all\" xml:id=\"table.profile_headers\">\n-<title>Extension Profile Headers</title>\n-\n-<tgroup cols=\"4\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"c1\"/>\n-<colspec colname=\"c2\"/>\n-<colspec colname=\"c3\"/>\n-<colspec colname=\"c4\"/>\n-<tbody>\n-\n-<row>\n-<entry><filename class=\"headerfile\">profile/bitset</filename></entry>\n-<entry><filename class=\"headerfile\">profile/deque</filename></entry>\n-<entry><filename class=\"headerfile\">profile/list</filename></entry>\n-<entry><filename class=\"headerfile\">profile/map</filename></entry>\n-</row>\n-\n-<row>\n-<entry><filename class=\"headerfile\">profile/set</filename></entry>\n-<entry><filename class=\"headerfile\">profile/unordered_map</filename></entry>\n-<entry><filename class=\"headerfile\">profile/unordered_set</filename></entry>\n-<entry><filename class=\"headerfile\">profile/vector</filename></entry>\n-</row>\n-\n-</tbody>\n-</tgroup>\n-</table>\n-\n-<para/>\n-\n <table frame=\"all\" xml:id=\"table.parallel_headers\">\n <title>Extension Parallel Headers</title>\n \n@@ -1175,14 +1145,6 @@ g++ -Winvalid-pch -I. -include stdc++.h -H -g -O2 hello.cc -o test.exe\n       </para>\n     </listitem></varlistentry>\n \n-    <varlistentry><term><code>_GLIBCXX_PROFILE</code></term>\n-    <listitem>\n-      <para>Undefined by default. When defined, compiles user code\n-\tusing the <link linkend=\"manual.ext.profile_mode\">profile\n-\tmode</link>.\n-      </para>\n-    </listitem></varlistentry>\n-\n     <varlistentry><term><code>__STDCPP_WANT_MATH_SPEC_FUNCS__</code></term>\n     <listitem>\n       <para>Undefined by default. When defined to a non-zero integer constant,"}, {"sha": "0880dc43e1f4bb05e318053e117a31812c0ab5d5", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 56, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -919,45 +919,6 @@ parallel_headers = \\\n \t${parallel_srcdir}/unique_copy.h \\\n \t${parallel_srcdir}/workstealing.h\n \n-# Profile mode headers\n-profile_srcdir = ${glibcxx_srcdir}/include/profile\n-profile_builddir = ./profile\n-profile_headers = \\\n-\t${profile_srcdir}/array \\\n-\t${profile_srcdir}/base.h \\\n-\t${profile_srcdir}/unordered_base.h \\\n-\t${profile_srcdir}/unordered_map \\\n-\t${profile_srcdir}/unordered_set \\\n-\t${profile_srcdir}/vector \\\n-\t${profile_srcdir}/bitset \\\n-\t${profile_srcdir}/deque \\\n-\t${profile_srcdir}/forward_list \\\n-\t${profile_srcdir}/list \\\n-\t${profile_srcdir}/map \\\n-\t${profile_srcdir}/map.h \\\n-\t${profile_srcdir}/multimap.h \\\n-\t${profile_srcdir}/multiset.h \\\n-\t${profile_srcdir}/ordered_base.h \\\n-\t${profile_srcdir}/set \\\n-\t${profile_srcdir}/set.h \\\n-\t${profile_srcdir}/iterator_tracker.h\n-profile_impl_srcdir = ${glibcxx_srcdir}/include/profile/impl\n-profile_impl_builddir = ./profile/impl\n-profile_impl_headers = \\\n-\t${profile_impl_srcdir}/profiler.h \\\n-\t${profile_impl_srcdir}/profiler_algos.h \\\n-\t${profile_impl_srcdir}/profiler_container_size.h \\\n-\t${profile_impl_srcdir}/profiler_hash_func.h \\\n-\t${profile_impl_srcdir}/profiler_hashtable_size.h \\\n-\t${profile_impl_srcdir}/profiler_map_to_unordered_map.h \\\n-\t${profile_impl_srcdir}/profiler_node.h \\\n-\t${profile_impl_srcdir}/profiler_state.h \\\n-\t${profile_impl_srcdir}/profiler_trace.h \\\n-\t${profile_impl_srcdir}/profiler_vector_size.h \\\n-\t${profile_impl_srcdir}/profiler_vector_to_list.h \\\n-\t${profile_impl_srcdir}/profiler_list_to_vector.h \\\n-\t${profile_impl_srcdir}/profiler_list_to_slist.h\n-\n # Some \"C\" header schemes require the \"C\" compatibility headers.\n # For --enable-cheaders=c_std\n if GLIBCXX_C_HEADERS_COMPATIBILITY\n@@ -1043,7 +1004,7 @@ allstamped = \\\n \tstamp-std stamp-bits stamp-bits-sup stamp-pstl stamp-c_base stamp-c_compatibility \\\n \tstamp-backward stamp-ext stamp-pb stamp-tr1 stamp-tr2 stamp-decimal \\\n \tstamp-experimental stamp-experimental-bits stamp-debug stamp-parallel \\\n-\tstamp-profile stamp-profile-impl stamp-host\n+\tstamp-host\n \n # List of all files that are created by explicit building, editing, or\n # catenation.\n@@ -1191,16 +1152,6 @@ stamp-parallel: ${parallel_headers}\n \t@-cd ${parallel_builddir} && $(LN_S) $? . 2>/dev/null\n \t@$(STAMP) stamp-parallel\n \n-stamp-profile: ${profile_headers}\n-\t@-mkdir -p ${profile_builddir}\n-\t@-cd ${profile_builddir} && $(LN_S) $? . 2>/dev/null\n-\t@$(STAMP) stamp-profile\n-\n-stamp-profile-impl: ${profile_impl_headers}\n-\t@-mkdir -p ${profile_impl_builddir}\n-\t@-cd ${profile_impl_builddir} && $(LN_S) $? . 2>/dev/null\n-\t@$(STAMP) stamp-profile-impl\n-\n stamp-${host_alias}:\n \t@-mkdir -p ${host_builddir}\n \t@-mkdir -p ${host_builddir}/../ext\n@@ -1498,12 +1449,6 @@ install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${parallel_builddir}\n \tfor file in ${parallel_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${parallel_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${profile_builddir}\n-\tfor file in ${profile_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${profile_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${profile_impl_builddir}\n-\tfor file in ${profile_impl_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${profile_impl_builddir}; done\n \t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n \tfor file in ${host_headers} ${bits_host_headers} ${host_headers_extra} \\\n \t ${thread_host_headers}; do \\"}, {"sha": "04a2dc8a62950a1be2990d2d6276585eb9669e12", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 58, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1257,47 +1257,6 @@ parallel_headers = \\\n \t${parallel_srcdir}/unique_copy.h \\\n \t${parallel_srcdir}/workstealing.h\n \n-\n-# Profile mode headers\n-profile_srcdir = ${glibcxx_srcdir}/include/profile\n-profile_builddir = ./profile\n-profile_headers = \\\n-\t${profile_srcdir}/array \\\n-\t${profile_srcdir}/base.h \\\n-\t${profile_srcdir}/unordered_base.h \\\n-\t${profile_srcdir}/unordered_map \\\n-\t${profile_srcdir}/unordered_set \\\n-\t${profile_srcdir}/vector \\\n-\t${profile_srcdir}/bitset \\\n-\t${profile_srcdir}/deque \\\n-\t${profile_srcdir}/forward_list \\\n-\t${profile_srcdir}/list \\\n-\t${profile_srcdir}/map \\\n-\t${profile_srcdir}/map.h \\\n-\t${profile_srcdir}/multimap.h \\\n-\t${profile_srcdir}/multiset.h \\\n-\t${profile_srcdir}/ordered_base.h \\\n-\t${profile_srcdir}/set \\\n-\t${profile_srcdir}/set.h \\\n-\t${profile_srcdir}/iterator_tracker.h\n-\n-profile_impl_srcdir = ${glibcxx_srcdir}/include/profile/impl\n-profile_impl_builddir = ./profile/impl\n-profile_impl_headers = \\\n-\t${profile_impl_srcdir}/profiler.h \\\n-\t${profile_impl_srcdir}/profiler_algos.h \\\n-\t${profile_impl_srcdir}/profiler_container_size.h \\\n-\t${profile_impl_srcdir}/profiler_hash_func.h \\\n-\t${profile_impl_srcdir}/profiler_hashtable_size.h \\\n-\t${profile_impl_srcdir}/profiler_map_to_unordered_map.h \\\n-\t${profile_impl_srcdir}/profiler_node.h \\\n-\t${profile_impl_srcdir}/profiler_state.h \\\n-\t${profile_impl_srcdir}/profiler_trace.h \\\n-\t${profile_impl_srcdir}/profiler_vector_size.h \\\n-\t${profile_impl_srcdir}/profiler_vector_to_list.h \\\n-\t${profile_impl_srcdir}/profiler_list_to_vector.h \\\n-\t${profile_impl_srcdir}/profiler_list_to_slist.h\n-\n @GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE@c_compatibility_headers_extra = \n \n # Some \"C\" header schemes require the \"C\" compatibility headers.\n@@ -1376,7 +1335,7 @@ allstamped = \\\n \tstamp-std stamp-bits stamp-bits-sup stamp-pstl stamp-c_base stamp-c_compatibility \\\n \tstamp-backward stamp-ext stamp-pb stamp-tr1 stamp-tr2 stamp-decimal \\\n \tstamp-experimental stamp-experimental-bits stamp-debug stamp-parallel \\\n-\tstamp-profile stamp-profile-impl stamp-host\n+\tstamp-host\n \n \n # List of all files that are created by explicit building, editing, or\n@@ -1694,16 +1653,6 @@ stamp-parallel: ${parallel_headers}\n \t@-cd ${parallel_builddir} && $(LN_S) $? . 2>/dev/null\n \t@$(STAMP) stamp-parallel\n \n-stamp-profile: ${profile_headers}\n-\t@-mkdir -p ${profile_builddir}\n-\t@-cd ${profile_builddir} && $(LN_S) $? . 2>/dev/null\n-\t@$(STAMP) stamp-profile\n-\n-stamp-profile-impl: ${profile_impl_headers}\n-\t@-mkdir -p ${profile_impl_builddir}\n-\t@-cd ${profile_impl_builddir} && $(LN_S) $? . 2>/dev/null\n-\t@$(STAMP) stamp-profile-impl\n-\n stamp-${host_alias}:\n \t@-mkdir -p ${host_builddir}\n \t@-mkdir -p ${host_builddir}/../ext\n@@ -1974,12 +1923,6 @@ install-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${parallel_builddir}\n \tfor file in ${parallel_headers}; do \\\n \t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${parallel_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${profile_builddir}\n-\tfor file in ${profile_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${profile_builddir}; done\n-\t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/${profile_impl_builddir}\n-\tfor file in ${profile_impl_headers}; do \\\n-\t  $(INSTALL_DATA) $${file} $(DESTDIR)${gxx_include_dir}/${profile_impl_builddir}; done\n \t$(mkinstalldirs) $(DESTDIR)${host_installdir}\n \tfor file in ${host_headers} ${bits_host_headers} ${host_headers_extra} \\\n \t ${thread_host_headers}; do \\"}, {"sha": "6b7d54ed1f45eb94566a720c081476d0bf9bcd05", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -207,7 +207,6 @@\n   {\n     namespace __debug { }\n     namespace __parallel { }\n-    namespace __profile { }\n     namespace __cxx1998 { }\n \n     namespace __detail {\n@@ -325,9 +324,8 @@ _GLIBCXX_END_NAMESPACE_VERSION\n # define _GLIBCXX_END_NAMESPACE_VERSION\n #endif\n \n-// Inline namespaces for special modes: debug, parallel, profile.\n-#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL) \\\n-    || defined(_GLIBCXX_PROFILE)\n+// Inline namespaces for special modes: debug, parallel.\n+#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL)\n namespace std\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -351,23 +349,12 @@ _GLIBCXX_END_NAMESPACE_VERSION\n # ifdef _GLIBCXX_PARALLEL\n   inline namespace __parallel { }\n # endif\n-\n-  // Inline namespaces for profile mode\n-# ifdef _GLIBCXX_PROFILE\n-  inline namespace __profile { }\n-# endif\n }\n \n // Check for invalid usage and unsupported mixed-mode use.\n # if defined(_GLIBCXX_DEBUG) && defined(_GLIBCXX_PARALLEL)\n #  error illegal use of multiple inlined namespaces\n # endif\n-# if defined(_GLIBCXX_PROFILE) && defined(_GLIBCXX_DEBUG)\n-#  error illegal use of multiple inlined namespaces\n-# endif\n-# if defined(_GLIBCXX_PROFILE) && defined(_GLIBCXX_PARALLEL)\n-#  error illegal use of multiple inlined namespaces\n-# endif\n \n // Check for invalid use due to lack for weak symbols.\n # if __NO_INLINE__ && !__GXX_WEAK__\n@@ -386,7 +373,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n // _GLIBCXX_END_NAMESPACE_ALGO\n // _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n // _GLIBCXX_END_NAMESPACE_CONTAINER\n-#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PROFILE)\n+#if defined(_GLIBCXX_DEBUG)\n # define _GLIBCXX_STD_C __cxx1998\n # define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER \\\n \t namespace _GLIBCXX_STD_C {"}, {"sha": "8f80e2a067fbf36ea904331d88a7b00848527e17", "filename": "libstdc++-v3/include/profile/array", "status": "removed", "additions": 0, "deletions": 281, "changes": 281, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Farray?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,281 +0,0 @@\n-// Profile array implementation -*- C++ -*-\n-\n-// Copyright (C) 2012-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/array\n- *  This is a Standard C++ Library header.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_ARRAY\n-#define _GLIBCXX_PROFILE_ARRAY 1\n-\n-#pragma GCC system_header\n-\n-#include <array>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  template<typename _Tp, std::size_t _Nm>\n-    struct array\n-    {\n-      typedef _Tp \t    \t\t\t      value_type;\n-      typedef value_type*\t\t\t      pointer;\n-      typedef const value_type*                       const_pointer;\n-      typedef value_type&                   \t      reference;\n-      typedef const value_type&             \t      const_reference;\n-      typedef value_type*                             iterator;\n-      typedef const value_type*                       const_iterator;\n-      typedef std::size_t                    \t      size_type;\n-      typedef std::ptrdiff_t                   \t      difference_type;\n-      typedef std::reverse_iterator<iterator>\t      reverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;\n-\n-      // Support for zero-sized arrays mandatory.\n-      typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;\n-      typename _AT_Type::_Type                         _M_elems;\n-\n-      // No explicit construct/copy/destroy for aggregate type.\n-\n-      // DR 776.\n-      void\n-      fill(const value_type& __u)\n-      { std::fill_n(begin(), size(), __u); }\n-\n-      void\n-      swap(array& __other)\n-      noexcept(_AT_Type::_Is_nothrow_swappable::value)\n-      { std::swap_ranges(begin(), end(), __other.begin()); }\n-\n-      // Iterators.\n-      _GLIBCXX17_CONSTEXPR iterator\n-      begin() noexcept\n-      { return iterator(data()); }\n-\n-      _GLIBCXX17_CONSTEXPR const_iterator\n-      begin() const noexcept\n-      { return const_iterator(data()); }\n-\n-      _GLIBCXX17_CONSTEXPR iterator\n-      end() noexcept\n-      { return iterator(data() + _Nm); }\n-\n-      _GLIBCXX17_CONSTEXPR const_iterator\n-      end() const noexcept\n-      { return const_iterator(data() + _Nm); }\n-\n-      _GLIBCXX17_CONSTEXPR reverse_iterator\n-      rbegin() noexcept\n-      { return reverse_iterator(end()); }\n-\n-      _GLIBCXX17_CONSTEXPR const_reverse_iterator\n-      rbegin() const noexcept\n-      { return const_reverse_iterator(end()); }\n-\n-      _GLIBCXX17_CONSTEXPR reverse_iterator\n-      rend() noexcept\n-      { return reverse_iterator(begin()); }\n-\n-      _GLIBCXX17_CONSTEXPR const_reverse_iterator\n-      rend() const noexcept\n-      { return const_reverse_iterator(begin()); }\n-\n-      _GLIBCXX17_CONSTEXPR const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(data()); }\n-\n-      _GLIBCXX17_CONSTEXPR const_iterator\n-      cend() const noexcept\n-      { return const_iterator(data() + _Nm); }\n-\n-      _GLIBCXX17_CONSTEXPR const_reverse_iterator\n-      crbegin() const noexcept\n-      { return const_reverse_iterator(end()); }\n-\n-      _GLIBCXX17_CONSTEXPR const_reverse_iterator\n-      crend() const noexcept\n-      { return const_reverse_iterator(begin()); }\n-\n-      // Capacity.\n-      constexpr size_type\n-      size() const noexcept { return _Nm; }\n-\n-      constexpr size_type\n-      max_size() const noexcept { return _Nm; }\n-\n-      _GLIBCXX_NODISCARD constexpr bool\n-      empty() const noexcept { return size() == 0; }\n-\n-      // Element access.\n-      reference\n-      operator[](size_type __n) noexcept\n-      {\treturn _AT_Type::_S_ref(_M_elems, __n); }\n-\n-      constexpr const_reference\n-      operator[](size_type __n) const noexcept\n-      { return _AT_Type::_S_ref(_M_elems, __n); }\n-\n-      _GLIBCXX17_CONSTEXPR reference\n-      at(size_type __n)\n-      {\n-\tif (__n >= _Nm)\n-\t  std::__throw_out_of_range_fmt(__N(\"array::at: __n \"\n-\t\t\t\t            \"(which is %zu) >= _Nm \"\n-\t\t\t\t\t    \"(which is %zu)\"),\n-\t\t\t\t\t__n, _Nm);\n-\treturn _AT_Type::_S_ref(_M_elems, __n);\n-      }\n-\n-      constexpr const_reference\n-      at(size_type __n) const\n-      {\n-\t// Result of conditional expression must be an lvalue so use\n-\t// boolean ? lvalue : (throw-expr, lvalue)\n-\treturn __n < _Nm ? _AT_Type::_S_ref(_M_elems, __n)\n-\t  : (std::__throw_out_of_range_fmt(__N(\"array::at: __n (which is %zu) \"\n-\t\t\t\t\t       \">= _Nm (which is %zu)\"),\n-\t\t\t\t\t   __n, _Nm),\n-\t     _AT_Type::_S_ref(_M_elems, 0));\n-      }\n-\n-      _GLIBCXX17_CONSTEXPR reference\n-      front() noexcept\n-      { return *begin(); }\n-\n-      constexpr const_reference\n-      front() const noexcept\n-      { return _AT_Type::_S_ref(_M_elems, 0); }\n-\n-      _GLIBCXX17_CONSTEXPR reference\n-      back() noexcept\n-      { return _Nm ? *(end() - 1) : *end(); }\n-\n-      constexpr const_reference\n-      back() const noexcept\n-      {\n-\treturn _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)\n-\t\t   : _AT_Type::_S_ref(_M_elems, 0);\n-      }\n-\n-      _GLIBCXX17_CONSTEXPR pointer\n-      data() noexcept\n-      { return _AT_Type::_S_ptr(_M_elems); }\n-\n-      _GLIBCXX17_CONSTEXPR const_pointer\n-      data() const noexcept\n-      { return _AT_Type::_S_ptr(_M_elems); }\n-    };\n-\n-  // Array comparisons.\n-  template<typename _Tp, std::size_t _Nm>\n-    inline bool\n-    operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n-    { return std::equal(__one.begin(), __one.end(), __two.begin()); }\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    inline bool\n-    operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n-    { return !(__one == __two); }\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    inline bool\n-    operator<(const array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)\n-    {\n-      return std::lexicographical_compare(__a.begin(), __a.end(),\n-\t\t\t\t\t  __b.begin(), __b.end());\n-    }\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    inline bool\n-    operator>(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n-    { return __two < __one; }\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    inline bool\n-    operator<=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n-    { return !(__one > __two); }\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    inline bool\n-    operator>=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n-    { return !(__one < __two); }\n-\n-  // Specialized algorithms.\n-  template<typename _Tp, std::size_t _Nm>\n-    inline void\n-    swap(array<_Tp, _Nm>& __one, array<_Tp, _Nm>& __two)\n-    noexcept(noexcept(__one.swap(__two)))\n-    { __one.swap(__two); }\n-\n-  template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    constexpr _Tp&\n-    get(array<_Tp, _Nm>& __arr) noexcept\n-    {\n-      static_assert(_Int < _Nm, \"index is out of bounds\");\n-      return _GLIBCXX_STD_C::__array_traits<_Tp, _Nm>::\n-\t_S_ref(__arr._M_elems, _Int);\n-    }\n-\n-  template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    constexpr _Tp&&\n-    get(array<_Tp, _Nm>&& __arr) noexcept\n-    {\n-      static_assert(_Int < _Nm, \"index is out of bounds\");\n-      return std::move(__profile::get<_Int>(__arr));\n-    }\n-\n-  template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    constexpr const _Tp&\n-    get(const array<_Tp, _Nm>& __arr) noexcept\n-    {\n-      static_assert(_Int < _Nm, \"index is out of bounds\");\n-      return _GLIBCXX_STD_C::__array_traits<_Tp, _Nm>::\n-\t_S_ref(__arr._M_elems, _Int);\n-    }\n-} // namespace __profile\n-\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-  // Tuple interface to class template array.\n-\n-  /// tuple_size\n-  template<typename _Tp, std::size_t _Nm>\n-    struct tuple_size<std::__profile::array<_Tp, _Nm>>\n-    : public integral_constant<std::size_t, _Nm> { };\n-\n-  /// tuple_element\n-  template<std::size_t _Int, typename _Tp, std::size_t _Nm>\n-    struct tuple_element<_Int, std::__profile::array<_Tp, _Nm>>\n-    {\n-      static_assert(_Int < _Nm, \"index is out of bounds\");\n-      typedef _Tp type;\n-    };\n-\n-  template<typename _Tp, std::size_t _Nm>\n-    struct __is_tuple_like_impl<std::__profile::array<_Tp, _Nm>> : true_type\n-    { };\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace std\n-\n-#endif // _GLIBCXX_PROFILE_ARRAY"}, {"sha": "692db3fae353fc0eb52d5da0218652cebbbb360a", "filename": "libstdc++-v3/include/profile/base.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbase.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/base.h\n- *  @brief Sequential helper functions.\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-// Written by Lixia Liu\n-\n-#ifndef _GLIBCXX_PROFILE_BASE_H\n-#define _GLIBCXX_PROFILE_BASE_H 1\n-\n-#include <profile/impl/profiler.h>\n-\n-// Profiling mode namespaces.\n-\n-/**\n- * @namespace std::__profile\n- * @brief GNU profile code, replaces standard behavior with profile behavior.\n- */\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-  namespace __profile { }\n-}\n-\n-/**\n- * @namespace __gnu_profile\n- * @brief GNU profile code for public use.\n- */\n-namespace __gnu_profile\n-{\n-  // Import all the profile versions of components in namespace std.\n-  using namespace std::__profile;\n-}\n-\n-\n-#endif /* _GLIBCXX_PROFILE_BASE_H */"}, {"sha": "5887707b6601634c6989c67e1dd598dbfaad92c6", "filename": "libstdc++-v3/include/profile/bitset", "status": "removed", "additions": 0, "deletions": 245, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,245 +0,0 @@\n-// Profiling bitset implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/bitset\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_BITSET\n-#define _GLIBCXX_PROFILE_BITSET\n-\n-#include <bitset>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::bitset wrapper with performance instrumentation, none at the\n-  /// moment.\n-  template<size_t _Nb>\n-    class bitset\n-    : public _GLIBCXX_STD_C::bitset<_Nb>\n-    {\n-      typedef _GLIBCXX_STD_C::bitset<_Nb> _Base;\n-\n-    public:\n-      // 23.3.5.1 constructors:\n-#if __cplusplus < 201103L\n-      bitset()\n-      : _Base() { }\n-#else\n-      constexpr bitset() = default;\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      constexpr bitset(unsigned long long __val) noexcept\n-#else\n-      bitset(unsigned long __val)\n-#endif\n-      : _Base(__val) { }\n-\n-      template<typename _CharT, typename _Traits, typename _Alloc>\n-\texplicit\n-\tbitset(const std::basic_string<_CharT, _Traits, _Alloc>& __str,\n-\t       typename std::basic_string<_CharT, _Traits, _Alloc>::size_type\n-\t       __pos = 0,\n-\t       typename std::basic_string<_CharT, _Traits, _Alloc>::size_type\n-\t       __n = (std::basic_string<_CharT, _Traits, _Alloc>::npos))\n-\t: _Base(__str, __pos, __n) { }\n-\n-      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-      // 396. what are characters zero and one.\n-      template<class _CharT, class _Traits, class _Alloc>\n-\tbitset(const std::basic_string<_CharT, _Traits, _Alloc>& __str,\n-\t       typename std::basic_string<_CharT, _Traits, _Alloc>::size_type\n-\t       __pos,\n-\t       typename std::basic_string<_CharT, _Traits, _Alloc>::size_type\n-\t       __n,\n-\t       _CharT __zero, _CharT __one = _CharT('1'))\n-\t: _Base(__str, __pos, __n, __zero, __one) { }\n-\n-      bitset(const _Base& __x) : _Base(__x) { }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _CharT>\n-\texplicit\n-\tbitset(const _CharT* __str,\n-\t       typename std::basic_string<_CharT>::size_type __n\n-\t       = std::basic_string<_CharT>::npos,\n-\t       _CharT __zero = _CharT('0'), _CharT __one = _CharT('1'))\n-\t: _Base(__str, __n, __zero, __one) { }\n-#endif\n-\n-      // 23.3.5.2 bitset operations:\n-      bitset<_Nb>&\n-      operator&=(const bitset<_Nb>& __rhs) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_base() &= __rhs;\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      operator|=(const bitset<_Nb>& __rhs) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_base() |= __rhs;\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      operator^=(const bitset<_Nb>& __rhs) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_base() ^= __rhs;\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      operator<<=(size_t __pos) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_base() <<= __pos;\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      operator>>=(size_t __pos) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_base() >>= __pos;\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      set() _GLIBCXX_NOEXCEPT\n-      {\n-\t_Base::set();\n-\treturn *this;\n-      }\n-\n-      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-      // 186. bitset::set() second parameter should be bool\n-      bitset<_Nb>&\n-      set(size_t __pos, bool __val = true)\n-      {\n-\t_Base::set(__pos, __val);\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      reset() _GLIBCXX_NOEXCEPT\n-      {\n-\t_Base::reset();\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      reset(size_t __pos)\n-      {\n-\t_Base::reset(__pos);\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>\n-      operator~() const _GLIBCXX_NOEXCEPT\n-      { return bitset(~_M_base()); }\n-\n-      bitset<_Nb>&\n-      flip() _GLIBCXX_NOEXCEPT\n-      {\n-\t_Base::flip();\n-\treturn *this;\n-      }\n-\n-      bitset<_Nb>&\n-      flip(size_t __pos)\n-      {\n-\t_Base::flip(__pos);\n-\treturn *this;\n-      }\n-\n-      bool\n-      operator==(const bitset<_Nb>& __rhs) const _GLIBCXX_NOEXCEPT\n-      { return _M_base() == __rhs; }\n-\n-      bool\n-      operator!=(const bitset<_Nb>& __rhs) const _GLIBCXX_NOEXCEPT\n-      { return _M_base() != __rhs; }\n-\n-      bitset<_Nb>\n-      operator<<(size_t __pos) const _GLIBCXX_NOEXCEPT\n-      { return bitset<_Nb>(_M_base() << __pos); }\n-\n-      bitset<_Nb>\n-      operator>>(size_t __pos) const _GLIBCXX_NOEXCEPT\n-      { return bitset<_Nb>(_M_base() >> __pos); }\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\n-      { return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\n-      { return *this; }\n-    };\n-\n-  template<size_t _Nb>\n-    bitset<_Nb>\n-    operator&(const bitset<_Nb>& __x, const bitset<_Nb>& __y) _GLIBCXX_NOEXCEPT\n-    { return bitset<_Nb>(__x) &= __y; }\n-\n-  template<size_t _Nb>\n-    bitset<_Nb>\n-    operator|(const bitset<_Nb>& __x, const bitset<_Nb>& __y) _GLIBCXX_NOEXCEPT\n-    { return bitset<_Nb>(__x) |= __y; }\n-\n-  template<size_t _Nb>\n-    bitset<_Nb>\n-    operator^(const bitset<_Nb>& __x, const bitset<_Nb>& __y) _GLIBCXX_NOEXCEPT\n-    { return bitset<_Nb>(__x) ^= __y; }\n-\n-  template<typename _CharT, typename _Traits, size_t _Nb>\n-    std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>& __is, bitset<_Nb>& __x)\n-    { return __is >> __x._M_base(); }\n-\n-  template<typename _CharT, typename _Traits, size_t _Nb>\n-    std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n-\t       const bitset<_Nb>& __x)\n-    { return __os << __x._M_base(); }\n-} // namespace __profile\n-\n-#if __cplusplus >= 201103L\n-  // DR 1182.\n-  /// std::hash specialization for bitset.\n-  template<size_t _Nb>\n-    struct hash<__profile::bitset<_Nb>>\n-    : public __hash_base<size_t, __profile::bitset<_Nb>>\n-    {\n-      size_t\n-      operator()(const __profile::bitset<_Nb>& __b) const noexcept\n-      { return std::hash<_GLIBCXX_STD_C::bitset<_Nb>>()(__b._M_base()); }\n-    };\n-#endif\n-\n-} // namespace std\n-\n-#endif"}, {"sha": "4fd526a824d76c5c58f05cae66d5aa1a3bdb0465", "filename": "libstdc++-v3/include/profile/deque", "status": "removed", "additions": 0, "deletions": 188, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,188 +0,0 @@\n-// Profiling deque implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/deque\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_DEQUE\n-#define _GLIBCXX_PROFILE_DEQUE 1\n-\n-#include <deque>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::deque wrapper with performance instrumentation.\n-  template<typename _Tp, typename _Allocator = std::allocator<_Tp> >\n-    class deque\n-    : public _GLIBCXX_STD_C::deque<_Tp, _Allocator>\n-    {\n-      typedef  _GLIBCXX_STD_C::deque<_Tp, _Allocator> _Base;\n-\n-    public:\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::value_type\t\tvalue_type;\n-\n-      // 23.2.1.1 construct/copy/destroy:\n-\n-#if __cplusplus < 201103L\n-      deque()\n-      : _Base() { }\n-      deque(const deque& __x)\n-      : _Base(__x) { }\n-\n-      ~deque() { }\n-#else\n-      deque() = default;\n-      deque(const deque&) = default;\n-      deque(deque&&) = default;\n-\n-      deque(const deque& __d, const _Allocator& __a)\n-      : _Base(__d, __a) { }\n-\n-      deque(deque&& __d, const _Allocator& __a)\n-      : _Base(std::move(__d), __a) { }\n-\n-      ~deque() = default;\n-\n-      deque(initializer_list<value_type> __l,\n-\t    const _Allocator& __a = _Allocator())\n-      : _Base(__l, __a) { }\n-#endif\n-\n-      explicit\n-      deque(const _Allocator& __a)\n-      : _Base(__a) { }\n-\n-#if __cplusplus >= 201103L\n-      explicit\n-      deque(size_type __n, const _Allocator& __a = _Allocator())\n-      : _Base(__n, __a) { }\n-\n-      deque(size_type __n, const _Tp& __value,\n-\t    const _Allocator& __a = _Allocator())\n-      : _Base(__n, __value, __a) { }\n-#else\n-      explicit\n-      deque(size_type __n, const _Tp& __value = _Tp(),\n-\t    const _Allocator& __a = _Allocator())\n-      : _Base(__n, __value, __a) { }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tdeque(_InputIterator __first, _InputIterator __last,\n-\t      const _Allocator& __a = _Allocator())\n-\t: _Base(__first, __last, __a)\n-\t{ }\n-\n-      deque(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus < 201103L\n-      deque&\n-      operator=(const deque& __x)\n-      {\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n-      deque&\n-      operator=(const deque&) = default;\n-\n-      deque&\n-      operator=(deque&&) = default;\n-\n-      deque&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\t_M_base() = __l;\n-\treturn *this;\n-      }\n-#endif\n-\n-      void\n-      swap(deque& __x)\n-      _GLIBCXX_NOEXCEPT_IF( noexcept(declval<_Base&>().swap(__x)) )\n-      { _Base::swap(__x); }\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-    };\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator==(const deque<_Tp, _Alloc>& __lhs,\n-\t       const deque<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() == __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator!=(const deque<_Tp, _Alloc>& __lhs,\n-\t       const deque<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() != __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<(const deque<_Tp, _Alloc>& __lhs,\n-\t      const deque<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() < __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<=(const deque<_Tp, _Alloc>& __lhs,\n-\t       const deque<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() <= __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>=(const deque<_Tp, _Alloc>& __lhs,\n-\t       const deque<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() >= __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>(const deque<_Tp, _Alloc>& __lhs,\n-\t      const deque<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() > __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline void\n-    swap(deque<_Tp, _Alloc>& __lhs, deque<_Tp, _Alloc>& __rhs)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))\n-    { __lhs.swap(__rhs); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "6ac33bead8428b65978119060bea23448bb87bd8", "filename": "libstdc++-v3/include/profile/forward_list", "status": "removed", "additions": 0, "deletions": 219, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fforward_list?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,219 +0,0 @@\n-// <forward_list> -*- C++ -*-\n-\n-// Copyright (C) 2010-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/forward_list\n- *  This file is a GNU debug extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_FORWARD_LIST\n-#define _GLIBCXX_PROFILE_FORWARD_LIST 1\n-\n-#if __cplusplus < 201103L\n-# include <bits/c++0x_warning.h>\n-#else\n-\n-#include <forward_list>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::forward_list wrapper with performance instrumentation.\n-  template<typename _Tp, typename _Alloc = std::allocator<_Tp> >\n-    class forward_list\n-    : public _GLIBCXX_STD_C::forward_list<_Tp, _Alloc>\n-    {\n-      typedef _GLIBCXX_STD_C::forward_list<_Tp, _Alloc> _Base;\n-\n-    public:\n-      typedef typename _Base::size_type\t\tsize_type;\n-      typedef typename _Base::const_iterator\tconst_iterator;\n-\n-      // 23.2.3.1 construct/copy/destroy:\n-\n-      forward_list() = default;\n-\n-      explicit\n-      forward_list(const _Alloc& __al) noexcept\n-      : _Base(__al) { }\n-\n-      forward_list(const forward_list& __list, const _Alloc& __al)\n-      : _Base(__list, __al)\n-      { }\n-\n-      forward_list(forward_list&& __list, const _Alloc& __al)\n-      : _Base(std::move(__list), __al)\n-      { }\n-\n-      explicit\n-      forward_list(size_type __n, const _Alloc& __al = _Alloc())\n-      : _Base(__n, __al)\n-      { }\n-\n-      forward_list(size_type __n, const _Tp& __value,\n-\t\t   const _Alloc& __al = _Alloc())\n-      : _Base(__n, __value, __al)\n-      { }\n-\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-\tforward_list(_InputIterator __first, _InputIterator __last,\n-\t\t     const _Alloc& __al = _Alloc())\n-\t: _Base(__first, __last, __al)\n-\t{ }\n-\n-      forward_list(const forward_list&) = default;\n-      forward_list(forward_list&&) = default;\n-\n-      forward_list(std::initializer_list<_Tp> __il,\n-\t\t   const _Alloc& __al = _Alloc())\n-      : _Base(__il, __al)\n-      { }\n-\n-      ~forward_list() = default;\n-\n-      forward_list&\n-      operator=(const forward_list&) = default;\n-\n-      forward_list&\n-      operator=(forward_list&&) = default;\n-\n-      forward_list&\n-      operator=(std::initializer_list<_Tp> __il)\n-      {\n-\t_M_base() = __il;\n-\treturn *this;\n-      }\n-\n-      void\n-      swap(forward_list& __fl)\n-\tnoexcept( noexcept(declval<_Base&>().swap(__fl)) )\n-      { _Base::swap(__fl); }\n-\n-      void\n-      splice_after(const_iterator __pos, forward_list&& __fl)\n-      { _Base::splice_after(__pos, std::move(__fl)); }\n-\n-      void\n-      splice_after(const_iterator __pos, forward_list& __list)\n-      { _Base::splice_after(__pos, __list); }\n-\n-      void\n-      splice_after(const_iterator __pos, forward_list&& __list,\n-\t\t   const_iterator __i)\n-      { _Base::splice_after(__pos, std::move(__list), __i); }\n-\n-      void\n-      splice_after(const_iterator __pos, forward_list& __list,\n-\t\t   const_iterator __i)\n-      { _Base::splice_after(__pos, __list, __i); }\n-\n-      void\n-      splice_after(const_iterator __pos, forward_list&& __list,\n-\t\t   const_iterator __before, const_iterator __last)\n-      { _Base::splice_after(__pos, std::move(__list), __before, __last); }\n-\n-      void\n-      splice_after(const_iterator __pos, forward_list& __list,\n-\t\t   const_iterator __before, const_iterator __last)\n-      { _Base::splice_after(__pos, __list, __before, __last); }\n-\n-      void\n-      merge(forward_list&& __list)\n-      { _Base::merge(std::move(__list)); }\n-\n-      void\n-      merge(forward_list& __list)\n-      { _Base::merge(__list); }\n-\n-      template<typename _Comp>\n-\tvoid\n-\tmerge(forward_list&& __list, _Comp __comp)\n-\t{ _Base::merge(std::move(__list), __comp); }\n-\n-      template<typename _Comp>\n-\tvoid\n-\tmerge(forward_list& __list, _Comp __comp)\n-\t{ _Base::merge(__list, __comp); }\n-\n-      _Base&\n-      _M_base() noexcept\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const noexcept\t{ return *this; }\n-    };\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator==(const forward_list<_Tp, _Alloc>& __lx,\n-\t       const forward_list<_Tp, _Alloc>& __ly)\n-    { return __lx._M_base() == __ly._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<(const forward_list<_Tp, _Alloc>& __lx,\n-\t      const forward_list<_Tp, _Alloc>& __ly)\n-    { return __lx._M_base() < __ly._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator!=(const forward_list<_Tp, _Alloc>& __lx,\n-\t       const forward_list<_Tp, _Alloc>& __ly)\n-    { return !(__lx == __ly); }\n-\n-  /// Based on operator<\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>(const forward_list<_Tp, _Alloc>& __lx,\n-\t      const forward_list<_Tp, _Alloc>& __ly)\n-    { return (__ly < __lx); }\n-\n-  /// Based on operator<\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>=(const forward_list<_Tp, _Alloc>& __lx,\n-\t       const forward_list<_Tp, _Alloc>& __ly)\n-    { return !(__lx < __ly); }\n-\n-  /// Based on operator<\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<=(const forward_list<_Tp, _Alloc>& __lx,\n-\t       const forward_list<_Tp, _Alloc>& __ly)\n-    { return !(__ly < __lx); }\n-\n-  /// See std::forward_list::swap().\n-  template<typename _Tp, typename _Alloc>\n-    inline void\n-    swap(forward_list<_Tp, _Alloc>& __lx,\n-\t forward_list<_Tp, _Alloc>& __ly)\n-    noexcept(noexcept(__lx.swap(__ly)))\n-    { __lx.swap(__ly); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif // C++11\n-\n-#endif"}, {"sha": "6d4e06444225aacb54830c0ebb91b85f3cf57035", "filename": "libstdc++-v3/include/profile/impl/profiler.h", "status": "removed", "additions": 0, "deletions": 370, "changes": 370, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,370 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler.h\n- *  @brief Interface of the profiling runtime library.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_H\n-#define _GLIBCXX_PROFILE_PROFILER_H 1\n-\n-#include <bits/c++config.h>\n-\n-// Mechanism to define data with inline linkage.\n-#define _GLIBCXX_PROFILE_DEFINE_UNINIT_DATA(__type, __name)             \\\n-  inline __type&                                                        \\\n-  __get_##__name()                                                      \\\n-  {                                                                     \\\n-    static __type __name;                                               \\\n-    return __name;                                                      \\\n-  }\n-#define _GLIBCXX_PROFILE_DEFINE_DATA(__type, __name, __initial_value...) \\\n-  inline __type& __get_##__name() {                                      \\\n-    static __type __name(__initial_value);                               \\\n-    return __name;                                                       \\\n-  }\n-#define _GLIBCXX_PROFILE_DATA(__name) \\\n-  __get_##__name()\n-\n-namespace __gnu_profile\n-{\n-  /** @brief Reentrance guard.\n-   *\n-   * Mechanism to protect all __gnu_profile operations against recursion,\n-   * multithreaded and exception reentrance.\n-   */\n-  struct __reentrance_guard\n-  {\n-    static bool\n-    __get_in()\n-    {\n-      if (__inside() == true)\n-\treturn false;\n-      else\n-\t{\n-\t  __inside() = true;\n-\t  return true;\n-\t}\n-    }\n-\n-    static bool&\n-    __inside()\n-    {\n-      static __thread bool _S_inside(false);\n-      return _S_inside;\n-    }\n-\n-    __reentrance_guard() { }\n-    ~__reentrance_guard() { __inside() = false; }\n-  };\n-\n-  // Forward declarations of implementation functions.\n-  // Don't use any __gnu_profile:: in user code.\n-  // Instead, use the __profcxx... macros, which offer guarded access.\n-  class __container_size_info;\n-  class __hashfunc_info;\n-  class __map2umap_info;\n-  class __vector2list_info;\n-  class __list2slist_info;\n-  class __list2vector_info;\n-\n-  bool __turn_on();\n-  bool __turn_off();\n-  bool __is_invalid();\n-  bool __is_on();\n-  bool __is_off();\n-  void __report();\n-\n-  __container_size_info*\n-  __trace_hashtable_size_construct(std::size_t);\n-  void __trace_hashtable_size_resize(__container_size_info*,\n-\t\t\t\t     std::size_t, std::size_t);\n-  void __trace_hashtable_size_destruct(__container_size_info*,\n-\t\t\t\t       std::size_t, std::size_t);\n-\n-  __hashfunc_info*\n-  __trace_hash_func_construct();\n-  void __trace_hash_func_destruct(__hashfunc_info*,\n-\t\t\t\t  std::size_t, std::size_t, std::size_t);\n-\n-  __container_size_info*\n-  __trace_vector_size_construct(std::size_t);\n-  void __trace_vector_size_resize(__container_size_info*,\n-\t\t\t\t  std::size_t, std::size_t);\n-  void __trace_vector_size_destruct(__container_size_info*,\n-\t\t\t\t    std::size_t, std::size_t);\n-\n-  __vector2list_info*\n-  __trace_vector_to_list_construct();\n-  void __trace_vector_to_list_insert(__vector2list_info*,\n-\t\t\t\t     std::size_t, std::size_t);\n-  void __trace_vector_to_list_iterate(__vector2list_info*, int);\n-  void __trace_vector_to_list_invalid_operator(__vector2list_info*);\n-  void __trace_vector_to_list_resize(__vector2list_info*,\n-\t\t\t\t     std::size_t, std::size_t);\n-  void __trace_vector_to_list_destruct(__vector2list_info*);\n-\n-  __list2slist_info*\n-  __trace_list_to_slist_construct();\n-  void __trace_list_to_slist_rewind(__list2slist_info*);\n-  void __trace_list_to_slist_operation(__list2slist_info*);\n-  void __trace_list_to_slist_destruct(__list2slist_info*);\n-\n-  __list2vector_info*\n-  __trace_list_to_vector_construct();\n-  void __trace_list_to_vector_insert(__list2vector_info*,\n-\t\t\t\t     std::size_t, std::size_t);\n-  void __trace_list_to_vector_iterate(__list2vector_info*, int);\n-  void __trace_list_to_vector_invalid_operator(__list2vector_info*);\n-  void __trace_list_to_vector_resize(__list2vector_info*,\n-\t\t\t\t     std::size_t, std::size_t);\n-  void __trace_list_to_vector_destruct(__list2vector_info*);\n-\n-  __map2umap_info*\n-  __trace_map_to_unordered_map_construct();\n-  void __trace_map_to_unordered_map_invalidate(__map2umap_info*);\n-  void __trace_map_to_unordered_map_insert(__map2umap_info*, std::size_t,\n-\t\t\t\t\t   std::size_t);\n-  void __trace_map_to_unordered_map_erase(__map2umap_info*, std::size_t,\n-\t\t\t\t\t  std::size_t);\n-  void __trace_map_to_unordered_map_iterate(__map2umap_info*, std::size_t);\n-  void __trace_map_to_unordered_map_find(__map2umap_info*, std::size_t);\n-  void __trace_map_to_unordered_map_destruct(__map2umap_info*);\n-} // namespace __gnu_profile\n-\n-// Master switch turns on all diagnostics that are not explicitly turned off.\n-#ifdef _GLIBCXX_PROFILE\n-#ifndef _GLIBCXX_PROFILE_NO_HASHTABLE_TOO_SMALL\n-#define _GLIBCXX_PROFILE_HASHTABLE_TOO_SMALL\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_HASHTABLE_TOO_LARGE\n-#define _GLIBCXX_PROFILE_HASHTABLE_TOO_LARGE\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_VECTOR_TOO_SMALL\n-#define _GLIBCXX_PROFILE_VECTOR_TOO_SMALL\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_VECTOR_TOO_LARGE\n-#define _GLIBCXX_PROFILE_VECTOR_TOO_LARGE\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_INEFFICIENT_HASH\n-#define _GLIBCXX_PROFILE_INEFFICIENT_HASH\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_VECTOR_TO_LIST\n-#define _GLIBCXX_PROFILE_VECTOR_TO_LIST\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_LIST_TO_SLIST\n-#define _GLIBCXX_PROFILE_LIST_TO_SLIST\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_LIST_TO_VECTOR\n-#define _GLIBCXX_PROFILE_LIST_TO_VECTOR\n-#endif\n-#ifndef _GLIBCXX_PROFILE_NO_MAP_TO_UNORDERED_MAP\n-#define _GLIBCXX_PROFILE_MAP_TO_UNORDERED_MAP\n-#endif\n-#endif\n-\n-// Expose global management routines to user code.\n-#ifdef _GLIBCXX_PROFILE\n-#define __profcxx_report() __gnu_profile::__report()\n-#define __profcxx_turn_on() __gnu_profile::__turn_on()\n-#define __profcxx_turn_off() __gnu_profile::__turn_off()\n-#define __profcxx_is_invalid() __gnu_profile::__is_invalid()\n-#define __profcxx_is_on() __gnu_profile::__is_on()\n-#define __profcxx_is_off() __gnu_profile::__is_off()\n-#else\n-#define __profcxx_report()\n-#define __profcxx_turn_on()\n-#define __profcxx_turn_off()\n-#define __profcxx_is_invalid()\n-#define __profcxx_is_on()\n-#define __profcxx_is_off()\n-#endif\n-\n-// Turn on/off instrumentation for HASHTABLE_TOO_SMALL and HASHTABLE_TOO_LARGE.\n-#if (defined(_GLIBCXX_PROFILE_HASHTABLE_TOO_SMALL) \\\n-     || defined(_GLIBCXX_PROFILE_HASHTABLE_TOO_LARGE))\n-#define __profcxx_hashtable_size_construct(__x...) \\\n-  __gnu_profile::__trace_hashtable_size_construct(__x)\n-#define __profcxx_hashtable_size_resize(__x...) \\\n-  __gnu_profile::__trace_hashtable_size_resize(__x)\n-#define __profcxx_hashtable_size_destruct(__x...) \\\n-  __gnu_profile::__trace_hashtable_size_destruct(__x)\n-#else\n-#define __profcxx_hashtable_size_construct(__x...) 0\n-#define __profcxx_hashtable_size_resize(__x...)\n-#define __profcxx_hashtable_size_destruct(__x...)\n-#endif\n-\n-// Turn on/off instrumentation for VECTOR_TOO_SMALL and VECTOR_TOO_LARGE.\n-#if (defined(_GLIBCXX_PROFILE_VECTOR_TOO_SMALL) \\\n-     || defined(_GLIBCXX_PROFILE_VECTOR_TOO_LARGE))\n-#define __profcxx_vector_size_construct(__x...) \\\n-  __gnu_profile::__trace_vector_size_construct(__x)\n-#define __profcxx_vector_size_resize(__x...) \\\n-  __gnu_profile::__trace_vector_size_resize(__x)\n-#define __profcxx_vector_size_destruct(__x...) \\\n-  __gnu_profile::__trace_vector_size_destruct(__x)\n-#else\n-#define __profcxx_vector_size_construct(__x...) 0\n-#define __profcxx_vector_size_resize(__x...)  \n-#define __profcxx_vector_size_destruct(__x...) \n-#endif \n-\n-// Turn on/off instrumentation for INEFFICIENT_HASH.\n-#if defined(_GLIBCXX_PROFILE_INEFFICIENT_HASH)\n-#define __profcxx_hash_func_construct(__x...) \\\n-  __gnu_profile::__trace_hash_func_construct(__x)\n-#define __profcxx_hash_func_destruct(__x...) \\\n-  __gnu_profile::__trace_hash_func_destruct(__x)\n-#else\n-#define __profcxx_hash_func_construct(__x...) 0\n-#define __profcxx_hash_func_destruct(__x...)\n-#endif\n-\n-// Turn on/off instrumentation for VECTOR_TO_LIST.\n-#if defined(_GLIBCXX_PROFILE_VECTOR_TO_LIST)\n-#define __profcxx_vector2list_construct(__x...) \\\n-  __gnu_profile::__trace_vector_to_list_construct(__x)\n-#define __profcxx_vector2list_insert(__x...) \\\n-  __gnu_profile::__trace_vector_to_list_insert(__x)\n-#define __profcxx_vector2list_iterate(__x...) \\\n-  __gnu_profile::__trace_vector_to_list_iterate(__x)\n-#define __profcxx_vector2list_invalid_operator(__x...) \\\n-  __gnu_profile::__trace_vector_to_list_invalid_operator(__x)\n-#define __profcxx_vector2list_resize(__x...) \\\n-  __gnu_profile::__trace_vector_to_list_resize(__x)\n-#define __profcxx_vector2list_destruct(__x...) \\\n-  __gnu_profile::__trace_vector_to_list_destruct(__x)\n-#else\n-#define __profcxx_vector2list_construct(__x...) 0\n-#define __profcxx_vector2list_insert(__x...)\n-#define __profcxx_vector2list_iterate(__x...)\n-#define __profcxx_vector2list_invalid_operator(__x...)\n-#define __profcxx_vector2list_resize(__x...)\n-#define __profcxx_vector2list_destruct(__x...)\n-#endif\n-\n-// Turn on/off instrumentation for LIST_TO_VECTOR. \n-#if defined(_GLIBCXX_PROFILE_LIST_TO_VECTOR)\n-#define __profcxx_list2vector_construct(__x...) \\\n-  __gnu_profile::__trace_list_to_vector_construct(__x)\n-#define __profcxx_list2vector_insert(__x...) \\\n-  __gnu_profile::__trace_list_to_vector_insert(__x)\n-#define __profcxx_list2vector_iterate(__x...) \\\n-  __gnu_profile::__trace_list_to_vector_iterate(__x)\n-#define __profcxx_list2vector_invalid_operator(__x...) \\\n-  __gnu_profile::__trace_list_to_vector_invalid_operator(__x)\n-#define __profcxx_list2vector_destruct(__x...) \\\n-  __gnu_profile::__trace_list_to_vector_destruct(__x)\n-#else\n-#define __profcxx_list2vector_construct(__x...) 0\n-#define __profcxx_list2vector_insert(__x...)\n-#define __profcxx_list2vector_iterate(__x...)\n-#define __profcxx_list2vector_invalid_operator(__x...)\n-#define __profcxx_list2vector_destruct(__x...)\n-#endif\n-\n-// Turn on/off instrumentation for LIST_TO_SLIST.  \n-#if defined(_GLIBCXX_PROFILE_LIST_TO_SLIST)\n-#define __profcxx_list2slist_construct(__x...) \\\n-    __gnu_profile::__trace_list_to_slist_construct(__x)\n-#define __profcxx_list2slist_rewind(__x...) \\\n-  __gnu_profile::__trace_list_to_slist_rewind(__x)\n-#define __profcxx_list2slist_operation(__x...) \\\n-  __gnu_profile::__trace_list_to_slist_operation(__x)\n-#define __profcxx_list2slist_destruct(__x...) \\\n-  __gnu_profile::__trace_list_to_slist_destruct(__x)\n-#else\n-#define __profcxx_list2slist_construct(__x...) 0\n-#define __profcxx_list2slist_rewind(__x...)\n-#define __profcxx_list2slist_operation(__x...)\n-#define __profcxx_list2slist_destruct(__x...)\n-#endif \n-\n-// Turn on/off instrumentation for MAP_TO_UNORDERED_MAP.\n-#if defined(_GLIBCXX_PROFILE_MAP_TO_UNORDERED_MAP)\n-#define __profcxx_map2umap_construct(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_construct(__x)\n-#define __profcxx_map2umap_insert(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_insert(__x)\n-#define __profcxx_map2umap_erase(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_erase(__x)\n-#define __profcxx_map2umap_iterate(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_iterate(__x)\n-#define __profcxx_map2umap_invalidate(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_invalidate(__x)\n-#define __profcxx_map2umap_find(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_find(__x)\n-#define __profcxx_map2umap_destruct(__x...) \\\n-  __gnu_profile::__trace_map_to_unordered_map_destruct(__x)\n-#else\n-#define __profcxx_map2umap_construct(__x...) 0\n-#define __profcxx_map2umap_insert(__x...)\n-#define __profcxx_map2umap_erase(__x...)\n-#define __profcxx_map2umap_iterate(__x...)\n-#define __profcxx_map2umap_invalidate(__x...)\n-#define __profcxx_map2umap_find(__x...)\n-#define __profcxx_map2umap_destruct(__x...)\n-#endif\n-\n-// Set default values for compile-time customizable variables.\n-#ifndef _GLIBCXX_PROFILE_TRACE_PATH_ROOT\n-#define _GLIBCXX_PROFILE_TRACE_PATH_ROOT \"libstdcxx-profile\"\n-#endif\n-#ifndef _GLIBCXX_PROFILE_TRACE_ENV_VAR\n-#define _GLIBCXX_PROFILE_TRACE_ENV_VAR \"_GLIBCXX_PROFILE_TRACE_PATH_ROOT\"\n-#endif\n-#ifndef _GLIBCXX_PROFILE_MAX_WARN_COUNT_ENV_VAR\n-#define _GLIBCXX_PROFILE_MAX_WARN_COUNT_ENV_VAR \\\n-  \"_GLIBCXX_PROFILE_MAX_WARN_COUNT\"\n-#endif\n-#ifndef _GLIBCXX_PROFILE_MAX_WARN_COUNT\n-#define _GLIBCXX_PROFILE_MAX_WARN_COUNT 10\n-#endif\n-#ifndef _GLIBCXX_PROFILE_MAX_STACK_DEPTH\n-#define _GLIBCXX_PROFILE_MAX_STACK_DEPTH 32\n-#endif\n-#ifndef _GLIBCXX_PROFILE_MAX_STACK_DEPTH_ENV_VAR\n-#define _GLIBCXX_PROFILE_MAX_STACK_DEPTH_ENV_VAR \\\n-  \"_GLIBCXX_PROFILE_MAX_STACK_DEPTH\"\n-#endif\n-#ifndef _GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC\n-#define _GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC (1 << 28)\n-#endif\n-#ifndef _GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC_ENV_VAR\n-#define _GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC_ENV_VAR \\\n-  \"_GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC\"\n-#endif\n-\n-// Instrumentation hook implementations.\n-#include \"profile/impl/profiler_hash_func.h\"\n-#include \"profile/impl/profiler_hashtable_size.h\"\n-#include \"profile/impl/profiler_map_to_unordered_map.h\"\n-#include \"profile/impl/profiler_vector_size.h\"\n-#include \"profile/impl/profiler_vector_to_list.h\"\n-#include \"profile/impl/profiler_list_to_slist.h\"\n-#include \"profile/impl/profiler_list_to_vector.h\"\n-\n-#endif // _GLIBCXX_PROFILE_PROFILER_H"}, {"sha": "839d74761974a50007f27be12c0b3e0f1c72485a", "filename": "libstdc++-v3/include/profile/impl/profiler_algos.h", "status": "removed", "additions": 0, "deletions": 111, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_algos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_algos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_algos.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,111 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2010-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_algos.h\n- *  @brief Algorithms used by the profile extension.\n- *\n- *  This file is needed to avoid including \\<algorithm\\> or \\<bits/stl_algo.h\\>.\n- *  Including those files would result in recursive includes.\n- *  These implementations are oversimplified.  In general, efficiency may be\n- *  sacrificed to minimize maintenance overhead.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_ALGOS_H\n-#define _GLIBCXX_PROFILE_PROFILER_ALGOS_H 1\n-\n-namespace __gnu_profile\n-{\n-  /* Helper for __top_n.  Insert in sorted vector, but not beyond Nth elem.  */\n-  template<typename _Container>\n-    void\n-    __insert_top_n(_Container& __output,\n-\t\t   const typename _Container::value_type& __value,\n-\t\t   typename _Container::size_type __n)\n-    {\n-      typename _Container::iterator __it = __output.begin();\n-      typename _Container::size_type __count = 0;\n-\n-      // Skip up to N - 1 elements larger than VALUE.\n-      // XXX: Could do binary search for random iterators.\n-      while (true)\n-\t{\n-\t  if (__count >= __n)\n-\t    // VALUE is not in top N.\n-\t    return;\n-\n-\t  if (__it == __output.end())\n-\t    break;\n-\n-\t  if (*__it < __value)\n-\t    break;\n-\n-\t  ++__it;\n-\t  ++__count;\n-\t}\n-\n-      __output.insert(__it, __value);\n-    }\n-\n-  /* Copy the top N elements in INPUT, sorted in reverse order, to OUTPUT.  */\n-  template<typename _Container>\n-    void\n-    __top_n(const _Container& __input, _Container& __output,\n-\t    typename _Container::size_type __n)\n-    {\n-      __output.clear();\n-      typename _Container::const_iterator __it;\n-      for (__it = __input.begin(); __it != __input.end(); ++__it)\n-\t__insert_top_n(__output, *__it, __n);\n-    }\n-\n-  /* Simplified clone of std::for_each.  */\n-  template<typename _InputIterator, typename _Function>\n-    _Function \n-    __for_each(_InputIterator __first, _InputIterator __last, _Function __f)\n-    {\n-      for (; __first != __last; ++__first)\n-\t__f(*__first);\n-      return __f;\n-    }\n-\n-  /* Simplified clone of std::remove.  */\n-  template<typename _ForwardIterator, typename _Tp>\n-    _ForwardIterator\n-    __remove(_ForwardIterator __first, _ForwardIterator __last,\n-\t     const _Tp& __value)\n-    {\n-      if(__first == __last)\n-\treturn __first;\n-      _ForwardIterator __result = __first;\n-      ++__first;\n-      for(; __first != __last; ++__first)\n-\tif(!(*__first == __value))\n-\t  {\n-\t    *__result = *__first;\n-\t    ++__result;\n-\t  }\n-      return __result;\n-    }\n-} // namespace __gnu_profile\n-\n-#endif /* _GLIBCXX_PROFILE_PROFILER_ALGOS_H */"}, {"sha": "1fabdc4ee7f7279260331bdfe464ba6cfa19b16f", "filename": "libstdc++-v3/include/profile/impl/profiler_container_size.h", "status": "removed", "additions": 0, "deletions": 186, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_container_size.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_container_size.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_container_size.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,186 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_container_size.h\n- *  @brief Diagnostics for container sizes.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_CONTAINER_SIZE_H\n-#define _GLIBCXX_PROFILE_PROFILER_CONTAINER_SIZE_H 1\n-\n-#include <sstream>\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief A container size instrumentation line in the object table.  */\n-  class __container_size_info\n-  : public __object_info_base \n-  {\n-  public:\n-    __container_size_info(__stack_t __stack)\n-    : __object_info_base(__stack), _M_init(0), _M_max(0),\n-      _M_min(0), _M_total(0), _M_item_min(0), _M_item_max(0),\n-      _M_item_total(0), _M_count(0), _M_resize(0), _M_cost(0)\n-    { }\n-\n-    void\n-    __write(FILE* __f) const\n-    {\n-      std::fprintf(__f, \"%Zu %Zu %Zu %Zu %Zu %Zu %Zu %Zu %Zu %Zu\\n\", \n-\t\t   _M_init, _M_count, _M_cost, _M_resize, _M_min, _M_max,\n-\t\t   _M_total, _M_item_min, _M_item_max, _M_item_total);\n-    }\n-\n-    float\n-    __magnitude() const\n-    { return static_cast<float>(_M_cost); }\n-\n-    std::string\n-    __advice() const\n-    {\n-      std::stringstream __message;\n-      if (_M_init < _M_item_max)\n-\t__message << \"change initial container size from \" << _M_init\n-\t\t  << \" to \" << _M_item_max;\n-      return __message.str();\n-    }\n-\n-    void\n-    __init(std::size_t __num)\n-    {\n-      _M_init = __num;\n-      _M_max = __num;\n-    }\n-\n-    void\n-    __merge(const __container_size_info& __o)\n-    {\n-      __object_info_base::__merge(__o);\n-      _M_init        = std::max(_M_init, __o._M_init);\n-      _M_max         = std::max(_M_max, __o._M_max);\n-      _M_item_max    = std::max(_M_item_max, __o._M_item_max);\n-      _M_min         = std::min(_M_min, __o._M_min);\n-      _M_item_min    = std::min(_M_item_min, __o._M_item_min);\n-      _M_total      += __o._M_total;\n-      _M_item_total += __o._M_item_total;\n-      _M_count      += __o._M_count;\n-      _M_cost       += __o._M_cost;\n-      _M_resize     += __o._M_resize;\n-    }\n-\n-    // Call if a container is destructed or cleaned.\n-    void\n-    __destruct(std::size_t __num, std::size_t __inum)\n-    {\n-      _M_max = std::max(_M_max, __num);\n-      _M_item_max = std::max(_M_item_max, __inum);\n-      if (_M_min == 0)\n-\t{\n-\t  _M_min = __num; \n-\t  _M_item_min = __inum;\n-\t}\n-      else\n-\t{\n-\t  _M_min = std::min(_M_min, __num);\n-\t  _M_item_min = std::min(_M_item_min, __inum);\n-\t}\n-\n-      _M_total += __num;\n-      _M_item_total += __inum;\n-      _M_count += 1;\n-    }\n-\n-    // Estimate the cost of resize/rehash. \n-    float\n-    __resize_cost(std::size_t __from, std::size_t)\n-    { return __from; }\n-\n-    // Call if container is resized.\n-    void\n-    __resize(std::size_t __from, std::size_t __to)\n-    {\n-      _M_cost += this->__resize_cost(__from, __to);\n-      _M_resize += 1;\n-      _M_max = std::max(_M_max, __to);\n-    }\n-\n-  private:\n-    std::size_t _M_init;\n-    std::size_t _M_max;  // range of # buckets\n-    std::size_t _M_min;\n-    std::size_t _M_total;\n-    std::size_t _M_item_min;  // range of # items\n-    std::size_t _M_item_max;\n-    std::size_t _M_item_total;\n-    std::size_t _M_count;\n-    std::size_t _M_resize;\n-    std::size_t _M_cost;\n-  };\n-\n-  /** @brief A container size instrumentation line in the stack table.  */\n-  class __container_size_stack_info\n-  : public __container_size_info\n-  {\n-  public:\n-    __container_size_stack_info(const __container_size_info& __o)\n-    : __container_size_info(__o) { }\n-  };\n-  \n-  /** @brief Container size instrumentation trace producer.  */\n-  class __trace_container_size\n-  : public __trace_base<__container_size_info, __container_size_stack_info> \n-  {\n-  public:\n-    ~__trace_container_size() { }\n-\n-    __trace_container_size()\n-    : __trace_base<__container_size_info, __container_size_stack_info>() { };\n-\n-    // Insert a new node at construct with object, callstack and initial size. \n-    __container_size_info*\n-    __insert(__stack_t __stack, std::size_t __num)\n-    {\n-      __container_size_info* __ret =  __add_object(__stack);\n-      if (__ret)\n-\t__ret->__init(__num);\n-      return __ret;\n-    }\n-\n-    // Call at destruction/clean to set container final size.\n-    void\n-    __destruct(__container_size_info* __obj_info,\n-\t       std::size_t __num, std::size_t __inum)\n-    {\n-      __obj_info->__destruct(__num, __inum);\n-      __retire_object(__obj_info);\n-    }\n-  };\n-\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_CONTAINER_SIZE_H */"}, {"sha": "f60f8cc46951731ed45e5c70e5a05e8168c42c0f", "filename": "libstdc++-v3/include/profile/impl/profiler_hash_func.h", "status": "removed", "additions": 0, "deletions": 153, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_hash_func.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_hash_func.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_hash_func.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,153 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_hash_func.h\n- *  @brief Data structures to represent profiling traces.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_HASH_FUNC_H\n-#define _GLIBCXX_PROFILE_PROFILER_HASH_FUNC_H 1\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief A hash performance instrumentation line in the object table.  */\n-  class __hashfunc_info\n-  : public __object_info_base\n-  {\n-  public:\n-    __hashfunc_info(__stack_t __stack)\n-    : __object_info_base(__stack), _M_longest_chain(0),\n-      _M_accesses(0), _M_hops(0) { }\n-\n-    void\n-    __merge(const __hashfunc_info& __o)\n-    {\n-      __object_info_base::__merge(__o);\n-      _M_longest_chain  = std::max(_M_longest_chain, __o._M_longest_chain);\n-      _M_accesses      += __o._M_accesses;\n-      _M_hops          += __o._M_hops;\n-    }\n-\n-    void\n-    __destruct(std::size_t __chain, std::size_t __accesses,\n-\t       std::size_t __hops)\n-    { \n-      _M_longest_chain  = std::max(_M_longest_chain, __chain);\n-      _M_accesses      += __accesses;\n-      _M_hops          += __hops;\n-    }\n-\n-    void\n-    __write(FILE* __f) const\n-    { std::fprintf(__f, \"%Zu %Zu %Zu\\n\", _M_hops,\n-\t\t   _M_accesses, _M_longest_chain); }\n-\n-    float\n-    __magnitude() const\n-    { return static_cast<float>(_M_hops); }\n-\n-    std::string\n-    __advice() const\n-    { return \"change hash function\"; }\n-\n-  private:\n-    std::size_t _M_longest_chain;\n-    std::size_t _M_accesses;\n-    std::size_t _M_hops;\n-  };\n-\n-  /** @brief A hash performance instrumentation line in the stack table.  */\n-  class __hashfunc_stack_info \n-  : public __hashfunc_info\n-  {\n-  public:\n-    __hashfunc_stack_info(const __hashfunc_info& __o)\n-    : __hashfunc_info(__o) { }\n-  };\n-\n-  /** @brief Hash performance instrumentation producer.  */\n-  class __trace_hash_func\n-  : public __trace_base<__hashfunc_info, __hashfunc_stack_info> \n-  {\n-  public:\n-    __trace_hash_func()\n-    : __trace_base<__hashfunc_info, __hashfunc_stack_info>()\n-    { __id = \"hash-distr\"; }\n-\n-    ~__trace_hash_func() {}\n-    \n-    // Call at destruction/clean to set container final size.\n-    void\n-    __destruct(__hashfunc_info* __obj_info, \n-\t       std::size_t __chain, std::size_t __accesses, std::size_t __hops)\n-    {\n-      if (!__obj_info)\n-\treturn;\n-\n-      __obj_info->__destruct(__chain, __accesses, __hops);\n-      __retire_object(__obj_info);\n-    }\n-  };\n-\n-  inline void\n-  __trace_hash_func_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_hash_func) = new __trace_hash_func(); }\n-\n-  inline void\n-  __trace_hash_func_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_hash_func); }\n-\n-  inline void\n-  __trace_hash_func_report(FILE* __f, __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_hash_func), __f, __warnings); }\n-\n-  inline __hashfunc_info*\n-  __trace_hash_func_construct()\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-\n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_hash_func)->__add_object(__get_stack());\n-  }\n-\n-  inline void\n-  __trace_hash_func_destruct(__hashfunc_info* __obj_info,\n-\t\t\t     std::size_t __chain, std::size_t __accesses,\n-\t\t\t     std::size_t __hops)\n-  {\n-    _GLIBCXX_PROFILE_DATA(_S_hash_func)->__destruct(__obj_info, __chain,\n-\t\t\t\t\t\t    __accesses, __hops);\n-  }\n-\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_HASH_FUNC_H */"}, {"sha": "3ba60ab37fd08eb2624bfac6f7dd7e5230d3096a", "filename": "libstdc++-v3/include/profile/impl/profiler_hashtable_size.h", "status": "removed", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_hashtable_size.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_hashtable_size.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_hashtable_size.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,100 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_hashtable_size.h\n- *  @brief Collection of hashtable size traces.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_HASHTABLE_SIZE_H\n-#define _GLIBCXX_PROFILE_PROFILER_HASHTABLE_SIZE_H 1\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-#include \"profile/impl/profiler_state.h\"\n-#include \"profile/impl/profiler_container_size.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief Hashtable size instrumentation trace producer.  */\n-  class __trace_hashtable_size\n-  : public __trace_container_size\n-  {\n-  public:\n-    __trace_hashtable_size()\n-    : __trace_container_size()\n-    { __id = \"hashtable-size\"; }\n-  };\n-\n-  inline void\n-  __trace_hashtable_size_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_hashtable_size) = new __trace_hashtable_size(); }\n-\n-  inline void\n-  __trace_hashtable_size_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_hashtable_size); }\n-\n-  inline void\n-  __trace_hashtable_size_report(FILE* __f, __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_hashtable_size), __f, __warnings); }\n-\n-  inline __container_size_info*\n-  __trace_hashtable_size_construct(std::size_t __num)\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-  \n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_hashtable_size)->\n-      __insert(__get_stack(), __num);\n-  }\n-\n-  inline void\n-  __trace_hashtable_size_resize(__container_size_info* __obj_info,\n-\t\t\t\tstd::size_t __from, std::size_t __to)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__resize(__from, __to);\n-  }\n-\n-  inline void\n-  __trace_hashtable_size_destruct(__container_size_info* __obj_info,\n-\t\t\t\t  std::size_t __num, std::size_t __inum)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    _GLIBCXX_PROFILE_DATA(_S_hashtable_size)->\n-      __destruct(__obj_info, __num, __inum);\n-  }\n-\n-} // namespace __gnu_profile\n-\n-#endif /* _GLIBCXX_PROFILE_PROFILER_HASHTABLE_SIZE_H */"}, {"sha": "ae760278a5b975b2d74834d485adc5045318c1cc", "filename": "libstdc++-v3/include/profile/impl/profiler_list_to_slist.h", "status": "removed", "additions": 0, "deletions": 168, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_list_to_slist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_list_to_slist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_list_to_slist.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,168 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_list_to_slist.h\n- *  @brief Diagnostics for list to slist.\n- */\n-\n-// Written by Changhee Jung.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_LIST_TO_SLIST_H\n-#define _GLIBCXX_PROFILE_PROFILER_LIST_TO_SLIST_H 1\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-\n-namespace __gnu_profile\n-{\n-  class __list2slist_info\n-  : public __object_info_base\n-  {\n-  public:\n-    __list2slist_info(__stack_t __stack)\n-    : __object_info_base(__stack), _M_rewind(false), _M_operations(0) { }\n-\n-    // XXX: the magnitude should be multiplied with a constant factor F,\n-    // where F is 1 when the malloc size class of list nodes is different\n-    // from the malloc size class of slist nodes.  When they fall into the same\n-    // class, the only slist benefit is from having to set fewer links, so\n-    // the factor F should be much smaller, closer to 0 than to 1.\n-    // This could be implemented by passing the size classes in the config \n-    // file.  For now, we always assume F to be 1.\n-\n-    float\n-    __magnitude() const\n-    {\n-      if (!_M_rewind)\n-\treturn _M_operations;\n-      else\n-\treturn 0;\n-    }\n-    \n-    void\n-    __write(FILE* __f) const\n-    { std::fprintf(__f, \"%s\\n\", _M_rewind ? \"invalid\" : \"valid\"); }\n-\n-    std::string\n-    __advice() const\n-    { return \"change std::list to std::forward_list\"; }\n-\n-    void\n-    __opr_rewind()\n-    {\n-      _M_rewind = true;\n-      __set_invalid();\n-    }\n-\n-    void\n-    __record_operation()\n-    { ++_M_operations; }\n-\n-    bool\n-    __has_rewind()\n-    { return _M_rewind; }\n-\n-  private:\n-    bool _M_rewind;\n-    std::size_t _M_operations;\n-  };\n-\n-  class __list2slist_stack_info\n-  : public __list2slist_info\n-  {\n-  public:\n-    __list2slist_stack_info(const __list2slist_info& __o) \n-    : __list2slist_info(__o) { }\n-  };\n-\n-  class __trace_list_to_slist\n-  : public __trace_base<__list2slist_info, __list2slist_stack_info> \n-  {\n-  public:\n-    ~__trace_list_to_slist() { }\n-\n-    __trace_list_to_slist()\n-    : __trace_base<__list2slist_info, __list2slist_stack_info>()\n-    { __id = \"list-to-slist\"; }\n-\n-    void\n-    __destruct(__list2slist_info* __obj_info)\n-    { __retire_object(__obj_info); }\n-  };\n-\n-\n-  inline void\n-  __trace_list_to_slist_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_list_to_slist) = new __trace_list_to_slist(); }\n-\n-  inline void\n-  __trace_list_to_slist_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_list_to_slist); }\n-\n-  inline void\n-  __trace_list_to_slist_report(FILE* __f, __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_list_to_slist), __f, __warnings); }\n-\n-  inline __list2slist_info*\n-  __trace_list_to_slist_construct()\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-\n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_list_to_slist)->__add_object(__get_stack());\n-  }\n-\n-  inline void\n-  __trace_list_to_slist_rewind(__list2slist_info* __obj_info) \n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__opr_rewind();\n-  }\n-\n-  inline void\n-  __trace_list_to_slist_operation(__list2slist_info* __obj_info) \n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__record_operation();\n-  }\n-\n-  inline void\n-  __trace_list_to_slist_destruct(__list2slist_info* __obj_info)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    _GLIBCXX_PROFILE_DATA(_S_list_to_slist)->__destruct(__obj_info);\n-  }\n-\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_LIST_TO_SLIST_H */"}, {"sha": "c755c4c97350ffbde2b467145e78812237110560", "filename": "libstdc++-v3/include/profile/impl/profiler_list_to_vector.h", "status": "removed", "additions": 0, "deletions": 261, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_list_to_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_list_to_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_list_to_vector.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,261 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_list_to_vector.h\n- *  @brief diagnostics for list to vector.\n- */\n-\n-// Written by Changhee Jung.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_LIST_TO_VECTOR_H\n-#define _GLIBCXX_PROFILE_PROFILER_LIST_TO_VECTOR_H 1\n-\n-#include <sstream>\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief A list-to-vector instrumentation line in the object table.  */\n-  class __list2vector_info\n-  : public __object_info_base\n-  {\n-  public:\n-    __list2vector_info(__stack_t __stack)\n-    : __object_info_base(__stack), _M_shift_count(0), _M_iterate(0),\n-      _M_resize(0), _M_list_cost(0), _M_vector_cost(0),\n-      _M_max_size(0) { }\n-\n-    void\n-    __merge(const __list2vector_info& __o)\n-    {\n-      __object_info_base::__merge(__o);\n-      _M_shift_count  += __o._M_shift_count;\n-      _M_iterate      += __o._M_iterate;\n-      _M_vector_cost  += __o._M_vector_cost;\n-      _M_list_cost    += __o._M_list_cost;\n-      _M_resize       += __o._M_resize;\n-      _M_max_size     = std::max( _M_max_size, __o._M_max_size);\n-    }\n-\n-    void\n-    __write(FILE* __f) const\n-    {\n-      std::fprintf(__f, \"%Zu %Zu %Zu %.0f %.0f\\n\", _M_shift_count,\n-\t\t   _M_resize, _M_iterate, _M_vector_cost, _M_list_cost);\n-    }\n-\n-    float\n-    __magnitude() const\n-    { return _M_list_cost - _M_vector_cost; }\n-  \n-    std::string\n-    __advice() const\n-    {\n-      std::stringstream __sstream;\n-      __sstream \n-\t<< \"change std::list to std::vector and its initial size from 0 to \"\n-\t<< _M_max_size;\n-      return __sstream.str();\n-    }\n-\n-    std::size_t\n-    __shift_count()\n-    { return _M_shift_count; }\n-  \n-    std::size_t\n-    __iterate()\n-    { return _M_iterate; }\n-  \n-    float\n-    __list_cost()\n-    { return _M_list_cost; }\n-  \n-    std::size_t\n-    __resize()\n-    { return _M_resize; }\n-  \n-    void\n-    __set_list_cost(float __lc)\n-    { _M_list_cost = __lc; }\n-    \n-    void\n-    __set_vector_cost(float __vc)\n-    { _M_vector_cost = __vc; }\n-    \n-    void\n-    __opr_insert(std::size_t __shift, std::size_t __size)\n-    {\n-      _M_shift_count += __shift;\n-      _M_max_size = std::max(_M_max_size, __size);\n-    }\n-\n-    void\n-    __opr_iterate(int __num)\n-    { __gnu_cxx::__atomic_add(&_M_iterate, __num); }\n-\n-    void\n-    __resize(std::size_t __from, std::size_t)\n-    { _M_resize += __from; }\n-\n-  private:\n-    std::size_t _M_shift_count;\n-    mutable _Atomic_word _M_iterate;\n-    std::size_t _M_resize;\n-    float _M_list_cost;\n-    float _M_vector_cost;\n-    std::size_t _M_max_size;\n-  };\n-\n-  class __list2vector_stack_info \n-  : public __list2vector_info\n-  {\n-  public:\n-    __list2vector_stack_info(const __list2vector_info& __o) \n-    : __list2vector_info(__o) {}\n-  };\n-\n-  class __trace_list_to_vector\n-  : public __trace_base<__list2vector_info, __list2vector_stack_info> \n-  {\n-  public:\n-    __trace_list_to_vector()\n-    : __trace_base<__list2vector_info, __list2vector_stack_info>()\n-    { __id = \"list-to-vector\"; }\n-\n-    ~__trace_list_to_vector() { }\n-\n-    // Call at destruction/clean to set container final size.\n-    void\n-    __destruct(__list2vector_info* __obj_info)\n-    {\n-      float __vc = __vector_cost(__obj_info->__shift_count(),\n-\t\t\t\t __obj_info->__iterate());\n-      float __lc = __list_cost(__obj_info->__shift_count(),\n-\t\t\t       __obj_info->__iterate());\n-      __obj_info->__set_vector_cost(__vc);\n-      __obj_info->__set_list_cost(__lc);\n-      __retire_object(__obj_info);\n-    }\n-\n-    // Collect cost of operations.\n-    float\n-    __vector_cost(std::size_t __shift, std::size_t __iterate)\n-    {\n-      // The resulting vector will use a 'reserve' method.\n-      return (__shift\n-\t      * _GLIBCXX_PROFILE_DATA(__vector_shift_cost_factor).__value\n-\t      + __iterate\n-\t      * _GLIBCXX_PROFILE_DATA(__vector_iterate_cost_factor).__value); \n-    }\n-\n-    float\n-    __list_cost(std::size_t __shift, std::size_t __iterate)\n-    {\n-      return (__shift\n-\t      * _GLIBCXX_PROFILE_DATA(__list_shift_cost_factor).__value\n-\t      + __iterate\n-\t      * _GLIBCXX_PROFILE_DATA(__list_iterate_cost_factor).__value); \n-    }\n-  };\n-\n-\n-  inline void\n-  __trace_list_to_vector_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_list_to_vector) = new __trace_list_to_vector(); }\n-\n-  inline void\n-  __trace_list_to_vector_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_list_to_vector); }\n-\n-  inline void\n-  __trace_list_to_vector_report(FILE* __f, __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_list_to_vector), __f, __warnings); }\n-\n-  inline __list2vector_info*\n-  __trace_list_to_vector_construct()\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-\n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_list_to_vector)\n-      ->__add_object(__get_stack());\n-  }\n-\n-  inline void\n-  __trace_list_to_vector_insert(__list2vector_info* __obj_info,\n-\t\t\t\tstd::size_t __shift, std::size_t __size)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__opr_insert(__shift, __size);\n-  }\n-\n-  inline void\n-  __trace_list_to_vector_iterate(__list2vector_info* __obj_info,\n-\t\t\t\t int)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    // We only collect if an iteration took place no matter in what side.\n-    __obj_info->__opr_iterate(1);\n-  }\n-\n-  inline void\n-  __trace_list_to_vector_invalid_operator(__list2vector_info* __obj_info)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__set_invalid();\n-  }\n-\n-  inline void\n-  __trace_list_to_vector_resize(__list2vector_info* __obj_info, \n-\t\t\t\tstd::size_t __from, std::size_t __to)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__resize(__from, __to);\n-  }\n-\n-  inline void\n-  __trace_list_to_vector_destruct(__list2vector_info* __obj_info)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    _GLIBCXX_PROFILE_DATA(_S_list_to_vector)->__destruct(__obj_info);\n-  }\n-\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_LIST_TO_VECTOR_H__ */"}, {"sha": "a81b1bd3be6e3e471e308e54eaf681283b2c621f", "filename": "libstdc++-v3/include/profile/impl/profiler_map_to_unordered_map.h", "status": "removed", "additions": 0, "deletions": 275, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_map_to_unordered_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_map_to_unordered_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_map_to_unordered_map.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,275 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_map_to_unordered_map.h\n- *  @brief Diagnostics for map to unordered_map.\n- */\n-\n-// Written by Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_MAP_TO_UNORDERED_MAP_H\n-#define _GLIBCXX_PROFILE_PROFILER_MAP_TO_UNORDERED_MAP_H 1\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-\n-namespace __gnu_profile\n-{\n-  inline int\n-  __log2(std::size_t __size)\n-  {\n-    for (int __bit_count = sizeof(std::size_t) - 1; __bit_count >= 0;\n-\t -- __bit_count)\n-      if ((2 << __bit_count) & __size)\n-\treturn __bit_count;\n-    return 0;\n-  }\n-\n-  inline float\n-  __map_insert_cost(std::size_t __size)\n-  { return (_GLIBCXX_PROFILE_DATA(__map_insert_cost_factor).__value\n-\t    * static_cast<float>(__log2(__size))); }\n-\n-  inline float\n-  __map_erase_cost(std::size_t __size)\n-  { return (_GLIBCXX_PROFILE_DATA(__map_erase_cost_factor).__value\n-\t    * static_cast<float>(__log2(__size))); }\n-\n-  inline float\n-  __map_find_cost(std::size_t __size)\n-  { return (_GLIBCXX_PROFILE_DATA(__map_find_cost_factor).__value\n-\t    * static_cast<float>(__log2(__size))); }\n-\n-  /** @brief A map-to-unordered_map instrumentation line in the\n-      object table.  */\n-  class __map2umap_info\n-  : public __object_info_base\n-  {\n-  public:\n-    __map2umap_info(__stack_t __stack)\n-    : __object_info_base(__stack), _M_insert(0), _M_erase(0), _M_find(0),\n-      _M_iterate(0), _M_umap_cost(0.0), _M_map_cost(0.0)\n-    { }\n-\n-    void\n-    __merge(const __map2umap_info& __o)\n-    {\n-      __object_info_base::__merge(__o);\n-      _M_insert\t\t+= __o._M_insert;\n-      _M_erase\t\t+= __o._M_erase;\n-      _M_find\t\t+= __o._M_find;\n-      _M_iterate\t+= __o._M_iterate;\n-      _M_umap_cost\t+= __o._M_umap_cost;\n-      _M_map_cost\t+= __o._M_map_cost;\n-    }\n-\n-    void\n-    __write(FILE* __f) const\n-    {\n-      std::fprintf(__f, \"%Zu %Zu %Zu %Zu %.0f %.0f\\n\",\n-\t\t   _M_insert, _M_erase, _M_find, _M_iterate, _M_map_cost,\n-\t\t   _M_umap_cost);\n-    }\n-\n-    float\n-    __magnitude() const\n-    { return _M_map_cost - _M_umap_cost; }\n-\n-    std::string\n-    __advice() const\n-    { return \"prefer an unordered container\"; }\n-\n-    void\n-    __record_insert(std::size_t __size, std::size_t __count)\n-    {\n-      ++_M_insert;\n-      if (__count)\n-\t{\n-\t  _M_map_cost += __count * __map_insert_cost(__size);\n-\t  _M_umap_cost\n-\t    += (__count\n-\t\t* _GLIBCXX_PROFILE_DATA(__umap_insert_cost_factor).__value);\n-\t}\n-    }\n-\n-    void\n-    __record_erase(std::size_t __size, std::size_t __count)\n-    {\n-      ++_M_erase;\n-      if (__count)\n-\t{\n-\t  _M_map_cost += __count * __map_erase_cost(__size);\n-\t  _M_umap_cost\n-\t    += (__count\n-\t\t* _GLIBCXX_PROFILE_DATA(__umap_erase_cost_factor).__value);\n-\t}\n-    }\n-\n-    void\n-    __record_find(std::size_t __size)\n-    {\n-      ++_M_find;\n-      _M_map_cost += __map_find_cost(__size);\n-      _M_umap_cost += _GLIBCXX_PROFILE_DATA(__umap_find_cost_factor).__value;\n-    }\n-\n-    void\n-    __record_iterate(int __count)\n-    { __gnu_cxx::__atomic_add(&_M_iterate, __count); }\n-\n-    void\n-    __set_iterate_costs()\n-    {\n-      _M_umap_cost\n-\t+= (_M_iterate\n-\t    * _GLIBCXX_PROFILE_DATA(__umap_iterate_cost_factor).__value);\n-      _M_map_cost\n-\t+= (_M_iterate\n-\t    * _GLIBCXX_PROFILE_DATA(__map_iterate_cost_factor).__value);\n-    }\n-\n-  private:\n-    std::size_t _M_insert;\n-    std::size_t _M_erase;\n-    std::size_t _M_find;\n-    mutable _Atomic_word _M_iterate;\n-    float _M_umap_cost;\n-    float _M_map_cost;\n-  };\n-\n-\n-  /** @brief A map-to-unordered_map instrumentation line in the\n-      stack table.  */\n-  class __map2umap_stack_info\n-  : public __map2umap_info\n-  {\n-  public:\n-    __map2umap_stack_info(const __map2umap_info& __o)\n-    : __map2umap_info(__o) { }\n-  };\n-\n-  /** @brief Map-to-unordered_map instrumentation producer.  */\n-  class __trace_map2umap\n-  : public __trace_base<__map2umap_info, __map2umap_stack_info>\n-  {\n-  public:\n-    __trace_map2umap()\n-    : __trace_base<__map2umap_info, __map2umap_stack_info>()\n-    { __id = \"ordered-to-unordered\"; }\n-\n-    // Call at destruction/clean to set container final size.\n-    void\n-    __destruct(__map2umap_info* __obj_info)\n-    {\n-      __obj_info->__set_iterate_costs();\n-      __retire_object(__obj_info);\n-    }\n-  };\n-\n-  inline void\n-  __trace_map_to_unordered_map_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_map2umap) = new __trace_map2umap(); }\n-\n-  inline void\n-  __trace_map_to_unordered_map_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_map2umap); }\n-\n-  inline void\n-  __trace_map_to_unordered_map_report(FILE* __f,\n-\t\t\t\t      __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_map2umap), __f, __warnings); }\n-\n-  inline __map2umap_info*\n-  __trace_map_to_unordered_map_construct()\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-\n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_map2umap)->__add_object(__get_stack());\n-  }\n-\n-  inline void\n-  __trace_map_to_unordered_map_insert(__map2umap_info* __info,\n-\t\t\t\t      std::size_t __size, std::size_t __count)\n-  {\n-    if (!__info)\n-      return;\n-\n-    __info->__record_insert(__size, __count);\n-  }\n-\n-  inline void\n-  __trace_map_to_unordered_map_erase(__map2umap_info* __info,\n-\t\t\t\t     std::size_t __size, std::size_t __count)\n-  {\n-    if (!__info)\n-      return;\n-\n-    __info->__record_erase(__size, __count);\n-  }\n-\n-  inline void\n-  __trace_map_to_unordered_map_find(__map2umap_info* __info,\n-\t\t\t\t    std::size_t __size)\n-  {\n-    if (!__info)\n-      return;\n-\n-    __info->__record_find(__size);\n-  }\n-\n-  inline void\n-  __trace_map_to_unordered_map_iterate(__map2umap_info* __info,\n-\t\t\t\t       int)\n-  {\n-    if (!__info)\n-      return;\n-\n-    // We only collect if an iteration took place no matter in what side.\n-    __info->__record_iterate(1);\n-  }\n-\n-  inline void\n-  __trace_map_to_unordered_map_invalidate(__map2umap_info* __info)\n-  {\n-    if (!__info)\n-      return;\n-\n-    __info->__set_invalid();\n-  }\n-\n-  inline void\n-  __trace_map_to_unordered_map_destruct(__map2umap_info* __info)\n-  {\n-    if (!__info)\n-      return;\n-\n-    _GLIBCXX_PROFILE_DATA(_S_map2umap)->__destruct(__info);\n-  }\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_MAP_TO_UNORDERED_MAP_H */"}, {"sha": "af523c0e5a788033b127fd4e0d79dabbc76d0a56", "filename": "libstdc++-v3/include/profile/impl/profiler_node.h", "status": "removed", "additions": 0, "deletions": 155, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,155 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_node.h\n- *  @brief Data structures to represent a single profiling event.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_NODE_H\n-#define _GLIBCXX_PROFILE_PROFILER_NODE_H 1\n-\n-#include <cstdio> // FILE, fprintf\n-\n-#include <vector>\n-#if defined _GLIBCXX_HAVE_EXECINFO_H\n-#include <execinfo.h>\n-#endif\n-\n-namespace __gnu_profile\n-{\n-  typedef void* __instruction_address_t;\n-  typedef std::_GLIBCXX_STD_C::vector<__instruction_address_t> __stack_npt;\n-  typedef __stack_npt* __stack_t;\n-\n-  std::size_t __stack_max_depth();\n-\n-  inline __stack_t\n-  __get_stack()\n-  {\n-#if defined _GLIBCXX_HAVE_EXECINFO_H\n-    __try\n-      {\n-\tstd::size_t __max_depth = __stack_max_depth();\n-\tif (__max_depth == 0)\n-\t  return 0;\n-\t__stack_npt __buffer(__max_depth);\n-\tint __depth = backtrace(&__buffer[0], __max_depth);\n-\treturn new(std::nothrow) __stack_npt(__buffer.begin(),\n-\t\t\t\t\t     __buffer.begin() + __depth);\n-      }\n-    __catch(...)\n-      {\n-\treturn 0;\n-      }\n-#else\n-    return 0;\n-#endif\n-  }\n-\n-  inline std::size_t\n-  __size(__stack_t __stack)\n-  {\n-    if (!__stack)\n-      return 0;\n-    else\n-      return __stack->size();\n-  }\n-\n-  // XXX\n-  inline void\n-  __write(FILE* __f, __stack_t __stack)\n-  {\n-    if (!__stack)\n-      return;\n-  \n-    __stack_npt::const_iterator __it;\n-    for (__it = __stack->begin(); __it != __stack->end(); ++__it)\n-      std::fprintf(__f, \"%p \", *__it);\n-  }\n-\n-  /** @brief Hash function for summary trace using call stack as index.  */\n-  class __stack_hash \n-  {\n-  public:\n-    std::size_t\n-    operator()(__stack_t __s) const\n-    {\n-      if (!__s) \n-\treturn 0;\n-\n-      std::size_t __index = 0;\n-      __stack_npt::const_iterator __it;\n-      for (__it = __s->begin(); __it != __s->end(); ++__it)\n-\t__index += reinterpret_cast<std::size_t>(*__it);\n-      return __index;\n-    }\n-\n-    bool operator() (__stack_t __stack1, __stack_t __stack2) const\n-    {\n-      if (!__stack1 && !__stack2)\n-\treturn true;\n-      if (!__stack1 || !__stack2)\n-\treturn false;\n-      if (__stack1->size() != __stack2->size())\n-\treturn false;\n-\n-      std::size_t __byte_size\n-\t= __stack1->size() * sizeof(__stack_npt::value_type);\n-      return __builtin_memcmp(&(*__stack1)[0], &(*__stack2)[0],\n-\t\t\t      __byte_size) == 0;\n-    }\n-  };\n-\n-\n-  /** @brief Base class for a line in the object table.  */\n-  class __object_info_base\n-  {\n-  public:\n-    __object_info_base(__stack_t __stack)\n-    : _M_stack(__stack), _M_valid(true) { }\n-\n-    bool\n-    __is_valid() const \n-    { return _M_valid; }\n-    \n-    void\n-    __set_invalid()\n-    { _M_valid = false; }\n-\n-    void\n-    __merge(const __object_info_base& __o)\n-    { _M_valid &= __o._M_valid; }\n-\n-    __stack_t\n-    __stack() const\n-    { return _M_stack; }\n-    \n-  protected:\n-    __stack_t _M_stack;\n-    bool _M_valid;\n-  };\n-\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_NODE_H */"}, {"sha": "ddeaad6037ac896ec7d2f176d8f5299aede58589", "filename": "libstdc++-v3/include/profile/impl/profiler_state.h", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_state.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_state.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_state.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,69 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_state.h\n- *  @brief Global profiler state.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_STATE_H\n-#define _GLIBCXX_PROFILE_PROFILER_STATE_H 1\n-\n-namespace __gnu_profile\n-{\n-  enum __state_type { __ON, __OFF, __INVALID };\n-\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__state_type, __state, __INVALID);\n-\n-  inline bool\n-  __turn(__state_type __s)\n-  { \n-    __state_type inv(__INVALID);\n-    return __atomic_compare_exchange_n(&_GLIBCXX_PROFILE_DATA(__state),\n-\t\t\t\t       &inv, __s, false, __ATOMIC_ACQ_REL, \n-\t\t\t\t       __ATOMIC_RELAXED);\n-  }\n-\n-  inline bool\n-  __turn_on()\n-  { return __turn(__ON); }\n-\n-  inline bool\n-  __turn_off()\n-  { return __turn(__OFF); }\n-\n-  inline bool\n-  __is_on()\n-  { return _GLIBCXX_PROFILE_DATA(__state) == __ON; }\n-\n-  inline bool\n-  __is_off()\n-  { return _GLIBCXX_PROFILE_DATA(__state) == __OFF; }\n-\n-  inline bool\n-  __is_invalid()\n-  { return _GLIBCXX_PROFILE_DATA(__state) == __INVALID; }\n-\n-} // end namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_STATE_H */"}, {"sha": "261f3b3cc72be3f44aa3701ea1fb46a79934eb0b", "filename": "libstdc++-v3/include/profile/impl/profiler_trace.h", "status": "removed", "additions": 0, "deletions": 663, "changes": 663, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_trace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_trace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_trace.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,663 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_trace.h\n- *  @brief Data structures to represent profiling traces.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_TRACE_H\n-#define _GLIBCXX_PROFILE_PROFILER_TRACE_H 1\n-\n-#include <cstdio>  // fopen, fclose, fprintf, FILE\n-#include <cerrno>\n-#include <cstdlib> // atof, atoi, strtol, getenv, atexit, abort\n-\n-#if __cplusplus >= 201103L\n-#include <unordered_map>\n-#define _GLIBCXX_IMPL_UNORDERED_MAP std::_GLIBCXX_STD_C::unordered_map\n-#else\n-#include <tr1/unordered_map>\n-#define _GLIBCXX_IMPL_UNORDERED_MAP std::tr1::unordered_map\n-#endif\n-\n-#include <ext/concurrence.h>\n-#include <fstream>\n-#include <string>\n-#include <utility>\n-#include <vector>\n-\n-#include \"profile/impl/profiler_algos.h\"\n-#include \"profile/impl/profiler_state.h\"\n-#include \"profile/impl/profiler_node.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief Internal environment.  Values can be set one of two ways:\n-      1. In config file \"var = value\".  The default config file path is \n-\t libstdcxx-profile.conf.\n-      2. By setting process environment variables.  For instance, in a Bash\n-\t shell you can set the unit cost of iterating through a map like this:\n-\t export __map_iterate_cost_factor=5.0.\n-\t If a value is set both in the input file and through an environment\n-\t variable, the environment value takes precedence.  */\n-  typedef _GLIBCXX_IMPL_UNORDERED_MAP<std::string, std::string> __env_t;\n-\n-  _GLIBCXX_PROFILE_DEFINE_UNINIT_DATA(__env_t, __env);\n-\n-  /** @brief Master lock.  */\n-  _GLIBCXX_PROFILE_DEFINE_UNINIT_DATA(__gnu_cxx::__mutex, __global_mutex);\n-\n-  /** @brief Representation of a warning.  */\n-  struct __warning_data\n-  {\n-    float __magnitude;\n-    __stack_t __context;\n-    const char* __warning_id;\n-    std::string __warning_message;\n-\n-    __warning_data()\n-    : __magnitude(0.0), __context(0), __warning_id(0) { }\n-\n-    __warning_data(float __m, __stack_t __c, const char* __id, \n-\t\t   const std::string& __msg)\n-    : __magnitude(__m), __context(__c), __warning_id(__id), \n-      __warning_message(__msg) { }\n-\n-    bool\n-    operator<(const __warning_data& __other) const\n-    { return __magnitude < __other.__magnitude; }\n-  };\n-\n-  typedef std::_GLIBCXX_STD_C::vector<__warning_data> __warning_vector_t;\n-\n-  // Defined in profiler_<diagnostic name>.h.\n-  class __trace_hash_func;\n-  class __trace_hashtable_size;\n-  class __trace_map2umap;\n-  class __trace_vector_size;\n-  class __trace_vector_to_list;\n-  class __trace_list_to_slist; \n-  class __trace_list_to_vector; \n-  void __trace_vector_size_init();\n-  void __trace_hashtable_size_init();\n-  void __trace_hash_func_init();\n-  void __trace_vector_to_list_init();\n-  void __trace_list_to_slist_init();  \n-  void __trace_list_to_vector_init();  \n-  void __trace_map_to_unordered_map_init();\n-  void __trace_vector_size_report(FILE*, __warning_vector_t&);\n-  void __trace_hashtable_size_report(FILE*, __warning_vector_t&);\n-  void __trace_hash_func_report(FILE*, __warning_vector_t&);\n-  void __trace_vector_to_list_report(FILE*, __warning_vector_t&);\n-  void __trace_list_to_slist_report(FILE*, __warning_vector_t&); \n-  void __trace_list_to_vector_report(FILE*, __warning_vector_t&);\n-  void __trace_map_to_unordered_map_report(FILE*, __warning_vector_t&);\n-  void __trace_vector_size_free();\n-  void __trace_hashtable_size_free();\n-  void __trace_hash_func_free();\n-  void __trace_vector_to_list_free();\n-  void __trace_list_to_slist_free();  \n-  void __trace_list_to_vector_free();  \n-  void __trace_map_to_unordered_map_free();\n-\n-  struct __cost_factor\n-  {\n-    const char* __env_var;\n-    float __value;\n-  };\n-\n-  typedef std::_GLIBCXX_STD_C::vector<__cost_factor*> __cost_factor_vector;\n-\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_hash_func*, _S_hash_func, 0);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_hashtable_size*, _S_hashtable_size, 0);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_map2umap*, _S_map2umap, 0);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_vector_size*, _S_vector_size, 0);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_vector_to_list*, _S_vector_to_list, 0);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_list_to_slist*, _S_list_to_slist, 0); \n-  _GLIBCXX_PROFILE_DEFINE_DATA(__trace_list_to_vector*, _S_list_to_vector, 0);\n-\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __vector_shift_cost_factor, \n-\t\t\t       {\"__vector_shift_cost_factor\", 1.0});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __vector_iterate_cost_factor,\n-\t\t\t       {\"__vector_iterate_cost_factor\", 1.0});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __vector_resize_cost_factor,\n-\t\t\t       {\"__vector_resize_cost_factor\", 1.0}); \n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __list_shift_cost_factor,\n-\t\t\t       {\"__list_shift_cost_factor\", 0.0});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __list_iterate_cost_factor,\n-\t\t\t       {\"__list_iterate_cost_factor\", 10.0}); \n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __list_resize_cost_factor,\n-\t\t\t       {\"__list_resize_cost_factor\", 0.0}); \n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __map_insert_cost_factor,\n-\t\t\t       {\"__map_insert_cost_factor\", 1.5});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __map_erase_cost_factor,\n-\t\t\t       {\"__map_erase_cost_factor\", 1.5});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __map_find_cost_factor,\n-\t\t\t       {\"__map_find_cost_factor\", 1});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __map_iterate_cost_factor,\n-\t\t\t       {\"__map_iterate_cost_factor\", 2.3});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __umap_insert_cost_factor,\n-\t\t\t       {\"__umap_insert_cost_factor\", 12.0});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __umap_erase_cost_factor,\n-\t\t\t       {\"__umap_erase_cost_factor\", 12.0});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __umap_find_cost_factor,\n-\t\t\t       {\"__umap_find_cost_factor\", 10.0});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor, __umap_iterate_cost_factor,\n-\t\t\t       {\"__umap_iterate_cost_factor\", 1.7});\n-  _GLIBCXX_PROFILE_DEFINE_DATA(__cost_factor_vector*, __cost_factors, 0);\n-\n-  _GLIBCXX_PROFILE_DEFINE_DATA(const char*, _S_trace_file_name,\n-\t\t\t       _GLIBCXX_PROFILE_TRACE_PATH_ROOT);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(std::size_t, _S_max_warn_count,\n-\t\t\t       _GLIBCXX_PROFILE_MAX_WARN_COUNT);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(std::size_t, _S_max_stack_depth,\n-\t\t\t       _GLIBCXX_PROFILE_MAX_STACK_DEPTH);\n-  _GLIBCXX_PROFILE_DEFINE_DATA(std::size_t, _S_max_mem,\n-\t\t\t       _GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC);\n-\n-  inline std::size_t\n-  __stack_max_depth()\n-  { return _GLIBCXX_PROFILE_DATA(_S_max_stack_depth); }\n-\n-  inline std::size_t\n-  __max_mem()\n-  { return _GLIBCXX_PROFILE_DATA(_S_max_mem); }\n-\n-  /** @brief Base class for all trace producers.  */\n-  template<typename __object_info, typename __stack_info>\n-    class __trace_base\n-    {\n-    public:\n-      // Do not pick the initial size too large, as we don't know which\n-      // diagnostics are more active.\n-      __trace_base()\n-      : __objects_byte_size(0), __stack_table(10000),\n-\t__stack_table_byte_size(0), __id(0) { }\n-\n-      ~__trace_base()\n-      {\n-\tfor (typename __stack_table_t::iterator __it\n-\t       = __stack_table.begin(); __it != __stack_table.end(); ++__it)\n-\t  delete __it->first;\n-      }\n-\n-      __object_info* __add_object(__stack_t __stack);\n-      void __retire_object(__object_info* __info);\n-      void __write(FILE* __f);\n-      void __collect_warnings(__warning_vector_t& __warnings);\n-      void __free();\n-\n-    private:\n-      __gnu_cxx::__mutex __trace_mutex;\n-      typedef _GLIBCXX_IMPL_UNORDERED_MAP<__stack_t, __stack_info,\n-\t\t\t\t\t  __stack_hash, \n-\t\t\t\t\t  __stack_hash> __stack_table_t;\n-      std::size_t __objects_byte_size;\n-      __stack_table_t __stack_table;\n-      std::size_t __stack_table_byte_size;\n-\n-    protected:\n-      const char* __id;\n-    };\n-\n-  template<typename __object_info, typename __stack_info>\n-    __object_info*\n-    __trace_base<__object_info, __stack_info>::\n-    __add_object(__stack_t __stack)\n-    {\n-      // If we have no backtrace information no need to collect data.\n-      if (!__stack)\n-\treturn 0;\n-\n-      __gnu_cxx::__scoped_lock __lock(this->__trace_mutex);\n-\n-      if (__max_mem() != 0 && __objects_byte_size >= __max_mem())\n-\t{\n-\t  delete __stack;\n-\t  return 0;\n-\t}\n-\n-      __object_info* __ret = new(std::nothrow) __object_info(__stack);\n-      if (!__ret)\n-\t{\n-\t  delete __stack;\n-\t  return 0;\n-\t}\n-\n-      __objects_byte_size += sizeof(__object_info);\n-      return __ret;\n-    }\n-\n-  template<typename __object_info, typename __stack_info>\n-    void\n-    __trace_base<__object_info, __stack_info>::\n-    __retire_object(__object_info* __obj_info)\n-    {\n-      if (!__obj_info)\n-\treturn;\n-\n-      __gnu_cxx::__scoped_lock __lock(this->__trace_mutex);\n-\n-      const __object_info& __info = *__obj_info;\n-      __stack_t __stack = __info.__stack();\n-      typename __stack_table_t::iterator __stack_it\n-\t= __stack_table.find(__stack);\n-    \n-      if (__stack_it == __stack_table.end())\n-\t{\n-\t  // First occurrence of this call context.\n-\t  if (__max_mem() == 0 || __stack_table_byte_size < __max_mem()) \n-\t    {\n-\t      __stack_table_byte_size \n-\t\t+= (sizeof(__instruction_address_t) * __size(__stack)\n-\t\t    + sizeof(__stack) + sizeof(__stack_info));\n-\t      __stack_table.insert(make_pair(__stack,\n-\t\t\t\t\t     __stack_info(__info)));\n-\t    }\n-\t  else\n-\t    delete __stack;\n-\t}\n-      else\n-\t{\n-\t  // Merge object info into info summary for this call context.\n-\t  __stack_it->second.__merge(__info);\n-\t  delete __stack;\n-\t}\n-\n-      delete __obj_info;\n-      __objects_byte_size -= sizeof(__object_info);\n-    }\n-\n-  template<typename __object_info, typename __stack_info>\n-    void\n-    __trace_base<__object_info, __stack_info>::\n-    __write(FILE* __f)\n-    {\n-      for (typename __stack_table_t::iterator __it\n-\t     = __stack_table.begin(); __it != __stack_table.end(); ++__it)\n-\tif (__it->second.__is_valid())\n-\t  {\n-\t    std::fprintf(__f, __id);\n-\t    std::fprintf(__f, \"|\");\n-\t    __gnu_profile::__write(__f, __it->first);\n-\t    std::fprintf(__f, \"|\");\n-\t    __it->second.__write(__f);\n-\t  }\n-    }\n-\n-  template<typename __object_info, typename __stack_info>\n-    void\n-    __trace_base<__object_info, __stack_info>::\n-    __collect_warnings(__warning_vector_t& __warnings)\n-    {\n-      for (typename __stack_table_t::iterator __it\n-\t     = __stack_table.begin(); __it != __stack_table.end(); ++__it)\n-\t__warnings.push_back(__warning_data(__it->second.__magnitude(),\n-\t\t\t\t\t    __it->first, __id,\n-\t\t\t\t\t    __it->second.__advice()));\n-    }\n-\n-  template<typename __object_info, typename __stack_info>\n-    inline void\n-    __trace_report(__trace_base<__object_info, __stack_info>* __cont,\n-\t\t   FILE* __f, __warning_vector_t& __warnings)\n-    {\n-      if (__cont)\n-\t{\n-\t  __cont->__collect_warnings(__warnings);\n-\t  __cont->__write(__f);\n-\t}\n-    }\n-  \n-  inline std::size_t\n-  __env_to_size_t(const char* __env_var, std::size_t __default_value)\n-  {\n-    char* __env_value = std::getenv(__env_var);\n-    if (__env_value)\n-      {\n-\terrno = 0;\n-\tlong __converted_value = std::strtol(__env_value, 0, 10);\n-\tif (errno || __converted_value < 0)\n-\t  {\n-\t    std::fprintf(stderr,\n-\t\t\t \"Bad value for environment variable '%s'.\\n\",\n-\t\t\t __env_var);\n-\t    std::abort();\n-\t  }\n-\telse\n-\t  return static_cast<std::size_t>(__converted_value);\n-      }\n-    else\n-      return __default_value;\n-  }\n-\n-  inline void\n-  __set_max_stack_trace_depth()\n-  {\n-    _GLIBCXX_PROFILE_DATA(_S_max_stack_depth)\n-      = __env_to_size_t(_GLIBCXX_PROFILE_MAX_STACK_DEPTH_ENV_VAR,\n-\t\t\t_GLIBCXX_PROFILE_DATA(_S_max_stack_depth));\n-  }\n-\n-  inline void\n-  __set_max_mem()\n-  {\n-    _GLIBCXX_PROFILE_DATA(_S_max_mem) \n-      = __env_to_size_t(_GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC_ENV_VAR,\n-\t\t\t_GLIBCXX_PROFILE_DATA(_S_max_mem));\n-  }\n-\n-  inline int\n-  __log_magnitude(float __f)\n-  {\n-    const float __log_base = 10.0;\n-    int __result = 0;\n-    int __sign = 1;\n-\n-    if (__f < 0) \n-      {\n-\t__f = -__f;\n-\t__sign = -1;\n-      }\n-\n-    while (__f > __log_base) \n-      {\n-\t++__result;\n-\t__f /= 10.0;\n-      }\n-    return __sign * __result;\n-  }\n-\n-  inline FILE* \n-  __open_output_file(const char* __extension)\n-  {\n-    // The path is made of _S_trace_file_name + \".\" + extension.\n-    std::size_t __root_len \n-      = __builtin_strlen(_GLIBCXX_PROFILE_DATA(_S_trace_file_name));\n-    std::size_t __ext_len = __builtin_strlen(__extension);\n-    char* __file_name = new char[__root_len + 1 + __ext_len + 1];\n-    __builtin_memcpy(__file_name,\n-\t\t     _GLIBCXX_PROFILE_DATA(_S_trace_file_name),\n-\t\t     __root_len);\n-    *(__file_name + __root_len) = '.';\n-    __builtin_memcpy(__file_name + __root_len + 1,\n-\t\t     __extension, __ext_len + 1);\n-\n-    FILE* __out_file = std::fopen(__file_name, \"w\");\n-    if (!__out_file)\n-      {\n-\tstd::fprintf(stderr, \"Could not open trace file '%s'.\\n\",\n-\t\t     __file_name);\n-\tstd::abort();\n-      }\n-\n-    delete[] __file_name;\n-    return __out_file;\n-  }\n-\n-  struct __warn\n-  {\n-    FILE* __file;\n-\n-    __warn(FILE* __f)\n-    { __file = __f; }\n-\n-    void\n-    operator()(const __warning_data& __info)\n-    {\n-      std::fprintf(__file,  __info.__warning_id);\n-      std::fprintf(__file, \": improvement = %d\",\n-\t\t   __log_magnitude(__info.__magnitude));\n-      std::fprintf(__file, \": call stack = \");\n-      __gnu_profile::__write(__file, __info.__context);\n-      std::fprintf(__file, \": advice = %s\\n\",\n-\t\t   __info.__warning_message.c_str());\n-    }\n-  };\n-\n-  /** @brief Final report method, registered with @b atexit.\n-   *\n-   * This can also be called directly by user code, including signal handlers.\n-   * It is protected against deadlocks by the reentrance guard in profiler.h.\n-   * However, when called from a signal handler that triggers while within\n-   * __gnu_profile (under the guarded zone), no output will be produced.\n-   */\n-  inline void\n-  __report()\n-  {\n-    __gnu_cxx::__scoped_lock __lock(_GLIBCXX_PROFILE_DATA(__global_mutex));\n-\n-    __warning_vector_t __warnings, __top_warnings;\n-\n-    FILE* __raw_file = __open_output_file(\"raw\");\n-    __trace_vector_size_report(__raw_file, __warnings);\n-    __trace_hashtable_size_report(__raw_file, __warnings);\n-    __trace_hash_func_report(__raw_file, __warnings);\n-    __trace_vector_to_list_report(__raw_file, __warnings);\n-    __trace_list_to_slist_report(__raw_file, __warnings);\n-    __trace_list_to_vector_report(__raw_file, __warnings);\n-    __trace_map_to_unordered_map_report(__raw_file, __warnings);\n-    std::fclose(__raw_file);\n-\n-    // Sort data by magnitude, keeping just top N.\n-    std::size_t __cutoff = std::min(_GLIBCXX_PROFILE_DATA(_S_max_warn_count),\n-\t\t\t\t    __warnings.size());\n-    __top_n(__warnings, __top_warnings, __cutoff);\n-\n-    FILE* __warn_file = __open_output_file(\"txt\");\n-    __for_each(__top_warnings.begin(), __top_warnings.end(),\n-\t       __warn(__warn_file));\n-    std::fclose(__warn_file);\n-  }\n-\n-  inline void\n-  __report_and_free()\n-  {\n-    __report();\n-\n-    __trace_map_to_unordered_map_free();\n-    __trace_list_to_vector_free();\n-    __trace_list_to_slist_free(); \n-    __trace_vector_to_list_free();\n-    __trace_hash_func_free();\n-    __trace_hashtable_size_free();\n-    __trace_vector_size_free();\n-    delete _GLIBCXX_PROFILE_DATA(__cost_factors);\n-  }\n-\n-  inline void\n-  __set_trace_path()\n-  {\n-    char* __env_trace_file_name = std::getenv(_GLIBCXX_PROFILE_TRACE_ENV_VAR);\n-\n-    if (__env_trace_file_name)\n-      _GLIBCXX_PROFILE_DATA(_S_trace_file_name) = __env_trace_file_name;\n-\n-    // Make sure early that we can create the trace file.\n-    std::fclose(__open_output_file(\"txt\"));\n-  }\n-\n-  inline void\n-  __set_max_warn_count()\n-  {\n-    char* __env_max_warn_count_str\n-      = std::getenv(_GLIBCXX_PROFILE_MAX_WARN_COUNT_ENV_VAR);\n-\n-    if (__env_max_warn_count_str)\n-      _GLIBCXX_PROFILE_DATA(_S_max_warn_count)\n-\t= static_cast<std::size_t>(std::atoi(__env_max_warn_count_str));\n-  }\n-\n-  inline void\n-  __read_cost_factors()\n-  {\n-    std::string __conf_file_name(_GLIBCXX_PROFILE_DATA(_S_trace_file_name));\n-    __conf_file_name += \".conf\";\n-\n-    std::ifstream __conf_file(__conf_file_name.c_str());\n-\n-    if (__conf_file.is_open())\n-      {\n-\tstd::string __line;\n-\n-\twhile (std::getline(__conf_file, __line))\n-\t  {\n-\t    std::string::size_type __i = __line.find_first_not_of(\" \\t\\n\\v\");\n-\n-\t    if (__line.length() <= 0 || __line[__i] == '#')\n-\t      // Skip empty lines or comments.\n-\t      continue;\n-\t  }\n-\n-\t// Trim.\n-\t__line.erase(__remove(__line.begin(), __line.end(), ' '),\n-\t\t     __line.end());\n-\tstd::string::size_type __pos = __line.find(\"=\");\n-\tstd::string __factor_name = __line.substr(0, __pos);\n-\tstd::string::size_type __end = __line.find_first_of(\";\\n\");\n-\tstd::string __factor_value = __line.substr(__pos + 1, __end - __pos);\n-\n-\t_GLIBCXX_PROFILE_DATA(__env)[__factor_name] = __factor_value;\n-      }\n-  }\n-\n-  struct __cost_factor_writer\n-  {\n-    FILE* __file;\n-\n-    __cost_factor_writer(FILE* __f)\n-    : __file(__f) { }\n-\n-    void\n-    operator() (const __cost_factor* __factor)\n-    { std::fprintf(__file, \"%s = %f\\n\", __factor->__env_var,\n-\t\t   __factor->__value); }\n-  };\n-\n-  inline void\n-  __write_cost_factors()\n-  {\n-    FILE* __file = __open_output_file(\"conf.out\");\n-    __for_each(_GLIBCXX_PROFILE_DATA(__cost_factors)->begin(),\n-\t       _GLIBCXX_PROFILE_DATA(__cost_factors)->end(),\n-\t       __cost_factor_writer(__file));\n-    std::fclose(__file);\n-  }\n-\n-  struct __cost_factor_setter\n-  {\n-    void\n-    operator()(__cost_factor* __factor)\n-    {\n-      // Look it up in the process environment first.\n-      const char* __env_value = std::getenv(__factor->__env_var);\n-\n-      if (!__env_value)\n-\t{\n-\t  // Look it up in the config file.\n-\t  __env_t::iterator __it\n-\t    = _GLIBCXX_PROFILE_DATA(__env).find(__factor->__env_var);\n-\t  if (__it != _GLIBCXX_PROFILE_DATA(__env).end())\n-\t    __env_value = __it->second.c_str();\n-\t}\n-\n-      if (__env_value)\n-\t__factor->__value = std::atof(__env_value);\n-    }\n-  };\n-\n-  inline void\n-  __set_cost_factors()\n-  {\n-    __cost_factor_vector* __factors = new __cost_factor_vector;\n-    _GLIBCXX_PROFILE_DATA(__cost_factors) = __factors;\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__vector_shift_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__vector_iterate_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__vector_resize_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__list_shift_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__list_iterate_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__list_resize_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__map_insert_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__map_erase_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__map_find_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__map_iterate_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__umap_insert_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__umap_erase_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__umap_find_cost_factor));\n-    __factors->push_back(&_GLIBCXX_PROFILE_DATA(__umap_iterate_cost_factor));\n-    __for_each(__factors->begin(), __factors->end(), __cost_factor_setter());\n-  }\n-\n-  inline void\n-  __profcxx_init_unconditional()\n-  {\n-    __gnu_cxx::__scoped_lock __lock(_GLIBCXX_PROFILE_DATA(__global_mutex));\n-\n-    if (__is_invalid())\n-      {\n-\t__set_max_warn_count();\n-\n-\tif (_GLIBCXX_PROFILE_DATA(_S_max_warn_count) == 0)\n-\t  __turn_off();\n-\telse\n-\t  {\n-\t    __set_max_stack_trace_depth();\n-\t    __set_max_mem();\n-\t    __set_trace_path();\n-\t    __read_cost_factors(); \n-\t    __set_cost_factors();\n-\t    __write_cost_factors();\n-\n-\t    __trace_vector_size_init();\n-\t    __trace_hashtable_size_init();\n-\t    __trace_hash_func_init();\n-\t    __trace_vector_to_list_init();\n-\t    __trace_list_to_slist_init(); \n-\t    __trace_list_to_vector_init();\n-\t    __trace_map_to_unordered_map_init();\n-\n-\t    std::atexit(__report_and_free);\n-\n-\t    __turn_on();\n-\t  }\n-      }\n-  }\n-\n-  /** @brief This function must be called by each instrumentation point.\n-   *\n-   * The common path is inlined fully.\n-   */\n-  inline bool\n-  __profcxx_init()\n-  {\n-    if (__is_invalid())\n-      __profcxx_init_unconditional();\n-\n-    return __is_on();\n-  }\n-\n-} // namespace __gnu_profile\n-\n-#endif /* _GLIBCXX_PROFILE_PROFILER_TRACE_H */"}, {"sha": "106468e1898e0b28e2b4ab0063f309d7a12e310a", "filename": "libstdc++-v3/include/profile/impl/profiler_vector_size.h", "status": "removed", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_vector_size.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_vector_size.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_vector_size.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,100 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_vector_size.h\n- *  @brief Collection of vector size traces.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_VECTOR_SIZE_H\n-#define _GLIBCXX_PROFILE_PROFILER_VECTOR_SIZE_H 1\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-#include \"profile/impl/profiler_state.h\"\n-#include \"profile/impl/profiler_container_size.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief Hashtable size instrumentation trace producer.  */\n-  class __trace_vector_size\n-  : public __trace_container_size\n-  {\n-  public:\n-    __trace_vector_size()\n-    : __trace_container_size()\n-    { __id = \"vector-size\"; }\n-  };\n-\n-  inline void\n-  __trace_vector_size_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_vector_size) = new __trace_vector_size(); }\n-\n-  inline void\n-  __trace_vector_size_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_vector_size); }\n-\n-  inline void\n-  __trace_vector_size_report(FILE* __f, __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_vector_size), __f, __warnings); }\n-\n-  inline __container_size_info*\n-  __trace_vector_size_construct(std::size_t __num)\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-\n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_vector_size)->\n-      __insert(__get_stack(), __num);\n-  }\n-\n-  inline void\n-  __trace_vector_size_resize(__container_size_info* __obj_info,\n-\t\t\t     std::size_t __from, std::size_t __to)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__resize(__from, __to);\n-  }\n-\n-  inline void\n-  __trace_vector_size_destruct(__container_size_info* __obj_info,\n-\t\t\t       std::size_t __num, std::size_t __inum)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    _GLIBCXX_PROFILE_DATA(_S_vector_size)->\n-      __destruct(__obj_info, __num, __inum);\n-  }\n-\n-} // namespace __gnu_profile\n-\n-#endif /* _GLIBCXX_PROFILE_PROFILER_VECTOR_SIZE_H */"}, {"sha": "ae3d3e7cf46e0d314ba7144792c687bb3e2206eb", "filename": "libstdc++-v3/include/profile/impl/profiler_vector_to_list.h", "status": "removed", "additions": 0, "deletions": 261, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_vector_to_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_vector_to_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_vector_to_list.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,261 +0,0 @@\n-// -*- C++ -*-\n-//\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/impl/profiler_vector_to_list.h\n- *  @brief diagnostics for vector to list.\n- */\n-\n-// Written by Lixia Liu and Silvius Rus.\n-\n-#ifndef _GLIBCXX_PROFILE_PROFILER_VECTOR_TO_LIST_H\n-#define _GLIBCXX_PROFILE_PROFILER_VECTOR_TO_LIST_H 1\n-\n-#include \"profile/impl/profiler.h\"\n-#include \"profile/impl/profiler_node.h\"\n-#include \"profile/impl/profiler_trace.h\"\n-\n-namespace __gnu_profile\n-{\n-  /** @brief A vector-to-list instrumentation line in the object table.  */\n-  class __vector2list_info\n-  : public __object_info_base\n-  {\n-  public:\n-    __vector2list_info(__stack_t __stack)\n-    : __object_info_base(__stack), _M_shift_count(0), _M_iterate(0),\n-      _M_resize(0), _M_list_cost(0), _M_vector_cost(0)\n-    { }\n-\n-    void\n-    __merge(const __vector2list_info& __o)\n-    {\n-      __object_info_base::__merge(__o);\n-      _M_shift_count  += __o._M_shift_count;\n-      _M_iterate      += __o._M_iterate;\n-      _M_vector_cost  += __o._M_vector_cost;\n-      _M_list_cost    += __o._M_list_cost;\n-      _M_resize       += __o._M_resize;\n-    }\n-\n-    void\n-    __write(FILE* __f) const\n-    {\n-      std::fprintf(__f, \"%Zu %Zu %Zu %.0f %.0f\\n\", _M_shift_count,\n-\t\t   _M_resize, _M_iterate, _M_vector_cost, _M_list_cost);\n-    }\n-\n-    float\n-    __magnitude() const\n-    { return _M_vector_cost - _M_list_cost; }\n-\n-    std::string\n-    __advice() const \n-    { return \"change std::vector to std::list\"; }\n-\n-    std::size_t\n-    __shift_count()\n-    { return _M_shift_count; }\n-\n-    std::size_t\n-    __iterate()\n-    { return _M_iterate; }\n-\n-    float\n-    __list_cost()\n-    { return _M_list_cost; }\n-\n-    std::size_t\n-    __resize()\n-    { return _M_resize; }\n-\n-    void\n-    __set_list_cost(float __lc)\n-    { _M_list_cost = __lc; }\n-    \n-    void\n-    __set_vector_cost(float __vc)\n-    { _M_vector_cost = __vc; }\n-    \n-    void\n-    __opr_insert(std::size_t __pos, std::size_t __num)\n-    { _M_shift_count += __num - __pos; }\n-\n-    void\n-    __opr_iterate(int __num)\n-    { __gnu_cxx::__atomic_add(&_M_iterate, __num); }\n-\n-    void\n-    __resize(std::size_t __from, std::size_t)\n-    { _M_resize += __from; }\n-\n-  private:\n-    std::size_t _M_shift_count;\n-    mutable _Atomic_word _M_iterate;\n-    std::size_t _M_resize;\n-    float _M_list_cost;\n-    float _M_vector_cost;\n-  };\n-\n-\n-  /** @brief A vector-to-list instrumentation line in the stack table.  */\n-  class __vector2list_stack_info\n-  : public __vector2list_info\n-  {\n-  public:\n-    __vector2list_stack_info(const __vector2list_info& __o) \n-    : __vector2list_info(__o) { }\n-  };\n-\n-\n-  /** @brief Vector-to-list instrumentation producer.  */\n-  class __trace_vector_to_list\n-  : public __trace_base<__vector2list_info, __vector2list_stack_info> \n-  {\n-  public:\n-    __trace_vector_to_list()\n-    : __trace_base<__vector2list_info, __vector2list_stack_info>()\n-    { __id = \"vector-to-list\"; }\n-\n-    ~__trace_vector_to_list() { }\n-\n-    // Call at destruction/clean to set container final size.\n-    void\n-    __destruct(__vector2list_info* __obj_info)\n-    {\n-      float __vc = __vector_cost(__obj_info->__shift_count(),\n-\t\t\t\t __obj_info->__iterate(),\n-\t\t\t\t __obj_info->__resize());\n-      float __lc = __list_cost(__obj_info->__shift_count(),\n-\t\t\t       __obj_info->__iterate(),\n-\t\t\t       __obj_info->__resize());\n-      __obj_info->__set_vector_cost(__vc);\n-      __obj_info->__set_list_cost(__lc);\n-\n-      __retire_object(__obj_info);\n-    }\n-\n-    // Collect cost of operations.\n-    float\n-    __vector_cost(std::size_t __shift, std::size_t __iterate,\n-\t\t  std::size_t __resize)\n-    {\n-      return (__shift\n-\t      * _GLIBCXX_PROFILE_DATA(__vector_shift_cost_factor).__value\n-\t      + __iterate\n-\t      * _GLIBCXX_PROFILE_DATA(__vector_iterate_cost_factor).__value\n-\t      + __resize\n-\t      * _GLIBCXX_PROFILE_DATA(__vector_resize_cost_factor).__value);\n-    }\n-\n-    float\n-    __list_cost(std::size_t __shift, std::size_t __iterate,\n-\t\tstd::size_t __resize)\n-    {\n-      return (__shift\n-\t      * _GLIBCXX_PROFILE_DATA(__list_shift_cost_factor).__value\n-\t      + __iterate\n-\t      * _GLIBCXX_PROFILE_DATA(__list_iterate_cost_factor).__value\n-\t      + __resize\n-\t      * _GLIBCXX_PROFILE_DATA(__list_resize_cost_factor).__value);\n-    }\n-  };\n-\n-\n-  inline void\n-  __trace_vector_to_list_init()\n-  { _GLIBCXX_PROFILE_DATA(_S_vector_to_list) = new __trace_vector_to_list(); }\n-\n-  inline void\n-  __trace_vector_to_list_free()\n-  { delete _GLIBCXX_PROFILE_DATA(_S_vector_to_list); }\n-\n-  inline void\n-  __trace_vector_to_list_report(FILE* __f, __warning_vector_t& __warnings)\n-  { __trace_report(_GLIBCXX_PROFILE_DATA(_S_vector_to_list), __f, __warnings); }\n-\n-  inline __vector2list_info*\n-  __trace_vector_to_list_construct()\n-  {\n-    if (!__profcxx_init())\n-      return 0;\n-\n-    if (!__reentrance_guard::__get_in())\n-      return 0;\n-\n-    __reentrance_guard __get_out;\n-    return _GLIBCXX_PROFILE_DATA(_S_vector_to_list)\n-      ->__add_object(__get_stack());\n-  }\n-\n-  inline void\n-  __trace_vector_to_list_insert(__vector2list_info* __obj_info,\n-\t\t\t\tstd::size_t __pos,\n-\t\t\t\tstd::size_t __num)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__opr_insert(__pos, __num);\n-  }\n-\n-  inline void\n-  __trace_vector_to_list_iterate(__vector2list_info* __obj_info, int)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    // We only collect if an iteration took place no matter in what side.\n-    __obj_info->__opr_iterate(1);\n-  }\n-\n-  inline void\n-  __trace_vector_to_list_invalid_operator(__vector2list_info* __obj_info)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__set_invalid();\n-  }\n-\n-  inline void\n-  __trace_vector_to_list_resize(__vector2list_info* __obj_info,\n-\t\t\t\tstd::size_t __from,\n-\t\t\t\tstd::size_t __to)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    __obj_info->__resize(__from, __to);\n-  }\n-\n-  inline void\n-  __trace_vector_to_list_destruct(__vector2list_info* __obj_info)\n-  {\n-    if (!__obj_info)\n-      return;\n-\n-    _GLIBCXX_PROFILE_DATA(_S_vector_to_list)->__destruct(__obj_info);\n-  }\n-\n-} // namespace __gnu_profile\n-#endif /* _GLIBCXX_PROFILE_PROFILER_VECTOR_TO_LIST_H */"}, {"sha": "9f14c14b27deb9e3c9c8152415aa692d0b6991b6", "filename": "libstdc++-v3/include/profile/iterator_tracker.h", "status": "removed", "additions": 0, "deletions": 286, "changes": 286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fiterator_tracker.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fiterator_tracker.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fiterator_tracker.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,286 +0,0 @@\n-// Profiling iterator implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/iterator_tracker.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_ITERATOR_TRACKER\n-#define _GLIBCXX_PROFILE_ITERATOR_TRACKER 1\n-\n-#include <ext/type_traits.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  template<typename _Iterator, typename _Sequence>\n-    class __iterator_tracker\n-    {\n-      typedef __iterator_tracker _Self;\n-\n-      // The underlying iterator\n-      _Iterator _M_current;\n-\n-      // The underlying data structure\n-      const _Sequence* _M_ds;\n-      typedef std::iterator_traits<_Iterator> _Traits;\n-\n-    public:\n-      typedef _Iterator\t\t\t\t\t_Base_iterator;\n-      typedef typename _Traits::iterator_category\titerator_category;\n-      typedef typename _Traits::value_type\t\tvalue_type;\n-      typedef typename _Traits::difference_type\t\tdifference_type;\n-      typedef typename _Traits::reference\t\treference;\n-      typedef typename _Traits::pointer\t\t\tpointer;\n-\n-      __iterator_tracker() _GLIBCXX_NOEXCEPT\n-      : _M_current(), _M_ds(0) { }\n-\n-      __iterator_tracker(const _Iterator& __i, const _Sequence* __seq)\n-      _GLIBCXX_NOEXCEPT\n-      : _M_current(__i), _M_ds(__seq) { }\n-\n-      __iterator_tracker(const __iterator_tracker& __x) _GLIBCXX_NOEXCEPT\n-      : _M_current(__x._M_current), _M_ds(__x._M_ds) { }\n-\n-      template<typename _MutableIterator>\n-\t__iterator_tracker(const __iterator_tracker<_MutableIterator,\n-\t\t\t   typename __gnu_cxx::__enable_if\n-\t\t\t   <(std::__are_same<_MutableIterator, typename\n-\t\t\t     _Sequence::iterator::_Base_iterator>::__value),\n-\t\t\t   _Sequence>::__type>& __x) _GLIBCXX_NOEXCEPT\n-\t:  _M_current(__x.base()), _M_ds(__x._M_get_sequence()) { }\n-\n-      _Iterator\n-      base() const _GLIBCXX_NOEXCEPT { return _M_current; }\n-\n-      /**\n-       * @brief Conversion to underlying non-debug iterator to allow\n-       * better interaction with non-profile containers.\n-       */\n-      operator _Iterator() const _GLIBCXX_NOEXCEPT { return _M_current; }\n-\n-      pointer\n-      operator->() const _GLIBCXX_NOEXCEPT { return &*_M_current; }\n-\n-      __iterator_tracker&\n-      operator++() _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_ds->_M_profile_iterate();\n-\t++_M_current;\n-\treturn *this;\n-      }\n-\n-      __iterator_tracker\n-      operator++(int) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_ds->_M_profile_iterate();\n-\t__iterator_tracker __tmp(*this);\n-\t++_M_current;\n-\treturn __tmp;\n-      }\n-\n-      __iterator_tracker&\n-      operator--() _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_ds->_M_profile_iterate(1);\n-\t--_M_current;\n-\treturn *this;\n-      }\n-\n-      __iterator_tracker\n-      operator--(int) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_ds->_M_profile_iterate(1);\n-\t__iterator_tracker __tmp(*this);\n-\t--_M_current;\n-\treturn __tmp;\n-      }\n-\n-      __iterator_tracker&\n-      operator=(const __iterator_tracker& __x) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_current = __x._M_current;\n-\t_M_ds = __x._M_ds;\n-\treturn *this;\n-      }\n-\n-      reference\n-      operator*() const _GLIBCXX_NOEXCEPT\n-      { return *_M_current; }\n-\n-      // ------ Random access iterator requirements ------\n-      reference\n-      operator[](const difference_type& __n) const  _GLIBCXX_NOEXCEPT\n-      { return _M_current[__n]; }\n-\n-      __iterator_tracker&\n-      operator+=(const difference_type& __n) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_current += __n;\n-\treturn *this;\n-      }\n-\n-      __iterator_tracker\n-      operator+(const difference_type& __n) const _GLIBCXX_NOEXCEPT\n-      {\n-\t__iterator_tracker __tmp(*this);\n-\t__tmp += __n;\n-\treturn __tmp;\n-      }\n-\n-      __iterator_tracker&\n-      operator-=(const difference_type& __n) _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_current += -__n;\n-\treturn *this;\n-      }\n-\n-      __iterator_tracker\n-      operator-(const difference_type& __n) const _GLIBCXX_NOEXCEPT\n-      {\n-\t__iterator_tracker __tmp(*this);\n-\t__tmp -= __n;\n-\treturn __tmp;\n-      }\n-\n-      const _Sequence*\n-      _M_get_sequence() const\n-      { return static_cast<const _Sequence*>(_M_ds); }\n-  };\n-\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline bool\n-    operator==(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() == __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline bool\n-    operator==(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() == __rhs.base(); }\n-\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline bool\n-    operator!=(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() != __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline bool\n-    operator!=(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() != __rhs.base(); }\n-\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline bool\n-    operator<(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t      const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() < __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline bool\n-    operator<(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t      const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() < __rhs.base(); }\n-\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline bool\n-    operator<=(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() <= __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline bool\n-    operator<=(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() <= __rhs.base(); }\n-\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline bool\n-    operator>(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t      const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() > __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline bool\n-    operator>(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t      const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() > __rhs.base(); }\n-\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline bool\n-    operator>=(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() >= __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline bool\n-    operator>=(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t       const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() >= __rhs.base(); }\n-\n-  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-  // According to the resolution of DR179 not only the various comparison\n-  // operators but also operator- must accept mixed iterator/const_iterator\n-  // parameters.\n-  template<typename _IteratorL, typename _IteratorR, typename _Sequence>\n-    inline typename __iterator_tracker<_IteratorL, _Sequence>::difference_type\n-    operator-(const __iterator_tracker<_IteratorL, _Sequence>& __lhs,\n-\t      const __iterator_tracker<_IteratorR, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() - __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline typename __iterator_tracker<_Iterator, _Sequence>::difference_type\n-    operator-(const __iterator_tracker<_Iterator, _Sequence>& __lhs,\n-\t      const __iterator_tracker<_Iterator, _Sequence>& __rhs)\n-    _GLIBCXX_NOEXCEPT\n-    { return __lhs.base() - __rhs.base(); }\n-\n-  template<typename _Iterator, typename _Sequence>\n-    inline __iterator_tracker<_Iterator, _Sequence>\n-    operator+(typename __iterator_tracker<_Iterator,_Sequence>::difference_type\n-\t      __n,\n-\t      const __iterator_tracker<_Iterator, _Sequence>& __i)\n-    _GLIBCXX_NOEXCEPT\n-    { return __i + __n; }\n-\t\n-}  // namespace __profile\n-}  // namespace std\n-#endif"}, {"sha": "a0bc63d957e581591725350be3154a9cd4daccb9", "filename": "libstdc++-v3/include/profile/list", "status": "removed", "additions": 0, "deletions": 650, "changes": 650, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,650 +0,0 @@\n-// Profiling list implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/list\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_LIST\n-#define _GLIBCXX_PROFILE_LIST 1\n-\n-#include <list>\n-#include <profile/base.h>\n-#include <profile/iterator_tracker.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  template<typename _List>\n-    class _List_profile\n-    {\n-      _List&\n-      _M_conjure()\n-      { return *static_cast<_List*>(this); }\n-\n-    public:\n-      __gnu_profile::__list2slist_info* _M_list2slist_info;\n-      __gnu_profile::__list2vector_info* _M_list2vector_info;\n-\n-      _List_profile() _GLIBCXX_NOEXCEPT\n-      { _M_profile_construct(); }\n-\n-      void\n-      _M_profile_construct() _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_list2slist_info = __profcxx_list2slist_construct();\n-\t_M_list2vector_info = __profcxx_list2vector_construct();\n-      }\n-\n-      void\n-      _M_profile_destruct() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2vector_destruct(_M_list2vector_info);\n-\t_M_list2vector_info = 0;\n-\t__profcxx_list2slist_destruct(_M_list2slist_info);\n-\t_M_list2slist_info = 0;\n-      }\n-\n-      void\n-      _M_swap(_List_profile& __other)\n-      {\n-\tstd::swap(_M_list2slist_info, __other._M_list2slist_info);\n-\tstd::swap(_M_list2vector_info, __other._M_list2vector_info);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      _List_profile(const _List_profile&) noexcept\n-      : _List_profile() { }\n-      _List_profile(_List_profile&& __other) noexcept\n-      : _List_profile()\n-      { _M_swap(__other); }\n-\n-      _List_profile&\n-      operator=(const _List_profile&) noexcept\n-      {\n-\t_M_profile_destruct();\n-\t_M_profile_construct();\n-      }\n-\n-      _List_profile&\n-      operator=(_List_profile&& __other) noexcept\n-      {\n-\t_M_swap(__other);\n-\t__other._M_profile_destruct();\n-\t__other._M_profile_construct();\n-      }\n-#endif\n-\n-      ~_List_profile()\n-      { _M_profile_destruct(); }\n-    };\n-\n-  /** @brief List wrapper with performance instrumentation.  */\n-  template<typename _Tp, typename _Allocator = std::allocator<_Tp> >\n-    class list\n-    : public _GLIBCXX_STD_C::list<_Tp, _Allocator>,\n-      public _List_profile<list<_Tp, _Allocator> >\n-    {\n-      typedef _GLIBCXX_STD_C::list<_Tp, _Allocator>\t_Base;\n-\n-    public:\n-      typedef typename _Base::reference\t\t\treference;\n-      typedef typename _Base::const_reference\t\tconst_reference;\n-\n-      typedef __iterator_tracker<typename _Base::iterator, list>\n-\t\t\t\t\t\t\titerator;\n-      typedef __iterator_tracker<typename _Base::const_iterator, list>\n-\t\t\t\t\t\t\tconst_iterator;\n-\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::difference_type\t\tdifference_type;\n-\n-      typedef _Tp\t\t\t\t\tvalue_type;\n-      typedef _Allocator\t\t\t\tallocator_type;\n-      typedef typename _Base::pointer\t\t\tpointer;\n-      typedef typename _Base::const_pointer\t\tconst_pointer;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>\tconst_reverse_iterator;\n-\n-      // 23.2.2.1 construct/copy/destroy:\n-\n-#if __cplusplus < 201103L\n-      list() { }\n-      list(const list& __x)\n-      : _Base(__x) { }\n-\n-      ~list() { }\n-#else\n-      list() = default;\n-      list(const list&) = default;\n-      list(list&&) = default;\n-      ~list() = default;\n-\n-      list(initializer_list<value_type> __l,\n-\t   const allocator_type& __a = allocator_type())\n-      : _Base(__l, __a) { }\n-\n-      list(const list& __x, const allocator_type& __a)\n-      : _Base(__x, __a) { }\n-\n-      list(list&& __x, const allocator_type& __a)\n-      : _Base(std::move(__x), __a) { }\n-#endif\n-\n-      explicit\n-      list(const _Allocator& __a) _GLIBCXX_NOEXCEPT\n-      : _Base(__a) { }\n-\n-#if __cplusplus >= 201103L\n-      explicit\n-      list(size_type __n, const allocator_type& __a = allocator_type())\n-      : _Base(__n, __a) { }\n-\n-      list(size_type __n, const _Tp& __value,\n-\t   const _Allocator& __a = _Allocator())\n-      : _Base(__n, __value, __a) { }\n-#else\n-      explicit\n-      list(size_type __n, const _Tp& __value = _Tp(),\n-\t   const _Allocator& __a = _Allocator())\n-      : _Base(__n, __value, __a) { }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<class _InputIterator>\n-#endif\n-      list(_InputIterator __first, _InputIterator __last,\n-\t   const _Allocator& __a = _Allocator())\n-      : _Base(__first, __last, __a) { }\n-\n-      list(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus < 201103L\n-      list&\n-      operator=(const list& __x)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __x;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#else\n-      list&\n-      operator=(const list&) = default;\n-\n-      list&\n-      operator=(list&&) = default;\n-\n-      list&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#endif\n-\n-      // iterators:\n-      iterator\n-      begin() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      begin() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      iterator\n-      end() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\treturn iterator(_Base::end(), this);\n-      }\n-\n-      const_iterator\n-      end() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\treturn const_iterator(_Base::end(), this);\n-      }\n-\n-      reverse_iterator\n-      rbegin() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\treturn reverse_iterator(end());\n-      }\n-\n-      const_reverse_iterator\n-      rbegin() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\treturn const_reverse_iterator(end());\n-      }\n-\n-      reverse_iterator\n-      rend() _GLIBCXX_NOEXCEPT\n-      { return reverse_iterator(begin()); }\n-\n-      const_reverse_iterator\n-      rend() const _GLIBCXX_NOEXCEPT\n-      { return const_reverse_iterator(begin()); }\n-\n-#if __cplusplus >= 201103L\n-      const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(_Base::cbegin(), this); }\n-\n-      const_iterator\n-      cend() const noexcept\n-      { return const_iterator(_Base::cend(), this); }\n-\n-      const_reverse_iterator\n-      crbegin() const noexcept\n-      { return const_reverse_iterator(end()); }\n-\n-      const_reverse_iterator\n-      crend() const noexcept\n-      { return const_reverse_iterator(begin()); }\n-#endif\n-\n-      // 23.2.2.2 capacity:\n-      reference\n-      back() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\treturn _Base::back();\n-      }\n-\n-      const_reference\n-      back() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\treturn _Base::back();\n-      }\n-\n-      // 23.2.2.3 modifiers:\n-      void\n-      push_front(const value_type& __x)\n-      {\n-\t__profcxx_list2vector_invalid_operator(this->_M_list2vector_info);\n-\t__profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t_Base::push_front(__x);\n-      }\n-\n-      void\n-      pop_front() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t_Base::pop_front();\n-      }\n-\n-      void\n-      pop_back() _GLIBCXX_NOEXCEPT\n-      {\n-\t_Base::pop_back();\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      template<typename... _Args>\n-\titerator\n-\templace(const_iterator __position, _Args&&... __args)\n-\t{\n-\t  return iterator(_Base::emplace(__position.base(),\n-\t\t\t\t\t std::forward<_Args>(__args)...),\n-\t\t\t  this);\n-\t}\n-#endif\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      insert(const_iterator __pos, const _Tp& __x)\n-#else\n-      insert(iterator __pos, const _Tp& __x)\n-#endif\n-      {\n-\t_M_profile_insert(__pos, this->size());\n-\treturn iterator(_Base::insert(__pos.base(), __x), this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(const_iterator __pos, _Tp&& __x)\n-      {\n-\t_M_profile_insert(__pos, this->size());\n-\treturn iterator(_Base::emplace(__pos.base(), std::move(__x)),\n-\t\t\tthis);\n-      }\n-\n-      iterator\n-      insert(const_iterator __pos, initializer_list<value_type> __l)\n-      {\n-\t_M_profile_insert(__pos, this->size());\n-\treturn iterator(_Base::insert(__pos.base(), __l), this);\n-      }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(const_iterator __pos, size_type __n, const _Tp& __x)\n-      {\n-\t_M_profile_insert(__pos, this->size());\n-\treturn iterator(_Base::insert(__pos.base(), __n, __x), this);\n-      }\n-#else\n-      void\n-      insert(iterator __pos, size_type __n, const _Tp& __x)\n-      {\n-\t_M_profile_insert(__pos, this->size());\n-\t_Base::insert(__pos.base(), __n, __x);\n-      }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-\titerator\n-\tinsert(const_iterator __pos, _InputIterator __first,\n-\t       _InputIterator __last)\n-\t{\n-\t  _M_profile_insert(__pos, this->size());\n-\t  return iterator(_Base::insert(__pos.base(), __first, __last),\n-\t\t\t  this);\n-\t}\n-#else\n-      template<class _InputIterator>\n-\tvoid\n-\tinsert(iterator __pos, _InputIterator __first,\n-\t       _InputIterator __last)\n-\t{\n-\t  _M_profile_insert(__pos, this->size());\n-\t  _Base::insert(__pos.base(), __first, __last);\n-\t}\n-#endif\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      erase(const_iterator __pos) noexcept\n-#else\n-      erase(iterator __pos)\n-#endif\n-      {\treturn iterator(_Base::erase(__pos.base()), this); }\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      erase(const_iterator __pos, const_iterator __last) noexcept\n-#else\n-      erase(iterator __pos, iterator __last)\n-#endif\n-      {\n-\t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n-\t// 151. can't currently clear() empty container\n-\treturn iterator(_Base::erase(__pos.base(), __last.base()), this);\n-      }\n-\n-      void\n-      swap(list& __x)\n-      _GLIBCXX_NOEXCEPT_IF( noexcept(declval<_Base&>().swap(__x)) )\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-      void\n-      clear() _GLIBCXX_NOEXCEPT\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      // 23.2.2.4 list operations:\n-      void\n-#if __cplusplus >= 201103L\n-      splice(const_iterator __pos, list&& __x) noexcept\n-#else\n-      splice(iterator __pos, list& __x)\n-#endif\n-      { this->splice(__pos, _GLIBCXX_MOVE(__x), __x.begin(), __x.end()); }\n-\n-#if __cplusplus >= 201103L\n-      void\n-      splice(const_iterator __pos, list& __x) noexcept\n-      { this->splice(__pos, std::move(__x)); }\n-\n-      void\n-      splice(const_iterator __pos, list& __x, const_iterator __i)\n-      { this->splice(__pos, std::move(__x), __i); }\n-#endif\n-\n-      void\n-#if __cplusplus >= 201103L\n-      splice(const_iterator __pos, list&& __x, const_iterator __i) noexcept\n-#else\n-      splice(iterator __pos, list& __x, iterator __i)\n-#endif\n-      {\n-\t// We used to perform the splice_alloc check:  not anymore, redundant\n-\t// after implementing the relevant bits of N1599.\n-\n-\t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n-\t_Base::splice(__pos.base(), _GLIBCXX_MOVE(__x._M_base()),\n-\t\t      __i.base());\n-      }\n-\n-      void\n-#if __cplusplus >= 201103L\n-      splice(const_iterator __pos, list&& __x, const_iterator __first,\n-\t     const_iterator __last) noexcept\n-#else\n-      splice(iterator __pos, list& __x, iterator __first,\n-\t     iterator __last)\n-#endif\n-      {\n-\t_Base::splice(__pos.base(), _GLIBCXX_MOVE(__x._M_base()),\n-\t\t      __first.base(), __last.base());\n-      }\n-\n-#if __cplusplus >= 201103L\n-      void\n-      splice(const_iterator __pos, list& __x,\n-\t     const_iterator __first, const_iterator __last) noexcept\n-      { this->splice(__pos, std::move(__x), __first, __last); }\n-#endif\n-\n-      void\n-      remove(const _Tp& __value)\n-      {\n-\tfor (iterator __x = begin(); __x != end(); )\n-\t  {\n-\t    if (*__x == __value)\n-\t      __x = erase(__x);\n-\t    else\n-\t      ++__x;\n-\t  }\n-      }\n-\n-      template<class _Predicate>\n-\tvoid\n-\tremove_if(_Predicate __pred)\n-\t{\n-\t  for (iterator __x = begin(); __x != end(); )\n-\t    {\n-\t      __profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t      if (__pred(*__x))\n-\t\t__x = erase(__x);\n-\t      else\n-\t\t++__x;\n-\t    }\n-\t}\n-\n-      void\n-      unique()\n-      {\n-\titerator __first = begin();\n-\titerator __last = end();\n-\tif (__first == __last)\n-\t  return;\n-\titerator __next = __first;\n-\twhile (++__next != __last)\n-\t  {\n-\t    __profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t    if (*__first == *__next)\n-\t      erase(__next);\n-\t    else\n-\t      __first = __next;\n-\t    __next = __first;\n-\t  }\n-      }\n-\n-      template<class _BinaryPredicate>\n-\tvoid\n-\tunique(_BinaryPredicate __binary_pred)\n-\t{\n-\t  iterator __first = begin();\n-\t  iterator __last = end();\n-\t  if (__first == __last)\n-\t    return;\n-\t  iterator __next = __first;\n-\t  while (++__next != __last)\n-\t    {\n-\t      __profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t      if (__binary_pred(*__first, *__next))\n-\t\terase(__next);\n-\t      else\n-\t\t__first = __next;\n-\t      __next = __first;\n-\t    }\n-\t}\n-\n-      void\n-#if __cplusplus >= 201103L\n-      merge(list&& __x)\n-#else\n-      merge(list& __x)\n-#endif\n-      { _Base::merge(_GLIBCXX_MOVE(__x._M_base())); }\n-\n-#if __cplusplus >= 201103L\n-      void\n-      merge(list& __x)\n-      { this->merge(std::move(__x)); }\n-#endif\n-\n-      template<class _Compare>\n-\tvoid\n-#if __cplusplus >= 201103L\n-\tmerge(list&& __x, _Compare __comp)\n-#else\n-\tmerge(list& __x, _Compare __comp)\n-#endif\n-\t{ _Base::merge(_GLIBCXX_MOVE(__x._M_base()), __comp); }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _Compare>\n-\tvoid\n-\tmerge(list& __x, _Compare __comp)\n-\t{ this->merge(std::move(__x), __comp); }\n-#endif\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      void _M_profile_iterate(int __rewind = 0) const\n-      {\n-\t__profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t__profcxx_list2vector_iterate(this->_M_list2vector_info, __rewind);\n-\tif (__rewind)\n-\t  __profcxx_list2slist_rewind(this->_M_list2slist_info);\n-      }\n-\n-    private:\n-      size_type\n-      _M_profile_insert(const_iterator __pos, size_type __size)\n-      {\n-\tsize_type __shift = 0;\n-\ttypename _Base::const_iterator __it = __pos.base();\n-\tfor (; __it != _Base::end(); ++__it)\n-\t  __shift++;\n-\t__profcxx_list2slist_rewind(this->_M_list2slist_info);\n-\t__profcxx_list2slist_operation(this->_M_list2slist_info);\n-\t__profcxx_list2vector_insert(this->_M_list2vector_info, __shift, __size);\n-      }\n-    };\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator==(const list<_Tp, _Alloc>& __lhs,\n-\t       const list<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() == __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator!=(const list<_Tp, _Alloc>& __lhs,\n-\t       const list<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() != __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<(const list<_Tp, _Alloc>& __lhs,\n-\t      const list<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() < __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<=(const list<_Tp, _Alloc>& __lhs,\n-\t       const list<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() <= __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>=(const list<_Tp, _Alloc>& __lhs,\n-\t       const list<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() >= __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>(const list<_Tp, _Alloc>& __lhs,\n-\t      const list<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() > __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline void\n-    swap(list<_Tp, _Alloc>& __lhs, list<_Tp, _Alloc>& __rhs)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))\n-    { __lhs.swap(__rhs); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "dc96293606aa16b00e8eae14e1c81ac8f1594f04", "filename": "libstdc++-v3/include/profile/map", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,35 +0,0 @@\n-// Profiling map/multimap implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/map\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_MAP\n-#define _GLIBCXX_PROFILE_MAP 1\n-\n-#include <map>\n-#include <profile/map.h>\n-#include <profile/multimap.h>\n-\n-#endif"}, {"sha": "c8b9a5a52294676346e676d7378c36016285987f", "filename": "libstdc++-v3/include/profile/map.h", "status": "removed", "additions": 0, "deletions": 705, "changes": 705, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,705 +0,0 @@\n-// Profiling map implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/map.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_MAP_H\n-#define _GLIBCXX_PROFILE_MAP_H 1\n-\n-#include <profile/base.h>\n-#include <profile/ordered_base.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::map wrapper with performance instrumentation.\n-  template<typename _Key, typename _Tp, typename _Compare = std::less<_Key>,\n-\t   typename _Allocator = std::allocator<std::pair<const _Key, _Tp> > >\n-    class map\n-    : public _GLIBCXX_STD_C::map<_Key, _Tp, _Compare, _Allocator>,\n-      public _Ordered_profile<map<_Key, _Tp, _Compare, _Allocator> >\n-    {\n-      typedef _GLIBCXX_STD_C::map<_Key, _Tp, _Compare, _Allocator> _Base;\n-\n-      typedef typename _Base::iterator\t\t\t_Base_iterator;\n-      typedef typename _Base::const_iterator\t\t_Base_const_iterator;\n-\n-    public:\n-      // types:\n-      typedef _Key\t\t\t\t\tkey_type;\n-      typedef _Tp\t\t\t\t\tmapped_type;\n-      typedef typename _Base::value_type\t\tvalue_type;\n-      typedef _Compare\t\t\t\t\tkey_compare;\n-      typedef typename _Base::reference\t\t\treference;\n-      typedef typename _Base::const_reference\t\tconst_reference;\n-\n-      typedef __iterator_tracker<_Base_iterator, map>\titerator;\n-      typedef __iterator_tracker<_Base_const_iterator,\n-\t\t\t\t map>\t\t\tconst_iterator;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>\tconst_reverse_iterator;\n-\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::difference_type\t\tdifference_type;\n-\n-      // 23.3.1.1 construct/copy/destroy:\n-\n-#if __cplusplus < 201103L\n-      map()\n-      : _Base() { }\n-      map(const map& __x)\n-\t: _Base(__x) { }\n-      ~map()\n-      { }\n-#else\n-      map() = default;\n-      map(const map&) = default;\n-      map(map&&) = default;\n-      ~map() = default;\n-#endif\n-\n-      explicit\n-      map(const _Compare& __comp,\n-\t  const _Allocator& __a = _Allocator())\n-      : _Base(__comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tmap(_InputIterator __first, _InputIterator __last,\n-\t    const _Compare& __comp = _Compare(),\n-\t    const _Allocator& __a = _Allocator())\n-\t: _Base(__first, __last, __comp, __a) { }\n-\n-      map(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus >= 201103L\n-      map(initializer_list<value_type> __l,\n-\t  const _Compare& __c = _Compare(),\n-\t  const _Allocator& __a = _Allocator())\n-      : _Base(__l, __c, __a) { }\n-\n-      explicit\n-      map(const _Allocator& __a)\n-      : _Base(__a) { }\n-\n-      map(const map& __x, const _Allocator& __a)\n-      : _Base(__x, __a) { }\n-\n-      map(map&& __x, const _Allocator& __a)\n-      noexcept( noexcept(_Base(std::move(__x), __a)) )\n-      : _Base(std::move(__x), __a) { }\n-\n-      map(initializer_list<value_type> __l, const _Allocator& __a)\n-      : _Base(__l, __a) { }\n-\n-      template<typename _InputIterator>\n-\tmap(_InputIterator __first, _InputIterator __last,\n-\t    const _Allocator& __a)\n-\t: _Base(__first, __last, __a) { }\n-#endif\n-\n-#if __cplusplus < 201103L\n-      map&\n-      operator=(const map& __x)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __x;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#else\n-      map&\n-      operator=(const map&) = default;\n-\n-      map&\n-      operator=(map&&) = default;\n-\n-      map&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#endif\n-\n-      // iterators\n-      iterator\n-      begin() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      begin() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      iterator\n-      end() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::end(), this); }\n-\n-      const_iterator\n-      end() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::end(), this); }\n-\n-#if __cplusplus >= 201103L\n-      const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(_Base::cbegin(), this); }\n-\n-      const_iterator\n-      cend() const noexcept\n-      { return const_iterator(_Base::cend(), this); }\n-#endif\n-\n-      reverse_iterator\n-      rbegin() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(end());\n-      }\n-\n-      const_reverse_iterator\n-      rbegin() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(end());\n-      }\n-\n-      reverse_iterator\n-      rend() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(begin());\n-      }\n-\n-      const_reverse_iterator\n-      rend() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(begin());\n-      }\n-\n-#if __cplusplus >= 201103L\n-      const_reverse_iterator\n-      crbegin() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cend());\n-      }\n-\n-      const_reverse_iterator\n-      crend() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cbegin());\n-      }\n-#endif\n-\n-      // 23.3.1.2 element access:\n-      mapped_type&\n-      operator[](const key_type& __k)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::operator[](__k);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      mapped_type&\n-      operator[](key_type&& __k)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::operator[](std::move(__k));\n-      }\n-#endif\n-\n-      mapped_type&\n-      at(const key_type& __k)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::at(__k);\n-      }\n-\n-      const mapped_type&\n-      at(const key_type& __k) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::at(__k);\n-      }\n-\n-      // modifiers:\n-#if __cplusplus >= 201103L\n-      template<typename... _Args>\n-\tstd::pair<iterator, bool>\n-\templace(_Args&&... __args)\n-\t{\n-\t  // The cost is the same whether or not the element is inserted so we\n-\t  // always report insertion of 1 element.\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\t  auto __base_ret = _Base::emplace(std::forward<_Args>(__args)...);\n-\t  return std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t\t__base_ret.second);\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __pos, _Args&&... __args)\n-\t{\n-\t  auto size_before = this->size();\n-\t  auto __res\n-\t    = _Base::emplace_hint(__pos.base(), std::forward<_Args>(__args)...);\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\t  return iterator(__res, this);\n-\t}\n-#endif\n-\n-      std::pair<iterator, bool>\n-      insert(const value_type& __x)\n-      {\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\tstd::pair<_Base_iterator, bool> __base_ret = _Base::insert(__x);\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      __base_ret.second);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\tstd::pair<iterator, bool>\n-\tinsert(_Pair&& __x)\n-\t{\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\t  auto __base_ret= _Base::insert(std::forward<_Pair>(__x));\n-\t  return std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t\t__base_ret.second);\n-\t}\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      void\n-      insert(std::initializer_list<value_type> __list)\n-      { insert(__list.begin(), __list.end()); }\n-#endif\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      insert(const_iterator __pos, const value_type& __x)\n-#else\n-      insert(iterator __pos, const value_type& __x)\n-#endif\n-      {\n-\tsize_type size_before = this->size();\n-\t_Base_iterator __res = _Base::insert(__pos.base(), __x);\n-\t\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\treturn iterator(__res, this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\titerator\n-\tinsert(const_iterator __pos, _Pair&& __x)\n-\t{\n-\t  size_type size_before = this->size();\n-\t  auto __res = _Base::insert(__pos.base(), std::forward<_Pair>(__x));\n-\t\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\t  return iterator(__res, this);\n-      }\n-#endif\n-\n-      template<typename _InputIterator>\n-\tvoid\n-\tinsert(_InputIterator __first, _InputIterator __last)\n-\t{\n-\t  for (; __first != __last; ++__first)\n-\t    insert(*__first);\n-\t}\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::erase(__pos.base()), this);\n-      }\n-\n-      iterator\n-      erase(iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::erase(__pos.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\t_Base::erase(__pos.base());\n-      }\n-#endif\n-\n-      size_type\n-      erase(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn _Base::erase(__x);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __first, const_iterator __last)\n-      {\n-\tif (__first != __last)\n-\t  {\n-\t    iterator __ret;\n-\t    for (; __first != __last;)\n-\t      __ret = erase(__first++);\n-\t    return __ret;\n-\t  }\n-\telse\n-\t  return iterator(_Base::erase(__first.base(), __last.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __first, iterator __last)\n-      {\n-\tfor (; __first != __last;)\n-\t  erase(__first++);\n-      }\n-#endif\n-\n-      void\n-      swap(map& __x)\n-      _GLIBCXX_NOEXCEPT_IF( noexcept(declval<_Base&>().swap(__x)) )\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-      void\n-      clear() _GLIBCXX_NOEXCEPT\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      // 23.3.1.3 map operations:\n-      iterator\n-      find(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn iterator(_Base::find(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tfind(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-#endif\n-\n-      const_iterator\n-      find(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn const_iterator(_Base::find(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tfind(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-#endif\n-\n-      size_type\n-      count(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::count(__x);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tsize_type\n-\tcount(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return _Base::count(__x);\n-\t}\n-#endif\n-\n-      iterator\n-      lower_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tlower_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-#endif\n-\n-      const_iterator\n-      lower_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tlower_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-#endif\n-\n-      iterator\n-      upper_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tupper_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-#endif\n-\n-      const_iterator\n-      upper_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tupper_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-#endif\n-\n-      std::pair<iterator,iterator>\n-      equal_range(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_iterator, _Base_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      iterator(__base_ret.second, this));\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<iterator, iterator>\n-\tequal_range(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-#endif\n-\n-      std::pair<const_iterator,const_iterator>\n-      equal_range(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_const_iterator, _Base_const_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(const_iterator(__base_ret.first, this),\n-\t\t\t      const_iterator(__base_ret.second, this));\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<const_iterator, const_iterator>\n-\tequal_range(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-#endif\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-    private:\n-      /** If hint is used we consider that the map and unordered_map\n-       * operations have equivalent insertion cost so we do not update metrics\n-       * about it.\n-       * Note that to find out if hint has been used is libstdc++\n-       * implementation dependent.\n-       */\n-      bool\n-      _M_hint_used(_Base_const_iterator __hint, _Base_iterator __res)\n-      {\n-\treturn (__hint == __res\n-\t\t|| (__hint == _M_base().end() && ++__res == _M_base().end())\n-\t\t|| (__hint != _M_base().end() && (++__hint == __res\n-\t\t\t\t\t\t  || ++__res == --__hint)));\n-      }\n-\n-\n-      template<typename _K1, typename _T1, typename _C1, typename _A1>\n-        friend bool\n-        operator==(const map<_K1, _T1, _C1, _A1>&,\n-\t\t   const map<_K1, _T1, _C1, _A1>&);\n-\n-      template<typename _K1, typename _T1, typename _C1, typename _A1>\n-        friend bool\n-        operator<(const map<_K1, _T1, _C1, _A1>&,\n-\t\t  const map<_K1, _T1, _C1, _A1>&);      \n-    };\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator==(const map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() == __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<(const map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t      const map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() < __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator!=(const map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs == __rhs); }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<=(const map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return !(__rhs < __lhs); }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>=(const map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs < __rhs); }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>(const map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t      const map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return __rhs < __lhs; }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline void\n-    swap(map<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t map<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))\n-    { __lhs.swap(__rhs); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "7d0af3d5e62287988cd5cafc58db64b7ea02c193", "filename": "libstdc++-v3/include/profile/multimap.h", "status": "removed", "additions": 0, "deletions": 663, "changes": 663, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,663 +0,0 @@\n-// Profiling multimap implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/multimap.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_MULTIMAP_H\n-#define _GLIBCXX_PROFILE_MULTIMAP_H 1\n-\n-#include <profile/base.h>\n-#include <profile/ordered_base.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::multimap wrapper with performance instrumentation.\n-  template<typename _Key, typename _Tp, typename _Compare = std::less<_Key>,\n-\t   typename _Allocator = std::allocator<std::pair<const _Key, _Tp> > >\n-    class multimap\n-    : public _GLIBCXX_STD_C::multimap<_Key, _Tp, _Compare, _Allocator>,\n-      public _Ordered_profile<map<_Key, _Tp, _Compare, _Allocator> >\n-    {\n-      typedef _GLIBCXX_STD_C::multimap<_Key, _Tp, _Compare, _Allocator> _Base;\n-\n-      typedef typename _Base::iterator\t\t\t_Base_iterator;\n-      typedef typename _Base::const_iterator\t\t_Base_const_iterator;\n-\n-    public:\n-      // types:\n-      typedef _Key\t\t\t\t\tkey_type;\n-      typedef _Tp\t\t\t\t\tmapped_type;\n-      typedef std::pair<const _Key, _Tp>\t\tvalue_type;\n-      typedef _Compare\t\t\t\t\tkey_compare;\n-      typedef typename _Base::reference\t\t\treference;\n-      typedef typename _Base::const_reference\t\tconst_reference;\n-\n-      typedef __iterator_tracker<_Base_iterator,\n-\t\t\t\t multimap>\t\titerator;\n-      typedef __iterator_tracker<_Base_const_iterator,\n-\t\t\t\t multimap>\t\tconst_iterator;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>\tconst_reverse_iterator;\n-\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::difference_type\t\tdifference_type;\n-\n-      // 23.3.1.1 construct/copy/destroy:\n-\n-#if __cplusplus < 201103L\n-      multimap()\n-      : _Base() { }\n-      multimap(const multimap& __x)\n-      : _Base(__x) { }\n-      ~multimap() { }\n-#else\n-      multimap() = default;\n-      multimap(const multimap&) = default;\n-      multimap(multimap&&) = default;\n-      ~multimap() = default;\n-#endif\n-\n-      explicit multimap(const _Compare& __comp,\n-\t\t\tconst _Allocator& __a = _Allocator())\n-      : _Base(__comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tmultimap(_InputIterator __first, _InputIterator __last,\n-\t\t const _Compare& __comp = _Compare(),\n-\t\t const _Allocator& __a = _Allocator())\n-\t: _Base(__first, __last, __comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      multimap(initializer_list<value_type> __l,\n-\t       const _Compare& __c = _Compare(),\n-\t       const _Allocator& __a = _Allocator())\n-      : _Base(__l, __c, __a) { }\n-\n-      explicit\n-      multimap(const _Allocator& __a)\n-      : _Base(__a) { }\n-\n-      multimap(const multimap& __x, const _Allocator& __a)\n-      : _Base(__x, __a) { }\n-\n-      multimap(multimap&& __x, const _Allocator& __a)\n-      noexcept( noexcept(_Base(std::move(__x), __a)) )\n-      : _Base(std::move(__x), __a) { }\n-\n-      multimap(initializer_list<value_type> __l, const _Allocator& __a)\n-      : _Base(__l, __a) { }\n-\n-      template<typename _InputIterator>\n-\tmultimap(_InputIterator __first, _InputIterator __last,\n-\t\t const _Allocator& __a)\n-\t: _Base(__first, __last, __a) { }\n-#endif\n-\n-      multimap(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus < 201103L\n-      multimap&\n-      operator=(const multimap& __x)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __x;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#else\n-      multimap&\n-      operator=(const multimap&) = default;\n-\n-      multimap&\n-      operator=(multimap&&) = default;\n-\n-      multimap&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#endif\n-\n-      // iterators\n-      iterator\n-      begin() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      begin() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      iterator\n-      end() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::end(), this); }\n-\n-      const_iterator\n-      end() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::end(), this); }\n-\n-#if __cplusplus >= 201103L\n-      const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(_Base::cbegin(), this); }\n-\n-      const_iterator\n-      cend() const noexcept\n-      { return const_iterator(_Base::cend(), this); }\n-#endif\n-\n-      reverse_iterator\n-      rbegin() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(end());\n-      }\n-\n-      const_reverse_iterator\n-      rbegin() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(end());\n-      }\n-\n-      reverse_iterator\n-      rend() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(begin());\n-      }\n-\n-      const_reverse_iterator\n-      rend() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(begin());\n-      }\n-\n-#if __cplusplus >= 201103L\n-      const_reverse_iterator\n-      crbegin() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cend());\n-      }\n-\n-      const_reverse_iterator\n-      crend() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cbegin());\n-      }\n-#endif\n-\n-      // modifiers:\n-#if __cplusplus >= 201103L\n-      template<typename... _Args>\n-\titerator\n-\templace(_Args&&... __args)\n-\t{\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\t  return iterator(_Base::emplace(std::forward<_Args>(__args)...), this);\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __pos, _Args&&... __args)\n-\t{\n-\t  auto size_before = this->size();\n-\t  auto __res\n-\t    = _Base::emplace_hint(__pos.base(), std::forward<_Args>(__args)...);\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\t  return iterator(__res, this);\n-\t}\n-#endif\n-\n-      iterator\n-      insert(const value_type& __x)\n-      {\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::insert(__x), this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\titerator\n-\tinsert(_Pair&& __x)\n-\t{\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\t  return iterator(_Base::insert(std::forward<_Pair>(__x)), this);\n-\t}\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      void\n-      insert(std::initializer_list<value_type> __list)\n-      { insert(__list.begin(), __list.end()); }\n-#endif\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      insert(const_iterator __pos, const value_type& __x)\n-#else\n-      insert(iterator __pos, const value_type& __x)\n-#endif\n-      {\n-\tsize_type size_before = this->size();\n-\t_Base_iterator __res = _Base::insert(__pos.base(), __x);\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\treturn iterator(__res, this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\titerator\n-\tinsert(const_iterator __pos, _Pair&& __x)\n-\t{\n-\t  size_type size_before = this->size();\n-\t  auto __res = _Base::insert(__pos.base(), std::forward<_Pair>(__x));\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\t  return iterator(__res, this);\n-\t}\n-#endif\n-\n-      template<typename _InputIterator>\n-\tvoid\n-\tinsert(_InputIterator __first, _InputIterator __last)\n-\t{\n-\t  for (; __first != __last; ++__first)\n-\t    insert(*__first);\n-\t}\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::erase(__pos.base()), this);\n-      }\n-\n-      iterator\n-      erase(iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::erase(__pos.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\t_Base::erase(__pos.base());\n-      }\n-#endif\n-\n-      size_type\n-      erase(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn _Base::erase(__x);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __first, const_iterator __last)\n-      {\n-\tif (__first != __last)\n-\t  {\n-\t    iterator __ret;\n-\t    for (; __first != __last;)\n-\t      __ret = erase(__first++);\n-\t    return __ret;\n-\t  }\n-\telse\n-\t  return iterator(_Base::erase(__first.base(), __last.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __first, iterator __last)\n-      {\n-\tfor (; __first != __last;)\n-\t  erase(__first++);\n-      }\n-#endif\n-\n-      void\n-      swap(multimap& __x)\n-      _GLIBCXX_NOEXCEPT_IF( noexcept(declval<_Base&>().swap(__x)) )\n-      {\n-\tstd::swap(this->_M_map2umap_info, __x._M_map2umap_info);\n-\t_Base::swap(__x);\n-      }\n- \n-      void\n-      clear() _GLIBCXX_NOEXCEPT\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      // 23.3.1.3 multimap operations:\n-      iterator\n-      find(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn iterator(_Base::find(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tfind(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-#endif\n-\n-      const_iterator\n-      find(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn const_iterator(_Base::find(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tfind(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-#endif\n-\n-      size_type\n-      count(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::count(__x);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tsize_type\n-\tcount(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return _Base::count(__x);\n-\t}\n-#endif\n-\n-      iterator\n-      lower_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tlower_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-#endif\n-\n-      const_iterator\n-      lower_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tlower_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-#endif\n-\n-      iterator\n-      upper_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tupper_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-#endif\n-\n-      const_iterator\n-      upper_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tupper_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-#endif\n-\n-      std::pair<iterator,iterator>\n-      equal_range(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_iterator, _Base_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      iterator(__base_ret.second, this));\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<iterator, iterator>\n-\tequal_range(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-#endif\n-\n-      std::pair<const_iterator,const_iterator>\n-      equal_range(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_const_iterator, _Base_const_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(const_iterator(__base_ret.first, this),\n-\t\t\t      const_iterator(__base_ret.second, this));\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<const_iterator, const_iterator>\n-\tequal_range(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-#endif\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-    private:\n-      /** If hint is used we consider that the map and unordered_map\n-       * operations have equivalent insertion cost so we do not update metrics\n-       * about it.\n-       * Note that to find out if hint has been used is libstdc++\n-       * implementation dependent.\n-       */\n-      bool\n-      _M_hint_used(_Base_const_iterator __hint, _Base_iterator __res)\n-      {\n-\treturn (__hint == __res\n-\t\t|| (__hint == _M_base().end() && ++__res == _M_base().end())\n-\t\t|| (__hint != _M_base().end() && (++__hint == __res\n-\t\t\t\t\t\t  || ++__res == --__hint)));\n-      }\n-\n-      template<typename _K1, typename _T1, typename _C1, typename _A1>\n-        friend bool\n-        operator==(const multimap<_K1, _T1, _C1, _A1>&,\n-\t\t   const multimap<_K1, _T1, _C1, _A1>&);\n-\n-      template<typename _K1, typename _T1, typename _C1, typename _A1>\n-        friend bool\n-        operator<(const multimap<_K1, _T1, _C1, _A1>&,\n-\t\t  const multimap<_K1, _T1, _C1, _A1>&);\n-    };\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator==(const multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() == __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<(const multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t      const multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() < __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator!=(const multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs == __rhs); }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<=(const multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return !(__rhs < __lhs); }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>=(const multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t       const multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs < __rhs); }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>(const multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t      const multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    { return __rhs < __lhs; }\n-\n-  template<typename _Key, typename _Tp,\n-\t   typename _Compare, typename _Allocator>\n-    inline void\n-    swap(multimap<_Key, _Tp, _Compare, _Allocator>& __lhs,\n-\t multimap<_Key, _Tp, _Compare, _Allocator>& __rhs)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))\n-    { __lhs.swap(__rhs); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "dcf7bc84cdd7198b05793cb5f9310a5f06af0abd", "filename": "libstdc++-v3/include/profile/multiset.h", "status": "removed", "additions": 0, "deletions": 647, "changes": 647, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,647 +0,0 @@\n-// Profiling multiset implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/multiset.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_MULTISET_H\n-#define _GLIBCXX_PROFILE_MULTISET_H 1\n-\n-#include <profile/base.h>\n-#include <profile/ordered_base.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::multiset wrapper with performance instrumentation.\n-  template<typename _Key, typename _Compare = std::less<_Key>,\n-\t   typename _Allocator = std::allocator<_Key> >\n-    class multiset\n-    : public _GLIBCXX_STD_C::multiset<_Key, _Compare, _Allocator>,\n-      public _Ordered_profile<multiset<_Key, _Compare, _Allocator> >\n-    {\n-      typedef _GLIBCXX_STD_C::multiset<_Key, _Compare, _Allocator> _Base;\n-\n-      typedef typename _Base::iterator\t\t\t_Base_iterator;\n-      typedef typename _Base::const_iterator\t\t_Base_const_iterator;\n-\n-    public:\n-      // types:\n-      typedef _Key\t\t\t\t\tkey_type;\n-      typedef _Key\t\t\t\t\tvalue_type;\n-      typedef _Compare\t\t\t\t\tkey_compare;\n-      typedef _Compare\t\t\t\t\tvalue_compare;\n-      typedef _Allocator\t\t\t\tallocator_type;\n-      typedef typename _Base::reference\t\t\treference;\n-      typedef typename _Base::const_reference\t\tconst_reference;\n-\n-      typedef __iterator_tracker<_Base_iterator,\n-\t\t\t\t multiset>\t\titerator;\n-      typedef __iterator_tracker<_Base_const_iterator,\n-\t\t\t\t multiset>\t\tconst_iterator;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>\tconst_reverse_iterator;\n-\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::difference_type\t\tdifference_type;\n-\n-      // 23.3.3.1 construct/copy/destroy:\n-\n-#if __cplusplus < 201103L\n-      multiset()\n-      : _Base() { }\n-      multiset(const multiset& __x)\n-      : _Base(__x) { }\n-      ~multiset() { }\n-#else\n-      multiset() = default;\n-      multiset(const multiset&) = default;\n-      multiset(multiset&&) = default;\n-      ~multiset() = default;\n-#endif\n-\n-      explicit multiset(const _Compare& __comp,\n-\t\t\tconst _Allocator& __a = _Allocator())\n-      : _Base(__comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tmultiset(_InputIterator __first, _InputIterator __last,\n-\t\t const _Compare& __comp = _Compare(),\n-\t\t const _Allocator& __a = _Allocator())\n-\t: _Base(__first, __last, __comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      multiset(initializer_list<value_type> __l,\n-\t       const _Compare& __comp = _Compare(),\n-\t       const allocator_type& __a = allocator_type())\n-      : _Base(__l, __comp, __a) { }\n-\n-      explicit\n-      multiset(const allocator_type& __a)\n-      : _Base(__a) { }\n-\n-      multiset(const multiset& __x, const allocator_type& __a)\n-      : _Base(__x, __a) { }\n-\n-      multiset(multiset&& __x, const allocator_type& __a)\n-      noexcept( noexcept(_Base(std::move(__x), __a)) )\n-      : _Base(std::move(__x), __a) { }\n-\n-      multiset(initializer_list<value_type> __l, const allocator_type& __a)\n-      : _Base(__l, __a) { }\n-\n-      template<typename _InputIterator>\n-\tmultiset(_InputIterator __first, _InputIterator __last,\n-\t\t const allocator_type& __a)\n-\t: _Base(__first, __last, __a) { }\n-#endif\n-\n-      multiset(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus < 201103L\n-      multiset&\n-      operator=(const multiset& __x)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __x;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#else\n-      multiset&\n-      operator=(const multiset&) = default;\n-\n-      multiset&\n-      operator=(multiset&&) = default;\n-\n-      multiset&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#endif\n-\n-      // iterators\n-      iterator\n-      begin() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      begin() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      iterator\n-      end() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::end(), this); }\n-\n-      const_iterator\n-      end() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::end(), this); }\n-\n-#if __cplusplus >= 201103L\n-      const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(_Base::cbegin(), this); }\n-\n-      const_iterator\n-      cend() const noexcept\n-      { return const_iterator(_Base::cend(), this); }\n-#endif\n-\n-      reverse_iterator\n-      rbegin() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(end());\n-      }\n-\n-      const_reverse_iterator\n-      rbegin() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(end());\n-      }\n-\n-      reverse_iterator\n-      rend() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(begin());\n-      }\n-\n-      const_reverse_iterator\n-      rend() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(begin());\n-      }\n-\n-#if __cplusplus >= 201103L\n-      const_reverse_iterator\n-      crbegin() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cend());\n-      }\n-\n-      const_reverse_iterator\n-      crend() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cbegin());\n-      }\n-#endif\n-\n-      void\n-      swap(multiset& __x)\n-      _GLIBCXX_NOEXCEPT_IF( noexcept(declval<_Base&>().swap(__x)) )\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-      // modifiers:\n-#if __cplusplus >= 201103L\n-      template<typename... _Args>\n-\titerator\n-\templace(_Args&&... __args)\n-\t{\n-\t  // The cost is the same whether or not the element is inserted so we\n-\t  // always report insertion of 1 element.\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\t  return iterator(_Base::emplace(std::forward<_Args>(__args)...), this);\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __pos, _Args&&... __args)\n-\t{\n-\t  auto size_before = this->size();\n-\t  auto __res\n-\t    = _Base::emplace_hint(__pos.base(), std::forward<_Args>(__args)...);\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\t  return iterator(__res, this);\n-\t}\n-#endif\n-\n-      iterator\n-      insert(const value_type& __x)\n-      {\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::insert(__x), this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(value_type&& __x)\n-      {\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::insert(std::move(__x)), this);\n-      }\n-#endif\n-\n-      iterator\n-      insert(const_iterator __pos, const value_type& __x)\n-      {\n-\tsize_type size_before = this->size();\n-\t_Base_iterator __res = _Base::insert(__pos.base(), __x);\n-\t\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\treturn iterator(__res, this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(const_iterator __pos, value_type&& __x)\n-      {\n-\tauto size_before = this->size();\n-\tauto __res = _Base::insert(__pos.base(), std::move(__x));\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\treturn iterator(__res, this);\n-      }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tvoid\n-\tinsert(_InputIterator __first, _InputIterator __last)\n-\t{\n-\t  for (; __first != __last; ++__first)\n-\t    insert(*__first);\n-\t}\n-\n-#if __cplusplus >= 201103L\n-      void\n-      insert(initializer_list<value_type> __l)\n-      { insert(__l.begin(), __l.end()); }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::erase(__pos.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\t_Base::erase(__pos.base());\n-      }\n-#endif\n-\n-      size_type\n-      erase(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn _Base::erase(__x);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __first, const_iterator __last)\n-      {\n-\tif (__first != __last)\n-\t  {\n-\t    iterator __ret;\n-\t    for (; __first != __last;)\n-\t      __ret = erase(__first++);\n-\t    return __ret;\n-\t  }\n-\telse\n-\t  return iterator(_Base::erase(__first.base(), __last.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __first, iterator __last)\n-      {\n-\tfor (; __first != __last;)\n-\t  erase(__first++);\n-      }\n-#endif\n-\n-      void\n-      clear() _GLIBCXX_NOEXCEPT\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n- \n-      size_type\n-      count(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::count(__x);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tsize_type\n-\tcount(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return _Base::count(__x);\n-\t}\n-#endif\n-\n-      // multiset operations:\n-      iterator\n-      find(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn iterator(_Base::find(__x), this);\n-      }\n-\n-      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-      // 214. set::find() missing const overload\n-      const_iterator\n-      find(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn const_iterator(_Base::find(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tfind(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tfind(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-#endif\n-\n-      iterator\n-      lower_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-      // 214. set::find() missing const overload\n-      const_iterator\n-      lower_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tlower_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tlower_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-#endif\n-\n-      iterator\n-      upper_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-      // 214. set::find() missing const overload\n-      const_iterator\n-      upper_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tupper_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tupper_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-#endif\n-\n-      std::pair<iterator,iterator>\n-      equal_range(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_iterator, _Base_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      iterator(__base_ret.second, this));\n-      }\n-\n-      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-      // 214. set::find() missing const overload\n-      std::pair<const_iterator,const_iterator>\n-      equal_range(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_const_iterator, _Base_const_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(const_iterator(__base_ret.first, this),\n-\t\t\t      const_iterator(__base_ret.second, this));\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<iterator, iterator>\n-\tequal_range(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<const_iterator, const_iterator>\n-\tequal_range(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-#endif\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-    private:\n-      /** If hint is used we consider that the map and unordered_map\n-       * operations have equivalent insertion cost so we do not update metrics\n-       * about it.\n-       * Note that to find out if hint has been used is libstdc++\n-       * implementation dependent.\n-       */\n-      bool\n-      _M_hint_used(_Base_const_iterator __hint, _Base_iterator __res)\n-      {\n-\treturn (__hint == __res\n-\t\t|| (__hint == _M_base().end() && ++__res == _M_base().end())\n-\t\t|| (__hint != _M_base().end() && (++__hint == __res\n-\t\t\t\t\t\t  || ++__res == --__hint)));\n-      }\n-\n-      template<typename _K1, typename _C1, typename _A1>\n-        friend bool\n-        operator==(const multiset<_K1, _C1, _A1>&,\n-\t\t   const multiset<_K1, _C1, _A1>&);\n-\n-      template<typename _K1, typename _C1, typename _A1>\n-        friend bool\n-        operator< (const multiset<_K1, _C1, _A1>&,\n-\t\t   const multiset<_K1, _C1, _A1>&);\n-    };\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator==(const multiset<_Key, _Compare, _Allocator>& __lhs,\n-\t       const multiset<_Key, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() == __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<(const multiset<_Key, _Compare, _Allocator>& __lhs,\n-\t      const multiset<_Key, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() < __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator!=(const multiset<_Key, _Compare, _Allocator>& __lhs,\n-\t       const multiset<_Key, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs == __rhs); }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<=(const multiset<_Key, _Compare, _Allocator>& __lhs,\n-\t       const multiset<_Key, _Compare, _Allocator>& __rhs)\n-    { return !(__rhs < __lhs); }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>=(const multiset<_Key, _Compare, _Allocator>& __lhs,\n-\t       const multiset<_Key, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs < __rhs); }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>(const multiset<_Key, _Compare, _Allocator>& __lhs,\n-\t      const multiset<_Key, _Compare, _Allocator>& __rhs)\n-    { return __rhs < __lhs; }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    void\n-    swap(multiset<_Key, _Compare, _Allocator>& __x,\n-\t multiset<_Key, _Compare, _Allocator>& __y)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__x.swap(__y)))\n-    { return __x.swap(__y); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "ceee4553cff2c7654e1f385355334b9f2bd51194", "filename": "libstdc++-v3/include/profile/ordered_base.h", "status": "removed", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fordered_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fordered_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fordered_base.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,100 +0,0 @@\n-// Profiling unordered containers implementation details -*- C++ -*-\n-\n-// Copyright (C) 2014-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/ordered_base.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_ORDERED\n-#define _GLIBCXX_PROFILE_ORDERED 1\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  template<typename _Cont>\n-    class _Ordered_profile\n-    {\n-    public:\n-      void\n-      _M_profile_iterate(int __rewind = 0) const\n-      { __profcxx_map2umap_iterate(this->_M_map2umap_info, __rewind); }\n-\n-    protected:\n-      _Ordered_profile() _GLIBCXX_NOEXCEPT\n-      { _M_profile_construct(); }\n-\n-#if __cplusplus >= 201103L\n-      _Ordered_profile(const _Ordered_profile&) noexcept\n-      : _Ordered_profile() { }\n-      _Ordered_profile(_Ordered_profile&& __other) noexcept\n-      : _Ordered_profile()\n-      { _M_swap(__other); }\n-\n-      _Ordered_profile&\n-      operator=(const _Ordered_profile&) noexcept\n-      {\n-\t_M_profile_destruct();\n-\t_M_profile_construct();\n-      }\n-\n-      _Ordered_profile&\n-      operator=(_Ordered_profile&& __other) noexcept\n-      {\n-\t_M_swap(__other);\n-\t\n-\t__other._M_profile_destruct();\n-\t__other._M_profile_construct();\n-      }\n-#endif\n-\n-      ~_Ordered_profile()\n-      { _M_profile_destruct(); }\n-\n-      void\n-      _M_profile_construct() _GLIBCXX_NOEXCEPT\n-      { _M_map2umap_info = __profcxx_map2umap_construct(); }\n-\n-      void\n-      _M_profile_destruct() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_destruct(_M_map2umap_info);\n-\t_M_map2umap_info = 0;\n-      }\n-\n-      void\n-      _M_swap(_Ordered_profile& __other)\n-      { std::swap(_M_map2umap_info, __other._M_map2umap_info); }\n-\n-      __gnu_profile::__map2umap_info* _M_map2umap_info;\n-\n-    private:\n-      _Cont&\n-      _M_conjure()\n-      { return *static_cast<_Cont*>(this); }\n-    };\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "14fc9ddd2429ab917d3316836f95de96b963d497", "filename": "libstdc++-v3/include/profile/set", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,35 +0,0 @@\n-// Profiling set/multiset implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/set\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_SET\n-#define _GLIBCXX_PROFILE_SET 1\n-\n-#include <set>\n-#include <profile/set.h>\n-#include <profile/multiset.h>\n-\n-#endif"}, {"sha": "18f9c7440c4bb86219a41e385525b2a9f4e8f73b", "filename": "libstdc++-v3/include/profile/set.h", "status": "removed", "additions": 0, "deletions": 628, "changes": 628, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,628 +0,0 @@\n-// Profiling set implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/set.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_SET_H\n-#define _GLIBCXX_PROFILE_SET_H 1\n-\n-#include <profile/base.h>\n-#include <profile/ordered_base.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::set wrapper with performance instrumentation.\n-  template<typename _Key, typename _Compare = std::less<_Key>,\n-\t   typename _Allocator = std::allocator<_Key> >\n-    class set\n-    : public _GLIBCXX_STD_C::set<_Key,_Compare,_Allocator>,\n-      public _Ordered_profile<set<_Key, _Compare, _Allocator> >\n-    {\n-      typedef _GLIBCXX_STD_C::set<_Key, _Compare, _Allocator> _Base;\n-\n-      typedef typename _Base::iterator\t\t\t_Base_iterator;\n-      typedef typename _Base::const_iterator\t\t_Base_const_iterator;\n-\n-    public:\n-      // types:\n-      typedef _Key\t\t\t\t\tkey_type;\n-      typedef _Key\t\t\t\t\tvalue_type;\n-      typedef _Compare\t\t\t\t\tkey_compare;\n-      typedef _Compare\t\t\t\t\tvalue_compare;\n-      typedef typename _Base::reference\t\t\treference;\n-      typedef typename _Base::const_reference\t\tconst_reference;\n-\n-      typedef __iterator_tracker<_Base_iterator, set>\titerator;\n-      typedef __iterator_tracker<_Base_const_iterator,\n-\t\t\t\t set>\t\t\tconst_iterator;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>\tconst_reverse_iterator;\n-\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::difference_type\t\tdifference_type;\n-\n-      // 23.3.3.1 construct/copy/destroy:\n-#if __cplusplus < 201103L\n-      set()\n-      : _Base() { }\n-      set(const set& __x)\n-      : _Base(__x) { }\n-      ~set() { }\n-#else\n-      set() = default;\n-      set(const set&) = default;\n-      set(set&&) = default;\n-      ~set() = default;\n-#endif\n-\n-      explicit set(const _Compare& __comp,\n-\t\t   const _Allocator& __a = _Allocator())\n-      : _Base(__comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tset(_InputIterator __first, _InputIterator __last,\n-\t    const _Compare& __comp = _Compare(),\n-\t    const _Allocator& __a = _Allocator())\n-\t: _Base(__first, __last, __comp, __a) { }\n-\n-#if __cplusplus >= 201103L\n-      set(initializer_list<value_type> __l,\n-\t  const _Compare& __comp = _Compare(),\n-\t  const _Allocator& __a = _Allocator())\n-      : _Base(__l, __comp, __a) { }\n-\n-      explicit\n-      set(const _Allocator& __a)\n-      : _Base(__a) { }\n-\n-      set(const set& __x, const _Allocator& __a)\n-      : _Base(__x, __a) { }\n-\n-      set(set&& __x, const _Allocator& __a)\n-      noexcept( noexcept(_Base(std::move(__x), __a)) )\n-      : _Base(std::move(__x), __a) { }\n-\n-      set(initializer_list<value_type> __l, const _Allocator& __a)\n-      : _Base(__l, __a) { }\n-\n-      template<typename _InputIterator>\n-\tset(_InputIterator __first, _InputIterator __last,\n-\t    const _Allocator& __a)\n-\t: _Base(__first, __last, __a) { }\n-#endif\n-\n-      set(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus < 201103L\n-      set&\n-      operator=(const set& __x)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __x;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#else\n-      set&\n-      operator=(const set&) = default;\n-\n-      set&\n-      operator=(set&&) = default;\n-\n-      set&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#endif\n-\n-      // iterators\n-      iterator\n-      begin() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      begin() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      iterator\n-      end() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::end(), this); }\n-\n-      const_iterator\n-      end() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::end(), this); }\n-\n-#if __cplusplus >= 201103L\n-      const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(_Base::cbegin(), this); }\n-\n-      const_iterator\n-      cend() const noexcept\n-      { return const_iterator(_Base::cend(), this); }\n-#endif\n-\n-      reverse_iterator\n-      rbegin() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(end());\n-      }\n-\n-      const_reverse_iterator\n-      rbegin() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(end());\n-      }\n-\n-      reverse_iterator\n-      rend() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn reverse_iterator(begin());\n-      }\n-\n-      const_reverse_iterator\n-      rend() const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(begin());\n-      }\n-\n-#if __cplusplus >= 201103L\n-      const_reverse_iterator\n-      crbegin() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cend());\n-      }\n-\n-      const_reverse_iterator\n-      crend() const noexcept\n-      {\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_reverse_iterator(cbegin());\n-      }\n-#endif\n-\n-      void\n-      swap(set& __x)\n-      _GLIBCXX_NOEXCEPT_IF( noexcept(declval<_Base&>().swap(__x)) )\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-      // modifiers:\n-#if __cplusplus >= 201103L\n-      template<typename... _Args>\n-\tstd::pair<iterator, bool>\n-\templace(_Args&&... __args)\n-\t{\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\t  auto __base_ret = _Base::emplace(std::forward<_Args>(__args)...);\n-\t  return std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t\t__base_ret.second);\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __pos, _Args&&... __args)\n-\t{\n-\t  auto size_before = this->size();\n-\t  auto __res\n-\t    = _Base::emplace_hint(__pos.base(), std::forward<_Args>(__args)...);\n-\t  __profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\t  return iterator(__res, this);\n-\t}\n-#endif\n-\n-      std::pair<iterator, bool>\n-      insert(const value_type& __x)\n-      {\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\tstd::pair<_Base_iterator, bool> __base_ret = _Base::insert(__x);\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      __base_ret.second);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      std::pair<iterator, bool>\n-      insert(value_type&& __x)\n-      {\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info, this->size(), 1);\n-\tstd::pair<_Base_iterator, bool> __base_ret\n-\t  = _Base::insert(std::move(__x));\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      __base_ret.second);\n-      }\n-#endif\n-\n-      iterator\n-      insert(const_iterator __pos, const value_type& __x)\n-      {\n-\tsize_type size_before = this->size();\n-\t_Base_iterator __res = _Base::insert(__pos.base(), __x);\n-\t__profcxx_map2umap_insert(this->_M_map2umap_info,\n-\t\tsize_before, _M_hint_used(__pos.base(), __res) ? 0 : 1);\n-\treturn iterator(__res, this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(const_iterator __pos, value_type&& __x)\n-      { return iterator(_Base::insert(__pos.base(), std::move(__x)), this); }\n-#endif\n-\n-      template<typename _InputIterator>\n-\tvoid\n-\tinsert(_InputIterator __first, _InputIterator __last)\n-\t{\n-\t  for (; __first != __last; ++__first)\n-\t    insert(*__first);\n-\t}\n-\n-#if __cplusplus >= 201103L\n-      void\n-      insert(initializer_list<value_type> __l)\n-      { insert(__l.begin(), __l.end()); }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn iterator(_Base::erase(__pos.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __pos)\n-      {\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\t_Base::erase(__pos.base());\n-      }\n-#endif\n-\n-      size_type\n-      erase(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_erase(this->_M_map2umap_info, this->size(), 1);\n-\treturn _Base::erase(__x);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      erase(const_iterator __first, const_iterator __last)\n-      {\n-\tif (__first != __last)\n-\t  {\n-\t    iterator __ret;\n-\t    for (; __first != __last;)\n-\t      __ret = erase(__first++);\n-\t    return __ret;\n-\t  }\n-\n-\treturn iterator(_Base::erase(__first.base(), __last.base()), this);\n-      }\n-#else\n-      void\n-      erase(iterator __first, iterator __last)\n-      {\n-\tfor (; __first != __last;)\n-\t     erase(__first++);\n-      }\n-#endif\n-\n-      void\n-      clear() _GLIBCXX_NOEXCEPT\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      size_type\n-      count(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn _Base::count(__x);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tsize_type\n-\tcount(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return _Base::count(__x);\n-\t}\n-#endif\n-\n-      // set operations:\n-      iterator\n-      find(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn iterator(_Base::find(__x), this);\n-      }\n-\n-      const_iterator\n-      find(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\treturn const_iterator(_Base::find(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tfind(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tfind(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  return { _Base::find(__x), this };\n-\t}\n-#endif\n-\n-      iterator\n-      lower_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-      const_iterator\n-      lower_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::lower_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tlower_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tlower_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::lower_bound(__x), this };\n-\t}\n-#endif\n-\n-      iterator\n-      upper_bound(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-      const_iterator\n-      upper_bound(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t__profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\treturn const_iterator(_Base::upper_bound(__x), this);\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\titerator\n-\tupper_bound(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tconst_iterator\n-\tupper_bound(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  __profcxx_map2umap_invalidate(this->_M_map2umap_info);\n-\t  return { _Base::upper_bound(__x), this };\n-\t}\n-#endif\n-\n-      std::pair<iterator, iterator>\n-      equal_range(const key_type& __x)\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_iterator, _Base_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(iterator(__base_ret.first, this),\n-\t\t\t      iterator(__base_ret.second, this));\n-      }\n-\n-      std::pair<const_iterator, const_iterator>\n-      equal_range(const key_type& __x) const\n-      {\n-\t__profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\tstd::pair<_Base_const_iterator, _Base_const_iterator> __base_ret\n-\t  = _Base::equal_range(__x);\n-\treturn std::make_pair(const_iterator(__base_ret.first, this),\n-\t\t\t      const_iterator(__base_ret.second, this));\n-      }\n-\n-#if __cplusplus > 201103L\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<iterator, iterator>\n-\tequal_range(const _Kt& __x)\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-\n-      template<typename _Kt,\n-\t       typename _Req =\n-\t\t typename __has_is_transparent<_Compare, _Kt>::type>\n-\tstd::pair<const_iterator, const_iterator>\n-\tequal_range(const _Kt& __x) const\n-\t{\n-\t  __profcxx_map2umap_find(this->_M_map2umap_info, this->size());\n-\t  auto __res = _Base::equal_range(__x);\n-\t  return { { __res.first, this }, { __res.second, this } };\n-\t}\n-#endif\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-    private:\n-      /** If hint is used we consider that the map and unordered_map\n-       * operations have equivalent insertion cost so we do not update metrics\n-       * about it.\n-       * Note that to find out if hint has been used is libstdc++\n-       * implementation dependent.\n-       */\n-      bool\n-      _M_hint_used(_Base_const_iterator __hint, _Base_iterator __res)\n-      {\n-\treturn (__hint == __res\n-\t\t|| (__hint == _M_base().end() && ++__res == _M_base().end())\n-\t\t|| (__hint != _M_base().end() && (++__hint == __res\n-\t\t\t\t\t\t  || ++__res == --__hint)));\n-      }\n-\n-      template<typename _K1, typename _C1, typename _A1>\n-\tfriend bool\n-\toperator==(const set<_K1, _C1, _A1>&, const set<_K1, _C1, _A1>&);\n-\n-      template<typename _K1, typename _C1, typename _A1>\n-\tfriend bool\n-\toperator<(const set<_K1, _C1, _A1>&, const set<_K1, _C1, _A1>&);\n-    };\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator==(const set<_Key, _Compare, _Allocator>& __lhs,\n-\t       const set<_Key, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() == __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<(const set<_Key, _Compare, _Allocator>& __lhs,\n-\t      const set<_Key, _Compare, _Allocator>& __rhs)\n-    {\n-      __profcxx_map2umap_invalidate(__lhs._M_map2umap_info);\n-      __profcxx_map2umap_invalidate(__rhs._M_map2umap_info);\n-      return __lhs._M_base() < __rhs._M_base();\n-    }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator!=(const set<_Key, _Compare, _Allocator>& __lhs,\n-\t       const set<_Key, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs == __rhs); }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator<=(const set<_Key, _Compare, _Allocator>& __lhs,\n-\t       const set<_Key, _Compare, _Allocator>& __rhs)\n-    { return !(__rhs < __lhs); }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>=(const set<_Key, _Compare, _Allocator>& __lhs,\n-\t       const set<_Key, _Compare, _Allocator>& __rhs)\n-    { return !(__lhs < __rhs); }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    inline bool\n-    operator>(const set<_Key, _Compare, _Allocator>& __lhs,\n-\t      const set<_Key, _Compare, _Allocator>& __rhs)\n-    { return __rhs < __lhs; }\n-\n-  template<typename _Key, typename _Compare, typename _Allocator>\n-    void\n-    swap(set<_Key, _Compare, _Allocator>& __x,\n-\t set<_Key, _Compare, _Allocator>& __y)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__x.swap(__y)))\n-    { return __x.swap(__y); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "200f4e047fe6868632626c8edd4f638beb32c63c", "filename": "libstdc++-v3/include/profile/unordered_base.h", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_base.h?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,308 +0,0 @@\n-// Profiling unordered containers implementation details -*- C++ -*-\n-\n-// Copyright (C) 2013-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/unordered_base.h\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_UNORDERED\n-#define _GLIBCXX_PROFILE_UNORDERED 1\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  template<typename _UnorderedCont,\n-\t   typename _Value, bool _Cache_hash_code>\n-    struct _Bucket_index_helper;\n-\n-  template<typename _UnorderedCont, typename _Value>\n-    struct _Bucket_index_helper<_UnorderedCont, _Value, true>\n-    {\n-      static std::size_t\n-      bucket(const _UnorderedCont& __uc,\n-\t     const __detail::_Hash_node<_Value, true>* __node)\n-      { return __node->_M_hash_code % __uc.bucket_count(); }\n-    };\n-\n-  template<typename _UnorderedCont, typename _Value>\n-    struct _Bucket_index_helper<_UnorderedCont, _Value, false>\n-    {\n-      static std::size_t\n-      bucket(const _UnorderedCont& __uc,\n-\t     const __detail::_Hash_node<_Value, false>* __node)\n-      { return __uc.bucket(__node->_M_v()); }\n-    };\n-\n-  template<typename _UnorderedCont, typename _Key, typename _Mapped>\n-    struct _Bucket_index_helper<_UnorderedCont,\n-\t\t\t\tstd::pair<const _Key, _Mapped>, false>\n-    {\n-      typedef std::pair<const _Key, _Mapped> _Value;\n-\n-      static std::size_t\n-      bucket(const _UnorderedCont& __uc,\n-\t     const __detail::_Hash_node<_Value, false>* __node)\n-      { return __uc.bucket(__node->_M_v().first); }\n-    };\n-\n-  template<typename _UnorderedCont, typename _Value, bool _Cache_hash_code>\n-    std::size_t\n-    __get_bucket_index(const _UnorderedCont& __uc,\n-\t\t       const __detail::_Hash_node<_Value, _Cache_hash_code>* __node)\n-    {\n-      using __bucket_index_helper\n-\t= _Bucket_index_helper<_UnorderedCont, _Value, _Cache_hash_code>;\n-      return __bucket_index_helper::bucket(__uc, __node);\n-    }\n-\n-  template<typename _UnorderedCont,\n-\t   typename _Value, bool _Cache_hash_code>\n-    struct _Equal_helper;\n-\n-  template<typename _UnorderedCont, typename _Value>\n-    struct _Equal_helper<_UnorderedCont, _Value, true>\n-    {\n-      static std::size_t\n-      are_equal(const _UnorderedCont& __uc,\n-\t\tconst __detail::_Hash_node<_Value, true>* __lhs,\n-\t\tconst __detail::_Hash_node<_Value, true>* __rhs)\n-      {\n-\treturn __lhs->_M_hash_code == __rhs->_M_hash_code\n-\t  && __uc.key_eq()(__lhs->_M_v(), __rhs->_M_v());\n-      }\n-    };\n-\n-  template<typename _UnorderedCont,\n-\t   typename _Value>\n-    struct _Equal_helper<_UnorderedCont, _Value, false>\n-    {\n-      static std::size_t\n-      are_equal(const _UnorderedCont& __uc,\n-\t\tconst __detail::_Hash_node<_Value, false>* __lhs,\n-\t\tconst __detail::_Hash_node<_Value, false>* __rhs)\n-      { return __uc.key_eq()(__lhs->_M_v(), __rhs->_M_v()); }\n-    };\n-\n-  template<typename _UnorderedCont,\n-\t   typename _Key, typename _Mapped>\n-    struct _Equal_helper<_UnorderedCont, std::pair<const _Key, _Mapped>, true>\n-    {\n-      typedef std::pair<const _Key, _Mapped> _Value;\n-\n-      static std::size_t\n-      are_equal(const _UnorderedCont& __uc,\n-\t\tconst __detail::_Hash_node<_Value, true>* __lhs,\n-\t\tconst __detail::_Hash_node<_Value, true>* __rhs)\n-      {\n-\treturn __lhs->_M_hash_code == __rhs->_M_hash_code\n-\t  && __uc.key_eq()(__lhs->_M_v().first, __rhs->_M_v().first);\n-      }\n-    };\n-\n-  template<typename _UnorderedCont,\n-\t   typename _Key, typename _Mapped>\n-    struct _Equal_helper<_UnorderedCont, std::pair<const _Key, _Mapped>, false>\n-    {\n-      typedef std::pair<const _Key, _Mapped> _Value;\n-\n-      static std::size_t\n-      are_equal(const _UnorderedCont& __uc,\n-\t\tconst __detail::_Hash_node<_Value, false>* __lhs,\n-\t\tconst __detail::_Hash_node<_Value, false>* __rhs)\n-      { return __uc.key_eq()(__lhs->_M_v().first, __rhs->_M_v().first); }\n-    };\n-\n-  template<typename _UnorderedCont, typename _Value, bool _Cache_hash_code>\n-    bool\n-    __are_equal(const _UnorderedCont& __uc,\n-\t\tconst __detail::_Hash_node<_Value, _Cache_hash_code>* __lhs,\n-\t\tconst __detail::_Hash_node<_Value, _Cache_hash_code>* __rhs)\n-  {\n-    using __equal_helper\n-      = _Equal_helper<_UnorderedCont, _Value, _Cache_hash_code>;\n-    return __equal_helper::are_equal(__uc, __lhs, __rhs);\n-  }\n-\n-  template<typename _UnorderedCont, bool _Unique_keys>\n-    class _Unordered_profile\n-    {\n-      _UnorderedCont&\n-      _M_conjure()\n-      { return *(static_cast<_UnorderedCont*>(this)); }\n-\n-      using __unique_keys = std::integral_constant<bool, _Unique_keys>;\n-\n-    protected:\n-      _Unordered_profile() noexcept\n-      { _M_profile_construct(); }\n-\n-      _Unordered_profile(const _Unordered_profile&) noexcept\n-\t: _Unordered_profile() { }\n-\n-      _Unordered_profile(_Unordered_profile&& __other) noexcept\n-\t: _Unordered_profile()\n-      { _M_swap(__other); }\n-\n-      ~_Unordered_profile()\n-      { _M_profile_destruct(); }\n-\n-      _Unordered_profile&\n-      operator=(const _Unordered_profile&) noexcept\n-      {\n-\t// Assignment just reset profiling.\n-\t_M_profile_destruct();\n-\t_M_profile_construct();\n-      }\n-\n-      _Unordered_profile&\n-      operator=(_Unordered_profile&& __other) noexcept\n-      {\n-\t// Take profiling of the moved instance...\n-\t_M_swap(__other);\n-\n-\t// ...and then reset other instance profiling.\n-\t__other._M_profile_destruct();\n-\t__other._M_profile_construct();\n-      }\n-\n-      void\n-      _M_profile_construct() noexcept\n-      {\n-\tauto& __uc = _M_conjure();\n-\t_M_size_info = __profcxx_hashtable_size_construct(__uc.bucket_count());\n-\t_M_hashfunc_info = __profcxx_hash_func_construct();\n-      }\n-\n-      void\n-      _M_profile_destruct() noexcept\n-      {\n-\tauto& __uc = _M_conjure();\n-\t__profcxx_hashtable_size_destruct(_M_size_info,\n-\t\t\t\t\t  __uc.bucket_count(), __uc.size());\n-\t_M_size_info = 0;\n-\n-\tif (!_M_hashfunc_info)\n-\t  return;\n-\n-\t_M_profile_destruct(__unique_keys());\n-\t_M_hashfunc_info = 0;\n-      }\n-\n-      void\n-      _M_swap(_Unordered_profile& __other) noexcept\n-      {\n-\tstd::swap(_M_size_info, __other._M_size_info);\n-\tstd::swap(_M_hashfunc_info, __other._M_hashfunc_info);\n-      }\n-\n-      void\n-      _M_profile_resize(std::size_t __old_size)\n-      {\n-\tauto __new_size = _M_conjure().bucket_count();\n-\tif (__old_size != __new_size)\n-\t  __profcxx_hashtable_size_resize(_M_size_info, __old_size, __new_size);\n-      }\n-\n-      __gnu_profile::__container_size_info* _M_size_info;\n-      __gnu_profile::__hashfunc_info* _M_hashfunc_info;\n-\n-    private:\n-      void\n-      _M_profile_destruct(std::true_type);\n-\n-      void\n-      _M_profile_destruct(std::false_type);\n-    };\n-\n-  template<typename _UnorderedCont, bool _Unique_keys>\n-    void\n-    _Unordered_profile<_UnorderedCont, _Unique_keys>::\n-    _M_profile_destruct(std::true_type)\n-    {\n-      auto& __uc = _M_conjure();\n-      std::size_t __hops = 0, __lc = 0, __chain = 0;\n-      auto __it = __uc.begin();\n-      while (__it != __uc.end())\n-\t{\n-\t  auto __bkt = __get_bucket_index(__uc, __it._M_cur);\n-\t  auto __lit = __uc.begin(__bkt);\n-\t  auto __lend = __uc.end(__bkt);\n-\t  for (++__it, ++__lit; __lit != __lend; ++__it, ++__lit)\n-\t    ++__chain;\n-\n-\t  if (__chain)\n-\t    {\n-\t      ++__chain;\n-\t      __lc = __lc > __chain ? __lc : __chain;\n-\t      __hops += __chain * (__chain - 1) / 2;\n-\t      __chain = 0;\n-\t    }\n-\t}\n-\n-      __profcxx_hash_func_destruct(_M_hashfunc_info,\n-\t\t\t\t   __lc, __uc.size(), __hops);\n-    }\n-\n-  template<typename _UnorderedCont, bool _Unique_keys>\n-    void\n-    _Unordered_profile<_UnorderedCont, _Unique_keys>::\n-    _M_profile_destruct(std::false_type)\n-    {\n-      auto& __uc = _M_conjure();\n-      std::size_t __hops = 0, __lc = 0, __chain = 0, __unique_size = 0;\n-      auto __it = __uc.begin();\n-      while (__it != __uc.end())\n-\t{\n-\t  auto __bkt = __get_bucket_index(__uc, __it._M_cur);\n-\t  auto __lit = __uc.begin(__bkt);\n-\t  auto __lend = __uc.end(__bkt);\n-\t  auto __pit = __it;\n-\t  ++__unique_size;\n-\t  for (++__it, ++__lit; __lit != __lend; ++__it, ++__lit)\n-\t    {\n-\t      if (!__are_equal(__uc, __pit._M_cur, __it._M_cur))\n-\t\t{\n-\t\t  ++__chain;\n-\t\t  ++__unique_size;\n-\t\t  __pit = __it;\n-\t\t}\n-\t    }\n-\n-\t  if (__chain)\n-\t    {\n-\t      ++__chain;\n-\t      __lc = __lc > __chain ? __lc : __chain;\n-\t      __hops += __chain * (__chain - 1) / 2;\n-\t      __chain = 0;\n-\t    }\n-\t}\n-\n-      __profcxx_hash_func_destruct(_M_hashfunc_info,\n-\t\t\t\t   __lc, __unique_size, __hops);\n-    }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#endif"}, {"sha": "0e54915a0662f6be32918a816bd027f9f7d8c731", "filename": "libstdc++-v3/include/profile/unordered_map", "status": "removed", "additions": 0, "deletions": 586, "changes": 586, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,586 +0,0 @@\n-// Profiling unordered_map/unordered_multimap implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/unordered_map\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_UNORDERED_MAP\n-#define _GLIBCXX_PROFILE_UNORDERED_MAP 1\n-\n-#if __cplusplus < 201103L\n-# include <bits/c++0x_warning.h>\n-#else\n-# include <unordered_map>\n-\n-#include <profile/base.h>\n-#include <profile/unordered_base.h>\n-\n-#define _GLIBCXX_BASE unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>\n-#define _GLIBCXX_STD_BASE _GLIBCXX_STD_C::_GLIBCXX_BASE\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /// Class std::unordered_map wrapper with performance instrumentation.\n-  template<typename _Key, typename _Tp,\n-\t   typename _Hash = std::hash<_Key>,\n-\t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >\n-    class unordered_map\n-    : public _GLIBCXX_STD_BASE,\n-      public _Unordered_profile<unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>,\n-\t\t\t\ttrue>\n-    {\n-      typedef typename _GLIBCXX_STD_BASE _Base;\n-\n-      _Base&\n-      _M_base() noexcept\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const noexcept\t{ return *this; }\n-\n-    public:\n-      typedef typename _Base::size_type\t\tsize_type;\n-      typedef typename _Base::hasher\t\thasher;\n-      typedef typename _Base::key_equal\t\tkey_equal;\n-      typedef typename _Base::allocator_type\tallocator_type;\n-      typedef typename _Base::key_type\t\tkey_type;\n-      typedef typename _Base::value_type\tvalue_type;\n-      typedef typename _Base::difference_type\tdifference_type;\n-      typedef typename _Base::reference\t\treference;\n-      typedef typename _Base::const_reference\tconst_reference;\n-      typedef typename _Base::mapped_type\tmapped_type;\n-\n-      typedef typename _Base::iterator\t\titerator;\n-      typedef typename _Base::const_iterator\tconst_iterator;\n-\n-      unordered_map() = default;\n-\n-      explicit\n-      unordered_map(size_type __n,\n-\t\t    const hasher& __hf = hasher(),\n-\t\t    const key_equal& __eql = key_equal(),\n-\t\t    const allocator_type& __a = allocator_type())\n-      : _Base(__n, __hf, __eql, __a) { }\n-\n-      template<typename _InputIterator>\n-\tunordered_map(_InputIterator __f, _InputIterator __l,\n-\t\t      size_type __n = 0,\n-\t\t      const hasher& __hf = hasher(),\n-\t\t      const key_equal& __eql = key_equal(),\n-\t\t      const allocator_type& __a = allocator_type())\n-\t: _Base(__f, __l, __n, __hf, __eql, __a) { }\n-\n-      unordered_map(const unordered_map&) = default;\n-\n-      unordered_map(const _Base& __x)\n-      : _Base(__x) { }\n-\n-      unordered_map(unordered_map&&) = default;\n-\n-      explicit\n-      unordered_map(const allocator_type& __a)\n-      : _Base(__a) { }\n-\n-      unordered_map(const unordered_map& __umap,\n-\t\t    const allocator_type& __a)\n-      : _Base(__umap, __a) { }\n-\n-      unordered_map(unordered_map&& __umap,\n-\t\t    const allocator_type& __a)\n-      : _Base(std::move(__umap._M_base()), __a) { }\n-\n-      unordered_map(initializer_list<value_type> __l,\n-\t\t    size_type __n = 0,\n-\t\t    const hasher& __hf = hasher(),\n-\t\t    const key_equal& __eql = key_equal(),\n-\t\t    const allocator_type& __a = allocator_type())\n-      : _Base(__l, __n, __hf, __eql, __a) { }\n-\n-      unordered_map(size_type __n, const allocator_type& __a)\n-      : unordered_map(__n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_map(size_type __n, const hasher& __hf,\n-\t\t    const allocator_type& __a)\n-      : unordered_map(__n, __hf, key_equal(), __a)\n-      { }\n-\n-      template<typename _InputIterator>\n-\tunordered_map(_InputIterator __first, _InputIterator __last,\n-\t\t      size_type __n,\n-\t\t      const allocator_type& __a)\n-\t  : unordered_map(__first, __last, __n, hasher(), key_equal(), __a)\n-\t{ }\n-\n-      template<typename _InputIterator>\n-\tunordered_map(_InputIterator __first, _InputIterator __last,\n-\t\t      size_type __n, const hasher& __hf,\n-\t\t      const allocator_type& __a)\n-\t  : unordered_map(__first, __last, __n, __hf, key_equal(), __a)\n-\t{ }\n-\n-      unordered_map(initializer_list<value_type> __l,\n-\t\t    size_type __n,\n-\t\t    const allocator_type& __a)\n-\t: unordered_map(__l, __n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_map(initializer_list<value_type> __l,\n-\t\t    size_type __n, const hasher& __hf,\n-\t\t    const allocator_type& __a)\n-\t: unordered_map(__l, __n, __hf, key_equal(), __a)\n-      { }\n-\n-      unordered_map&\n-      operator=(const unordered_map&) = default;\n-\n-      unordered_map&\n-      operator=(unordered_map&&) = default;\n-\n-      unordered_map&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-\n-      void\n-      clear() noexcept\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      template<typename... _Args>\n-\tstd::pair<iterator, bool>\n-\templace(_Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  std::pair<iterator, bool> __res\n-\t    = _Base::emplace(std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __it, _Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res\n-\t    = _Base::emplace_hint(__it, std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      void\n-      insert(std::initializer_list<value_type> __l)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::insert(__l);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-\n-      std::pair<iterator, bool>\n-      insert(const value_type& __obj)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\tstd::pair<iterator, bool> __res = _Base::insert(__obj);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(const_iterator __iter, const value_type& __v)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__iter, __v);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\tstd::pair<iterator, bool>\n-\tinsert(_Pair&& __obj)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  std::pair<iterator, bool> __res\n-\t    = _Base::insert(std::forward<_Pair>(__obj));\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\titerator\n-\tinsert(const_iterator __iter, _Pair&& __v)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res = _Base::insert(__iter, std::forward<_Pair>(__v));\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename _InputIter>\n-\tvoid\n-\tinsert(_InputIter __first, _InputIter __last)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  _Base::insert(__first, __last);\n-\t  this->_M_profile_resize(__old_size);\n-\t}\n-\n-      // operator[]\n-      mapped_type&\n-      operator[](const _Key& __k)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\tmapped_type& __res = _M_base()[__k];\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      mapped_type&\n-      operator[](_Key&& __k)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\tmapped_type& __res = _M_base()[std::move(__k)];\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      void\n-      swap(unordered_map& __x)\n-      noexcept( noexcept(__x._M_base().swap(__x)) )\n-      {\n-\t_Base::swap(__x._M_base());\n-\tthis->_M_swap(__x);\n-      }\n-\n-      void rehash(size_type __n)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::rehash(__n);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-  };\n-\n-  template<typename _Key, typename _Tp, typename _Hash,\n-\t   typename _Pred, typename _Alloc>\n-    inline void\n-    swap(unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n-\t unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n-    noexcept(noexcept(__x.swap(__y)))\n-    { __x.swap(__y); }\n-\n-  template<typename _Key, typename _Tp, typename _Hash,\n-\t   typename _Pred, typename _Alloc>\n-    inline bool\n-    operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n-    { return static_cast<const _GLIBCXX_STD_BASE&>(__x) == __y; }\n-\n-  template<typename _Key, typename _Tp, typename _Hash,\n-\t   typename _Pred, typename _Alloc>\n-    inline bool\n-    operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n-    { return !(__x == __y); }\n-\n-#undef _GLIBCXX_BASE\n-#undef _GLIBCXX_STD_BASE\n-#define _GLIBCXX_BASE unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>\n-#define _GLIBCXX_STD_BASE _GLIBCXX_STD_C::_GLIBCXX_BASE\n-\n-  /// Class std::unordered_multimap wrapper with performance instrumentation.\n-  template<typename _Key, typename _Tp,\n-\t   typename _Hash = std::hash<_Key>,\n-\t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >\n-    class unordered_multimap\n-    : public _GLIBCXX_STD_BASE,\n-      public _Unordered_profile<unordered_multimap<_Key, _Tp,\n-\t\t\t\t\t\t   _Hash, _Pred, _Alloc>,\n-\t\t\t\tfalse>\n-    {\n-      typedef typename _GLIBCXX_STD_BASE _Base;\n-\n-      _Base&\n-      _M_base() noexcept\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const noexcept\t{ return *this; }\n-\n-    public:\n-      typedef typename _Base::size_type\t\tsize_type;\n-      typedef typename _Base::hasher\t\thasher;\n-      typedef typename _Base::key_equal\t\tkey_equal;\n-      typedef typename _Base::allocator_type\tallocator_type;\n-      typedef typename _Base::key_type\t\tkey_type;\n-      typedef typename _Base::value_type\tvalue_type;\n-      typedef typename _Base::difference_type\tdifference_type;\n-      typedef typename _Base::reference\t\treference;\n-      typedef typename _Base::const_reference\tconst_reference;\n-\n-      typedef typename _Base::iterator\t\titerator;\n-      typedef typename _Base::const_iterator\tconst_iterator;\n-\n-      unordered_multimap() = default;\n-\n-      explicit\n-      unordered_multimap(size_type __n,\n-\t\t\t const hasher& __hf = hasher(),\n-\t\t\t const key_equal& __eql = key_equal(),\n-\t\t\t const allocator_type& __a = allocator_type())\n-      : _Base(__n, __hf, __eql, __a) { }\n-\n-      template<typename _InputIterator>\n-\tunordered_multimap(_InputIterator __f, _InputIterator __l,\n-\t\t\t   size_type __n = 0,\n-\t\t\t   const hasher& __hf = hasher(),\n-\t\t\t   const key_equal& __eql = key_equal(),\n-\t\t\t   const allocator_type& __a = allocator_type())\n-\t: _Base(__f, __l, __n, __hf, __eql, __a) { }\n-\n-      unordered_multimap(const unordered_multimap&) = default;\n-\n-      unordered_multimap(const _Base& __x)\n-      : _Base(__x) { }\n-\n-      unordered_multimap(unordered_multimap&&) = default;\n-\n-      explicit\n-      unordered_multimap(const allocator_type& __a)\n-      : _Base(__a) { }\n-\n-      unordered_multimap(const unordered_multimap& __ummap,\n-\t\t\t const allocator_type& __a)\n-      : _Base(__ummap._M_base(), __a) { }\n-\n-      unordered_multimap(unordered_multimap&& __ummap,\n-\t\t\t const allocator_type& __a)\n-      : _Base(std::move(__ummap._M_base()), __a) { }\n-\n-      unordered_multimap(initializer_list<value_type> __l,\n-\t\t\t size_type __n = 0,\n-\t\t\t const hasher& __hf = hasher(),\n-\t\t\t const key_equal& __eql = key_equal(),\n-\t\t\t const allocator_type& __a = allocator_type())\n-      : _Base(__l, __n, __hf, __eql, __a) { }\n-\n-      unordered_multimap(size_type __n, const allocator_type& __a)\n-      : unordered_multimap(__n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_multimap(size_type __n, const hasher& __hf,\n-\t\t\t const allocator_type& __a)\n-      : unordered_multimap(__n, __hf, key_equal(), __a)\n-      { }\n-\n-      template<typename _InputIterator>\n-\tunordered_multimap(_InputIterator __first, _InputIterator __last,\n-\t\t\t   size_type __n,\n-\t\t\t   const allocator_type& __a)\n-\t  : unordered_multimap(__first, __last, __n, hasher(), key_equal(), __a)\n-\t{ }\n-\n-      template<typename _InputIterator>\n-\tunordered_multimap(_InputIterator __first, _InputIterator __last,\n-\t\t\t   size_type __n, const hasher& __hf,\n-\t\t\t   const allocator_type& __a)\n-\t  : unordered_multimap(__first, __last, __n, __hf, key_equal(), __a)\n-\t{ }\n-\n-      unordered_multimap(initializer_list<value_type> __l,\n-\t\t\t size_type __n,\n-\t\t\t const allocator_type& __a)\n-\t: unordered_multimap(__l, __n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_multimap(initializer_list<value_type> __l,\n-\t\t\t size_type __n, const hasher& __hf,\n-\t\t\t const allocator_type& __a)\n-\t: unordered_multimap(__l, __n, __hf, key_equal(), __a)\n-      { }\n-\n-      unordered_multimap&\n-      operator=(const unordered_multimap&) = default;\n-\n-      unordered_multimap&\n-      operator=(unordered_multimap&&) = default;\n-\n-      unordered_multimap&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-\n-      void\n-      clear() noexcept\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      template<typename... _Args>\n-\titerator\n-\templace(_Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res\n-\t    = _Base::emplace(std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __it, _Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res\n-\t    = _Base::emplace_hint(__it, std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      void\n-      insert(std::initializer_list<value_type> __l)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::insert(__l);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-\n-      iterator\n-      insert(const value_type& __obj)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__obj);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(const_iterator __iter, const value_type& __v)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__iter, __v);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\titerator\n-\tinsert(_Pair&& __obj)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res = _Base::insert(std::forward<_Pair>(__obj));\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename _Pair, typename = typename\n-\t       std::enable_if<std::is_constructible<value_type,\n-\t\t\t\t\t\t    _Pair&&>::value>::type>\n-\titerator\n-\tinsert(const_iterator __iter, _Pair&& __v)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res = _Base::insert(__iter, std::forward<_Pair>(__v));\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename _InputIter>\n-\tvoid\n-\tinsert(_InputIter __first, _InputIter __last)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  _Base::insert(__first, __last);\n-\t  this->_M_profile_resize(__old_size);\n-\t}\n-\n-      void\n-      swap(unordered_multimap& __x)\n-      noexcept( noexcept(__x._M_base().swap(__x)) )\n-      {\n-\t_Base::swap(__x._M_base());\n-\tthis->_M_swap(__x);\n-      }\n-\n-      void\n-      rehash(size_type __n)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::rehash(__n);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-  };\n-\n-  template<typename _Key, typename _Tp, typename _Hash,\n-\t   typename _Pred, typename _Alloc>\n-    inline void\n-    swap(unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n-\t unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n-    noexcept(noexcept(__x.swap(__y)))\n-    { __x.swap(__y); }\n-\n-  template<typename _Key, typename _Tp, typename _Hash,\n-\t   typename _Pred, typename _Alloc>\n-    inline bool\n-    operator==(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n-    { return static_cast<const _GLIBCXX_STD_BASE&>(__x) == __y; }\n-\n-  template<typename _Key, typename _Tp, typename _Hash,\n-\t   typename _Pred, typename _Alloc>\n-    inline bool\n-    operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n-    { return !(__x == __y); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#undef _GLIBCXX_BASE\n-#undef _GLIBCXX_STD_BASE\n-\n-#endif // C++11\n-\n-#endif"}, {"sha": "2e410d07f2bbb9f4aadabb03c07094fe9c7e435c", "filename": "libstdc++-v3/include/profile/unordered_set", "status": "removed", "additions": 0, "deletions": 561, "changes": 561, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,561 +0,0 @@\n-// Profiling unordered_set/unordered_multiset implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/unordered_set\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_UNORDERED_SET\n-#define _GLIBCXX_PROFILE_UNORDERED_SET 1\n-\n-#if __cplusplus < 201103L\n-# include <bits/c++0x_warning.h>\n-#else\n-# include <unordered_set>\n-\n-#include <profile/base.h>\n-#include <profile/unordered_base.h>\n-\n-#define _GLIBCXX_BASE unordered_set<_Key, _Hash, _Pred, _Alloc>\n-#define _GLIBCXX_STD_BASE _GLIBCXX_STD_C::_GLIBCXX_BASE\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  /** @brief Unordered_set wrapper with performance instrumentation.  */\n-  template<typename _Key,\n-\t   typename _Hash = std::hash<_Key>,\n-\t   typename _Pred = std::equal_to<_Key>,\n-\t   typename _Alloc =  std::allocator<_Key> >\n-    class unordered_set\n-    : public _GLIBCXX_STD_BASE,\n-      public _Unordered_profile<unordered_set<_Key, _Hash, _Pred, _Alloc>,\n-\t\t\t\ttrue>\n-    {\n-      typedef _GLIBCXX_STD_BASE _Base;\n-\n-      _Base&\n-      _M_base() noexcept       { return *this; }\n-\n-      const _Base&\n-      _M_base() const noexcept { return *this; }\n-\n-    public:\n-      typedef typename _Base::size_type\t\tsize_type;\n-      typedef typename _Base::hasher\t\thasher;\n-      typedef typename _Base::key_equal\t\tkey_equal;\n-      typedef typename _Base::allocator_type\tallocator_type;\n-      typedef typename _Base::key_type\t\tkey_type;\n-      typedef typename _Base::value_type\tvalue_type;\n-      typedef typename _Base::difference_type\tdifference_type;\n-      typedef typename _Base::reference\t\treference;\n-      typedef typename _Base::const_reference\tconst_reference;\n-\n-      typedef typename _Base::iterator\t\titerator;\n-      typedef typename _Base::const_iterator\tconst_iterator;\n-\n-      unordered_set() = default;\n-\n-      explicit\n-      unordered_set(size_type __n,\n-\t\t    const hasher& __hf = hasher(),\n-\t\t    const key_equal& __eql = key_equal(),\n-\t\t    const allocator_type& __a = allocator_type())\n-\t: _Base(__n, __hf, __eql, __a)\n-      { }\n-\n-      template<typename _InputIterator>\n-\tunordered_set(_InputIterator __f, _InputIterator __l,\n-\t\t      size_type __n = 0,\n-\t\t      const hasher& __hf = hasher(),\n-\t\t      const key_equal& __eql = key_equal(),\n-\t\t      const allocator_type& __a = allocator_type())\n-\t  : _Base(__f, __l, __n, __hf, __eql, __a)\n-      { }\n-\n-      unordered_set(const unordered_set&) = default;\n-\n-      unordered_set(const _Base& __x)\n-\t: _Base(__x)\n-      { }\n-\n-      unordered_set(unordered_set&&) = default;\n-\n-      explicit\n-      unordered_set(const allocator_type& __a)\n-\t: _Base(__a)\n-      { }\n-\n-      unordered_set(const unordered_set& __uset,\n-\t\t    const allocator_type& __a)\n-\t: _Base(__uset._M_base(), __a)\n-      { }\n-\n-      unordered_set(unordered_set&& __uset,\n-\t\t    const allocator_type& __a)\n-\t: _Base(std::move(__uset._M_base()), __a)\n-      { }\n-\n-      unordered_set(initializer_list<value_type> __l,\n-\t\t    size_type __n = 0,\n-\t\t    const hasher& __hf = hasher(),\n-\t\t    const key_equal& __eql = key_equal(),\n-\t\t    const allocator_type& __a = allocator_type())\n-      : _Base(__l, __n, __hf, __eql, __a)\n-      { }\n-\n-      unordered_set(size_type __n, const allocator_type& __a)\n-\t: unordered_set(__n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_set(size_type __n, const hasher& __hf,\n-\t\t    const allocator_type& __a)\n-\t: unordered_set(__n, __hf, key_equal(), __a)\n-      { }\n-\n-      template<typename _InputIterator>\n-\tunordered_set(_InputIterator __first, _InputIterator __last,\n-\t\t      size_type __n,\n-\t\t      const allocator_type& __a)\n-\t  : unordered_set(__first, __last, __n, hasher(), key_equal(), __a)\n-\t{ }\n-\n-      template<typename _InputIterator>\n-\tunordered_set(_InputIterator __first, _InputIterator __last,\n-\t\t      size_type __n, const hasher& __hf,\n-\t\t      const allocator_type& __a)\n-\t  : unordered_set(__first, __last, __n, __hf, key_equal(), __a)\n-\t{ }\n-\n-      unordered_set(initializer_list<value_type> __l,\n-\t\t    size_type __n,\n-\t\t    const allocator_type& __a)\n-\t: unordered_set(__l, __n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_set(initializer_list<value_type> __l,\n-\t\t    size_type __n, const hasher& __hf,\n-\t\t    const allocator_type& __a)\n-\t: unordered_set(__l, __n, __hf, key_equal(), __a)\n-      { }\n-\n-      unordered_set&\n-      operator=(const unordered_set&) = default;\n-\n-      unordered_set&\n-      operator=(unordered_set&&) = default;\n-\n-      unordered_set&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-\n-      void\n-      swap(unordered_set& __x)\n-      noexcept( noexcept(__x._M_base().swap(__x)) )\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-      void\n-      clear() noexcept\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      template<typename... _Args>\n-\tstd::pair<iterator, bool>\n-\templace(_Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  std::pair<iterator, bool> __res\n-\t    = _Base::emplace(std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __it, _Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res\n-\t    = _Base::emplace_hint(__it, std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      void\n-      insert(std::initializer_list<value_type> __l)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::insert(__l);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-\n-      std::pair<iterator, bool>\n-      insert(const value_type& __obj)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\tstd::pair<iterator, bool> __res = _Base::insert(__obj);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(const_iterator __iter, const value_type& __v)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__iter, __v);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      std::pair<iterator, bool>\n-      insert(value_type&& __obj)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\tstd::pair<iterator, bool> __res = _Base::insert(std::move(__obj));\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(const_iterator __iter, value_type&& __v)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__iter, std::move(__v));\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      template<typename _InputIter>\n-\tvoid\n-\tinsert(_InputIter __first, _InputIter __last)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  _Base::insert(__first, __last);\n-\t  this->_M_profile_resize(__old_size);\n-\t}\n-\n-      void\n-      rehash(size_type __n)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::rehash(__n);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-  };\n-\n-  template<typename _Key, typename _Hash, typename _Pred, typename _Alloc>\n-    inline void\n-    swap(unordered_set<_Key, _Hash, _Pred, _Alloc>& __x,\n-\t unordered_set<_Key, _Hash, _Pred, _Alloc>& __y)\n-    noexcept(noexcept(__x.swap(__y)))\n-    { __x.swap(__y); }\n-\n-  template<typename _Key, typename _Hash, typename _Pred, typename _Alloc>\n-    inline bool\n-    operator==(const unordered_set<_Key, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_set<_Key, _Hash, _Pred, _Alloc>& __y)\n-    { return static_cast<const _GLIBCXX_STD_BASE&>(__x) == __y; }\n-\n-  template<typename _Key, typename _Hash, typename _Pred, typename _Alloc>\n-    inline bool\n-    operator!=(const unordered_set<_Key, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_set<_Key, _Hash, _Pred, _Alloc>& __y)\n-    { return !(__x == __y); }\n-\n-#undef _GLIBCXX_BASE\n-#undef _GLIBCXX_STD_BASE\n-#define _GLIBCXX_STD_BASE _GLIBCXX_STD_C::_GLIBCXX_BASE\n-#define _GLIBCXX_BASE unordered_multiset<_Value, _Hash, _Pred, _Alloc>\n-\n-  /** @brief Unordered_multiset wrapper with performance instrumentation.  */\n-  template<typename _Value,\n-\t   typename _Hash = std::hash<_Value>,\n-\t   typename _Pred = std::equal_to<_Value>,\n-\t   typename _Alloc =  std::allocator<_Value> >\n-    class unordered_multiset\n-    : public _GLIBCXX_STD_BASE,\n-      public _Unordered_profile<unordered_multiset<_Value,\n-\t\t\t\t\t\t   _Hash, _Pred, _Alloc>,\n-\t\t\t\tfalse>\n-    {\n-      typedef _GLIBCXX_STD_BASE _Base;\n-\n-      _Base&\n-      _M_base() noexcept       { return *this; }\n-\n-      const _Base&\n-      _M_base() const noexcept { return *this; }\n-\n-    public:\n-      typedef typename _Base::size_type       size_type;\n-      typedef typename _Base::hasher\t  hasher;\n-      typedef typename _Base::key_equal       key_equal;\n-      typedef typename _Base::allocator_type  allocator_type;\n-      typedef typename _Base::key_type\tkey_type;\n-      typedef typename _Base::value_type      value_type;\n-      typedef typename _Base::difference_type difference_type;\n-      typedef typename _Base::reference       reference;\n-      typedef typename _Base::const_reference const_reference;\n-\n-      typedef typename _Base::iterator iterator;\n-      typedef typename _Base::const_iterator const_iterator;\n-\n-      unordered_multiset() = default;\n-\n-      explicit\n-      unordered_multiset(size_type __n,\n-\t\t\t const hasher& __hf = hasher(),\n-\t\t\t const key_equal& __eql = key_equal(),\n-\t\t\t const allocator_type& __a = allocator_type())\n-\t: _Base(__n, __hf, __eql, __a)\n-      { }\n-\n-      template<typename _InputIterator>\n-\tunordered_multiset(_InputIterator __f, _InputIterator __l,\n-\t\t\t   size_type __n = 0,\n-\t\t\t   const hasher& __hf = hasher(),\n-\t\t\t   const key_equal& __eql = key_equal(),\n-\t\t\t   const allocator_type& __a = allocator_type())\n-\t  : _Base(__f, __l, __n, __hf, __eql, __a)\n-      { }\n-\n-      unordered_multiset(const unordered_multiset&) = default;\n-\n-      unordered_multiset(const _Base& __x)\n-\t: _Base(__x)\n-      { }\n-\n-      unordered_multiset(unordered_multiset&&) = default;\n-\n-      explicit\n-      unordered_multiset(const allocator_type& __a)\n-\t: _Base(__a)\n-      { }\n-\n-      unordered_multiset(const unordered_multiset& __umset,\n-\t\t\t const allocator_type& __a)\n-\t: _Base(__umset._M_base(), __a)\n-      { }\n-\n-      unordered_multiset(unordered_multiset&& __umset,\n-\t\t\t const allocator_type& __a)\n-\t: _Base(std::move(__umset._M_base()), __a)\n-      { }\n-\n-      unordered_multiset(initializer_list<value_type> __l,\n-\t\t\t size_type __n = 0,\n-\t\t\t const hasher& __hf = hasher(),\n-\t\t\t const key_equal& __eql = key_equal(),\n-\t\t\t const allocator_type& __a = allocator_type())\n-\t: _Base(__l, __n, __hf, __eql, __a)\n-      { }\n-\n-      unordered_multiset(size_type __n, const allocator_type& __a)\n-\t: unordered_multiset(__n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_multiset(size_type __n, const hasher& __hf,\n-\t\t\t const allocator_type& __a)\n-\t: unordered_multiset(__n, __hf, key_equal(), __a)\n-      { }\n-\n-      template<typename _InputIterator>\n-\tunordered_multiset(_InputIterator __first, _InputIterator __last,\n-\t\t\t   size_type __n,\n-\t\t\t   const allocator_type& __a)\n-\t  : unordered_multiset(__first, __last, __n, hasher(), key_equal(), __a)\n-\t{ }\n-\n-      template<typename _InputIterator>\n-\tunordered_multiset(_InputIterator __first, _InputIterator __last,\n-\t\t\t   size_type __n, const hasher& __hf,\n-\t\t\t   const allocator_type& __a)\n-\t  : unordered_multiset(__first, __last, __n, __hf, key_equal(), __a)\n-\t{ }\n-\n-      unordered_multiset(initializer_list<value_type> __l,\n-\t\t\t size_type __n,\n-\t\t\t const allocator_type& __a)\n-\t: unordered_multiset(__l, __n, hasher(), key_equal(), __a)\n-      { }\n-\n-      unordered_multiset(initializer_list<value_type> __l,\n-\t\t\t size_type __n, const hasher& __hf,\n-\t\t\t const allocator_type& __a)\n-\t: unordered_multiset(__l, __n, __hf, key_equal(), __a)\n-      { }\n-\n-      unordered_multiset&\n-      operator=(const unordered_multiset&) = default;\n-\n-      unordered_multiset&\n-      operator=(unordered_multiset&&) = default;\n-\n-      unordered_multiset&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-\n-      void\n-      swap(unordered_multiset& __x)\n-      noexcept( noexcept(__x._M_base().swap(__x)) )\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-      void\n-      clear() noexcept\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      template<typename... _Args>\n-\titerator\n-\templace(_Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res = _Base::emplace(std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      template<typename... _Args>\n-\titerator\n-\templace_hint(const_iterator __it, _Args&&... __args)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  iterator __res\n-\t    = _Base::emplace_hint(__it, std::forward<_Args>(__args)...);\n-\t  this->_M_profile_resize(__old_size);\n-\t  return __res;\n-\t}\n-\n-      void\n-      insert(std::initializer_list<value_type> __l)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::insert(__l);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-\n-      iterator\n-      insert(const value_type& __obj)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__obj);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(const_iterator __iter, const value_type& __v)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__iter, __v);\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(value_type&& __obj)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(std::move(__obj));\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      iterator\n-      insert(const_iterator __iter, value_type&& __v)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\titerator __res = _Base::insert(__iter, std::move(__v));\n-\tthis->_M_profile_resize(__old_size);\n-\treturn __res;\n-      }\n-\n-      template<typename _InputIter>\n-\tvoid\n-\tinsert(_InputIter __first, _InputIter __last)\n-\t{\n-\t  size_type __old_size = _Base::bucket_count();\n-\t  _Base::insert(__first, __last);\n-\t  this->_M_profile_resize(__old_size);\n-\t}\n-\n-      void\n-      rehash(size_type __n)\n-      {\n-\tsize_type __old_size = _Base::bucket_count();\n-\t_Base::rehash(__n);\n-\tthis->_M_profile_resize(__old_size);\n-      }\n-   };\n-\n-  template<typename _Value, typename _Hash, typename _Pred, typename _Alloc>\n-    inline void\n-    swap(unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __x,\n-\t unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n-    noexcept(noexcept(__x.swap(__y)))\n-    { __x.swap(__y); }\n-\n-  template<typename _Value, typename _Hash, typename _Pred, typename _Alloc>\n-    inline bool\n-    operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n-    { return static_cast<const _GLIBCXX_STD_BASE&>(__x) == __y; }\n-\n-  template<typename _Value, typename _Hash, typename _Pred, typename _Alloc>\n-    inline bool\n-    operator!=(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __x,\n-\t       const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n-    { return !(__x == __y); }\n-\n-} // namespace __profile\n-} // namespace std\n-\n-#undef _GLIBCXX_BASE\n-#undef _GLIBCXX_STD_BASE\n-\n-#endif // C++11\n-\n-#endif"}, {"sha": "56fe23a9ddda5fc05d0cac2b655ff682026e9c33", "filename": "libstdc++-v3/include/profile/vector", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,572 +0,0 @@\n-// Profiling vector implementation -*- C++ -*-\n-\n-// Copyright (C) 2009-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file profile/vector\n- *  This file is a GNU profile extension to the Standard C++ Library.\n- */\n-\n-#ifndef _GLIBCXX_PROFILE_VECTOR\n-#define _GLIBCXX_PROFILE_VECTOR 1\n-\n-#include <vector>\n-#include <utility>\n-#include <profile/base.h>\n-#include <profile/iterator_tracker.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-namespace __profile\n-{\n-  template<typename _Vector>\n-    class _Vector_profile_pre\n-    {\n-      _Vector&\n-      _M_conjure()\n-      { return *static_cast<_Vector*>(this); }\n-\n-    public:\n-#if __cplusplus >= 201103L\n-      _Vector_profile_pre() = default;\n-      _Vector_profile_pre(const _Vector_profile_pre&) = default;\n-      _Vector_profile_pre(_Vector_profile_pre&&) = default;\n-\n-      _Vector_profile_pre&\n-      operator=(const _Vector_profile_pre&)\n-      { _M_conjure()._M_profile_destruct(); }\n-\n-      _Vector_profile_pre&\n-      operator=(_Vector_profile_pre&&) noexcept\n-      { _M_conjure()._M_profile_destruct(); }\n-#endif\n-    };\n-\n-  template<typename _Vector>\n-    class _Vector_profile_post\n-    {\n-      _Vector&\n-      _M_conjure()\n-      { return *static_cast<_Vector*>(this); }\n-\n-    protected:\n-      __gnu_profile::__container_size_info* _M_size_info;\n-      __gnu_profile::__vector2list_info* _M_vect2list_info;\n-\n-      _Vector_profile_post() _GLIBCXX_NOEXCEPT\n-      { _M_profile_construct(); }\n-\n-#if __cplusplus >= 201103L\n-      _Vector_profile_post(const _Vector_profile_post&) noexcept\n-      : _Vector_profile_post() { }\n-      _Vector_profile_post(_Vector_profile_post&& __other) noexcept\n-      : _Vector_profile_post()\n-      { _M_swap(__other); }\n-\n-      _Vector_profile_post&\n-      operator=(const _Vector_profile_post&) noexcept\n-      { _M_profile_construct(); }\n-\n-      _Vector_profile_post&\n-      operator=(_Vector_profile_post&& __other) noexcept\n-      {\n-\t_M_swap(__other);\n-\t__other._M_profile_construct();\n-      }\n-#endif\n-\n-      ~_Vector_profile_post()\n-      { _M_conjure()._M_profile_destruct(); }\n-\n-    public:\n-      void\n-      _M_profile_construct() _GLIBCXX_NOEXCEPT\n-      {\n-\t_M_size_info =\n-\t  __profcxx_vector_size_construct(_M_conjure().capacity());\n-\t_M_vect2list_info = __profcxx_vector2list_construct();\t\n-      }\n-\n-      void\n-      _M_profile_destruct() _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_vector2list_destruct(_M_vect2list_info);\n-\t_M_vect2list_info = 0;\n-\t__profcxx_vector_size_destruct(_M_size_info,\n-\t\t\t\t       _M_conjure().capacity(),\n-\t\t\t\t       _M_conjure().size());\n-\t_M_size_info = 0;\n-      }\n-\n-      void\n-      _M_swap(_Vector_profile_post& __other) _GLIBCXX_NOEXCEPT\n-      {\n-\tstd::swap(_M_size_info, __other._M_size_info);\n-\tstd::swap(_M_vect2list_info, __other._M_vect2list_info);\n-      }\n-    };\n-\n-  template<typename _Tp,\n-\t   typename _Allocator = std::allocator<_Tp> >\n-    class vector\n-    : public _Vector_profile_pre<vector<_Tp, _Allocator> >,\n-      public _GLIBCXX_STD_C::vector<_Tp, _Allocator>,\n-      public _Vector_profile_post<vector<_Tp, _Allocator> >\n-    {\n-      typedef _GLIBCXX_STD_C::vector<_Tp, _Allocator>\t_Base;\n-\n-      typedef typename _Base::iterator\t\t\t_Base_iterator;\n-      typedef typename _Base::const_iterator\t\t_Base_const_iterator;\n-\n-    public:\n-      typedef typename _Base::reference\t\t\treference;\n-      typedef typename _Base::const_reference\t\tconst_reference;\n-\n-      typedef __iterator_tracker<_Base_iterator, vector>\n-\t\t\t\t\t\t\titerator;\n-      typedef __iterator_tracker<_Base_const_iterator, vector>\n-\t\t\t\t\t\t\tconst_iterator;\n-\n-      typedef typename _Base::size_type\t\t\tsize_type;\n-      typedef typename _Base::difference_type\t\tdifference_type;\n-\n-      typedef _Tp\t\t\t\t\tvalue_type;\n-      typedef _Allocator\t\t\t\tallocator_type;\n-      typedef typename _Base::pointer\t\t\tpointer;\n-      typedef typename _Base::const_pointer\t\tconst_pointer;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef std::reverse_iterator<const_iterator>\tconst_reverse_iterator;\n-\n-      _Base&\n-      _M_base() _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      const _Base&\n-      _M_base() const _GLIBCXX_NOEXCEPT\t{ return *this; }\n-\n-      // 23.2.4.1 construct/copy/destroy:\n-\n-#if __cplusplus < 201103L\n-      vector()\n-      { }\n-\n-      vector(const vector& __x)\n-      : _Base(__x) { }\n-#else\n-      vector() = default;\n-      vector(const vector&) = default;\n-      vector(vector&&) = default;\n-#endif\n-\n-      explicit\n-      vector(const _Allocator& __a) _GLIBCXX_NOEXCEPT\n-      : _Base(__a) { }\n-\n-#if __cplusplus >= 201103L\n-      explicit\n-      vector(size_type __n, const _Allocator& __a = _Allocator())\n-      : _Base(__n, __a) { }\n-\n-      vector(size_type __n, const _Tp& __value,\n-\t     const _Allocator& __a = _Allocator())\n-      : _Base(__n, __value, __a) { }\n-#else\n-      explicit\n-      vector(size_type __n, const _Tp& __value = _Tp(),\n-\t     const _Allocator& __a = _Allocator())\n-      : _Base(__n, __value, __a) { }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-#else\n-      template<typename _InputIterator>\n-#endif\n-\tvector(_InputIterator __first, _InputIterator __last,\n-\t       const _Allocator& __a = _Allocator())\n-\t: _Base(__first, __last, __a) { }\n-\n-      /// Construction from a normal-mode vector\n-      vector(const _Base& __x)\n-      : _Base(__x) { }\n-\n-#if __cplusplus >= 201103L\n-      vector(const _Base& __x, const _Allocator& __a)\n-      : _Base(__x, __a) { }\n-\n-      vector(vector&& __x, const _Allocator& __a)\n-      : _Base(std::move(__x), __a) { }\n-\n-      vector(initializer_list<value_type> __l,\n-\t     const allocator_type& __a = allocator_type())\n-      : _Base(__l, __a) { }\n-#endif\n-\n-#if __cplusplus < 201103L\n-      vector&\n-      operator=(const vector& __x)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __x;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#else\n-      vector&\n-      operator=(const vector&) = default;\n-\n-      vector&\n-      operator=(vector&&) = default;\n-\n-      vector&\n-      operator=(initializer_list<value_type> __l)\n-      {\n-\tthis->_M_profile_destruct();\n-\t_M_base() = __l;\n-\tthis->_M_profile_construct();\n-\treturn *this;\n-      }\n-#endif\n-\n-      // iterators:\n-      iterator\n-      begin() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      begin() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      iterator\n-      end() _GLIBCXX_NOEXCEPT\n-      { return iterator(_Base::end(), this); }\n-\n-      const_iterator\n-      end() const _GLIBCXX_NOEXCEPT\n-      { return const_iterator(_Base::end(), this); }\n-\n-      reverse_iterator\n-      rbegin() _GLIBCXX_NOEXCEPT\n-      { return reverse_iterator(end()); }\n-\n-      const_reverse_iterator\n-      rbegin() const _GLIBCXX_NOEXCEPT\n-      { return const_reverse_iterator(end()); }\n-\n-      reverse_iterator\n-      rend() _GLIBCXX_NOEXCEPT\n-      { return reverse_iterator(begin()); }\n-\n-      const_reverse_iterator\n-      rend() const _GLIBCXX_NOEXCEPT\n-      { return const_reverse_iterator(begin()); }\n-\n-#if __cplusplus >= 201103L\n-      const_iterator\n-      cbegin() const noexcept\n-      { return const_iterator(_Base::begin(), this); }\n-\n-      const_iterator\n-      cend() const noexcept\n-      { return const_iterator(_Base::end(), this); }\n-\n-      const_reverse_iterator\n-      crbegin() const noexcept\n-      { return const_reverse_iterator(end()); }\n-\n-      const_reverse_iterator\n-      crend() const noexcept\n-      { return const_reverse_iterator(begin()); }\n-#endif\n-\n-      // 23.2.4.2 capacity:\n-\n-#if __cplusplus >= 201103L\n-      void\n-      resize(size_type __sz)\n-      {\n-\t__profcxx_vector2list_invalid_operator(this->_M_vect2list_info);\n-\t_M_profile_resize(this->capacity(), __sz);\n-\t_Base::resize(__sz);\n-      }\n-\n-      void\n-      resize(size_type __sz, const _Tp& __c)\n-      {\n-\t__profcxx_vector2list_invalid_operator(this->_M_vect2list_info);\n-\t_M_profile_resize(this->capacity(), __sz);\n-\t_Base::resize(__sz, __c);\n-      }\n-#else\n-      void\n-      resize(size_type __sz, _Tp __c = _Tp())\n-      {\n-\t__profcxx_vector2list_invalid_operator(this->_M_vect2list_info);\n-\t_M_profile_resize(this->capacity(), __sz);\n-\t_Base::resize(__sz, __c);\n-      }\n-#endif\n-\n-      // element access:\n-      reference\n-      operator[](size_type __n) _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_vector2list_invalid_operator(this->_M_vect2list_info);\n-\treturn _M_base()[__n];\n-      }\n-      const_reference\n-      operator[](size_type __n) const _GLIBCXX_NOEXCEPT\n-      {\n-\t__profcxx_vector2list_invalid_operator(this->_M_vect2list_info);\n-\treturn _M_base()[__n];\n-      }\n-\n-      // 23.2.4.3 modifiers:\n-      void\n-      push_back(const _Tp& __x)\n-      {\n-\tsize_type __old_size = this->capacity();\n-\t_Base::push_back(__x);\n-\t_M_profile_resize(__old_size, this->capacity());\n-      }\n-\n-#if __cplusplus >= 201103L\n-      void\n-      push_back(_Tp&& __x)\n-      {\n-\tsize_type __old_size = this->capacity();\n-\t_Base::push_back(std::move(__x));\n-\t_M_profile_resize(__old_size, this->capacity());\n-      }\n-\n-#endif\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      insert(const_iterator __pos, const _Tp& __x)\n-#else\n-      insert(iterator __pos, const _Tp& __x)\n-#endif\n-      {\n-\t__profcxx_vector2list_insert(this->_M_vect2list_info,\n-\t\t\t\t     __pos.base() - _Base::begin(),\n-\t\t\t\t     this->size());\n-\tsize_type __old_size = this->capacity();\n-\t_Base_iterator __res = _Base::insert(__pos.base(), __x);\n-\t_M_profile_resize(__old_size, this->capacity());\n-\treturn iterator(__res, this);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(const_iterator __pos, _Tp&& __x)\n-      {\n-\t__profcxx_vector2list_insert(this->_M_vect2list_info,\n-\t\t\t\t     __pos.base() - _Base::cbegin(),\n-\t\t\t\t     this->size());\n-\tsize_type __old_size = this->capacity();\n-\t_Base_iterator __res = _Base::insert(__pos.base(), __x);\n-\t_M_profile_resize(__old_size, this->capacity());\n-\treturn iterator(__res, this);\n-      }\n-\n-      template<typename... _Args>\n-\titerator\n-\templace(const_iterator __pos, _Args&&... __args)\n-\t{\n-\t  _Base_iterator __res = _Base::emplace(__pos.base(),\n-\t\t\t\t\t\tstd::forward<_Args>(__args)...);\n-\t  return iterator(__res, this);\n-\t}\n-\n-      iterator\n-      insert(const_iterator __pos, initializer_list<value_type> __l)\n-      { return this->insert(__pos, __l.begin(), __l.end()); }\n-#endif\n-\n-      void\n-      swap(vector& __x)\n-#if __cplusplus >= 201103L\n-\tnoexcept( noexcept(declval<_Base>().swap(__x)) )\n-#endif\n-      {\n-\t_Base::swap(__x);\n-\tthis->_M_swap(__x);\n-      }\n-\n-#if __cplusplus >= 201103L\n-      iterator\n-      insert(const_iterator __pos, size_type __n, const _Tp& __x)\n-      {\n-\t__profcxx_vector2list_insert(this->_M_vect2list_info,\n-\t\t\t\t     __pos.base() - _Base::cbegin(),\n-\t\t\t\t     this->size());\n-\tsize_type __old_size = this->capacity();\n-\t_Base_iterator __res = _Base::insert(__pos, __n, __x);\n-\t_M_profile_resize(__old_size, this->capacity());\n-\treturn iterator(__res, this);\n-      }\n-#else\n-      void\n-      insert(iterator __pos, size_type __n, const _Tp& __x)\n-      {\n-\t__profcxx_vector2list_insert(this->_M_vect2list_info,\n-\t\t\t\t     __pos.base() - _Base::begin(),\n-\t\t\t\t     this->size());\n-\tsize_type __old_size = this->capacity();\n-\t_Base::insert(__pos, __n, __x);\n-\t_M_profile_resize(__old_size, this->capacity());\n-      }\n-#endif\n-\n-#if __cplusplus >= 201103L\n-      template<typename _InputIterator,\n-\t       typename = std::_RequireInputIter<_InputIterator>>\n-\titerator\n-\tinsert(const_iterator __pos,\n-\t       _InputIterator __first, _InputIterator __last)\n-\t{\n-\t  __profcxx_vector2list_insert(this->_M_vect2list_info,\n-\t\t\t\t       __pos.base() - _Base::cbegin(),\n-\t\t\t\t       this->size());\n-\t  size_type __old_size = this->capacity();\n-\t  _Base_iterator __res = _Base::insert(__pos, __first, __last);\n-\t  _M_profile_resize(__old_size, this->capacity());\n-\t  return iterator(__res, this);\n-\t}\n-#else\n-      template<typename _InputIterator>\n-\tvoid\n-\tinsert(iterator __pos,\n-\t       _InputIterator __first, _InputIterator __last)\n-\t{\n-\t  __profcxx_vector2list_insert(this->_M_vect2list_info,\n-\t\t\t\t       __pos.base() - _Base::begin(),\n-\t\t\t\t       this->size());\n-\t  size_type __old_size = this->capacity();\n-\t  _Base::insert(__pos, __first, __last);\n-\t  _M_profile_resize(__old_size, this->capacity());\n-\t}\n-#endif\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      erase(const_iterator __pos)\n-#else\n-      erase(iterator __pos)\t\n-#endif\n-      { return iterator(_Base::erase(__pos.base()), this); }\n-\n-      iterator\n-#if __cplusplus >= 201103L\n-      erase(const_iterator __first, const_iterator __last)\n-#else\n-      erase(iterator __first, iterator __last)\n-#endif\n-      { return iterator(_Base::erase(__first.base(), __last.base()), this); }\n-\n-      void\n-      clear() _GLIBCXX_NOEXCEPT\n-      {\n-\tthis->_M_profile_destruct();\n-\t_Base::clear();\n-\tthis->_M_profile_construct();\n-      }\n-\n-      inline void\n-      _M_profile_iterate(int __rewind = 0) const\n-      { __profcxx_vector2list_iterate(this->_M_vect2list_info, __rewind); }\n-\n-    private:\n-      void _M_profile_resize(size_type __old_size, size_type __new_size)\n-      {\n-\tif (__old_size < __new_size)\n-\t  {\n-\t    __profcxx_vector_size_resize(this->_M_size_info,\n-\t\t\t\t\t this->size(), __new_size);\n-\t    __profcxx_vector2list_resize(this->_M_vect2list_info,\n-\t\t\t\t\t this->size(), __new_size);\n-\t  }\n-      }\n-    };\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator==(const vector<_Tp, _Alloc>& __lhs,\n-\t       const vector<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() == __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator!=(const vector<_Tp, _Alloc>& __lhs,\n-\t       const vector<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() != __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<(const vector<_Tp, _Alloc>& __lhs,\n-\t      const vector<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() < __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator<=(const vector<_Tp, _Alloc>& __lhs,\n-\t       const vector<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() <= __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>=(const vector<_Tp, _Alloc>& __lhs,\n-\t       const vector<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() >= __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline bool\n-    operator>(const vector<_Tp, _Alloc>& __lhs,\n-\t      const vector<_Tp, _Alloc>& __rhs)\n-    { return __lhs._M_base() > __rhs._M_base(); }\n-\n-  template<typename _Tp, typename _Alloc>\n-    inline void\n-    swap(vector<_Tp, _Alloc>& __lhs, vector<_Tp, _Alloc>& __rhs)\n-    _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))\n-    { __lhs.swap(__rhs); }\n-\n-} // namespace __profile\n-\n-#if __cplusplus >= 201103L\n-  // DR 1182.\n-  /// std::hash specialization for vector<bool>.\n-  template<typename _Alloc>\n-    struct hash<__profile::vector<bool, _Alloc>>\n-    : public __hash_base<size_t, __profile::vector<bool, _Alloc>>\n-    {\n-      size_t\n-      operator()(const __profile::vector<bool, _Alloc>& __b) const noexcept\n-      {\n-\treturn std::hash<_GLIBCXX_STD_C::vector<bool, _Alloc>>()(__b._M_base());\n-      }\n-    };\n-#endif\n-\n-} // namespace std\n-\n-#endif"}, {"sha": "d73768cb4c1779e571d9104d7334f26beb27e649", "filename": "libstdc++-v3/scripts/run_doxygen", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -329,10 +329,6 @@ for f in *__parallel_*; do\n     newname=`echo $f | sed 's/__parallel_/__parallel::/'`\n     mv $f $newname\n done\n-for f in *__profile_*; do\n-    newname=`echo $f | sed 's/__profile_/__profile::/'`\n-    mv $f $newname\n-done\n \n # Remove inline namespaces used for versioning.\n for f in *_V2_*; do\n@@ -376,10 +372,6 @@ for f in __gnu_parallel_*; do\n     newname=`echo $f | sed 's/^__gnu_parallel_/__gnu_parallel::/'`\n     mv $f $newname\n done\n-for f in __gnu_profile_*; do\n-    newname=`echo $f | sed 's/^__gnu_profile_/__gnu_profile::/'`\n-    mv $f $newname\n-done\n for f in __gnu_pbds_*; do\n     newname=`echo $f | sed 's/^__gnu_pbds_/__gnu_pbds::/'`\n     mv $f $newname"}, {"sha": "7a4451e141b499c36038a3652d5ee10a691b34d8", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/60497.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2F60497.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2F60497.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2F60497.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -21,7 +21,6 @@\n \n #include <array>\n #include <debug/array>\n-#include <profile/array>\n #include <memory>\n \n struct A;\n@@ -32,6 +31,3 @@ auto b = std::get<0>(std::move(a));\n \n std::__debug::array<B<A>*, 1> c;\n auto d = std::__debug::get<0>(std::move(c));\n-\n-std::__profile::array<B<A>*, 1> e;\n-auto f = std::__profile::get<0>(std::move(e));"}, {"sha": "91d8d26d7a76a0ba8e975243fc049fbc4f4cb3d7", "filename": "libstdc++-v3/testsuite/23_containers/array/specialized_algorithms/swap_cxx17.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fspecialized_algorithms%2Fswap_cxx17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fspecialized_algorithms%2Fswap_cxx17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fspecialized_algorithms%2Fswap_cxx17.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-options \"-std=gnu++17\" }\n // { dg-do compile }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2016-2019 Free Software Foundation, Inc.\n //"}, {"sha": "deb71f2d51bea144e9dc0378d7cd0290ba06ce62", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/capacity/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -34,7 +34,7 @@ test01()\n   fld.resize(0);\n   VERIFY(fld.empty() == true);\n \n-#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PROFILE)\n+#ifdef _GLIBCXX_DEBUG\n   using std::_GLIBCXX_STD_C::_Fwd_list_node;\n #else\n   using std::_Fwd_list_node;"}, {"sha": "1b23938c088714f2e9828af8d43b50bd2ad338a4", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/29134.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -26,10 +26,10 @@ void test01()\n   typedef std::list<int> list_type;\n   list_type l;\n \n-#if ! defined _GLIBCXX_DEBUG && ! defined _GLIBCXX_PROFILE\n-  using std::_List_node;\n-#else\n+#ifdef _GLIBCXX_DEBUG\n   using std::_GLIBCXX_STD_C::_List_node;\n+#else\n+  using std::_List_node;\n #endif\n \n   VERIFY( l.max_size() == std::allocator<_List_node<int> >().max_size() );"}, {"sha": "cf72e46b5ceeb55ea487df20115f0cb555cf63d5", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <map>\n #include <algorithm>"}, {"sha": "39526a9520d748f74132adf81093e1f5b450ceb4", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert_or_assign/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert_or_assign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert_or_assign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert_or_assign%2F1.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,4 @@\n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2015-2019 Free Software Foundation, Inc.\n //"}, {"sha": "17abdc415317faa403a047f25c0e343128db3d1a", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/try_emplace/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ftry_emplace%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ftry_emplace%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ftry_emplace%2F1.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,4 @@\n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2015-2019 Free Software Foundation, Inc.\n //"}, {"sha": "0c9ba093895f5d45611587dc11f0e1d633e408d9", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <map>\n #include <algorithm>"}, {"sha": "61daacd33478bfb788f9e4ee7d1e70b84c0fdc35", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <set>\n #include <algorithm>"}, {"sha": "48bca02c039c85c13664f18a8dd265e9d900f4c4", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <set>\n #include <algorithm>"}, {"sha": "a3cd5e6eb2e0967e96f9c537c7b324b6912fc8d2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <unordered_map>\n #include <testsuite_hooks.h>"}, {"sha": "21f0f3b601943740c1c5fd5dfe4d386626497deb", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <unordered_map>\n #include <testsuite_hooks.h>"}, {"sha": "909163c86dec39591b9ca85fd786abfccf568bff", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <unordered_set>\n #include <testsuite_hooks.h>"}, {"sha": "324dba7a16196c15d275b742abe27737177947df", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fmodifiers%2Fextract.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -16,7 +16,6 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-options \"-std=gnu++17\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <unordered_set>\n #include <testsuite_hooks.h>"}, {"sha": "2c84964210b0d6fbbaf1f88449de600d3905ef29", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fcapacity%2F29134.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -29,8 +29,6 @@ void test01()\n \n #ifdef _GLIBCXX_DEBUG\n   using std::_GLIBCXX_STD_C::_S_word_bit;\n-#elif defined(_GLIBCXX_PROFILE)\n-  using std::_GLIBCXX_STD_C::_S_word_bit;\n #else\n   using std::_S_word_bit;\n #endif"}, {"sha": "25a9b65e5a278d94c40dd242dbe234ed6549a9bd", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/modifiers/insert/31370.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Finsert%2F31370.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Finsert%2F31370.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Finsert%2F31370.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -26,8 +26,6 @@\n \n #ifdef _GLIBCXX_DEBUG\n   using std::_GLIBCXX_STD_C::_S_word_bit;\n-#elif defined(_GLIBCXX_PROFILE)\n-  using std::_GLIBCXX_STD_C::_S_word_bit;\n #else\n   using std::_S_word_bit;\n #endif"}, {"sha": "187e433d9d37ec0712504e58536570dfd8b1be7e", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/insert_vs_emplace.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Finsert_vs_emplace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Finsert_vs_emplace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Finsert_vs_emplace.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,5 +1,4 @@\n // { dg-do run { target c++11 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // The class X and test code is by by Howard Hinnant and used under a\n // Creative Commons Attribution 4.0 International License."}, {"sha": "43d260ed1c3179607f110870652712f573210228", "filename": "libstdc++-v3/testsuite/25_algorithms/binary_search/partitioned.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Fpartitioned.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Fpartitioned.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Fpartitioned.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-do run { target c++11 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <algorithm>\n #include <functional>"}, {"sha": "a80fe66beff834b52b011a8def9773c04189f013", "filename": "libstdc++-v3/testsuite/25_algorithms/equal_range/partitioned.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Fpartitioned.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Fpartitioned.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Fpartitioned.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-do run { target c++11 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <algorithm>\n #include <functional>"}, {"sha": "9c8c2938a0deaf9b2082a14d9817457faab4db48", "filename": "libstdc++-v3/testsuite/25_algorithms/lexicographical_compare/71545.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2F71545.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2F71545.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2F71545.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-do link { target c++11 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <algorithm>\n "}, {"sha": "e48facb7173309366abdf12cbcebbac981904f79", "filename": "libstdc++-v3/testsuite/25_algorithms/lower_bound/partitioned.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Fpartitioned.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Fpartitioned.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Fpartitioned.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-do run { target c++11 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <algorithm>\n #include <functional>"}, {"sha": "7dd43b6074d1ecebb771ece2b13ae250b6c3b27a", "filename": "libstdc++-v3/testsuite/25_algorithms/upper_bound/partitioned.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Fpartitioned.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Fpartitioned.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Fpartitioned.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-D_GLIBCXX_DEBUG\" }\n // { dg-do run { target c++11 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n #include <algorithm>\n #include <functional>"}, {"sha": "92eff6d1e0af1120024731bfe7dbb2702e0ce91a", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -196,9 +196,6 @@ libgomp_flags=-B${glibcxx_builddir}/../libgomp \\\n atomic_flags=$(ATOMIC_FLAGS)\n parallel_flags=\"unix/-D_GLIBCXX_PARALLEL/-fopenmp\"\n \n-# Runs the testsuite in profile mode.\n-profile_flags = \"unix/-D_GLIBCXX_PROFILE\"\n-\n check-debug: site.exp\n \toutputdir=debug; export outputdir; \\\n \tif test ! -d $${outputdir}; then \\\n@@ -226,17 +223,8 @@ check-performance-parallel: testsuite_files_performance ${performance_script}\n \tCXXFLAGS=\"-D_GLIBCXX_PARALLEL -fopenmp $(atomic_flags) $(libgomp_flags)\"; export CXXFLAGS; \\\n \t${check_performance_script} ${glibcxx_srcdir} ${glibcxx_builddir})\n \n-check-profile: site.exp\n-\t-@(outputdir=profile; export outputdir; \\\n-\tif test ! -d $${outputdir}; then \\\n-\t  mkdir $${outputdir}; \\\n-\tfi; \\\n-\tsrcdir=`$(am__cd) $(srcdir) && pwd`; export srcdir; \\\n-\tEXPECT=$(EXPECT); export EXPECT; \\\n-\t$(MAKE) CXXFLAGS=\"$(atomic_flags) \" RUNTESTFLAGS=\"$(RUNTESTFLAGS) conformance.exp --outdir $${outputdir} --objdir $${outputdir} --target_board=$(profile_flags)\" check-DEJAGNU; )\n-\n .PHONY: baseline_symbols new-abi-baseline \\\n-\tcheck-abi check-compile check-performance check-parallel check-profile\n+\tcheck-abi check-compile check-performance check-parallel\n \n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n@@ -245,4 +233,4 @@ CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n \n # To remove directories.\n clean-local:\n-\trm -rf de fr debug parallel profile binaries normal* \n+\trm -rf de fr debug parallel binaries normal*"}, {"sha": "f68d62776ff93886f9b35a8091b459a569d860d0", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -414,9 +414,6 @@ libgomp_flags = -B${glibcxx_builddir}/../libgomp \\\n atomic_flags = $(ATOMIC_FLAGS)\n parallel_flags = \"unix/-D_GLIBCXX_PARALLEL/-fopenmp\"\n \n-# Runs the testsuite in profile mode.\n-profile_flags = \"unix/-D_GLIBCXX_PROFILE\"\n-\n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n \t     testsuite_* site.exp abi_check baseline_symbols *TEST* *.dat \\\n@@ -733,21 +730,12 @@ check-performance-parallel: testsuite_files_performance ${performance_script}\n \tCXXFLAGS=\"-D_GLIBCXX_PARALLEL -fopenmp $(atomic_flags) $(libgomp_flags)\"; export CXXFLAGS; \\\n \t${check_performance_script} ${glibcxx_srcdir} ${glibcxx_builddir})\n \n-check-profile: site.exp\n-\t-@(outputdir=profile; export outputdir; \\\n-\tif test ! -d $${outputdir}; then \\\n-\t  mkdir $${outputdir}; \\\n-\tfi; \\\n-\tsrcdir=`$(am__cd) $(srcdir) && pwd`; export srcdir; \\\n-\tEXPECT=$(EXPECT); export EXPECT; \\\n-\t$(MAKE) CXXFLAGS=\"$(atomic_flags) \" RUNTESTFLAGS=\"$(RUNTESTFLAGS) conformance.exp --outdir $${outputdir} --objdir $${outputdir} --target_board=$(profile_flags)\" check-DEJAGNU; )\n-\n .PHONY: baseline_symbols new-abi-baseline \\\n-\tcheck-abi check-compile check-performance check-parallel check-profile\n+\tcheck-abi check-compile check-performance check-parallel\n \n # To remove directories.\n clean-local:\n-\trm -rf de fr debug parallel profile binaries normal* \n+\trm -rf de fr debug parallel binaries normal*\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."}, {"sha": "03146681aaa58070792dac45bd38146f6fb7ead0", "filename": "libstdc++-v3/testsuite/ext/profile/all.cc", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fall.cc?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,52 +0,0 @@\n-// { dg-options \"-O0\" }\n-// { dg-additional-options \"-D_GLIBCXX_PROFILE_NO_THREADS\" { target { ! tls_native } } }\n-// { dg-do compile { target c++11 } }\n-// { dg-require-profile-mode \"\" }\n-\n-// -*- C++ -*-\n-\n-// Copyright (C) 2006-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <map>\n-#include <vector>\n-#include <unordered_map>\n-\n-using std::map;\n-using std::vector;\n-using std::unordered_map;\n-\n-struct dumb_hash {\n-  size_t operator()(int x) const {return 0;}\n-  size_t operator()(int x, int y) const {return x == y;}\n-};\n-\n-int main() {\n-  map<int, int> m_to_umap;\n-  vector<int> v_to_list;\n-  unordered_map<int, int> um_too_small;\n-  unordered_map<int, int> um_too_large(1000000);\n-  unordered_map<int, int, dumb_hash, dumb_hash> um_dumb_hash;\n-\n-  for (int i = 0; i < 10000; ++i) {\n-    m_to_umap[i] = i;\n-    v_to_list.insert(v_to_list.begin(), i);\n-    um_too_small[i] = i;\n-    um_too_small[i] = i;\n-    um_dumb_hash[i] = i;\n-  }\n-}"}, {"sha": "cd2a48845aa80e3ffa70be3bd25a0a37ea8a14ac", "filename": "libstdc++-v3/testsuite/ext/profile/mutex_extensions_neg.cc", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,33 +0,0 @@\n-// { dg-options \"-D_GLIBCXX_DEBUG -D_GLIBCXX_PROFILE\" }\n-// { dg-do compile }\n-\n-// -*- C++ -*-\n-\n-// Otherwise we may get *multiple* errors.\n-#undef _GLIBCXX_PARALLEL\n-\n-// Copyright (C) 2006-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <vector>\n-\n-// { dg-error \"multiple inlined namespaces\" \"\" { target *-*-* } 0 }\n-\n-// \"template argument 1 is invalid\"\n-// { dg-prune-output \"tuple:993\" }\n-// PMR alias templates cause ambiguities between debug and profile containers:\n-// { dg-prune-output \"is ambiguous\" }"}, {"sha": "0626c3949e6372679085ec0aefc46ab9b65f0a10", "filename": "libstdc++-v3/testsuite/ext/profile/profiler_algos.cc", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fprofiler_algos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fprofiler_algos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fprofiler_algos.cc?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,147 +0,0 @@\n-// { dg-require-profile-mode \"\" }\n-\n-// -*- C++ -*-\n-\n-// Unit tests for profile/impl/profile_algos.h.\n-\n-// Copyright (C) 2010-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <vector>\n-#include <profile/impl/profiler.h>\n-\n-using std::_GLIBCXX_STD_C::vector;\n-\n-enum Failure\n-{\n-  NO_FAILURES = 0x0,\n-  INSERT_AFTER_N = 0x1,\n-  INSERT_AT_HEAD = 0x2,\n-  INSERT_AT_TAIL = 0x4,\n-  INSERT_IN_THE_MIDDLE = 0x8,\n-  TOP_N = 0x10,\n-  FOR_EACH = 0x20,\n-  REMOVE = 0x40\n-};\n-  \n-\n-static int\n-test_insert_top_n()\n-{\n-  vector<int> v;\n-\n-  for (int i = 0; i < 10; i++)\n-    v.push_back(10 - i);\n-\n-  // Inserting -5 should have no effect if size is limited to 10.\n-  __gnu_profile::__insert_top_n(v, -5, 10);\n-  for (int i = 0; i < 10; i++)\n-    if (v[i] != 10 - i)\n-      return INSERT_AFTER_N;\n-\n-  // Insert at head.\n-  __gnu_profile::__insert_top_n(v, 11, 10);\n-  for (int i = 0; i < 11; i++)\n-    if (v[i] != 11 - i)\n-      return INSERT_AT_HEAD;\n-\n-  // Insert at end.\n-  __gnu_profile::__insert_top_n(v, 0, 100);\n-  for (int i = 0; i < 12; i++)\n-    if (v[i] != 11 - i)\n-      return INSERT_AT_TAIL;\n-\n-  // Insert in the middle.\n-  __gnu_profile::__insert_top_n(v, 6, 11);\n-  for (int i = 0; i < 6; i++)\n-    if (v[i] != 11 - i)\n-      return INSERT_IN_THE_MIDDLE;\n-  for (int i = 6; i < 13; i++)\n-    if (v[i] != 12 - i)\n-      return INSERT_IN_THE_MIDDLE;\n-\n-  return NO_FAILURES;\n-}\n-\n-static int\n-test_top_n()\n-{\n-  vector<int> v, out;\n-\n-  for (int i = 0; i < 100; i++)\n-    {\n-      v.push_back(100 + i);\n-      v.push_back(100 - i);\n-    }\n-\n-  __gnu_profile::__top_n(v, out, 10);\n-\n-  for (int i = 0; i < 10; i++)\n-    if (out[i] != 199 - i)\n-      return TOP_N;\n-\n-  return NO_FAILURES;\n-}\n-\n-struct test_for_each_helper\n-{\n-  static int sum;\n-  void operator ()(int i) { \n-    sum += i;\n-  }\n-};\n-\n-int test_for_each_helper::sum = 0;\n-\n-static int\n-test_for_each()\n-{\n-  vector<int> v;\n-  test_for_each_helper helper;\n-  int checksum = 0;\n-\n-  for (int i = 0; i < 10; i++)\n-    {\n-      v.push_back(i);\n-      checksum += i;\n-    }\n-\n-  __gnu_profile::__for_each(v.begin(), v.end(), helper);\n-\n-  return helper.sum == checksum ? NO_FAILURES : FOR_EACH;\n-}\n-\n-static int\n-test_remove()\n-{\n-  vector<char> v;\n-\n-  for (int i = 0; i < 10; i++)\n-    v.push_back(' ');\n-  v.push_back('x');\n-  for (int i = 0; i < 10; i++)\n-    v.push_back(' ');\n-  v.push_back('x');\n-\n-  return __gnu_profile::__remove(v.begin(), v.end(), ' ') == v.begin() + 2\n-      ? NO_FAILURES : REMOVE;\n-}\n-\n-int main()\n-{\n-  return test_insert_top_n() | test_top_n() | test_for_each() | test_remove();\n-}"}, {"sha": "7a707e868d586ed7f483a93795c950c7204949a9", "filename": "libstdc++-v3/testsuite/ext/profile/replace_new.cc", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Freplace_new.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d09ca2550da86793e9bcc2820524fc4d6486e74/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Freplace_new.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Freplace_new.cc?ref=0d09ca2550da86793e9bcc2820524fc4d6486e74", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*-\n-\n-// Copyright (C) 2006-2019 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// { dg-require-profile-mode \"\" }\n-\n-#include <vector>\n-#include <testsuite_hooks.h>\n-\n-using std::vector;\n-\n-void* operator new(std::size_t size) THROW(std::bad_alloc)\n-{\n-  void* p = std::malloc(size);\n-  if (!p)\n-    throw std::bad_alloc();\n-  return p;\n-}\n-\n-void* operator new (std::size_t size, const std::nothrow_t&) throw()\n-{\n-  // With _GLIBCXX_PROFILE, the instrumentation of the vector constructor\n-  // will call back into this new operator.\n-  vector<int> v;\n-  return std::malloc(size);\n-}\n-\n-void operator delete(void* p) throw()\n-{\n-  if (p)\n-    std::free(p);\n-}\n-\n-int\n-main() \n-{\n-  vector<int> v;\n-  return 0;\n-}"}, {"sha": "13cc87c80c4f00fde1074d0d27aaef1728c43149", "filename": "libstdc++-v3/testsuite/ext/throw_allocator/deallocate_global.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fthrow_allocator%2Fdeallocate_global.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fthrow_allocator%2Fdeallocate_global.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fthrow_allocator%2Fdeallocate_global.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -31,9 +31,7 @@ typedef std::char_traits<char_t> traits_t;\n typedef __gnu_cxx::throw_allocator_random<char_t> allocator_t;\n typedef std::basic_string<char_t, traits_t, allocator_t> string_t;  \n \n-#ifndef _GLIBCXX_PROFILE\n string_t s(\"bayou bend\");\n-#endif\n \n int main()\n {"}, {"sha": "87a9f0c7334d2eb7cd32c21e1ae89a42e1593879", "filename": "libstdc++-v3/testsuite/ext/throw_allocator/deallocate_local.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fthrow_allocator%2Fdeallocate_local.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fthrow_allocator%2Fdeallocate_local.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fthrow_allocator%2Fdeallocate_local.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -30,12 +30,10 @@ typedef std::basic_string<char_t, traits_t, allocator_t> string_t;\n \n int main()\n {\n-#ifndef _GLIBCXX_PROFILE\n   {\n     string_t s;\n     s += \"bayou bend\";\n   }\n-#endif\n \n   if (__gnu_test::counter::count() != 0)\n     throw std::runtime_error(\"count not zero\");"}, {"sha": "87fbed696edcadc15105eddb2e0034b756ea50f8", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -966,30 +966,6 @@ proc check_v3_target_debug_mode { } {\n     }]\n }\n \n-proc check_v3_target_profile_mode { } {\n-    return [check_v3_target_prop_cached et_profile_mode {\n-\tglobal tool\n-\t# Set up and preprocess a C++ test program that depends\n-\t# on profile mode activated.\n-\tset src profile_mode[pid].cc\n-\n-\tset f [open $src \"w\"]\n-\tputs $f \"#ifndef _GLIBCXX_PROFILE\"\n-\tputs $f \"#  error No profile mode\"\n-\tputs $f \"#endif\"\n-\tclose $f\n-\n-\tset lines [v3_target_compile $src /dev/null preprocess \"\"]\n-\tfile delete $src\n-\n-\tif [string match \"\" $lines] {\n-\t    # No error message, preprocessing succeeded.\n-\t    return 1\n-\t}\n-\treturn 0\n-    }]\n-}\n-\n proc check_v3_target_normal_mode { } {\n     return [check_v3_target_prop_cached et_normal_mode {\n \tglobal tool\n@@ -999,9 +975,7 @@ proc check_v3_target_normal_mode { } {\n \n \tset f [open $src \"w\"]\n \tputs $f \"#include <bits/c++config.h>\"\n-\tputs $f \"#if defined(_GLIBCXX_DEBUG) || \\\\\"\n-\tputs $f \"    defined(_GLIBCXX_PROFILE) || \\\\\"\n-\tputs $f \"    defined(_GLIBCXX_PARALLEL)\"\n+\tputs $f \"#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL)\"\n \tputs $f \"#  error No normal mode\"\n \tputs $f \"#endif\"\n \tclose $f"}, {"sha": "3425b499e3a35a9878e68e113edf00982c3d0593", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/80276.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run { target c++11 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2018-2019 Free Software Foundation, Inc.\n //"}, {"sha": "7bfc3c6886723936c036eeb3d82662a9271e2d11", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/compat.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcompat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcompat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcompat.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-options \"-g -O0\" }\n // { dg-do run }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2014-2019 Free Software Foundation, Inc.\n //"}, {"sha": "7d0a9a21768226465ffd552139f3a0e541ffbcfc", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx11.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run { target c++11 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}, {"sha": "da0b03d99ab7220a75d939ba0684b0de65828556", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx17.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx17.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-options \"-g -O0 -std=gnu++17\" }\n // { dg-do run { target c++17 } }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2014-2019 Free Software Foundation, Inc.\n //"}, {"sha": "123ffddc806440ac33327618fa9bc74c4914ab63", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/debug.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fdebug.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run }\n // { dg-options \"-g -O0 -std=gnu++98\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}, {"sha": "c7902d1d8d00246711d5eefbe973e8e3179f50bc", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/debug_cxx11.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fdebug_cxx11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fdebug_cxx11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fdebug_cxx11.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run { target c++11 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2016-2019 Free Software Foundation, Inc.\n //"}, {"sha": "95ed2517cd14c5165dce90529bc9d0b9db5810dc", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/libfundts.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run { target c++14 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2014-2019 Free Software Foundation, Inc.\n //"}, {"sha": "60dfdc597f32bbfef69775c0fabdad5051b3eb86", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/simple.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -2,7 +2,6 @@\n \n // { dg-do run }\n // { dg-options \"-g -O0 -std=gnu++98\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}, {"sha": "b18f5cc22a9d3ada89068491ed96debac51698a7", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/simple11.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -2,7 +2,6 @@\n \n // { dg-do run { target c++11 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}, {"sha": "2fae1b6fb06a00d968e3ac00cb0438b20d185735", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/whatis.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fwhatis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fwhatis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fwhatis.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run { target c++11 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}, {"sha": "883f0391f4ee132d1e5218d323e0b28b0aa6a4fd", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/whatis2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fwhatis2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544be2beb1fa53dfdd6988418ad3b365c289536d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fwhatis2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fwhatis2.cc?ref=544be2beb1fa53dfdd6988418ad3b365c289536d", "patch": "@@ -1,6 +1,5 @@\n // { dg-do run { target c++11 } }\n // { dg-options \"-g -O0\" }\n-// { dg-skip-if \"\" { *-*-* } { \"-D_GLIBCXX_PROFILE\" } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}]}