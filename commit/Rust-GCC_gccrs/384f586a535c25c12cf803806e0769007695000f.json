{"sha": "384f586a535c25c12cf803806e0769007695000f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg0ZjU4NmE1MzVjMjVjMTJjZjgwMzgwNmUwNzY5MDA3Njk1MDAwZg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2011-01-13T18:04:03Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-01-13T18:04:03Z"}, "message": "re PR fortran/47260 (DLLEXPORT: TREE_PUBLIC for procedures lost between trans-decl.c and tree.c)\n\n2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n            Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/47260\n        * trans-decl.c (gfc_get_extern_function_decl,\n        build_function_decl): Set TREE_PUBLIC/TREE_EXTERNAL before\n        calling decl_attributes.\n\n\nCo-Authored-By: Tobias Burnus <burnus@net-b.de>\n\nFrom-SVN: r168757", "tree": {"sha": "36f23ba5202fa094f4212c3cf0769e20dc440066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f23ba5202fa094f4212c3cf0769e20dc440066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/384f586a535c25c12cf803806e0769007695000f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384f586a535c25c12cf803806e0769007695000f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/384f586a535c25c12cf803806e0769007695000f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384f586a535c25c12cf803806e0769007695000f/comments", "author": null, "committer": null, "parents": [{"sha": "29a63d67791eb9a7bea3c64425ff3b3494968812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a63d67791eb9a7bea3c64425ff3b3494968812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a63d67791eb9a7bea3c64425ff3b3494968812"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "223acd0f633606f6247ed3b318bc856b4f33e0aa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/384f586a535c25c12cf803806e0769007695000f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/384f586a535c25c12cf803806e0769007695000f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=384f586a535c25c12cf803806e0769007695000f", "patch": "@@ -1,3 +1,11 @@\n+2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/47260\n+\t* trans-decl.c (gfc_get_extern_function_decl,\n+\tbuild_function_decl): Set TREE_PUBLIC/TREE_EXTERNAL before\n+\tcalling decl_attributes.\n+\n 2011-01-13  Tobias Burnus  <burnus@net-b.de>\n \t    Mikael Morin  <mikael@gcc.gnu.org>\n "}, {"sha": "254db76b0c5084a6b99a3a6464d45b8e03a0916a", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/384f586a535c25c12cf803806e0769007695000f/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/384f586a535c25c12cf803806e0769007695000f/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=384f586a535c25c12cf803806e0769007695000f", "patch": "@@ -1575,6 +1575,12 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n   fndecl = build_decl (input_location,\n \t\t       FUNCTION_DECL, name, type);\n \n+  /* Initialize DECL_EXTERNAL and TREE_PUBLIC before calling decl_attributes;\n+     TREE_PUBLIC specifies whether a function is globally addressable (i.e.\n+     the the opposite of declaring a function as static in C).  */\n+  DECL_EXTERNAL (fndecl) = 1;\n+  TREE_PUBLIC (fndecl) = 1;\n+\n   attributes = add_attributes_to_decl (sym->attr, NULL_TREE);\n   decl_attributes (&fndecl, attributes, 0);\n \n@@ -1592,12 +1598,6 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n       DECL_CONTEXT (fndecl) = NULL_TREE;\n     }\n \n-  DECL_EXTERNAL (fndecl) = 1;\n-\n-  /* This specifies if a function is globally addressable, i.e. it is\n-     the opposite of declaring static in C.  */\n-  TREE_PUBLIC (fndecl) = 1;\n-\n   /* Set attributes for PURE functions. A call to PURE function in the\n      Fortran 95 sense is both pure and without side effects in the C\n      sense.  */\n@@ -1658,6 +1658,15 @@ build_function_decl (gfc_symbol * sym, bool global)\n \n   attr = sym->attr;\n \n+  /* Initialize DECL_EXTERNAL and TREE_PUBLIC before calling decl_attributes;\n+     TREE_PUBLIC specifies whether a function is globally addressable (i.e.\n+     the the opposite of declaring a function as static in C).  */\n+  DECL_EXTERNAL (fndecl) = 0;\n+\n+  if (!current_function_decl\n+      && !sym->attr.entry_master && !sym->attr.is_main_program)\n+    TREE_PUBLIC (fndecl) = 1;\n+\n   attributes = add_attributes_to_decl (attr, NULL_TREE);\n   decl_attributes (&fndecl, attributes, 0);\n \n@@ -1707,15 +1716,6 @@ build_function_decl (gfc_symbol * sym, bool global)\n   /* Don't call layout_decl for a RESULT_DECL.\n      layout_decl (result_decl, 0);  */\n \n-  /* Set up all attributes for the function.  */\n-  DECL_EXTERNAL (fndecl) = 0;\n-\n-  /* This specifies if a function is globally visible, i.e. it is\n-     the opposite of declaring static in C.  */\n-  if (!current_function_decl\n-      && !sym->attr.entry_master && !sym->attr.is_main_program)\n-    TREE_PUBLIC (fndecl) = 1;\n-\n   /* TREE_STATIC means the function body is defined here.  */\n   TREE_STATIC (fndecl) = 1;\n "}]}