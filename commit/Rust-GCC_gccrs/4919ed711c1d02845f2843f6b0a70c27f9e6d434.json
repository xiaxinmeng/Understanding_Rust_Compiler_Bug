{"sha": "4919ed711c1d02845f2843f6b0a70c27f9e6d434", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkxOWVkNzExYzFkMDI4NDVmMjg0M2Y2YjBhNzBjMjdmOWU2ZDQzNA==", "commit": {"author": {"name": "Stefan Kanthak", "email": "stefan.kanthak@nexgo.de", "date": "2020-11-25T18:36:51Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-25T18:38:46Z"}, "message": "Improve abs with overflow implementations\n\nlibgcc/\n\n\t* libgcc2.c (absvSI2): Simplify/improve implementation by using\n\tbuiltin_add_overflow.\n\t(absvsi2, absvDI2): Likewise.", "tree": {"sha": "b2c45f2a9b36fc5f99cb73928ae70bcd981aa037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c45f2a9b36fc5f99cb73928ae70bcd981aa037"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4919ed711c1d02845f2843f6b0a70c27f9e6d434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4919ed711c1d02845f2843f6b0a70c27f9e6d434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4919ed711c1d02845f2843f6b0a70c27f9e6d434", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4919ed711c1d02845f2843f6b0a70c27f9e6d434/comments", "author": null, "committer": null, "parents": [{"sha": "dfc537e554afa98b42a4b203ffd08c0eddba746e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc537e554afa98b42a4b203ffd08c0eddba746e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfc537e554afa98b42a4b203ffd08c0eddba746e"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "1921d80f6126f67b34a0640d0327c9f1eaee1531", "filename": "libgcc/libgcc2.c", "status": "modified", "additions": 12, "deletions": 30, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4919ed711c1d02845f2843f6b0a70c27f9e6d434/libgcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4919ed711c1d02845f2843f6b0a70c27f9e6d434/libgcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcc2.c?ref=4919ed711c1d02845f2843f6b0a70c27f9e6d434", "patch": "@@ -214,37 +214,25 @@ __negvDI2 (DWtype a)\n Wtype\n __absvSI2 (Wtype a)\n {\n-  Wtype w = a;\n-\n-  if (a < 0)\n-#ifdef L_negvsi2\n-    w = __negvSI2 (a);\n-#else\n-    w = -(UWtype) a;\n+  const Wtype v = 0 - (a < 0);\n+  Wtype w;\n \n-  if (w < 0)\n+  if (__builtin_add_overflow (a, v, &w))\n     abort ();\n-#endif\n \n-   return w;\n+  return v ^ w;\n }\n #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC\n SItype\n __absvsi2 (SItype a)\n {\n-  SItype w = a;\n-\n-  if (a < 0)\n-#ifdef L_negvsi2\n-    w = __negvsi2 (a);\n-#else\n-    w = -(USItype) a;\n+  const SItype v = 0 - (a < 0);\n+  SItype w;\n \n-  if (w < 0)\n+  if (__builtin_add_overflow (a, v, &w))\n     abort ();\n-#endif\n \n-   return w;\n+  return v ^ w;\n }\n #endif /* COMPAT_SIMODE_TRAPPING_ARITHMETIC */\n #endif\n@@ -253,19 +241,13 @@ __absvsi2 (SItype a)\n DWtype\n __absvDI2 (DWtype a)\n {\n-  DWtype w = a;\n-\n-  if (a < 0)\n-#ifdef L_negvdi2\n-    w = __negvDI2 (a);\n-#else\n-    w = -(UDWtype) a;\n+  const DWtype v = 0 - (a < 0);\n+  DWtype w;\n \n-  if (w < 0)\n+  if (__builtin_add_overflow (a, v, &w))\n     abort ();\n-#endif\n \n-  return w;\n+  return v ^ w;\n }\n #endif\n \f"}]}