{"sha": "305aa9e2b1256fb8c170e9ff4832ed728f30a029", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1YWE5ZTJiMTI1NmZiOGMxNzBlOWZmNDgzMmVkNzI4ZjMwYTAyOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-23T15:25:23Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-23T15:25:23Z"}, "message": "Undo most of 9/22 changes\n\nFrom-SVN: r2212", "tree": {"sha": "91c698fb4dc9310eeb1184b1fcf57258fe3e0f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91c698fb4dc9310eeb1184b1fcf57258fe3e0f02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/305aa9e2b1256fb8c170e9ff4832ed728f30a029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305aa9e2b1256fb8c170e9ff4832ed728f30a029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305aa9e2b1256fb8c170e9ff4832ed728f30a029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305aa9e2b1256fb8c170e9ff4832ed728f30a029/comments", "author": null, "committer": null, "parents": [{"sha": "65a6dd9a32d596927c11fef4b265b3e11d0461cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a6dd9a32d596927c11fef4b265b3e11d0461cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a6dd9a32d596927c11fef4b265b3e11d0461cc"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "09d85a4015ca23056454802bed7ee6e6e4510cfa", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305aa9e2b1256fb8c170e9ff4832ed728f30a029/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305aa9e2b1256fb8c170e9ff4832ed728f30a029/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=305aa9e2b1256fb8c170e9ff4832ed728f30a029", "patch": "@@ -1632,8 +1632,10 @@ extern struct mips_frame_info current_frame_info;\n \n    On the MIPS, we must skip the first argument position if we are\n    returning a structure or a union, to account for it's address being\n-   passed in $4.  */\n+   passed in $4.  However, at the current time, this produces a compiler\n+   that can't bootstrap, so comment it out for now.  */\n \n+#if 0\n #define FIRST_PARM_OFFSET(FNDECL)\t\t\t\t\t\\\n   (FNDECL != 0\t\t\t\t\t\t\t\t\\\n    && TREE_TYPE (FNDECL) != 0\t\t\t\t\t\t\\\n@@ -1642,6 +1644,9 @@ extern struct mips_frame_info current_frame_info;\n        || TREE_CODE (TREE_TYPE (TREE_TYPE (FNDECL))) == UNION_TYPE)\t\\\n \t\t? UNITS_PER_WORD\t\t\t\t\t\\\n \t\t: 0)\n+#else\n+#define FIRST_PARM_OFFSET(FNDECL) 0\n+#endif\n \n /* When a parameter is passed in a register, stack space is still\n    allocated for it.  For the MIPS, stack space must be allocated, cf\n@@ -1651,7 +1656,7 @@ extern struct mips_frame_info current_frame_info;\n    in register. In case an argument list is of form GF used registers\n    are a0 (a2,a3), but we should push over a1...  */\n \n-#define REG_PARM_STACK_SPACE(FNDECL) (4*UNITS_PER_WORD) - FIRST_PARM_OFFSET(FNDECL)\n+#define REG_PARM_STACK_SPACE(FNDECL) ((4*UNITS_PER_WORD) - FIRST_PARM_OFFSET (FNDECL))\n \n /* Define this if it is the responsibility of the caller to\n    allocate the area reserved for arguments passed in registers. "}]}