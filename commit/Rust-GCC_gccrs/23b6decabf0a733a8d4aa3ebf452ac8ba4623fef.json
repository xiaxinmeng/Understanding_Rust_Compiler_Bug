{"sha": "23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNiNmRlY2FiZjBhNzMzYThkNGFhM2ViZjQ1MmFjOGJhNDYyM2ZlZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T15:32:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T15:32:47Z"}, "message": "[multiple changes]\n\n2011-08-05  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-comutr.adb, a-cimutr.adb, a-cbmutr.adb (Read): do not use T'Valid\n\tto check count, check sign of value instead.\n\t* a-comutr.adb, a-cimutr.adb (Write): return immediately if tree empty\n\t(Copy_Subtree): allocate copy of source element\n\t(Equal_Subtree): compare elements, not access objects\n\n2011-08-05  Vincent Celier  <celier@adacore.com>\n\n\t* gnat_ugn.texi: Fix VMS alternative.\n\nFrom-SVN: r177457", "tree": {"sha": "f8390ea2012871d27ab62dacec81c19158fa933a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8390ea2012871d27ab62dacec81c19158fa933a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/comments", "author": null, "committer": null, "parents": [{"sha": "24911a5088aa3e48ff4e0cf0f731957b9cbfc28f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24911a5088aa3e48ff4e0cf0f731957b9cbfc28f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24911a5088aa3e48ff4e0cf0f731957b9cbfc28f"}], "stats": {"total": 75, "additions": 57, "deletions": 18}, "files": [{"sha": "061010c533fead3b1ba941adb1db0cf6f316d179", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "patch": "@@ -1,3 +1,15 @@\n+2011-08-05  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-comutr.adb, a-cimutr.adb, a-cbmutr.adb (Read): do not use T'Valid\n+\tto check count, check sign of value instead.\n+\t* a-comutr.adb, a-cimutr.adb (Write): return immediately if tree empty\n+\t(Copy_Subtree): allocate copy of source element\n+\t(Equal_Subtree): compare elements, not access objects\n+\n+2011-08-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix VMS alternative.\n+\n 2011-08-05  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch11.adb: Add comment."}, {"sha": "1392a4fdc177a300c50bd17c6f3f91b22fd2b1c1", "filename": "gcc/ada/a-cbmutr.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.adb?ref=23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "patch": "@@ -2117,20 +2117,26 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n \n       NN : Tree_Node_Array renames Container.Nodes;\n \n-      Total_Count, Read_Count : Count_Type;\n+      Total_Count : Count_Type'Base;\n+      --  Value read from the stream that says how many elements follow\n+\n+      Read_Count : Count_Type'Base;\n+      --  Actual number of elements read from the stream\n \n       -------------------\n       -- Read_Children --\n       -------------------\n \n       procedure Read_Children (Subtree : Count_Type) is\n-         Count : Count_Type;  -- number of child subtrees\n-         CC    : Children_Type;\n+         Count : Count_Type'Base;\n+         --  number of child subtrees\n+\n+         CC : Children_Type;\n \n       begin\n          Count_Type'Read (Stream, Count);\n \n-         if not Count'Valid then  -- Is this check necessary???\n+         if Count < 0 then\n             raise Program_Error with \"attempt to read from corrupt stream\";\n          end if;\n \n@@ -2180,7 +2186,7 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n \n       Count_Type'Read (Stream, Total_Count);\n \n-      if not Total_Count'Valid then  -- Is this check necessary???\n+      if Total_Count < 0 then\n          raise Program_Error with \"attempt to read from corrupt stream\";\n       end if;\n "}, {"sha": "d5736fc3ffe855fbe2f8327b38c70439c6cb809f", "filename": "gcc/ada/a-cimutr.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fa-cimutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fa-cimutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.adb?ref=23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "patch": "@@ -556,8 +556,10 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       Target : out Tree_Node_Access;\n       Count  : in out Count_Type)\n    is\n+      E : constant Element_Access := new Element_Type'(Source.Element.all);\n+\n    begin\n-      Target := new Tree_Node_Type'(Element => Source.Element,\n+      Target := new Tree_Node_Type'(Element => E,\n                                     Parent  => Parent,\n                                     others  => <>);\n \n@@ -886,7 +888,7 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       Right_Subtree : Tree_Node_Access) return Boolean\n    is\n    begin\n-      if Left_Subtree.Element /= Right_Subtree.Element then\n+      if Left_Subtree.Element.all /= Right_Subtree.Element.all then\n          return False;\n       end if;\n \n@@ -1638,8 +1640,11 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       function Read_Subtree\n         (Parent : Tree_Node_Access) return Tree_Node_Access;\n \n-      Total_Count : Count_Type;\n-      Read_Count  : Count_Type;\n+      Total_Count : Count_Type'Base;\n+      --  Value read from the stream that says how many elements follow\n+\n+      Read_Count : Count_Type'Base;\n+      --  Actual number of elements read from the stream\n \n       -------------------\n       -- Read_Children --\n@@ -1650,15 +1655,15 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n          pragma Assert (Subtree.Children.First = null);\n          pragma Assert (Subtree.Children.Last = null);\n \n-         Count : Count_Type;\n+         Count : Count_Type'Base;\n          --  Number of child subtrees\n \n          C : Children_Type;\n \n       begin\n          Count_Type'Read (Stream, Count);\n \n-         if not Count'Valid then  -- Is this check necessary???\n+         if Count < 0 then\n             raise Program_Error with \"attempt to read from corrupt stream\";\n          end if;\n \n@@ -1712,7 +1717,7 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n \n       Count_Type'Read (Stream, Total_Count);\n \n-      if not Total_Count'Valid then  -- Is this check necessary???\n+      if Total_Count < 0 then\n          raise Program_Error with \"attempt to read from corrupt stream\";\n       end if;\n \n@@ -2383,6 +2388,11 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n \n    begin\n       Count_Type'Write (Stream, Container.Count);\n+\n+      if Container.Count = 0 then\n+         return;\n+      end if;\n+\n       Write_Children (Root_Node (Container));\n    end Write;\n "}, {"sha": "dfe50c18f4e4938dc8178583e7b6100678f75f8d", "filename": "gcc/ada/a-comutr.adb", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fa-comutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fa-comutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.adb?ref=23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "patch": "@@ -1681,7 +1681,11 @@ package body Ada.Containers.Multiway_Trees is\n       function Read_Subtree\n         (Parent : Tree_Node_Access) return Tree_Node_Access;\n \n-      Total_Count, Read_Count : Count_Type;\n+      Total_Count : Count_Type'Base;\n+      --  Value read from the stream that says how many elements follow\n+\n+      Read_Count : Count_Type'Base;\n+      --  Actual number of elements read from the stream\n \n       -------------------\n       -- Read_Children --\n@@ -1692,13 +1696,15 @@ package body Ada.Containers.Multiway_Trees is\n          pragma Assert (Subtree.Children.First = null);\n          pragma Assert (Subtree.Children.Last = null);\n \n-         Count : Count_Type;  -- number of child subtrees\n-         C     : Children_Type;\n+         Count : Count_Type'Base;\n+         --  Number of child subtrees\n+\n+         C : Children_Type;\n \n       begin\n          Count_Type'Read (Stream, Count);\n \n-         if not Count'Valid then  -- Is this check necessary???\n+         if Count < 0 then\n             raise Program_Error with \"attempt to read from corrupt stream\";\n          end if;\n \n@@ -1749,7 +1755,7 @@ package body Ada.Containers.Multiway_Trees is\n \n       Count_Type'Read (Stream, Total_Count);\n \n-      if not Total_Count'Valid then  -- Is this check necessary???\n+      if Total_Count < 0 then\n          raise Program_Error with \"attempt to read from corrupt stream\";\n       end if;\n \n@@ -2428,6 +2434,11 @@ package body Ada.Containers.Multiway_Trees is\n \n    begin\n       Count_Type'Write (Stream, Container.Count);\n+\n+      if Container.Count = 0 then\n+         return;\n+      end if;\n+\n       Write_Children (Root_Node (Container));\n    end Write;\n "}, {"sha": "7f2d655540e380c7ce1265cbc740bf4a7d1d1dd9", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b6decabf0a733a8d4aa3ebf452ac8ba4623fef/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=23b6decabf0a733a8d4aa3ebf452ac8ba4623fef", "patch": "@@ -6312,7 +6312,7 @@ example:\n \n @item ^C^COMMENTS1^ (single space)\n @emph{Check comments, single space.}\n-This is identical to @code{^c^COMMENTS} except that only one space\n+This is identical to @code{^c^COMMENTS^} except that only one space\n is required following the @code{--} of a comment instead of two.\n \n @item ^d^DOS_LINE_ENDINGS^"}]}