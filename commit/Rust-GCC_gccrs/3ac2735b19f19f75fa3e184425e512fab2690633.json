{"sha": "3ac2735b19f19f75fa3e184425e512fab2690633", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FjMjczNWIxOWYxOWY3NWZhM2UxODQ0MjVlNTEyZmFiMjY5MDYzMw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-03-28T23:47:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-28T23:47:41Z"}, "message": "sendmsg.c (__objc_block_forward): Add braces for return value if INVISIBLE_STRUCT_RETURN.\n\n        * objc/sendmsg.c (__objc_block_forward): Add braces for return\n        value if INVISIBLE_STRUCT_RETURN.\n\nFrom-SVN: r18886", "tree": {"sha": "d45de7935f0989d659eef2338483b6d3008bf383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d45de7935f0989d659eef2338483b6d3008bf383"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ac2735b19f19f75fa3e184425e512fab2690633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac2735b19f19f75fa3e184425e512fab2690633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac2735b19f19f75fa3e184425e512fab2690633", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac2735b19f19f75fa3e184425e512fab2690633/comments", "author": null, "committer": null, "parents": [{"sha": "f2b147f7117a972a7ed713ff8c51f823293d433a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b147f7117a972a7ed713ff8c51f823293d433a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b147f7117a972a7ed713ff8c51f823293d433a"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "3b3b5f10df3d84e34784d4d0bc4096a6d9347146", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac2735b19f19f75fa3e184425e512fab2690633/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac2735b19f19f75fa3e184425e512fab2690633/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ac2735b19f19f75fa3e184425e512fab2690633", "patch": "@@ -1,5 +1,8 @@\n Sun Mar 29 00:42:21 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* objc/sendmsg.c (__objc_block_forward): Add braces for return\n+\tvalue if INVISIBLE_STRUCT_RETURN.\n+\n \t* pa.c (arith_double_operand): Fix parens.\n \n \t* haifa-sched.c (print_pattern): Correct arg to sprintf."}, {"sha": "cf8e47aabafd34ee57bc2861ac4baee732189b48", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac2735b19f19f75fa3e184425e512fab2690633/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac2735b19f19f75fa3e184425e512fab2690633/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=3ac2735b19f19f75fa3e184425e512fab2690633", "patch": "@@ -28,6 +28,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"runtime.h\"\n #include \"sarray.h\"\n #include \"encoding.h\"\n+#include \"runtime-info.h\"\n \n /* this is how we hack STRUCT_VALUE to be 1 or 0 */\n #define gen_rtx(args...) 1\n@@ -76,7 +77,11 @@ __objc_get_forward_imp (SEL sel)\n {\n   const char *t = sel->sel_types;\n \n-  if (t && (*t == '[' || *t == '(' || *t == '{'))\n+  if (t && (*t == '[' || *t == '(' || *t == '{')\n+#ifdef OBJC_MAX_STRUCT_BY_VALUE\n+    && objc_sizeof_type(t) > OBJC_MAX_STRUCT_BY_VALUE\n+#endif\n+      )\n     return (IMP)__objc_block_forward;\n   else if (t && (*t == 'f' || *t == 'd'))\n     return (IMP)__objc_double_forward;\n@@ -89,8 +94,7 @@ __inline__\n IMP\n get_imp (Class class, SEL sel)\n {\n-  IMP impl;\n-  void* res = sarray_get (class->dtable, (size_t) sel->sel_id);\n+  void* res = sarray_get_safe (class->dtable, (size_t) sel->sel_id);\n   if (res == 0)\n     {\n       /* Not a valid method */\n@@ -133,7 +137,7 @@ __objc_responds_to (id object, SEL sel)\n     }\n \n   /* Get the method from the dispatch table */\n-  res = sarray_get (object->class_pointer->dtable, (size_t) sel->sel_id);\n+  res = sarray_get_safe (object->class_pointer->dtable, (size_t) sel->sel_id);\n   return (res != 0);\n }\n \n@@ -147,7 +151,8 @@ objc_msg_lookup(id receiver, SEL op)\n   IMP result;\n   if(receiver)\n     {\n-      result = sarray_get(receiver->class_pointer->dtable, (sidx)op->sel_id);\n+      result = sarray_get_safe (receiver->class_pointer->dtable, \n+\t\t\t\t(sidx)op->sel_id);\n       if (result == 0)\n \t{\n \t  /* Not a valid method */\n@@ -308,8 +313,8 @@ __objc_send_initialize(Class class)\n /* Walk on the methods list of class and install the methods in the reverse\n    order of the lists. Since methods added by categories are before the methods\n    of class in the methods list, this allows categories to substitute methods\n-   declared in class. However if more than one category replace the same method\n-   nothing is guarranteed about what method will be used.\n+   declared in class. However if more than one category replaces the same\n+   method nothing is guaranteed about what method will be used.\n    Assumes that __objc_runtime_mutex is locked down. */\n static void\n __objc_install_methods_in_dtable (Class class, MethodList_t method_list)\n@@ -336,7 +341,6 @@ static void\n __objc_install_dispatch_table_for_class (Class class)\n {\n   Class super;\n-  int counter;\n \n   /* If the class has not yet had it's class links resolved, we must \n      re-compute all class links */\n@@ -539,6 +543,12 @@ __objc_block_forward (id rcv, SEL op, ...)\n   res = __objc_forward (rcv, op, args);\n   if (res)\n     __builtin_return (res);\n+  else\n+#if INVISIBLE_STRUCT_RETURN\n+    return (__big) {{0, 0, 0, 0, 0, 0, 0, 0}};\n+#else\n+    return nil;\n+#endif\n }\n \n \n@@ -593,6 +603,8 @@ __objc_forward (id object, SEL sel, arglist_t args)\n     /* The object doesn't respond to doesNotRecognize: or error:;  Therefore,\n        a default action is taken. */\n     objc_error (object, OBJC_ERR_UNIMPLEMENTED, \"%s\\n\", msg);\n+\n+    return 0;\n   }\n }\n \n@@ -612,13 +624,13 @@ __objc_print_dtable_stats()\n \t );\n \n   printf(\"arrays: %d = %ld bytes\\n\", narrays, \n-\t (int)narrays*sizeof(struct sarray));\n+\t (long)narrays*sizeof(struct sarray));\n   total += narrays*sizeof(struct sarray);\n   printf(\"buckets: %d = %ld bytes\\n\", nbuckets, \n-\t (int)nbuckets*sizeof(struct sbucket));\n+\t (long)nbuckets*sizeof(struct sbucket));\n   total += nbuckets*sizeof(struct sbucket);\n \n-  printf(\"idxtables: %d = %ld bytes\\n\", idxsize, (int)idxsize*sizeof(void*));\n+  printf(\"idxtables: %d = %ld bytes\\n\", idxsize, (long)idxsize*sizeof(void*));\n   total += idxsize*sizeof(void*);\n   printf(\"-----------------------------------\\n\");\n   printf(\"total: %d bytes\\n\", total);"}]}