{"sha": "29c3218618ef6177dc33871b26c8fbd9b21eabe1", "node_id": "C_kwDOANBUbNoAKDI5YzMyMTg2MThlZjYxNzdkYzMzODcxYjI2YzhmYmQ5YjIxZWFiZTE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-05T10:57:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-05T10:57:30Z"}, "message": "openmp: Fix up finish_omp_target_clauses [PR108286]\n\nThe comment in the loop says that we shouldn't add a map clause if such\na clause exists already, but the loop was actually using OMP_CLAUSE_DECL\non any clause.  Target construct can have various clauses which don't\nhave OMP_CLAUSE_DECL at all (e.g. nowait, device or if) or clause\nwhere it means something different (e.g. privatization clauses, allocate,\ndepend).\n\nSo, only check OMP_CLAUSE_DECL on OMP_CLAUSE_MAP clauses.\n\n2023-01-05  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/108286\n\t* semantics.cc (finish_omp_target_clauses): Ignore clauses other than\n\tOMP_CLAUSE_MAP.\n\n\t* testsuite/libgomp.c++/pr108286.C: New test.", "tree": {"sha": "0affb30a38270beec5af10756d87bc83e047db90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0affb30a38270beec5af10756d87bc83e047db90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29c3218618ef6177dc33871b26c8fbd9b21eabe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c3218618ef6177dc33871b26c8fbd9b21eabe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c3218618ef6177dc33871b26c8fbd9b21eabe1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c3218618ef6177dc33871b26c8fbd9b21eabe1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ce780a497eb3e5efe7a79ea5f21f8dd6858f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ce780a497eb3e5efe7a79ea5f21f8dd6858f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ce780a497eb3e5efe7a79ea5f21f8dd6858f7f"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "ef5bf2430b14ead292d3defdeaabe781bca4fb7a", "filename": "gcc/cp/semantics.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c3218618ef6177dc33871b26c8fbd9b21eabe1/gcc%2Fcp%2Fsemantics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c3218618ef6177dc33871b26c8fbd9b21eabe1/gcc%2Fcp%2Fsemantics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.cc?ref=29c3218618ef6177dc33871b26c8fbd9b21eabe1", "patch": "@@ -9825,7 +9825,9 @@ finish_omp_target_clauses (location_t loc, tree body, tree *clauses_ptr)\n \n \tfor (tree c = *clauses_ptr; c; c = OMP_CLAUSE_CHAIN (c))\n \t  {\n-\t    /* If map(this->ptr[:N] already exists, avoid creating another\n+\t    if (OMP_CLAUSE_CODE (c) != OMP_CLAUSE_MAP)\n+\t      continue;\n+\t    /* If map(this->ptr[:N]) already exists, avoid creating another\n \t       such map.  */\n \t    tree decl = OMP_CLAUSE_DECL (c);\n \t    if ((TREE_CODE (decl) == INDIRECT_REF"}, {"sha": "ee88c2f9fd09b88687309028f50e98f3cb7c3194", "filename": "libgomp/testsuite/libgomp.c++/pr108286.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c3218618ef6177dc33871b26c8fbd9b21eabe1/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr108286.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c3218618ef6177dc33871b26c8fbd9b21eabe1/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr108286.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr108286.C?ref=29c3218618ef6177dc33871b26c8fbd9b21eabe1", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/108286\n+// { dg-do run }\n+\n+struct S {\n+  int\n+  foo ()\n+  {\n+    int res = 0;\n+#pragma omp target map(size, ptr[:size], res) nowait\n+    res = ptr[size - 1];\n+#pragma omp taskwait\n+    return res;\n+  }\n+\n+  unsigned size;\n+  int *ptr;\n+};\n+\n+int\n+main ()\n+{\n+  S s;\n+  int buf[5];\n+  s.size = 5;\n+  s.ptr = buf;\n+  buf[4] = 42;\n+  if (s.foo () != 42)\n+    __builtin_abort ();\n+}"}]}