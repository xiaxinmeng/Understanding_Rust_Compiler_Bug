{"sha": "3a7086cc51984f7b1f5b0d709500382eb16875e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3MDg2Y2M1MTk4NGY3YjFmNWIwZDcwOTUwMDM4MmViMTY4NzVlMg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-08-11T20:24:16Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:24:16Z"}, "message": "Detect commutative reductions in all the scops before rewriting out of SSA all the other scalar dependences.\n\n2010-06-12  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (build_scop_bbs): Not static anymore.\n\t(rewrite_reductions_out_of_ssa): Same.\n\t(rewrite_commutative_reductions_out_of_ssa): Same.\n\t(build_poly_scop): Do not call these functions.\n\t* graphite-sese-to-poly.h (build_poly_scop): Declared.\n\t(rewrite_reductions_out_of_ssa): Declared.\n\t(rewrite_commutative_reductions_out_of_ssa): Declared.\n\t* graphite.c (graphite_transform_loops): Call on every scop\n\trewrite_commutative_reductions_out_of_ssa before calling\n\trewrite_reductions_out_of_ssa and build_scop_bbs.\n\nFrom-SVN: r163116", "tree": {"sha": "d0cb67f308415d8102e0a5fbb919071f3a5e86cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0cb67f308415d8102e0a5fbb919071f3a5e86cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a7086cc51984f7b1f5b0d709500382eb16875e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7086cc51984f7b1f5b0d709500382eb16875e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7086cc51984f7b1f5b0d709500382eb16875e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7086cc51984f7b1f5b0d709500382eb16875e2/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61ca46ce9b4343929106dae5f06f65362663dac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61ca46ce9b4343929106dae5f06f65362663dac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61ca46ce9b4343929106dae5f06f65362663dac7"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "e00a437e1c5eec412c1c5068de49e594e44c5f0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a7086cc51984f7b1f5b0d709500382eb16875e2", "patch": "@@ -1,3 +1,16 @@\n+2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (build_scop_bbs): Not static anymore.\n+\t(rewrite_reductions_out_of_ssa): Same.\n+\t(rewrite_commutative_reductions_out_of_ssa): Same.\n+\t(build_poly_scop): Do not call these functions.\n+\t* graphite-sese-to-poly.h (build_poly_scop): Declared.\n+\t(rewrite_reductions_out_of_ssa): Declared.\n+\t(rewrite_commutative_reductions_out_of_ssa): Declared.\n+\t* graphite.c (graphite_transform_loops): Call on every scop\n+\trewrite_commutative_reductions_out_of_ssa before calling\n+\trewrite_reductions_out_of_ssa and build_scop_bbs.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (dot_deps): Make system call to dotty run"}, {"sha": "c74fce07209f217f36e49e31dd98aed4ed29d6f9", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=3a7086cc51984f7b1f5b0d709500382eb16875e2", "patch": "@@ -1,3 +1,16 @@\n+2010-06-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (build_scop_bbs): Not static anymore.\n+\t(rewrite_reductions_out_of_ssa): Same.\n+\t(rewrite_commutative_reductions_out_of_ssa): Same.\n+\t(build_poly_scop): Do not call these functions.\n+\t* graphite-sese-to-poly.h (build_poly_scop): Declared.\n+\t(rewrite_reductions_out_of_ssa): Declared.\n+\t(rewrite_commutative_reductions_out_of_ssa): Declared.\n+\t* graphite.c (graphite_transform_loops): Call on every scop\n+\trewrite_commutative_reductions_out_of_ssa before calling\n+\trewrite_reductions_out_of_ssa and build_scop_bbs.\n+\n 2010-06-12  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (dot_deps): Make system call to dotty run"}, {"sha": "969ef2b09e03100a9f2157a56f4873d0c869f25d", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=3a7086cc51984f7b1f5b0d709500382eb16875e2", "patch": "@@ -462,7 +462,7 @@ build_scop_bbs_1 (scop_p scop, sbitmap visited, basic_block bb, sbitmap reductio\n \n /* Gather the basic blocks belonging to the SCOP.  */\n \n-static void\n+void\n build_scop_bbs (scop_p scop, sbitmap reductions)\n {\n   sbitmap visited = sbitmap_alloc (last_basic_block);\n@@ -2399,7 +2399,7 @@ rewrite_cross_bb_scalar_deps (sese region, gimple_stmt_iterator *gsi)\n \n /* Rewrite out of SSA all the reduction phi nodes of SCOP.  */\n \n-static void\n+void\n rewrite_reductions_out_of_ssa (scop_p scop)\n {\n   basic_block bb;\n@@ -2578,7 +2578,7 @@ detect_commutative_reduction_arg (tree lhs, gimple stmt, tree arg,\n }\n \n /* Detect commutative and associative scalar reductions starting at\n-   the STMT.  Return the phi node of the reduction cycle, or NULL.  */\n+   STMT.  Return the phi node of the reduction cycle, or NULL.  */\n \n static gimple\n detect_commutative_reduction_assign (gimple stmt, VEC (gimple, heap) **in,\n@@ -2666,7 +2666,7 @@ initial_value_for_loop_phi (gimple phi)\n }\n \n /* Detect commutative and associative scalar reductions starting at\n-   the loop closed phi node CLOSE_PHI.  Return the phi node of the\n+   the loop closed phi node STMT.  Return the phi node of the\n    reduction cycle, or NULL.  */\n \n static gimple\n@@ -2874,7 +2874,7 @@ rewrite_commutative_reductions_out_of_ssa_loop (loop_p loop,\n \n /* Rewrites all the commutative reductions from SCOP out of SSA.  */\n \n-static void\n+void\n rewrite_commutative_reductions_out_of_ssa (sese region, sbitmap reductions)\n {\n   loop_iterator li;\n@@ -2973,14 +2973,8 @@ void\n build_poly_scop (scop_p scop)\n {\n   sese region = SCOP_REGION (scop);\n-  sbitmap reductions = sbitmap_alloc (last_basic_block * 2);\n   graphite_dim_t max_dim;\n \n-  sbitmap_zero (reductions);\n-  rewrite_commutative_reductions_out_of_ssa (region, reductions);\n-  rewrite_reductions_out_of_ssa (scop);\n-  build_scop_bbs (scop, reductions);\n-  sbitmap_free (reductions);\n \n   /* FIXME: This restriction is needed to avoid a problem in CLooG.\n      Once CLooG is fixed, remove this guard.  Anyways, it makes no"}, {"sha": "2e0cc0814ad96b5f1c8fa9af69dc495e2dc397f5", "filename": "gcc/graphite-sese-to-poly.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2Fgraphite-sese-to-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2Fgraphite-sese-to-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.h?ref=3a7086cc51984f7b1f5b0d709500382eb16875e2", "patch": "@@ -30,5 +30,8 @@ struct base_alias_pair\n \n void build_poly_scop (scop_p);\n void check_poly_representation (scop_p);\n+void rewrite_commutative_reductions_out_of_ssa (sese, sbitmap);\n+void rewrite_reductions_out_of_ssa (scop_p);\n+void build_scop_bbs (scop_p, sbitmap);\n \n #endif"}, {"sha": "bd47cf7039dfd4d573ffb92f628909f1611fbc86", "filename": "gcc/graphite.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7086cc51984f7b1f5b0d709500382eb16875e2/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=3a7086cc51984f7b1f5b0d709500382eb16875e2", "patch": "@@ -253,6 +253,7 @@ graphite_transform_loops (void)\n   bool need_cfg_cleanup_p = false;\n   VEC (scop_p, heap) *scops = NULL;\n   htab_t bb_pbb_mapping;\n+  sbitmap reductions;\n \n   if (!graphite_initialize ())\n     return;\n@@ -266,6 +267,19 @@ graphite_transform_loops (void)\n     }\n \n   bb_pbb_mapping = htab_create (10, bb_pbb_map_hash, eq_bb_pbb_map, free);\n+  reductions = sbitmap_alloc (last_basic_block * 2);\n+  sbitmap_zero (reductions);\n+\n+  for (i = 0; VEC_iterate (scop_p, scops, i, scop); i++)\n+    rewrite_commutative_reductions_out_of_ssa (SCOP_REGION (scop), reductions);\n+\n+  for (i = 0; VEC_iterate (scop_p, scops, i, scop); i++)\n+    {\n+      rewrite_reductions_out_of_ssa (scop);\n+      build_scop_bbs (scop, reductions);\n+    }\n+\n+  sbitmap_free (reductions);\n \n   for (i = 0; VEC_iterate (scop_p, scops, i, scop); i++)\n     build_poly_scop (scop);"}]}