{"sha": "82220036f6aff4fce8fc563a13bc591b0b10bfd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyMjAwMzZmNmFmZjRmY2U4ZmM1NjNhMTNiYzU5MWIwYjEwYmZkOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-11-13T17:32:46Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-11-13T17:32:46Z"}, "message": "mips.md (call_internal): Pass curr_insn to mips_split_call.\n\ngcc/\n2010-11-03  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/mips/mips.md (call_internal): Pass curr_insn to\n\tmips_split_call.\n\t(call_internal_direct): Ditto.\n\t(call_value_internal): Ditto.\n\t(call_value_internal_direct): Ditto.\n\t(call_value_multiple_internal): Ditto.\n\t* config/mips/mips.c (mips_split_call): Do not copy\n\tCALL_INSN_FUNCTION_USAGE here.\n\nFrom-SVN: r166717", "tree": {"sha": "4191e520d92f7dcf0478189250280512dd97d500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4191e520d92f7dcf0478189250280512dd97d500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82220036f6aff4fce8fc563a13bc591b0b10bfd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82220036f6aff4fce8fc563a13bc591b0b10bfd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82220036f6aff4fce8fc563a13bc591b0b10bfd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82220036f6aff4fce8fc563a13bc591b0b10bfd9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98824c6fc45b6262b807091ec68193decef6ba0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98824c6fc45b6262b807091ec68193decef6ba0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98824c6fc45b6262b807091ec68193decef6ba0c"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "ee276116dea0243e4ef00d6af5ada6e2390473b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82220036f6aff4fce8fc563a13bc591b0b10bfd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82220036f6aff4fce8fc563a13bc591b0b10bfd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82220036f6aff4fce8fc563a13bc591b0b10bfd9", "patch": "@@ -1,3 +1,14 @@\n+2010-11-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/mips/mips.md (call_internal): Pass curr_insn to\n+\tmips_split_call.\n+\t(call_internal_direct): Ditto.\n+\t(call_value_internal): Ditto.\n+\t(call_value_internal_direct): Ditto.\n+\t(call_value_multiple_internal): Ditto.\n+\t* config/mips/mips.c (mips_split_call): Do not copy\n+\tCALL_INSN_FUNCTION_USAGE here.\n+\n 2010-11-13  Mingming Sun  <mingm.sun@gmail.com>\n \n \t* doc/invoke.texi (MIPS Options): Add loongson3a processor."}, {"sha": "242cc27f47c187a06a38143cefbc126f1ba8c2ab", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82220036f6aff4fce8fc563a13bc591b0b10bfd9/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82220036f6aff4fce8fc563a13bc591b0b10bfd9/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=82220036f6aff4fce8fc563a13bc591b0b10bfd9", "patch": "@@ -6520,11 +6520,7 @@ mips_expand_call (enum mips_call_type type, rtx result, rtx addr,\n void\n mips_split_call (rtx insn, rtx call_pattern)\n {\n-  rtx new_insn;\n-\n-  new_insn = emit_call_insn (call_pattern);\n-  CALL_INSN_FUNCTION_USAGE (new_insn)\n-    = copy_rtx (CALL_INSN_FUNCTION_USAGE (insn));\n+  emit_call_insn (call_pattern);\n   if (!find_reg_note (insn, REG_NORETURN, 0))\n     /* Pick a temporary register that is suitable for both MIPS16 and\n        non-MIPS16 code.  $4 and $5 are used for returning complex double"}, {"sha": "2379eeb861e1e76d56beabc17cb8e68bb0ba859a", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82220036f6aff4fce8fc563a13bc591b0b10bfd9/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82220036f6aff4fce8fc563a13bc591b0b10bfd9/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=82220036f6aff4fce8fc563a13bc591b0b10bfd9", "patch": "@@ -6051,18 +6051,16 @@\n ;;     But once we generate the separate insns, it becomes obvious that\n ;;     $gp is not live on entry to the call.\n ;;\n-;; ??? The operands[2] = insn check is a hack to make the original insn\n-;; available to the splitter.\n (define_insn_and_split \"call_internal\"\n   [(call (mem:SI (match_operand 0 \"call_insn_operand\" \"c,S\"))\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:SI RETURN_ADDR_REGNUM))]\n   \"\"\n   { return TARGET_SPLIT_CALLS ? \"#\" : MIPS_CALL (\"jal\", operands, 0, 1); }\n-  \"reload_completed && TARGET_SPLIT_CALLS && (operands[2] = insn)\"\n+  \"reload_completed && TARGET_SPLIT_CALLS\"\n   [(const_int 0)]\n {\n-  mips_split_call (operands[2], gen_call_split (operands[0], operands[1]));\n+  mips_split_call (curr_insn, gen_call_split (operands[0], operands[1]));\n   DONE;\n }\n   [(set_attr \"jal\" \"indirect,direct\")])\n@@ -6087,10 +6085,10 @@\n    (clobber (reg:SI RETURN_ADDR_REGNUM))]\n   \"\"\n   { return TARGET_SPLIT_CALLS ? \"#\" : MIPS_CALL (\"jal\", operands, 0, -1); }\n-  \"reload_completed && TARGET_SPLIT_CALLS && (operands[2] = insn)\"\n+  \"reload_completed && TARGET_SPLIT_CALLS\"\n   [(const_int 0)]\n {\n-  mips_split_call (operands[2],\n+  mips_split_call (curr_insn,\n \t\t   gen_call_direct_split (operands[0], operands[1]));\n   DONE;\n }\n@@ -6126,10 +6124,10 @@\n    (clobber (reg:SI RETURN_ADDR_REGNUM))]\n   \"\"\n   { return TARGET_SPLIT_CALLS ? \"#\" : MIPS_CALL (\"jal\", operands, 1, 2); }\n-  \"reload_completed && TARGET_SPLIT_CALLS && (operands[3] = insn)\"\n+  \"reload_completed && TARGET_SPLIT_CALLS\"\n   [(const_int 0)]\n {\n-  mips_split_call (operands[3],\n+  mips_split_call (curr_insn,\n \t\t   gen_call_value_split (operands[0], operands[1],\n \t\t\t\t\t operands[2]));\n   DONE;\n@@ -6155,10 +6153,10 @@\n    (clobber (reg:SI RETURN_ADDR_REGNUM))]\n   \"\"\n   { return TARGET_SPLIT_CALLS ? \"#\" : MIPS_CALL (\"jal\", operands, 1, -1); }\n-  \"reload_completed && TARGET_SPLIT_CALLS && (operands[3] = insn)\"\n+  \"reload_completed && TARGET_SPLIT_CALLS\"\n   [(const_int 0)]\n {\n-  mips_split_call (operands[3],\n+  mips_split_call (curr_insn,\n \t\t   gen_call_value_direct_split (operands[0], operands[1],\n \t\t\t\t\t\toperands[2]));\n   DONE;\n@@ -6187,10 +6185,10 @@\n    (clobber (reg:SI RETURN_ADDR_REGNUM))]\n   \"\"\n   { return TARGET_SPLIT_CALLS ? \"#\" : MIPS_CALL (\"jal\", operands, 1, 2); }\n-  \"reload_completed && TARGET_SPLIT_CALLS && (operands[4] = insn)\"\n+  \"reload_completed && TARGET_SPLIT_CALLS\"\n   [(const_int 0)]\n {\n-  mips_split_call (operands[4],\n+  mips_split_call (curr_insn,\n \t\t   gen_call_value_multiple_split (operands[0], operands[1],\n \t\t\t\t\t\t  operands[2], operands[3]));\n   DONE;"}]}