{"sha": "ad0d71b531e7d06b96e1b3675ba99845f43f766d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQwZDcxYjUzMWU3ZDA2Yjk2ZTFiMzY3NWJhOTk4NDVmNDNmNzY2ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-13T16:21:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-13T16:21:32Z"}, "message": "[multiple changes]\n\n2013-10-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* scos.ads: Minor documentation clarification.\n\n2013-10-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c (CLOCK_RT_Ada): Set to CLOCK_MONOTONIC when\n\tbuilding on AIX 5.3 or later, and to CLOCK_REALTIME on older\n\tversions of AIX.\n\t* init.c (pthread_condattr_setclock): Remove now useless weak symbol.\n\t* thread.c(__gnat_pthread_condattr_setup): Remove bogus AIX 5.2\n\tcompatibility shim.\n\t* s-osinte-aix.ads(clock_id_t): Fix C mapping (this is a 64-bit\n\ttype).\n\t(clock_gettime): Import from C runtime library.\n\t* s-osinte-aix.adb (clock_gettime): Remove bogus emulation body,\n\tthis routine is provided by the system in current supported\n\tversions of AIX.\n\n2013-10-13  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb: Minor reformatting.\n\n2013-10-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): For a function whose return type\n\tis incomplete, do not replace the type with the full view if the\n\ttype is a limited view.  In that case the full view appears in a\n\tdifferent unit, and the back-end will retrieve it at the proper\n\telaboration point.\n\n2013-10-13  Yannick Moy  <moy@adacore.com>\n\n\t* exp_spark.adb (Expand_SPARK_Call): Do not introduce temporaries for\n\tactuals.\n\nFrom-SVN: r203503", "tree": {"sha": "17541ff65910eb69bb15a9689634fda36c44df38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17541ff65910eb69bb15a9689634fda36c44df38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad0d71b531e7d06b96e1b3675ba99845f43f766d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad0d71b531e7d06b96e1b3675ba99845f43f766d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad0d71b531e7d06b96e1b3675ba99845f43f766d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad0d71b531e7d06b96e1b3675ba99845f43f766d/comments", "author": null, "committer": null, "parents": [{"sha": "cf895a0159fe915e00213fa700fbe8a1bc838b7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf895a0159fe915e00213fa700fbe8a1bc838b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf895a0159fe915e00213fa700fbe8a1bc838b7a"}], "stats": {"total": 170, "additions": 67, "deletions": 103}, "files": [{"sha": "6afa9022280cd7ad3f45c6864bffa156865f9b24", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -1,3 +1,39 @@\n+2013-10-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* scos.ads: Minor documentation clarification.\n+\n+2013-10-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c (CLOCK_RT_Ada): Set to CLOCK_MONOTONIC when\n+\tbuilding on AIX 5.3 or later, and to CLOCK_REALTIME on older\n+\tversions of AIX.\n+\t* init.c (pthread_condattr_setclock): Remove now useless weak symbol.\n+\t* thread.c(__gnat_pthread_condattr_setup): Remove bogus AIX 5.2\n+\tcompatibility shim.\n+\t* s-osinte-aix.ads(clock_id_t): Fix C mapping (this is a 64-bit\n+\ttype).\n+\t(clock_gettime): Import from C runtime library.\n+\t* s-osinte-aix.adb (clock_gettime): Remove bogus emulation body,\n+\tthis routine is provided by the system in current supported\n+\tversions of AIX.\n+\n+2013-10-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb: Minor reformatting.\n+\n+2013-10-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): For a function whose return type\n+\tis incomplete, do not replace the type with the full view if the\n+\ttype is a limited view.  In that case the full view appears in a\n+\tdifferent unit, and the back-end will retrieve it at the proper\n+\telaboration point.\n+\n+2013-10-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_spark.adb (Expand_SPARK_Call): Do not introduce temporaries for\n+\tactuals.\n+\n 2013-10-13  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb: in Ada 2012 access_to_function types can have"}, {"sha": "7851f0999cfddd38804a24f20ee58d9d45b288eb", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -26,7 +26,6 @@\n with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Exp_Ch4;  use Exp_Ch4;\n-with Exp_Ch6;  use Exp_Ch6;\n with Exp_Dbug; use Exp_Dbug;\n with Exp_Util; use Exp_Util;\n with Sem_Aux;  use Sem_Aux;\n@@ -43,9 +42,7 @@ package body Exp_SPARK is\n \n    procedure Expand_SPARK_Call (N : Node_Id);\n    --  This procedure contains common processing for function and procedure\n-   --  calls:\n-   --    * expansion of actuals to introduce necessary temporaries\n-   --    * replacement of renaming by subprogram renamed\n+   --  calls: replacement of renaming by subprogram renamed\n \n    procedure Expand_SPARK_N_Object_Renaming_Declaration (N : Node_Id);\n    --  Perform name evaluation for a renamed object\n@@ -106,7 +103,6 @@ package body Exp_SPARK is\n    procedure Expand_SPARK_Call (N : Node_Id) is\n       Call_Node   : constant Node_Id := N;\n       Parent_Subp : Entity_Id;\n-      Subp        : Entity_Id;\n \n    begin\n       --  Ignore if previous error\n@@ -120,35 +116,27 @@ package body Exp_SPARK is\n       --  Call using access to subprogram with explicit dereference\n \n       if Nkind (Name (Call_Node)) = N_Explicit_Dereference then\n-         Subp        := Etype (Name (Call_Node));\n          Parent_Subp := Empty;\n \n       --  Case of call to simple entry, where the Name is a selected component\n       --  whose prefix is the task, and whose selector name is the entry name\n \n       elsif Nkind (Name (Call_Node)) = N_Selected_Component then\n-         Subp        := Entity (Selector_Name (Name (Call_Node)));\n          Parent_Subp := Empty;\n \n       --  Case of call to member of entry family, where Name is an indexed\n       --  component, with the prefix being a selected component giving the\n       --  task and entry family name, and the index being the entry index.\n \n       elsif Nkind (Name (Call_Node)) = N_Indexed_Component then\n-         Subp        := Entity (Selector_Name (Prefix (Name (Call_Node))));\n          Parent_Subp := Empty;\n \n       --  Normal case\n \n       else\n-         Subp        := Entity (Name (Call_Node));\n-         Parent_Subp := Alias (Subp);\n+         Parent_Subp := Alias (Entity (Name (Call_Node)));\n       end if;\n \n-      --  Various expansion activities for actuals are carried out\n-\n-      Expand_Actuals (N, Subp);\n-\n       --  If the subprogram is a renaming, replace it in the call with the name\n       --  of the actual subprogram being called.\n "}, {"sha": "8c9ceb0c9179bcbb0aa91834940fe9578c0ff882", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -2956,6 +2956,7 @@ package body Freeze is\n \n                      if Is_Incomplete_Type (F_Type)\n                        and then Present (Full_View (F_Type))\n+                       and then not From_With_Type (F_Type)\n                      then\n                         F_Type := Full_View (F_Type);\n                         Set_Etype (Formal, F_Type);\n@@ -3134,10 +3135,15 @@ package body Freeze is\n                      R_Type := Etype (E);\n \n                      --  AI05-0151: the return type may have been incomplete\n-                     --  at the point of declaration.\n+                     --  at the point of declaration. Replace it with the full\n+                     --  view, unless the current type is a limited view. In\n+                     --  that case the full view is in a different unit, and\n+                     --  gigi finds the non-limited view after the other unit\n+                     --  is elaborated.\n \n                      if Ekind (R_Type) = E_Incomplete_Type\n                        and then Present (Full_View (R_Type))\n+                       and then not From_With_Type (R_Type)\n                      then\n                         R_Type := Full_View (R_Type);\n                         Set_Etype (E, R_Type);"}, {"sha": "c8de26b6498f85b527e7f4130e857135bcecd6af", "filename": "gcc/ada/init.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -226,19 +226,6 @@ nanosleep (struct timestruc_t *Rqtp, struct timestruc_t *Rmtp)\n \n #endif /* _AIXVERSION_430 */\n \n-/* Version of AIX before 5.3 don't have pthread_condattr_setclock:\n- * supply it as a weak symbol here so that if linking on a 5.3 or newer\n- * machine, we get the real one.\n- */\n-\n-#ifndef _AIXVERSION_530\n-#pragma weak pthread_condattr_setclock\n-int\n-pthread_condattr_setclock (pthread_condattr_t *attr, clockid_t cl) {\n-  return 0;\n-}\n-#endif\n-\n static void\n __gnat_error_handler (int sig,\n \t\t      siginfo_t *si ATTRIBUTE_UNUSED,"}, {"sha": "2357d61d699da88ab9d7bbc5443adb68698dbe63", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -1407,11 +1407,15 @@ CND(CLOCK_FASTEST, \"Fastest clock\")\n #endif\n CND(CLOCK_THREAD_CPUTIME_ID, \"Thread CPU clock\")\n \n-\n-#if defined(__FreeBSD__) || defined(_AIX)\n+#if defined(__FreeBSD__) || (defined(_AIX) && defined(_AIXVERSION_530))\n /** On these platforms use system provided monotonic clock instead of\n- ** the default CLOCK_REALTIME. Note: We then need to set up cond var\n- ** attributes appropriately (see thread.c).\n+ ** the default CLOCK_REALTIME. We then need to set up cond var attributes\n+ ** appropriately (see thread.c).\n+ **\n+ ** Note that AIX 5.2 does not support CLOCK_MONOTONIC timestamps for\n+ ** pthread_cond_timedwait (and does not have pthread_condattr_setclock),\n+ ** hence the conditionalization on AIX version above). _AIXVERSION_530\n+ ** is defined in AIX 5.3 and more recent versions.\n  **/\n # define CLOCK_RT_Ada \"CLOCK_MONOTONIC\"\n "}, {"sha": "2d5f160ca5f9baa8abf212b87f2e089315a7a3b4", "filename": "gcc/ada/s-osinte-aix.adb", "status": "modified", "additions": 1, "deletions": 43, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fs-osinte-aix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fs-osinte-aix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.adb?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1997-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -99,48 +99,6 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   -------------------\n-   -- clock_gettime --\n-   -------------------\n-\n-   function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec)\n-      return     int\n-   is\n-      pragma Unreferenced (clock_id);\n-\n-      --  Older AIX don't have clock_gettime, so use gettimeofday\n-\n-      use Interfaces;\n-\n-      type timeval is array (1 .. 2) of C.long;\n-\n-      procedure timeval_to_duration\n-        (T    : not null access timeval;\n-         sec  : not null access C.long;\n-         usec : not null access C.long);\n-      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n-\n-      Micro  : constant := 10**6;\n-      sec    : aliased C.long;\n-      usec   : aliased C.long;\n-      TV     : aliased timeval;\n-      Result : int;\n-\n-      function gettimeofday\n-        (Tv : access timeval;\n-         Tz : System.Address := System.Null_Address) return int;\n-      pragma Import (C, gettimeofday, \"gettimeofday\");\n-\n-   begin\n-      Result := gettimeofday (TV'Access, System.Null_Address);\n-      pragma Assert (Result = 0);\n-      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n-      tp.all := To_Timespec (Duration (sec) + Duration (usec) / Micro);\n-      return Result;\n-   end clock_gettime;\n-\n    -----------------\n    -- sched_yield --\n    -----------------"}, {"sha": "6fce65ffd23aa10f194ce263ebf1ad6f06499ac5", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,6 +41,7 @@\n with Ada.Unchecked_Conversion;\n \n with Interfaces.C;\n+with Interfaces.C.Extensions;\n \n package System.OS_Interface is\n    pragma Preelaborate;\n@@ -55,6 +56,7 @@ package System.OS_Interface is\n    subtype int            is Interfaces.C.int;\n    subtype short          is Interfaces.C.short;\n    subtype long           is Interfaces.C.long;\n+   subtype long_long      is Interfaces.C.Extensions.long_long;\n    subtype unsigned       is Interfaces.C.unsigned;\n    subtype unsigned_short is Interfaces.C.unsigned_short;\n    subtype unsigned_long  is Interfaces.C.unsigned_long;\n@@ -197,11 +199,12 @@ package System.OS_Interface is\n \n    type timespec is private;\n \n-   type clockid_t is new int;\n+   type clockid_t is new long_long;\n \n    function clock_gettime\n      (clock_id : clockid_t;\n       tp       : access timespec) return int;\n+   pragma Import (C, clock_gettime, \"clock_gettime\");\n \n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);"}, {"sha": "6efc5cebcc9aa072d1ef12b7189de1c627c6ab55", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -367,11 +367,12 @@ package SCOs is\n       Last : Boolean         := False;\n \n       Pragma_Sloc : Source_Ptr := No_Location;\n-      --  For the statement SCO for a pragma, or for any expression SCO nested\n-      --  in a pragma Debug/Assert/PPC, location of PRAGMA token (used for\n-      --  control of SCO output, value not recorded in ALI file). For the\n-      --  decision SCO for an aspect, or for any expression SCO nested in an\n-      --  aspect, location of aspect identifier token (likewise).\n+      --  For the decision SCO of a pragma, or for the decision SCO of any\n+      --  expression nested in a pragma Debug/Assert/PPC, location of PRAGMA\n+      --  token (used for control of SCO output, value not recorded in ALI\n+      --  file). Similarly, for the decision SCO of an aspect, or for the\n+      --  decision SCO of any expression nested in an aspect, location of\n+      --  aspect identifier token.\n \n       Pragma_Aspect_Name : Name_Id := No_Name;\n       --  For the SCO for a pragma/aspect, gives the pragma/apsect name"}, {"sha": "77805d1d45ff8c7bd90fa51866b46ba2364dc9ce", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -4052,7 +4052,7 @@ package body Sem_Ch3 is\n       --  type with constraints. In this case the entity has been introduced\n       --  in the private declaration.\n \n-      --  Finally this happens in some complex cases  when validity checks are\n+      --  Finally this happens in some complex cases when validity checks are\n       --  enabled, where the same subtype declaration may be analyzed twice.\n       --  This can happen if the subtype is created by the pre-analysis of\n       --  an attribute tht gives the range of a loop statement, and the loop"}, {"sha": "31309e05b6e1237c2630c98ebe95bf971b7dfdfe", "filename": "gcc/ada/thread.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fthread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad0d71b531e7d06b96e1b3675ba99845f43f766d/gcc%2Fada%2Fthread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fthread.c?ref=ad0d71b531e7d06b96e1b3675ba99845f43f766d", "patch": "@@ -40,27 +40,8 @@\n # include <pthread.h>\n # include <time.h>\n \n-#ifndef _AIXVERSION_530\n-/* We use the same runtime library for AIX 5.2 and 5.3, but pthread_condattr_\n- * setclock exists only on the latter, so for the former provide a dummy\n- * implementation (declared below, weak symbol defined in init.c).\n- *\n- * Note: this means that under AIX 5.2 we'll be using CLOCK_MONOTONIC\n- * timestamps from clock_gettime() as arguments to pthread_cond_timedwait,\n- * which expects a CLOCK_REALTIME value, which is technically wrong, but\n- * inocuous in practice on that particular platform since both clocks happen\n- * to use close epochs.\n- */\n-\n-extern int pthread_condattr_setclock (pthread_condattr_t *attr, clockid_t cl);\n-#endif\n-\n int\n __gnat_pthread_condattr_setup(pthread_condattr_t *attr) {\n-/*\n- * If using a clock other than CLOCK_REALTIME for the Ada Monotonic_Clock,\n- * the corresponding clock id must be set for condition variables.\n- */\n   return pthread_condattr_setclock (attr, CLOCK_RT_Ada);\n }\n "}]}