{"sha": "71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFjOWQyYjA4OGM5ZDQwOWExYmQzYjUwNTIzYWM0NjIzYTViZjFiNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-18T21:13:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-18T21:13:06Z"}, "message": "vrp: Fix operator_trunc_mod::op1_range [PR97888]\n\nAs mentioned in the PR, in (x % y) >= 0 && y >= 0, we can't deduce\nx's range to be x >= 0, as e.g. -7 % 7 is 0.  But we can deduce it\nfrom (x % y) > 0.  The patch also fixes up the comments.\n\n2020-11-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/91029\n\tPR tree-optimization/97888\n\t* range-op.cc (operator_trunc_mod::op1_range): Only set op1\n\trange to >= 0 if lhs is > 0, rather than >= 0.  Fix up comments.\n\n\t* gcc.dg/pr91029.c: Add comment with PR number.\n\t(f2): Use > 0 rather than >= 0.\n\t* gcc.c-torture/execute/pr97888-1.c: New test.\n\t* gcc.c-torture/execute/pr97888-2.c: New test.", "tree": {"sha": "dbc66d21164a5d8b90a15b1bd222d78b50d0cd2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbc66d21164a5d8b90a15b1bd222d78b50d0cd2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84e0549ce206357dcd384cf8db14322c686d1eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84e0549ce206357dcd384cf8db14322c686d1eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84e0549ce206357dcd384cf8db14322c686d1eb2"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "6be60073d19fe71ed5055455e344a02a90bc064a", "filename": "gcc/range-op.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "patch": "@@ -2692,13 +2692,13 @@ operator_trunc_mod::op1_range (irange &r, tree type,\n   if (TYPE_SIGN (type) == SIGNED && wi::ge_p (op2.lower_bound (), 0, SIGNED))\n     {\n       unsigned prec = TYPE_PRECISION (type);\n-      // if a & b >=0 , then a >= 0.\n-      if (wi::ge_p (lhs.lower_bound (), 0, SIGNED))\n+      // if a % b > 0 , then a >= 0.\n+      if (wi::gt_p (lhs.lower_bound (), 0, SIGNED))\n \t{\n \t  r = value_range (type, wi::zero (prec), wi::max_value (prec, SIGNED));\n \t  return true;\n \t}\n-      // if a & b < 0 , then a <= 0.\n+      // if a % b < 0 , then a <= 0.\n       if (wi::lt_p (lhs.upper_bound (), 0, SIGNED))\n \t{\n \t  r = value_range (type, wi::min_value (prec, SIGNED), wi::zero (prec));"}, {"sha": "21fb6fc5f0a2bfc37bd73dd741ba4156015b6c22", "filename": "gcc/testsuite/gcc.c-torture/execute/pr97888-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97888-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97888-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97888-1.c?ref=71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "patch": "@@ -0,0 +1,24 @@\n+/* PR tree-optimization/97888 */\n+\n+int a = 1, c = 4, d, e;\n+\n+int\n+main ()\n+{\n+  int f = -173;\n+  int b;\n+  for (b = 0; b < 10; b++)\n+    {\n+      int g = f % (~0 && a), h = 0, i = 0;\n+      if (g)\n+\t__builtin_unreachable ();\n+      if (c)\n+\th = f;\n+      if (h > -173)\n+\te = d / i;\n+      f = h;\n+    }\n+  if (f != -173)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "4f06ce6950cf5bd4da6e30e69d9fb34488d1bcab", "filename": "gcc/testsuite/gcc.c-torture/execute/pr97888-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97888-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97888-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97888-2.c?ref=71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/97888 */\n+\n+__attribute__((noipa)) void\n+foo (int i)\n+{\n+  if ((i % 7) >= 0)\n+    {\n+      if (i >= 0)\n+        __builtin_abort ();\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  foo (-7);\n+  foo (-21);\n+  return 0;\n+}"}, {"sha": "4904764e1ee7110bd11471ddc5aab1a6f4171c28", "filename": "gcc/testsuite/gcc.dg/pr91029.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr91029.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr91029.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr91029.c?ref=71c9d2b088c9d409a1bd3b50523ac4623a5bf1b4", "patch": "@@ -1,3 +1,4 @@\n+/* PR tree-optimization/91029 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-evrp\" } */\n \n@@ -16,7 +17,7 @@ void f1 (int i)\n \n void f2 (int i)\n {\n-  if ((i % 7) >= 0)\n+  if ((i % 7) > 0)\n     {\n       xx = (i < 0);\n       if (xx)"}]}