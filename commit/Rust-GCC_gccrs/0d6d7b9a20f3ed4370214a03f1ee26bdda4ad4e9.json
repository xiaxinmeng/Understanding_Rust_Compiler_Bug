{"sha": "0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ2ZDdiOWEyMGYzZWQ0MzcwMjE0YTAzZjFlZTI2YmRkYTRhZDRlOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-10T21:27:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-10T21:27:52Z"}, "message": "re PR rtl-optimization/59754 ([ree.c] Incorrect merge while working with vector registers)\n\n\tPR rtl-optimization/59754\n\t* ree.c (combine_reaching_defs): Disallow !SCALAR_INT_MODE_P\n\tmodes in the REGNO != REGNO case.\n\nFrom-SVN: r206542", "tree": {"sha": "cad3c186a3ee0f3eed1611177a46ae7210b7b3ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cad3c186a3ee0f3eed1611177a46ae7210b7b3ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "110132c1311c283a0d8add6e4457c7f262e79a9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110132c1311c283a0d8add6e4457c7f262e79a9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110132c1311c283a0d8add6e4457c7f262e79a9a"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "89f60a2ea1f7af820c841f39297209dc6c528071", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9", "patch": "@@ -1,3 +1,9 @@\n+2014-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/59754\n+\t* ree.c (combine_reaching_defs): Disallow !SCALAR_INT_MODE_P\n+\tmodes in the REGNO != REGNO case.\n+\n 2014-01-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def: Fix pasto for VPKSDUS."}, {"sha": "01ccd6996266eff643984cb1e75e1f660fcb7924", "filename": "gcc/ree.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=0d6d7b9a20f3ed4370214a03f1ee26bdda4ad4e9", "patch": "@@ -702,6 +702,18 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n       if (state->modified[INSN_UID (cand->insn)].kind != EXT_MODIFIED_NONE)\n \treturn false;\n \n+      /* Transformation of\n+\t (set (reg1) (expression))\n+\t (set (reg2) (any_extend (reg1)))\n+\t into\n+\t (set (reg2) (any_extend (expression)))\n+\t (set (reg1) (reg2))\n+\t is only valid for scalar integral modes, as it relies on the low\n+\t subreg of reg1 to have the value of (expression), which is not true\n+\t e.g. for vector modes.  */\n+      if (!SCALAR_INT_MODE_P (GET_MODE (SET_DEST (PATTERN (cand->insn)))))\n+\treturn false;\n+\n       /* There's only one reaching def.  */\n       rtx def_insn = state->defs_list[0];\n "}]}