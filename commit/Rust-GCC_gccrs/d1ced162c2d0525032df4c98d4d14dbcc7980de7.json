{"sha": "d1ced162c2d0525032df4c98d4d14dbcc7980de7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjZWQxNjJjMmQwNTI1MDMyZGY0Yzk4ZDRkMTRkYmNjNzk4MGRlNw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-07-22T10:25:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-22T10:25:32Z"}, "message": "s-stchop.adb, [...]: Make sure sources obey short-circuit style rule.\n\n2009-07-22  Robert Dewar  <dewar@adacore.com>\n\n\t* s-stchop.adb, a-direct.adb, a-ztexio.adb, gnatchop.adb, prj-proc.adb,\n\tmake.adb, s-regpat.adb, ali-util.adb, a-ngcefu.adb, prep.adb,\n\ts-tassta.adb, a-tifiio.adb, a-textio.adb, prj.adb, uintp.adb,\n\ts-valrea.adb, a-ngelfu.adb, prepcomp.adb, sinput-l.adb, vms_conv.adb,\n\terrout.adb, g-alleve.adb, repinfo.adb, a-wtedit.adb, ali.adb,\n\ta-witeio.adb, prj-dect.adb, prj-nmsc.adb, sinput-c.adb, binde.adb,\n\ts-regexp.adb, s-imgrea.adb, a-teioed.adb, errutil.adb, prj-util.adb,\n\ta-ztedit.adb, gnatls.adb, prj-conf.adb, bcheck.adb, s-scaval.adb,\n\terroutc.adb, osint.adb, a-strfix.adb, s-fileio.adb: Make sure sources\n\tobey short-circuit style rule.\n\nFrom-SVN: r149921", "tree": {"sha": "01d9b239998961b74425ecccd67bdd82369dfd29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01d9b239998961b74425ecccd67bdd82369dfd29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1ced162c2d0525032df4c98d4d14dbcc7980de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ced162c2d0525032df4c98d4d14dbcc7980de7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ced162c2d0525032df4c98d4d14dbcc7980de7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ced162c2d0525032df4c98d4d14dbcc7980de7/comments", "author": null, "committer": null, "parents": [{"sha": "ac3cbee587c9d65ba8d5be751c8c74ad9ba4c930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3cbee587c9d65ba8d5be751c8c74ad9ba4c930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac3cbee587c9d65ba8d5be751c8c74ad9ba4c930"}], "stats": {"total": 428, "additions": 231, "deletions": 197}, "files": [{"sha": "12490366235b31ad0eae20e3a26149b8288f1ac0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1,3 +1,16 @@\n+2009-07-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-stchop.adb, a-direct.adb, a-ztexio.adb, gnatchop.adb, prj-proc.adb,\n+\tmake.adb, s-regpat.adb, ali-util.adb, a-ngcefu.adb, prep.adb,\n+\ts-tassta.adb, a-tifiio.adb, a-textio.adb, prj.adb, uintp.adb,\n+\ts-valrea.adb, a-ngelfu.adb, prepcomp.adb, sinput-l.adb, vms_conv.adb,\n+\terrout.adb, g-alleve.adb, repinfo.adb, a-wtedit.adb, ali.adb,\n+\ta-witeio.adb, prj-dect.adb, prj-nmsc.adb, sinput-c.adb, binde.adb,\n+\ts-regexp.adb, s-imgrea.adb, a-teioed.adb, errutil.adb, prj-util.adb,\n+\ta-ztedit.adb, gnatls.adb, prj-conf.adb, bcheck.adb, s-scaval.adb,\n+\terroutc.adb, osint.adb, a-strfix.adb, s-fileio.adb: Make sure sources\n+\tobey short-circuit style rule.\n+\n 2009-07-20  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Record_Representation_Clause): Use \"and then\""}, {"sha": "d38745fbd8bde8bc8036c70e64706ae2327ad8f8", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -982,7 +982,7 @@ package body Ada.Directories is\n       then\n          raise Name_Error with \"old file \"\"\" & Old_Name & \"\"\" does not exist\";\n \n-      elsif Is_Regular_File (New_Name) or Is_Directory (New_Name) then\n+      elsif Is_Regular_File (New_Name) or else Is_Directory (New_Name) then\n          raise Use_Error with\n            \"new name \"\"\" & New_Name\n            & \"\"\" designates a file that already exists\";"}, {"sha": "edcdb5a722c4d44b6e2985f88f876b25cf9bd26c", "filename": "gcc/ada/a-ngcefu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ngcefu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ngcefu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcefu.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -357,8 +357,8 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n       then\n          Result := Log_Two + Log (X); -- may have wrong sign\n \n-         if (Re (X) < 0.0 and Re (Result) > 0.0)\n-           or else (Re (X) > 0.0 and Re (Result) < 0.0)\n+         if (Re (X) < 0.0 and then Re (Result) > 0.0)\n+           or else (Re (X) > 0.0 and then Re (Result) < 0.0)\n          then\n             Set_Re (Result, -Re (Result));\n          end if;"}, {"sha": "ef9aadd43060e0164ac93294ae10868e03bdf0c4", "filename": "gcc/ada/a-ngelfu.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ngelfu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ngelfu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -602,7 +602,7 @@ package body Ada.Numerics.Generic_Elementary_Functions is\n \n       T := Float_Type'Base'Remainder (X, Cycle);\n \n-      if T = 0.0 or abs T = 0.5 * Cycle then\n+      if T = 0.0 or else abs T = 0.5 * Cycle then\n          raise Constraint_Error;\n \n       elsif abs T < Sqrt_Epsilon then"}, {"sha": "5e5118ace31afaa83edea85d71f80fc272324d19", "filename": "gcc/ada/a-strfix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-strfix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-strfix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strfix.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -466,7 +466,7 @@ package body Ada.Strings.Fixed is\n       By     : String) return String\n    is\n    begin\n-      if Low > Source'Last + 1 or High < Source'First - 1 then\n+      if Low > Source'Last + 1 or else High < Source'First - 1 then\n          raise Index_Error;\n       end if;\n "}, {"sha": "e2408a4519482ade630decea4a5638abfbdd8c1a", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -313,7 +313,8 @@ package body Ada.Text_IO.Editing is\n \n       for J in reverse Attrs.Start_Of_Int .. Attrs.End_Of_Int loop\n          while Answer (Position) /= '9'\n-           and Answer (Position) /= Pic.Floater\n+                 and then\n+               Answer (Position) /= Pic.Floater\n          loop\n             if Answer (Position) = '_' then\n                Answer (Position) := Separator_Character;\n@@ -560,7 +561,7 @@ package body Ada.Text_IO.Editing is\n             Last     := Pic.Radix_Position + 1;\n \n             for J in Last .. Answer'Last loop\n-               if Answer (J) = '9' or Answer (J) = Pic.Floater then\n+               if Answer (J) = '9' or else Answer (J) = Pic.Floater then\n                   Answer (J) := Rounded (Position);\n \n                   if Rounded (Position) /= '0' then\n@@ -694,7 +695,7 @@ package body Ada.Text_IO.Editing is\n \n       --  Now get rid of Blank_when_Zero and complete Star fill\n \n-      if Zero and Pic.Blank_When_Zero then\n+      if Zero and then Pic.Blank_When_Zero then\n \n          --  Value is zero, and blank it\n \n@@ -711,7 +712,7 @@ package body Ada.Text_IO.Editing is\n \n          return String'(1 .. Last => ' ');\n \n-      elsif Zero and Pic.Star_Fill then\n+      elsif Zero and then Pic.Star_Fill then\n          Last := Answer'Last;\n \n          if Dollar then\n@@ -2032,7 +2033,7 @@ package body Ada.Text_IO.Editing is\n                Pic.Picture.Expanded (Index) := 'C';\n                Skip;\n \n-               if Look = 'R' or Look = 'r' then\n+               if Look = 'R' or else Look = 'r' then\n                   Pic.Second_Sign := Index;\n                   Pic.Picture.Expanded (Index) := 'R';\n                   Skip;\n@@ -2048,7 +2049,7 @@ package body Ada.Text_IO.Editing is\n                Pic.Picture.Expanded (Index) := 'D';\n                Skip;\n \n-               if Look = 'B' or Look = 'b' then\n+               if Look = 'B' or else Look = 'b' then\n                   Pic.Second_Sign := Index;\n                   Pic.Picture.Expanded (Index) := 'B';\n                   Skip;\n@@ -2433,11 +2434,12 @@ package body Ada.Text_IO.Editing is\n          --  requested by the user and no '*'.\n \n          Pic.Blank_When_Zero :=\n-           (Computed_BWZ or Pic.Blank_When_Zero) and not Pic.Star_Fill;\n+           (Computed_BWZ or else Pic.Blank_When_Zero)\n+             and then not Pic.Star_Fill;\n \n          --  Star fill if '*' and no '9'\n \n-         Pic.Star_Fill := Pic.Star_Fill and Computed_BWZ;\n+         Pic.Star_Fill := Pic.Star_Fill and then Computed_BWZ;\n \n          if not At_End then\n             Set_State (Reject);"}, {"sha": "b3a98fcb3ec31a9aab352c8c9e68ffd60f1591a3", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1917,7 +1917,7 @@ package body Ada.Text_IO is\n             --  up for such files, so we assume an implicit LM in this case.\n \n             loop\n-               exit when ch = LM or ch = EOF;\n+               exit when ch = LM or else ch = EOF;\n                ch := Getc (File);\n             end loop;\n          end if;"}, {"sha": "73ebc006251e7b48c5b95e3661093af777140e56", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -291,8 +291,9 @@ package body Ada.Text_IO.Fixed_IO is\n \n    Exact : constant Boolean :=\n             Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-             or Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small)\n-             or Num'Small >= 10.0**Max_Digits;\n+              or else Float'Floor (1.0 / Num'Small) =\n+                                Float'Ceiling (1.0 / Num'Small)\n+              or else Num'Small >= 10.0**Max_Digits;\n    --  True iff a numerator and denominator can be calculated such that\n    --  their ratio exactly represents the small of Num.\n \n@@ -464,7 +465,7 @@ package body Ada.Text_IO.Fixed_IO is\n \n       begin\n          if Last = To'First - 1 then\n-            if X /= 0 or Pos <= 0 then\n+            if X /= 0 or else Pos <= 0 then\n \n                --  Before outputting first digit, include leading space,\n                --  possible minus sign and, if the first digit is fractional,"}, {"sha": "e877405820f2d5da8ef0ae6ccecd367456484df6", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1614,7 +1614,7 @@ package body Ada.Wide_Text_IO is\n             --  up for such files, so we assume an implicit LM in this case.\n \n             loop\n-               exit when ch = LM or ch = EOF;\n+               exit when ch = LM or else ch = EOF;\n                ch := Getc (File);\n             end loop;\n          end if;"}, {"sha": "dbe09a9df153032c435533bc3542dfb307057058", "filename": "gcc/ada/a-wtedit.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -486,7 +486,8 @@ package body Ada.Wide_Text_IO.Editing is\n       for J in reverse Attrs.Start_Of_Int .. Attrs.End_Of_Int loop\n \n          while Answer (Position) /= '9'\n-           and Answer (Position) /= Pic.Floater\n+                 and then\n+               Answer (Position) /= Pic.Floater\n          loop\n             if Answer (Position) = '_' then\n                Answer (Position) := Separator_Character;\n@@ -728,7 +729,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n             for J in Last .. Answer'Last loop\n \n-               if Answer (J) = '9' or Answer (J) = Pic.Floater then\n+               if Answer (J) = '9' or else Answer (J) = Pic.Floater then\n                   Answer (J) := To_Wide (Rounded (Position));\n \n                   if Rounded (Position) /= '0' then\n@@ -856,7 +857,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n       --  Now get rid of Blank_when_Zero and complete Star fill\n \n-      if Zero and Pic.Blank_When_Zero then\n+      if Zero and then Pic.Blank_When_Zero then\n \n          --  Value is zero, and blank it\n \n@@ -873,7 +874,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n          return Wide_String'(1 .. Last => ' ');\n \n-      elsif Zero and Pic.Star_Fill then\n+      elsif Zero and then Pic.Star_Fill then\n          Last := Answer'Last;\n \n          if Dollar then\n@@ -2084,7 +2085,7 @@ package body Ada.Wide_Text_IO.Editing is\n                Pic.Picture.Expanded (Index) := 'C';\n                Skip;\n \n-               if Look = 'R' or Look = 'r' then\n+               if Look = 'R' or else Look = 'r' then\n                   Pic.Second_Sign := Index;\n                   Pic.Picture.Expanded (Index) := 'R';\n                   Skip;\n@@ -2100,7 +2101,7 @@ package body Ada.Wide_Text_IO.Editing is\n                Pic.Picture.Expanded (Index) := 'D';\n                Skip;\n \n-               if Look = 'B' or Look = 'b' then\n+               if Look = 'B' or else Look = 'b' then\n                   Pic.Second_Sign := Index;\n                   Pic.Picture.Expanded (Index) := 'B';\n                   Skip;\n@@ -2469,14 +2470,15 @@ package body Ada.Wide_Text_IO.Editing is\n          end case;\n \n          --  Blank when zero either if the PIC does not contain a '9' or if\n-         --  requested by the user and no '*'\n+         --  requested by the user and no '*'.\n \n          Pic.Blank_When_Zero :=\n-           (Computed_BWZ or Pic.Blank_When_Zero) and not Pic.Star_Fill;\n+           (Computed_BWZ or else Pic.Blank_When_Zero)\n+             and then not Pic.Star_Fill;\n \n          --  Star fill if '*' and no '9'\n \n-         Pic.Star_Fill := Pic.Star_Fill and Computed_BWZ;\n+         Pic.Star_Fill := Pic.Star_Fill and then Computed_BWZ;\n \n          if not At_End then\n             Set_State (Reject);"}, {"sha": "555e66491efc72796946e4834c6b773785924abd", "filename": "gcc/ada/a-ztedit.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -487,7 +487,8 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       for J in reverse Attrs.Start_Of_Int .. Attrs.End_Of_Int loop\n \n          while Answer (Position) /= '9'\n-           and Answer (Position) /= Pic.Floater\n+                 and then\n+               Answer (Position) /= Pic.Floater\n          loop\n             if Answer (Position) = '_' then\n                Answer (Position) := Separator_Character;\n@@ -729,7 +730,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n             for J in Last .. Answer'Last loop\n \n-               if Answer (J) = '9' or Answer (J) = Pic.Floater then\n+               if Answer (J) = '9' or else Answer (J) = Pic.Floater then\n                   Answer (J) := To_Wide (Rounded (Position));\n \n                   if Rounded (Position) /= '0' then\n@@ -857,7 +858,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n       --  Now get rid of Blank_when_Zero and complete Star fill\n \n-      if Zero and Pic.Blank_When_Zero then\n+      if Zero and then Pic.Blank_When_Zero then\n \n          --  Value is zero, and blank it\n \n@@ -874,7 +875,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n          return Wide_Wide_String'(1 .. Last => ' ');\n \n-      elsif Zero and Pic.Star_Fill then\n+      elsif Zero and then Pic.Star_Fill then\n          Last := Answer'Last;\n \n          if Dollar then\n@@ -2084,7 +2085,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                Pic.Picture.Expanded (Index) := 'C';\n                Skip;\n \n-               if Look = 'R' or Look = 'r' then\n+               if Look = 'R' or else Look = 'r' then\n                   Pic.Second_Sign := Index;\n                   Pic.Picture.Expanded (Index) := 'R';\n                   Skip;\n@@ -2100,7 +2101,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                Pic.Picture.Expanded (Index) := 'D';\n                Skip;\n \n-               if Look = 'B' or Look = 'b' then\n+               if Look = 'B' or else Look = 'b' then\n                   Pic.Second_Sign := Index;\n                   Pic.Picture.Expanded (Index) := 'B';\n                   Skip;\n@@ -2469,14 +2470,15 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          end case;\n \n          --  Blank when zero either if the PIC does not contain a '9' or if\n-         --  requested by the user and no '*'\n+         --  requested by the user and no '*'.\n \n          Pic.Blank_When_Zero :=\n-           (Computed_BWZ or Pic.Blank_When_Zero) and not Pic.Star_Fill;\n+           (Computed_BWZ or else Pic.Blank_When_Zero)\n+             and then not Pic.Star_Fill;\n \n          --  Star fill if '*' and no '9'\n \n-         Pic.Star_Fill := Pic.Star_Fill and Computed_BWZ;\n+         Pic.Star_Fill := Pic.Star_Fill and then Computed_BWZ;\n \n          if not At_End then\n             Set_State (Reject);"}, {"sha": "64ad87215dba8f38e12e3e1781d223dcb6df61c8", "filename": "gcc/ada/a-ztexio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1614,7 +1614,7 @@ package body Ada.Wide_Wide_Text_IO is\n             --  up for such files, so we assume an implicit LM in this case.\n \n             loop\n-               exit when ch = LM or ch = EOF;\n+               exit when ch = LM or else ch = EOF;\n                ch := Getc (File);\n             end loop;\n          end if;"}, {"sha": "e996611c3271320fa8c2ba1fadba815368fd422a", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -492,7 +492,7 @@ package body ALI.Util is\n             then\n                --  If -dt debug flag set, output time stamp found/expected\n \n-               if Source.Table (Src).Source_Found and Debug_Flag_T then\n+               if Source.Table (Src).Source_Found and then Debug_Flag_T then\n                   Write_Str (\"Source: \"\"\");\n                   Get_Name_String (Sdep.Table (D).Sfile);\n                   Write_Str (Name_Buffer (1 .. Name_Len));"}, {"sha": "19bbbb05d15f24bd669acd8fce97aa480e0ddde4", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -484,7 +484,7 @@ package body ALI is\n          loop\n             Add_Char_To_Name_Buffer (Getc);\n \n-            exit when At_End_Of_Field and not Ignore_Spaces;\n+            exit when At_End_Of_Field and then not Ignore_Spaces;\n \n             if not Ignore_Special then\n                if Name_Buffer (1) = '\"' then\n@@ -544,7 +544,7 @@ package body ALI is\n             V := V * 10 + (Character'Pos (Getc) - Character'Pos ('0'));\n \n             exit when At_End_Of_Field;\n-            exit when Nextc < '0' or Nextc > '9';\n+            exit when Nextc < '0' or else Nextc > '9';\n          end loop;\n \n          return V;"}, {"sha": "8119a6d7a43075db31faf3bad5a7cd34a20d9d67", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -471,7 +471,7 @@ package body Bcheck is\n \n                               --  Case 3. With'ed unit is Preelaborate or Pure\n \n-                              elsif WU.Preelab or WU.Pure then\n+                              elsif WU.Preelab or else WU.Pure then\n                                  null;\n \n                               --  Case 4. With'ed unit is internal file\n@@ -634,7 +634,8 @@ package body Bcheck is\n \n             begin\n                for A2 in A1 + 1 .. ALIs.Last loop\n-                  if ALIs.Table (A2).Locking_Policy /= ' ' and\n+                  if ALIs.Table (A2).Locking_Policy /= ' '\n+                       and then\n                      ALIs.Table (A2).Locking_Policy /= Policy\n                   then\n                      Error_Msg_File_1 := ALIs.Table (A1).Sfile;"}, {"sha": "3a85ae85e113377556c543d0d3495a4e4284cec2", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -325,14 +325,14 @@ package body Binde is\n \n       --  Prefer a waiting body to any other case\n \n-      if Is_Waiting_Body (U1) and not Is_Waiting_Body (U2) then\n+      if Is_Waiting_Body (U1) and then not Is_Waiting_Body (U2) then\n          if Debug_Flag_B then\n             Write_Line (\"  True: u1 is waiting body, u2 is not\");\n          end if;\n \n          return True;\n \n-      elsif Is_Waiting_Body (U2) and not Is_Waiting_Body (U1) then\n+      elsif Is_Waiting_Body (U2) and then not Is_Waiting_Body (U1) then\n          if Debug_Flag_B then\n             Write_Line (\"  False: u2 is waiting body, u1 is not\");\n          end if;\n@@ -341,14 +341,14 @@ package body Binde is\n \n       --  Prefer a predefined unit to a non-predefined unit\n \n-      elsif UT1.Predefined and not UT2.Predefined then\n+      elsif UT1.Predefined and then not UT2.Predefined then\n          if Debug_Flag_B then\n             Write_Line (\"  True: u1 is predefined, u2 is not\");\n          end if;\n \n          return True;\n \n-      elsif UT2.Predefined and not UT1.Predefined then\n+      elsif UT2.Predefined and then not UT1.Predefined then\n          if Debug_Flag_B then\n             Write_Line (\"  False: u2 is predefined, u1 is not\");\n          end if;\n@@ -357,13 +357,13 @@ package body Binde is\n \n       --  Prefer an internal unit to a non-internal unit\n \n-      elsif UT1.Internal and not UT2.Internal then\n+      elsif UT1.Internal and then not UT2.Internal then\n          if Debug_Flag_B then\n             Write_Line (\"  True: u1 is internal, u2 is not\");\n          end if;\n          return True;\n \n-      elsif UT2.Internal and not UT1.Internal then\n+      elsif UT2.Internal and then not UT1.Internal then\n          if Debug_Flag_B then\n             Write_Line (\"  False: u2 is internal, u1 is not\");\n          end if;\n@@ -372,14 +372,14 @@ package body Binde is\n \n       --  Prefer a body to a spec\n \n-      elsif Is_Body_Unit (U1) and not Is_Body_Unit (U2) then\n+      elsif Is_Body_Unit (U1) and then not Is_Body_Unit (U2) then\n          if Debug_Flag_B then\n             Write_Line (\"  True: u1 is body, u2 is not\");\n          end if;\n \n          return True;\n \n-      elsif Is_Body_Unit (U2) and not Is_Body_Unit (U1) then\n+      elsif Is_Body_Unit (U2) and then not Is_Body_Unit (U1) then\n          if Debug_Flag_B then\n             Write_Line (\"  False: u2 is body, u1 is not\");\n          end if;\n@@ -1379,18 +1379,18 @@ package body Binde is\n \n       --  Prefer anything else to a waiting body (!)\n \n-      elsif Is_Waiting_Body (U1) and not Is_Waiting_Body (U2) then\n+      elsif Is_Waiting_Body (U1) and then not Is_Waiting_Body (U2) then\n          return False;\n \n-      elsif Is_Waiting_Body (U2) and not Is_Waiting_Body (U1) then\n+      elsif Is_Waiting_Body (U2) and then not Is_Waiting_Body (U1) then\n          return True;\n \n       --  Prefer a spec to a body (!)\n \n-      elsif Is_Body_Unit (U1) and not Is_Body_Unit (U2) then\n+      elsif Is_Body_Unit (U1) and then not Is_Body_Unit (U2) then\n          return False;\n \n-      elsif Is_Body_Unit (U2) and not Is_Body_Unit (U1) then\n+      elsif Is_Body_Unit (U2) and then not Is_Body_Unit (U1) then\n          return True;\n \n       --  If both are waiting bodies, then prefer the one whose spec is"}, {"sha": "251e1b844d1420743bdfeb01efb05a3a40bda981", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -713,9 +713,9 @@ package body Errout is\n       --  Return without doing anything if message is suppressed\n \n       if Suppress_Message\n-        and not All_Errors_Mode\n-        and not (Msg (Msg'Last) = '!')\n-        and not Is_Warning_Msg\n+        and then not All_Errors_Mode\n+        and then not (Msg (Msg'Last) = '!')\n+        and then not Is_Warning_Msg\n       then\n          if not Continuation then\n             Last_Killed := True;\n@@ -991,11 +991,11 @@ package body Errout is\n                --  cascaded parsing errors\n \n                if not (Errors.Table (Prev_Msg).Warn\n-                         or\n+                         or else\n                        Errors.Table (Prev_Msg).Style)\n                  or else\n                       (Errors.Table (Cur_Msg).Warn\n-                         or\n+                         or else\n                        Errors.Table (Cur_Msg).Style)\n                then\n                   --  All tests passed, delete the message by simply returning\n@@ -1031,7 +1031,7 @@ package body Errout is\n \n       --  Bump appropriate statistics count\n \n-      if Errors.Table (Cur_Msg).Warn or Errors.Table (Cur_Msg).Style then\n+      if Errors.Table (Cur_Msg).Warn or else Errors.Table (Cur_Msg).Style then\n          Warnings_Detected := Warnings_Detected + 1;\n \n       else\n@@ -1134,7 +1134,7 @@ package body Errout is\n         or else Msg (Msg'Last) = '!'\n         or else Is_Warning_Msg\n         or else OK_Node (N)\n-        or else (Msg (Msg'First) = '\\' and not Last_Killed)\n+        or else (Msg (Msg'First) = '\\' and then not Last_Killed)\n       then\n          Debug_Output (N);\n          Error_Msg_Node_1 := E;"}, {"sha": "040fac76681509db32341ba2f92fa3662b5b2a74", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -115,7 +115,7 @@ package body Erroutc is\n \n             --  Adjust error message count\n \n-            if Errors.Table (D).Warn or Errors.Table (D).Style then\n+            if Errors.Table (D).Warn or else Errors.Table (D).Style then\n                Warnings_Detected := Warnings_Detected - 1;\n \n             else\n@@ -561,7 +561,7 @@ package body Erroutc is\n            and then Errors.Table (E).Sptr > From\n            and then Errors.Table (E).Sptr < To\n          then\n-            if Errors.Table (E).Warn or Errors.Table (E).Style then\n+            if Errors.Table (E).Warn or else Errors.Table (E).Style then\n                Warnings_Detected := Warnings_Detected - 1;\n \n             else"}, {"sha": "6a5bb692d6d4d5b00654cffb0fd608214fbe1bd3", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -261,11 +261,11 @@ package body Errutil is\n             --  avoid junk extra messages from cascaded parsing errors\n \n             if not (Errors.Table (Prev_Msg).Warn\n-                      or\n+                     or else\n                     Errors.Table (Prev_Msg).Style)\n               or else\n                    (Errors.Table (Cur_Msg).Warn\n-                      or\n+                     or else\n                     Errors.Table (Cur_Msg).Style)\n             then\n                --  All tests passed, delete the message by simply returning\n@@ -296,8 +296,12 @@ package body Errutil is\n \n       --  Bump appropriate statistics count\n \n-      if Errors.Table (Cur_Msg).Warn or Errors.Table (Cur_Msg).Style then\n+      if Errors.Table (Cur_Msg).Warn\n+           or else\n+         Errors.Table (Cur_Msg).Style\n+      then\n          Warnings_Detected := Warnings_Detected + 1;\n+\n       else\n          Total_Errors_Detected := Total_Errors_Detected + 1;\n "}, {"sha": "3443344fe33a9df0e1038b16e1b4bd39f9146be2", "filename": "gcc/ada/g-alleve.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fg-alleve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fg-alleve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alleve.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -658,8 +658,8 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n       begin\n          for J in Varray_Type'Range loop\n-            All_Element := All_Element and (D (J) = Bool_True);\n-            Any_Element := Any_Element or  (D (J) = Bool_True);\n+            All_Element := All_Element and then (D (J) = Bool_True);\n+            Any_Element := Any_Element or else  (D (J) = Bool_True);\n          end loop;\n \n          if A = CR6_LT then\n@@ -1120,8 +1120,8 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n       begin\n          for J in Varray_Type'Range loop\n-            All_Element := All_Element and (D (J) = Bool_True);\n-            Any_Element := Any_Element or  (D (J) = Bool_True);\n+            All_Element := All_Element and then (D (J) = Bool_True);\n+            Any_Element := Any_Element or else  (D (J) = Bool_True);\n          end loop;\n \n          if A = CR6_LT then"}, {"sha": "c72ac75b1f00a5bec92e99ad349fe9a727b63dda", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -545,9 +545,9 @@ procedure Gnatchop is\n          --  Find Start_Of_Prefix\n \n          for J in reverse Current_Command'Range loop\n-            if Current_Command (J) = '/' or\n-              Current_Command (J) = Directory_Separator or\n-              Current_Command (J) = ':'\n+            if Current_Command (J) = '/'                 or else\n+               Current_Command (J) = Directory_Separator or else\n+               Current_Command (J) = ':'\n             then\n                Start_Of_Prefix := J + 1;\n                exit;\n@@ -612,7 +612,7 @@ procedure Gnatchop is\n \n       --  Skip past CR/LF or LF/CR combination\n \n-      if (Source (Ptr) = ASCII.CR or Source (Ptr) = ASCII.LF)\n+      if (Source (Ptr) = ASCII.CR or else Source (Ptr) = ASCII.LF)\n          and then Source (Ptr) /= Source (Ptr - 1)\n       then\n          Ptr := Ptr + 1;\n@@ -973,15 +973,16 @@ procedure Gnatchop is\n    begin\n       --  Skip separators\n \n-      while Source (Ptr) = ' ' or Source (Ptr) = ',' loop\n+      while Source (Ptr) = ' ' or else Source (Ptr) = ',' loop\n          Ptr := Ptr + 1;\n       end loop;\n \n       Token_Ptr := Ptr;\n \n       --  Find end-of-token\n \n-      while (In_Quotes or else not (Source (Ptr) = ' ' or Source (Ptr) = ','))\n+      while (In_Quotes\n+              or else not (Source (Ptr) = ' ' or else Source (Ptr) = ','))\n         and then Source (Ptr) >= ' '\n       loop\n          if Source (Ptr) = '\"' then\n@@ -1588,7 +1589,7 @@ procedure Gnatchop is\n       Nam : String_Access;\n \n    begin\n-      if Success and Source_References and not Info.SR_Present then\n+      if Success and then Source_References and then not Info.SR_Present then\n          if FTE.SR_Name /= null then\n             Nam := FTE.SR_Name;\n          else"}, {"sha": "5b433187adba62f5f98cfef74bed726b2b1d2d28", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1029,20 +1029,20 @@ procedure Gnatls is\n          end if;\n \n          if Verbose_Mode then\n-            if U.Preelab             or\n-               U.No_Elab             or\n-               U.Pure                or\n-               U.Dynamic_Elab        or\n-               U.Has_RACW            or\n-               U.Remote_Types        or\n-               U.Shared_Passive      or\n-               U.RCI                 or\n-               U.Predefined          or\n-               U.Internal            or\n-               U.Is_Generic          or\n-               U.Init_Scalars        or\n-               U.SAL_Interface       or\n-               U.Body_Needed_For_SAL or\n+            if U.Preelab             or else\n+               U.No_Elab             or else\n+               U.Pure                or else\n+               U.Dynamic_Elab        or else\n+               U.Has_RACW            or else\n+               U.Remote_Types        or else\n+               U.Shared_Passive      or else\n+               U.RCI                 or else\n+               U.Predefined          or else\n+               U.Internal            or else\n+               U.Is_Generic          or else\n+               U.Init_Scalars        or else\n+               U.SAL_Interface       or else\n+               U.Body_Needed_For_SAL or else\n                U.Elaborate_Body\n             then\n                Write_Eol;\n@@ -1119,7 +1119,6 @@ procedure Gnatls is\n                if U.Predefined then\n                   Write_Str (\" Predefined\");\n                end if;\n-\n             end if;\n \n             declare\n@@ -1160,7 +1159,7 @@ procedure Gnatls is\n                   Write_Str (\"     Restrictions violated =>\");\n \n                   --  For boolean restrictions, just display the name of the\n-                  --  restriction; for valued restrictions, also display the\n+                  --  restriction. For valued restrictions, also display the\n                   --  restriction value.\n \n                   for Restriction in All_Restrictions loop\n@@ -1316,7 +1315,6 @@ procedure Gnatls is\n                   --  Find the end of line\n \n                   Last := Index;\n-\n                   while Last <= Buffer'Last\n                     and then Buffer (Last) /= ASCII.LF\n                     and then Buffer (Last) /= ASCII.CR\n@@ -1330,10 +1328,9 @@ procedure Gnatls is\n                      Add_File (Buffer (Index .. Last - 1));\n                   end if;\n \n-                  Index := Last;\n-\n                   --  Find the beginning of the next line\n \n+                  Index := Last;\n                   while Buffer (Index) = ASCII.CR or else\n                         Buffer (Index) = ASCII.LF\n                   loop\n@@ -1559,8 +1556,8 @@ begin\n       Exit_Program (E_Fatal);\n    end if;\n \n-   --  Add the source and object directories specified on the\n-   --  command line, if any, to the searched directories.\n+   --  Add the source and object directories specified on the command line, if\n+   --  any, to the searched directories.\n \n    while First_Source_Dir /= null loop\n       Add_Src_Search_Dir (First_Source_Dir.Value.all);"}, {"sha": "a0f3b0b42fadc3968e93700d4ad394d6101eb21d", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -5125,7 +5125,7 @@ package body Make is\n \n             --  Add binder switches from the project file for the first main\n \n-            if Do_Bind_Step and Binder_Package /= No_Package then\n+            if Do_Bind_Step and then Binder_Package /= No_Package then\n                if Verbose_Mode then\n                   Write_Str (\"Adding binder switches for \"\"\");\n                   Write_Str (Main_Unit_File_Name);\n@@ -5141,7 +5141,7 @@ package body Make is\n \n             --  Add linker switches from the project file for the first main\n \n-            if Do_Link_Step and Linker_Package /= No_Package then\n+            if Do_Link_Step and then Linker_Package /= No_Package then\n                if Verbose_Mode then\n                   Write_Str (\"Adding linker switches for\"\"\");\n                   Write_Str (Main_Unit_File_Name);\n@@ -5595,7 +5595,7 @@ package body Make is\n                  and then (Do_Bind_Step\n                              or Unique_Compile_All_Projects\n                              or not Compile_Only)\n-                 and then (Do_Link_Step or N_File = Osint.Number_Of_Files)\n+                 and then (Do_Link_Step or else N_File = Osint.Number_Of_Files)\n                then\n                   Library_Projs.Init;\n \n@@ -6143,7 +6143,7 @@ package body Make is\n                      --  We do that only if Run_Path_Option is True\n                      --  (not disabled by -R switch).\n \n-                     if Run_Path_Option and Path_Option /= null then\n+                     if Run_Path_Option and then Path_Option /= null then\n                         declare\n                            Option  : String_Access;\n                            Length  : Natural := Path_Option'Length;\n@@ -6312,7 +6312,9 @@ package body Make is\n                         Successful_Links.Table (Successful_Links.Last) :=\n                           Main_ALI_File;\n \n-                     elsif Osint.Number_Of_Files = 1 or not Keep_Going then\n+                     elsif Osint.Number_Of_Files = 1\n+                       or else not Keep_Going\n+                     then\n                         Make_Failed (\"*** link failed.\");\n \n                      else\n@@ -6426,7 +6428,7 @@ package body Make is\n                   --  Add binder switches from the project file for this main,\n                   --  if any.\n \n-                  if Do_Bind_Step and Binder_Package /= No_Package then\n+                  if Do_Bind_Step and then Binder_Package /= No_Package then\n                      if Verbose_Mode then\n                         Write_Str (\"Adding binder switches for \"\"\");\n                         Write_Str (Main_Unit_File_Name);\n@@ -6443,7 +6445,7 @@ package body Make is\n                   --  Add linker switches from the project file for this main,\n                   --  if any.\n \n-                  if Do_Link_Step and Linker_Package /= No_Package then\n+                  if Do_Link_Step and then Linker_Package /= No_Package then\n                      if Verbose_Mode then\n                         Write_Str (\"Adding linker switches for\"\"\");\n                         Write_Str (Main_Unit_File_Name);\n@@ -6920,7 +6922,7 @@ package body Make is\n \n       function Check_Project (P : Project_Id) return Boolean is\n       begin\n-         if All_Projects or P = The_Project then\n+         if All_Projects or else P = The_Project then\n             return True;\n \n          elsif Extending then\n@@ -7735,8 +7737,8 @@ package body Make is\n                      RTS_Src_Path_Name := Src_Path_Name;\n                      RTS_Lib_Path_Name := Lib_Path_Name;\n \n-                  elsif  Src_Path_Name = null\n-                    and Lib_Path_Name = null\n+                  elsif Src_Path_Name = null\n+                    and then Lib_Path_Name = null\n                   then\n                      Make_Failed (\"RTS path not valid: missing \" &\n                                   \"adainclude and adalib directories\");"}, {"sha": "a02e1eefe7e45e332372e699d032bc88ecd52226", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1116,7 +1116,7 @@ package body Osint is\n \n       if Command_Name (Cindex2) in '0' .. '9' then\n          for J in reverse Cindex1 .. Cindex2 loop\n-            if Command_Name (J) = '.' or Command_Name (J) = ';' then\n+            if Command_Name (J) = '.' or else Command_Name (J) = ';' then\n                Cindex2 := J - 1;\n                exit;\n             end if;\n@@ -2219,7 +2219,7 @@ package body Osint is\n          loop\n             Actual_Len := Read (Lib_FD, Text (Hi)'Address, Len);\n             Hi := Hi + Text_Ptr (Actual_Len);\n-            exit when Actual_Len = Len or Actual_Len <= 0;\n+            exit when Actual_Len = Len or else Actual_Len <= 0;\n          end loop;\n \n          Text (Hi) := EOF;\n@@ -2352,7 +2352,7 @@ package body Osint is\n          loop\n             Actual_Len := Read (Source_File_FD, Actual_Ptr (Hi)'Address, Len);\n             Hi := Hi + Source_Ptr (Actual_Len);\n-            exit when Actual_Len = Len or Actual_Len <= 0;\n+            exit when Actual_Len = Len or else Actual_Len <= 0;\n          end loop;\n \n          Actual_Ptr (Hi) := EOF;"}, {"sha": "9a76dc947304a86dc030c80de99aae0d46420461", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -926,7 +926,7 @@ package body Prep is\n                   goto Cleanup;\n                end if;\n \n-            elsif Token = Tok_End_Of_Line or Token = Tok_EOF then\n+            elsif Token = Tok_End_Of_Line or else Token = Tok_EOF then\n                Data := (Symbol              => Symbol_Name,\n                         Original            => Original_Name,\n                         On_The_Command_Line => False,\n@@ -1008,7 +1008,7 @@ package body Prep is\n             <<Cleanup>>\n                Set_Ignore_Errors (To => True);\n \n-               while Token /= Tok_End_Of_Line and Token /= Tok_EOF loop\n+               while Token /= Tok_End_Of_Line and then Token /= Tok_EOF loop\n                   Scan.all;\n                end loop;\n \n@@ -1058,7 +1058,7 @@ package body Prep is\n \n       procedure Output_Line (From, To : Source_Ptr) is\n       begin\n-         if Deleting or Preprocessor_Line then\n+         if Deleting or else Preprocessor_Line then\n             if Blank_Deleted_Lines then\n                New_EOL.all;\n \n@@ -1145,8 +1145,9 @@ package body Prep is\n                            New_State : constant Pp_State :=\n                                          (If_Ptr     => If_Ptr,\n                                           Else_Ptr   => 0,\n-                                          Deleting   => Deleting or (not Cond),\n-                                          Match_Seen => Deleting or Cond);\n+                                          Deleting   => Deleting\n+                                                          or else not Cond,\n+                                          Match_Seen => Deleting or else Cond);\n \n                         begin\n                            Pp_States.Increment_Last;\n@@ -1408,7 +1409,7 @@ package body Prep is\n             end if;\n          end if;\n \n-         pragma Assert (Token = Tok_End_Of_Line or Token = Tok_EOF);\n+         pragma Assert (Token = Tok_End_Of_Line or else Token = Tok_EOF);\n \n          --  At this point, the token is either end of line or EOF.\n          --  The line to possibly output stops just before the token."}, {"sha": "ad14fc5e16422dbc6c5b65e8e59bd89a243fc842", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -418,7 +418,7 @@ package body Prepcomp is\n                         --  with an underline or a digit.\n \n                         if Name_Buffer (2) = '_'\n-                          or Name_Buffer (2) in '0' .. '9'\n+                          or else Name_Buffer (2) in '0' .. '9'\n                         then\n                            Error_Msg (\"symbol expected\", Token_Ptr + 1);\n                            Skip_To_End_Of_Line;"}, {"sha": "fee0bbfa2357344428233357025d5abd2647c12b", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -351,7 +351,7 @@ package body Prj.Conf is\n       end if;\n \n       if Target = \"\" then\n-         OK := not Autoconf_Specified or Tgt_Name = No_Name;\n+         OK := not Autoconf_Specified or else Tgt_Name = No_Name;\n       else\n          OK := Tgt_Name /= No_Name\n                  and then Target = Get_Name_String (Tgt_Name);\n@@ -705,7 +705,7 @@ package body Prj.Conf is\n             --  gprconfig.\n \n             if not Is_Directory (Obj_Dir)\n-              and then (Setup_Projects or Subdirs /= null)\n+              and then (Setup_Projects or else Subdirs /= null)\n             then\n                begin\n                   Create_Path (Obj_Dir);\n@@ -883,8 +883,8 @@ package body Prj.Conf is\n       --  auto-conf mode, since the appropriate target was passed to gprconfig.\n \n       if not Automatically_Generated\n-        and not Check_Target\n-          (Config, Autoconf_Specified, Project_Tree, Target_Name)\n+        and then not\n+          Check_Target (Config, Autoconf_Specified, Project_Tree, Target_Name)\n       then\n          Automatically_Generated := True;\n          goto Process_Config_File;"}, {"sha": "5795061eacb46d065153ef83e1565ebd4f513ff0", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1550,7 +1550,7 @@ package body Prj.Dect is\n \n       Expect (Tok_Colon_Equal, \"`:=`\");\n \n-      OK := OK and (Token = Tok_Colon_Equal);\n+      OK := OK and then Token = Tok_Colon_Equal;\n \n       if Token = Tok_Colon_Equal then\n          Scan (In_Tree);"}, {"sha": "72bf84bb8e3d0af424575aab6755eb4edd64d1ff", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -565,7 +565,7 @@ package body Prj.Nmsc is\n       end if;\n \n       if Prev_Unit /= No_Unit_Index\n-        and then (Kind = Impl or Kind = Spec)\n+        and then (Kind = Impl or else Kind = Spec)\n         and then Prev_Unit.File_Names (Kind) /= null\n       then\n          --  Suspicious, we need to check later whether this is authorized\n@@ -3225,7 +3225,7 @@ package body Prj.Nmsc is\n       --  No Naming package or parsing a configuration file? nothing to do\n \n       if Naming_Id /= No_Package\n-        and Project.Qualifier /= Configuration\n+        and then Project.Qualifier /= Configuration\n       then\n          Naming := Data.Tree.Packages.Table (Naming_Id);\n "}, {"sha": "c87662290573980944bb3c956d106b3bd6c9b008", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -2380,8 +2380,8 @@ package body Prj.Proc is\n                 (With_Clause, From_Project_Node_Tree);\n             New_Project := No_Project;\n \n-            if (Limited_With and No (Proj_Node))\n-              or (not Limited_With and Present (Proj_Node))\n+            if (Limited_With and then No (Proj_Node))\n+              or else (not Limited_With and then Present (Proj_Node))\n             then\n                Recursive_Process\n                  (In_Tree                => In_Tree,"}, {"sha": "159ee83597c936d599902ca203a7c29f25f9f07a", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -183,7 +183,7 @@ package body Prj.Util is\n       if Builder_Package /= No_Package then\n          Executable_Suffix_Name := Project.Config.Executable_Suffix;\n \n-         if Executable = Nil_Variable_Value and Ada_Main then\n+         if Executable = Nil_Variable_Value and then Ada_Main then\n             Get_Name_String (Main);\n \n             --  Try as index the name minus the implementation suffix or minus\n@@ -562,7 +562,7 @@ package body Prj.Util is\n \n       Real_Index_1 := Index;\n \n-      if not Element.Index_Case_Sensitive or Force_Lower_Case_Index then\n+      if not Element.Index_Case_Sensitive or else Force_Lower_Case_Index then\n          if Index /= All_Other_Names then\n             Get_Name_String (Index);\n             To_Lower (Name_Buffer (1 .. Name_Len));\n@@ -574,7 +574,9 @@ package body Prj.Util is\n          Element := In_Tree.Array_Elements.Table (Current);\n          Real_Index_2 := Element.Index;\n \n-         if not Element.Index_Case_Sensitive or Force_Lower_Case_Index then\n+         if not Element.Index_Case_Sensitive\n+           or else Force_Lower_Case_Index\n+         then\n             if Element.Index /= All_Other_Names then\n                Get_Name_String (Element.Index);\n                To_Lower (Name_Buffer (1 .. Name_Len));"}, {"sha": "fb002f45cfef7ba71cf9f2c16d23662eb1f69c8a", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -980,7 +980,7 @@ package body Prj is\n       Only_If_Ada         : Boolean := False) return Path_Name_Type\n    is\n    begin\n-      if (Project.Library and Including_Libraries)\n+      if (Project.Library and then Including_Libraries)\n         or else\n           (Project.Object_Directory /= No_Path_Information\n             and then (not Including_Libraries or else not Project.Library))"}, {"sha": "c84996e3ba7c7dd68bf54c379b52eacb9ac667b7", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1201,10 +1201,10 @@ package body Repinfo is\n                      return B (T (Node.Op1) or else T (Node.Op2));\n \n                   when Truth_And_Expr =>\n-                     return B (T (Node.Op1) and T (Node.Op2));\n+                     return B (T (Node.Op1) and then T (Node.Op2));\n \n                   when Truth_Or_Expr =>\n-                     return B (T (Node.Op1) or T (Node.Op2));\n+                     return B (T (Node.Op1) or else T (Node.Op2));\n \n                   when Truth_Xor_Expr =>\n                      return B (T (Node.Op1) xor T (Node.Op2));"}, {"sha": "df45003cd1af52c86ada08a6b97ba1f25bd7bf36", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -466,7 +466,7 @@ package body System.File_IO is\n             end if;\n \n          when Out_File =>\n-            if Amethod = 'D' and not Creat then\n+            if Amethod = 'D' and then not Creat then\n                Fopstr (1) := 'r';\n                Fopstr (2) := '+';\n                Fptr := 3;"}, {"sha": "1415a8b80f66606c068a5ec1c61293697305657c", "filename": "gcc/ada/s-imgrea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-imgrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-imgrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgrea.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -232,7 +232,7 @@ package body System.Img_Real is\n \n             loop\n                XP := X * Powten (Maxpow);\n-               exit when XP >= Powten (S - 1) or Scale < -Maxscaling;\n+               exit when XP >= Powten (S - 1) or else Scale < -Maxscaling;\n                X := XP;\n                Scale := Scale - Maxpow;\n             end loop;\n@@ -302,7 +302,7 @@ package body System.Img_Real is\n \n             loop\n                XP := X / Powten (Maxpow);\n-               exit when XP < Powten (S) or Scale > Maxscaling;\n+               exit when XP < Powten (S) or else Scale > Maxscaling;\n                X := XP;\n                Scale := Scale + Maxpow;\n             end loop;"}, {"sha": "48ebd4428fc485d63f3e8468975fcf65094cd77b", "filename": "gcc/ada/s-regexp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regexp.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2008, AdaCore                     --\n+--                     Copyright (C) 1999-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -218,7 +218,7 @@ package body System.Regexp is\n                      J := J + 1;\n                   end if;\n \n-                  if S (J) = ']' or S (J) = '-' then\n+                  if S (J) = ']' or else S (J) = '-' then\n                      J := J + 1;\n                   end if;\n \n@@ -619,7 +619,7 @@ package body System.Regexp is\n \n                         --  Automatically add the first character\n \n-                        if S (J) = '-' or S (J) = ']' then\n+                        if S (J) = '-' or else S (J) = ']' then\n                            Set (Table, Current_State, Map (S (J)),\n                                 Value => Next_State);\n                            J := J + 1;\n@@ -899,7 +899,7 @@ package body System.Regexp is\n \n                         --  Automatically add the first character\n \n-                        if S (J) = '-' or S (J) = ']' then\n+                        if S (J) = '-' or else S (J) = ']' then\n                            Set (Table, Current_State, Map (S (J)),\n                                 Value => Current_State);\n                            J := J + 1;"}, {"sha": "dec4c1fcef0076cb22b0747d8c1c2712b8a9c095", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -905,7 +905,7 @@ package body System.Regpat is\n             Flags.Has_Width := False;\n          end if;\n \n-         Flags.SP_Start := Flags.SP_Start or New_Flags.SP_Start;\n+         Flags.SP_Start := Flags.SP_Start or else New_Flags.SP_Start;\n \n          while Parse_Pos <= Parse_End\n            and then (E (Parse_Pos) = '|')\n@@ -924,7 +924,7 @@ package body System.Regpat is\n                Flags.Has_Width := False;\n             end if;\n \n-            Flags.SP_Start := Flags.SP_Start or New_Flags.SP_Start;\n+            Flags.SP_Start := Flags.SP_Start or else New_Flags.SP_Start;\n          end loop;\n \n          --  Make a closing node, and hook it on the end\n@@ -1026,9 +1026,9 @@ package body System.Regpat is\n                   end if;\n \n                   Expr_Flags.Has_Width :=\n-                    Expr_Flags.Has_Width or New_Flags.Has_Width;\n+                    Expr_Flags.Has_Width or else New_Flags.Has_Width;\n                   Expr_Flags.SP_Start :=\n-                    Expr_Flags.SP_Start or New_Flags.SP_Start;\n+                    Expr_Flags.SP_Start or else New_Flags.SP_Start;\n                end;\n \n             when '|' | ASCII.LF | ')' =>\n@@ -1155,10 +1155,10 @@ package body System.Regpat is\n                return;\n             end if;\n \n-            Flags.Has_Width := Flags.Has_Width or New_Flags.Has_Width;\n+            Flags.Has_Width := Flags.Has_Width or else New_Flags.Has_Width;\n \n             if Chain = 0 then            -- First piece\n-               Flags.SP_Start := Flags.SP_Start or New_Flags.SP_Start;\n+               Flags.SP_Start := Flags.SP_Start or else New_Flags.SP_Start;\n             else\n                Link_Tail (Chain, Last);\n             end if;"}, {"sha": "632e30e4b01bd7d514899f9083fbbd9af35ffd49", "filename": "gcc/ada/s-scaval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-scaval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-scaval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-scaval.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -59,7 +59,7 @@ package body System.Scalar_Values is\n       --  Set True if we are on an x86 with 96-bit floats for extended\n \n       AFloat : constant Boolean :=\n-                 Long_Float'Size = 48 and Long_Long_Float'Size = 48;\n+                 Long_Float'Size = 48 and then Long_Long_Float'Size = 48;\n       --  Set True if we are on an AAMP with 48-bit extended floating point\n \n       type ByteLF is array (0 .. 7 - 2 * Boolean'Pos (AFloat)) of Byte1;"}, {"sha": "7c62aa5e5505cbe09f3729cea64cc59cd301aec3", "filename": "gcc/ada/s-stchop.adb", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-stchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-stchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -49,19 +49,18 @@ package body System.Stack_Checking.Operations is\n    function Set_Stack_Info\n      (Stack : not null access Stack_Access) return Stack_Access;\n \n-   --  The function Set_Stack_Info is the actual function that updates\n-   --  the cache containing a pointer to the Stack_Info. It may also\n-   --  be used for detecting asynchronous abort in combination with\n-   --  Invalidate_Self_Cache.\n+   --  The function Set_Stack_Info is the actual function that updates the\n+   --  cache containing a pointer to the Stack_Info. It may also be used for\n+   --  detecting asynchronous abort in combination with Invalidate_Self_Cache.\n \n    --  Set_Stack_Info should do the following things in order:\n    --     1) Get the Stack_Access value for the current task\n    --     2) Set Stack.all to the value obtained in 1)\n    --     3) Optionally Poll to check for asynchronous abort\n \n-   --  This order is important because if at any time a write to\n-   --  the stack cache is pending, that write should be followed\n-   --  by a Poll to prevent loosing signals.\n+   --  This order is important because if at any time a write to the stack\n+   --  cache is pending, that write should be followed by a Poll to prevent\n+   --  loosing signals.\n \n    --  Note: This function must be compiled with Polling turned off\n \n@@ -126,15 +125,15 @@ package body System.Stack_Checking.Operations is\n \n       if My_Stack.Base = Null_Address then\n \n-         --  First invocation, initialize based on the assumption that\n-         --  there are Environment_Stack_Size bytes available beyond\n-         --  the current frame address.\n+         --  First invocation, initialize based on the assumption that there\n+         --  are Environment_Stack_Size bytes available beyond the current\n+         --  frame address.\n \n          if My_Stack.Size = 0 then\n             My_Stack.Size := Storage_Offset (Default_Env_Stack_Size);\n \n-            --  When the environment variable GNAT_STACK_LIMIT is set,\n-            --  set Environment_Stack_Size to that number of kB.\n+            --  When the environment variable GNAT_STACK_LIMIT is set, set\n+            --  Environment_Stack_Size to that number of kB.\n \n             Limit_Chars := System.CRTL.getenv (\"GNAT_STACK_LIMIT\" & ASCII.NUL);\n \n@@ -147,8 +146,8 @@ package body System.Stack_Checking.Operations is\n             end if;\n          end if;\n \n-         --  If a stack base address has been registered, honor it.\n-         --  Fallback to the address of a local object otherwise.\n+         --  If a stack base address has been registered, honor it. Fallback to\n+         --  the address of a local object otherwise.\n \n          if My_Stack.Limit /= System.Null_Address then\n             My_Stack.Base := My_Stack.Limit;\n@@ -187,7 +186,9 @@ package body System.Stack_Checking.Operations is\n          raise Standard'Abort_Signal;\n       end if;\n \n-      return My_Stack; -- Never trust the cached value, but return local copy!\n+      --  Never trust the cached value, but return local copy!\n+\n+      return My_Stack;\n    end Set_Stack_Info;\n \n    -----------------\n@@ -215,22 +216,22 @@ package body System.Stack_Checking.Operations is\n          raise Storage_Error with \"stack overflow detected\";\n       end if;\n \n-      --  This function first does a \"cheap\" check which is correct\n-      --  if it succeeds. In case of failure, the full check is done.\n-      --  Ideally the cheap check should be done in an optimized manner,\n-      --  or be inlined.\n+      --  This function first does a \"cheap\" check which is correct if it\n+      --  succeeds. In case of failure, the full check is done. Ideally the\n+      --  cheap check should be done in an optimized manner, or be inlined.\n \n       if (Stack_Grows_Down and then\n             (Frame_Address <= Cached_Stack.Base\n-               and\n+               and then\n              Stack_Address > Cached_Stack.Limit))\n         or else\n          (not Stack_Grows_Down and then\n             (Frame_Address >= Cached_Stack.Base\n-               and\n+               and then\n              Stack_Address < Cached_Stack.Limit))\n       then\n          --  Cached_Stack is valid as it passed the stack check\n+\n          return Cached_Stack;\n       end if;\n \n@@ -247,22 +248,21 @@ package body System.Stack_Checking.Operations is\n             (not Stack_Grows_Down and then\n                (not (Frame_Address >= My_Stack.Base)))\n          then\n-            --  The returned Base is lower than the stored one,\n-            --  so assume that the original one wasn't right and use the\n-            --  current Frame_Address as new one. This allows initializing\n-            --  Base with the Frame_Address as approximation.\n-            --  During initialization the Frame_Address will be close to\n-            --  the stack base anyway: the difference should be compensated\n-            --  for in the stack reserve.\n+            --  The returned Base is lower than the stored one, so assume that\n+            --  the original one wasn't right and use the current Frame_Address\n+            --  as new one. This allows Base to be initialized with the\n+            --  Frame_Address as approximation. During initialization the\n+            --  Frame_Address will be close to the stack base anyway: the\n+            --  difference should be compensated for in the stack reserve.\n \n             My_Stack.Base := Frame_Address;\n          end if;\n \n-         if (Stack_Grows_Down and then\n-                  Stack_Address < My_Stack.Limit)\n+         if (Stack_Grows_Down\n+              and then Stack_Address < My_Stack.Limit)\n            or else\n-            (not Stack_Grows_Down and then\n-                  Stack_Address > My_Stack.Limit)\n+            (not Stack_Grows_Down\n+              and then Stack_Address > My_Stack.Limit)\n          then\n             raise Storage_Error with \"stack overflow detected\";\n          end if;"}, {"sha": "1ae5b651ebfec374365cfe897cdb23560f070ac5", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -1807,10 +1807,10 @@ package body System.Tasking.Stages is\n          T := To_Be_Freed;\n          To_Be_Freed := T.Common.All_Tasks_Link;\n \n-         --  ??? On SGI there is currently no Interrupt_Manager, that's\n-         --  why we need to check if the Interrupt_Manager_ID is null\n+         --  ??? On SGI there is currently no Interrupt_Manager, that's why we\n+         --  need to check if the Interrupt_Manager_ID is null.\n \n-         if T.Interrupt_Entry and Interrupt_Manager_ID /= null then\n+         if T.Interrupt_Entry and then Interrupt_Manager_ID /= null then\n             declare\n                Detach_Interrupt_Entries_Index : constant Task_Entry_Index := 1;\n                --  Corresponds to the entry index of System.Interrupts."}, {"sha": "40c5abbca8b8108792847bd6f66666136efadb01", "filename": "gcc/ada/s-valrea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-valrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fs-valrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valrea.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -126,7 +126,7 @@ package body System.Val_Real is\n \n             --  Save up trailing zeroes after the decimal point\n \n-            if Digit = 0 and After_Point = 1 then\n+            if Digit = 0 and then After_Point = 1 then\n                Num_Saved_Zeroes := Num_Saved_Zeroes + 1;\n \n             --  Here for a non-zero digit\n@@ -253,7 +253,7 @@ package body System.Val_Real is\n \n                --  Save up trailing zeroes after the decimal point\n \n-               if Digit = 0 and After_Point = 1 then\n+               if Digit = 0 and then After_Point = 1 then\n                   Num_Saved_Zeroes := Num_Saved_Zeroes + 1;\n \n                --  Here for a non-zero digit"}, {"sha": "4997346bd8e246cd86ce46a58d6e0e050131791c", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -116,7 +116,7 @@ package body Sinput.C is\n          loop\n             Actual_Len := Read (Source_File_FD, Actual_Ptr (Hi)'Address, Len);\n             Hi := Hi + Source_Ptr (Actual_Len);\n-            exit when Actual_Len = Len or Actual_Len <= 0;\n+            exit when Actual_Len = Len or else Actual_Len <= 0;\n          end loop;\n \n          Actual_Ptr (Hi) := EOF;"}, {"sha": "5159186d9f795cd133f822244a2db9335ab78881", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -364,9 +364,15 @@ package body Sinput.L is\n                procedure Wchar (C : Character);\n                --  Writes character or ? for control character\n \n+               -----------\n+               -- Wchar --\n+               -----------\n+\n                procedure Wchar (C : Character) is\n                begin\n-                  if C < ' ' or C in ASCII.DEL .. Character'Val (16#9F#) then\n+                  if C < ' '\n+                    or else C in ASCII.DEL .. Character'Val (16#9F#)\n+                  then\n                      Write_Char ('?');\n                   else\n                      Write_Char (C);"}, {"sha": "93377219175812292875dd7660cd1f6225acb210", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009  Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -759,7 +759,7 @@ package body Uintp is\n \n    function Sum_Digits (Left : Uint; Sign : Int) return Int is\n    begin\n-      pragma Assert (Sign = Int_1 or Sign = Int (-1));\n+      pragma Assert (Sign = Int_1 or else Sign = Int (-1));\n \n       --  First try simple case;\n \n@@ -858,7 +858,7 @@ package body Uintp is\n    begin\n       --  First try simple case;\n \n-      pragma Assert (Sign = Int_1 or Sign = Int (-1));\n+      pragma Assert (Sign = Int_1 or else Sign = Int (-1));\n \n       if Direct (Left) then\n          return Direct_Val (Left);"}, {"sha": "0772a494f123f3c00d02183225543bfe7ee025de", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced162c2d0525032df4c98d4d14dbcc7980de7/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=d1ced162c2d0525032df4c98d4d14dbcc7980de7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1031,7 +1031,7 @@ package body VMS_Conv is\n \n                   --  Process switch string, first get name\n \n-                  while SS (P) /= ' ' and SS (P) /= '=' loop\n+                  while SS (P) /= ' ' and then SS (P) /= '=' loop\n                      P := P + 1;\n                   end loop;\n "}]}