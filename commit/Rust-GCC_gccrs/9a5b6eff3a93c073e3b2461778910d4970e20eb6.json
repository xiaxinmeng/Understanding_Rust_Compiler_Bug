{"sha": "9a5b6eff3a93c073e3b2461778910d4970e20eb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1YjZlZmYzYTkzYzA3M2UzYjI0NjE3Nzg5MTBkNDk3MGUyMGViNg==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2001-05-22T20:32:16Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2001-05-22T20:32:16Z"}, "message": "g77.texi: Update maintenance information for GNU Fortran.\n\n2001-05-22  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* g77.texi: Update maintenance information for\n\tGNU Fortran.  Remove all mention of -fdebug-kludge.\n\t* news.texi: Make more news in 0.5.26 `user visible\n\tchanges'. Acknowledge work by important contributors.\n\t* bugs.texi: Remove all mention of -fdebug-kludge.\n\nFrom-SVN: r42468", "tree": {"sha": "39e295fee15c61cb201f66acc6034ec1d9ebd37c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39e295fee15c61cb201f66acc6034ec1d9ebd37c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a5b6eff3a93c073e3b2461778910d4970e20eb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5b6eff3a93c073e3b2461778910d4970e20eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a5b6eff3a93c073e3b2461778910d4970e20eb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5b6eff3a93c073e3b2461778910d4970e20eb6/comments", "author": null, "committer": null, "parents": [{"sha": "8206fc899cf6beab98d32015352a36ee631e4269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8206fc899cf6beab98d32015352a36ee631e4269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8206fc899cf6beab98d32015352a36ee631e4269"}], "stats": {"total": 274, "additions": 23, "deletions": 251}, "files": [{"sha": "c6ec0e0427f8ba086b7ce1fc91c539702d36343c", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=9a5b6eff3a93c073e3b2461778910d4970e20eb6", "patch": "@@ -1,3 +1,11 @@\n+2001-05-22  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* g77.texi: Update maintenance information for\n+\tGNU Fortran.  Remove all mention of -fdebug-kludge.\n+\t* news.texi: Make more news in 0.5.26 `user visible\n+\tchanges'. Acknowledge work by important contributors.\n+\t* bugs.texi: Remove all mention of -fdebug-kludge.\n+\n 2001-05-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in (f/g77.dvi): Include $(srcdir) in TEXINPUTS."}, {"sha": "3e63858184308dabb4fbdeeabd981f413eeab584", "filename": "gcc/f/bugs.texi", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2Fbugs.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2Fbugs.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbugs.texi?ref=9a5b6eff3a93c073e3b2461778910d4970e20eb6", "patch": "@@ -172,26 +172,6 @@ for information on how to change the point at which\n @code{g77} decides to issue this warning.\n @end ifset\n \n-@cindex debugging\n-@cindex common blocks\n-@cindex equivalence areas\n-@cindex local equivalence areas\n-@item\n-Previous versions of @code{g77} didn't emit information on\n-variable and array members of common blocks and equivalences\n-for use with a debugger (the @samp{-g} command-line option).\n-As of the version of @code{g77} shipped with version 3.0 of\n-@code{GCC}, this is corrected.\n-\n-As of Version 0.5.19, a temporary kludge solution is provided whereby\n-some rudimentary information on a member is written as a string that\n-is the member's value as a character string.\n-\n-@ifset DOC-G77\n-@xref{Code Gen Options,,Options for Code Generation Conventions},\n-for information on the @samp{-fdebug-kludge} option.\n-@end ifset\n-\n @cindex code, displaying main source\n @cindex displaying main source code\n @cindex debugging main source code"}, {"sha": "51ed84289e2bdbbcba8553efe3a2cf2e84bcf3ee", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 7, "deletions": 214, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=9a5b6eff3a93c073e3b2461778910d4970e20eb6", "patch": "@@ -820,11 +820,14 @@ without royalty; alteration is not permitted.\n @cindex funding improvements\n @cindex improvements, funding\n \n-Work on GNU Fortran is still being done mostly by its author,\n-James Craig Burley (@email{@value{email-burley}}), who is a volunteer\n-for, not an employee of, the Free Software Foundation (FSF).\n+James Craig Burley (@email{@value{email-burley}}), the original author\n+of g77, stopped working on it in September 1999\n (He has a web page at @uref{@value{www-burley}}.)\n \n+GNU Fortran is currently maintained by Toon Moene\n+(@email{toon@@moene.indiv.nluug.nl}), with the help of countless other\n+volunteers.\n+\n As with other GNU software, funding is important because it can pay for\n needed equipment, personnel, and so on.\n \n@@ -835,36 +838,6 @@ development of GNU software (such as GNU Fortran) in documents\n such as the ``GNUS Bulletin''.\n Email @email{gnu@@gnu.org} for information on funding the FSF.\n \n-To fund specific GNU Fortran work in particular, the FSF might\n-provide a means for that, but the FSF does not provide direct funding\n-to the author of GNU Fortran to continue his work.  The FSF has\n-employee salary restrictions that can be incompatible with the\n-financial needs of some volunteers, who therefore choose to\n-remain volunteers and thus be able to be free to do contract work\n-and otherwise make their own schedules for doing GNU work.\n-\n-Still, funding the FSF at least indirectly benefits work\n-on specific projects like GNU Fortran because it ensures the\n-continuing operation of the FSF offices, their workstations, their\n-network connections, and so on, which are invaluable to volunteers.\n-(Similarly, hiring Cygnus Support can help a project like GNU\n-Fortran---Cygnus has been a long-time donor of equipment usage to the author\n-of GNU Fortran, and this too has been invaluable---see @ref{Contributors}.)\n-\n-Currently, the only way to directly fund the author of GNU Fortran\n-in his work on that project is to hire him for the work you want\n-him to do, or donate money to him.\n-Several people have done this\n-already, with the result that he has not needed to immediately find\n-contract work on a few occasions.\n-If more people did this, he\n-would be able to plan on not doing contract work for many months and\n-could thus devote that time to work on projects (such as the planned\n-changes for 0.6) that require longer timeframes to complete.\n-For the latest information on the status of the author, do\n-@kbd{finger -l burley@@gnu.org} on a UNIX system\n-(or any system with a command like UNIX @code{finger}).\n-\n Another important way to support work on GNU Fortran is to volunteer\n to help out.\n Work is needed on documentation, testing, porting\n@@ -1462,7 +1435,7 @@ by type.  Explanations are in the following sections.\n -fpcc-struct-return  -freg-struct-return\n -fshort-double  -fno-common  -fpack-struct\n -fzeros  -fno-second-underscore\n--fdebug-kludge  -femulate-complex\n+-femulate-complex\n -falias-check  -fargument-alias\n -fargument-noalias  -fno-argument-noalias-global\n -fno-globals  -fflatten-arrays\n@@ -2650,25 +2623,6 @@ either your program or @code{g77}.\n Produce debugging information in the operating system's native format\n (stabs, COFF, XCOFF, or DWARF).  GDB can work with this debugging\n information.\n-\n-@cindex common blocks\n-@cindex equivalence areas\n-@cindex missing debug features\n-Support for this option in Fortran programs was incomplete up till\n-version 0.5.26 of @code{g77}.\n-In particular, names of variables and arrays in common blocks\n-or that are storage-associated via @code{EQUIVALENCE} were\n-unavailable to the debugger.\n-\n-However, version 0.5.19 of @code{g77} does provide this information\n-in a rudimentary way, as controlled by the\n-@samp{-fdebug-kludge} option.\n-\n-Because version 0.5.26 of @code{g77} enables full debug information\n-of COMMON BLOCK and EQUIVALENCE items, this option has been disabled.\n-\n-@xref{Code Gen Options,,Options for Code Generation Conventions},\n-for more information.\n @end table\n \n @xref{Debugging Options,,Options for Debugging Your Program or GNU CC,\n@@ -3208,82 +3162,6 @@ differently.\n The interpretation changes will affect only non-standard\n programs; standard-conforming programs should not be affected.\n \n-@cindex -fdebug-kludge option\n-@cindex options, -fdebug-kludge\n-@item -fdebug-kludge\n-Emit information on @code{COMMON} and @code{EQUIVALENCE} members\n-that might help users of debuggers work around lack of proper debugging\n-information on such members.\n-\n-As of version 0.5.19, @code{g77} offers this option to emit\n-information on members of aggregate areas to help users while debugging.\n-This information consists of establishing the type and contents of each\n-such member so that, when a debugger is asked to print the contents,\n-the printed information provides rudimentary debugging information.\n-This information identifies the name of the aggregate area (either the\n-@code{COMMON} block name, or the @code{g77}-assigned name for the\n-@code{EQUIVALENCE} name) and the offset, in bytes, of the member from\n-the beginning of the area.\n-\n-Using @code{gdb}, this information is not coherently displayed in the Fortran\n-language mode, so temporarily switching to the C language mode to display the\n-information is suggested.\n-Use @samp{set language c} and @samp{set language fortran} to accomplish this.\n-\n-As of version 0.5.26 of @code{g77} this option has been disabled, as the\n-compiler is now able to emit correct and complete debug information\n-for COMMON BLOCK and EQUIVALENCE items.\n-\n-For example:\n-\n-@smallexample\n-      COMMON /X/A,B\n-      EQUIVALENCE (C,D)\n-      CHARACTER XX*50\n-      EQUIVALENCE (I,XX(20:20))\n-      END\n-\n-GDB is free software and you are welcome to distribute copies of it\n- under certain conditions; type \"show copying\" to see the conditions.\n-There is absolutely no warranty for GDB; type \"show warranty\" for details.\n-GDB 4.16 (lm-gnits-dwim), Copyright 1996 Free Software Foundation, Inc...\n-(gdb) b MAIN__\n-Breakpoint 1 at 0t1200000201120112: file cd.f, line 5.\n-(gdb) r\n-Starting program: /home/user/a.out\n-\n-Breakpoint 1, MAIN__ () at cd.f:5\n-Current language:  auto; currently fortran\n-(gdb) set language c\n-Warning: the current language does not match this frame.\n-(gdb) p a\n-$2 = \"At (COMMON) `x_' plus 0 bytes\"\n-(gdb) p b\n-$3 = \"At (COMMON) `x_' plus 4 bytes\"\n-(gdb) p c\n-$4 = \"At (EQUIVALENCE) `__g77_equiv_c' plus 0 bytes\"\n-(gdb) p d\n-$5 = \"At (EQUIVALENCE) `__g77_equiv_c' plus 0 bytes\"\n-(gdb) p i\n-$6 = \"At (EQUIVALENCE) `__g77_equiv_xx' plus 20 bytes\"\n-(gdb) p xx\n-$7 = \"At (EQUIVALENCE) `__g77_equiv_xx' plus 1 bytes\"\n-(gdb) set language fortran\n-(gdb)\n-@end smallexample\n-\n-@noindent\n-Use @samp{-fdebug-kludge} to generate this information,\n-which might make some programs noticeably larger.\n-\n-@emph{Caution:} Future versions of @code{g77} might disregard this option\n-(and its negative form).\n-Current plans call for this to happen when published versions of @code{g77}\n-and @code{gdb} exist that provide proper access to debugging information on\n-@code{COMMON} and @code{EQUIVALENCE} members.  This is believed to have\n-happened as of version 0.5.26 of @code{g77}, so that this option has been\n-disabled starting with this release.\n-\n @cindex -femulate-complex option\n @cindex options, -femulate-complex\n @item -femulate-complex\n@@ -8846,54 +8724,6 @@ could be used to inhibit the appending of the underscore to the name.\n the same way @code{f2c} does,\n for compatibility with @code{f2c}.\n \n-Currently, @code{g77} does not emit ``true'' debugging information for\n-members of a @code{COMMON} area, due to an apparent bug in the GBE.\n-\n-(As of Version 0.5.19, @code{g77} emits debugging information for such\n-members in the form of a constant string specifying the base name of\n-the aggregate area and the offset of the member in bytes from the start\n-of the area.\n-Use the @samp{-fdebug-kludge} option to enable this behavior.\n-In @code{gdb}, use @samp{set language c} before printing the value\n-of the member, then @samp{set language fortran} to restore the default\n-language, since @code{gdb} doesn't provide a way to print a readable\n-version of a character string in Fortran language mode.\n-\n-This kludge will be removed in a future version of @code{g77} that,\n-in conjunction with a contemporary version of @code{gdb},\n-properly supports Fortran-language debugging, including access\n-to members of @code{COMMON} areas.)\n-\n-Version 0.5.26 of @code{g77} is believed to provide correct and\n-complete debug information for COMMON BLOCK and EQUIVALENCE items -\n-hence the @samp{-fdebug-kludge} option has been disabled.\n-\n-@xref{Code Gen Options,,Options for Code Generation Conventions},\n-for information on the @samp{-fdebug-kludge} option.\n-\n-Moreover, @code{g77} currently implements a @code{COMMON} area such that its\n-type is an array of the C @code{char} data type.\n-\n-So, when debugging, you must know the offset into a @code{COMMON} area\n-for a particular item in that area, and you have to take into\n-account the appropriate multiplier for the respective sizes\n-of the types (as declared in your code) for the items preceding\n-the item in question as compared to the size of the @code{char} type.\n-\n-For example, using default implicit typing, the statement\n-\n-@example\n-COMMON I(15), R(20), T\n-@end example\n-\n-@noindent\n-results in a public 144-byte @code{char} array named @samp{_BLNK__}\n-with @samp{I} placed at @samp{_BLNK__[0]}, @samp{R} at @samp{_BLNK__[60]},\n-and @samp{T} at @samp{_BLNK__[140]}.\n-(This is assuming that the target machine for\n-the compilation has 4-byte @code{INTEGER(KIND=1)} and @code{REAL(KIND=1)}\n-types.)\n-\n @node Local Equivalence Areas\n @section Local Equivalence Areas (EQUIVALENCE)\n @cindex equivalence areas\n@@ -8908,43 +8738,6 @@ A local @code{EQUIVALENCE} area is a collection of variables and arrays\n connected to each other in any way via @code{EQUIVALENCE}, none of which are\n listed in a @code{COMMON} statement.\n \n-Currently, @code{g77} does not emit ``true'' debugging information for\n-members in a local @code{EQUIVALENCE} area, due to an apparent bug in the GBE.\n-\n-(As of Version 0.5.19, @code{g77} does emit debugging information for such\n-members in the form of a constant string specifying the base name of\n-the aggregate area and the offset of the member in bytes from the start\n-of the area.\n-Use the @samp{-fdebug-kludge} option to enable this behavior.\n-In @code{gdb}, use @samp{set language c} before printing the value\n-of the member, then @samp{set language fortran} to restore the default\n-language, since @code{gdb} doesn't provide a way to print a readable\n-version of a character string in Fortran language mode.\n-\n-This kludge will be removed in a future version of @code{g77} that,\n-in conjunction with a contemporary version of @code{gdb},\n-properly supports Fortran-language debugging, including access\n-to members of @code{EQUIVALENCE} areas.)\n-\n-@xref{Code Gen Options,,Options for Code Generation Conventions},\n-for information on the @samp{-fdebug-kludge} option.\n-\n-Moreover, @code{g77} implements a local @code{EQUIVALENCE} area such that its\n-type is an array of the C @code{char} data type.\n-\n-The name @code{g77} gives this array of @code{char} type is @samp{__g77_equiv_@var{x}},\n-where @var{x} is the name of the item that is placed at the beginning (offset 0)\n-of this array.\n-If more than one such item is placed at the beginning, @var{x} is\n-the name that sorts to the top in an alphabetical sort of the list of\n-such items.\n-\n-When debugging, you must therefore access members of @code{EQUIVALENCE}\n-areas by specifying the appropriate @samp{__g77_equiv_@var{x}}\n-array section with the appropriate offset.\n-See the explanation of debugging @code{COMMON} blocks\n-for info applicable to debugging local @code{EQUIVALENCE} areas.\n-\n (@emph{Note:} @code{g77} version 0.5.18 and earlier chose the name\n for @var{x} using a different method when more than one name was\n in the list of names of entities placed at the beginning of the"}, {"sha": "cb9fbefc688ae4a2e83d3ae90e67c0bc3d5b9dda", "filename": "gcc/f/news.texi", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5b6eff3a93c073e3b2461778910d4970e20eb6/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=9a5b6eff3a93c073e3b2461778910d4970e20eb6", "patch": "@@ -162,52 +162,43 @@ The following information was last updated on @value{last-update-news}:\n \n @heading In prerelease, 0.5.26, @code{GCC} 3.0 versus @code{GCC} 2.95:\n @itemize @bullet\n-@ifclear USERVISONLY\n @item\n When a REWIND was issued after a WRITE statement on an unformatted\n file, the implicit truncation was performed by copying the truncated\n file to /tmp and copying the result back.  This has been fixed by using\n the @code{ftruncate} OS function.  Thanks go to the GAMESS developers\n for bringing this to our attention.\n-@end ifclear\n \n-@ifclear USERVISONLY\n+@item\n+Using options @code{-g}, @code{-ggdb} or @code{-gdwarf[-2]} (where\n+appropriate for your target) now also enables debugging information\n+for COMMON BLOCK and EQUIVALENCE items to be emitted.\n+Thanks go to Andrew Vaught (@email{andy@@xena.eas.asu.edu}) and\n+George Helffrich (@email{george@@geology.bristol.ac.uk}) for\n+fixing this longstanding problem.\n+\n @item\n It is not necessary anymore to use the option @code{-femulate-complex}\n to compile Fortran code using COMPLEX arithmetic, even on 64-bit machines\n (like the Alpha).  This will improve code generation.\n-@end ifclear\n \n-@ifclear USERVISONLY\n @item\n INTRINSIC arithmetic functions are now treated as routines that do not\n depend on anything but their argument(s).  This enables further instruction\n scheduling, because it is known that they cannot read or modify arbitrary\n locations.\n-@end ifclear\n \n @ifclear USERVISONLY\n @item\n Upgrade to @code{libf2c} as of 2000-12-05.\n \n This fixes a bug where a namelist containing initialization of LOGICAL\n items and a variable starting with T or F would be read incorrectly.\n-@end ifclear\n \n-@ifclear USERVISONLY\n-@item\n-Using options @code{-g}, @code{-ggdb} or @code{-gdwarf[-2]} (where\n-appropriate for your target) now also enables debugging information\n-for COMMON BLOCK and EQUIVALENCE items to be emitted.\n-@end ifclear\n-\n-@ifclear USERVISONLY\n @item\n The @code{TtyNam} intrinsics now set @var{Name} to all spaces (at run time)\n if the system has no @code{ttyname} implementation available.\n-@end ifclear\n \n-@ifclear USERVISONLY\n @item\n Upgrade to @code{libf2c} as of 1999-06-28.\n "}]}