{"sha": "9bc825c4bac44e0c7eabb39727c4741b6b1a9255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJjODI1YzRiYWM0NGUwYzdlYWJiMzk3MjdjNDc0MWI2YjFhOTI1NQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-01-31T22:50:48Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-01-31T22:50:48Z"}, "message": "jni.cc (_Jv_JNI_NewObjectArray): Check that initializer can be cast to element type.\n\n\t* jni.cc (_Jv_JNI_NewObjectArray): Check that initializer can be\n\tcast to element type.\n\t(_Jv_JNI_SetObjectArrayElement): Check array bounds.\n\t(_Jv_JNI_GetObjectArrayElement): Likewise.\n\nFrom-SVN: r62210", "tree": {"sha": "c6168c23fa33ae236c5ed8d24550103a0ed28dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6168c23fa33ae236c5ed8d24550103a0ed28dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bc825c4bac44e0c7eabb39727c4741b6b1a9255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc825c4bac44e0c7eabb39727c4741b6b1a9255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc825c4bac44e0c7eabb39727c4741b6b1a9255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc825c4bac44e0c7eabb39727c4741b6b1a9255/comments", "author": null, "committer": null, "parents": [{"sha": "0120f3d478fb1aa57fda945471357e5c5006f58d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0120f3d478fb1aa57fda945471357e5c5006f58d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0120f3d478fb1aa57fda945471357e5c5006f58d"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "c060e1c26042d8d4620350a8a6c09e225732a460", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc825c4bac44e0c7eabb39727c4741b6b1a9255/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc825c4bac44e0c7eabb39727c4741b6b1a9255/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9bc825c4bac44e0c7eabb39727c4741b6b1a9255", "patch": "@@ -1,5 +1,10 @@\n 2003-01-31  Tom Tromey  <tromey@redhat.com>\n \n+\t* jni.cc (_Jv_JNI_NewObjectArray): Check that initializer can be\n+\tcast to element type.\n+\t(_Jv_JNI_SetObjectArrayElement): Check array bounds.\n+\t(_Jv_JNI_GetObjectArrayElement): Likewise.\n+\n \t* Makefile.in: Rebuilt.\n \t* Makefile.am (cond_x_ltlibrary): Renamed library to\n \tlib-gnu-awt-xlib.la."}, {"sha": "c1a2880156d526976b9c39eb355d9f26f7cd877c", "filename": "libjava/jni.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc825c4bac44e0c7eabb39727c4741b6b1a9255/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc825c4bac44e0c7eabb39727c4741b6b1a9255/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=9bc825c4bac44e0c7eabb39727c4741b6b1a9255", "patch": "@@ -1,6 +1,6 @@\n // jni.cc - JNI implementation, including the jump table.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -1388,6 +1388,7 @@ static jarray\n       elementClass = unwrap (elementClass);\n       init = unwrap (init);\n \n+      _Jv_CheckCast (elementClass, init);\n       jarray result = JvNewObjectArray (length, elementClass, init);\n       return (jarray) wrap_value (env, result);\n     }\n@@ -1402,6 +1403,8 @@ static jobject\n (JNICALL _Jv_JNI_GetObjectArrayElement) (JNIEnv *env, jobjectArray array, \n                                          jsize index)\n {\n+  if ((unsigned) index >= (unsigned) array->length)\n+    _Jv_ThrowBadArrayIndex (index);\n   jobject *elts = elements (unwrap (array));\n   return wrap_value (env, elts[index]);\n }\n@@ -1416,6 +1419,8 @@ static void\n       value = unwrap (value);\n \n       _Jv_CheckArrayStore (array, value);\n+      if ((unsigned) index >= (unsigned) array->length)\n+\t_Jv_ThrowBadArrayIndex (index);\n       jobject *elts = elements (array);\n       elts[index] = value;\n     }"}]}