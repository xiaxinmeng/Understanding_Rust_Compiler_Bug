{"sha": "cc1df30bb15bcd10e297253d0d63bf62ceebddd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MxZGYzMGJiMTViY2QxMGUyOTcyNTNkMGQ2M2JmNjJjZWViZGRkMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-03-21T20:22:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-03-21T20:22:12Z"}, "message": "i386.md (*movdi_internal): Disparage slightly all MMX moves to/from memory.\n\n\t* config/i386/i386.md (*movdi_internal): Disparage slightly\n\tall MMX moves to/from memory.  Use Yi instead of x for SSE-MMX\n\tconversion alternatives.\n\nFrom-SVN: r196888", "tree": {"sha": "b62950bb318509ae04752d2f6a02b14fc7f777d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b62950bb318509ae04752d2f6a02b14fc7f777d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc1df30bb15bcd10e297253d0d63bf62ceebddd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1df30bb15bcd10e297253d0d63bf62ceebddd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc1df30bb15bcd10e297253d0d63bf62ceebddd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1df30bb15bcd10e297253d0d63bf62ceebddd3/comments", "author": null, "committer": null, "parents": [{"sha": "37e9911604ec069ee198879bb3a4af5d47b82a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e9911604ec069ee198879bb3a4af5d47b82a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e9911604ec069ee198879bb3a4af5d47b82a6b"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "da851ad180b3713015eaea7eff127034cef0ae2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc1df30bb15bcd10e297253d0d63bf62ceebddd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc1df30bb15bcd10e297253d0d63bf62ceebddd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc1df30bb15bcd10e297253d0d63bf62ceebddd3", "patch": "@@ -1,3 +1,9 @@\n+2013-03-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movdi_internal): Disparage slightly\n+\tall MMX moves to/from memory.  Use Yi instead of x for SSE-MMX\n+\tconversion alternatives.\n+\n 2013-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/48087\n@@ -53,8 +59,7 @@\n \t(refs_independent_p): Do not test for unanalyzed mems here.\n \t(ref_indep_loop_p_1): Special-case disambiguation against\n \tthe unanalyzed ref.\n-\t(ref_indep_loop_p): Assert we are not queried for the\n-\tunanalyzed mem.\n+\t(ref_indep_loop_p): Assert we are not queried for the unanalyzed mem.\n \n 2013-03-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n@@ -70,8 +75,7 @@\n \t* config/arm/arm.h (TARGET_PREFER_NEON_64BITS): New macro.\n \t(prefer_neon_for_64bits): Declare new variable.\n \t* config/arm/arm.md (arch): Rename neon_onlya8 and neon_nota8 to\n-\tavoid_neon_for_64bits and neon_for_64bits. Remove onlya8 and\n-\tnota8.\n+\tavoid_neon_for_64bits and neon_for_64bits. Remove onlya8 and nota8.\n \t(arch_enabled): Handle new arch types. Remove support for onlya8\n \tand nota8.\n \t(one_cmpldi2): Use new arch names.\n@@ -88,8 +92,7 @@\n \tPR tree-optimization/39326\n \t* tree-ssa-loop-im.c (bb_loop_postorder): New global static.\n \t(sort_bbs_in_loop_postorder_cmp): New function.\n-\t(gather_mem_refs_in_loops): Assign mem-ref IDs in loop\n-\tpostorder.\n+\t(gather_mem_refs_in_loops): Assign mem-ref IDs in loop postorder.\n \n 2013-03-21  Richard Biener  <rguenther@suse.de>\n "}, {"sha": "69354d55936c939e6e9f6b260b8e788daaf20ace", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc1df30bb15bcd10e297253d0d63bf62ceebddd3/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc1df30bb15bcd10e297253d0d63bf62ceebddd3/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cc1df30bb15bcd10e297253d0d63bf62ceebddd3", "patch": "@@ -1864,9 +1864,9 @@\n \n (define_insn \"*movdi_internal\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-    \"=r  ,o  ,r,r  ,r,m ,*y,m*y,*y,?*y,?r ,?*Ym,*x,*x,*x,m ,?r ,?*Yi,?*x,?*Ym\")\n+    \"=r  ,o  ,r,r  ,r,m ,*y,*y,?*y,?m,?r ,?*Ym,*x,*x,*x,m ,?r ,?*Yi,?*Ym,?*Yi\")\n \t(match_operand:DI 1 \"general_operand\"\n-    \"riFo,riF,Z,rem,i,re,C ,*y ,m ,m  ,*Ym,r   ,C ,*x,m ,*x,*Yi,r   ,*Ym,*x\"))]\n+    \"riFo,riF,Z,rem,i,re,C ,*y,m  ,*y,*Ym,r   ,C ,*x,m ,*x,*Yi,r   ,*Yi ,*Ym\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n   switch (get_attr_type (insn))\n@@ -1936,12 +1936,10 @@\n     }\n }\n   [(set (attr \"isa\")\n-     (cond [(eq_attr \"alternative\" \"0,1,8\")\n+     (cond [(eq_attr \"alternative\" \"0,1\")\n \t      (const_string \"nox64\")\n-\t    (eq_attr \"alternative\" \"2,3,4,5,9,10,11,16,17\")\n+\t    (eq_attr \"alternative\" \"2,3,4,5,10,11,16,17\")\n \t      (const_string \"x64\")\n-\t    (eq_attr \"alternative\" \"18,19\")\n-\t      (const_string \"sse2\")\n \t   ]\n \t   (const_string \"*\")))\n    (set (attr \"type\")"}]}