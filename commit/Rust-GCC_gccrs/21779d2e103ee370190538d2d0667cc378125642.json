{"sha": "21779d2e103ee370190538d2d0667cc378125642", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE3NzlkMmUxMDNlZTM3MDE5MDUzOGQyZDA2NjdjYzM3ODEyNTY0Mg==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2009-12-14T19:10:56Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2009-12-14T19:10:56Z"}, "message": "re PR fortran/42354 (Invalidly accepts C_LOC in init expressions)\n\ngcc/fortran/:\n2009-12-14  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/42354\n\t* expr.c (check_init_expr): Do not check for specification functions.\n\ngcc/testsuite/:\n2009-12-14  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/42354\n\t* gfortran.dg/iso_c_binding_init_expr.f03: New.\n\t* gfortran.dg/intrinsic_std_1.f90: Fixed expected error message.\n\t* gfortran.dg/function_kinds_5.f90: Likewise.\n\t* gfortran.dg/selected_char_kind_3.f90: Likewise.\n\nFrom-SVN: r155234", "tree": {"sha": "84ec3fe6182b4469ceeed23df4a240f156c63c2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84ec3fe6182b4469ceeed23df4a240f156c63c2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21779d2e103ee370190538d2d0667cc378125642", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21779d2e103ee370190538d2d0667cc378125642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21779d2e103ee370190538d2d0667cc378125642", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21779d2e103ee370190538d2d0667cc378125642/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e25ca6b3001f31fe48671c3d8c5f17cb7984288"}], "stats": {"total": 91, "additions": 57, "deletions": 34}, "files": [{"sha": "9319b73b4cfbad671dedb30432d8dd0d9fe5612f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -1,3 +1,8 @@\n+2009-12-14  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/42354\n+\t* expr.c (check_init_expr): Do not check for specification functions.\n+\n 2009-12-11 Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42257"}, {"sha": "72420ff01b5b443e367deb85e7f0d7b67992fc74", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 30, "deletions": 31, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -2286,40 +2286,39 @@ check_init_expr (gfc_expr *e)\n     case EXPR_FUNCTION:\n       t = FAILURE;\n \n-      if ((m = check_specification_function (e)) != MATCH_YES)\n-\t{\n-\t  gfc_intrinsic_sym* isym;\n-          gfc_symbol* sym;\n+      {\n+\tgfc_intrinsic_sym* isym;\n+\tgfc_symbol* sym;\n \n-          sym = e->symtree->n.sym;\n-\t  if (!gfc_is_intrinsic (sym, 0, e->where)\n-              || (m = gfc_intrinsic_func_interface (e, 0)) != MATCH_YES)\n-\t    {\n-\t      gfc_error (\"Function '%s' in initialization expression at %L \"\n-\t\t\t \"must be an intrinsic or a specification function\",\n-\t\t\t e->symtree->n.sym->name, &e->where);\n-\t      break;\n-\t    }\n+\tsym = e->symtree->n.sym;\n+\tif (!gfc_is_intrinsic (sym, 0, e->where)\n+\t    || (m = gfc_intrinsic_func_interface (e, 0)) != MATCH_YES)\n+\t  {\n+\t    gfc_error (\"Function '%s' in initialization expression at %L \"\n+\t\t       \"must be an intrinsic function\",\n+\t\t       e->symtree->n.sym->name, &e->where);\n+\t    break;\n+\t  }\n \n-\t  if ((m = check_conversion (e)) == MATCH_NO\n-\t      && (m = check_inquiry (e, 1)) == MATCH_NO\n-\t      && (m = check_null (e)) == MATCH_NO\n-\t      && (m = check_transformational (e)) == MATCH_NO\n-\t      && (m = check_elemental (e)) == MATCH_NO)\n-\t    {\n-\t      gfc_error (\"Intrinsic function '%s' at %L is not permitted \"\n-\t\t\t \"in an initialization expression\",\n-\t\t\t e->symtree->n.sym->name, &e->where);\n-\t      m = MATCH_ERROR;\n-\t    }\n+\tif ((m = check_conversion (e)) == MATCH_NO\n+\t    && (m = check_inquiry (e, 1)) == MATCH_NO\n+\t    && (m = check_null (e)) == MATCH_NO\n+\t    && (m = check_transformational (e)) == MATCH_NO\n+\t    && (m = check_elemental (e)) == MATCH_NO)\n+\t  {\n+\t    gfc_error (\"Intrinsic function '%s' at %L is not permitted \"\n+\t\t       \"in an initialization expression\",\n+\t\t       e->symtree->n.sym->name, &e->where);\n+\t    m = MATCH_ERROR;\n+\t  }\n \n-\t  /* Try to scalarize an elemental intrinsic function that has an\n-\t     array argument.  */\n-          isym = gfc_find_function (e->symtree->n.sym->name);\n-\t  if (isym && isym->elemental\n-\t\t&& (t = scalarize_intrinsic_call (e)) == SUCCESS)\n-\t    break;\n-\t}\n+\t/* Try to scalarize an elemental intrinsic function that has an\n+\t   array argument.  */\n+\tisym = gfc_find_function (e->symtree->n.sym->name);\n+\tif (isym && isym->elemental\n+\t    && (t = scalarize_intrinsic_call (e)) == SUCCESS)\n+\t  break;\n+      }\n \n       if (m == MATCH_YES)\n \tt = gfc_simplify_expr (e, 0);"}, {"sha": "ddef45be56161289aa2c233d84bbf9a02b50f7cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -1,3 +1,11 @@\n+2009-12-14  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/42354\n+\t* gfortran.dg/iso_c_binding_init_expr.f03: New.\n+\t* gfortran.dg/intrinsic_std_1.f90: Fixed expected error message.\n+\t* gfortran.dg/function_kinds_5.f90: Likewise.\n+\t* gfortran.dg/selected_char_kind_3.f90: Likewise.\n+\n 2009-12-14  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \t* gfortran.dg/boz_15.f90: Fix typos."}, {"sha": "e48484ec30dc212705fc023c18820ac2f9f22b3d", "filename": "gcc/testsuite/gfortran.dg/function_kinds_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_kinds_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_kinds_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunction_kinds_5.f90?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -5,6 +5,6 @@\n !\n ! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n !\n-real (bad_kind(0d0)) function foo () ! { dg-error \"must be an intrinsic or\" }\n+real (bad_kind(0d0)) function foo () ! { dg-error \"must be an intrinsic function\" }\n   foo = real (kind (foo))\n end function"}, {"sha": "9c97b7eaa5d61122332e815dc18bceca1b6fe43b", "filename": "gcc/testsuite/gfortran.dg/intrinsic_std_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_std_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_std_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_std_1.f90?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -32,7 +32,7 @@ END SUBROUTINE implicit_type\n \n SUBROUTINE specification_expression\n   CHARACTER(KIND=selected_char_kind(\"ascii\")) :: x\n-! { dg-error \"specification function\" \"\" { target \"*-*-*\" } 34 }\n+! { dg-error \"must be an intrinsic function\" \"\" { target \"*-*-*\" } 34 }\n ! { dg-warning \"Fortran 2003\" \"\" { target \"*-*-*\" } 34 }\n END SUBROUTINE specification_expression\n "}, {"sha": "840b60e4eb264d663813fc11dbd6bc6a486333d8", "filename": "gcc/testsuite/gfortran.dg/iso_c_binding_init_expr.f03", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_init_expr.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_init_expr.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_init_expr.f03?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do \"compile\" }\n+! PR fortran/42354\n+\n+use iso_c_binding\n+implicit none\n+integer, target :: a\n+type t\n+  type(c_ptr) :: ptr = c_loc(a)    ! { dg-error \"must be an intrinsic function\" }\n+end type t\n+type(c_ptr) :: ptr2 = c_loc(a)     ! { dg-error \"must be an intrinsic function\" }\n+end"}, {"sha": "59bc18f1f6fc30d49e95d08e3dfcbd7fc8f40761", "filename": "gcc/testsuite/gfortran.dg/selected_char_kind_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Fselected_char_kind_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21779d2e103ee370190538d2d0667cc378125642/gcc%2Ftestsuite%2Fgfortran.dg%2Fselected_char_kind_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselected_char_kind_3.f90?ref=21779d2e103ee370190538d2d0667cc378125642", "patch": "@@ -4,7 +4,7 @@\n ! Check that SELECTED_CHAR_KIND is rejected with -std=f95\n !\n   implicit none\n-  character(kind=selected_char_kind(\"ascii\")) :: s ! { dg-error \"must be an intrinsic or a specification function\" }\n+  character(kind=selected_char_kind(\"ascii\")) :: s ! { dg-error \"must be an intrinsic function\" }\n   s = \"\" ! { dg-error \"has no IMPLICIT type\" }\n   print *, s\n end"}]}