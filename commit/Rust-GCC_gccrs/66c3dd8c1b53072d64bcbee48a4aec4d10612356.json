{"sha": "66c3dd8c1b53072d64bcbee48a4aec4d10612356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjM2RkOGMxYjUzMDcyZDY0YmNiZWU0OGE0YWVjNGQxMDYxMjM1Ng==", "commit": {"author": {"name": "Pitchumani Sivanupandi", "email": "pitchumani.s@atmel.com", "date": "2016-08-08T17:37:57Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2016-08-08T17:37:57Z"}, "message": "driver-avr.c (specfiles_doc_url): Remove.\n\n\t* config/avr/driver-avr.c (specfiles_doc_url): Remove.\n\t(avr_diagnose_devicespecs_error): Remove.\n\t(avr_devicespecs_file): Remove composing absolute path for specfile\n\tand its verbose info. Remove conditions to check specs-file,\n\nFrom-SVN: r239246", "tree": {"sha": "647f43c08947505a848ee3efe3eab74dc958451f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/647f43c08947505a848ee3efe3eab74dc958451f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66c3dd8c1b53072d64bcbee48a4aec4d10612356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c3dd8c1b53072d64bcbee48a4aec4d10612356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c3dd8c1b53072d64bcbee48a4aec4d10612356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c3dd8c1b53072d64bcbee48a4aec4d10612356/comments", "author": null, "committer": null, "parents": [{"sha": "989d0071bbb6fe7acb88a9cb250f790583829e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989d0071bbb6fe7acb88a9cb250f790583829e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/989d0071bbb6fe7acb88a9cb250f790583829e56"}], "stats": {"total": 72, "additions": 17, "deletions": 55}, "files": [{"sha": "1d1f3594d01f696d9137fc58b1a978da001dd557", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c3dd8c1b53072d64bcbee48a4aec4d10612356/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c3dd8c1b53072d64bcbee48a4aec4d10612356/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66c3dd8c1b53072d64bcbee48a4aec4d10612356", "patch": "@@ -1,3 +1,10 @@\n+2016-07-29  Pitchumani Sivanupandi <pitchumani.s@atmel.com>\n+\n+\t* config/avr/driver-avr.c (specfiles_doc_url): Remove.\n+\t(avr_diagnose_devicespecs_error): Remove.\n+\t(avr_devicespecs_file): Remove composing absolute path for specfile\n+\tand its verbose info. Remove conditions to check specs-file,\n+\n 2016-08-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/72821"}, {"sha": "8a8fd50449f5fbf4e508d0f94339774bbf9ec038", "filename": "gcc/config/avr/driver-avr.c", "status": "modified", "additions": 10, "deletions": 55, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c3dd8c1b53072d64bcbee48a4aec4d10612356/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c3dd8c1b53072d64bcbee48a4aec4d10612356/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fdriver-avr.c?ref=66c3dd8c1b53072d64bcbee48a4aec4d10612356", "patch": "@@ -29,41 +29,18 @@ along with GCC; see the file COPYING3.  If not see\n \n static const char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n \n-static const char specfiles_doc_url[] =\n-  \"http://gcc.gnu.org/onlinedocs/gcc/Spec-Files.html\";\n-\n-\n-static const char*\n-avr_diagnose_devicespecs_error (const char *mcu, const char *filename)\n-{\n-  error (\"cannot access device-specs for %qs expected at %qs\",\n-         mcu, filename);\n-\n-  // Inform about natively supported devices and cores.\n-\n-  if (strncmp (mcu, \"avr\", strlen (\"avr\")))\n-    avr_inform_devices ();\n-\n-  avr_inform_core_architectures ();\n-\n-  inform (input_location, \"you can provide your own specs files, \"\n-          \"see <%s> for details\", specfiles_doc_url);\n-\n-  return X_NODEVLIB;\n-}\n-\n \n /* Implement spec function `device-specs-file\u00b4.\n \n-   Compose -specs=<specs-file-name>%s.  If everything went well then argv[0]\n-   is the inflated (absolute) specs directory and argv[1] is a device or\n-   core name as supplied by -mmcu=*.  When building GCC the path might\n-   be relative.  */\n+   Validate mcu name given with -mmcu option. Compose\n+   -specs=<specs-file-name>%s. If everything went well then argv[0] is the\n+   inflated (absolute) first device-specs directory and argv[1] is a device\n+   or core name as supplied by -mmcu=*. When building GCC the path might be\n+   relative.  */\n \n const char*\n avr_devicespecs_file (int argc, const char **argv)\n {\n-  char *specfile_name;\n   const char *mmcu = NULL;\n \n #ifdef DEBUG_SPECS\n@@ -111,14 +88,6 @@ avr_devicespecs_file (int argc, const char **argv)\n       break;\n     }\n \n-  specfile_name = concat (argv[0], dir_separator_str, \"specs-\", mmcu, NULL);\n-\n-#ifdef DEBUG_SPECS\n-  if (verbose_flag)\n-    fnotice (stderr, \"'%s': mmcu='%s'\\n'%s': specfile='%s'\\n\\n\",\n-             __FUNCTION__, mmcu, __FUNCTION__, specfile_name);\n-#endif\n-\n   // Filter out silly -mmcu= arguments like \"foo bar\".\n \n   for (const char *s = mmcu; *s; s++)\n@@ -131,26 +100,12 @@ avr_devicespecs_file (int argc, const char **argv)\n         return X_NODEVLIB;\n       }\n \n-  if (/* When building / configuring the compiler we might get a relative path\n-         as supplied by \"-B.\".  Assume that the specs file exists and MCU is\n-         a core, not a proper device then, i.e. we have \"-mmcu=avr*\".  */\n-      (0 == strncmp (mmcu, \"avr\", strlen (\"avr\"))\n-       && specfile_name[0] == '.')\n-      /* vanilla */\n-      || (IS_ABSOLUTE_PATH (specfile_name)\n-          && !access (specfile_name, R_OK)))\n-    {\n-      return concat (\"-specs=device-specs\", dir_separator_str, \"specs-\", mmcu,\n-                     // Use '%s' instead of the expanded specfile_name.  This\n-                     // is the easiest way to handle pathes containing spaces.\n-                     \"%s\",\n+  return concat (\"-specs=device-specs\", dir_separator_str, \"specs-\",\n+                 mmcu, \"%s\"\n #if defined (WITH_AVRLIBC)\n-                     \" %{mmcu=avr*:\" X_NODEVLIB \"} %{!mmcu=*:\" X_NODEVLIB \"}\",\n+                 \" %{mmcu=avr*:\" X_NODEVLIB \"} %{!mmcu=*:\" X_NODEVLIB \"}\",\n #else\n-                     \" \" X_NODEVLIB,\n+                 \" \" X_NODEVLIB,\n #endif\n-                     NULL);\n-    }\n-\n-  return avr_diagnose_devicespecs_error (mmcu, specfile_name);\n+                 NULL);\n }"}]}