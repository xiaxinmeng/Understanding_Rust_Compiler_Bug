{"sha": "3691626c344d5f04b933ef6c70f0c0fb58d25151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY5MTYyNmMzNDRkNWYwNGI5MzNlZjZjNzBmMGMwZmI1OGQyNTE1MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-23T16:29:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-23T16:29:33Z"}, "message": "cgraph.h (struct cgraph_node): Reorder fields for 64-bit hosts.\n\n2009-03-23  Richard Guenther  <rguenther@suse.de>\n\n\t* cgraph.h (struct cgraph_node): Reorder fields for 64-bit hosts.\n\t* tree.h (struct tree_type): Likewise.\n\t* reload.h (struct insn_chain): Likewise.\n\t* dwarf2out.c (struct dw_loc_descr_struct): Likewise.\n\t* function.h (struct function): Likewise.\n\t* tree-ssa-structalias.c (struct equiv_class_label): Likewise.\n\nFrom-SVN: r145009", "tree": {"sha": "a53e7634a67bdd62e10ed93275097fbd631441ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a53e7634a67bdd62e10ed93275097fbd631441ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3691626c344d5f04b933ef6c70f0c0fb58d25151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3691626c344d5f04b933ef6c70f0c0fb58d25151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3691626c344d5f04b933ef6c70f0c0fb58d25151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3691626c344d5f04b933ef6c70f0c0fb58d25151/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88ccb72ad199fe41a52bd85e9adad1ae17544db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ccb72ad199fe41a52bd85e9adad1ae17544db1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ccb72ad199fe41a52bd85e9adad1ae17544db1"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "00290b54fa56a16f08306711f424d53bf9fd1822", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -1,3 +1,12 @@\n+2009-03-23  Richard Guenther  <rguenther@suse.de>\n+\n+\t* cgraph.h (struct cgraph_node): Reorder fields for 64-bit hosts.\n+\t* tree.h (struct tree_type): Likewise.\n+\t* reload.h (struct insn_chain): Likewise.\n+\t* dwarf2out.c (struct dw_loc_descr_struct): Likewise.\n+\t* function.h (struct function): Likewise.\n+\t* tree-ssa-structalias.c (struct equiv_class_label): Likewise.\n+\n 2009-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/39516"}, {"sha": "29fc1ba4a4d8e7d18c2ca7b735836a98f1507bb2", "filename": "gcc/cgraph.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -163,6 +163,10 @@ struct cgraph_node GTY((chain_next (\"%h.next\"), chain_prev (\"%h.previous\")))\n   /* Ordering of all cgraph nodes.  */\n   int order;\n \n+  /* unique id for profiling. pid is not suitable because of different\n+     number of cfg nodes with -fprofile-generate and -fprofile-use */\n+  int pid;\n+\n   /* Set when function must be output - it is externally visible\n      or its address is taken.  */\n   unsigned needed : 1;\n@@ -186,10 +190,6 @@ struct cgraph_node GTY((chain_next (\"%h.next\"), chain_prev (\"%h.previous\")))\n      into clone before compiling so the function in original form can be\n      inlined later.  This pointer points to the clone.  */\n   tree inline_decl;\n-\n-  /* unique id for profiling. pid is not suitable because of different\n-     number of cfg nodes with -fprofile-generate and -fprofile-use */\n-  int pid;\n };\n \n struct cgraph_edge GTY((chain_next (\"%h.next_caller\"), chain_prev (\"%h.prev_caller\")))"}, {"sha": "af5c99484bcf4e7c9a646a1a051005f19cae3d9b", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -3499,9 +3499,9 @@ typedef struct dw_loc_descr_struct GTY(())\n {\n   dw_loc_descr_ref dw_loc_next;\n   enum dwarf_location_atom dw_loc_opc;\n+  int dw_loc_addr;\n   dw_val_node dw_loc_oprnd1;\n   dw_val_node dw_loc_oprnd2;\n-  int dw_loc_addr;\n }\n dw_loc_descr_node;\n "}, {"sha": "31d223a3d395b3acda78e8a10d46b13bf26bb830", "filename": "gcc/function.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -501,9 +501,6 @@ struct function GTY(())\n      pointer.  */\n   tree nonlocal_goto_save_area;\n \n-  /* Function sequence number for profiling, debugging, etc.  */\n-  int funcdef_no;\n-\n   /* List of function local variables, functions, types and constants.  */\n   tree local_decls;\n \n@@ -521,6 +518,9 @@ struct function GTY(())\n   /* Last statement uid.  */\n   int last_stmt_uid;\n \n+  /* Function sequence number for profiling, debugging, etc.  */\n+  int funcdef_no;\n+\n   /* Line number of the start of the function for debugging purposes.  */\n   location_t function_start_locus;\n "}, {"sha": "3789680f7cad4a1d1acc4c77cae1f08218242d38", "filename": "gcc/reload.h", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -205,10 +205,22 @@ struct insn_chain\n      all insns that need reloading.  */\n   struct insn_chain *next_need_reload;\n \n-  /* The basic block this insn is in.  */\n-  int block;\n   /* The rtx of the insn.  */\n   rtx insn;\n+\n+  /* The basic block this insn is in.  */\n+  int block;\n+\n+  /* Nonzero if find_reloads said the insn requires reloading.  */\n+  unsigned int need_reload:1;\n+  /* Nonzero if find_reloads needs to be run during reload_as_needed to\n+     perform modifications on any operands.  */\n+  unsigned int need_operand_change:1;\n+  /* Nonzero if eliminate_regs_in_insn said it requires eliminations.  */\n+  unsigned int need_elim:1;\n+  /* Nonzero if this insn was inserted by perform_caller_saves.  */\n+  unsigned int is_caller_save_insn:1;\n+\n   /* Register life information: record all live hard registers, and\n      all live pseudos that have a hard register.  This set also\n      contains pseudos spilled by IRA.  */\n@@ -221,16 +233,6 @@ struct insn_chain\n \n   /* Indicates which registers have already been used for spills.  */\n   HARD_REG_SET used_spill_regs;\n-\n-  /* Nonzero if find_reloads said the insn requires reloading.  */\n-  unsigned int need_reload:1;\n-  /* Nonzero if find_reloads needs to be run during reload_as_needed to\n-     perform modifications on any operands.  */\n-  unsigned int need_operand_change:1;\n-  /* Nonzero if eliminate_regs_in_insn said it requires eliminations.  */\n-  unsigned int need_elim:1;\n-  /* Nonzero if this insn was inserted by perform_caller_saves.  */\n-  unsigned int is_caller_save_insn:1;\n };\n \n /* A chain of insn_chain structures to describe all non-note insns in"}, {"sha": "384fe1867cd73ef861ae1479a6c5c14151df060d", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -1817,9 +1817,9 @@ compute_topo_order (constraint_graph_t graph,\n \n typedef struct equiv_class_label\n {\n+  hashval_t hashcode;\n   unsigned int equivalence_class;\n   bitmap labels;\n-  hashval_t hashcode;\n } *equiv_class_label_t;\n typedef const struct equiv_class_label *const_equiv_class_label_t;\n "}, {"sha": "e1c52e135b301214b044fb5343df50e1d02cf9f7", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3691626c344d5f04b933ef6c70f0c0fb58d25151/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3691626c344d5f04b933ef6c70f0c0fb58d25151", "patch": "@@ -2286,6 +2286,7 @@ struct tree_type GTY(())\n   unsigned user_align : 1;\n \n   unsigned int align;\n+  alias_set_type alias_set;\n   tree pointer_to;\n   tree reference_to;\n   union tree_type_symtab {\n@@ -2302,7 +2303,6 @@ struct tree_type GTY(())\n   tree binfo;\n   tree context;\n   tree canonical;\n-  alias_set_type alias_set;\n   /* Points to a structure whose details depend on the language in use.  */\n   struct lang_type *lang_specific;\n };"}]}