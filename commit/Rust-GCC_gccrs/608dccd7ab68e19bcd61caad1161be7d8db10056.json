{"sha": "608dccd7ab68e19bcd61caad1161be7d8db10056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA4ZGNjZDdhYjY4ZTE5YmNkNjFjYWFkMTE2MWJlN2Q4ZGIxMDA1Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-14T14:09:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-14T14:09:11Z"}, "message": "* config/i386/sse.md: Fix whitespace and formatting.\n\nFrom-SVN: r186455", "tree": {"sha": "e61cd7d8dba318492b3eda417bb1f4c69237520a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e61cd7d8dba318492b3eda417bb1f4c69237520a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/608dccd7ab68e19bcd61caad1161be7d8db10056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/608dccd7ab68e19bcd61caad1161be7d8db10056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/608dccd7ab68e19bcd61caad1161be7d8db10056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/608dccd7ab68e19bcd61caad1161be7d8db10056/comments", "author": null, "committer": null, "parents": [{"sha": "8861ba4daf2654924528943b341ccb521ada66d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8861ba4daf2654924528943b341ccb521ada66d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8861ba4daf2654924528943b341ccb521ada66d3"}], "stats": {"total": 640, "additions": 224, "deletions": 416}, "files": [{"sha": "d270c634ae0040cd76270302fb1e3796a5267901", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 224, "deletions": 416, "changes": 640, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/608dccd7ab68e19bcd61caad1161be7d8db10056/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/608dccd7ab68e19bcd61caad1161be7d8db10056/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=608dccd7ab68e19bcd61caad1161be7d8db10056", "patch": "@@ -5304,167 +5304,119 @@\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI\n \t\t(match_operand:V16HI 1 \"nonimmediate_operand\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)])))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)])))\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI\n \t\t(match_operand:V16HI 2 \"nonimmediate_operand\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)]))))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)]))))\n \t  (mult:V8SI\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)])))\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)])))\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)]))))))]\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)]))))))]\n   \"TARGET_AVX2\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V16HImode, operands);\")\n \n-(define_expand \"sse2_pmaddwd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\")\n-\t(plus:V4SI\n-\t  (mult:V4SI\n-\t    (sign_extend:V4SI\n-\t      (vec_select:V4HI\n-\t\t(match_operand:V8HI 1 \"nonimmediate_operand\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)])))\n-\t    (sign_extend:V4SI\n-\t      (vec_select:V4HI\n-\t\t(match_operand:V8HI 2 \"nonimmediate_operand\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)]))))\n-\t  (mult:V4SI\n-\t    (sign_extend:V4SI\n-\t      (vec_select:V4HI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)])))\n-\t    (sign_extend:V4SI\n-\t      (vec_select:V4HI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)]))))))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (MULT, V8HImode, operands);\")\n-\n (define_insn \"*avx2_pmaddwd\"\n   [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n \t(plus:V8SI\n \t  (mult:V8SI\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI\n \t\t(match_operand:V16HI 1 \"nonimmediate_operand\" \"%x\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)])))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)])))\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI\n \t\t(match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)]))))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)]))))\n \t  (mult:V8SI\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)])))\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)])))\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)]))))))]\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)]))))))]\n   \"TARGET_AVX2 && ix86_binary_operator_ok (MULT, V16HImode, operands)\"\n   \"vpmaddwd\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n+(define_expand \"sse2_pmaddwd\"\n+  [(set (match_operand:V4SI 0 \"register_operand\")\n+\t(plus:V4SI\n+\t  (mult:V4SI\n+\t    (sign_extend:V4SI\n+\t      (vec_select:V4HI\n+\t\t(match_operand:V8HI 1 \"nonimmediate_operand\")\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)])))\n+\t    (sign_extend:V4SI\n+\t      (vec_select:V4HI\n+\t\t(match_operand:V8HI 2 \"nonimmediate_operand\")\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)]))))\n+\t  (mult:V4SI\n+\t    (sign_extend:V4SI\n+\t      (vec_select:V4HI (match_dup 1)\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)])))\n+\t    (sign_extend:V4SI\n+\t      (vec_select:V4HI (match_dup 2)\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)]))))))]\n+  \"TARGET_SSE2\"\n+  \"ix86_fixup_binary_operands_no_copy (MULT, V8HImode, operands);\")\n+\n (define_insn \"*sse2_pmaddwd\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(plus:V4SI\n \t  (mult:V4SI\n \t    (sign_extend:V4SI\n \t      (vec_select:V4HI\n \t\t(match_operand:V8HI 1 \"nonimmediate_operand\" \"%0,x\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)])))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)])))\n \t    (sign_extend:V4SI\n \t      (vec_select:V4HI\n \t\t(match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)]))))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)]))))\n \t  (mult:V4SI\n \t    (sign_extend:V4SI\n \t      (vec_select:V4HI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)])))\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)])))\n \t    (sign_extend:V4SI\n \t      (vec_select:V4HI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)]))))))]\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)]))))))]\n   \"TARGET_SSE2 && ix86_binary_operator_ok (MULT, V8HImode, operands)\"\n   \"@\n    pmaddwd\\t{%2, %0|%0, %2}\n@@ -5488,8 +5440,9 @@\n \n (define_insn \"*<sse4_1_avx2>_mul<mode>3\"\n   [(set (match_operand:VI4_AVX2 0 \"register_operand\" \"=x,x\")\n-\t(mult:VI4_AVX2 (match_operand:VI4_AVX2 1 \"nonimmediate_operand\" \"%0,x\")\n-\t\t       (match_operand:VI4_AVX2 2 \"nonimmediate_operand\" \"xm,xm\")))]\n+\t(mult:VI4_AVX2\n+\t  (match_operand:VI4_AVX2 1 \"nonimmediate_operand\" \"%0,x\")\n+\t  (match_operand:VI4_AVX2 2 \"nonimmediate_operand\" \"xm,xm\")))]\n   \"TARGET_SSE4_1 && ix86_binary_operator_ok (MULT, <MODE>mode, operands)\"\n   \"@\n    pmulld\\t{%2, %0|%0, %2}\n@@ -7020,9 +6973,10 @@\n   rtx t2 = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_avx2_interleave_low<mode> (t1, operands[1], operands[2]));\n   emit_insn (gen_avx2_interleave_high<mode> (t2,  operands[1], operands[2]));\n-  emit_insn (gen_avx2_permv2ti (gen_lowpart (V4DImode, operands[0]),\n-\t\t\t\tgen_lowpart (V4DImode, t1),\n-\t\t\t\tgen_lowpart (V4DImode, t2), GEN_INT (1 + (3 << 4))));\n+  emit_insn (gen_avx2_permv2ti\n+\t     (gen_lowpart (V4DImode, operands[0]),\n+\t      gen_lowpart (V4DImode, t1),\n+\t      gen_lowpart (V4DImode, t2), GEN_INT (1 + (3 << 4))));\n   DONE;\n })\n \n@@ -7036,9 +6990,10 @@\n   rtx t2 = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_avx2_interleave_low<mode> (t1, operands[1], operands[2]));\n   emit_insn (gen_avx2_interleave_high<mode> (t2, operands[1], operands[2]));\n-  emit_insn (gen_avx2_permv2ti (gen_lowpart (V4DImode, operands[0]),\n-\t\t\t\tgen_lowpart (V4DImode, t1),\n-\t\t\t\tgen_lowpart (V4DImode, t2), GEN_INT (0 + (2 << 4))));\n+  emit_insn (gen_avx2_permv2ti\n+\t     (gen_lowpart (V4DImode, operands[0]),\n+\t      gen_lowpart (V4DImode, t1),\n+\t      gen_lowpart (V4DImode, t2), GEN_INT (0 + (2 << 4))));\n   DONE;\n })\n \n@@ -8437,78 +8392,46 @@\n \t    (zero_extend:V16HI\n \t      (vec_select:V16QI\n \t\t(match_operand:V32QI 1 \"register_operand\" \"x\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)\n-\t\t\t   (const_int 16)\n-\t\t\t   (const_int 18)\n-\t\t\t   (const_int 20)\n-\t\t\t   (const_int 22)\n-\t\t\t   (const_int 24)\n-\t\t\t   (const_int 26)\n-\t\t\t   (const_int 28)\n-\t\t\t   (const_int 30)])))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)\n+\t\t\t   (const_int 16) (const_int 18)\n+\t\t\t   (const_int 20) (const_int 22)\n+\t\t\t   (const_int 24) (const_int 26)\n+\t\t\t   (const_int 28) (const_int 30)])))\n \t    (sign_extend:V16HI\n \t      (vec_select:V16QI\n \t\t(match_operand:V32QI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)\n-\t\t\t   (const_int 16)\n-\t\t\t   (const_int 18)\n-\t\t\t   (const_int 20)\n-\t\t\t   (const_int 22)\n-\t\t\t   (const_int 24)\n-\t\t\t   (const_int 26)\n-\t\t\t   (const_int 28)\n-\t\t\t   (const_int 30)]))))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)\n+\t\t\t   (const_int 16) (const_int 18)\n+\t\t\t   (const_int 20) (const_int 22)\n+\t\t\t   (const_int 24) (const_int 26)\n+\t\t\t   (const_int 28) (const_int 30)]))))\n \t  (mult:V16HI\n \t    (zero_extend:V16HI\n \t      (vec_select:V16QI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)\n-\t\t\t   (const_int 17)\n-\t\t\t   (const_int 19)\n-\t\t\t   (const_int 21)\n-\t\t\t   (const_int 23)\n-\t\t\t   (const_int 25)\n-\t\t\t   (const_int 27)\n-\t\t\t   (const_int 29)\n-\t\t\t   (const_int 31)])))\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)\n+\t\t\t   (const_int 17) (const_int 19)\n+\t\t\t   (const_int 21) (const_int 23)\n+\t\t\t   (const_int 25) (const_int 27)\n+\t\t\t   (const_int 29) (const_int 31)])))\n \t    (sign_extend:V16HI\n \t      (vec_select:V16QI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)\n-\t\t\t   (const_int 17)\n-\t\t\t   (const_int 19)\n-\t\t\t   (const_int 21)\n-\t\t\t   (const_int 23)\n-\t\t\t   (const_int 25)\n-\t\t\t   (const_int 27)\n-\t\t\t   (const_int 29)\n-\t\t\t   (const_int 31)]))))))]\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)\n+\t\t\t   (const_int 17) (const_int 19)\n+\t\t\t   (const_int 21) (const_int 23)\n+\t\t\t   (const_int 25) (const_int 27)\n+\t\t\t   (const_int 29) (const_int 31)]))))))]\n   \"TARGET_AVX2\"\n   \"vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n@@ -8523,46 +8446,30 @@\n \t    (zero_extend:V8HI\n \t      (vec_select:V8QI\n \t\t(match_operand:V16QI 1 \"register_operand\" \"0,x\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)])))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)])))\n \t    (sign_extend:V8HI\n \t      (vec_select:V8QI\n \t\t(match_operand:V16QI 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)]))))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)\n+\t\t\t   (const_int 8) (const_int 10)\n+\t\t\t   (const_int 12) (const_int 14)]))))\n \t  (mult:V8HI\n \t    (zero_extend:V8HI\n \t      (vec_select:V8QI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)])))\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)])))\n \t    (sign_extend:V8HI\n \t      (vec_select:V8QI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)]))))))]\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)\n+\t\t\t   (const_int 9) (const_int 11)\n+\t\t\t   (const_int 13) (const_int 15)]))))))]\n   \"TARGET_SSSE3\"\n   \"@\n    pmaddubsw\\t{%2, %0|%0, %2}\n@@ -8582,30 +8489,22 @@\n \t    (zero_extend:V4HI\n \t      (vec_select:V4QI\n \t\t(match_operand:V8QI 1 \"register_operand\" \"0\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)])))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)])))\n \t    (sign_extend:V4HI\n \t      (vec_select:V4QI\n \t\t(match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)]))))\n+\t\t(parallel [(const_int 0) (const_int 2)\n+\t\t\t   (const_int 4) (const_int 6)]))))\n \t  (mult:V4HI\n \t    (zero_extend:V4HI\n \t      (vec_select:V4QI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)])))\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)])))\n \t    (sign_extend:V4HI\n \t      (vec_select:V4QI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)]))))))]\n+\t\t(parallel [(const_int 1) (const_int 3)\n+\t\t\t   (const_int 5) (const_int 7)]))))))]\n   \"TARGET_SSSE3\"\n   \"pmaddubsw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n@@ -9192,14 +9091,10 @@\n \t(any_extend:V8HI\n \t  (vec_select:V8QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)\n-\t\t       (const_int 4)\n-\t\t       (const_int 5)\n-\t\t       (const_int 6)\n-\t\t       (const_int 7)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)\n+\t\t       (const_int 2) (const_int 3)\n+\t\t       (const_int 4) (const_int 5)\n+\t\t       (const_int 6) (const_int 7)]))))]\n   \"TARGET_SSE4_1\"\n   \"%vpmov<extsuffix>bw\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9212,14 +9107,10 @@\n \t(any_extend:V8SI\n \t  (vec_select:V8QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)\n-\t\t       (const_int 4)\n-\t\t       (const_int 5)\n-\t\t       (const_int 6)\n-\t\t       (const_int 7)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)\n+\t\t       (const_int 2) (const_int 3)\n+\t\t       (const_int 4) (const_int 5)\n+\t\t       (const_int 6) (const_int 7)]))))]\n   \"TARGET_AVX2\"\n   \"vpmov<extsuffix>bd\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9232,10 +9123,8 @@\n \t(any_extend:V4SI\n \t  (vec_select:V4QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)\n+\t\t       (const_int 2) (const_int 3)]))))]\n   \"TARGET_SSE4_1\"\n   \"%vpmov<extsuffix>bd\\t{%1, %0|%0, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9259,10 +9148,8 @@\n \t(any_extend:V4SI\n \t  (vec_select:V4HI\n \t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)\n+\t\t       (const_int 2) (const_int 3)]))))]\n   \"TARGET_SSE4_1\"\n   \"%vpmov<extsuffix>wd\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9275,10 +9162,8 @@\n \t(any_extend:V4DI\n \t  (vec_select:V4QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)\n+\t\t       (const_int 2) (const_int 3)]))))]\n   \"TARGET_AVX2\"\n   \"vpmov<extsuffix>bq\\t{%1, %0|%0, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9291,8 +9176,7 @@\n \t(any_extend:V2DI\n \t  (vec_select:V2QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n   \"%vpmov<extsuffix>bq\\t{%1, %0|%0, %w1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9305,10 +9189,8 @@\n \t(any_extend:V4DI\n \t  (vec_select:V4HI\n \t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)\n+\t\t       (const_int 2) (const_int 3)]))))]\n   \"TARGET_AVX2\"\n   \"vpmov<extsuffix>wq\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9321,8 +9203,7 @@\n \t(any_extend:V2DI\n \t  (vec_select:V2HI\n \t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n   \"%vpmov<extsuffix>wq\\t{%1, %0|%0, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9345,8 +9226,7 @@\n \t(any_extend:V2DI\n \t  (vec_select:V2SI\n \t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n+\t    (parallel [(const_int 0) (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n   \"%vpmov<extsuffix>dq\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n@@ -9870,13 +9750,11 @@\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)])))\n+\t    (parallel [(const_int 1) (const_int 3)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)]))))\n+\t    (parallel [(const_int 1) (const_int 3)]))))\n \t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs>dql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -9890,13 +9768,11 @@\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)])))\n+\t    (parallel [(const_int 0) (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)]))))\n+\t    (parallel [(const_int 0) (const_int 2)]))))\n \t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs>dqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -9913,13 +9789,11 @@\n \t  (sign_extend:V2DI\n \t    (vec_select:V2SI\n \t      (match_operand:V4SI 1 \"register_operand\" \"%x\")\n-\t      (parallel [(const_int 1)\n-\t\t\t (const_int 3)])))\n+\t      (parallel [(const_int 1) (const_int 3)])))\n \t  (sign_extend:V2DI\n \t    (vec_select:V2SI\n \t      (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t      (parallel [(const_int 1)\n-\t\t\t (const_int 3)])))))]\n+\t      (parallel [(const_int 1) (const_int 3)])))))]\n   \"TARGET_XOP\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -9931,13 +9805,11 @@\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)])))\n+\t    (parallel [(const_int 1) (const_int 3)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_dup 2)\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)]))))\n+\t    (parallel [(const_int 1) (const_int 3)]))))\n \t (match_dup 0)))]\n {\n   operands[3] = CONST0_RTX (V2DImode);\n@@ -9955,13 +9827,11 @@\n \t  (sign_extend:V2DI\n \t    (vec_select:V2SI\n \t      (match_operand:V4SI 1 \"register_operand\" \"%x\")\n-\t      (parallel [(const_int 0)\n-\t\t\t (const_int 2)])))\n+\t      (parallel [(const_int 0) (const_int 2)])))\n \t  (sign_extend:V2DI\n \t    (vec_select:V2SI\n \t      (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t      (parallel [(const_int 0)\n-\t\t\t (const_int 2)])))))]\n+\t      (parallel [(const_int 0) (const_int 2)])))))]\n   \"TARGET_XOP\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -9973,13 +9843,11 @@\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)])))\n+\t    (parallel [(const_int 0) (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_dup 2)\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)]))))\n+\t    (parallel [(const_int 0) (const_int 2)]))))\n \t (match_dup 0)))]\n {\n   operands[3] = CONST0_RTX (V2DImode);\n@@ -9995,17 +9863,13 @@\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n \t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)\n-\t\t       (const_int 5)\n-\t\t       (const_int 7)])))\n+\t    (parallel [(const_int 1) (const_int 3)\n+\t\t       (const_int 5) (const_int 7)])))\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n \t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)\n-\t\t       (const_int 5)\n-\t\t       (const_int 7)]))))\n+\t    (parallel [(const_int 1) (const_int 3)\n+\t\t       (const_int 5) (const_int 7)]))))\n \t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs>wd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -10020,32 +9884,24 @@\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n \t     (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\")\n-\t     (parallel [(const_int 0)\n-\t\t\t(const_int 2)\n-\t\t\t(const_int 4)\n-\t\t\t(const_int 6)])))\n+\t     (parallel [(const_int 0) (const_int 2)\n+\t\t\t(const_int 4) (const_int 6)])))\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n \t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t     (parallel [(const_int 0)\n-\t\t\t(const_int 2)\n-\t\t\t(const_int 4)\n-\t\t\t(const_int 6)]))))\n+\t     (parallel [(const_int 0) (const_int 2)\n+\t\t\t(const_int 4) (const_int 6)]))))\n \t  (mult:V4SI\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 1)\n-\t\t\t(const_int 3)\n-\t\t\t(const_int 5)\n-\t\t\t(const_int 7)])))\n+\t     (parallel [(const_int 1) (const_int 3)\n+\t\t\t(const_int 5) (const_int 7)])))\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n \t     (match_dup 2)\n-\t     (parallel [(const_int 1)\n-\t\t\t(const_int 3)\n-\t\t\t(const_int 5)\n-\t\t\t(const_int 7)])))))\n+\t     (parallel [(const_int 1) (const_int 3)\n+\t\t\t(const_int 5) (const_int 7)])))))\n \t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<madcs>wd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -10070,25 +9926,17 @@\n \t (any_extend:V8HI\n \t  (vec_select:V8QI\n \t   (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)\n-\t\t      (const_int 4)\n-\t\t      (const_int 6)\n-\t\t      (const_int 8)\n-\t\t      (const_int 10)\n-\t\t      (const_int 12)\n-\t\t      (const_int 14)])))\n+\t   (parallel [(const_int 0) (const_int 2)\n+\t\t      (const_int 4) (const_int 6)\n+\t\t      (const_int 8) (const_int 10)\n+\t\t      (const_int 12) (const_int 14)])))\n \t (any_extend:V8HI\n \t  (vec_select:V8QI\n \t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)\n-\t\t      (const_int 5)\n-\t\t      (const_int 7)\n-\t\t      (const_int 9)\n-\t\t      (const_int 11)\n-\t\t      (const_int 13)\n-\t\t      (const_int 15)])))))]\n+\t   (parallel [(const_int 1) (const_int 3)\n+\t\t      (const_int 5) (const_int 7)\n+\t\t      (const_int 9) (const_int 11)\n+\t\t      (const_int 13) (const_int 15)])))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>bw\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10100,32 +9948,24 @@\n \t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 4)\n-\t\t       (const_int 8)\n-\t\t       (const_int 12)])))\n+\t    (parallel [(const_int 0) (const_int 4)\n+\t\t       (const_int 8) (const_int 12)])))\n \t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 5)\n-\t\t       (const_int 9)\n-\t\t       (const_int 13)]))))\n+\t    (parallel [(const_int 1) (const_int 5)\n+\t\t       (const_int 9) (const_int 13)]))))\n \t (plus:V4SI\n \t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 2)\n-\t\t       (const_int 6)\n-\t\t       (const_int 10)\n-\t\t       (const_int 14)])))\n+\t    (parallel [(const_int 2) (const_int 6)\n+\t\t       (const_int 10) (const_int 14)])))\n \t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 3)\n-\t\t       (const_int 7)\n-\t\t       (const_int 11)\n-\t\t       (const_int 15)]))))))]\n+\t    (parallel [(const_int 3) (const_int 7)\n+\t\t       (const_int 11) (const_int 15)]))))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>bd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10138,47 +9978,39 @@\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t     (parallel [(const_int 0)\n-\t\t\t(const_int 4)])))\n+\t     (parallel [(const_int 0) (const_int 4)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 1)\n-\t\t\t(const_int 5)]))))\n+\t     (parallel [(const_int 1) (const_int 5)]))))\n \t  (plus:V2DI\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 2)\n-\t\t\t(const_int 6)])))\n+\t     (parallel [(const_int 2) (const_int 6)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 3)\n-\t\t\t(const_int 7)])))))\n+\t     (parallel [(const_int 3) (const_int 7)])))))\n \t (plus:V2DI\n \t  (plus:V2DI\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 8)\n-\t\t\t(const_int 12)])))\n+\t     (parallel [(const_int 8) (const_int 12)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 9)\n-\t\t\t(const_int 13)]))))\n+\t     (parallel [(const_int 9) (const_int 13)]))))\n \t  (plus:V2DI\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 10)\n-\t\t\t(const_int 14)])))\n+\t     (parallel [(const_int 10) (const_int 14)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 11)\n-\t\t\t(const_int 15)])))))))]\n+\t     (parallel [(const_int 11) (const_int 15)])))))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>bq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10189,17 +10021,13 @@\n \t (any_extend:V4SI\n \t  (vec_select:V4HI\n \t   (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)\n-\t\t      (const_int 4)\n-\t\t      (const_int 6)])))\n+\t   (parallel [(const_int 0) (const_int 2)\n+\t\t      (const_int 4) (const_int 6)])))\n \t (any_extend:V4SI\n \t  (vec_select:V4HI\n \t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)\n-\t\t      (const_int 5)\n-\t\t      (const_int 7)])))))]\n+\t   (parallel [(const_int 1) (const_int 3)\n+\t\t      (const_int 5) (const_int 7)])))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>wd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10211,24 +10039,20 @@\n \t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 4)])))\n+\t    (parallel [(const_int 0) (const_int 4)])))\n \t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 5)]))))\n+\t    (parallel [(const_int 1) (const_int 5)]))))\n \t (plus:V2DI\n \t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 2)\n-\t\t       (const_int 6)])))\n+\t    (parallel [(const_int 2) (const_int 6)])))\n \t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_dup 1)\n-\t    (parallel [(const_int 3)\n-\t\t       (const_int 7)]))))))]\n+\t    (parallel [(const_int 3) (const_int 7)]))))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>wq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10239,13 +10063,11 @@\n \t (any_extend:V2DI\n \t  (vec_select:V2SI\n \t   (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)])))\n+\t   (parallel [(const_int 0) (const_int 2)])))\n \t (any_extend:V2DI\n \t  (vec_select:V2SI\n \t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)])))))]\n+\t   (parallel [(const_int 1) (const_int 3)])))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>dq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10256,25 +10078,17 @@\n \t (sign_extend:V8HI\n \t  (vec_select:V8QI\n \t   (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)\n-\t\t      (const_int 4)\n-\t\t      (const_int 6)\n-\t\t      (const_int 8)\n-\t\t      (const_int 10)\n-\t\t      (const_int 12)\n-\t\t      (const_int 14)])))\n+\t   (parallel [(const_int 0) (const_int 2)\n+\t\t      (const_int 4) (const_int 6)\n+\t\t      (const_int 8) (const_int 10)\n+\t\t      (const_int 12) (const_int 14)])))\n \t (sign_extend:V8HI\n \t  (vec_select:V8QI\n \t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)\n-\t\t      (const_int 5)\n-\t\t      (const_int 7)\n-\t\t      (const_int 9)\n-\t\t      (const_int 11)\n-\t\t      (const_int 13)\n-\t\t      (const_int 15)])))))]\n+\t   (parallel [(const_int 1) (const_int 3)\n+\t\t      (const_int 5) (const_int 7)\n+\t\t      (const_int 9) (const_int 11)\n+\t\t      (const_int 13) (const_int 15)])))))]\n   \"TARGET_XOP\"\n   \"vphsubbw\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10285,17 +10099,13 @@\n \t (sign_extend:V4SI\n \t  (vec_select:V4HI\n \t   (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)\n-\t\t      (const_int 4)\n-\t\t      (const_int 6)])))\n+\t   (parallel [(const_int 0) (const_int 2)\n+\t\t      (const_int 4) (const_int 6)])))\n \t (sign_extend:V4SI\n \t  (vec_select:V4HI\n \t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)\n-\t\t      (const_int 5)\n-\t\t      (const_int 7)])))))]\n+\t   (parallel [(const_int 1) (const_int 3)\n+\t\t      (const_int 5) (const_int 7)])))))]\n   \"TARGET_XOP\"\n   \"vphsubwd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n@@ -10306,13 +10116,11 @@\n \t (sign_extend:V2DI\n \t  (vec_select:V2SI\n \t   (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)])))\n+\t   (parallel [(const_int 0) (const_int 2)])))\n \t (sign_extend:V2DI\n \t  (vec_select:V2SI\n \t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)])))))]\n+\t   (parallel [(const_int 1) (const_int 3)])))))]\n   \"TARGET_XOP\"\n   \"vphsubdq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])"}]}