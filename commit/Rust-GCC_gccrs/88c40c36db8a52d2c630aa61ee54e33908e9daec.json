{"sha": "88c40c36db8a52d2c630aa61ee54e33908e9daec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhjNDBjMzZkYjhhNTJkMmM2MzBhYTYxZWU1NGUzMzkwOGU5ZGFlYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2018-01-09T10:57:00Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-07-27T09:16:26Z"}, "message": "Add 'libgomp.oacc-c-c++-common/async-data-1-{1,2}.c'\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/async-data-1-1.c: New file.\n\t* testsuite/libgomp.oacc-c-c++-common/async-data-1-2.c: Likewise.\n\nCo-Authored-By: Tom de Vries <tom@codesourcery.com>", "tree": {"sha": "47d0f46eed29f9657c347b82bb9429d8dbd8fbb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47d0f46eed29f9657c347b82bb9429d8dbd8fbb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88c40c36db8a52d2c630aa61ee54e33908e9daec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c40c36db8a52d2c630aa61ee54e33908e9daec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c40c36db8a52d2c630aa61ee54e33908e9daec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c40c36db8a52d2c630aa61ee54e33908e9daec/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29ddaf43f70e19fd1110b539e8b3d0436c757e34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ddaf43f70e19fd1110b539e8b3d0436c757e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ddaf43f70e19fd1110b539e8b3d0436c757e34"}], "stats": {"total": 190, "additions": 190, "deletions": 0}, "files": [{"sha": "cd87aec56ff025503415ddb33c0aa2af6180a647", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/async-data-1-1.c", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c40c36db8a52d2c630aa61ee54e33908e9daec/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasync-data-1-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c40c36db8a52d2c630aa61ee54e33908e9daec/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasync-data-1-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasync-data-1-1.c?ref=88c40c36db8a52d2c630aa61ee54e33908e9daec", "patch": "@@ -0,0 +1,90 @@\n+/* Verify back to back 'async' operations, one data mapping.\n+\n+   Due to one data mapping, this isn't using the libgomp 'cbuf' buffering.\n+*/\n+\n+/* { dg-xfail-run-if \"TODO\" { openacc_radeon_accel_selected } } */\n+\n+\n+#include <stdlib.h>\n+\n+\n+#define N 128\n+\n+\n+static void\n+t1 (void)\n+{\n+  unsigned int *a;\n+  int i;\n+  int nbytes;\n+\n+  nbytes = N * sizeof (unsigned int);\n+\n+  a = (unsigned int *) malloc (nbytes);\n+\n+  for (i = 0; i < N; i++)\n+    a[i] = 3;\n+\n+#pragma acc parallel async copy (a[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    a[ii] += 1;\n+\n+#pragma acc parallel async copy (a[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    a[ii] += 1;\n+\n+#pragma acc wait\n+\n+  for (i = 0; i < N; i++)\n+    if (a[i] != 5)\n+      abort ();\n+}\n+\n+\n+static void\n+t2 (void)\n+{\n+  unsigned int *a;\n+  int i;\n+  int nbytes;\n+\n+  nbytes = N * sizeof (unsigned int);\n+\n+  a = (unsigned int *) malloc (nbytes);\n+\n+#pragma acc data copyin (a[0:N])\n+  {\n+    for (i = 0; i < N; i++)\n+      a[i] = 3;\n+\n+#pragma acc update async device (a[0:N])\n+#pragma acc parallel async present (a[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    a[ii] += 1;\n+#pragma acc update async host (a[0:N])\n+\n+#pragma acc update async device (a[0:N])\n+#pragma acc parallel async present (a[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    a[ii] += 1;\n+#pragma acc update async host (a[0:N])\n+\n+#pragma acc wait\n+  }\n+\n+  for (i = 0; i < N; i++)\n+    if (a[i] != 5)\n+      abort ();\n+}\n+\n+\n+int\n+main (void)\n+{\n+  t1 ();\n+\n+  t2 ();\n+\n+  return 0;\n+}"}, {"sha": "385237698e2d75f5583884827c04a3604e4d40d5", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/async-data-1-2.c", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c40c36db8a52d2c630aa61ee54e33908e9daec/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasync-data-1-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c40c36db8a52d2c630aa61ee54e33908e9daec/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasync-data-1-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fasync-data-1-2.c?ref=88c40c36db8a52d2c630aa61ee54e33908e9daec", "patch": "@@ -0,0 +1,100 @@\n+/* Verify back to back 'async' operations, two data mappings.\n+\n+   Due to two data mappings, this is using the libgomp 'cbuf' buffering.\n+*/\n+\n+/* { dg-xfail-run-if \"TODO\" { openacc_radeon_accel_selected } } */\n+\n+\n+#include <stdlib.h>\n+\n+\n+#define N 128\n+\n+\n+static void\n+t1 (void)\n+{\n+  unsigned int *a, *b;\n+  int i;\n+  int nbytes;\n+\n+  nbytes = N * sizeof (unsigned int);\n+\n+  a = (unsigned int *) malloc (nbytes);\n+  b = (unsigned int *) malloc (nbytes);\n+\n+  for (i = 0; i < N; i++)\n+    b[i] = a[i] = 3;\n+\n+#pragma acc parallel async copy (a[0:N], b[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    b[ii] += (a[ii] += 1);\n+\n+#pragma acc parallel async copy (a[0:N], b[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    b[ii] += (a[ii] += 1);\n+\n+#pragma acc wait\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      if (a[i] != 5)\n+\tabort ();\n+      if (b[i] != 12)\n+\tabort ();\n+    }\n+}\n+\n+\n+static void\n+t2 (void)\n+{\n+  unsigned int *a, *b;\n+  int i;\n+  int nbytes;\n+\n+  nbytes = N * sizeof (unsigned int);\n+\n+  a = (unsigned int *) malloc (nbytes);\n+  b = (unsigned int *) malloc (nbytes);\n+\n+#pragma acc data copyin (a[0:N], b[0:N])\n+  {\n+    for (i = 0; i < N; i++)\n+      b[i] = a[i] = 3;\n+\n+#pragma acc update async device (a[0:N], b[0:N])\n+#pragma acc parallel async present (a[0:N], b[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    b[ii] += (a[ii] += 1);\n+#pragma acc update async host (a[0:N], b[0:N])\n+\n+#pragma acc update async device (a[0:N], b[0:N])\n+#pragma acc parallel async present (a[0:N], b[0:N])\n+  for (int ii = 0; ii < N; ii++)\n+    b[ii] += (a[ii] += 1);\n+#pragma acc update async host (a[0:N], b[0:N])\n+\n+#pragma acc wait\n+  }\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      if (a[i] != 5)\n+\tabort ();\n+      if (b[i] != 12)\n+\tabort ();\n+    }\n+}\n+\n+\n+int\n+main (void)\n+{\n+  t1 ();\n+\n+  t2 ();\n+\n+  return 0;\n+}"}]}