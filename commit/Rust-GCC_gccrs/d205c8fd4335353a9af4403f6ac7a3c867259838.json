{"sha": "d205c8fd4335353a9af4403f6ac7a3c867259838", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIwNWM4ZmQ0MzM1MzUzYTlhZjQ0MDNmNmFjN2EzYzg2NzI1OTgzOA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-07-07T22:03:43Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-07-07T22:03:43Z"}, "message": "tree-inline.c (optimize_inline_calls): Set DECL_INLINED_FNS regardless of DECL_LANG_SPECIFIC being present or not.\n\n\t* tree-inline.c (optimize_inline_calls): Set DECL_INLINED_FNS\n\tregardless of DECL_LANG_SPECIFIC being present or not.\n\t* tree.h (DECL_NUM_STMTS): Purge.\n\nFrom-SVN: r84237", "tree": {"sha": "ad46e21568bae02ac2dd247af4e225655ffa12cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad46e21568bae02ac2dd247af4e225655ffa12cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d205c8fd4335353a9af4403f6ac7a3c867259838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d205c8fd4335353a9af4403f6ac7a3c867259838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d205c8fd4335353a9af4403f6ac7a3c867259838", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d205c8fd4335353a9af4403f6ac7a3c867259838/comments", "author": null, "committer": null, "parents": [{"sha": "41e622a8d284cf9adb504c234986c535347ce1a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e622a8d284cf9adb504c234986c535347ce1a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e622a8d284cf9adb504c234986c535347ce1a8"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "a1aa65406d3da1dd4f7c7aa5a8fd466b4be567ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d205c8fd4335353a9af4403f6ac7a3c867259838/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d205c8fd4335353a9af4403f6ac7a3c867259838/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d205c8fd4335353a9af4403f6ac7a3c867259838", "patch": "@@ -1,3 +1,9 @@\n+2004-07-07  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* tree-inline.c (optimize_inline_calls): Set DECL_INLINED_FNS\n+\tregardless of DECL_LANG_SPECIFIC being present or not.\n+\t* tree.h (DECL_NUM_STMTS): Purge.\n+\n 2004-07-07  Andrew Pinski  <apinski@apple.com>\n \n \t* configure: Regenerate with the right autoconf."}, {"sha": "7387076d677f26b43df02456f1aaf1dd066ccc68", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d205c8fd4335353a9af4403f6ac7a3c867259838/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d205c8fd4335353a9af4403f6ac7a3c867259838/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=d205c8fd4335353a9af4403f6ac7a3c867259838", "patch": "@@ -1773,6 +1773,7 @@ optimize_inline_calls (tree fn)\n {\n   inline_data id;\n   tree prev_fn;\n+  tree ifn;\n \n   /* There is no point in performing inlining if errors have already\n      occurred -- and we might crash if we try to inline invalid\n@@ -1811,15 +1812,11 @@ optimize_inline_calls (tree fn)\n \n   /* Clean up.  */\n   htab_delete (id.tree_pruner);\n-  if (DECL_LANG_SPECIFIC (fn))\n-    {\n-      tree ifn = make_tree_vec (VARRAY_ACTIVE_SIZE (id.inlined_fns));\n-\n-      if (VARRAY_ACTIVE_SIZE (id.inlined_fns))\n-\tmemcpy (&TREE_VEC_ELT (ifn, 0), &VARRAY_TREE (id.inlined_fns, 0),\n-\t\tVARRAY_ACTIVE_SIZE (id.inlined_fns) * sizeof (tree));\n-      DECL_INLINED_FNS (fn) = ifn;\n-    }\n+  ifn = make_tree_vec (VARRAY_ACTIVE_SIZE (id.inlined_fns));\n+  if (VARRAY_ACTIVE_SIZE (id.inlined_fns))\n+    memcpy (&TREE_VEC_ELT (ifn, 0), &VARRAY_TREE (id.inlined_fns, 0),\n+\t    VARRAY_ACTIVE_SIZE (id.inlined_fns) * sizeof (tree));\n+  DECL_INLINED_FNS (fn) = ifn;\n \n #ifdef ENABLE_CHECKING\n     {"}, {"sha": "d8c7be239e232ec873ab3cd3c72e6dde90887101", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d205c8fd4335353a9af4403f6ac7a3c867259838/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d205c8fd4335353a9af4403f6ac7a3c867259838/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d205c8fd4335353a9af4403f6ac7a3c867259838", "patch": "@@ -1860,12 +1860,6 @@ extern GTY (()) unsigned binfo_lang_slots;\n    this identifies which built-in operation it is.  */\n #define DECL_FUNCTION_CODE(NODE) (FUNCTION_DECL_CHECK (NODE)->decl.u1.f)\n \n-/* In a FUNCTION_DECL for which DECL_BUILT_IN does not hold, this is\n-   the approximate number of statements in this function.  There is\n-   no need for this number to be exact; it is only used in various\n-   heuristics regarding optimization.  */\n-#define DECL_NUM_STMTS(NODE) (FUNCTION_DECL_CHECK (NODE)->decl.u1.i)\n-\n /* The DECL_VINDEX is used for FUNCTION_DECLS in two different ways.\n    Before the struct containing the FUNCTION_DECL is laid out,\n    DECL_VINDEX may point to a FUNCTION_DECL in a base class which"}]}