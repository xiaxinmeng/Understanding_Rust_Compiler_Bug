{"sha": "b045179973161115c7ea029b2788f5156fc55cda", "node_id": "C_kwDOANBUbNoAKGIwNDUxNzk5NzMxNjExMTVjN2VhMDI5YjI3ODhmNTE1NmZjNTVjZGE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-11T16:18:12Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-11T16:22:25Z"}, "message": "unidiff: use newline='\\n' argument\n\nIn order to support CR on a line, we need to open files\nwith newline='\\n' as our line endings supposed to be of UNIX style.\n\ncontrib/ChangeLog:\n\n\t* check_GNU_style.py: Use newline=\\n.\n\t* check_GNU_style_lib.py: Simplify.\n\t* gcc-changelog/git_commit.py: Fix issues seen\n\tRust patchset.\n\t* gcc-changelog/git_email.py: Use newline argument.\n\t* gcc-changelog/test_email.py: New test.\n\t* gcc-changelog/test_patches.txt: New test.\n\t* mklog.py: Use newline argument.", "tree": {"sha": "fa6e261f5badad137e27f1589c0b4d5b4bfb44b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa6e261f5badad137e27f1589c0b4d5b4bfb44b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b045179973161115c7ea029b2788f5156fc55cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b045179973161115c7ea029b2788f5156fc55cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b045179973161115c7ea029b2788f5156fc55cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b045179973161115c7ea029b2788f5156fc55cda/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d799f0aed18be25a5c908499b6411ab6d06b78c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d799f0aed18be25a5c908499b6411ab6d06b78c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d799f0aed18be25a5c908499b6411ab6d06b78c"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "969534a3cc9b46f1719b59cd385910a00d8691b3", "filename": "contrib/check_GNU_style.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fcheck_GNU_style.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fcheck_GNU_style.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.py?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -35,9 +35,9 @@ def main():\n     format = args.format\n \n     if filename == '-':\n-        check_GNU_style_file(sys.stdin, None, format)\n+        check_GNU_style_file(sys.stdin, format)\n     else:\n-        with open(filename, 'rb') as diff_file:\n-            check_GNU_style_file(diff_file, 'utf-8', format)\n+        with open(filename, newline='\\n') as diff_file:\n+            check_GNU_style_file(diff_file, format)\n \n main()"}, {"sha": "b3db4fbddc94c4907ca86ae9ab0cd9f00822daca", "filename": "contrib/check_GNU_style_lib.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fcheck_GNU_style_lib.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fcheck_GNU_style_lib.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style_lib.py?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -262,7 +262,7 @@ def test_trailing_whitespace_check_basic(self):\n         r = self.check.check('foo', 123, '\\t  a = 123;')\n         self.assertIsNone(r)\n \n-def check_GNU_style_file(file, file_encoding, format):\n+def check_GNU_style_file(file, format):\n     checks = [LineLengthCheck(), SpacesCheck(), TrailingWhitespaceCheck(),\n         SentenceSeparatorCheck(), SentenceEndOfCommentCheck(),\n         SentenceDotEndCheck(), FunctionParenthesisCheck(),\n@@ -271,7 +271,7 @@ def check_GNU_style_file(file, file_encoding, format):\n         SpacesAndTabsMixedCheck()]\n     errors = []\n \n-    patch = PatchSet(file, encoding=file_encoding)\n+    patch = PatchSet(file)\n \n     for pfile in patch.added_files + patch.modified_files:\n         t = pfile.target_file.lstrip('b/')"}, {"sha": "d90e6c19b76cc1f43959c69fe87b005755126164", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -718,11 +718,12 @@ def check_mentioned_files(self):\n                         if not prs:\n                             # if all ChangeLog entries have identical PRs\n                             # then use them\n-                            prs = self.changelog_entries[0].prs\n-                            for entry in self.changelog_entries:\n-                                if entry.prs != prs:\n-                                    prs = []\n-                                    break\n+                            if self.changelog_entries:\n+                                prs = self.changelog_entries[0].prs\n+                                for entry in self.changelog_entries:\n+                                    if entry.prs != prs:\n+                                        prs = []\n+                                        break\n                         entry = ChangeLogEntry(changelog_location,\n                                                self.top_level_authors,\n                                                prs)"}, {"sha": "2566d4149e7d099b92213f8efbbafd0026c5316c", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -37,7 +37,7 @@\n class GitEmail(GitCommit):\n     def __init__(self, filename):\n         self.filename = filename\n-        diff = PatchSet.from_filename(filename)\n+        diff = PatchSet.from_filename(filename, newline='\\n')\n         date = None\n         author = None\n         subject = ''"}, {"sha": "b9d0cb4157cf2017b1cfd74099e1dc3744764e9e", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -44,7 +44,7 @@ def setUp(self):\n \n         filename = None\n         patch_lines = []\n-        with open(os.path.join(script_path, 'test_patches.txt')) as f:\n+        with open(os.path.join(script_path, 'test_patches.txt'), newline='\\n') as f:\n             lines = f.read()\n         for line in lines.split('\\n'):\n             if line.startswith('==='):\n@@ -455,3 +455,7 @@ def test_new_file_in_root_folder(self):\n     def test_space_after_tab(self):\n         email = self.from_patch_glob('0001-Use-Value_Range-when-applying-inferred-ranges.patch')\n         assert (email.errors[0].message == 'extra space after tab')\n+\n+    def test_CR_in_patch(self):\n+        email = self.from_patch_glob('0001-Add-M-character.patch')\n+        assert (email.errors[0].message == 'cannot find a ChangeLog location in message')"}, {"sha": "c378c32423a7bdec264d5c746fe8590590732f57", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -3610,3 +3610,29 @@ index 0b9aa3639c5..f279371948a 100644\n  \t  if (r.intersect (infer.range (x)))\n -- \n 2.38.0\n+\n+=== 0001-Add-M-character.patch ====\n+From 71ab4c18f279dc0fa0172ffe8cfac5fabcde953d Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Fri, 9 Dec 2022 11:55:21 +0100\n+Subject: [PATCH] Add ^M character\n+\n+---\n+ demo.txt | 5 +++++\n+ 1 file changed, 5 insertions(+)\n+ create mode 100644 demo.txt\n+\n+diff --git a/demo.txt b/demo.txt\n+new file mode 100644\n+index 0000000..d75da75\n+--- /dev/null\n++++ b/demo.txt\n+@@ -0,0 +1,5 @@\n++pub fn main ()\n++{\n++// { dg-error \"Isolated CR\" \"\" { target *-*-* } .+1 }\n++  //! doc cr\r comment\n++}\n+-- \n+2.38.1\n+"}, {"sha": "3a6ec681b658dc819e19895b76ed480f2f865da3", "filename": "contrib/mklog.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045179973161115c7ea029b2788f5156fc55cda/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=b045179973161115c7ea029b2788f5156fc55cda", "patch": "@@ -361,7 +361,7 @@ def skip_line_in_changelog(line):\n     if args.directory:\n         root = args.directory\n \n-    data = open(args.input) if args.input else sys.stdin\n+    data = open(args.input, newline='\\n') if args.input else sys.stdin\n     if args.update_copyright:\n         update_copyright(data)\n     else:"}]}