{"sha": "08cb7d42bfd7810c05761df53348d582acc4eea1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjYjdkNDJiZmQ3ODEwYzA1NzYxZGY1MzM0OGQ1ODJhY2M0ZWVhMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-08-19T14:07:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-08-19T14:07:58Z"}, "message": "decl.c (gnat_to_gnu_entity): Use proper dummy type for the temporary COMPONENT_REF built for a derived...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Use proper\n\tdummy type for the temporary COMPONENT_REF built for a derived tagged\n\ttype with discriminant.\n\nFrom-SVN: r190514", "tree": {"sha": "1fc0a2fd4cc949b2b12f6caf8201c7def77a2fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc0a2fd4cc949b2b12f6caf8201c7def77a2fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08cb7d42bfd7810c05761df53348d582acc4eea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cb7d42bfd7810c05761df53348d582acc4eea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08cb7d42bfd7810c05761df53348d582acc4eea1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cb7d42bfd7810c05761df53348d582acc4eea1/comments", "author": null, "committer": null, "parents": [{"sha": "594d6faafa9741bd445bd22c2d597276ef5a7db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594d6faafa9741bd445bd22c2d597276ef5a7db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/594d6faafa9741bd445bd22c2d597276ef5a7db7"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "b9b63b145253596dbc7a478332cb485373bd2214", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cb7d42bfd7810c05761df53348d582acc4eea1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cb7d42bfd7810c05761df53348d582acc4eea1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=08cb7d42bfd7810c05761df53348d582acc4eea1", "patch": "@@ -1,3 +1,9 @@\n+2012-08-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Use proper\n+\tdummy type for the temporary COMPONENT_REF built for a derived tagged\n+\ttype with discriminant.\n+\n 2012-08-14   Diego Novillo  <dnovillo@google.com>\n \n \tMerge from cxx-conversion branch.  Re-implement VEC in C++."}, {"sha": "cb0f074d7d2aed97602eb33fed5b10187b334b5e", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cb7d42bfd7810c05761df53348d582acc4eea1/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cb7d42bfd7810c05761df53348d582acc4eea1/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=08cb7d42bfd7810c05761df53348d582acc4eea1", "patch": "@@ -2988,6 +2988,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tif (Present (Parent_Subtype (gnat_entity)))\n \t  {\n \t    Entity_Id gnat_parent = Parent_Subtype (gnat_entity);\n+\t    tree gnu_dummy_parent_type = make_node (RECORD_TYPE);\n \t    tree gnu_parent;\n \n \t    /* A major complexity here is that the parent subtype will\n@@ -2999,11 +3000,11 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t       each of those discriminants to a COMPONENT_REF of the above\n \t       dummy parent referencing the corresponding discriminant of the\n \t       base type of the parent subtype.  */\n-\t    gnu_get_parent = build3 (COMPONENT_REF, void_type_node,\n+\t    gnu_get_parent = build3 (COMPONENT_REF, gnu_dummy_parent_type,\n \t\t\t\t     build0 (PLACEHOLDER_EXPR, gnu_type),\n \t\t\t\t     build_decl (input_location,\n \t\t\t\t\t\t FIELD_DECL, NULL_TREE,\n-\t\t\t\t\t\t void_type_node),\n+\t\t\t\t\t\t gnu_dummy_parent_type),\n \t\t\t\t     NULL_TREE);\n \n \t    if (has_discr)"}]}