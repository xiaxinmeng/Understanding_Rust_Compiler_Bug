{"sha": "40a380e42321f725c6972edba0d991755eb290c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhMzgwZTQyMzIxZjcyNWM2OTcyZWRiYTBkOTkxNzU1ZWIyOTBjNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-06-21T18:19:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-06-21T18:19:38Z"}, "message": "* pt.c (tsubst) [TEMPLATE_TYPE_PARM]: Use TEMPLATE_PARM_DESCENDANTS.\n\nFrom-SVN: r261861", "tree": {"sha": "8e86fba4e605bce657d9b7b699ec691031b703b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e86fba4e605bce657d9b7b699ec691031b703b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40a380e42321f725c6972edba0d991755eb290c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a380e42321f725c6972edba0d991755eb290c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a380e42321f725c6972edba0d991755eb290c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a380e42321f725c6972edba0d991755eb290c5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50200c65395c1db084043d3093886aaf4846c1b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50200c65395c1db084043d3093886aaf4846c1b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50200c65395c1db084043d3093886aaf4846c1b8"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "f0e44532348224482d287c0e7eed75cca1b92b19", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a380e42321f725c6972edba0d991755eb290c5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a380e42321f725c6972edba0d991755eb290c5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40a380e42321f725c6972edba0d991755eb290c5", "patch": "@@ -1,5 +1,7 @@\n 2018-06-21  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (tsubst) [TEMPLATE_TYPE_PARM]: Use TEMPLATE_PARM_DESCENDANTS.\n+\n \t* name-lookup.c (do_push_to_top_level): Don't allocate\n \tcurrent_lang_base.\n \t(do_pop_from_top_level): Release current_lang_base."}, {"sha": "69e9479302eae87fc9c2ee9a2faa3a0ac19f147c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a380e42321f725c6972edba0d991755eb290c5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a380e42321f725c6972edba0d991755eb290c5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=40a380e42321f725c6972edba0d991755eb290c5", "patch": "@@ -14472,6 +14472,15 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\t     && !PLACEHOLDER_TYPE_CONSTRAINTS (r))\n \t      /* Break infinite recursion when substituting the constraints\n \t\t of a constrained placeholder.  */;\n+\t    else if (TREE_CODE (t) == TEMPLATE_TYPE_PARM\n+\t\t     && !PLACEHOLDER_TYPE_CONSTRAINTS (t)\n+\t\t     && !CLASS_PLACEHOLDER_TEMPLATE (t)\n+\t\t     && (arg = TEMPLATE_TYPE_PARM_INDEX (t),\n+\t\t\t r = TEMPLATE_PARM_DESCENDANTS (arg))\n+\t\t     && (TEMPLATE_PARM_LEVEL (r)\n+\t\t\t == TEMPLATE_PARM_LEVEL (arg) - levels))\n+\t\t/* Cache the simple case of lowering a type parameter.  */\n+\t      r = TREE_TYPE (r);\n \t    else\n \t      {\n \t\tr = copy_type (t);"}]}