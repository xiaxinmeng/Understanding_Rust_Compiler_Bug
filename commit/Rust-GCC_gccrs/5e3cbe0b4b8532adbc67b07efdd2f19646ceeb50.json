{"sha": "5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzY2JlMGI0Yjg1MzJhZGJjNjdiMDdlZmRkMmYxOTY0NmNlZWI1MA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-02-28T18:42:47Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-02-28T18:42:47Z"}, "message": "acinclude.m4 (GLIBCPP_CONFIGURE): Remove GLIBCPP_CFLAGS and GLIBCPP_CXXFLAGS as unused variables.\n\n2001-02-28  Phil Edwards  <pme@sources.redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_CONFIGURE):  Remove GLIBCPP_CFLAGS\n\t  and GLIBCPP_CXXFLAGS as unused variables.\n\t* configure.host:  Likewise.\n\t* configure.target:  Likewise.\n\t* aclocal.m4:  Regenerated.\n\t* configure:  Regenerated.\n\t* Makefile.in:  Regenerated.\n\t* libio/Makefile.in:  Regenerated.\n\t* libmath/Makefile.in:  Regenerated.\n\t* libsupc++/Makefile.in:  Regenerated.\n\t* src/Makefile.in:  Regenerated.\n\nFrom-SVN: r40135", "tree": {"sha": "8d583fc91151a32e64822ff15b6e35bd0ff3b4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d583fc91151a32e64822ff15b6e35bd0ff3b4f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/comments", "author": null, "committer": null, "parents": [{"sha": "b4e89e2d67f984f7d90a81185aa67dfdf6a1f7a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e89e2d67f984f7d90a81185aa67dfdf6a1f7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e89e2d67f984f7d90a81185aa67dfdf6a1f7a1"}], "stats": {"total": 460, "additions": 299, "deletions": 161}, "files": [{"sha": "10a4f2476fa6338dfe7487f4d34c797eca19c24a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -1,3 +1,17 @@\n+2001-02-28  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_CONFIGURE):  Remove GLIBCPP_CFLAGS\n+\t  and GLIBCPP_CXXFLAGS as unused variables.\n+\t* configure.host:  Likewise.\n+\t* configure.target:  Likewise.\n+\t* aclocal.m4:  Regenerated.\n+\t* configure:  Regenerated.\n+\t* Makefile.in:  Regenerated.\n+\t* libio/Makefile.in:  Regenerated.\n+\t* libmath/Makefile.in:  Regenerated.\n+\t* libsupc++/Makefile.in:  Regenerated.\n+\t* src/Makefile.in:  Regenerated.\n+\n 2001-02-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/1886"}, {"sha": "e04b0c91c0eb607f44d0a12d1eb27fd8ea5d4284", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -79,8 +79,6 @@ EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n-GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n GLIBCPP_INCLUDE_DIR = @GLIBCPP_INCLUDE_DIR@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n@@ -137,7 +135,48 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"EXPECT=$(EXPECT)\" \t\"RUNTEST=$(RUNTEST)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"INSTALL=$(INSTALL)\" \\\n+\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\"MAKE=$(MAKE)\" \\\n+\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"EXPECT=$(EXPECT)\" \\\n+\t\"RUNTEST=$(RUNTEST)\" \\\n+\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"infodir=$(infodir)\" \\\n+\t\"libdir=$(libdir)\" \\\n+\t\"includedir=$(includedir)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"tooldir=$(tooldir)\" \\\n+\t\"AR=$(AR)\" \\\n+\t\"AS=$(AS)\" \\\n+\t\"CC=$(CC)\" \\\n+\t\"CXX=$(CXX)\" \\\n+\t\"LD=$(LD)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"RANLIB=$(RANLIB)\" \\\n+\t\"NM=$(NM)\" \\\n+\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n+\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n+\t\"DESTDIR=$(DESTDIR)\" \\\n+\t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n CONFIG_HEADER = config.h"}, {"sha": "2f3ef74abdee67e464b9a6940ea7adf577008d3d", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -133,12 +133,6 @@ LIB_AC_PROG_CXX\n     AC_EXEEXT\n   fi\n \n-  # configure.host sets the following important variables\n-  #        glibcpp_cflags    - host specific C compiler flags\n-  #        glibcpp_cxxflags  - host specific C++ compiler flags\n-  glibcpp_cflags=\n-  glibcpp_cxxflags=\n-\n   . [$]{glibcpp_basedir}/configure.host\n \n   case [$]{glibcpp_basedir} in\n@@ -147,13 +141,8 @@ LIB_AC_PROG_CXX\n   esac\n \n   # This does for the target what configure.host does for the host.  In\n-  # addition to modifying the same flags, it also sets up symlinks.\n+  # addition to possibly modifying the same flags, it also sets up symlinks.\n   GLIBCPP_CHECK_TARGET\n-\n-  GLIBCPP_CFLAGS=\"[$]{glibcpp_cflags}\"\n-  GLIBCPP_CXXFLAGS=\"[$]{glibcpp_cxxflags}\"\n-  AC_SUBST(GLIBCPP_CFLAGS)\n-  AC_SUBST(GLIBCPP_CXXFLAGS)\n ])\n \n "}, {"sha": "34bace4a2ff7590c4a7bc0e054a468857daaea78", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -145,12 +145,6 @@ LIB_AC_PROG_CXX\n     AC_EXEEXT\n   fi\n \n-  # configure.host sets the following important variables\n-  #        glibcpp_cflags    - host specific C compiler flags\n-  #        glibcpp_cxxflags  - host specific C++ compiler flags\n-  glibcpp_cflags=\n-  glibcpp_cxxflags=\n-\n   . [$]{glibcpp_basedir}/configure.host\n \n   case [$]{glibcpp_basedir} in\n@@ -159,13 +153,8 @@ LIB_AC_PROG_CXX\n   esac\n \n   # This does for the target what configure.host does for the host.  In\n-  # addition to modifying the same flags, it also sets up symlinks.\n+  # addition to possibly modifying the same flags, it also sets up symlinks.\n   GLIBCPP_CHECK_TARGET\n-\n-  GLIBCPP_CFLAGS=\"[$]{glibcpp_cflags}\"\n-  GLIBCPP_CXXFLAGS=\"[$]{glibcpp_cxxflags}\"\n-  AC_SUBST(GLIBCPP_CFLAGS)\n-  AC_SUBST(GLIBCPP_CXXFLAGS)\n ])\n \n "}, {"sha": "414b8c1d1762ea4b9060147c1137234e76fa7e41", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 52, "deletions": 54, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -78,6 +78,7 @@ program_suffix=NONE\n program_transform_name=s,x,x,\n silent=\n site=\n+sitefile=\n srcdir=\n target=NONE\n verbose=\n@@ -192,6 +193,7 @@ Configuration:\n   --help                  print this message\n   --no-create             do not create output files\n   --quiet, --silent       do not print \\`checking...' messages\n+  --site-file=FILE        use FILE as the site file\n   --version               print the version of autoconf that created configure\n Directory and file names:\n   --prefix=PREFIX         install architecture-independent files in PREFIX\n@@ -362,6 +364,11 @@ EOF\n   -site=* | --site=* | --sit=*)\n     site=\"$ac_optarg\" ;;\n \n+  -site-file | --site-file | --site-fil | --site-fi | --site-f)\n+    ac_prev=sitefile ;;\n+  -site-file=* | --site-file=* | --site-fil=* | --site-fi=* | --site-f=*)\n+    sitefile=\"$ac_optarg\" ;;\n+\n   -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n     ac_prev=srcdir ;;\n   -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n@@ -527,12 +534,16 @@ fi\n srcdir=`echo \"${srcdir}\" | sed 's%\\([^/]\\)/*$%\\1%'`\n \n # Prefer explicitly selected file to automatically selected ones.\n-if test -z \"$CONFIG_SITE\"; then\n-  if test \"x$prefix\" != xNONE; then\n-    CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n-  else\n-    CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n+if test -z \"$sitefile\"; then\n+  if test -z \"$CONFIG_SITE\"; then\n+    if test \"x$prefix\" != xNONE; then\n+      CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n+    else\n+      CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n+    fi\n   fi\n+else\n+  CONFIG_SITE=\"$sitefile\"\n fi\n for ac_site_file in $CONFIG_SITE; do\n   if test -r \"$ac_site_file\"; then\n@@ -646,7 +657,7 @@ else { echo \"configure: error: can not run $ac_config_sub\" 1>&2; exit 1; }\n fi\n \n echo $ac_n \"checking host system type\"\"... $ac_c\" 1>&6\n-echo \"configure:650: checking host system type\" >&5\n+echo \"configure:661: checking host system type\" >&5\n \n host_alias=$host\n case \"$host_alias\" in\n@@ -667,7 +678,7 @@ host_os=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$host\" 1>&6\n \n echo $ac_n \"checking target system type\"\"... $ac_c\" 1>&6\n-echo \"configure:671: checking target system type\" >&5\n+echo \"configure:682: checking target system type\" >&5\n \n target_alias=$target\n case \"$target_alias\" in\n@@ -685,7 +696,7 @@ target_os=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$target\" 1>&6\n \n echo $ac_n \"checking build system type\"\"... $ac_c\" 1>&6\n-echo \"configure:689: checking build system type\" >&5\n+echo \"configure:700: checking build system type\" >&5\n \n build_alias=$build\n case \"$build_alias\" in\n@@ -736,7 +747,7 @@ fi\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:740: checking for a BSD compatible install\" >&5\n+echo \"configure:751: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -789,7 +800,7 @@ test -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL_PROGRAM}'\n test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n \n echo $ac_n \"checking whether build environment is sane\"\"... $ac_c\" 1>&6\n-echo \"configure:793: checking whether build environment is sane\" >&5\n+echo \"configure:804: checking whether build environment is sane\" >&5\n # Just in case\n sleep 1\n echo timestamp > conftestfile\n@@ -846,7 +857,7 @@ test \"$program_suffix\" != NONE &&\n test \"$program_transform_name\" = \"\" && program_transform_name=\"s,x,x,\"\n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:850: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:861: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -879,12 +890,12 @@ else\n fi\n \n echo $ac_n \"checking for Cygwin environment\"\"... $ac_c\" 1>&6\n-echo \"configure:883: checking for Cygwin environment\" >&5\n+echo \"configure:894: checking for Cygwin environment\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_cygwin'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 888 \"configure\"\n+#line 899 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -895,7 +906,7 @@ int main() {\n return __CYGWIN__;\n ; return 0; }\n EOF\n-if { (eval echo configure:899: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:910: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_cygwin=yes\n else\n@@ -912,19 +923,19 @@ echo \"$ac_t\"\"$ac_cv_cygwin\" 1>&6\n CYGWIN=\n test \"$ac_cv_cygwin\" = yes && CYGWIN=yes\n echo $ac_n \"checking for mingw32 environment\"\"... $ac_c\" 1>&6\n-echo \"configure:916: checking for mingw32 environment\" >&5\n+echo \"configure:927: checking for mingw32 environment\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_mingw32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 921 \"configure\"\n+#line 932 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n return __MINGW32__;\n ; return 0; }\n EOF\n-if { (eval echo configure:928: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:939: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_mingw32=yes\n else\n@@ -976,7 +987,7 @@ EOF\n \n missing_dir=`cd $ac_aux_dir && pwd`\n echo $ac_n \"checking for working aclocal\"\"... $ac_c\" 1>&6\n-echo \"configure:980: checking for working aclocal\" >&5\n+echo \"configure:991: checking for working aclocal\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -989,7 +1000,7 @@ else\n fi\n \n echo $ac_n \"checking for working autoconf\"\"... $ac_c\" 1>&6\n-echo \"configure:993: checking for working autoconf\" >&5\n+echo \"configure:1004: checking for working autoconf\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -1002,7 +1013,7 @@ else\n fi\n \n echo $ac_n \"checking for working automake\"\"... $ac_c\" 1>&6\n-echo \"configure:1006: checking for working automake\" >&5\n+echo \"configure:1017: checking for working automake\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -1015,7 +1026,7 @@ else\n fi\n \n echo $ac_n \"checking for working autoheader\"\"... $ac_c\" 1>&6\n-echo \"configure:1019: checking for working autoheader\" >&5\n+echo \"configure:1030: checking for working autoheader\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -1028,7 +1039,7 @@ else\n fi\n \n echo $ac_n \"checking for working makeinfo\"\"... $ac_c\" 1>&6\n-echo \"configure:1032: checking for working makeinfo\" >&5\n+echo \"configure:1043: checking for working makeinfo\" >&5\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n # Redirect stdin to placate older versions of autoconf.  Sigh.\n@@ -1063,7 +1074,7 @@ fi\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1067: checking for $ac_word\" >&5\n+echo \"configure:1078: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1093,7 +1104,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1097: checking for $ac_word\" >&5\n+echo \"configure:1108: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1142,7 +1153,7 @@ fi\n fi\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:1146: checking whether we are using GNU C\" >&5\n+echo \"configure:1157: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1151,7 +1162,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1155: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1166: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -1166,7 +1177,7 @@ if test $ac_cv_prog_gcc = yes; then\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\n   echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:1170: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:1181: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1211,7 +1222,7 @@ do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1215: checking for $ac_word\" >&5\n+echo \"configure:1226: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CXX_libstdcxx'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1246,7 +1257,7 @@ CXX=$CXX_libstdcxx\n test -z \"$CXX\" && { echo \"configure: error: no acceptable c++ found in \\$PATH\" 1>&2; exit 1; }\n \n echo $ac_n \"checking whether we are using GNU C++\"\"... $ac_c\" 1>&6\n-echo \"configure:1250: checking whether we are using GNU C++\" >&5\n+echo \"configure:1261: checking whether we are using GNU C++\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gxx'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1255,7 +1266,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:1259: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:1270: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gxx=yes\n else\n   ac_cv_prog_gxx=no\n@@ -1270,7 +1281,7 @@ if test $ac_cv_prog_gxx = yes; then\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\n   echo $ac_n \"checking whether ${CXX-g++} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:1274: checking whether ${CXX-g++} accepts -g\" >&5\n+echo \"configure:1285: checking whether ${CXX-g++} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cxx_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1301,7 +1312,7 @@ fi\n   # Extract the first word of \"${ac_tool_prefix}as\", so it can be a program name with args.\n set dummy ${ac_tool_prefix}as; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1305: checking for $ac_word\" >&5\n+echo \"configure:1316: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_AS'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1333,7 +1344,7 @@ fi\n   # Extract the first word of \"${ac_tool_prefix}ar\", so it can be a program name with args.\n set dummy ${ac_tool_prefix}ar; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1337: checking for $ac_word\" >&5\n+echo \"configure:1348: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_AR'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1365,7 +1376,7 @@ fi\n   # Extract the first word of \"${ac_tool_prefix}ranlib\", so it can be a program name with args.\n set dummy ${ac_tool_prefix}ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1369: checking for $ac_word\" >&5\n+echo \"configure:1380: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1397,7 +1408,7 @@ if test -n \"$ac_tool_prefix\"; then\n   # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1401: checking for $ac_word\" >&5\n+echo \"configure:1412: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1442,7 +1453,7 @@ fi\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:1446: checking for a BSD compatible install\" >&5\n+echo \"configure:1457: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1496,7 +1507,7 @@ test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n \n \n   echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:1500: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:1511: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\"\n@@ -1530,7 +1541,7 @@ fi\n     \n \n echo $ac_n \"checking for executable suffix\"\"... $ac_c\" 1>&6\n-echo \"configure:1534: checking for executable suffix\" >&5\n+echo \"configure:1545: checking for executable suffix\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_exeext'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1540,10 +1551,10 @@ else\n   rm -f conftest*\n   echo 'int main () { return 0; }' > conftest.$ac_ext\n   ac_cv_exeext=\n-  if { (eval echo configure:1544: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n+  if { (eval echo configure:1555: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.c | *.o | *.obj) ;;\n+      *.c | *.o | *.obj | *.ilk | *.pdb) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -1562,12 +1573,6 @@ ac_exeext=$EXEEXT\n \n   fi\n \n-  # configure.host sets the following important variables\n-  #        glibcpp_cflags    - host specific C compiler flags\n-  #        glibcpp_cxxflags  - host specific C++ compiler flags\n-  glibcpp_cflags=\n-  glibcpp_cxxflags=\n-\n   . ${glibcpp_basedir}/configure.host\n \n   case ${glibcpp_basedir} in\n@@ -1576,19 +1581,14 @@ ac_exeext=$EXEEXT\n   esac\n \n   # This does for the target what configure.host does for the host.  In\n-  # addition to modifying the same flags, it also sets up symlinks.\n+  # addition to possibly modifying the same flags, it also sets up symlinks.\n   \n     . ${glibcpp_basedir}/configure.target\n     echo \"$ac_t\"\"CPU config directory is $cpu_include_dir\" 1>&6\n     echo \"$ac_t\"\"OS config directory is $os_include_dir\" 1>&6\n     \n \n \n-  GLIBCPP_CFLAGS=\"${glibcpp_cflags}\"\n-  GLIBCPP_CXXFLAGS=\"${glibcpp_cxxflags}\"\n-  \n-  \n-\n \n \n # Check whether --enable-shared or --disable-shared was given.\n@@ -16172,8 +16172,6 @@ s%@MAINTAINER_MODE_TRUE@%$MAINTAINER_MODE_TRUE%g\n s%@MAINTAINER_MODE_FALSE@%$MAINTAINER_MODE_FALSE%g\n s%@MAINT@%$MAINT%g\n s%@EXEEXT@%$EXEEXT%g\n-s%@GLIBCPP_CFLAGS@%$GLIBCPP_CFLAGS%g\n-s%@GLIBCPP_CXXFLAGS@%$GLIBCPP_CXXFLAGS%g\n s%@LN_S@%$LN_S%g\n s%@OBJEXT@%$OBJEXT%g\n s%@STRIP@%$STRIP%g"}, {"sha": "db3c57a06f823e303ea7efa53159b3d8d7492dc9", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -15,8 +15,6 @@\n #   target_optspace       --enable-target-optspace (\"yes\", \"no\", \"\")\n \n # It sets the following shell variables:\n-#   glibcpp_cflags         Special CFLAGS to use when building\n-#   glibcpp_cxxflags       Special CXXFLAGS to use when building\n \n \n AM_RUNTESTFLAGS= \n@@ -25,17 +23,9 @@ AM_RUNTESTFLAGS=\n # THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n \n \n-DIVIDESPEC=-fuse-divide-subroutine\n-\n case \"${host}\" in\n-  i686-*|i586-*)\n-       ;;\n-  sparc-*)\n-        ;;\n   *)\n-       ;;\n+    ;;\n esac\n \n-glibcpp_cflags=\"${glibcpp_cflags} ${libgcj_flags}\"\n-glibcpp_cxxflags=\"${glibcpp_cxxflags} ${libgcj_flags}\"\n "}, {"sha": "9d7f3a2a25821bc1ea06d731a92bde492f1bc7cf", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -16,17 +16,8 @@\n #   target_optspace       --enable-target-optspace (\"yes\", \"no\", \"\")\n \n # It possibly modifies the following shell variables:\n-#   glibcpp_cflags         Special CFLAGS to use when building\n-#   glibcpp_cxxflags       Special CXXFLAGS to use when building\n #   cpu_include_dir        CPU-specific include directory, relative to srcdir\n #   os_include_dir         OS-specific include directory, relative to srcdir\n-# The first two are set in configure.host and modified here.\n-\n-\n-# These are \"local\" and should be set in the switch statements below.  They\n-# will be appended to their real conterparts once the dust settles.\n-l_glibcpp_cflags=\n-l_glibcpp_cxxflags=\n \n \n # Set any CPU dependent compiler flags.\n@@ -133,9 +124,3 @@ case \"${target}\" in\n esac\n     \n \n-# Okay, folks, show's over.  Move along, move along.\n-\n-glibcpp_cflags=\"${glibcpp_cflags} ${libgcj_flags} ${l_glibcpp_cflags}\"\n-glibcpp_cxxflags=\"${glibcpp_cxxflags} ${libgcj_flags} ${l_glibcpp_cxxflags}\"\n-\n-"}, {"sha": "0791b969feedf62928f50719fba07269985acc77", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -78,8 +78,6 @@ EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n-GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSTRINGOBJS = @LIBSTRINGOBJS@\n LIBTOOL = @LIBTOOL@\n@@ -113,7 +111,7 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n-@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = libio.la\n+@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = @GLIBCPP_BUILD_LIBIO_TRUE@libio.la\n @GLIBCPP_BUILD_LIBIO_FALSE@noinst_LTLIBRARIES = \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -125,14 +123,21 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n CSHADOW_INCLUDES = @CSHADOW_INCLUDES@\n \n-INCLUDES =  \t-nostdinc++ \t-I$(top_builddir)/include -I$(GLIBCPP_INCLUDE_DIR) \t$(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n+INCLUDES = \\\n+\t-nostdinc++ \\\n+\t-I$(top_builddir)/include -I$(GLIBCPP_INCLUDE_DIR) \\\n+\t$(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n \n \n-libio_headers =          libio.h libioP.h iolibio.h\n+libio_headers = \\\n+        libio.h libioP.h iolibio.h\n \n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \tiofclose.c iofopen.c \n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = @GLIBCPP_NEED_LIBIO_TRUE@\\\n+@GLIBCPP_NEED_LIBIO_TRUE@\tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \\\n+@GLIBCPP_NEED_LIBIO_TRUE@\tiofclose.c iofopen.c \n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_SRCS = \n-@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n+@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = @GLIBCPP_NEED_WLIBIO_TRUE@\\\n+@GLIBCPP_NEED_WLIBIO_TRUE@\twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n @GLIBCPP_NEED_WLIBIO_FALSE@LIBIO_WSRCS = \n \n EXTRA_DIST = iostreamP.h"}, {"sha": "3d0a3e3aeb9ec84e7a75195168238f3154650b87", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -78,8 +78,6 @@ EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n-GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSTRINGOBJS = @LIBSTRINGOBJS@\n LIBTOOL = @LIBTOOL@\n@@ -116,18 +114,24 @@ mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n noinst_LTLIBRARIES = libmath.la\n \n-EXTRA_LONG_DOUBLE_yes =  \thypotl.c signbitl.c\n+EXTRA_LONG_DOUBLE_yes = \\\n+\thypotl.c signbitl.c\n \n \n-EXTRA_DIST =  \thypot.c hypotf.c atan2f.c expf.c \t$(EXTRA_LONG_DOUBLE_yes) \n+EXTRA_DIST = \\\n+\thypot.c hypotf.c atan2f.c expf.c \\\n+\t$(EXTRA_LONG_DOUBLE_yes) \n \n \n-libmath_la_LIBADD =  \t@LIBMATHOBJS@ \t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n+libmath_la_LIBADD = \\\n+\t@LIBMATHOBJS@ \\\n+\t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n \n \n libmath_la_DEPENDENCIES = $(libmath_la_LIBADD)\n \n-libmath_la_SOURCES =  \tsignbit.c signbitf.c\n+libmath_la_SOURCES = \\\n+\tsignbit.c signbitf.c\n \n \n LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n@@ -141,7 +145,9 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n CSHADOW_INCLUDES = @CSHADOW_INCLUDES@\n \n-INCLUDES =  \t-I$(GLIBCPP_INCLUDE_DIR) -I$(top_builddir)/include  \t$(TOPLEVEL_INCLUDES) \n+INCLUDES = \\\n+\t-I$(GLIBCPP_INCLUDE_DIR) -I$(top_builddir)/include  \\\n+\t$(TOPLEVEL_INCLUDES) \n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "32a11478bd960be57916907ea1040d2b0443ab3b", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 36, "deletions": 10, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -77,8 +77,6 @@ EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n-GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSTRINGOBJS = @LIBSTRINGOBJS@\n LN_S = @LN_S@\n@@ -130,11 +128,13 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS = \\\n+\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS = \\\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -146,13 +146,31 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES =  \t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \t $(LIBSUPCXX_INCLUDES)\n+INCLUDES = \\\n+\t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \\\n+\t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \\\n+\t $(LIBSUPCXX_INCLUDES)\n \n \n-headers =  \texception new typeinfo cxxabi.h exception_defines.h \n+headers = \\\n+\texception new typeinfo cxxabi.h exception_defines.h \n \n \n-sources =  \tdel_op.cc \tdel_opnt.cc \tdel_opv.cc \tdel_opvnt.cc \texception_support.cc \tnew_handler.cc \tnew_op.cc \tnew_opnt.cc \tnew_opv.cc \tnew_opvnt.cc \tpure.cc \ttinfo.cc \ttinfo2.cc \tvec.cc\n+sources = \\\n+\tdel_op.cc \\\n+\tdel_opnt.cc \\\n+\tdel_opv.cc \\\n+\tdel_opvnt.cc \\\n+\texception_support.cc \\\n+\tnew_handler.cc \\\n+\tnew_op.cc \\\n+\tnew_opnt.cc \\\n+\tnew_opv.cc \\\n+\tnew_opvnt.cc \\\n+\tpure.cc \\\n+\ttinfo.cc \\\n+\ttinfo2.cc \\\n+\tvec.cc\n \n \n libsupc___la_SOURCES = $(sources)\n@@ -170,7 +188,12 @@ LIBSUPCXX_CXXFLAGS = -prefer-pic\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS = \\\n+\t-fno-implicit-templates \\\n+\t$(LIBSUPCXX_CXXFLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -194,14 +217,17 @@ AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS)\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+               --mode=compile $(CXX) $(INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow CXX to\n # be used in libtool since this would add -lstdc++ to the link line\n # which of course is problematic at this point.\n-CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \\\n+\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "96414c4cb4a60ba644e9adb8836717de54178f02", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 127, "deletions": 30, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=5e3cbe0b4b8532adbc67b07efdd2f19646ceeb50", "patch": "@@ -76,8 +76,6 @@ EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n-GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSTRINGOBJS = @LIBSTRINGOBJS@\n LIBTOOL = @LIBTOOL@\n@@ -124,11 +122,13 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS = \\\n+\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS = \\\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -140,35 +140,122 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES =  \t-nostdinc++ \t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \t$(TOPLEVEL_INCLUDES)\t\n-\n-\n-base_headers =  \tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \tbits/stringfwd.h bits/std_string.h bits/basic_string.h \tbits/basic_string.tcc \tbits/generic_shadow.h bits/std_utility.h \tbits/std_complex.h \tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \tbits/std_fstream.h bits/std_iomanip.h \tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \tbits/std_istream.h bits/istream.tcc bits/std_locale.h \tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \tbits/streambuf.tcc bits/basic_file.h \tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \tbits/stl_threads.h bits/stl_iterator_base.h \tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \tbits/std_iterator.h bits/std_list.h \tbits/std_map.h bits/std_memory.h bits/std_numeric.h \tbits/std_queue.h bits/std_set.h bits/std_stack.h \tbits/std_stdexcept.h bits/functexcept.h bits/std_vector.h \tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \tbits/stl_deque.h bits/stl_function.h \tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \tbits/stl_relops.h bits/stl_set.h \tbits/stl_stack.h bits/stl_tempbuf.h \tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \tbits/type_traits.h bits/std_algorithm.h \tbits/concept_checks.h bits/container_concepts.h \tbits/sequence_concepts.h bits/stl_construct.h\n-\n-\n-backward_headers =  \tbackward/complex.h backward/iomanip.h backward/istream.h \tbackward/ostream.h backward/stream.h backward/streambuf.h \tbackward/algo.h backward/algobase.h backward/alloc.h \tbackward/bvector.h backward/defalloc.h backward/deque.h \tbackward/function.h backward/hash_map.h backward/hash_set.h \tbackward/hashtable.h backward/heap.h backward/iterator.h \tbackward/list.h backward/map.h backward/multimap.h backward/new.h \tbackward/multiset.h backward/pair.h backward/iostream.h \tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \tbackward/tempbuf.h backward/tree.h backward/vector.h \tbackward/fstream.h backward/strstream.h backward/strstream\n-\n-\n-ext_headers =  \text/ropeimpl.h ext/stl_rope.h \text/stl_bvector.h ext/stl_hashtable.h ext/stl_hash_fun.h \text/hash_map ext/hash_set ext/rope ext/slist \text/tree ext/bvector \n-\n-\n-c_base_headers =  \tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \tbits/std_cfloat.h bits/std_climits.h bits/std_clocale.h \tbits/std_cmath.h bits/std_csetjmp.h bits/std_csignal.h \tbits/std_cstdarg.h bits/std_cstddef.h bits/std_cstdio.h \tbits/std_cstdlib.h bits/std_cstring.h bits/std_ctime.h \tbits/std_cwchar.h bits/std_cwctype.h bits/cmath.tcc\n-\n-@GLIBCPP_USE_CSHADOW_TRUE@c_shadow_headers = \tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \tfeatures.h langinfo.h \tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \tbits/wrap_features.h bits/wrap_langinfo.h \tsys/cdefs.h \n+INCLUDES = \\\n+\t-nostdinc++ \\\n+\t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \\\n+\t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \\\n+\t$(TOPLEVEL_INCLUDES)\t\n+\n+\n+base_headers = \\\n+\tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \\\n+\tbits/stringfwd.h bits/std_string.h bits/basic_string.h \\\n+\tbits/basic_string.tcc \\\n+\tbits/generic_shadow.h bits/std_utility.h \\\n+\tbits/std_complex.h \\\n+\tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \\\n+\tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \\\n+\tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \\\n+\tbits/std_fstream.h bits/std_iomanip.h \\\n+\tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \\\n+\tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \\\n+\tbits/std_istream.h bits/istream.tcc bits/std_locale.h \\\n+\tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \\\n+\tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \\\n+\tbits/streambuf.tcc bits/basic_file.h \\\n+\tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \\\n+\tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \\\n+\tbits/stl_threads.h bits/stl_iterator_base.h \\\n+\tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \\\n+\tbits/std_iterator.h bits/std_list.h \\\n+\tbits/std_map.h bits/std_memory.h bits/std_numeric.h \\\n+\tbits/std_queue.h bits/std_set.h bits/std_stack.h \\\n+\tbits/std_stdexcept.h bits/functexcept.h bits/std_vector.h \\\n+\tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \\\n+\tbits/stl_deque.h bits/stl_function.h \\\n+\tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \\\n+\tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \\\n+\tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \\\n+\tbits/stl_relops.h bits/stl_set.h \\\n+\tbits/stl_stack.h bits/stl_tempbuf.h \\\n+\tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \\\n+\tbits/type_traits.h bits/std_algorithm.h \\\n+\tbits/concept_checks.h bits/container_concepts.h \\\n+\tbits/sequence_concepts.h bits/stl_construct.h\n+\n+\n+backward_headers = \\\n+\tbackward/complex.h backward/iomanip.h backward/istream.h \\\n+\tbackward/ostream.h backward/stream.h backward/streambuf.h \\\n+\tbackward/algo.h backward/algobase.h backward/alloc.h \\\n+\tbackward/bvector.h backward/defalloc.h backward/deque.h \\\n+\tbackward/function.h backward/hash_map.h backward/hash_set.h \\\n+\tbackward/hashtable.h backward/heap.h backward/iterator.h \\\n+\tbackward/list.h backward/map.h backward/multimap.h backward/new.h \\\n+\tbackward/multiset.h backward/pair.h backward/iostream.h \\\n+\tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \\\n+\tbackward/tempbuf.h backward/tree.h backward/vector.h \\\n+\tbackward/fstream.h backward/strstream.h backward/strstream\n+\n+\n+ext_headers = \\\n+\text/ropeimpl.h ext/stl_rope.h \\\n+\text/stl_bvector.h ext/stl_hashtable.h ext/stl_hash_fun.h \\\n+\text/hash_map ext/hash_set ext/rope ext/slist \\\n+\text/tree ext/bvector \n+\n+\n+c_base_headers = \\\n+\tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \\\n+\tbits/std_cfloat.h bits/std_climits.h bits/std_clocale.h \\\n+\tbits/std_cmath.h bits/std_csetjmp.h bits/std_csignal.h \\\n+\tbits/std_cstdarg.h bits/std_cstddef.h bits/std_cstdio.h \\\n+\tbits/std_cstdlib.h bits/std_cstring.h bits/std_ctime.h \\\n+\tbits/std_cwchar.h bits/std_cwctype.h bits/cmath.tcc\n+\n+@GLIBCPP_USE_CSHADOW_TRUE@c_shadow_headers = @GLIBCPP_USE_CSHADOW_TRUE@\\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tfeatures.h langinfo.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tbits/wrap_features.h bits/wrap_langinfo.h \\\n+@GLIBCPP_USE_CSHADOW_TRUE@\tsys/cdefs.h \n @GLIBCPP_USE_CSHADOW_FALSE@c_shadow_headers = \n \n-std_headers =  \talgorithm bitset complex deque fstream functional \tiomanip ios iosfwd iostream istream iterator limits list locale \tmap memory numeric ostream queue set sstream stack stdexcept \tstreambuf string utility valarray vector \tcassert cctype cerrno cfloat climits clocale ciso646 \tcmath csetjmp csignal cstdarg cstddef cstdio cstdlib \tcstring ctime cwchar cwctype\n-\n-@GLIBCPP_NEED_LIBIO_TRUE@libio_headers = \t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n+std_headers = \\\n+\talgorithm bitset complex deque fstream functional \\\n+\tiomanip ios iosfwd iostream istream iterator limits list locale \\\n+\tmap memory numeric ostream queue set sstream stack stdexcept \\\n+\tstreambuf string utility valarray vector \\\n+\tcassert cctype cerrno cfloat climits clocale ciso646 \\\n+\tcmath csetjmp csignal cstdarg cstddef cstdio cstdlib \\\n+\tcstring ctime cwchar cwctype\n+\n+@GLIBCPP_NEED_LIBIO_TRUE@libio_headers = @GLIBCPP_NEED_LIBIO_TRUE@\\\n+@GLIBCPP_NEED_LIBIO_TRUE@\t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n @GLIBCPP_NEED_LIBIO_FALSE@libio_headers = \n \n-build_headers =  \tbits/std_limits.h \tbits/c++config.h bits/c++io.h bits/c++locale.h bits/c++threads.h \tbits/basic_file_model.h \tbits/atomicity.h bits/os_defines.h \tbits/ctype_base.h bits/ctype_noninline.h bits/ctype_inline.h \n+build_headers = \\\n+\tbits/std_limits.h \\\n+\tbits/c++config.h bits/c++io.h bits/c++locale.h bits/c++threads.h \\\n+\tbits/basic_file_model.h \\\n+\tbits/atomicity.h bits/os_defines.h \\\n+\tbits/ctype_base.h bits/ctype_noninline.h bits/ctype_inline.h \n \n \n-sources =  \tlimitsMEMBERS.cc \tstdexcept.cc functexcept.cc bitset.cc         globals.cc \tbasic_file.cc ios.cc complex_io.cc strstream.cc \tc++locale.cc locale.cc localename.cc codecvt.cc \tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc string-inst.cc\n+sources = \\\n+\tlimitsMEMBERS.cc \\\n+\tstdexcept.cc functexcept.cc bitset.cc \\\n+        globals.cc \\\n+\tbasic_file.cc ios.cc complex_io.cc strstream.cc \\\n+\tc++locale.cc locale.cc localename.cc codecvt.cc \\\n+\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc string-inst.cc\n \n \n-wstring_sources =  \twstring-inst.cc\n+wstring_sources = \\\n+\twstring-inst.cc\n \n VPATH =  $(top_srcdir) $(top_srcdir)/src $(GLIBCPP_INCLUDE_DIR)  $(GLIBCPP_INCLUDE_DIR)/std $(C_INCLUDE_DIR)\n \n@@ -179,13 +266,16 @@ libstdc___la_SOURCES = $(sources)\n \n libinst_wstring_la_SOURCES = $(wstring_sources)\n \n-libstdc___la_LIBADD =  \t../libmath/libmath.la @libio_la@ \t../libsupc++/libsupc++convenience.la \t@libinst_wstring_la@\n+libstdc___la_LIBADD = \\\n+\t../libmath/libmath.la @libio_la@ \\\n+\t../libsupc++/libsupc++convenience.la \\\n+\t@libinst_wstring_la@\n \n \n libstdc___la_LDFLAGS = -version-info 3:0:0 -lm\n \n libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n-@GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = $(top_builddir)/stamp-cshadow\n+@GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = @GLIBCPP_USE_CSHADOW_TRUE@$(top_builddir)/stamp-cshadow\n @GLIBCPP_USE_CSHADOW_FALSE@CSHADOW_H = \n \n # Check for various configure bits that change where the headers get installed.\n@@ -204,7 +294,12 @@ c_incdir = @C_INCLUDE_DIR@\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS = \\\n+\t-fno-implicit-templates \\\n+\t$(LIBSUPCXX_CXXFLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -225,14 +320,16 @@ AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS)\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow CXX to\n # be used in libtool since this would add -lstdc++ to the link line\n # which of course is problematic at this point.\n-CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \\\n+\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}]}