{"sha": "b68e5db5c26c56a39ac3e3c253f3c9a58058da91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4ZTVkYjVjMjZjNTZhMzlhYzNlM2MyNTNmM2M5YTU4MDU4ZGE5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@adacore.com", "date": "2020-07-23T08:07:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-20T07:21:45Z"}, "message": "[Ada] CUDA: build procedure calls instead of function calls\n\ngcc/ada/\n\n\t* gnat_cuda.adb (Build_Register_Function_Call): Make procedure\n\tcall instead of function, rename to\n\tBuild_Register_Procedure_Call.\n\t(Build_CUDA_Init_Proc): Make procedure call instead of function.", "tree": {"sha": "90c11b4dcf7b737a11c8ee2410df04ba5afa3593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90c11b4dcf7b737a11c8ee2410df04ba5afa3593"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b68e5db5c26c56a39ac3e3c253f3c9a58058da91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68e5db5c26c56a39ac3e3c253f3c9a58058da91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b68e5db5c26c56a39ac3e3c253f3c9a58058da91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68e5db5c26c56a39ac3e3c253f3c9a58058da91/comments", "author": {"login": "richardkenner", "id": 56170968, "node_id": "MDQ6VXNlcjU2MTcwOTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56170968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardkenner", "html_url": "https://github.com/richardkenner", "followers_url": "https://api.github.com/users/richardkenner/followers", "following_url": "https://api.github.com/users/richardkenner/following{/other_user}", "gists_url": "https://api.github.com/users/richardkenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardkenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardkenner/subscriptions", "organizations_url": "https://api.github.com/users/richardkenner/orgs", "repos_url": "https://api.github.com/users/richardkenner/repos", "events_url": "https://api.github.com/users/richardkenner/events{/privacy}", "received_events_url": "https://api.github.com/users/richardkenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abc694ce7c956a38d2e8057496e25766cf0e216a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abc694ce7c956a38d2e8057496e25766cf0e216a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abc694ce7c956a38d2e8057496e25766cf0e216a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "39a55e64df879bc549307efe4d149d9f0e36296e", "filename": "gcc/ada/gnat_cuda.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68e5db5c26c56a39ac3e3c253f3c9a58058da91/gcc%2Fada%2Fgnat_cuda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68e5db5c26c56a39ac3e3c253f3c9a58058da91/gcc%2Fada%2Fgnat_cuda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.adb?ref=b68e5db5c26c56a39ac3e3c253f3c9a58058da91", "patch": "@@ -223,7 +223,7 @@ package body GNAT_CUDA is\n       --     Kernel : Interfaces.C.Strings.Chars_Ptr :=\n       --       Interfaces.C.Strings.New_Char_Array(\"<Kernel's name>\");\n \n-      function Build_Register_Function_Call\n+      function Build_Register_Procedure_Call\n         (Loc         : Source_Ptr;\n          Bin         : Entity_Id;\n          Kernel      : Entity_Id;\n@@ -272,7 +272,7 @@ package body GNAT_CUDA is\n             Analyze (New_Stmt);\n \n             Append_To (Stmts,\n-              Build_Register_Function_Call (Loc,\n+              Build_Register_Procedure_Call (Loc,\n                 Bin         => Handle_Id,\n                 Kernel      => Kernel_Id,\n                 Kernel_Name => Defining_Entity (New_Stmt)));\n@@ -285,7 +285,7 @@ package body GNAT_CUDA is\n          --  won't be registering any other symbol with the current fat binary.\n \n          Append_To (Stmts,\n-           Make_Function_Call (Loc,\n+           Make_Procedure_Call_Statement (Loc,\n              Name                   =>\n                New_Occurrence_Of (RTE (RE_Register_Fat_Binary_End), Loc),\n              Parameter_Associations =>\n@@ -440,11 +440,11 @@ package body GNAT_CUDA is\n                    Make_String_Literal (Loc, Kernel_Name))));\n       end Build_Kernel_Name_Declaration;\n \n-      ----------------------------------\n-      -- Build_Register_Function_Call --\n-      ----------------------------------\n+      -----------------------------------\n+      -- Build_Register_Procedure_Call --\n+      -----------------------------------\n \n-      function Build_Register_Function_Call\n+      function Build_Register_Procedure_Call\n         (Loc         : Source_Ptr;\n          Bin         : Entity_Id;\n          Kernel      : Entity_Id;\n@@ -487,11 +487,11 @@ package body GNAT_CUDA is\n          --  list we just built.\n \n          return\n-           Make_Function_Call (Loc,\n+           Make_Procedure_Call_Statement (Loc,\n              Name                   =>\n                New_Occurrence_Of (RTE (RE_Register_Function), Loc),\n              Parameter_Associations => Args);\n-      end Build_Register_Function_Call;\n+      end Build_Register_Procedure_Call;\n \n       --  Local declarations\n "}]}