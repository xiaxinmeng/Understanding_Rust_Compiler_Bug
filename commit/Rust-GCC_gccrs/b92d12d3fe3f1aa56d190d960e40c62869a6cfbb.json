{"sha": "b92d12d3fe3f1aa56d190d960e40c62869a6cfbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkyZDEyZDNmZTNmMWFhNTZkMTkwZDk2MGU0MGM2Mjg2OWE2Y2ZiYg==", "commit": {"author": {"name": "Cassio Neri", "email": "cassio.neri@gmail.com", "date": "2021-06-23T14:32:16Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-23T17:28:08Z"}, "message": "libstdc++: More efficient std::chrono::year::leap\n\nSimple change to std::chrono::year::is_leap. If a year is multiple of 100,\nthen it's divisible by 400 if and only if it's divisible by 16. The latter\nallows for better code generation.\n\nThe expression is then either y%16 or y%4 which are both powers of two\nand so it can be rearranged to use simple bitmask operations.\n\nCo-authored-by: Jonathan Wakely <jwakely@redhat.com>\nCo-authored-by: Ulrich Drepper <drepper@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/chrono (chrono::year::is_leap()): Optimize.", "tree": {"sha": "e27d94f4883acb7bcf3346f6a2e7b8b8a316d921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e27d94f4883acb7bcf3346f6a2e7b8b8a316d921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b92d12d3fe3f1aa56d190d960e40c62869a6cfbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92d12d3fe3f1aa56d190d960e40c62869a6cfbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b92d12d3fe3f1aa56d190d960e40c62869a6cfbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92d12d3fe3f1aa56d190d960e40c62869a6cfbb/comments", "author": {"login": "cassioneri", "id": 2662854, "node_id": "MDQ6VXNlcjI2NjI4NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2662854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassioneri", "html_url": "https://github.com/cassioneri", "followers_url": "https://api.github.com/users/cassioneri/followers", "following_url": "https://api.github.com/users/cassioneri/following{/other_user}", "gists_url": "https://api.github.com/users/cassioneri/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassioneri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassioneri/subscriptions", "organizations_url": "https://api.github.com/users/cassioneri/orgs", "repos_url": "https://api.github.com/users/cassioneri/repos", "events_url": "https://api.github.com/users/cassioneri/events{/privacy}", "received_events_url": "https://api.github.com/users/cassioneri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53330b7d6848209d658c02be76c36aa5475a88c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53330b7d6848209d658c02be76c36aa5475a88c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53330b7d6848209d658c02be76c36aa5475a88c9"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "863b6a27bdf0c1f35b7382027b3539a2c26eb558", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92d12d3fe3f1aa56d190d960e40c62869a6cfbb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92d12d3fe3f1aa56d190d960e40c62869a6cfbb/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=b92d12d3fe3f1aa56d190d960e40c62869a6cfbb", "patch": "@@ -1606,13 +1606,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t// [1] https://github.com/cassioneri/calendar\n \t// [2] https://accu.org/journals/overload/28/155/overload155.pdf#page=16\n \n+\t// Furthermore, if y%100 != 0, then y%400==0 is equivalent to y%16==0,\n+\t// so we can rearrange the expression to (mult_100 ? y % 4 : y % 16)==0\n+\t// which is equivalent to (y & (mult_100 ? 15 : 3)) == 0.\n+\t// See https://gcc.gnu.org/pipermail/libstdc++/2021-June/052815.html\n+\n \tconstexpr uint32_t __multiplier   = 42949673;\n \tconstexpr uint32_t __bound        = 42949669;\n \tconstexpr uint32_t __max_dividend = 1073741799;\n \tconstexpr uint32_t __offset       = __max_dividend / 2 / 100 * 100;\n \tconst bool __is_multiple_of_100\n \t  = __multiplier * (_M_y + __offset) < __bound;\n-\treturn (!__is_multiple_of_100 || _M_y % 400 == 0) && _M_y % 4 == 0;\n+\treturn (_M_y & (__is_multiple_of_100 ? 15 : 3)) == 0;\n       }\n \n       explicit constexpr"}]}