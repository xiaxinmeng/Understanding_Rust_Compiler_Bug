{"sha": "f46b6be4cb63130376b9e70358de9e907a165825", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ2YjZiZTRjYjYzMTMwMzc2YjllNzAzNThkZTllOTA3YTE2NTgyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-08T12:27:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-08T12:27:24Z"}, "message": "(dump_single_macro, dump_defn_1): If -traditional, dump macros in traditional style.\n\n(dump_single_macro, dump_defn_1): If -traditional, dump macros in\ntraditional style.  This also avoids a bogus error message if the\nmacro uses traditional stringizing.\n\nFrom-SVN: r8405", "tree": {"sha": "e7f40b42d43029ed11890939e94b22f3e28c3fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7f40b42d43029ed11890939e94b22f3e28c3fa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f46b6be4cb63130376b9e70358de9e907a165825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46b6be4cb63130376b9e70358de9e907a165825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f46b6be4cb63130376b9e70358de9e907a165825", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46b6be4cb63130376b9e70358de9e907a165825/comments", "author": null, "committer": null, "parents": [{"sha": "f6eb850d30efcd0d06682bf5099d9b543a386e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6eb850d30efcd0d06682bf5099d9b543a386e3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6eb850d30efcd0d06682bf5099d9b543a386e3b"}], "stats": {"total": 44, "additions": 25, "deletions": 19}, "files": [{"sha": "a53ce0f3347614eaab2058b210ee79d0e3c99f86", "filename": "gcc/cccp.c", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f46b6be4cb63130376b9e70358de9e907a165825/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f46b6be4cb63130376b9e70358de9e907a165825/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=f46b6be4cb63130376b9e70358de9e907a165825", "patch": "@@ -9031,16 +9031,18 @@ dump_single_macro (hp, of)\n   concat = 0;\n   for (ap = defn->pattern; ap != NULL; ap = ap->next) {\n     dump_defn_1 (defn->expansion, offset, ap->nchars, of);\n-    if (ap->nchars != 0)\n-      concat = 0;\n     offset += ap->nchars;\n-    if (ap->stringify)\n-      fprintf (of, \" #\");\n-    if (ap->raw_before && !concat)\n-      fprintf (of, \" ## \");\n-    concat = 0;\n+    if (!traditional) {\n+      if (ap->nchars != 0)\n+\tconcat = 0;\n+      if (ap->stringify)\n+\tfprintf (of, \" #\");\n+      if (ap->raw_before && !concat)\n+\tfprintf (of, \" ## \");\n+      concat = 0;\n+    }\n     dump_arg_n (defn, ap->argno, of);\n-    if (ap->raw_after) {\n+    if (!traditional && ap->raw_after) {\n       fprintf (of, \" ## \");\n       concat = 1;\n     }\n@@ -9069,7 +9071,7 @@ dump_all_macros ()\n /* Output to OF a substring of a macro definition.\n    BASE is the beginning of the definition.\n    Output characters START thru LENGTH.\n-   Discard newlines outside of strings, thus\n+   Unless traditional, discard newlines outside of strings, thus\n    converting funny-space markers to ordinary spaces.  */\n \n static void\n@@ -9082,16 +9084,20 @@ dump_defn_1 (base, start, length, of)\n   U_CHAR *p = base + start;\n   U_CHAR *limit = base + start + length;\n \n-  while (p < limit) {\n-    if (*p == '\\\"' || *p =='\\'') {\n-      U_CHAR *p1 = skip_quoted_string (p, limit, 0, NULL_PTR,\n-\t\t\t\t       NULL_PTR, NULL_PTR);\n-      fwrite (p, p1 - p, 1, of);\n-      p = p1;\n-    } else {\n-      if (*p != '\\n')\n-\tputc (*p, of);\n-      p++;\n+  if (traditional)\n+    fwrite (p, sizeof (*p), length, of);\n+  else {\n+    while (p < limit) {\n+      if (*p == '\\\"' || *p =='\\'') {\n+\tU_CHAR *p1 = skip_quoted_string (p, limit, 0, NULL_PTR,\n+\t\t\t\t\t NULL_PTR, NULL_PTR);\n+\tfwrite (p, sizeof (*p), p1 - p, of);\n+\tp = p1;\n+      } else {\n+\tif (*p != '\\n')\n+\t  putc (*p, of);\n+\tp++;\n+      }\n     }\n   }\n }"}]}