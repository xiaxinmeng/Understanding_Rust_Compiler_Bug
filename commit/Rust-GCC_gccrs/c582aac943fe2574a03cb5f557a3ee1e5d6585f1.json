{"sha": "c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU4MmFhYzk0M2ZlMjU3NGEwM2NiNWY1NTdhM2VlMWU1ZDY1ODVmMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-03-01T21:14:00Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-03-01T21:14:00Z"}, "message": "method.c (implicitly_declare_fn): Remove redundant DECL_TEMPLATE_RESULT and STRIP_TEMPLATE uses.\n\n/cp\n2014-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* method.c (implicitly_declare_fn): Remove redundant\n\tDECL_TEMPLATE_RESULT and STRIP_TEMPLATE uses.\n\t* semantics.c (is_instantiation_of_constexpr): Likewise.\n\t* error.c (dump_function_decl): Likewise.\n\n2014-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* dwarf2out.c (gen_subprogram_die): Tidy.\n\nFrom-SVN: r208248", "tree": {"sha": "ef52272f484a2478ef4bd8ecdfd176588c6d1e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef52272f484a2478ef4bd8ecdfd176588c6d1e78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/comments", "author": null, "committer": null, "parents": [{"sha": "fe96264ffc4bbbe1516f9c59cb2d4a689fbf5f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe96264ffc4bbbe1516f9c59cb2d4a689fbf5f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe96264ffc4bbbe1516f9c59cb2d4a689fbf5f24"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "f9a644a2d9b0c3d0db14f8f237eccaaa75f011e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "patch": "@@ -1,3 +1,7 @@\n+2014-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* dwarf2out.c (gen_subprogram_die): Tidy.\n+\n 2014-03-01  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/60071"}, {"sha": "4b6682ad50a41119aa17b4a51322a9310787daa7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "patch": "@@ -1,3 +1,10 @@\n+2014-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* method.c (implicitly_declare_fn): Remove redundant\n+\tDECL_TEMPLATE_RESULT and STRIP_TEMPLATE uses.\n+\t* semantics.c (is_instantiation_of_constexpr): Likewise.\n+\t* error.c (dump_function_decl): Likewise.\n+\n 2014-03-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/60379"}, {"sha": "454feb519897f338be34dc9e2651cf8ae059dac8", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "patch": "@@ -1465,7 +1465,7 @@ dump_function_decl (cxx_pretty_printer *pp, tree t, int flags)\n       else if (DECL_VIRTUAL_P (t))\n \tpp_cxx_ws_string (pp, \"virtual\");\n \n-      if (DECL_DECLARED_CONSTEXPR_P (STRIP_TEMPLATE (t)))\n+      if (DECL_DECLARED_CONSTEXPR_P (t))\n \tpp_cxx_ws_string (pp, \"constexpr\");\n     }\n "}, {"sha": "c3940f2d9b4e2b89a2fce31b8c75d0c903ff4697", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "patch": "@@ -1645,9 +1645,8 @@ implicitly_declare_fn (special_function_kind kind, tree type,\n       /* For an inheriting constructor template, just copy these flags from\n \t the inherited constructor template for now.  */\n       raises = TYPE_RAISES_EXCEPTIONS (TREE_TYPE (inherited_ctor));\n-      deleted_p = DECL_DELETED_FN (DECL_TEMPLATE_RESULT (inherited_ctor));\n-      constexpr_p\n-\t= DECL_DECLARED_CONSTEXPR_P (DECL_TEMPLATE_RESULT (inherited_ctor));\n+      deleted_p = DECL_DELETED_FN (inherited_ctor);\n+      constexpr_p = DECL_DECLARED_CONSTEXPR_P (inherited_ctor);\n     }\n   else\n     synthesized_method_walk (type, kind, const_p, &raises, &trivial_p,\n@@ -1726,8 +1725,7 @@ implicitly_declare_fn (special_function_kind kind, tree type,\n       TREE_PROTECTED (fn) = TREE_PROTECTED (inherited_ctor);\n       /* Copy constexpr from the inherited constructor even if the\n \t inheriting constructor doesn't satisfy the requirements.  */\n-      constexpr_p\n-\t= DECL_DECLARED_CONSTEXPR_P (STRIP_TEMPLATE (inherited_ctor));\n+      constexpr_p = DECL_DECLARED_CONSTEXPR_P (inherited_ctor);\n     }\n   /* Add the \"this\" parameter.  */\n   this_parm = build_this_parm (fn_type, TYPE_UNQUALIFIED);"}, {"sha": "787eab81a64facd3467462f31cdf59050bb64a66", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "patch": "@@ -3941,8 +3941,7 @@ static inline bool\n is_instantiation_of_constexpr (tree fun)\n {\n   return (DECL_TEMPLOID_INSTANTIATION (fun)\n-\t  && DECL_DECLARED_CONSTEXPR_P (DECL_TEMPLATE_RESULT\n-\t\t\t\t\t(DECL_TI_TEMPLATE (fun))));\n+\t  && DECL_DECLARED_CONSTEXPR_P (DECL_TI_TEMPLATE (fun)));\n }\n \n /* Generate RTL for FN.  */"}, {"sha": "2b584a58853138f89190f01a4523c97bd8d74267", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c582aac943fe2574a03cb5f557a3ee1e5d6585f1/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c582aac943fe2574a03cb5f557a3ee1e5d6585f1", "patch": "@@ -18028,11 +18028,13 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \n \t  /* If the prototype had an 'auto' or 'decltype(auto)' return type,\n \t     emit the real type on the definition die.  */\n-\t  if (is_cxx() && debug_info_level > DINFO_LEVEL_TERSE\n-\t      && (get_AT_ref (old_die, DW_AT_type) == auto_die\n-\t\t  || get_AT_ref (old_die, DW_AT_type) == decltype_auto_die))\n-\t    add_type_attribute (subr_die, TREE_TYPE (TREE_TYPE (decl)),\n-\t\t\t\t0, 0, context_die);\n+\t  if (is_cxx() && debug_info_level > DINFO_LEVEL_TERSE)\n+\t    {\n+\t      dw_die_ref die = get_AT_ref (old_die, DW_AT_type);\n+\t      if (die == auto_die || die == decltype_auto_die)\n+\t\tadd_type_attribute (subr_die, TREE_TYPE (TREE_TYPE (decl)),\n+\t\t\t\t    0, 0, context_die);\n+\t    }\n \t}\n     }\n   else"}]}