{"sha": "f04230786429c9880df751676ae8e635a07b2033", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA0MjMwNzg2NDI5Yzk4ODBkZjc1MTY3NmFlOGU2MzVhMDdiMjAzMw==", "commit": {"author": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2010-04-27T02:24:51Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2010-04-27T02:24:51Z"}, "message": "Missing changelog from last commit!\n\nChangeLog:\n\n2010-04-27  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\tPR lto/42776\n\t* configure.ac (--enable-lto): Refactor handling so libelf tests\n\tare only performed inside then-clause of ACX_ELF_TARGET_IFELSE,\n\tand allow LTO to be explicitly enabled on non-ELF platforms that\n\tare known to support it inside else-clause.\n\t* configure: Regenerate.\n\ngcc/ChangeLog\n\n\n2010-04-27  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\tPR lto/42776\n\t* configure.ac (gcc_cv_as_section_has_align): Set if installed\n\tbinutils supports extended .section directive needed by LTO, or\n\twarn if older binutils found.\n\t(LTO_BINARY_READER): New AC_SUBST'd variable.\n\t(LTO_USE_LIBELF): Likewise.\n\t* gcc/config.gcc (lto_binary_reader): New target-specific configure\n\tvariable.\n\t* gcc/Makefile.in (LTO_BINARY_READER): Import AC_SUBST'd autoconf var.\n\t(LTO_USE_LIBELF): Likewise.\n\t* configure: Regenerate.\n\n\t* collect2.c (is_elf): Rename from this ...\n\t(is_elf_or_coff): ... to this, and recognize and allow i386 COFF\n\t object files in addition to ELF-formatted ones.\n\t(scan_prog_file): Caller updated.  Also allow for LTO info marker\n\tsymbol to be prefixed or not by an extra underscore.\n\n\t* config/i386/t-cygming (winnt.o): Also depend on LTO_STREAMER_H.\n\t* config/i386/winnt.c: Also #include lto-streamer.h\n\t(i386_pe_asm_named_section): Specify 1-byte section alignment for\n\tLTO named sections.\n\t(i386_pe_asm_output_aligned_decl_common): Add comment.\n\t(i386_pe_maybe_record_exported_symbol): Allow decl arg to be NULL.\n\nFrom-SVN: r158764", "tree": {"sha": "a03b6a6b1bc0f93528810ff16519908bcf1182b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a03b6a6b1bc0f93528810ff16519908bcf1182b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f04230786429c9880df751676ae8e635a07b2033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04230786429c9880df751676ae8e635a07b2033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04230786429c9880df751676ae8e635a07b2033", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04230786429c9880df751676ae8e635a07b2033/comments", "author": null, "committer": null, "parents": [{"sha": "9a02962bf891a6cc524fe01b3f9048c06433704c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a02962bf891a6cc524fe01b3f9048c06433704c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a02962bf891a6cc524fe01b3f9048c06433704c"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e5f963d4b99eaa0b6635bb87c50dac0d8607b63f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04230786429c9880df751676ae8e635a07b2033/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04230786429c9880df751676ae8e635a07b2033/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f04230786429c9880df751676ae8e635a07b2033", "patch": "@@ -1,3 +1,30 @@\n+2010-04-27  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\tPR lto/42776\n+\t* configure.ac (gcc_cv_as_section_has_align): Set if installed\n+\tbinutils supports extended .section directive needed by LTO, or\n+\twarn if older binutils found.\n+\t(LTO_BINARY_READER): New AC_SUBST'd variable.\n+\t(LTO_USE_LIBELF): Likewise.\n+\t* gcc/config.gcc (lto_binary_reader): New target-specific configure\n+\tvariable.\n+\t* gcc/Makefile.in (LTO_BINARY_READER): Import AC_SUBST'd autoconf var.\n+\t(LTO_USE_LIBELF): Likewise.\n+\t* configure: Regenerate.\n+\n+\t* collect2.c (is_elf): Rename from this ...\n+\t(is_elf_or_coff): ... to this, and recognize and allow i386 COFF\n+\t object files in addition to ELF-formatted ones.\n+\t(scan_prog_file): Caller updated.  Also allow for LTO info marker\n+\tsymbol to be prefixed or not by an extra underscore.\n+\n+\t* config/i386/t-cygming (winnt.o): Also depend on LTO_STREAMER_H.\n+\t* config/i386/winnt.c: Also #include lto-streamer.h\n+\t(i386_pe_asm_named_section): Specify 1-byte section alignment for\n+\tLTO named sections.\n+\t(i386_pe_asm_output_aligned_decl_common): Add comment.\n+\t(i386_pe_maybe_record_exported_symbol): Allow decl arg to be NULL.\n+\n 2010-04-27  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \tPR target/43889"}]}