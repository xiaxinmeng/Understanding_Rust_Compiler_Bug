{"sha": "5310bac6da16b88a13f5fe2070f2eede1e35b79f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMxMGJhYzZkYTE2Yjg4YTEzZjVmZTIwNzBmMmVlZGUxZTM1Yjc5Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-02T08:56:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-02T08:56:52Z"}, "message": "tree-scalar-evolution.c (get_exit_conditions_rec, [...]): Use VEC instead of VARRAY.\n\n\t* tree-scalar-evolution.c (get_exit_conditions_rec,\n\tselect_loops_exit_conditions,\n\tnumber_of_iterations_for_all_loops,\n\tanalyze_scalar_evolution_for_all_loop_phi_nodes,\n\tscev_analysis): Use VEC instead of VARRAY.\n\nFrom-SVN: r99093", "tree": {"sha": "38ae6277921a817e67d3840ee2ef0f5e6ece50b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ae6277921a817e67d3840ee2ef0f5e6ece50b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5310bac6da16b88a13f5fe2070f2eede1e35b79f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5310bac6da16b88a13f5fe2070f2eede1e35b79f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5310bac6da16b88a13f5fe2070f2eede1e35b79f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5310bac6da16b88a13f5fe2070f2eede1e35b79f/comments", "author": null, "committer": null, "parents": [{"sha": "b2f97e4a12858733fc4977859febecd144acb8dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f97e4a12858733fc4977859febecd144acb8dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f97e4a12858733fc4977859febecd144acb8dd"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "790c285bbd0ee67c306ae94f34c320aa118d7316", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5310bac6da16b88a13f5fe2070f2eede1e35b79f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5310bac6da16b88a13f5fe2070f2eede1e35b79f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5310bac6da16b88a13f5fe2070f2eede1e35b79f", "patch": "@@ -1,3 +1,11 @@\n+2005-05-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-scalar-evolution.c (get_exit_conditions_rec,\n+\tselect_loops_exit_conditions,\n+\tnumber_of_iterations_for_all_loops,\n+\tanalyze_scalar_evolution_for_all_loop_phi_nodes,\n+\tscev_analysis): Use VEC instead of VARRAY.\n+\n 2005-05-02  Michael Matz  <matz@suse.de>\n \n \tPR c++/19542"}, {"sha": "e0ef0ee33084fe1cec22458feff3236cea4e9d01", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5310bac6da16b88a13f5fe2070f2eede1e35b79f/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5310bac6da16b88a13f5fe2070f2eede1e35b79f/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=5310bac6da16b88a13f5fe2070f2eede1e35b79f", "patch": "@@ -1012,7 +1012,7 @@ get_loop_exit_condition (struct loop *loop)\n \n static void \n get_exit_conditions_rec (struct loop *loop, \n-\t\t\t varray_type *exit_conditions)\n+\t\t\t VEC(tree,heap) **exit_conditions)\n {\n   if (!loop)\n     return;\n@@ -1026,7 +1026,7 @@ get_exit_conditions_rec (struct loop *loop,\n       tree loop_condition = get_loop_exit_condition (loop);\n       \n       if (loop_condition)\n-\tVARRAY_PUSH_TREE (*exit_conditions, loop_condition);\n+\tVEC_safe_push (tree, heap, *exit_conditions, loop_condition);\n     }\n }\n \n@@ -1035,7 +1035,7 @@ get_exit_conditions_rec (struct loop *loop,\n \n static void\n select_loops_exit_conditions (struct loops *loops, \n-\t\t\t      varray_type *exit_conditions)\n+\t\t\t      VEC(tree,heap) **exit_conditions)\n {\n   struct loop *function_body = loops->parray[0];\n   \n@@ -2274,16 +2274,16 @@ number_of_iterations_in_loop (struct loop *loop)\n    from the EXIT_CONDITIONS array.  */\n \n static void \n-number_of_iterations_for_all_loops (varray_type exit_conditions)\n+number_of_iterations_for_all_loops (VEC(tree,heap) **exit_conditions)\n {\n   unsigned int i;\n   unsigned nb_chrec_dont_know_loops = 0;\n   unsigned nb_static_loops = 0;\n+  tree cond;\n   \n-  for (i = 0; i < VARRAY_ACTIVE_SIZE (exit_conditions); i++)\n+  for (i = 0; VEC_iterate (tree, *exit_conditions, i, cond); i++)\n     {\n-      tree res = number_of_iterations_in_loop \n-\t(loop_containing_stmt (VARRAY_TREE (exit_conditions, i)));\n+      tree res = number_of_iterations_in_loop (loop_containing_stmt (cond));\n       if (chrec_contains_undetermined (res))\n \tnb_chrec_dont_know_loops++;\n       else\n@@ -2426,20 +2426,21 @@ gather_chrec_stats (tree chrec, struct chrec_stats *stats)\n    index.  This allows the parallelization of the loop.  */\n \n static void \n-analyze_scalar_evolution_for_all_loop_phi_nodes (varray_type exit_conditions)\n+analyze_scalar_evolution_for_all_loop_phi_nodes (VEC(tree,heap) **exit_conditions)\n {\n   unsigned int i;\n   struct chrec_stats stats;\n+  tree cond;\n   \n   reset_chrecs_counters (&stats);\n   \n-  for (i = 0; i < VARRAY_ACTIVE_SIZE (exit_conditions); i++)\n+  for (i = 0; VEC_iterate (tree, *exit_conditions, i, cond); i++)\n     {\n       struct loop *loop;\n       basic_block bb;\n       tree phi, chrec;\n       \n-      loop = loop_containing_stmt (VARRAY_TREE (exit_conditions, i));\n+      loop = loop_containing_stmt (cond);\n       bb = loop->header;\n       \n       for (phi = phi_nodes (bb); phi; phi = PHI_CHAIN (phi))\n@@ -2604,16 +2605,16 @@ simple_iv (struct loop *loop, tree stmt, tree op, tree *base, tree *step,\n void\n scev_analysis (void)\n {\n-  varray_type exit_conditions;\n+  VEC(tree,heap) *exit_conditions;\n   \n-  VARRAY_GENERIC_PTR_INIT (exit_conditions, 37, \"exit_conditions\");\n+  exit_conditions = VEC_alloc (tree, heap, 37);\n   select_loops_exit_conditions (current_loops, &exit_conditions);\n \n   if (dump_file && (dump_flags & TDF_STATS))\n-    analyze_scalar_evolution_for_all_loop_phi_nodes (exit_conditions);\n+    analyze_scalar_evolution_for_all_loop_phi_nodes (&exit_conditions);\n   \n-  number_of_iterations_for_all_loops (exit_conditions);\n-  VARRAY_CLEAR (exit_conditions);\n+  number_of_iterations_for_all_loops (&exit_conditions);\n+  VEC_free (tree, heap, exit_conditions);\n }\n \n /* Finalize the scalar evolution analysis.  */"}]}