{"sha": "0987ffe7c18bf1bf5830364e405009ed8f4a61bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk4N2ZmZTdjMThiZjFiZjU4MzAzNjRlNDA1MDA5ZWQ4ZjRhNjFiYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-08-26T15:38:33Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-08-26T15:38:33Z"}, "message": "ipa.c (comdat_can_be_unshared_p_1): C++ constructors and destructors can be unshared.\n\n\n\t* ipa.c (comdat_can_be_unshared_p_1): C++ constructors and destructors\n\tcan be unshared.\n\nFrom-SVN: r202001", "tree": {"sha": "3ec32a1c6bd6cd7a7bdd38b621d91f13749517a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ec32a1c6bd6cd7a7bdd38b621d91f13749517a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0987ffe7c18bf1bf5830364e405009ed8f4a61bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0987ffe7c18bf1bf5830364e405009ed8f4a61bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0987ffe7c18bf1bf5830364e405009ed8f4a61bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0987ffe7c18bf1bf5830364e405009ed8f4a61bb/comments", "author": null, "committer": null, "parents": [{"sha": "befe864770708c7799ea2dee9c1db77309089932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befe864770708c7799ea2dee9c1db77309089932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/befe864770708c7799ea2dee9c1db77309089932"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "19ddd93e036e17f1259b8231535d2aa65d4bcd87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0987ffe7c18bf1bf5830364e405009ed8f4a61bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0987ffe7c18bf1bf5830364e405009ed8f4a61bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0987ffe7c18bf1bf5830364e405009ed8f4a61bb", "patch": "@@ -1,3 +1,8 @@\n+2013-08-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa.c (comdat_can_be_unshared_p_1): C++ constructors and destructors\n+\tcan be unshared.\n+\n 2013-08-26  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* reload.c (find_valid_class): Allow classes that do not include"}, {"sha": "778a88fcbdfb1ac3697999f0225b2f64053be89d", "filename": "gcc/ipa.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0987ffe7c18bf1bf5830364e405009ed8f4a61bb/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0987ffe7c18bf1bf5830364e405009ed8f4a61bb/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=0987ffe7c18bf1bf5830364e405009ed8f4a61bb", "patch": "@@ -574,9 +574,13 @@ static bool\n comdat_can_be_unshared_p_1 (symtab_node node)\n {\n   /* When address is taken, we don't know if equality comparison won't\n-     break eventually. Exception are virutal functions and vtables,\n-     where this is not possible by language standard.  */\n+     break eventually. Exception are virutal functions, C++\n+     constructors/destructors and vtables, where this is not possible by\n+     language standard.  */\n   if (!DECL_VIRTUAL_P (node->symbol.decl)\n+      && (TREE_CODE (node->symbol.decl) != FUNCTION_DECL\n+\t  || (!DECL_CXX_CONSTRUCTOR_P (node->symbol.decl)\n+\t      && !DECL_CXX_DESTRUCTOR_P (node->symbol.decl)))\n       && address_taken_from_non_vtable_p (node))\n     return false;\n "}]}