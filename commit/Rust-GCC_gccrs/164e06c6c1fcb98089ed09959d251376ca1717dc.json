{"sha": "164e06c6c1fcb98089ed09959d251376ca1717dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY0ZTA2YzZjMWZjYjk4MDg5ZWQwOTk1OWQyNTEzNzZjYTE3MTdkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T10:14:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T10:14:45Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb, sinfo.ads, make.adb, s-pooglo.adb, sem_ch12.adb,\n\tfreeze.adb, sem_ch6.adb, par-ch12.adb: Minor reformatting.\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* system-darwin-x86.ads, system-linux-s390x.ads, system-linux-alpha.ads,\n\tsystem-tru64.ads, system-irix-n32.ads, system-vxworks-arm.ads,\n\tsystem-linux-hppa.ads, system-linux-s390.ads,\n\tsystem-solaris-sparcv9.ads, system-mingw.ads, system-linux-ia64.ads,\n\tsystem-vms_64.ads, system-vxworks-sparcv9.ads, system-linux-ppc.ads,\n\tsystem-aix64.ads, system-lynxos-ppc.ads, system-linux-sh4.ads,\n\tsystem-solaris-x86.ads, system-linux-x86_64.ads, system-linux-x86.ads,\n\tsystem-vxworks-ppc.ads, system-hpux.ads, system-darwin-ppc.ads,\n\tsystem-solaris-sparc.ads, system-lynxos-x86.ads,\n\tsystem-vxworks-m68k.ads, system-hpux-ia64.ads, system-irix-o32.ads,\n\tsystem-solaris-x86_64.ads, system-mingw-x86_64.ads,\n\tsystem-vxworks-mips.ads, system-linux-sparc.ads, system-vms-ia64.ads,\n\tsystem-freebsd-x86.ads, system-aix.ads, system-darwin-x86_64.ads,\n\tsystem-vxworks-x86.ads: Remove GCC_ZCX_Support\n\t* s-taprop-posix.adb, s-taprop-irix.adb, s-taprop-vxworks.adb,\n\ts-taprop-tru64.adb, s-taprop-linux.adb, s-taprop-solaris.adb: Ditto.\n\t* opt.ads: Adjust comment.\n\t* targparm.ads, targparm.adb: Remove GCC_ZCX_Support_On_Target.\n\t* gnat1drv.adb: Do not check for GCC_ZCX_Support_On_Target.\n\t* system.ads: Move GCC_ZCX_Support to obsolete entries.\n\n2011-08-29  Emmanuel Briot  <briot@adacore.com>\n\n\t* makeutl.adb (Do_Complete): Resolve symbolic links when a relative\n\tfile name is specified on the gnatmake or gprbuild command line, and\n\tbefore we search for that file in the project.\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Within_Instance): New predicate in Collect_Interps,\n\tused to determine whether a possible interpretation for an overloadable\n\tentity is declared within the current instantiation and should be\n\tincluded in the candidate set.\n\n2011-08-29  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* gnat_rm.texi, gnat_ugn.texi: Clean ups.\n\nFrom-SVN: r178186", "tree": {"sha": "e69bf56422d5155e91f9a8602689b6058403c912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e69bf56422d5155e91f9a8602689b6058403c912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/164e06c6c1fcb98089ed09959d251376ca1717dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164e06c6c1fcb98089ed09959d251376ca1717dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164e06c6c1fcb98089ed09959d251376ca1717dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164e06c6c1fcb98089ed09959d251376ca1717dc/comments", "author": null, "committer": null, "parents": [{"sha": "97216ca891349cb06e86c929d6ec4f76d79e5a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97216ca891349cb06e86c929d6ec4f76d79e5a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97216ca891349cb06e86c929d6ec4f76d79e5a62"}], "stats": {"total": 297, "additions": 173, "deletions": 124}, "files": [{"sha": "0603a312e47ce9e4c6659e604e184d1f5a1a814d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -1,3 +1,48 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb, sinfo.ads, make.adb, s-pooglo.adb, sem_ch12.adb,\n+\tfreeze.adb, sem_ch6.adb, par-ch12.adb: Minor reformatting.\n+\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* system-darwin-x86.ads, system-linux-s390x.ads, system-linux-alpha.ads,\n+\tsystem-tru64.ads, system-irix-n32.ads, system-vxworks-arm.ads,\n+\tsystem-linux-hppa.ads, system-linux-s390.ads,\n+\tsystem-solaris-sparcv9.ads, system-mingw.ads, system-linux-ia64.ads,\n+\tsystem-vms_64.ads, system-vxworks-sparcv9.ads, system-linux-ppc.ads,\n+\tsystem-aix64.ads, system-lynxos-ppc.ads, system-linux-sh4.ads,\n+\tsystem-solaris-x86.ads, system-linux-x86_64.ads, system-linux-x86.ads,\n+\tsystem-vxworks-ppc.ads, system-hpux.ads, system-darwin-ppc.ads,\n+\tsystem-solaris-sparc.ads, system-lynxos-x86.ads,\n+\tsystem-vxworks-m68k.ads, system-hpux-ia64.ads, system-irix-o32.ads,\n+\tsystem-solaris-x86_64.ads, system-mingw-x86_64.ads,\n+\tsystem-vxworks-mips.ads, system-linux-sparc.ads, system-vms-ia64.ads,\n+\tsystem-freebsd-x86.ads, system-aix.ads, system-darwin-x86_64.ads,\n+\tsystem-vxworks-x86.ads: Remove GCC_ZCX_Support\n+\t* s-taprop-posix.adb, s-taprop-irix.adb, s-taprop-vxworks.adb,\n+\ts-taprop-tru64.adb, s-taprop-linux.adb, s-taprop-solaris.adb: Ditto.\n+\t* opt.ads: Adjust comment.\n+\t* targparm.ads, targparm.adb: Remove GCC_ZCX_Support_On_Target.\n+\t* gnat1drv.adb: Do not check for GCC_ZCX_Support_On_Target.\n+\t* system.ads: Move GCC_ZCX_Support to obsolete entries.\n+\n+2011-08-29  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* makeutl.adb (Do_Complete): Resolve symbolic links when a relative\n+\tfile name is specified on the gnatmake or gprbuild command line, and\n+\tbefore we search for that file in the project.\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Within_Instance): New predicate in Collect_Interps,\n+\tused to determine whether a possible interpretation for an overloadable\n+\tentity is declared within the current instantiation and should be\n+\tincluded in the candidate set.\n+\n+2011-08-29  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi: Clean ups.\n+\n 2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb (Resolve_Actuals): Use base type to determine whether an"}, {"sha": "0420e741c0dbb84fa298a329b88ab3bb7f29d750", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -1891,11 +1891,15 @@ package body Exp_Ch5 is\n       if Nkind (Lhs) = N_Indexed_Component\n         and then Is_Bit_Packed_Array (Etype (Prefix (Lhs)))\n       then\n+         --  Normal case, no change of representation\n+\n          if not Crep then\n             Expand_Bit_Packed_Element_Set (N);\n             return;\n-         else\n \n+         --  Change of representation case\n+\n+         else\n             --  Generate the following, to force component-by-component\n             --  assignments in an efficient way. Otherwise each component\n             --  will require a temporary and two bit-field manipulations.\n@@ -1909,16 +1913,18 @@ package body Exp_Ch5 is\n                Stats : List_Id;\n \n             begin\n-               Stats := New_List (\n-                 Make_Object_Declaration (Loc,\n-                   Defining_Identifier => Tnn,\n-                   Object_Definition => New_Occurrence_Of (Etype (Lhs), Loc)),\n-                Make_Assignment_Statement (Loc,\n-                  Name => New_Occurrence_Of (Tnn, Loc),\n-                  Expression => Relocate_Node (Rhs)),\n-                Make_Assignment_Statement (Loc,\n-                  Name => Relocate_Node (Lhs),\n-                  Expression => New_Occurrence_Of (Tnn, Loc)));\n+               Stats :=\n+                 New_List (\n+                   Make_Object_Declaration (Loc,\n+                     Defining_Identifier => Tnn,\n+                     Object_Definition   =>\n+                       New_Occurrence_Of (Etype (Lhs), Loc)),\n+                   Make_Assignment_Statement (Loc,\n+                     Name       => New_Occurrence_Of (Tnn, Loc),\n+                     Expression => Relocate_Node (Rhs)),\n+                   Make_Assignment_Statement (Loc,\n+                     Name       => Relocate_Node (Lhs),\n+                     Expression => New_Occurrence_Of (Tnn, Loc)));\n \n                Insert_Actions (N, Stats);\n                Rewrite (N, Make_Null_Statement (Loc));"}, {"sha": "0d3c13125380b709498415a20a1cd369972d2a71", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -1439,27 +1439,27 @@ package body Freeze is\n                end loop;\n             end;\n \n-         --  We add finalization masters to access types whose designated types\n-         --  require finalization. This is normally done when freezing the\n-         --  type, but this misses recursive type definitions where the later\n-         --  members of the recursion introduce controlled components (such as\n-         --  can happen when incomplete types are involved), as well cases\n-         --  where a component type is private and the controlled full type\n-         --  occurs after the access type is frozen. Cases that don't need a\n-         --  finalization master are generic formal types (the actual type will\n-         --  have it) and types with Java and CIL conventions, since those are\n-         --  used for API bindings. (Are there any other cases that should be\n-         --  excluded here???)\n+         --  We add finalization collections to access types whose designated\n+         --  types require finalization. This is normally done when freezing\n+         --  the type, but this misses recursive type definitions where the\n+         --  later members of the recursion introduce controlled components\n+         --  (such as can happen when incomplete types are involved), as well\n+         --  cases where a component type is private and the controlled full\n+         --  type occurs after the access type is frozen. Cases that don't\n+         --  need a finalization collection are generic formal types (the\n+         --  actual type will have it) and types with Java and CIL conventions,\n+         --  since those are used for API bindings. (Are there any other cases\n+         --  that should be excluded here???)\n \n          elsif Is_Access_Type (E)\n            and then Comes_From_Source (E)\n            and then not Is_Generic_Type (E)\n            and then Needs_Finalization (Designated_Type (E))\n-           and then No (Finalization_Master (E))\n+           and then No (Associated_Collection (E))\n            and then Convention (Designated_Type (E)) /= Convention_Java\n            and then Convention (Designated_Type (E)) /= Convention_CIL\n          then\n-            Build_Finalization_Master (E);\n+            Build_Finalization_Collection (E);\n          end if;\n \n          Next_Entity (E);\n@@ -2036,7 +2036,7 @@ package body Freeze is\n             Next_Entity (Comp);\n          end loop;\n \n-         --  Deal with pragma Bit_Order setting non-standard bit order\n+         --  Deal with Bit_Order aspect specifying a non-default bit order\n \n          if Reverse_Bit_Order (Rec) and then Base_Type (Rec) = Rec then\n             if not Placed_Component then\n@@ -2304,9 +2304,8 @@ package body Freeze is\n       elsif Inside_A_Generic and then External_Ref_In_Generic (Test_E) then\n          return No_List;\n \n-      --  AI05-0213: a formal incomplete type does not freeze the actual.\n-      --  In the instance, the same applies to the subtype that renames\n-      --  the actual.\n+      --  AI05-0213: A formal incomplete type does not freeze the actual. In\n+      --  the instance, the same applies to the subtype renaming the actual.\n \n       elsif Is_Private_Type (E)\n         and then Is_Generic_Actual_Type (E)"}, {"sha": "6f3e6f1f9561287f5491e20b035148d94fd7e0ed", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -324,11 +324,7 @@ procedure Gnat1drv is\n       --  Set and check exception mechanism\n \n       if Targparm.ZCX_By_Default_On_Target then\n-         if Targparm.GCC_ZCX_Support_On_Target then\n-            Exception_Mechanism := Back_End_Exceptions;\n-         else\n-            Osint.Fail (\"Zero Cost Exceptions not supported on this target\");\n-         end if;\n+         Exception_Mechanism := Back_End_Exceptions;\n       end if;\n \n       --  Set proper status for overflow checks. We turn on overflow checks if"}, {"sha": "b2531add514eb9ab9a06bfc1a76495b60b44d4f6", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -527,7 +527,7 @@ isolate and clearly document any sections of your program that make use\n of these features in a non-portable manner.\n \n @ifset PROEDITION\n-For ease of exposition, ``GNAT Pro'' will be referred to simply as\n+For ease of exposition, ``@value{EDITION}'' will be referred to simply as\n ``GNAT'' in the remainder of this document.\n @end ifset\n \n@@ -5879,7 +5879,7 @@ the containing record @var{R}.\n @code{Standard'Compiler_Version} (@code{Standard} is the only allowed\n prefix) yields a static string identifying the version of the compiler\n being used to compile the unit containing the attribute reference. A\n-typical result would be something like \"GNAT Pro 6.3.0w (20090221)\".\n+typical result would be something like \"@value{EDITION} @value{gnat_version} (20090221)\".\n \n @node Code_Address\n @unnumberedsec Code_Address"}, {"sha": "9fb068db6f118facb7166b739ab10f7023c803fd", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -7,7 +7,7 @@\n @c                                                                            o\n @c                             G N A T _ U G N                                o\n @c                                                                            o\n-@c                     Copyright (C) 1992-2011, AdaCore                       o\n+@c           Copyright (C) 1992-2011, Free Software Foundation, Inc.          o\n @c                                                                            o\n @c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n \n@@ -7758,11 +7758,11 @@ found in the GCC documentation.\n Use of these @option{-m} switches may in some cases result in improved\n code performance.\n \n-The GNAT Pro technology is tested and qualified without any\n+The @value{EDITION} technology is tested and qualified without any\n @option{-m} switches,\n so generally the most reliable approach is to avoid the use of these\n switches. However, we generally expect most of these switches to work\n-successfully with GNAT Pro, and many customers have reported successful\n+successfully with @value{EDITION}, and many customers have reported successful\n use of these options.\n \n Our general advice is to avoid the use of @option{-m} switches unless\n@@ -18944,7 +18944,7 @@ program, in which case the execution of that program is simply suspended\n until the connection between the debugger and gdbserver is established.\n \n For more information on how to use gdbserver, @ref{Top, Server, Using\n-the gdbserver Program, gdb, Debugging with GDB}.  GNAT Pro provides support\n+the gdbserver Program, gdb, Debugging with GDB}.  @value{EDITION} provides support\n for gdbserver on x86-linux, x86-windows and x86_64-linux.\n \n @node GNAT Abnormal Termination or Failure to Terminate\n@@ -21110,7 +21110,7 @@ of the DECset package.\n    &\\cr\n \\+\\it Tool\n    &\\it Product with HP Ada\n-   & \\it Product with GNAT Pro\\cr\n+   & \\it Product with @value{EDITION}\\cr\n \\smallskip\n \\+Code Management System\n    &HP CMS\n@@ -21167,7 +21167,7 @@ of the DECset package.\n @c the TeX version above for the printed version\n @flushleft\n @c @multitable @columnfractions .3 .4 .4\n-@multitable {Source Code Analyzer /}{Tool with HP Ada}{Tool with GNAT Pro}\n+@multitable {Source Code Analyzer /}{Tool with HP Ada}{Tool with @value{EDITION}}\n @item @i{Tool}\n @tab @i{Tool with HP Ada}\n @tab @i{Tool with @value{EDITION}}\n@@ -26435,7 +26435,7 @@ in 64-bit address space are acceptable.\n @noindent\n 64-bit @value{EDITION} for Open VMS takes advantage of the freedom given in the\n Ada standard with respect to the type of @code{System.Address}. Previous\n-versions of GNAT Pro have defined this type as private and implemented it as a\n+versions of @value{EDITION} have defined this type as private and implemented it as a\n modular type.\n \n In order to allow defining @code{System.Short_Address} as a proper subtype,"}, {"sha": "cc38ae8c4defb199988b7b1605859d48d9f7f5fd", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -6106,8 +6106,9 @@ package body Make is\n             Current_Work_Dir => Current_Work_Dir.all);\n \n          if Is_First_Main then\n-            --  Put the default source dirs in the source path only now,\n-            --  so that we take the correct ones in the case when --RTS= is\n+\n+            --  Put the default source dirs in the source path only now, so\n+            --  that we take the correct ones in the case where --RTS= is\n             --  specified in the Builder switches.\n \n             Osint.Add_Default_Search_Dirs;"}, {"sha": "c8cbd0522e38e4a0ba66225c0d979218cd750a75", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -1562,11 +1562,16 @@ package body Makeutl is\n                            Main_Id := Create_Name (Base);\n                         else\n                            declare\n+                              --  Always resolve links here, so that users\n+                              --  can be specify any name on the command line.\n+                              --  If the project itself uses links, the user\n+                              --  will be using -eL anyway, and thus files are\n+                              --  also stored with resolved names.\n                               Absolute : constant String :=\n                                            Normalize_Pathname\n                                              (Name           => Main,\n                                               Directory      => \"\",\n-                                              Resolve_Links  => False,\n+                                              Resolve_Links  => True,\n                                               Case_Sensitive => False);\n                            begin\n                               File.File := Create_Name (Absolute);"}, {"sha": "96c868a999221c79456400965a7c0efc2092ddd7", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -537,8 +537,8 @@ package Opt is\n                            Front_End_Setjmp_Longjmp_Exceptions;\n    --  GNAT\n    --  Set to the appropriate value depending on the default as given in\n-   --  system.ads (ZCX_By_Default, GCC_ZCX_Support). The C convention is there\n-   --  to make this variable accessible to gigi.\n+   --  system.ads (ZCX_By_Default). The C convention is there to make this\n+   --  variable accessible to gigi.\n \n    Exception_Tracebacks : Boolean := False;\n    --  GNATBIND"}, {"sha": "64f0361696971bb2cf0d74131d9601bd3a727552", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -533,7 +533,7 @@ package body Ch12 is\n \n       if Token = Tok_Semicolon then\n \n-         --  Ada2012 :  incomplete formal type\n+         --  Ada2012: Incomplete formal type\n \n          Scan; -- past semicolon\n \n@@ -546,7 +546,7 @@ package body Ch12 is\n \n          Set_Formal_Type_Definition\n            (Decl_Node,\n-             New_Node (N_Formal_Incomplete_Type_Definition, Token_Ptr));\n+            New_Node (N_Formal_Incomplete_Type_Definition, Token_Ptr));\n          return Decl_Node;\n \n       else"}, {"sha": "e4dcdb091c744c0b174ec4ebd99b10206522733a", "filename": "gcc/ada/s-pooglo.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-pooglo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-pooglo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooglo.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -68,6 +68,9 @@ package body System.Pool_Global is\n          raise Storage_Error;\n       end if;\n \n+      --  Case where alignment requested is greater than the alignment that is\n+      --  guaranteed to be provided by the system allocator.\n+\n       if Alignment > Standard'System_Allocator_Alignment then\n \n          --  Realign the returned address\n@@ -87,7 +90,9 @@ package body System.Pool_Global is\n          begin\n             Saved_Address := Allocated;\n          end;\n+\n          Address := Aligned_Address;\n+\n       else\n          Address := Allocated;\n       end if;\n@@ -108,6 +113,10 @@ package body System.Pool_Global is\n       pragma Warnings (Off, Storage_Size);\n \n    begin\n+      --  Case where the alignment of the block exceeds the guaranteed\n+      --  alignment required by the system storage allocator, meaning that\n+      --  this was specially wrapped at allocation time.\n+\n       if Alignment > Standard'System_Allocator_Alignment then\n \n          --  Retrieve the block address\n@@ -120,6 +129,7 @@ package body System.Pool_Global is\n          begin\n             Memory.Free (Saved_Address);\n          end;\n+\n       else\n          Memory.Free (Address);\n       end if;"}, {"sha": "9d8ac90b59c1f0a2c57e7476671f680d70e5b314", "filename": "gcc/ada/s-taprop-irix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -164,7 +164,7 @@ package body System.Task_Primitives.Operations is\n       --  cases (e.g. shutdown of the Server_Task in System.Interrupts) we\n       --  need to send the Abort signal to a task.\n \n-      if ZCX_By_Default and then GCC_ZCX_Support then\n+      if ZCX_By_Default then\n          return;\n       end if;\n "}, {"sha": "f46736fbf5fb0801afffb058fdff8823e8b1735a", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -178,7 +178,7 @@ package body System.Task_Primitives.Operations is\n       --  cases (e.g. shutdown of the Server_Task in System.Interrupts) we\n       --  need to send the Abort signal to a task.\n \n-      if ZCX_By_Default and then GCC_ZCX_Support then\n+      if ZCX_By_Default then\n          return;\n       end if;\n "}, {"sha": "2372d3d9b29062c3e603c170dd1c2e6488c8b795", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -203,7 +203,7 @@ package body System.Task_Primitives.Operations is\n       --  cases (e.g. shutdown of the Server_Task in System.Interrupts) we\n       --  need to send the Abort signal to a task.\n \n-      if ZCX_By_Default and then GCC_ZCX_Support then\n+      if ZCX_By_Default then\n          return;\n       end if;\n "}, {"sha": "042a93123262d30b701ccd981a7ce214789bb529", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2010, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -265,7 +265,7 @@ package body System.Task_Primitives.Operations is\n       --  cases (e.g. shutdown of the Server_Task in System.Interrupts) we\n       --  need to send the Abort signal to a task.\n \n-      if ZCX_By_Default and then GCC_ZCX_Support then\n+      if ZCX_By_Default then\n          return;\n       end if;\n "}, {"sha": "6c2c527fe11f885e3f8a218fb816d0bf58fe82bb", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -167,7 +167,7 @@ package body System.Task_Primitives.Operations is\n       --  cases (e.g. shutdown of the Server_Task in System.Interrupts) we\n       --  need to send the Abort signal to a task.\n \n-      if ZCX_By_Default and then GCC_ZCX_Support then\n+      if ZCX_By_Default then\n          return;\n       end if;\n "}, {"sha": "0214efb63cc56514bbb05643d988ccceba4842d1", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -188,7 +188,7 @@ package body System.Task_Primitives.Operations is\n       --  It is not safe to raise an exception when using ZCX and the GCC\n       --  exception handling mechanism.\n \n-      if ZCX_By_Default and then GCC_ZCX_Support then\n+      if ZCX_By_Default then\n          return;\n       end if;\n "}, {"sha": "446a1d6134bd5b192a540762fa72ff2d2d698054", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -343,9 +343,10 @@ package body Sem_Ch12 is\n    --  Creates a new private type, which does not require completion\n \n    procedure Analyze_Formal_Incomplete_Type (T   : Entity_Id; Def : Node_Id);\n-   --  Ada2012 : Creates a new incomplete type, whose actual does not freeze.\n+   --  Ada2012: Creates a new incomplete type whose actual does not freeze\n \n    procedure Analyze_Generic_Formal_Part (N : Node_Id);\n+   --  Analyze generic formal part\n \n    procedure Analyze_Generic_Access_Type (T : Entity_Id; Def : Node_Id);\n    --  Create a new access type with the given designated type"}, {"sha": "2c2d4c997fc2b7f79cfe1a2ffaaa90184b5e55a2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -2340,16 +2340,15 @@ package body Sem_Ch6 is\n          --  In general, the spec will be frozen when we start analyzing the\n          --  body. However, for internally generated operations, such as\n          --  wrapper functions for inherited operations with controlling\n-         --  results, the spec may not have been frozen by the time we\n-         --  expand the freeze actions that include the bodies. In particular,\n-         --  extra formals for accessibility or for return-in-place may need\n-         --  to be generated. Freeze nodes, if any, are inserted before the\n-         --  current body. These freeze actions are also needed in ASIS mode\n-         --  to enable the proper back-annotations.\n+         --  results, the spec may not have been frozen by the time we expand\n+         --  the freeze actions that include the bodies. In particular, extra\n+         --  formals for accessibility or for return-in-place may need to be\n+         --  generated. Freeze nodes, if any, are inserted before the current\n+         --  body. These freeze actions are also needed in ASIS mode to enable\n+         --  the proper back-annotations.\n \n          if not Is_Frozen (Spec_Id)\n-           and then\n-             (Expander_Active or else ASIS_Mode)\n+           and then (Expander_Active or ASIS_Mode)\n          then\n             --  Force the generation of its freezing node to ensure proper\n             --  management of access types in the backend.\n@@ -6082,13 +6081,14 @@ package body Sem_Ch6 is\n             end if;\n \n             --  In the case of functions whose result type needs finalization,\n-            --  add an extra formal which represents the finalization master.\n+            --  add an extra formal of type Ada.Finalization.Heap_Management.\n+            --  Finalization_Collection_Ptr.\n \n-            if Needs_BIP_Finalization_Master (E) then\n+            if Needs_BIP_Collection (E) then\n                Discard :=\n                  Add_Extra_Formal\n-                   (E, RTE (RE_Finalization_Master_Ptr),\n-                    E, BIP_Formal_Suffix (BIP_Finalization_Master));\n+                   (E, RTE (RE_Finalization_Collection_Ptr),\n+                    E, BIP_Formal_Suffix (BIP_Collection));\n             end if;\n \n             --  If the result type contains tasks, we have two extra formals:"}, {"sha": "f035f504651a3d07ef809863eeed8f282d459e09", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -569,6 +569,39 @@ package body Sem_Type is\n       Ent          : constant Entity_Id := Entity (N);\n       H            : Entity_Id;\n       First_Interp : Interp_Index;\n+      function Within_Instance (E : Entity_Id) return Boolean;\n+      --  Within an instance there can be spurious ambiguities between a local\n+      --  entity and one declared outside of the instance. This can only\n+      --  happen for subprograms, because otherwise the local entity hides the\n+      --  outer one. For overloadable entities, this predicate determines\n+      --  whether it is a candidate within the instance, or must be ignored.\n+\n+      function Within_Instance (E : Entity_Id) return Boolean is\n+         Inst : Entity_Id;\n+         Scop : Entity_Id;\n+      begin\n+         if not In_Instance then\n+            return False;\n+         end if;\n+         Inst := Current_Scope;\n+         while Present (Inst)\n+           and then not Is_Generic_Instance (Inst)\n+         loop\n+            Inst := Scope (Inst);\n+         end loop;\n+         Scop := Scope (E);\n+\n+         while Present (Scop)\n+           and then Scop /= Standard_Standard\n+         loop\n+            if Scop = Inst then\n+               return True;\n+            end if;\n+            Scop := Scope (Scop);\n+         end loop;\n+\n+         return False;\n+      end Within_Instance;\n \n    begin\n       New_Interps (N);\n@@ -626,9 +659,7 @@ package body Sem_Type is\n                      --  levels within the instance. The renaming of an actual\n                      --  within the instance must not be included.\n \n-                     if (Scope (H) = Scope (Ent)\n-                          or else Scope (H) = Scope (Scope (Ent)))\n-                        and then In_Instance\n+                     if Within_Instance (H)\n                         and then H /= Renamed_Entity (Ent)\n                         and then not Is_Inherited_Operation (H)\n                      then"}, {"sha": "744d7cc7d2ed8928747f41124cc0bcc73df0bfde", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -6275,12 +6275,11 @@ package Sinfo is\n       --  Synchronized_Present (Flag7)\n       --  Interface_List (List2) (set to No_List if none)\n \n-      ------------------------------------------------\n-      -- 12.5.1  Formal Incomplete  Type Definition --\n-      ------------------------------------------------\n+      -----------------------------------------------\n+      -- 12.5.1  Formal Incomplete Type Definition --\n+      -----------------------------------------------\n \n-      --  FORMAL_INCOMPLETE_TYPE_DEFINITION ::=\n-      --  [tagged]\n+      --  FORMAL_INCOMPLETE_TYPE_DEFINITION ::= [tagged]\n \n       --  N_Formal_Incomplete_Type_Definition\n       --  Sloc points to identifier of parent"}, {"sha": "3f91af51ecc3084f53b2db5ba3d96eca51b29b69", "filename": "gcc/ada/system-aix.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -149,6 +149,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "4ad3756042ba48731ca20d1aa1b02f081da81a05", "filename": "gcc/ada/system-aix64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-aix64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-aix64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -149,6 +149,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "79894e5c3605e7042fbbce922e0e84fab503ae96", "filename": "gcc/ada/system-darwin-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -165,6 +165,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "efd93f63c203ed4ffc6ae691a3c735443654c4f1", "filename": "gcc/ada/system-darwin-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-darwin-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-darwin-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-x86.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -165,6 +165,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "27f1241616dd8b56e6e6613014e8aa097354864b", "filename": "gcc/ada/system-darwin-x86_64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-darwin-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-darwin-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-x86_64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -165,6 +165,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "cb03d56d434f322f687bfd8733f2efe25e8a6e22", "filename": "gcc/ada/system-freebsd-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-freebsd-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-freebsd-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "c9cf952e8060889b3a470643f38ce056eabdd9fc", "filename": "gcc/ada/system-hpux-ia64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux-ia64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "f32ea6f494815eb66c16349356d357f8f7ee3d63", "filename": "gcc/ada/system-hpux.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,7 +139,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    --------------------------\n    -- Underlying Priorities --"}, {"sha": "3dd0810d257ef836992a5a17743c9c7cc656ca81", "filename": "gcc/ada/system-irix-n32.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-irix-n32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-irix-n32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-n32.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -151,7 +151,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    --  Note: Denorm is False because denormals are not supported on the\n    --  R10000, and we want the code to be valid for this processor."}, {"sha": "91d0afd9a07ea6cf7b506adc0bedb8123c931b8c", "filename": "gcc/ada/system-irix-o32.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-irix-o32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-irix-o32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-o32.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,7 +139,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    --  Note: Denorm is False because denormals are not supported on the\n    --  R10000, and we want the code to be valid for this processor."}, {"sha": "154c01bf6c570c1961ae33990b676cbac4cfcdb9", "filename": "gcc/ada/system-linux-alpha.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-alpha.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -137,6 +137,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "3b4bb27003678fd5d99e4b41104d94f6f57a6865", "filename": "gcc/ada/system-linux-hppa.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-hppa.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "11be8491d270cdd6f1c74fb49d6fe38cd0568cd1", "filename": "gcc/ada/system-linux-ia64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ia64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -147,6 +147,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "cbd814341ed4afef53df7a627a4617ecc65b5ee4", "filename": "gcc/ada/system-linux-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ppc.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -147,6 +147,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "19ad00025ad01ce3c3922a992e291411430dff3f", "filename": "gcc/ada/system-linux-s390.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-s390.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-s390.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-s390.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -137,6 +137,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "6ed5749aafd73881e6439fa1499f2ea4f5408e2d", "filename": "gcc/ada/system-linux-s390x.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-s390x.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-s390x.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-s390x.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -137,6 +137,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "344b7ef541ebc2a973ed68699bee335e9defaddf", "filename": "gcc/ada/system-linux-sh4.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-sh4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-sh4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sh4.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -147,6 +147,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "1f4f2207d45c4922855d23d18e68cbe20c17f09a", "filename": "gcc/ada/system-linux-sparc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sparc.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -137,6 +137,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "c0bd494d020bba79dee566d2a53e0ea283ce3e95", "filename": "gcc/ada/system-linux-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -147,6 +147,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "1fd23fc4a12a4739d9ff99d73cc3a07f3b6bf531", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -147,6 +147,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "8d718c83fe8ef84c9f4b6bfa0b3d71193ff187a3", "filename": "gcc/ada/system-lynxos-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-ppc.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -153,6 +153,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "18a4a3606b0e10fd0c0603e13c40a29799ce899f", "filename": "gcc/ada/system-lynxos-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-lynxos-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-lynxos-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-x86.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -153,6 +153,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "9464259f68fc2ee36c14c0846e9c648ccbdab0ad", "filename": "gcc/ada/system-mingw-x86_64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw-x86_64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,7 +139,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    ---------------------------\n    -- Underlying Priorities --"}, {"sha": "9753650e9185f2401e0efe54c48cb3ae3659c189", "filename": "gcc/ada/system-mingw.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,7 +139,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    ---------------------------\n    -- Underlying Priorities --"}, {"sha": "1afb18b1f47aaa71e0fd973ebddd5ab36045ea1f", "filename": "gcc/ada/system-solaris-sparc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparc.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "4929c75a1dbd89966ab5c8cb9f69ace2b5a8dd79", "filename": "gcc/ada/system-solaris-sparcv9.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparcv9.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "cd722e349fbc79f59ff04a1c3f8ddc9a9455684d", "filename": "gcc/ada/system-solaris-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "4f336780791fabbd8d105f9543daffe41fb7ab45", "filename": "gcc/ada/system-solaris-x86_64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-solaris-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86_64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,6 +139,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "43facc7465f7ff583207822d581089d5aae9ebd1", "filename": "gcc/ada/system-tru64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-tru64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -139,7 +139,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    --  Note: Denorm is False because denormals are only handled properly\n    --  if the -mieee switch is set, and we do not require this usage."}, {"sha": "010de3d13de2cfb29874d82c8aded2967c2c92ad", "filename": "gcc/ada/system-vms-ia64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-ia64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -157,7 +157,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    --------------------------\n    -- Underlying Priorities --"}, {"sha": "11f2853ad2d0712d3aa9925514af04f1353e3904", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -157,7 +157,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n    --------------------------\n    -- Underlying Priorities --"}, {"sha": "484d40d95c7cd85995d041088ca68e85d70543cd", "filename": "gcc/ada/system-vxworks-arm.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-arm.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -152,6 +152,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "429ca5d5a575c89d7c9003a775be3d588d217d2f", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -152,6 +152,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "3dbb835704de8d3b9d0d75a79bdd0c7fe745124b", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -152,6 +152,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "220d1f829144178929b4f129c1446b60e3e4dba2", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -152,6 +152,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := True;\n \n end System;"}, {"sha": "856161f1006a66cd4b4a69de5395165c5eaa5e39", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -154,6 +154,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "14388d87207f50982fd1729dfd9ef247d446086d", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -152,6 +152,5 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "d38a53337ae85312916865d18dc3e4cacc58262e", "filename": "gcc/ada/system.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -162,7 +162,6 @@ private\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n \n    --  Obsolete entries, to be removed eventually (bootstrap issues!)\n \n@@ -171,5 +170,6 @@ private\n    Long_Shifts_Inlined       : constant Boolean := True;\n    Functions_Return_By_DSP   : constant Boolean := False;\n    Support_64_Bit_Divides    : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := False;\n \n end System;"}, {"sha": "7868446e8625c1673450149aab5e468c6a4135b1", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -66,8 +66,7 @@ package body Targparm is\n       SSL,  --   Suppress_Standard_Library\n       UAM,  --   Use_Ada_Main_Program_Name\n       VMS,  --   OpenVMS\n-      ZCD,  --   ZCX_By_Default\n-      ZCG); --   GCC_ZCX_Support\n+      ZCD); --   ZCX_By_Default\n \n    Targparm_Flags : array (Targparm_Tags) of Boolean := (others => False);\n    --  Flag is set True if corresponding parameter is scanned\n@@ -103,7 +102,6 @@ package body Targparm is\n    UAM_Str : aliased constant Source_Buffer := \"Use_Ada_Main_Program_Name\";\n    VMS_Str : aliased constant Source_Buffer := \"OpenVMS\";\n    ZCD_Str : aliased constant Source_Buffer := \"ZCX_By_Default\";\n-   ZCG_Str : aliased constant Source_Buffer := \"GCC_ZCX_Support\";\n \n    --  The following defines a set of pointers to the above strings,\n    --  indexed by the tag values.\n@@ -138,8 +136,7 @@ package body Targparm is\n       SSL_Str'Access,\n       UAM_Str'Access,\n       VMS_Str'Access,\n-      ZCD_Str'Access,\n-      ZCG_Str'Access);\n+      ZCD_Str'Access);\n \n    -----------------------\n    -- Local Subprograms --\n@@ -588,7 +585,6 @@ package body Targparm is\n                      when UAM => Use_Ada_Main_Program_Name_On_Target := Result;\n                      when VMS => OpenVMS_On_Target                   := Result;\n                      when ZCD => ZCX_By_Default_On_Target            := Result;\n-                     when ZCG => GCC_ZCX_Support_On_Target           := Result;\n \n                      goto Line_Loop_Continue;\n                   end case;"}, {"sha": "971769b9957ee204d377a0048703384e8e636c50", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164e06c6c1fcb98089ed09959d251376ca1717dc/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=164e06c6c1fcb98089ed09959d251376ca1717dc", "patch": "@@ -308,9 +308,6 @@ package Targparm is\n    --  front-end setjmp/longjmp approach, and this is the default. If\n    --  this variable is True, then GCC ZCX is used.\n \n-   GCC_ZCX_Support_On_Target  : Boolean := False;\n-   --  Indicates that the target supports GCC Exceptions\n-\n    ------------------------------------\n    -- Run-Time Library Configuration --\n    ------------------------------------"}]}