{"sha": "c5670cb40aaf421f25d244c122c54dca127e4ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU2NzBjYjQwYWFmNDIxZjI1ZDI0NGMxMjJjNTRkY2ExMjdlNGNjYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-31T13:00:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T13:00:42Z"}, "message": "inline.adb, [...]: Minor reformatting.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, gnat1drv.adb, exp_ch6.adb, s-fileio.adb: Minor\n\treformatting.\n\nFrom-SVN: r213359", "tree": {"sha": "27c1831524dd5f6da1bc9939ef7b7014359fa53a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27c1831524dd5f6da1bc9939ef7b7014359fa53a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5670cb40aaf421f25d244c122c54dca127e4ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5670cb40aaf421f25d244c122c54dca127e4ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5670cb40aaf421f25d244c122c54dca127e4ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5670cb40aaf421f25d244c122c54dca127e4ccb/comments", "author": null, "committer": null, "parents": [{"sha": "8f1bcdb1fa4c2d75fec1a6b64ad324669f1f6203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1bcdb1fa4c2d75fec1a6b64ad324669f1f6203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1bcdb1fa4c2d75fec1a6b64ad324669f1f6203"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "0eed4a410e6d256cb862cb6ff48a795fca089ddd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c5670cb40aaf421f25d244c122c54dca127e4ccb", "patch": "@@ -1,3 +1,8 @@\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, gnat1drv.adb, exp_ch6.adb, s-fileio.adb: Minor\n+\treformatting.\n+\n 2014-07-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils2.c ((build_binary_op): Don't set TREE_THIS_NOTRAP"}, {"sha": "a1198888fa215b54d099bdd968e86f1a04ef3c45", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c5670cb40aaf421f25d244c122c54dca127e4ccb", "patch": "@@ -3832,9 +3832,7 @@ package body Exp_Ch6 is\n \n          --  Back end inlining: let the back end handle it\n \n-         if Back_End_Inlining\n-           and then Is_Inlined (Subp)\n-         then\n+         if Back_End_Inlining and then Is_Inlined (Subp) then\n             Add_Inlined_Body (Subp);\n             Register_Backend_Call (Call_Node);\n "}, {"sha": "46c046c3eb5870fc850aa4e6d56f015a4f9924aa", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=c5670cb40aaf421f25d244c122c54dca127e4ccb", "patch": "@@ -594,16 +594,30 @@ procedure Gnat1drv is\n          end if;\n       end if;\n \n-      --  No backend inlining for AAMP, VM. Turn off inlining under GNATprove\n-      --  mode which would confuse formal verification output. Turn off backend\n-      --  inlining if the frontend inlining is enabled.\n+      --  Set back end inlining indication\n \n       Back_End_Inlining :=\n+\n+        --  No back end inlining available for VM targets\n+\n         VM_Target = No_VM\n-          and then not AAMP_On_Target\n-          and then not GNATprove_Mode\n-          and then not Front_End_Inlining\n-          and then Debug_Flag_Dot_Z;\n+\n+        --  No back end inlining available on AAMP\n+\n+        and then not AAMP_On_Target\n+\n+        --  No back end inlining in GNATprove mode, since it just confuses\n+        --  the formal verification process.\n+\n+        and then not GNATprove_Mode\n+\n+        --  No back end inlining if front end inlining explicitly enabled?\n+\n+        and then not Front_End_Inlining\n+\n+        --  For now, we only enable back end inlining if debug flag .z is set\n+\n+        and then Debug_Flag_Dot_Z;\n \n       --  Output warning if -gnateE specified and cannot be supported\n "}, {"sha": "758a07028d81631b4ff81206d1d219ce6b974aaa", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=c5670cb40aaf421f25d244c122c54dca127e4ccb", "patch": "@@ -380,9 +380,7 @@ package body Inline is\n                --  If the backend takes care of inlining the call then we must\n                --  ensure that it has available the body of the subprogram.\n \n-               elsif Level = Inline_Call\n-                 and then Back_End_Inlining\n-               then\n+               elsif Level = Inline_Call and then Back_End_Inlining then\n                   Inlined_Bodies.Increment_Last;\n                   Inlined_Bodies.Table (Inlined_Bodies.Last) := Pack;\n                end if;"}, {"sha": "3208d233b178a90bd0516f4641598c318a7497d3", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5670cb40aaf421f25d244c122c54dca127e4ccb/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=c5670cb40aaf421f25d244c122c54dca127e4ccb", "patch": "@@ -980,14 +980,17 @@ package body System.File_IO is\n       Encoding : CRTL.Filename_Encoding;\n       --  Filename encoding specified into the form parameter\n \n-      ------------------\n-      --  Record_AFCB --\n-      ------------------\n+      -----------------\n+      -- Record_AFCB --\n+      -----------------\n \n       procedure Record_AFCB is\n       begin\n          File_Ptr := AFCB_Allocate (Dummy_FCB);\n \n+         --  Note that we cannot use an aggregate here as File_Ptr is a\n+         --  class-wide access to a limited type (Root_Stream_Type).\n+\n          File_Ptr.Is_Regular_File   :=\n            (is_regular_file (fileno (Stream)) /= 0);\n          File_Ptr.Is_System_File    := False;\n@@ -1007,6 +1010,8 @@ package body System.File_IO is\n          Append_Set (File_Ptr);\n       end Record_AFCB;\n \n+   --  Start of processing for Open\n+\n    begin\n       if File_Ptr /= null then\n          raise Status_Error with \"file already open\";"}]}