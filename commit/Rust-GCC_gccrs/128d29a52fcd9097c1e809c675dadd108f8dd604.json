{"sha": "128d29a52fcd9097c1e809c675dadd108f8dd604", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4ZDI5YTUyZmNkOTA5N2MxZTgwOWM2NzVkYWRkMTA4ZjhkZDYwNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-26T20:32:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-26T20:32:32Z"}, "message": "PR c++/85545 - ICE with noexcept PMF conversion.\n\n\t* cvt.c (cp_fold_convert): Handle PMF CONSTRUCTORs directly.\n\nFrom-SVN: r259689", "tree": {"sha": "afc670f671f43840fee313a0d13f1afbe9eed3a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afc670f671f43840fee313a0d13f1afbe9eed3a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/128d29a52fcd9097c1e809c675dadd108f8dd604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128d29a52fcd9097c1e809c675dadd108f8dd604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128d29a52fcd9097c1e809c675dadd108f8dd604", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128d29a52fcd9097c1e809c675dadd108f8dd604/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e94497fbc0cddc5fdb5447967ee5a0e9634d00b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94497fbc0cddc5fdb5447967ee5a0e9634d00b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e94497fbc0cddc5fdb5447967ee5a0e9634d00b0"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "491853e816675f54f040886ce6584e4ba4d0c6d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128d29a52fcd9097c1e809c675dadd108f8dd604/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128d29a52fcd9097c1e809c675dadd108f8dd604/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=128d29a52fcd9097c1e809c675dadd108f8dd604", "patch": "@@ -1,3 +1,8 @@\n+2018-04-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85545 - ICE with noexcept PMF conversion.\n+\t* cvt.c (cp_fold_convert): Handle PMF CONSTRUCTORs directly.\n+\n 2018-04-25  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/85437"}, {"sha": "a3735a1cffe00b78698c17f87c1aff1e5830af01", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128d29a52fcd9097c1e809c675dadd108f8dd604/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128d29a52fcd9097c1e809c675dadd108f8dd604/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=128d29a52fcd9097c1e809c675dadd108f8dd604", "patch": "@@ -601,7 +601,9 @@ cp_fold_convert (tree type, tree expr)\n   tree conv;\n   if (TREE_TYPE (expr) == type)\n     conv = expr;\n-  else if (TREE_CODE (expr) == PTRMEM_CST)\n+  else if (TREE_CODE (expr) == PTRMEM_CST\n+\t   || (TREE_CODE (expr) == CONSTRUCTOR\n+\t       && TYPE_PTRMEMFUNC_P (type)))\n     {\n       /* Avoid wrapping a PTRMEM_CST in NOP_EXPR.  */\n       conv = copy_node (expr);"}, {"sha": "a6033f71a4f241cfdcf8272f367d2457c08fa4ff", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type20.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128d29a52fcd9097c1e809c675dadd108f8dd604/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128d29a52fcd9097c1e809c675dadd108f8dd604/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type20.C?ref=128d29a52fcd9097c1e809c675dadd108f8dd604", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/85545\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  void foo() noexcept;\n+};\n+\n+template<typename T> void bar(T);\n+\n+void baz()\n+{\n+  bar(static_cast<void(A::*)()>(&A::foo));\n+}"}]}