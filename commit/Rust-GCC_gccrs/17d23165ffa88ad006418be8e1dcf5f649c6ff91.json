{"sha": "17d23165ffa88ad006418be8e1dcf5f649c6ff91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkMjMxNjVmZmE4OGFkMDA2NDE4YmU4ZTFkY2Y1ZjY0OWM2ZmY5MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-05-10T12:18:24Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-05-10T12:18:24Z"}, "message": "tree-cfg.c (valid_fixed_convert_types_p): New function.\n\ngcc/\n\t* tree-cfg.c (valid_fixed_convert_types_p): New function.\n\t(verify_gimple_expr): Handle FIXED_CONVERT_EXPR.\n\nFrom-SVN: r135143", "tree": {"sha": "797da7ce46cd913923e6a6663ce2a41b74a0f19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/797da7ce46cd913923e6a6663ce2a41b74a0f19d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17d23165ffa88ad006418be8e1dcf5f649c6ff91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d23165ffa88ad006418be8e1dcf5f649c6ff91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17d23165ffa88ad006418be8e1dcf5f649c6ff91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d23165ffa88ad006418be8e1dcf5f649c6ff91/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f418a86bd6efeb40469867acf02bdd64a3d77d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f418a86bd6efeb40469867acf02bdd64a3d77d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f418a86bd6efeb40469867acf02bdd64a3d77d4"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "a8695c0e39f60f8961f0687e1208105e8385e4e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d23165ffa88ad006418be8e1dcf5f649c6ff91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d23165ffa88ad006418be8e1dcf5f649c6ff91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17d23165ffa88ad006418be8e1dcf5f649c6ff91", "patch": "@@ -1,3 +1,8 @@\n+2008-05-10  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* tree-cfg.c (valid_fixed_convert_types_p): New function.\n+\t(verify_gimple_expr): Handle FIXED_CONVERT_EXPR.\n+\n 2008-05-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* value-prof.c (interesting_stringop_to_profile): Do not"}, {"sha": "ed5282691dae084c3a8aeb65e4ddc7bf73a6ec58", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d23165ffa88ad006418be8e1dcf5f649c6ff91/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d23165ffa88ad006418be8e1dcf5f649c6ff91/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=17d23165ffa88ad006418be8e1dcf5f649c6ff91", "patch": "@@ -3598,6 +3598,18 @@ one_pointer_to_useless_type_conversion_p (tree dest, tree src_obj)\n   return false;\n }\n \n+/* Return true if TYPE1 is a fixed-point type and if conversions to and\n+   from TYPE2 can be handled by FIXED_CONVERT_EXPR.  */\n+\n+static bool\n+valid_fixed_convert_types_p (tree type1, tree type2)\n+{\n+  return (FIXED_POINT_TYPE_P (type1)\n+\t  && (INTEGRAL_TYPE_P (type2)\n+\t      || SCALAR_FLOAT_TYPE_P (type2)\n+\t      || FIXED_POINT_TYPE_P (type2)));\n+}\n+\n /* Verify the GIMPLE expression EXPR.  Returns true if there is an\n    error, otherwise false.  */\n \n@@ -3654,6 +3666,27 @@ verify_gimple_expr (tree expr)\n \treturn false;\n       }\n \n+    case FIXED_CONVERT_EXPR:\n+      {\n+\ttree op = TREE_OPERAND (expr, 0);\n+\tif (!is_gimple_val (op))\n+\t  {\n+\t    error (\"invalid operand in conversion\");\n+\t    return true;\n+\t  }\n+\n+\tif (!valid_fixed_convert_types_p (type, TREE_TYPE (op))\n+\t    && !valid_fixed_convert_types_p (TREE_TYPE (op), type))\n+\t  {\n+\t    error (\"invalid types in fixed-point conversion\");\n+\t    debug_generic_expr (type);\n+\t    debug_generic_expr (TREE_TYPE (op));\n+\t    return true;\n+\t  }\n+\n+\treturn false;\n+      }\n+\n     case FLOAT_EXPR:\n       {\n \ttree op = TREE_OPERAND (expr, 0);"}]}