{"sha": "caadda8e359e968af9f650d65ed9950fb177f184", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FhZGRhOGUzNTllOTY4YWY5ZjY1MGQ2NWVkOTk1MGZiMTc3ZjE4NA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2015-11-24T16:59:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2015-11-24T16:59:43Z"}, "message": "DWARF: materialize subprogram renamings in Ada as imported declarations\n\n... so that debugger users can reference them instead of the renamed\nsubprograms.  This is in accordance with the DWARF specification: the\nsection 3.2.3 (Imported (or Renamed) Declaration Entities) allows\nDW_TAG_imported_declaration DIEs to be used \"as a general means to\nrename or provide an alias for an entity regardless of the context in\nwhich the importing declaration or the imported entity occur.\" (wording\nfrom the DWARFv3 and DWARFv4 specifications, allowed in DWARFv2).\n\ngcc/ada/ChangeLog:\n\n\t* gcc-interface/utils.c (gnat_write_global_declarations): Output\n\tdebugging information for top-level imported declarations.\n\ngcc/ChangeLog:\n\n\t* dwarf2out.c (gen_decl_die): Generate DW_TAG_imported_* instead\n\tof DW_TAG_namespace for IMPORTED_DECL declarations.  Call\n\tdwarf2out_imported_module_or_decl_1 for all DWARF versions as\n\tthis function already takes care of checking what it can emit.\n\nBootstrapped, regtested and checked with GDB's testsuite on\nx86_64-linux.\n\nFrom-SVN: r230821", "tree": {"sha": "522018b552faad2113b7bdd5be2a93c93d473835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/522018b552faad2113b7bdd5be2a93c93d473835"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caadda8e359e968af9f650d65ed9950fb177f184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caadda8e359e968af9f650d65ed9950fb177f184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caadda8e359e968af9f650d65ed9950fb177f184", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caadda8e359e968af9f650d65ed9950fb177f184/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16a21ab32693a8a42f1d20e36e0d10e9c99d7f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a21ab32693a8a42f1d20e36e0d10e9c99d7f86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a21ab32693a8a42f1d20e36e0d10e9c99d7f86"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "d61154fdb504ba5ead76fad522d0a16837ba4d56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caadda8e359e968af9f650d65ed9950fb177f184", "patch": "@@ -1,3 +1,10 @@\n+2015-11-24  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* dwarf2out.c (gen_decl_die): Generate DW_TAG_imported_* instead of\n+\tDW_TAG_namespace for IMPORTED_DECL declarations.  Call\n+\tdwarf2out_imported_module_or_decl_1 for all DWARF versions as this\n+\tfunction already takes care of checking what it can emit.\n+\n 2015-11-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* doc/invoke.texi (-fpic): Add the AArch64 limit."}, {"sha": "e5c24418f606e82585a43b27437f76bb446da00d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=caadda8e359e968af9f650d65ed9950fb177f184", "patch": "@@ -1,3 +1,8 @@\n+2015-11-24  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* gcc-interface/utils.c (gnat_write_global_declarations): Output\n+\tdebugging information for top-level imported declarations.\n+\n 2015-11-24  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch3.adb, sem_type.adb, sem_ch7.adb, sem_ch9.adb, checks.adb,"}, {"sha": "0016a3fa288fafd480f5ac4e18eab7c0244b734d", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=caadda8e359e968af9f650d65ed9950fb177f184", "patch": "@@ -5281,6 +5281,13 @@ gnat_write_global_declarations (void)\n   FOR_EACH_VEC_SAFE_ELT (global_decls, i, iter)\n     if (TREE_CODE (iter) == VAR_DECL)\n       rest_of_decl_compilation (iter, true, 0);\n+\n+  /* Output the imported modules/declarations.  In GNAT, these are only\n+     materializing subprogram.  */\n+  FOR_EACH_VEC_SAFE_ELT (global_decls, i, iter)\n+   if (TREE_CODE (iter) == IMPORTED_DECL && !DECL_IGNORED_P (iter))\n+     debug_hooks->imported_module_or_decl (iter, DECL_NAME (iter),\n+\t\t\t\t\t   DECL_CONTEXT (iter), 0);\n }\n \n /* ************************************************************************"}, {"sha": "d46a6715cf7ee9272b0ad02d2090d090036a1b2a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caadda8e359e968af9f650d65ed9950fb177f184/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=caadda8e359e968af9f650d65ed9950fb177f184", "patch": "@@ -21585,11 +21585,15 @@ gen_decl_die (tree decl, tree origin, dw_die_ref context_die)\n \t\t\t\t       context_die);\n \n     case NAMESPACE_DECL:\n-    case IMPORTED_DECL:\n       if (dwarf_version >= 3 || !dwarf_strict)\n \tgen_namespace_die (decl, context_die);\n       break;\n \n+    case IMPORTED_DECL:\n+      dwarf2out_imported_module_or_decl_1 (decl, DECL_NAME (decl),\n+\t\t\t\t\t   DECL_CONTEXT (decl), context_die);\n+      break;\n+\n     case NAMELIST_DECL:\n       gen_namelist_decl (DECL_NAME (decl), context_die,\n \t\t\t NAMELIST_DECL_ASSOCIATED_DECL (decl));"}]}