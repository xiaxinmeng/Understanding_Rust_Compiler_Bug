{"sha": "241fac51c3e6a4745d28b36121702325212c3af6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQxZmFjNTFjM2U2YTQ3NDVkMjhiMzYxMjE3MDIzMjUyMTJjM2FmNg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2015-10-23T12:51:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:51:30Z"}, "message": "sem_ch6.adb (Check_Missing_Return): Do not report a missing return statement on a function body constructed to...\n\n2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Missing_Return): Do not report a missing\n\treturn statement on a function body constructed to complete a\n\tpackage body for a premature instantiation.\n\n2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Build_Procedure_Body_Form): Replace body of\n\toriginal function with that of generated procedure, to simplify\n\tprocessing and avoid scoping problems with local declarations.\n\t(Rewrite_Function_Call_For_C): Handle properly the case of a\n\tparameterless function.\n\nFrom-SVN: r229249", "tree": {"sha": "01791b6f975000aa2e526411d4e91cd221b8e1d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01791b6f975000aa2e526411d4e91cd221b8e1d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/241fac51c3e6a4745d28b36121702325212c3af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241fac51c3e6a4745d28b36121702325212c3af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241fac51c3e6a4745d28b36121702325212c3af6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241fac51c3e6a4745d28b36121702325212c3af6/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43184ab7cd9ee60b3aa12eeed66f42076537548f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43184ab7cd9ee60b3aa12eeed66f42076537548f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43184ab7cd9ee60b3aa12eeed66f42076537548f"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "8bc9fb5cdca2b5e448827a9efa4734a880269ff9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241fac51c3e6a4745d28b36121702325212c3af6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241fac51c3e6a4745d28b36121702325212c3af6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=241fac51c3e6a4745d28b36121702325212c3af6", "patch": "@@ -1,3 +1,17 @@\n+2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Missing_Return): Do not report a missing\n+\treturn statement on a function body constructed to complete a\n+\tpackage body for a premature instantiation.\n+\n+2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Build_Procedure_Body_Form): Replace body of\n+\toriginal function with that of generated procedure, to simplify\n+\tprocessing and avoid scoping problems with local declarations.\n+\t(Rewrite_Function_Call_For_C): Handle properly the case of a\n+\tparameterless function.\n+\n 2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* a-exextr.adb, sem_ch6.adb, sem_ch13.adb: Minor reformatting."}, {"sha": "eb25c9b332b457da6fab5c896f954c3f54eee361", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241fac51c3e6a4745d28b36121702325212c3af6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241fac51c3e6a4745d28b36121702325212c3af6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=241fac51c3e6a4745d28b36121702325212c3af6", "patch": "@@ -4962,7 +4962,8 @@ package body Exp_Ch6 is\n \n       procedure Build_Procedure_Body_Form (Func_Id : Entity_Id);\n       --  Create a procedure body which emulates the behavior of function\n-      --  Func_Id.\n+      --  Func_Id. This body replaces the original function body, which is\n+      --  not needed for the C program.\n \n       ----------------\n       -- Add_Return --\n@@ -5123,31 +5124,35 @@ package body Exp_Ch6 is\n       --  Start of processing for Build_Procedure_Body_Form\n \n       begin\n-         --  This routine performs the following expansion:\n+         --  This routine replaces the original function body:\n \n          --    function F (...) return Array_Typ is\n          --    begin\n          --       ...\n          --       return Something;\n          --    end F;\n \n+         --    with the following:\n+\n          --    procedure P (..., Result : out Array_Typ) is\n          --    begin\n          --       ...\n          --       Result := Something;\n          --    end P;\n \n-         Stmts := New_Copy_List (Statements (HSS));\n+         Stmts := Statements (HSS);\n          Replace_Returns (Last_Entity (Proc_Id), Stmts);\n \n-         Insert_After_And_Analyze (N,\n+         Replace (N,\n            Make_Subprogram_Body (Loc,\n              Specification              =>\n                Copy_Subprogram_Spec (Specification (Proc_Decl)),\n-             Declarations               => New_Copy_List (Declarations (N)),\n+             Declarations               => Declarations (N),\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => Stmts)));\n+\n+         Analyze (N);\n       end Build_Procedure_Body_Form;\n \n       --  Local varaibles\n@@ -5491,7 +5496,7 @@ package body Exp_Ch6 is\n \n       procedure Build_Procedure_Form;\n       --  Create a procedure declaration which emulates the behavior of\n-      --  function Subp.\n+      --  function Subp, for SPARK_To_C.\n \n       --------------------------\n       -- Build_Procedure_Form --\n@@ -9593,6 +9598,12 @@ package body Exp_Ch6 is\n    begin\n       Actuals := Parameter_Associations (N);\n \n+      --  Original function amy have been parameterless.\n+\n+      if No (Actuals) then\n+         Actuals := New_List;\n+      end if;\n+\n       --  If the function call is the expression of an assignment statement,\n       --  transform the assignment into a procedure call. Generate:\n "}, {"sha": "30be33330c80ff2407f2dc6d1e23a6c6fd01ef9d", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/241fac51c3e6a4745d28b36121702325212c3af6/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/241fac51c3e6a4745d28b36121702325212c3af6/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=241fac51c3e6a4745d28b36121702325212c3af6", "patch": "@@ -2732,6 +2732,18 @@ package body Sem_Ch6 is\n                   Set_Has_Missing_Return (Id);\n                end if;\n \n+            --  Within a premature instantiation of a package with no body, we\n+            --  build completions of the functions therein, with a Raise\n+            --  statement. No point in complaining about a missing return in\n+            --  this case.\n+\n+            elsif Ekind (Id) = E_Function\n+              and then In_Instance\n+              and then Present (Statements (HSS))\n+              and then Nkind (First (Statements (HSS))) = N_Raise_Program_Error\n+            then\n+               null;\n+\n             elsif Is_Generic_Subprogram (Id)\n               or else not Is_Machine_Code_Subprogram (Id)\n             then"}]}