{"sha": "5a978b9f8899d6fc42364c0db8ed13b674a5ffb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE5NzhiOWY4ODk5ZDZmYzQyMzY0YzBkYjhlZDEzYjY3NGE1ZmZiMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-10-29T19:27:22Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-10-29T19:27:22Z"}, "message": "rs6000: Save the PIC reg when needed\n\nThe PIC reg (r30) needs to be saved whenever the prologue sets it up,\nnot just if it is used elsewhere in the function.  Without this patch\nthe prologue for such a function will modify r30 without saving it\nfirst, leading to disaster back in its callers.  This happened in the\ntestsuite for -m32 libgfortran and libstdc++, bootstrapped with -mlra,\nmany hundred times.\n\n\n2015-10-29  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.c (rs6000_reg_live_or_pic_offset_p): Move this\n\tfunction earlier in the file.\n\t(first_reg_to_save): Use rs6000_reg_live_or_pic_offset_p instead of\n\tdf_regs_ever_live_p.\n\nFrom-SVN: r229552", "tree": {"sha": "4509a7d217deb143bc5f01ad664e9db7f7408540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4509a7d217deb143bc5f01ad664e9db7f7408540"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "823bb05499a9f5bc0fc450ca21b17f16b65e6f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823bb05499a9f5bc0fc450ca21b17f16b65e6f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/823bb05499a9f5bc0fc450ca21b17f16b65e6f00"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "50fc56f022d1da5edf3c52083cccde7e9f9ac276", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a978b9f8899d6fc42364c0db8ed13b674a5ffb0", "patch": "@@ -1,3 +1,10 @@\n+2015-10-29  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_reg_live_or_pic_offset_p): Move this\n+\tfunction earlier in the file.\n+\t(first_reg_to_save): Use rs6000_reg_live_or_pic_offset_p instead of\n+\tdf_regs_ever_live_p.\n+\n 2015-10-29  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* lra-constraints.c (process_address_1): Handle (mem:BLK (scratch))"}, {"sha": "bbdd1425eebb6da6675a746618e1eefd26b77a2a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a978b9f8899d6fc42364c0db8ed13b674a5ffb0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5a978b9f8899d6fc42364c0db8ed13b674a5ffb0", "patch": "@@ -22016,6 +22016,27 @@ save_reg_p (int r)\n   return !call_used_regs[r] && df_regs_ever_live_p (r);\n }\n \n+/* Determine whether the gp REG is really used.  */\n+\n+static bool\n+rs6000_reg_live_or_pic_offset_p (int reg)\n+{\n+  /* If the function calls eh_return, claim used all the registers that would\n+     be checked for liveness otherwise.  This is required for the PIC offset\n+     register with -mminimal-toc on AIX, as it is advertised as \"fixed\" for\n+     register allocation purposes in this case.  */\n+\n+  return (((crtl->calls_eh_return || df_regs_ever_live_p (reg))\n+           && (!call_used_regs[reg]\n+               || (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t\t   && !TARGET_SINGLE_PIC_BASE\n+                   && TARGET_TOC && TARGET_MINIMAL_TOC)))\n+          || (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t      && !TARGET_SINGLE_PIC_BASE\n+              && ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n+                  || (DEFAULT_ABI == ABI_DARWIN && flag_pic))));\n+}\n+\n /* Return the first fixed-point register that is required to be\n    saved. 32 if none.  */\n \n@@ -22033,7 +22054,7 @@ first_reg_to_save (void)\n       && ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n \t  || (DEFAULT_ABI == ABI_DARWIN && flag_pic)\n \t  || (TARGET_TOC && TARGET_MINIMAL_TOC))\n-      && df_regs_ever_live_p (RS6000_PIC_OFFSET_TABLE_REGNUM))\n+      && rs6000_reg_live_or_pic_offset_p (RS6000_PIC_OFFSET_TABLE_REGNUM))\n     first_reg = RS6000_PIC_OFFSET_TABLE_REGNUM;\n \n #if TARGET_MACHO\n@@ -24232,27 +24253,6 @@ rs6000_emit_move_from_cr (rtx reg)\n   emit_insn (gen_movesi_from_cr (reg));\n }\n \n-/* Determine whether the gp REG is really used.  */\n-\n-static bool\n-rs6000_reg_live_or_pic_offset_p (int reg)\n-{\n-  /* If the function calls eh_return, claim used all the registers that would\n-     be checked for liveness otherwise.  This is required for the PIC offset\n-     register with -mminimal-toc on AIX, as it is advertised as \"fixed\" for\n-     register allocation purposes in this case.  */\n-\n-  return (((crtl->calls_eh_return || df_regs_ever_live_p (reg))\n-           && (!call_used_regs[reg]\n-               || (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n-\t\t   && !TARGET_SINGLE_PIC_BASE\n-                   && TARGET_TOC && TARGET_MINIMAL_TOC)))\n-          || (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n-\t      && !TARGET_SINGLE_PIC_BASE\n-              && ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n-                  || (DEFAULT_ABI == ABI_DARWIN && flag_pic))));\n-}\n-\n /* Return whether the split-stack arg pointer (r12) is used.  */\n \n static bool"}]}