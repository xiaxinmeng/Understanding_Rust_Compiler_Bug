{"sha": "9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3NGY5Y2Y0N2VkOWQ2NWU2NWEwNjM3ODA0MWU5ZGQ1Njk4ZTQ5ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-08T12:23:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-08T16:02:27Z"}, "message": "c++: improve reference binding diagnostic [PR91849]\n\nHere we were complaining about binding the lvalue reference to the rvalue\nresult of converting from float to int, but didn't mention that conversion.\nTalk about the type of the initializer instead.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/91849\n\t* call.c (convert_like_internal): Improve reference diagnostic.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/91849\n\t* g++.dg/conversion/pr66211.C: Adjust diagnostic.\n\t* g++.dg/conversion/ref7.C: New test.", "tree": {"sha": "97dfd41e1cebae85a2d941549a1ccf5c8359a8d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97dfd41e1cebae85a2d941549a1ccf5c8359a8d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94279aacd061623a160b8dc1b9ea267ee435b0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94279aacd061623a160b8dc1b9ea267ee435b0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94279aacd061623a160b8dc1b9ea267ee435b0f8"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "c9a8c0d305f81eb4b963be5dc4b56d52f7953d4d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "patch": "@@ -7898,8 +7898,19 @@ convert_like_internal (conversion *convs, tree expr, tree fn, int argnum,\n                         \"lvalue of type %qI\", totype, extype);\n \t    else if (!TYPE_REF_IS_RVALUE (ref_type) && !lvalue_p (expr)\n \t\t     && !CP_TYPE_CONST_NON_VOLATILE_P (TREE_TYPE (ref_type)))\n-\t      error_at (loc, \"cannot bind non-const lvalue reference of \"\n-\t\t\t\"type %qH to an rvalue of type %qI\", totype, extype);\n+\t      {\n+\t\tconversion *next = next_conversion (convs);\n+\t\tif (next->kind == ck_std)\n+\t\t  {\n+\t\t    next = next_conversion (next);\n+\t\t    error_at (loc, \"cannot bind non-const lvalue reference of \"\n+\t\t\t      \"type %qH to a value of type %qI\",\n+\t\t\t      totype, next->type);\n+\t\t  }\n+\t\telse\n+\t\t  error_at (loc, \"cannot bind non-const lvalue reference of \"\n+\t\t\t    \"type %qH to an rvalue of type %qI\", totype, extype);\n+\t      }\n \t    else if (!reference_compatible_p (TREE_TYPE (totype), extype))\n \t      {\n \t\t/* If we're converting from T[] to T[N], don't talk"}, {"sha": "5c1ae13c76d02e17beaffea617f1699c5b80560f", "filename": "gcc/testsuite/g++.dg/conversion/pr66211.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66211.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66211.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66211.C?ref=9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "patch": "@@ -7,5 +7,5 @@ int main()\n {\n   int x = 0;\n   double y = 1;\n-  f(1 > 0 ? x : y); // { dg-error \"cannot bind .* to an rvalue\" }\n+  f(1 > 0 ? x : y); // { dg-error \"cannot bind non-const lvalue reference of type .int&. to a value of type .double\" }\n }"}, {"sha": "99347cb1c27a758740bdbf5eda470fcaf77bea6a", "filename": "gcc/testsuite/g++.dg/conversion/ref7.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fref7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f74f9cf47ed9d65e65a06378041e9dd5698e49d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fref7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fref7.C?ref=9f74f9cf47ed9d65e65a06378041e9dd5698e49d", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/91849\n+\n+struct A { operator float(); };\n+\n+void\n+g ()\n+{\n+  float f = 1.f;\n+  int &r = f;\t\t\t// { dg-error \"float\" }\n+  int &r2 = A();\t\t// { dg-error \"float\" }\n+}\n+\n+void\n+g2 ()\n+{\n+  int &r = 1.f;\t\t\t// { dg-error \"float\" }\n+}"}]}