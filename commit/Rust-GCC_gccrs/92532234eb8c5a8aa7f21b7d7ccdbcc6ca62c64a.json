{"sha": "92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1MzIyMzRlYjhjNWE4YWE3ZjIxYjdkN2NjZGJjYzZjYTYyYzY0YQ==", "commit": {"author": {"name": "Aurelien Jarno", "email": "aurelien@aurel32.net", "date": "2009-08-22T11:39:45Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2009-08-22T11:39:45Z"}, "message": "Makefile.in: Add Ada support for GNU/kFreeBSD x86_64.\n\n2009-08-22  Aurelien Jarno  <aurelien@aurel32.net>\n\n\t* gcc-interface/Makefile.in: Add Ada support for \n\tGNU/kFreeBSD x86_64.\n\t* system-freebsd-x86_64.ads: New file based on \n\tsystem-freebsd-x86.ads.\n\nFrom-SVN: r151011", "tree": {"sha": "5508c0aea260b25fc30e6bb638d1d6992122cc2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5508c0aea260b25fc30e6bb638d1d6992122cc2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/comments", "author": {"login": "aurel32", "id": 7688913, "node_id": "MDQ6VXNlcjc2ODg5MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7688913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurel32", "html_url": "https://github.com/aurel32", "followers_url": "https://api.github.com/users/aurel32/followers", "following_url": "https://api.github.com/users/aurel32/following{/other_user}", "gists_url": "https://api.github.com/users/aurel32/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurel32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurel32/subscriptions", "organizations_url": "https://api.github.com/users/aurel32/orgs", "repos_url": "https://api.github.com/users/aurel32/repos", "events_url": "https://api.github.com/users/aurel32/events{/privacy}", "received_events_url": "https://api.github.com/users/aurel32/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2972bf8bfded6c265ad6e7e55472070d8538456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2972bf8bfded6c265ad6e7e55472070d8538456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2972bf8bfded6c265ad6e7e55472070d8538456"}], "stats": {"total": 181, "additions": 181, "deletions": 0}, "files": [{"sha": "3cf2429cb063ed22cadbacf107bba24fc4411b83", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "patch": "@@ -1,3 +1,10 @@\n+2009-08-22  Aurelien Jarno  <aurelien@aurel32.net>\n+\n+\t* gcc-interface/Makefile.in: Add Ada support for \n+\tGNU/kFreeBSD x86_64.\n+\t* system-freebsd-x86_64.ads: New file based on \n+\tsystem-freebsd-x86.ads.\n+\n 2009-08-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (convert): In the padded case, do the final"}, {"sha": "bc2ad926eff2fd1c72bc943c768305176a91994d", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "patch": "@@ -1095,6 +1095,35 @@ ifeq ($(strip $(filter-out %86 kfreebsd%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<a-intnam-freebsd.ads \\\n+  a-numaux.adb<a-numaux-x86.adb \\\n+  a-numaux.ads<a-numaux-x86.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.ads<s-osinte-kfreebsd-gnu.ads \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-tasinf.ads<s-tasinf-linux.ads \\\n+  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  system.ads<system-freebsd-x86_64.ads\n+\n+  TOOLS_TARGET_PAIRS =  \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n+    indepsw.adb<indepsw-gnu.adb\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  PREFIX_OBJS = $(PREFIX_REAL_OBJS)\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\"}, {"sha": "b699ef1a9681861a73fe98efa7cf6f585754b02b", "filename": "gcc/ada/system-freebsd-x86_64.ads", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/gcc%2Fada%2Fsystem-freebsd-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a/gcc%2Fada%2Fsystem-freebsd-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86_64.ads?ref=92532234eb8c5a8aa7f21b7d7ccdbcc6ca62c64a", "patch": "@@ -0,0 +1,145 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                        (FreeBSD/x86_64 Version)                          --\n+--                                                                          --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+end System;"}]}