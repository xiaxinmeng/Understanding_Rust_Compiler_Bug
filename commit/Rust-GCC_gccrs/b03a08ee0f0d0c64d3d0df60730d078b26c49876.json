{"sha": "b03a08ee0f0d0c64d3d0df60730d078b26c49876", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzYTA4ZWUwZjBkMGM2NGQzZDBkZjYwNzMwZDA3OGIyNmM0OTg3Ng==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-03-19T12:13:39Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-03-19T12:13:39Z"}, "message": "init.c (build_member_call): Handle template-id expressions correctly.\n\n\t* init.c (build_member_call): Handle template-id expressions\n\tcorrectly.\n\t* typeck.c (build_x_function_call): Likewise.\n\nFrom-SVN: r25859", "tree": {"sha": "ae9bc1a9a4915b51030124de413656a1225981e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae9bc1a9a4915b51030124de413656a1225981e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b03a08ee0f0d0c64d3d0df60730d078b26c49876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03a08ee0f0d0c64d3d0df60730d078b26c49876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03a08ee0f0d0c64d3d0df60730d078b26c49876", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03a08ee0f0d0c64d3d0df60730d078b26c49876/comments", "author": null, "committer": null, "parents": [{"sha": "91813b2835a919d45b2244e0f31f8dc3165ad379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91813b2835a919d45b2244e0f31f8dc3165ad379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91813b2835a919d45b2244e0f31f8dc3165ad379"}], "stats": {"total": 68, "additions": 59, "deletions": 9}, "files": [{"sha": "384e3e9141e0d11b03a6b11ea2fd6ef85a953145", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b03a08ee0f0d0c64d3d0df60730d078b26c49876", "patch": "@@ -1,3 +1,9 @@\n+1999-03-19  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* init.c (build_member_call): Handle template-id expressions\n+\tcorrectly.\n+\t* typeck.c (build_x_function_call): Likewise.\n+\n 1999-03-19  Chip Salzenberg  <chip@perlsupport.com>\n \n \t* friend.c (make_friend_class): Avoid core dump when"}, {"sha": "e4696616835b7dcfa3bef4b8184c6aa090915e43", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=b03a08ee0f0d0c64d3d0df60730d078b26c49876", "patch": "@@ -1381,7 +1381,11 @@ build_member_call (type, name, parmlist)\n   if (TREE_CODE (name) != TEMPLATE_ID_EXPR)\n     method_name = name;\n   else\n-    method_name = TREE_OPERAND (name, 0);\n+    {\n+      method_name = TREE_OPERAND (name, 0);\n+      if (is_overloaded_fn (method_name))\n+\tmethod_name = DECL_NAME (OVL_CURRENT (method_name));\n+    }\n \n   if (TREE_CODE (method_name) == BIT_NOT_EXPR)\n     {"}, {"sha": "cfd931927ea9fa0e0081d71f08366633ec763176", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=b03a08ee0f0d0c64d3d0df60730d078b26c49876", "patch": "@@ -2585,6 +2585,15 @@ build_x_function_call (function, params, decl)\n \t\t\t\tTYPE_BINFO (type), LOOKUP_NORMAL);\n     }\n     \n+  if ((TREE_CODE (function) == FUNCTION_DECL\n+       && DECL_STATIC_FUNCTION_P (function))\n+      || (TREE_CODE (function) == TEMPLATE_DECL\n+\t  && DECL_STATIC_FUNCTION_P (DECL_RESULT (function))))\n+      return build_member_call(DECL_CONTEXT (function), \n+\t\t\t       template_id \n+\t\t\t       ? template_id : DECL_NAME (function), \n+\t\t\t       params);\n+\n   is_method = ((TREE_CODE (function) == TREE_LIST\n \t\t&& current_class_type != NULL_TREE\n \t\t&& (IDENTIFIER_CLASS_VALUE (TREE_PURPOSE (function))\n@@ -2593,13 +2602,6 @@ build_x_function_call (function, params, decl)\n \t       || TREE_CODE (type) == METHOD_TYPE\n \t       || TYPE_PTRMEMFUNC_P (type));\n \n-  if ((TREE_CODE (function) == FUNCTION_DECL\n-       && DECL_STATIC_FUNCTION_P (function))\n-      || (TREE_CODE (function) == TEMPLATE_DECL\n-\t  && DECL_STATIC_FUNCTION_P (DECL_RESULT (function))))\n-    return build_member_call\n-      (DECL_CONTEXT (function), DECL_NAME (function), params);\n-\n   /* A friend template.  Make it look like a toplevel declaration.  */\n   if (! is_method && TREE_CODE (function) == TEMPLATE_DECL)\n     function = scratch_ovl_cons (function, NULL_TREE);"}, {"sha": "34758967c2e9fd41bf32109b21e01dfe71cc3fb8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash31.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash31.C?ref=b03a08ee0f0d0c64d3d0df60730d078b26c49876", "patch": "@@ -0,0 +1,19 @@\n+// Build don't link:\n+// Origin: Corey Kosak\n+\n+struct cow_t {\n+  template<bool Q>\n+  static void tfunc(cow_t *cowp) {}\n+\n+  void moo() {\n+    cow_t *cowp;\n+    cow_t::tfunc<true>(cowp);\n+  }\n+};\n+\n+\n+int main()\n+{\n+  cow_t *cowp;\n+  cow_t::tfunc<true>(cowp);\n+}"}, {"sha": "d4bb37aa410933b9c0be36294ebda8fd7d3c84a8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp82.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp82.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp82.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp82.C?ref=b03a08ee0f0d0c64d3d0df60730d078b26c49876", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n-// excess errors test - XFAIL *-*-*\n+// excess errors test\n \n struct foo {\n        template<typename T> T bar() { return staticbar<T>( this ); }"}, {"sha": "69ab94820b09379d9dc6374b59c4aa007e4b0dec", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp83.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp83.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03a08ee0f0d0c64d3d0df60730d078b26c49876/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp83.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp83.C?ref=b03a08ee0f0d0c64d3d0df60730d078b26c49876", "patch": "@@ -0,0 +1,19 @@\n+// Build don't link:\n+// Origin: Corey Kosak <kosak@cs.cmu.edu>\n+\n+struct cow_t {\n+  template<bool Q>\n+  static void tfunc(cow_t *cowp) {}\n+\n+  void moo() {\n+    cow_t *cowp;\n+    tfunc<true>(cowp);\n+  }\n+};\n+\n+\n+int main()\n+{\n+  cow_t *cowp;\n+  cow_t::tfunc<true>(cowp);\n+}"}]}