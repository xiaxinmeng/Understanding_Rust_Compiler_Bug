{"sha": "cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1NWQxOGU1ZGE1NDlmNzVjYzJhZTBiYmZiNjlhYTIzMjc1M2MxOQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-31T10:54:36Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-31T10:54:36Z"}, "message": "re PR fortran/54833 (Don't wrap __builtin_free(a) in if (a != NULL))\n\n\tPR fortran/54833\n\t* trans.c (gfc_call_free): Don't check if pointer is NULL.\n\t* trans.h (gfc_call_free): Adjust comment.\n\nFrom-SVN: r227336", "tree": {"sha": "d04fceb6086a4283f6c960bd6b0a4aa424dd31d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d04fceb6086a4283f6c960bd6b0a4aa424dd31d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e78549932d92690dd277938fac358c039a5d210d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78549932d92690dd277938fac358c039a5d210d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78549932d92690dd277938fac358c039a5d210d"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "88c1a117caafa83460198e44f26f4dd3067a7ffd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "patch": "@@ -1,3 +1,9 @@\n+2015-08-31  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/54833\n+\t* trans.c (gfc_call_free): Don't check if pointer is NULL.\n+\t* trans.h (gfc_call_free): Adjust comment.\n+\n 2015-08-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* trans.c (gfc_call_malloc, gfc_allocate_using_malloc,"}, {"sha": "f30809a9fda1b33242c79873139f35209bf9a9ad", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "patch": "@@ -850,23 +850,14 @@ gfc_allocate_allocatable (stmtblock_t * block, tree mem, tree size, tree token,\n }\n \n \n-/* Free a given variable, if it's not NULL.  */\n+/* Free a given variable.  */\n \n tree\n gfc_call_free (tree var)\n {\n-  tree cond, call;\n-\n-  /* Only evaluate the variable once.  */\n-  var = save_expr (fold_convert (pvoid_type_node, var));\n-\n-  cond = fold_build2_loc (input_location, NE_EXPR, boolean_type_node, var,\n-\t\t\t  build_int_cst (pvoid_type_node, 0));\n-  call = build_call_expr_loc (input_location,\n+  return build_call_expr_loc (input_location,\n \t\t\t      builtin_decl_explicit (BUILT_IN_FREE),\n-\t\t\t      1, var);\n-  return fold_build3_loc (input_location, COND_EXPR, void_type_node,\n-\t\t\t  cond, call, build_empty_stmt (input_location));\n+\t\t\t      1, fold_convert (pvoid_type_node, var));\n }\n \n "}, {"sha": "25014035d95eeab193e7534d7369a79c22bce4cf", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd55d18e5da549f75cc2ae0bbfb69aa232753c19/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=cd55d18e5da549f75cc2ae0bbfb69aa232753c19", "patch": "@@ -642,7 +642,7 @@ void gfc_trans_runtime_check (bool, bool, tree, stmtblock_t *, locus *,\n void gfc_trans_same_strlen_check (const char*, locus*, tree, tree,\n \t\t\t\t  stmtblock_t*);\n \n-/* Generate a call to free() after checking that its arg is non-NULL.  */\n+/* Generate a call to free().  */\n tree gfc_call_free (tree);\n \n /* Allocate memory after performing a few checks.  */"}]}