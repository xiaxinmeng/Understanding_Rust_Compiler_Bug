{"sha": "5cfa876635638a93a8d6d209ce700beb373b9c1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNmYTg3NjYzNTYzOGE5M2E4ZDZkMjA5Y2U3MDBiZWIzNzNiOWMxZA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-09-21T01:00:11Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-09-21T01:00:11Z"}, "message": "Makefile.in: Fix flags.h dependencies to be $(FLAGS_H).\n\n2004-09-20  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* Makefile.in: Fix flags.h dependencies to be $(FLAGS_H).\n\nFrom-SVN: r87785", "tree": {"sha": "11a0d94f246af4f66bcb0c58dc1dff2317f740f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11a0d94f246af4f66bcb0c58dc1dff2317f740f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cfa876635638a93a8d6d209ce700beb373b9c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cfa876635638a93a8d6d209ce700beb373b9c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cfa876635638a93a8d6d209ce700beb373b9c1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cfa876635638a93a8d6d209ce700beb373b9c1d/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6c0b27afa5bac4706b74e598c827377130b4c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c0b27afa5bac4706b74e598c827377130b4c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c0b27afa5bac4706b74e598c827377130b4c38"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "afa9eb1acdde826082f448e5362c9fba934e1c02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cfa876635638a93a8d6d209ce700beb373b9c1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cfa876635638a93a8d6d209ce700beb373b9c1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cfa876635638a93a8d6d209ce700beb373b9c1d", "patch": "@@ -1,3 +1,7 @@\n+2004-09-20  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* Makefile.in: Fix flags.h dependencies to be $(FLAGS_H).\n+\n 2004-09-21  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/17126"}, {"sha": "2ebe7e6bb4b7de1515e40aba105fe98f2f256da2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cfa876635638a93a8d6d209ce700beb373b9c1d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cfa876635638a93a8d6d209ce700beb373b9c1d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5cfa876635638a93a8d6d209ce700beb373b9c1d", "patch": "@@ -1559,10 +1559,10 @@ ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n \t$(HASHTAB_H) toplev.h $(PARAMS_H) hosthooks.h\n \n ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-\tflags.h toplev.h $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) $(TREE_FLOW_H)\n+\t$(FLAGS_H) toplev.h $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) $(TREE_FLOW_H)\n \n ggc-zone.o: ggc-zone.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-\tflags.h toplev.h $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H)\n+\t$(FLAGS_H) toplev.h $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H)\n \n stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(GGC_H) gt-stringpool.h\n@@ -1676,7 +1676,7 @@ tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(TM_P_H) function.h tree-dump.h tree-inline.h tree-iterator.h \\\n    tree-gimple.h $(CGRAPH_H) $(EXPR_H) langhooks.h $(GGC_H) gt-tree-nested.h\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) flags.h $(TIMEVAR_H) varray.h $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n+   $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) varray.h $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    cfgloop.h $(RTL_H) c-common.h tree-chrec.h tree-data-ref.h \\\n    tree-scalar-evolution.h tree-pass.h \n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n@@ -1698,16 +1698,16 @@ tree-ssa-loop.o : tree-ssa-loop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    tree-pass.h $(FLAGS_H) tree-inline.h $(SCEV_H)\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) cfgloop.h $(PARAMS_H) tree-inline.h \\\n-   output.h diagnostic.h $(TM_H) coretypes.h $(TREE_DUMP_H) flags.h \\\n+   output.h diagnostic.h $(TM_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n    tree-pass.h $(SCEV_H)\t\t \n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) tree-inline.h \\\n-   output.h diagnostic.h $(TM_H) coretypes.h $(TREE_DUMP_H) flags.h \\\n+   output.h diagnostic.h $(TM_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n    tree-pass.h $(SCEV_H)\n tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) tree-inline.h \\\n    output.h diagnostic.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h flags.h\n+   tree-pass.h $(FLAGS_H)\n tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) varray.h $(EXPR_H) \\\n    output.h diagnostic.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n@@ -1720,7 +1720,7 @@ tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h $(PARAMS_H)\\\n    output.h diagnostic.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h flags.h $(HASHTAB_H)\n+   tree-pass.h $(FLAGS_H) $(HASHTAB_H)\n tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) tree-inline.h $(FLAGS_H) \\\n    function.h $(TIMEVAR_H) convert.h $(TM_H) coretypes.h \\\n@@ -1752,7 +1752,7 @@ tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) errors.h $(GGC_H) $(TREE_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) diagnostic.h $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) cfgloop.h $(SCEV_H) tree-pass.h flags.h\n+   $(TIMEVAR_H) cfgloop.h $(SCEV_H) tree-pass.h $(FLAGS_H)\n tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    errors.h $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) diagnostic.h \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) cfgloop.h \\\n@@ -2019,7 +2019,7 @@ loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H)\n loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h $(EXPR_H) coretypes.h $(TM_H) \\\n-   function.h flags.h df.h\n+   function.h $(FLAGS_H) df.h\n cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) output.h coretypes.h $(TM_H)\n loop-init.o : loop-init.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n@@ -2046,7 +2046,7 @@ local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_\n    output.h function.h $(INSN_ATTR_H) toplev.h  except.h $(TM_P_H)\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n    $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H)\n-global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n+global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n    reload.h function.h $(RECOG_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h\\\n    insn-config.h output.h toplev.h $(TM_P_H)\n varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) varray.h $(GGC_H) errors.h \\"}]}