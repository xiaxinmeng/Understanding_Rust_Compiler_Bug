{"sha": "31f02c775233015db6fb95d31a9cff7a193428d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFmMDJjNzc1MjMzMDE1ZGI2ZmI5NWQzMWE5Y2ZmN2ExOTM0MjhkOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-06-26T15:39:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-06-26T15:39:25Z"}, "message": "re PR fortran/29800 (-fbounds-check: For derived types, write not also compound name)\n\n2013-06-26  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/29800\n        * trans-array.c (gfc_conv_array_ref): Improve out-of-bounds\n        diagnostic message.\n        * trans-array.c (gfc_conv_array_ref): Update prototype.\n        * trans-expr.c (gfc_conv_variable): Update call.\n\n2013-06-26  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/29800\n        * gfortran.dg/bounds_check_17.f90: New.\n\nFrom-SVN: r200425", "tree": {"sha": "924d448f2d4f82f5bc8b73c8b0d78ce5aa666bf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924d448f2d4f82f5bc8b73c8b0d78ce5aa666bf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31f02c775233015db6fb95d31a9cff7a193428d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f02c775233015db6fb95d31a9cff7a193428d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31f02c775233015db6fb95d31a9cff7a193428d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f02c775233015db6fb95d31a9cff7a193428d8/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd8c65e7d3f82eb0ec12de4402e8a0a6eb231e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd8c65e7d3f82eb0ec12de4402e8a0a6eb231e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd8c65e7d3f82eb0ec12de4402e8a0a6eb231e90"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "75197255a5424513503097aee30adfd79c528e95", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=31f02c775233015db6fb95d31a9cff7a193428d8", "patch": "@@ -1,3 +1,11 @@\n+2013-06-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/29800\n+\t* trans-array.c (gfc_conv_array_ref): Improve out-of-bounds\n+\tdiagnostic message.\n+\t* trans-array.c (gfc_conv_array_ref): Update prototype.\n+\t* trans-expr.c (gfc_conv_variable): Update call.\n+\n 2013-06-24  Steven G. Kargl  <sgk@troutmask.apl.washington.edu>\n \t    Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \t    Dominique d'Humieres  <dominiq@lps.ens.fr>"}, {"sha": "39bf0ddbb0dc80014ae58748c14596640c4fde9b", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=31f02c775233015db6fb95d31a9cff7a193428d8", "patch": "@@ -3145,7 +3145,7 @@ build_array_ref (tree desc, tree offset, tree decl)\n    a(i, j, k) = base[offset + i * stride[0] + j * stride[1] + k * stride[2]]*/\n \n void\n-gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n+gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_expr *expr,\n \t\t    locus * where)\n {\n   int n;\n@@ -3154,6 +3154,8 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n   tree stride;\n   gfc_se indexse;\n   gfc_se tmpse;\n+  gfc_symbol * sym = expr->symtree->n.sym;\n+  char *var_name = NULL;\n \n   if (ar->dimen == 0)\n     {\n@@ -3184,6 +3186,35 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n       return;\n     }\n \n+  if (gfc_option.rtcheck & GFC_RTCHECK_BOUNDS)\n+    {\n+      size_t len;\n+      gfc_ref *ref;\n+\n+      len = strlen (sym->name) + 1;\n+      for (ref = expr->ref; ref; ref = ref->next)\n+\t{\n+\t  if (ref->type == REF_ARRAY && &ref->u.ar == ar)\n+\t    break;\n+\t  if (ref->type == REF_COMPONENT)\n+\t    len += 1 + strlen (ref->u.c.component->name);\n+\t}\n+\n+      var_name = XALLOCAVEC (char, len);\n+      strcpy (var_name, sym->name);\n+\n+      for (ref = expr->ref; ref; ref = ref->next)\n+\t{\n+\t  if (ref->type == REF_ARRAY && &ref->u.ar == ar)\n+\t    break;\n+\t  if (ref->type == REF_COMPONENT)\n+\t    {\n+\t      strcat (var_name, \"%%\");\n+\t      strcat (var_name, ref->u.c.component->name);\n+\t    }\n+\t}\n+    }\n+\n   cst_offset = offset = gfc_index_zero_node;\n   add_to_offset (&cst_offset, &offset, gfc_conv_array_offset (se->expr));\n \n@@ -3219,7 +3250,7 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n \t  cond = fold_build2_loc (input_location, LT_EXPR, boolean_type_node,\n \t\t\t\t  indexse.expr, tmp);\n \t  asprintf (&msg, \"Index '%%ld' of dimension %d of array '%s' \"\n-\t\t    \"below lower bound of %%ld\", n+1, sym->name);\n+\t\t    \"below lower bound of %%ld\", n+1, var_name);\n \t  gfc_trans_runtime_check (true, false, cond, &se->pre, where, msg,\n \t\t\t\t   fold_convert (long_integer_type_node,\n \t\t\t\t\t\t indexse.expr),\n@@ -3243,7 +3274,7 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n \t      cond = fold_build2_loc (input_location, GT_EXPR,\n \t\t\t\t      boolean_type_node, indexse.expr, tmp);\n \t      asprintf (&msg, \"Index '%%ld' of dimension %d of array '%s' \"\n-\t\t\t\"above upper bound of %%ld\", n+1, sym->name);\n+\t\t\t\"above upper bound of %%ld\", n+1, var_name);\n \t      gfc_trans_runtime_check (true, false, cond, &se->pre, where, msg,\n \t\t\t\t   fold_convert (long_integer_type_node,\n \t\t\t\t\t\t indexse.expr),"}, {"sha": "2d2b45d5ee9ea92c705b3c491081b8288c632ce7", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=31f02c775233015db6fb95d31a9cff7a193428d8", "patch": "@@ -123,7 +123,7 @@ void gfc_conv_resolve_dependencies (gfc_loopinfo *, gfc_ss *, gfc_ss *);\n tree gfc_build_null_descriptor (tree);\n \n /* Get a single array element.  */\n-void gfc_conv_array_ref (gfc_se *, gfc_array_ref *, gfc_symbol *, locus *);\n+void gfc_conv_array_ref (gfc_se *, gfc_array_ref *, gfc_expr *, locus *);\n /* Translate a reference to a temporary array.  */\n void gfc_conv_tmp_array_ref (gfc_se * se);\n /* Translate a reference to an array temporary.  */"}, {"sha": "0eef2b2c2cd5e2c29afd588e5b69709e25888079", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=31f02c775233015db6fb95d31a9cff7a193428d8", "patch": "@@ -1910,7 +1910,7 @@ gfc_conv_variable (gfc_se * se, gfc_expr * expr)\n \t      && ref->next == NULL && (se->descriptor_only))\n \t    return;\n \n-\t  gfc_conv_array_ref (se, &ref->u.ar, sym, &expr->where);\n+\t  gfc_conv_array_ref (se, &ref->u.ar, expr, &expr->where);\n \t  /* Return a pointer to an element.  */\n \t  break;\n "}, {"sha": "edd60acb40e5a9e64aa4f60f63a33c5be453d7f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31f02c775233015db6fb95d31a9cff7a193428d8", "patch": "@@ -1,3 +1,8 @@\n+2013-06-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/29800\n+\t* gfortran.dg/bounds_check_17.f90: New.\n+\n 2013-06-25  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \tPR c++/57640"}, {"sha": "50d66c75a80973e157019f50a5baaad891010a95", "filename": "gcc/testsuite/gfortran.dg/bounds_check_17.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f02c775233015db6fb95d31a9cff7a193428d8/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_17.f90?ref=31f02c775233015db6fb95d31a9cff7a193428d8", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=bounds\" }\n+! { dg-shouldfail \"above upper bound\" }\n+!\n+! PR fortran/29800\n+!\n+! Contributed by Joost VandeVondele\n+!\n+\n+TYPE data\n+  INTEGER :: x(10)\n+END TYPE\n+TYPE data_areas\n+  TYPE(data) :: y(10)\n+END TYPE\n+\n+TYPE(data_areas) :: z(10)\n+\n+integer, volatile :: i,j,k\n+i=1 ; j=1 ; k=11\n+\n+z(i)%y(j)%x(k)=0\n+\n+END\n+\n+! { dg-output \"At line 22 of file .*bounds_check_17.f90.*Fortran runtime error: Index '11' of dimension 1 of array 'z%y%x' above upper bound of 10\" }"}]}