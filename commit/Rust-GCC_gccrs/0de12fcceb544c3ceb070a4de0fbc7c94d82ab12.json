{"sha": "0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlMTJmY2NlYjU0NGMzY2ViMDcwYTRkZTBmYmM3Yzk0ZDgyYWIxMg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-05-23T20:57:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-05-23T20:57:11Z"}, "message": "rs6000.c (expand_block_move): Unify the TARGET_STRING and ! TARGET_STRING cases.\n\n\t* config/rs6000/rs6000.c (expand_block_move): Unify the TARGET_STRING\n\tand ! TARGET_STRING cases.\n\nFrom-SVN: r67140", "tree": {"sha": "ab93f9de5ff11fdf79b7c2a4fe84b28b807ece25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab93f9de5ff11fdf79b7c2a4fe84b28b807ece25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e6a1681eabffee9de96ad99d69a172cdc19def8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e6a1681eabffee9de96ad99d69a172cdc19def8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e6a1681eabffee9de96ad99d69a172cdc19def8"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "d4334528b6b83263dd48606f847409464ea2c34b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "patch": "@@ -1,3 +1,9 @@\n+2003-05-23  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.c (default_compilers): Use -o to specify preprocessor's output\n+\tfile.  Make -no-integrated-cpp work when building PCH files.\n+\t* objc/lang-specs.h: Likewise.\n+\n 2003-05-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* fixinc/Makefile.in: Correct description."}, {"sha": "98f4f7143bcf3e87ea44e63470e56a99e55931d0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "patch": "@@ -1,3 +1,8 @@\n+2003-05-23  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* lang-specs.h: Use -o to specify preprocessor's output file.\n+\tMake -no-integrated-cpp work when building PCH files.\n+\n 2003-05-23  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/10682"}, {"sha": "5815ea57896e1e23e7ed8eedd235a7c58e59e2c9", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "patch": "@@ -38,18 +38,18 @@ Boston, MA 02111-1307, USA.  */\n   {\"@c++-header\",\n     \"%{E|M|MM:cc1plus -E %(cpp_options) %2 %(cpp_debug_options)}\\\n      %{!E:%{!M:%{!MM:\\\n-       %{save-temps:cc1plus -E\\\n-\t\t%(cpp_options) %2 %b.ii \\n}\\\n-      cc1plus %{save-temps:-fpreprocessed %b.ii}\\\n-\t      %{!save-temps:%(cpp_unique_options)}\\\n+       %{save-temps|no-integrated-cpp:cc1plus -E\\\n+\t\t%(cpp_options) %2 -o %{save-temps:%b.ii} %{!save-temps:%g.ii} \\n}\\\n+      cc1plus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.ii} %{!save-temps:%g.ii}}\\\n+\t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n \t%(cc1_options) %2 %{+e1*}\\\n         -o %g.s %{!o*:--output-pch=%i.gch} %W{o*:--output-pch=%*}%V}}}\",\n      CPLUSPLUS_CPP_SPEC},\n   {\"@c++\",\n     \"%{E|M|MM:cc1plus -E %(cpp_options) %2 %(cpp_debug_options)}\\\n      %{!E:%{!M:%{!MM:\\\n        %{save-temps|no-integrated-cpp:cc1plus -E\\\n-\t\t%(cpp_options) %2 %{save-temps:%b.ii} %{!save-temps:%g.ii} \\n}\\\n+\t\t%(cpp_options) %2 -o %{save-temps:%b.ii} %{!save-temps:%g.ii} \\n}\\\n       cc1plus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.ii} %{!save-temps:%g.ii}}\\\n \t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n \t%(cc1_options) %2 %{+e1*}\\"}, {"sha": "1b79f5486b7b3d018bfde3dbd29dfa86130d30b2", "filename": "gcc/gcc.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "patch": "@@ -881,8 +881,9 @@ static const struct compiler default_compilers[] =\n           %{traditional|ftraditional:\\\n %eGNU C no longer supports -traditional without -E}\\\n \t  %{save-temps|traditional-cpp|no-integrated-cpp:%(trad_capable_cpp) \\\n-\t\t%(cpp_options) %{save-temps:%b.i} %{!save-temps:%g.i} \\n\\\n-\t\t    cc1 -fpreprocessed %{save-temps:%b.i} %{!save-temps:%g.i} %(cc1_options)}\\\n+\t\t%(cpp_options) -o %{save-temps:%b.i} %{!save-temps:%g.i} \\n\\\n+\t\t    cc1 -fpreprocessed %{save-temps:%b.i} %{!save-temps:%g.i} \\\n+\t\t\t%(cc1_options)}\\\n \t  %{!save-temps:%{!traditional-cpp:%{!no-integrated-cpp:\\\n \t\tcc1 %(cpp_unique_options) %(cc1_options)}}}\\\n         %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n@@ -895,15 +896,16 @@ static const struct compiler default_compilers[] =\n       external preprocessor if -save-temps is given.  */\n      \"%{E|M|MM:%(trad_capable_cpp) %(cpp_options) %(cpp_debug_options)}\\\n       %{!E:%{!M:%{!MM:\\\n-\t  %{save-temps|traditional-cpp:%(trad_capable_cpp) \\\n-\t\t%(cpp_options) %b.i \\n\\\n-\t\t    cc1 -fpreprocessed %b.i %(cc1_options)\\\n+\t  %{save-temps|traditional-cpp|no-integrated-cpp:%(trad_capable_cpp) \\\n+\t\t%(cpp_options) -o %{save-temps:%b.i} %{!save-temps:%g.i} \\n\\\n+\t\t    cc1 -fpreprocessed %{save-temps:%b.i} %{!save-temps:%g.i} \\\n+\t\t\t%(cc1_options)\\\n                         -o %g.s %{!o*:--output-pch=%i.gch}\\\n                         %W{o*:--output-pch=%*}%V}\\\n-\t  %{!save-temps:%{!traditional-cpp:\\\n+\t  %{!save-temps:%{!traditional-cpp:%{!no-integrated-cpp:\\\n \t\tcc1 %(cpp_unique_options) %(cc1_options)\\\n                     -o %g.s %{!o*:--output-pch=%i.gch}\\\n-                    %W{o*:--output-pch=%*}%V}}}}}\", 0},\n+                    %W{o*:--output-pch=%*}%V}}}}}}\", 0},\n   {\".i\", \"@cpp-output\", 0},\n   {\"@cpp-output\",\n    \"%{!M:%{!MM:%{!E:cc1 -fpreprocessed %i %(cc1_options) %{!fsyntax-only:%(invoke_as)}}}}\", 0},"}, {"sha": "7c784204f86c7ce90d6def3d544af33a0982dfee", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de12fcceb544c3ceb070a4de0fbc7c94d82ab12/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=0de12fcceb544c3ceb070a4de0fbc7c94d82ab12", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n       %{!E:%{!M:%{!MM:\\\n \t%{traditional|ftraditional|traditional-cpp:\\\n %eGNU Objective C no longer supports traditional compilation}\\\n-\t%{save-temps|no-integrated-cpp:cc1obj -E %(cpp_options) %{save-temps:%b.mi} %{!save-temps:%g.mi} \\n\\\n+\t%{save-temps|no-integrated-cpp:cc1obj -E %(cpp_options) -o %{save-temps:%b.mi} %{!save-temps:%g.mi} \\n\\\n \t    cc1obj -fpreprocessed %{save-temps:%b.mi} %{!save-temps:%g.mi} %(cc1_options) %{gen-decls}}\\\n \t%{!save-temps:%{!no-integrated-cpp:\\\n \t    cc1obj %(cpp_unique_options) %(cc1_options) %{gen-decls}}}\\\n@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n       %{!E:%{!M:%{!MM:\\\n \t%{traditional|ftraditional|traditional-cpp:\\\n %eGNU Objective C no longer supports traditional compilation}\\\n-\t%{save-temps|no-integrated-cpp:cc1obj -E %(cpp_options) %b.mi \\n\\\n+\t%{save-temps|no-integrated-cpp:cc1obj -E %(cpp_options) -o %{save-temps:%b.mi} %{!save-temps:%g.mi} \\n\\\n \t    cc1obj -fpreprocessed %b.mi %(cc1_options) %{gen-decls}\\\n                         -o %g.s %{!o*:--output-pch=%i.gch}\\\n                         %W{o*:--output-pch=%*}%V}\\"}]}