{"sha": "00083992a68feb592575464d5be98e281e8a2d8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwODM5OTJhNjhmZWI1OTI1NzU0NjRkNWJlOThlMjgxZThhMmQ4ZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-01-14T17:46:25Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-01-14T17:46:25Z"}, "message": "re PR c/69262 (Request for better array bounds warning)\n\n\tPR c/69262\n\t* c-decl.c (grokdeclarator): Provide more information for invalid\n\tarray declarations.\n\n\t* gcc.dg/array-15.c: New test.\n\nFrom-SVN: r232376", "tree": {"sha": "44475bf14edc93f3701ba4991f7db8a51048cc53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44475bf14edc93f3701ba4991f7db8a51048cc53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00083992a68feb592575464d5be98e281e8a2d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00083992a68feb592575464d5be98e281e8a2d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00083992a68feb592575464d5be98e281e8a2d8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00083992a68feb592575464d5be98e281e8a2d8e/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b56ed680d4715cfc3cf2c4940aef30daec124a41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56ed680d4715cfc3cf2c4940aef30daec124a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56ed680d4715cfc3cf2c4940aef30daec124a41"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "3f40b03bc2f71cbb32f1dca7a85cd351f122a8d6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=00083992a68feb592575464d5be98e281e8a2d8e", "patch": "@@ -1,3 +1,9 @@\n+2016-01-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/69262\n+\t* c-decl.c (grokdeclarator): Provide more information for invalid\n+\tarray declarations.\n+\n 2016-01-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-parser.c (c_parser_unary_expression): For dereferences, build"}, {"sha": "5830e22a7fc525fd8372c2d465f886799b7204ca", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=00083992a68feb592575464d5be98e281e8a2d8e", "patch": "@@ -5951,6 +5951,18 @@ grokdeclarator (const struct c_declarator *declarator,\n \t      {\n \t\terror_at (loc, \"array type has incomplete element type %qT\",\n \t\t\t  type);\n+\t\t/* See if we can be more helpful.  */\n+\t\tif (TREE_CODE (type) == ARRAY_TYPE)\n+\t\t  {\n+\t\t    if (name)\n+\t\t      inform (loc, \"declaration of %qE as multidimensional \"\n+\t\t\t      \"array must have bounds for all dimensions \"\n+\t\t\t      \"except the first\", name);\n+\t\t    else\n+\t\t      inform (loc, \"declaration of multidimensional array \"\n+\t\t\t      \"must have bounds for all dimensions except \"\n+\t\t\t      \"the first\");\n+\t\t  }\n \t\ttype = error_mark_node;\n \t      }\n \t    else"}, {"sha": "3d67923f91c700526eb4e18da9649a5167fa1b21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00083992a68feb592575464d5be98e281e8a2d8e", "patch": "@@ -1,3 +1,8 @@\n+2016-01-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/69262\n+\t* gcc.dg/array-15.c: New test.\n+\n 2016-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/68146"}, {"sha": "a002f689acf2ff5e04e2830e727f8154cc5a13d9", "filename": "gcc/testsuite/gcc.dg/array-15.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Ftestsuite%2Fgcc.dg%2Farray-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00083992a68feb592575464d5be98e281e8a2d8e/gcc%2Ftestsuite%2Fgcc.dg%2Farray-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-15.c?ref=00083992a68feb592575464d5be98e281e8a2d8e", "patch": "@@ -0,0 +1,52 @@\n+/* PR c/69262 */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n+\n+struct S\n+{\n+  int a[1][][2]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-message \"declaration of .a. as multidimensional array must have bounds\" \"\" { target *-*-* } 7 } */\n+};\n+\n+struct R\n+{\n+  int i;\n+  int a[][]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-message \"declaration of .a. as multidimensional array must have bounds\" \"\" { target *-*-* } 14 } */\n+};\n+\n+typedef int T[];\n+typedef int U[][]; /* { dg-error \"array type has incomplete element type\" } */\n+/* { dg-message \"declaration of .U. as multidimensional array must have bounds\" \"\" { target *-*-* } 19 } */\n+\n+int x[][]; /* { dg-error \"array type has incomplete element type\" } */\n+/* { dg-message \"declaration of .x. as multidimensional array must have bounds\" \"\" { target *-*-* } 22 } */\n+\n+struct N;\n+\n+void\n+fn1 (int z[][]) /* { dg-error \"array type has incomplete element type\" } */\n+/* { dg-message \"declaration of .z. as multidimensional array must have bounds\" \"\" { target *-*-* } 28 } */\n+{\n+  int a[1][][2]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-message \"declaration of .a. as multidimensional array must have bounds\" \"\" { target *-*-* } 31 } */\n+  /* OK */\n+  int b[3][2][1];\n+  int c[1][2][3][]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-message \"declaration of .c. as multidimensional array must have bounds\" \"\" { target *-*-* } 35 } */\n+  T d[1]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-message \"declaration of .d. as multidimensional array must have bounds\" \"\" { target *-*-* } 37 } */\n+  T e[]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-message \"declaration of .e. as multidimensional array must have bounds\" \"\" { target *-*-* } 39 } */\n+\n+  /* This array has incomplete element type, but is not multidimensional.  */\n+  struct N f[1]; /* { dg-error \"array type has incomplete element type\" } */\n+  /* { dg-bogus \"declaration of .f. as multidimensional array must have bounds\" \"\" { target *-*-* } 43 } */\n+}\n+\n+void fn2 (int [][]); /* { dg-error \"array type has incomplete element type\" } */\n+/* { dg-message \"declaration of multidimensional array must have bounds\" \"\" { target *-*-* } 47 } */\n+/* OK */\n+void fn3 (int [][*]);\n+void fn4 (T []); /* { dg-error \"array type has incomplete element type\" } */\n+/* { dg-message \"declaration of multidimensional array must have bounds\" \"\" { target *-*-* } 51 } */"}]}