{"sha": "3c543775537e2d87ed1de128eaa38dcd7083940a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M1NDM3NzU1MzdlMmQ4N2VkMWRlMTI4ZWFhMzhkY2Q3MDgzOTQwYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-06T13:40:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-06T13:40:29Z"}, "message": "(canon_hash, case LABEL_REF, SYMBOL_REF): Avoid warning on 64-bit\nmachines.\n\nFrom-SVN: r6487", "tree": {"sha": "93406339b160b374d22c41be8ce876f56fe006be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93406339b160b374d22c41be8ce876f56fe006be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c543775537e2d87ed1de128eaa38dcd7083940a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c543775537e2d87ed1de128eaa38dcd7083940a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c543775537e2d87ed1de128eaa38dcd7083940a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c543775537e2d87ed1de128eaa38dcd7083940a/comments", "author": null, "committer": null, "parents": [{"sha": "0d7e008e87f916fe7ff510696ec4fabbcad43925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7e008e87f916fe7ff510696ec4fabbcad43925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7e008e87f916fe7ff510696ec4fabbcad43925"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "21705abcbc540297f50b4d5f4301dc553f7d2a8f", "filename": "gcc/cse.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c543775537e2d87ed1de128eaa38dcd7083940a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c543775537e2d87ed1de128eaa38dcd7083940a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=3c543775537e2d87ed1de128eaa38dcd7083940a", "patch": "@@ -1887,12 +1887,13 @@ canon_hash (x, mode)\n \n       /* Assume there is only one rtx object for any given label.  */\n     case LABEL_REF:\n-      /* Use `and' to ensure a positive number.  */\n-      hash += ((unsigned) LABEL_REF << 7) + (unsigned) XEXP (x, 0);\n+      hash\n+\t+= ((unsigned) LABEL_REF << 7) + (unsigned HOST_WIDE_INT) XEXP (x, 0);\n       return hash;\n \n     case SYMBOL_REF:\n-      hash += ((unsigned) SYMBOL_REF << 7) + (unsigned) XEXP (x, 0);\n+      hash\n+\t+= ((unsigned) SYMBOL_REF << 7) + (unsigned HOST_WIDE_INT) XEXP (x, 0);\n       return hash;\n \n     case MEM:"}]}