{"sha": "e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg3NmM0M2FlMTM1ZjdlMzdmMzlmOGE3Y2U1Mjg3Y2I4Y2NhMWFjYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T13:43:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T13:43:38Z"}, "message": "[multiple changes]\n\n2011-12-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb, gnatls.adb: Minor reformatting.\n\n2011-12-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): If a type declared in a generic\n\tcontext has predicates, generate a freeze node for it.\n\t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations): If expression\n\thas not been analyzed yet, entity has not been frozen, so analyze\n\tit now.\n\n2011-12-12  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_VM_TSD): Generate code\n\tto store the value 'alignment in the TSD.\n\n2011-12-12  Bob Duff  <duff@adacore.com>\n\n\t* s-taprop-mingw.adb (Yield): Do not delay 1 millisecond in Annex D\n\tmode.\n\nFrom-SVN: r182240", "tree": {"sha": "feb483120b34ecb8aac08763b4b4a0ca89170d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feb483120b34ecb8aac08763b4b4a0ca89170d5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/comments", "author": null, "committer": null, "parents": [{"sha": "ad5a445d3ecbc55dd7775e1e3df2f7cbcd967a0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad5a445d3ecbc55dd7775e1e3df2f7cbcd967a0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad5a445d3ecbc55dd7775e1e3df2f7cbcd967a0d"}], "stats": {"total": 67, "additions": 43, "deletions": 24}, "files": [{"sha": "430170d59d2ea47d698b6c9122df5be102d8685a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -1,3 +1,25 @@\n+2011-12-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb, gnatls.adb: Minor reformatting.\n+\n+2011-12-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): If a type declared in a generic\n+\tcontext has predicates, generate a freeze node for it.\n+\t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations): If expression\n+\thas not been analyzed yet, entity has not been frozen, so analyze\n+\tit now.\n+\n+2011-12-12  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_VM_TSD): Generate code\n+\tto store the value 'alignment in the TSD.\n+\n+2011-12-12  Bob Duff  <duff@adacore.com>\n+\n+\t* s-taprop-mingw.adb (Yield): Do not delay 1 millisecond in Annex D\n+\tmode.\n+\n 2011-12-12  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Allocator): Update the master of an"}, {"sha": "a1bd6a425ea0269dbf19946fd760eb4b68c0b0e1", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -6458,6 +6458,7 @@ package body Exp_Disp is\n       --           (Idepth                => I_Depth,\n       --            Tag_Kind              => <tag_kind-value>,\n       --            Access_Level          => Type_Access_Level (Typ),\n+      --            Alignment             => Typ'Alignment,\n       --            HT_Link               => null,\n       --            Type_Is_Abstract      => <<boolean-value>>,\n       --            Type_Is_Library_Level => <<boolean-value>>,\n@@ -6508,6 +6509,13 @@ package body Exp_Disp is\n       Append_To (TSD_Aggr_List,\n         Make_Integer_Literal (Loc, Type_Access_Level (Typ)));\n \n+      --  Alignment\n+\n+      Append_To (TSD_Aggr_List,\n+        Make_Attribute_Reference (Loc,\n+          Prefix => New_Reference_To (Typ, Loc),\n+          Attribute_Name => Name_Alignment));\n+\n       --  HT_Link\n \n       Append_To (TSD_Aggr_List,"}, {"sha": "46d3c64fd9040b87c07fe2b4ff1aeede43a69a88", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -3040,8 +3040,13 @@ package body Freeze is\n          --  nable and used in subsequent checks, so might as well try to\n          --  compute it.\n \n+         --  In Ada2012, freeze entities is also used in the front-end to\n+         --  trigger the analysis of aspect expressions, so in this case we\n+         --  want to continue the freezing process.\n+\n          if Present (Scope (E))\n            and then Is_Generic_Unit (Scope (E))\n+           and then not Has_Predicates (E)\n          then\n             Check_Compile_Time_Size (E);\n             return No_List;"}, {"sha": "a7c276d58b36770fc4a81726290fda992e49dc28", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -1232,6 +1232,7 @@ procedure Gnatls is\n             --  Add the lib subdirectory if it exists\n \n             Lib_Path := Get_RTS_Search_Dir (Name, Objects);\n+\n             if Lib_Path /= null then\n                Add_Search_Dirs (Lib_Path, Objects);\n             end if;"}, {"sha": "5ced0315e7bd51b6e649355c38aee29daca1c543", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -126,9 +126,6 @@ package body System.Task_Primitives.Operations is\n    Foreign_Task_Elaborated : aliased Boolean := True;\n    --  Used to identified fake tasks (i.e., non-Ada Threads)\n \n-   Annex_D : Boolean := False;\n-   --  Set to True if running with Annex-D semantics\n-\n    Null_Thread_Id : constant Thread_Id := 0;\n    --  Constant to indicate that the thread identifier has not yet been\n    --  initialized.\n@@ -700,20 +697,9 @@ package body System.Task_Primitives.Operations is\n    -----------\n \n    procedure Yield (Do_Yield : Boolean := True) is\n+      pragma Unreferenced (Do_Yield);\n    begin\n-      if Do_Yield then\n-         SwitchToThread;\n-\n-      elsif Annex_D then\n-         --  If running with Annex-D semantics we need a delay\n-         --  above 0 milliseconds here otherwise processes give\n-         --  enough time to the other tasks to have a chance to\n-         --  run.\n-         --\n-         --  This makes cxd8002 ACATS pass on Windows.\n-\n-         Sleep (1);\n-      end if;\n+      SwitchToThread;\n    end Yield;\n \n    ------------------\n@@ -1076,8 +1062,6 @@ package body System.Task_Primitives.Operations is\n \n          Discard := OS_Interface.SetPriorityClass\n                       (GetCurrentProcess, Realtime_Priority_Class);\n-\n-         Annex_D := True;\n       end if;\n \n       TlsIndex := TlsAlloc;"}, {"sha": "309d2d2ac1bc3396cf4befe2b2a35b6394c6b5b9", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -5880,11 +5880,11 @@ package body Sem_Ch13 is\n       --  All other cases\n \n       else\n-         --  In a generic context freeze nodes are not generated, and the\n-         --  aspect expressions have not been preanalyzed, so do it now.\n+         --  In a generic context the aspect expressions have not been\n+         --  preanalyzed, so do it now.\n          --  There are no conformance checks to perform in this case.\n \n-         if No (T) and then Inside_A_Generic then\n+         if No (T) then\n             Check_Aspect_At_Freeze_Point (ASN);\n             return;\n          else"}, {"sha": "92c5eed8de1a864a7c38a25d3bb7b6c6d48d33e6", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e876c43ae135f7e37f39f8a7ce5287cb8cca1aca/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=e876c43ae135f7e37f39f8a7ce5287cb8cca1aca", "patch": "@@ -367,8 +367,8 @@ package body Sem_Ch6 is\n          --  on later entities.\n \n          declare\n-            Decls : List_Id          := List_Containing (N);\n-            Par   : constant Node_Id := Parent (Decls);\n+            Decls : List_Id            := List_Containing (N);\n+            Par   : constant Node_Id   := Parent (Decls);\n             Id    : constant Entity_Id := Defining_Entity (New_Decl);\n \n          begin\n@@ -385,7 +385,6 @@ package body Sem_Ch6 is\n             Install_Formals (Id);\n             Preanalyze_Spec_Expression (Expression  (Ret), Etype (Id));\n             End_Scope;\n-\n          end;\n       end if;\n "}]}