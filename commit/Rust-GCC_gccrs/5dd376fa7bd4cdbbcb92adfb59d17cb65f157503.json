{"sha": "5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkMzc2ZmE3YmQ0Y2RiYmNiOTJhZGZiNTlkMTdjYjY1ZjE1NzUwMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-12-19T20:44:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-12-19T20:44:59Z"}, "message": "i386.md (SWI1248_AVX512BWDQ_64): Rename from SWI1248_AVX512BWDQ2_64.\n\n\t* config/i386/i386.md (SWI1248_AVX512BWDQ_64): Rename from\n\tSWI1248_AVX512BWDQ2_64.  Unconditionally enable HImode.\n\t(*cmp<mode>_ccz_1): Emit kortest instead of ktest insn.\n\tUse SWI1248_AVX512BWDQ_64 mode iterator and enable only for\n\tTARGET_AVX512F.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512dq-pr82855.c: Update scan-assembler pattern.\n\nFrom-SVN: r267286", "tree": {"sha": "f5180d11d102d01106ffddbed62773b0b8c0f772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5180d11d102d01106ffddbed62773b0b8c0f772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/comments", "author": null, "committer": null, "parents": [{"sha": "f39365f3edf65fd36082b471a8370eada78cb474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f39365f3edf65fd36082b471a8370eada78cb474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f39365f3edf65fd36082b471a8370eada78cb474"}], "stats": {"total": 160, "additions": 84, "deletions": 76}, "files": [{"sha": "46732eb6d574827b1fda403ba5023a359927a902", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "patch": "@@ -1,3 +1,11 @@\n+2018-12-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (SWI1248_AVX512BWDQ_64): Rename from\n+\tSWI1248_AVX512BWDQ2_64.  Unconditionally enable HImode.\n+\t(*cmp<mode>_ccz_1): Emit kortest instead of ktest insn.\n+\tUse SWI1248_AVX512BWDQ_64 mode iterator and enable only for\n+\tTARGET_AVX512F.\n+\n 2018-12-19  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n \n \t* config/arm/elf.h: Update comment about condition that need to"}, {"sha": "c529406cccc40f3235fe4d3f275f47bd10f7acaf", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "patch": "@@ -1244,20 +1244,20 @@\n \t(compare:CC (match_operand:SWI48 0 \"nonimmediate_operand\")\n \t\t    (match_operand:SWI48 1 \"<general_operand>\")))])\n \n-(define_mode_iterator SWI1248_AVX512BWDQ2_64\n-  [(QI \"TARGET_AVX512DQ\") (HI \"TARGET_AVX512DQ\")\n+(define_mode_iterator SWI1248_AVX512BWDQ_64\n+  [(QI \"TARGET_AVX512DQ\") HI\n    (SI \"TARGET_AVX512BW\") (DI \"TARGET_AVX512BW && TARGET_64BIT\")])\n \n (define_insn \"*cmp<mode>_ccz_1\"\n   [(set (reg FLAGS_REG)\n-\t(compare (match_operand:SWI1248_AVX512BWDQ2_64 0\n+\t(compare (match_operand:SWI1248_AVX512BWDQ_64 0\n \t\t\t\"nonimmediate_operand\" \"<r>,?m<r>,$k\")\n-\t\t (match_operand:SWI1248_AVX512BWDQ2_64 1 \"const0_operand\")))]\n-  \"ix86_match_ccmode (insn, CCZmode)\"\n+\t\t (match_operand:SWI1248_AVX512BWDQ_64 1 \"const0_operand\")))]\n+  \"TARGET_AVX512F && ix86_match_ccmode (insn, CCZmode)\"\n   \"@\n    test{<imodesuffix>}\\t%0, %0\n    cmp{<imodesuffix>}\\t{%1, %0|%0, %1}\n-   ktest<mskmodesuffix>\\t%0, %0\"\n+   kortest<mskmodesuffix>\\t%0, %0\"\n   [(set_attr \"type\" \"test,icmp,msklog\")\n    (set_attr \"length_immediate\" \"0,1,*\")\n    (set_attr \"prefix\" \"*,*,vex\")"}, {"sha": "6a3ed92857e73170f62abc51f61ab94a2aac0be4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 69, "deletions": 69, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "patch": "@@ -1,3 +1,7 @@\n+2018-12-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/avx512dq-pr82855.c: Update scan-assembler pattern.\n+\n 2018-12-19  Tony Wang  <tony.wang@arm.com>\n \t    Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n \n@@ -722,17 +726,13 @@\n \t* gfortran.dg/goacc/nested-parallelism.f90: Likewise.\n \n \t* gfortran.dg/goacc/loop-2.f95: Split into...\n-\t* gfortran.dg/goacc/loop-2-kernels-nested.f95: ... this new\n-\tfile...\n-\t* gfortran.dg/goacc/loop-2-kernels-tile.f95: ..., and this new\n-\tfile...\n+\t* gfortran.dg/goacc/loop-2-kernels-nested.f95: ... this new file...\n+\t* gfortran.dg/goacc/loop-2-kernels-tile.f95: ..., and this new file...\n \t* gfortran.dg/goacc/loop-2-kernels.f95: ..., and this new file...\n-\t* gfortran.dg/goacc/loop-2-parallel-3.f95: ..., and this new\n-\tfile...\n+\t* gfortran.dg/goacc/loop-2-parallel-3.f95: ..., and this new file...\n \t* gfortran.dg/goacc/loop-2-parallel-nested.f95: ..., and this new\n \tfile...\n-\t* gfortran.dg/goacc/loop-2-parallel-tile.f95: ..., and this new\n-\tfile...\n+\t* gfortran.dg/goacc/loop-2-parallel-tile.f95: ..., and this new file...\n \t* gfortran.dg/goacc/loop-2-parallel.f95: ..., and this new file.\n \n \tPR fortran/88420\n@@ -975,8 +975,8 @@\n 2018-12-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR testsuite/88208\n-\t* gcc.target/sparc/attr-aligned.c (MAXALIGN) [__sparcv9 ||\n-\t__arch64__]: Define.\n+\t* gcc.target/sparc/attr-aligned.c (MAXALIGN)\n+\t[__sparcv9 || __arch64__]: Define.\n \n 2018-12-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -1105,7 +1105,7 @@\n \tgnat.dg/overload2_q.ads: New testcase.\n \n 2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n-            Mark Eggleston  <mark.eggleston@codethink.co.uk>\n+\t    Mark Eggleston  <mark.eggleston@codethink.co.uk>\n \n \tPR fortran/87919\n \t* gfortran.dg/array_temporaries_5.f90: New test.\n@@ -1903,7 +1903,7 @@\n \t* c-c++-common/builtin-has-attribute-4.c: New test.\n \t* c-c++-common/builtin-has-attribute.c: New test.\n \t* gcc.dg/builtin-has-attribute.c: New test.\n-\t* gcc/testsuite/gcc.target/i386/builtin-has-attribute.c: New test.\n+\t* gcc.target/i386/builtin-has-attribute.c: New test.\n \n 2018-11-20  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -2223,8 +2223,8 @@\n \n 2018-11-15  Richard Biener  <rguenther@suse.de>\n \n-        PR middle-end/88029\n-        * gcc.dg/tree-ssa/pr88029.c: New testcase.\n+\tPR middle-end/88029\n+\t* gcc.dg/tree-ssa/pr88029.c: New testcase.\n \n 2018-11-15  Richard Biener  <rguenther@suse.de>\n \n@@ -3023,7 +3023,7 @@\n \n 2018-11-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n-\t* gcc/testsuite/gcc.target/msp430/special-regs.c: New test.\n+\t* gcc.target/msp430/special-regs.c: New test.\n \n 2018-11-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -3620,53 +3620,53 @@\n \t* gfortran.dg/findloc_6.f90: New test.\n \n 2018-10-26  Bill Schmidt  <wschmidt@linux.ibm.com>\n-            Jinsong Ji  <jji@us.ibm.com>\n-\n-        * gcc.target/powerpc/sse-addss-1.c: Call abort under DEBUG also;\n-        formatting cleanup.\n-        * gcc.target/powerpc/sse-pavgw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-addsd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtdq2pd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtpd2dq-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtpd2ps-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtps2dq-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtps2pd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtsd2si-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtsd2si-2.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtsd2ss-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvtss2sd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvttpd2dq-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-cvttsd2si-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-divpd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-divsd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-maxsd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-minsd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-movmskpd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-movq-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-movsd-3.c: Likewise.\n-        * gcc.target/powerpc/sse2-mulpd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-mulsd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-packssdw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-packsswb-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-packuswb-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-paddsb-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-paddsw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-paddusb-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pmovmskb-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pmulhw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pmuludq1.c: Likewise.\n-        * gcc.target/powerpc/sse2-psadbw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pshufd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pshufhw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pshuflw-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-pslld-2.c: Likewise.\n-        * gcc.target/powerpc/sse2-pslldq-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-psrld-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-psrld-2.c: Likewise.\n-        * gcc.target/powerpc/sse2-psrldq-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-psubusb-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-sqrtpd-1.c: Likewise.\n-        * gcc.target/powerpc/sse2-subsd-1.c: Likewise.\n+\t    Jinsong Ji  <jji@us.ibm.com>\n+\n+\t* gcc.target/powerpc/sse-addss-1.c: Call abort under DEBUG also;\n+\tformatting cleanup.\n+\t* gcc.target/powerpc/sse-pavgw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-addsd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtdq2pd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtpd2dq-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtpd2ps-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtps2dq-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtps2pd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtsd2si-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtsd2si-2.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtsd2ss-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvtss2sd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvttpd2dq-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-cvttsd2si-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-divpd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-divsd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-maxsd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-minsd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-movmskpd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-movq-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-movsd-3.c: Likewise.\n+\t* gcc.target/powerpc/sse2-mulpd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-mulsd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-packssdw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-packsswb-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-packuswb-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-paddsb-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-paddsw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-paddusb-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pmovmskb-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pmulhw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pmuludq1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-psadbw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pshufd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pshufhw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pshuflw-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pslld-2.c: Likewise.\n+\t* gcc.target/powerpc/sse2-pslldq-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-psrld-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-psrld-2.c: Likewise.\n+\t* gcc.target/powerpc/sse2-psrldq-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-psubusb-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-sqrtpd-1.c: Likewise.\n+\t* gcc.target/powerpc/sse2-subsd-1.c: Likewise.\n \n 2018-10-26  Paul A. Clarke  <pc@us.ibm.com>\n \n@@ -4238,7 +4238,7 @@\n \t(__builtin_ia32_vfnmaddps512_maskz): Likewise.\n \t(__builtin_ia32_vfnmsubpd512_maskz): Likewise.\n \t(__builtin_ia32_vfnmsubps512_maskz): Likewise.\n-\t* testsuite/gcc.target/i386/sse-13.c\n+\t* gcc.target/i386/sse-13.c\n \t(__builtin_ia32_vfmsubpd512_mask): Likewise.\n \t(__builtin_ia32_vfmsubpd512_maskz): Likewise.\n \t(__builtin_ia32_vfmsubps512_mask): Likewise.\n@@ -4249,7 +4249,7 @@\n \t(__builtin_ia32_vfnmaddps512_maskz): Likewise.\n \t(__builtin_ia32_vfnmsubpd512_maskz): Likewise.\n \t(__builtin_ia32_vfnmsubps512_maskz): Likewise.\n-\t* testsuite/gcc.target/i386/sse-23.c\n+\t* gcc.target/i386/sse-23.c\n \t(__builtin_ia32_vfmsubpd512_mask): Likewise.\n \t(__builtin_ia32_vfmsubpd512_maskz): Likewise.\n \t(__builtin_ia32_vfmsubps512_mask): Likewise.\n@@ -5133,7 +5133,7 @@\n \t* gcc.dg/stack-check-12.c: ILP32 fixup.\n \t* gcc.dg/stack-check-5.c: Add AArch64 specific checks.\n \t* gcc.dg/stack-check-6a.c: Skip on AArch64, we don't support this.\n-\t* testsuite/lib/target-supports.exp\n+\t* lib/target-supports.exp\n \t(check_effective_target_frame_pointer_for_non_leaf): AArch64 does not\n \trequire frame pointer for non-leaf functions.\n \n@@ -6348,9 +6348,9 @@\n 2018-08-30  Qing Zhao  <qing.zhao@oracle.com>\n \n \tPR testsuite/86519\n-\tgcc.dg/strcmpopt_6.c: Remove.\n-\tgcc.target/aarch64/strcmpopt_6.c: New testcase.\n-\tgcc.target/i386/strcmpopt_6.c: Likewise.\n+\t* gcc.dg/strcmpopt_6.c: Remove.\n+\t* gcc.target/aarch64/strcmpopt_6.c: New testcase.\n+\t* gcc.target/i386/strcmpopt_6.c: Likewise.\n \n 2018-08-30  Richard Biener  <rguenther@suse.de>\n \n@@ -6359,7 +6359,7 @@\n \n 2018-08-30  Tamar Christina  <tamar.christina@arm.com>\n \n- \t* gcc.target/aarch64/large_struct_copy_2.c: New.\n+\t* gcc.target/aarch64/large_struct_copy_2.c: New.\n \n 2018-08-29  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n "}, {"sha": "76a60eaf1ead7f7ad8e9f1d60265c8d2e6428df3", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-pr82855.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr82855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd376fa7bd4cdbbcb92adfb59d17cb65f157503/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr82855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr82855.c?ref=5dd376fa7bd4cdbbcb92adfb59d17cb65f157503", "patch": "@@ -1,7 +1,7 @@\n /* PR target/82855 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mavx512vl -mavx512dq\" } */\n-/* { dg-final { scan-assembler {\\mktestb\\M} } } */\n+/* { dg-final { scan-assembler {\\mkortestb\\M} } } */\n \n #include <immintrin.h>\n "}]}