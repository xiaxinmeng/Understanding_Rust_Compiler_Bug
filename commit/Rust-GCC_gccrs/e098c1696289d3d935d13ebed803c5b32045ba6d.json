{"sha": "e098c1696289d3d935d13ebed803c5b32045ba6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA5OGMxNjk2Mjg5ZDNkOTM1ZDEzZWJlZDgwM2M1YjMyMDQ1YmE2ZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2012-07-12T21:14:14Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-07-12T21:14:14Z"}, "message": "re PR rtl-optimization/53176 (gcc.dg/lower-subreg-1.c FAILs)\n\n\tPR rtl-optimization/53176\n\t* rtlanal.c (rtx_cost): Adjust default cost for X with a\n\tUNITS_PER_WORD factor for all X according to the size of\n\tits mode, not just for SUBREGs with untieable modes.\n\tHandle SET.  Use factor * factor for MULT, DIV, UDIV,\n\tMOD, UMOD.\n\nFrom-SVN: r189441", "tree": {"sha": "dc588155e6de500b6c1e343812291707762bbd90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc588155e6de500b6c1e343812291707762bbd90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e098c1696289d3d935d13ebed803c5b32045ba6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e098c1696289d3d935d13ebed803c5b32045ba6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e098c1696289d3d935d13ebed803c5b32045ba6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e098c1696289d3d935d13ebed803c5b32045ba6d/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c15b4b04f81d00c916aeb7a5ba186722d4a4b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c15b4b04f81d00c916aeb7a5ba186722d4a4b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c15b4b04f81d00c916aeb7a5ba186722d4a4b2d"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "e5637bfb274809d7052ad53521fe8da22ca278e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e098c1696289d3d935d13ebed803c5b32045ba6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e098c1696289d3d935d13ebed803c5b32045ba6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e098c1696289d3d935d13ebed803c5b32045ba6d", "patch": "@@ -1,3 +1,12 @@\n+2012-07-12  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR rtl-optimization/53176\n+\t* rtlanal.c (rtx_cost): Adjust default cost for X with a\n+\tUNITS_PER_WORD factor for all X according to the size of\n+\tits mode, not just for SUBREGs with untieable modes.\n+\tHandle SET.  Use factor * factor for MULT, DIV, UDIV,\n+\tMOD, UMOD.\n+\n 2012-07-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (QImode and HImode cmove splitters): Merge"}, {"sha": "8f52e4f9db4b04d27253bbe6e2d64d9c3b61d577", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e098c1696289d3d935d13ebed803c5b32045ba6d/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e098c1696289d3d935d13ebed803c5b32045ba6d/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=e098c1696289d3d935d13ebed803c5b32045ba6d", "patch": "@@ -3755,31 +3755,49 @@ rtx_cost (rtx x, enum rtx_code outer_code, int opno, bool speed)\n   enum rtx_code code;\n   const char *fmt;\n   int total;\n+  int factor;\n \n   if (x == 0)\n     return 0;\n \n+  /* A size N times larger than UNITS_PER_WORD likely needs N times as\n+     many insns, taking N times as long.  */\n+  factor = GET_MODE_SIZE (GET_MODE (x)) / UNITS_PER_WORD;\n+  if (factor == 0)\n+    factor = 1;\n+\n   /* Compute the default costs of certain things.\n      Note that targetm.rtx_costs can override the defaults.  */\n \n   code = GET_CODE (x);\n   switch (code)\n     {\n     case MULT:\n-      total = COSTS_N_INSNS (5);\n+      /* Multiplication has time-complexity O(N*N), where N is the\n+\t number of units (translated from digits) when using\n+\t schoolbook long multiplication.  */\n+      total = factor * factor * COSTS_N_INSNS (5);\n       break;\n     case DIV:\n     case UDIV:\n     case MOD:\n     case UMOD:\n-      total = COSTS_N_INSNS (7);\n+      /* Similarly, complexity for schoolbook long division.  */\n+      total = factor * factor * COSTS_N_INSNS (7);\n       break;\n     case USE:\n       /* Used in combine.c as a marker.  */\n       total = 0;\n       break;\n+    case SET:\n+      /* A SET doesn't have a mode, so let's look at the SET_DEST to get\n+\t the mode for the factor.  */\n+      factor = GET_MODE_SIZE (GET_MODE (SET_DEST (x))) / UNITS_PER_WORD;\n+      if (factor == 0)\n+\tfactor = 1;\n+      /* Pass through.  */\n     default:\n-      total = COSTS_N_INSNS (1);\n+      total = factor * COSTS_N_INSNS (1);\n     }\n \n   switch (code)\n@@ -3792,8 +3810,7 @@ rtx_cost (rtx x, enum rtx_code outer_code, int opno, bool speed)\n       /* If we can't tie these modes, make this expensive.  The larger\n \t the mode, the more expensive it is.  */\n       if (! MODES_TIEABLE_P (GET_MODE (x), GET_MODE (SUBREG_REG (x))))\n-\treturn COSTS_N_INSNS (2\n-\t\t\t      + GET_MODE_SIZE (GET_MODE (x)) / UNITS_PER_WORD);\n+\treturn COSTS_N_INSNS (2 + factor);\n       break;\n \n     default:"}]}