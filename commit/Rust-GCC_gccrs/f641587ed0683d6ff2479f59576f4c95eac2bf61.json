{"sha": "f641587ed0683d6ff2479f59576f4c95eac2bf61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY0MTU4N2VkMDY4M2Q2ZmYyNDc5ZjU5NTc2ZjRjOTVlYWMyYmY2MQ==", "commit": {"author": {"name": "Nala Ginrut", "email": "mulei@gnu.org", "date": "2020-05-20T16:59:18Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:14Z"}, "message": "Remove scoping in TypeResolution destructor", "tree": {"sha": "604866f80e448f86c123db1fcf0cbf4194e3cb12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/604866f80e448f86c123db1fcf0cbf4194e3cb12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f641587ed0683d6ff2479f59576f4c95eac2bf61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f641587ed0683d6ff2479f59576f4c95eac2bf61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f641587ed0683d6ff2479f59576f4c95eac2bf61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f641587ed0683d6ff2479f59576f4c95eac2bf61/comments", "author": {"login": "NalaGinrut", "id": 19734, "node_id": "MDQ6VXNlcjE5NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/19734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NalaGinrut", "html_url": "https://github.com/NalaGinrut", "followers_url": "https://api.github.com/users/NalaGinrut/followers", "following_url": "https://api.github.com/users/NalaGinrut/following{/other_user}", "gists_url": "https://api.github.com/users/NalaGinrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/NalaGinrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NalaGinrut/subscriptions", "organizations_url": "https://api.github.com/users/NalaGinrut/orgs", "repos_url": "https://api.github.com/users/NalaGinrut/repos", "events_url": "https://api.github.com/users/NalaGinrut/events{/privacy}", "received_events_url": "https://api.github.com/users/NalaGinrut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "323caf74be53f9ce14b407b19b3a40ab15eec70f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323caf74be53f9ce14b407b19b3a40ab15eec70f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323caf74be53f9ce14b407b19b3a40ab15eec70f"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "f79da50dcda3b76ec1f545432de4ccab886e5711", "filename": "gcc/rust/analysis/rust-type-resolution.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f641587ed0683d6ff2479f59576f4c95eac2bf61/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f641587ed0683d6ff2479f59576f4c95eac2bf61/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc?ref=f641587ed0683d6ff2479f59576f4c95eac2bf61", "patch": "@@ -43,12 +43,7 @@ TypeResolution::TypeResolution (AST::Crate &crate, TopLevelScan &toplevel)\n   ADD_BUILTIN_TYPE (\"bool\", typeScope);\n }\n \n-TypeResolution::~TypeResolution ()\n-{\n-  functionScope.Pop ();\n-  typeScope.Pop ();\n-  scope.Pop ();\n-}\n+TypeResolution::~TypeResolution () { functionScope.Pop (); }\n \n bool\n TypeResolution::Resolve (AST::Crate &crate, TopLevelScan &toplevel)"}]}