{"sha": "980c394cc794bc96e13ebcaa756573f3bd729681", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwYzM5NGNjNzk0YmM5NmUxM2ViY2FhNzU2NTczZjNiZDcyOTY4MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-06-04T01:31:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-06-04T01:31:42Z"}, "message": "* except.c (build_throw): Check throw expression validity.\n\nFrom-SVN: r27344", "tree": {"sha": "bcbad958465b29e18aa00a18d2b03df521b66066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcbad958465b29e18aa00a18d2b03df521b66066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/980c394cc794bc96e13ebcaa756573f3bd729681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980c394cc794bc96e13ebcaa756573f3bd729681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980c394cc794bc96e13ebcaa756573f3bd729681", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980c394cc794bc96e13ebcaa756573f3bd729681/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4469640cbdb360e7ab33b3b49b892160951557c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4469640cbdb360e7ab33b3b49b892160951557c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4469640cbdb360e7ab33b3b49b892160951557c8"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "d59db6bf0fa2b8f0171b203e7e4202ae9732968e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -1,3 +1,7 @@\n+1999-06-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* except.c (build_throw): Check throw expression validity.\n+\n 1999-06-03  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (grokdeclarator): Don't treat arbitrary types as unsigned"}, {"sha": "5bdbd8c979bee07801a8c8aa55eb47e71f9b33a4", "filename": "gcc/cp/except.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -1152,6 +1152,30 @@ build_throw (e)\n \n   if (e == null_node)\n     cp_warning (\"throwing NULL, which has integral, not pointer type\");\n+  \n+  if (e != NULL_TREE)\n+    {\n+      tree core;\n+      int is_ptr;\n+      \n+      /* Cannot throw an incomplete type. */\n+      e = require_complete_type (e);\n+      if (e == error_mark_node)\n+        return e;\n+      \n+      /* Or a pointer or ref to one, other than cv void *.  */\n+      core = TREE_TYPE (e);\n+      is_ptr = TREE_CODE (core) == POINTER_TYPE;\n+      if (is_ptr || TREE_CODE (core) == REFERENCE_TYPE)\n+        {\n+          core = TREE_TYPE (core);\n+      \n+          if (is_ptr && same_type_p (TYPE_MAIN_VARIANT (core), void_type_node))\n+            /* OK */;\n+          else if (!complete_type_or_else (core, NULL_TREE))\n+            return error_mark_node;\n+        }\n+    }\n \n   e = build1 (THROW_EXPR, void_type_node, e);\n   TREE_SIDE_EFFECTS (e) = 1;"}, {"sha": "ef6d2dc77e1e6730dae39ae4d11cb32f35d311dc", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eh990323-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-1.C?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -17,7 +17,7 @@ template <class T> void ff(T)\n {\n }\n \n-void g(void)\n+void g(int)\n {\n }\n "}, {"sha": "06112d257c5625b216ee9cb5bf87fb50ae73a13e", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-1.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -1,7 +1,9 @@\n+// Build don't link:\n+\n //test 2\n struct A {};\n void f()\n {\n-        struct A;\n-        throw *(new A);\n+        struct A; // ERROR - forward ref\n+        throw *(new A); // ERROR - invalid use of undefined type\n }"}, {"sha": "0686ee5748d9e15068aa3f08153f57949cf4c87e", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -25,7 +25,7 @@ void f4()\n \tthrow A<double, 47, A<int, 36, short> > (\"hi michey\");\n }\n \n-main()\n+int main()\n {\n \tint flag;\n "}, {"sha": "842e6478f5bb1ac1093c179b1b7eadfa6b90311b", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-3.C?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -1,3 +1,4 @@\n+// Build don't link:\n // try throwing overloaded function\n \n void f(int)\n@@ -10,5 +11,5 @@ void f(long)\n \n void g()\n {\n-\tthrow &f;\n+\tthrow &f; // ERROR - insufficient contextual information\n }"}, {"sha": "7f3f20ef92d8f6e7a27942e4c7b00b594db693c4", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-4.C?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -1,3 +1,4 @@\n+// Build don't link:\n // try throwing template function name\n \n template <class T> void f(T);\n@@ -8,5 +9,5 @@ template <class T> void f(T)\n \n void g()\n {\n-\tthrow &f;\n+\tthrow &f; // ERROR - insufficient contextual information\n }"}, {"sha": "45225e3f0ceda1ee8675c351dcbd9bb745e10ac8", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980c394cc794bc96e13ebcaa756573f3bd729681/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-5.C?ref=980c394cc794bc96e13ebcaa756573f3bd729681", "patch": "@@ -1,3 +1,4 @@\n+// Build don't link:\n // check attempting to throw an overloaded function\n \n struct A {\n@@ -7,5 +8,5 @@ struct A {\n \n void g()\n {\n-\tthrow &A::f;\n+\tthrow &A::f; // ERROR - insufficient context\n }"}]}