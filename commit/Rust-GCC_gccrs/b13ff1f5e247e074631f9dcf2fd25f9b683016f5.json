{"sha": "b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEzZmYxZjVlMjQ3ZTA3NDYzMWY5ZGNmMmZkMjVmOWI2ODMwMTZmNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-11T12:52:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-11T12:52:44Z"}, "message": "re PR debug/77931 (PASS->FAIL: gdb.cp/namespace.exp: print ina)\n\n2016-10-11  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/77931\n\t* gimple-low.c (lower_gimple_bind): Handle arbitrary common\n\tsub-chains of BLOCK_VARS and gimple_bind_vars.\n\nFrom-SVN: r240991", "tree": {"sha": "7b929b3c56ec12c21fddad7dfe7a765a29a5f39c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b929b3c56ec12c21fddad7dfe7a765a29a5f39c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13ff1f5e247e074631f9dcf2fd25f9b683016f5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d0eabee39af26125889437d3b796c6c2e68449f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0eabee39af26125889437d3b796c6c2e68449f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d0eabee39af26125889437d3b796c6c2e68449f"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "03c5fa570efc1e51d9d900f5f0b36964314d2036", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13ff1f5e247e074631f9dcf2fd25f9b683016f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13ff1f5e247e074631f9dcf2fd25f9b683016f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "patch": "@@ -1,3 +1,9 @@\n+2016-10-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/77931\n+\t* gimple-low.c (lower_gimple_bind): Handle arbitrary common\n+\tsub-chains of BLOCK_VARS and gimple_bind_vars.\n+\n 2016-10-11  Venkataramanan Kumar  <Venkataramanan.kumar@amd.com>\n \n \t* config/i386/znver1.md : Fix imov/imovx load type reservations."}, {"sha": "64752b67b86b3d01df5f5661e4666df98b7b91d1", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13ff1f5e247e074631f9dcf2fd25f9b683016f5/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13ff1f5e247e074631f9dcf2fd25f9b683016f5/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "patch": "@@ -420,18 +420,21 @@ lower_gimple_bind (gimple_stmt_iterator *gsi, struct lower_data *data)\n   /* Scrap DECL_CHAIN up to BLOCK_VARS to ease GC after we no longer\n      need gimple_bind_vars.  */\n   tree next;\n-  tree end = NULL_TREE;\n+  /* BLOCK_VARS and gimple_bind_vars share a common sub-chain.  Find\n+     it by marking all BLOCK_VARS.  */\n   if (gimple_bind_block (stmt))\n-    end = BLOCK_VARS (gimple_bind_block (stmt));\n-  for (tree var = gimple_bind_vars (stmt); var != end; var = next)\n+    for (tree t = BLOCK_VARS (gimple_bind_block (stmt)); t; t = DECL_CHAIN (t))\n+      TREE_VISITED (t) = 1;\n+  for (tree var = gimple_bind_vars (stmt);\n+       var && ! TREE_VISITED (var); var = next)\n     {\n-      /* Ugh, something is violating the constraint that BLOCK_VARS\n-         is a sub-chain of gimple_bind_vars.  */\n-      if (! var)\n-\tbreak;\n       next = DECL_CHAIN (var);\n       DECL_CHAIN (var) = NULL_TREE;\n     }\n+  /* Unmark BLOCK_VARS.  */\n+  if (gimple_bind_block (stmt))\n+    for (tree t = BLOCK_VARS (gimple_bind_block (stmt)); t; t = DECL_CHAIN (t))\n+      TREE_VISITED (t) = 0;\n \n   lower_sequence (gimple_bind_body_ptr (stmt), data);\n "}]}