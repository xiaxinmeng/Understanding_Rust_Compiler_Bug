{"sha": "c7a918f192a9ab425d2531e15e36bf80fac17ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhOTE4ZjE5MmE5YWI0MjVkMjUzMWUxNWUzNmJmODBmYWMxN2VmOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-10-26T20:30:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-10-26T20:30:35Z"}, "message": "re PR c++/55081 (Non-optimized static array elements initialization)\n\n\tPR c++/55081\n\t* typeck2.c (store_init_value): Call fold_non_dependent_expr\n\tand maybe_constant_init even for C++98.\n\n\t* g++.dg/opt/pr55081.C: New test.\n\nFrom-SVN: r192862", "tree": {"sha": "89d72c8e65e639e19213af9f210318c7176ab5a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89d72c8e65e639e19213af9f210318c7176ab5a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7a918f192a9ab425d2531e15e36bf80fac17ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a918f192a9ab425d2531e15e36bf80fac17ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a918f192a9ab425d2531e15e36bf80fac17ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a918f192a9ab425d2531e15e36bf80fac17ef8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73f4149137364da5b6d1238720b7fc21226b5b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f4149137364da5b6d1238720b7fc21226b5b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f4149137364da5b6d1238720b7fc21226b5b27"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "86050dafde3317b9257cba4972883df5c19b2699", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c7a918f192a9ab425d2531e15e36bf80fac17ef8", "patch": "@@ -1,3 +1,9 @@\n+2012-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/55081\n+\t* typeck2.c (store_init_value): Call fold_non_dependent_expr\n+\tand maybe_constant_init even for C++98.\n+\n 2012-10-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54984"}, {"sha": "3478886dea1c6391b83fcd5687ac25db0fc9b3f7", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=c7a918f192a9ab425d2531e15e36bf80fac17ef8", "patch": "@@ -709,11 +709,9 @@ store_init_value (tree decl, tree init, VEC(tree,gc)** cleanups, int flags)\n \n   /* In C++0x constant expression is a semantic, not syntactic, property.\n      In C++98, make sure that what we thought was a constant expression at\n-     template definition time is still constant.  */\n-  if ((cxx_dialect >= cxx0x\n-       || DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl))\n-      && (decl_maybe_constant_var_p (decl)\n-\t  || TREE_STATIC (decl)))\n+     template definition time is still constant and otherwise perform this\n+     as optimization, e.g. to fold SIZEOF_EXPRs in the initializer.  */\n+  if (decl_maybe_constant_var_p (decl) || TREE_STATIC (decl))\n     {\n       bool const_init;\n       value = fold_non_dependent_expr (value);"}, {"sha": "90946d29b12510b1fa1a2e4425b6289653559ca1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7a918f192a9ab425d2531e15e36bf80fac17ef8", "patch": "@@ -1,5 +1,8 @@\n 2012-10-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/55081\n+\t* g++.dg/opt/pr55081.C: New test.\n+\n \tPR debug/54970\n \tPR debug/54971\n \t* gcc.dg/guality/pr54970.c: New test."}, {"sha": "b4f533e5a7321ee0adfb141a014fceb452fa12a5", "filename": "gcc/testsuite/g++.dg/opt/pr55081.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr55081.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a918f192a9ab425d2531e15e36bf80fac17ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr55081.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr55081.C?ref=c7a918f192a9ab425d2531e15e36bf80fac17ef8", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/55081\n+// { dg-do compile }\n+\n+struct R { int field; } r;\n+\n+__UINTPTR_TYPE__ *\n+foo ()\n+{\n+  static __UINTPTR_TYPE__ array[] = {\n+    sizeof (char),\n+    (reinterpret_cast <__UINTPTR_TYPE__>(&r.field)\n+     - reinterpret_cast <__UINTPTR_TYPE__>(&r)) + 1\n+  };\n+  return array;\n+}\n+\n+// { dg-final { scan-assembler-not \"_ZGVZ3foovE5array\" } }"}]}