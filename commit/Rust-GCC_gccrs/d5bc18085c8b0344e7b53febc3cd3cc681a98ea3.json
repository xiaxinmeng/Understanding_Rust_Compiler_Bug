{"sha": "d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDViYzE4MDg1YzhiMDM0NGU3YjUzZmViYzNjZDNjYzY4MWE5OGVhMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-08T09:29:02Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2020-01-08T09:29:02Z"}, "message": "arm: Fix rmprofile multilibs when architecture includes +mp or +sec (PR target/93188)\n\nWhen only the rmprofile multilibs are built, compiling for armv7-a\nshould select the generic v7 multilibs.  This used to work before +sec\nand +mp were added to the architecture options but it was broken by\nthat update.  This patch fixes those variants and adds some tests to\nensure that they remain fixed ;-)\n\n\tPR target/93188\n\t* config/arm/t-multilib (MULTILIB_MATCHES): Add rules to match\n\tarmv7-a{+mp,+sec,+mp+sec} to appropriate armv7 multilib variants\n\twhen only building rm-profile multilibs.\n\n\t* gcc.target/arm/multilib.exp: Add new tests for rm-profile only.\n\nFrom-SVN: r279993", "tree": {"sha": "062bb27ce4d50748909a6f61c238e45b508437a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/062bb27ce4d50748909a6f61c238e45b508437a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/comments", "author": null, "committer": null, "parents": [{"sha": "54b0c0f0e9786d66a4a3202aa389d92680f02614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b0c0f0e9786d66a4a3202aa389d92680f02614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b0c0f0e9786d66a4a3202aa389d92680f02614"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "b94fb86dc30f4effaf433ac1f57bff4450c76154", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "patch": "@@ -1,3 +1,10 @@\n+2020-01-08  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/93188\n+\t* config/arm/t-multilib (MULTILIB_MATCHES): Add rules to match\n+\tarmv7-a{+mp,+sec,+mp+sec} to appropriate armv7 multilib variants\n+\twhen only building rm-profile multilibs.\n+\n 2020-01-08  Feng Xue  <fxue@os.amperecomputing.com>\n \n \tPR ipa/93084"}, {"sha": "399343604f0ddf41ff1a07f23c47588c735525d9", "filename": "gcc/config/arm/t-multilib", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "patch": "@@ -133,10 +133,19 @@ MULTILIB_MATCHES\t+= march?armv7-r+fp.sp=march?armv8-r+crc+fp.sp\n \n ifeq (,$(HAS_APROFILE))\n # Map all v7-a\n+\n MULTILIB_MATCHES\t+= march?armv7=march?armv7-a\n+\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v7_a_arch_variants), \\\n+\t\t\t     march?armv7=march?armv7-a$(ARCH))\n+\n MULTILIB_MATCHES\t+= $(foreach ARCH, $(v7_a_nosimd_variants) $(v7_a_simd_variants), \\\n \t\t\t     march?armv7+fp=march?armv7-a$(ARCH))\n \n+MULTILIB_MATCHES\t+= $(foreach ARCHVAR, $(v7_a_arch_variants), \\\n+\t\t\t     $(foreach ARCH, $(v7_a_nosimd_variants) $(v7_a_simd_variants), \\\n+\t\t\t       march?armv7+fp=march?armv7-a$(ARCHVAR)$(ARCH)))\n+\n MULTILIB_MATCHES\t+= march?armv7=march?armv7ve\n \n # ARMv7ve FP/SIMD variants: map down to v7+fp"}, {"sha": "cb3c430510cbf00eabd39d6f73c8595fe511d744", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/93188\n+\t* gcc.target/arm/multilib.exp: Add new tests for rm-profile only.\n+\n 2020-01-08  Feng Xue  <fxue@os.amperecomputing.com>\n \n \tPR ipa/93084"}, {"sha": "e83d1da261b9c638f4db531df5ce2410100c762f", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5bc18085c8b0344e7b53febc3cd3cc681a98ea3/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=d5bc18085c8b0344e7b53febc3cd3cc681a98ea3", "patch": "@@ -442,6 +442,22 @@ if {[multilib_config \"aprofile\"] } {\n \tcheck_multi_dir $opts $dir\n     }\n }\n+if {[multilib_config \"rmprofile\"] && ![multilib_config \"aprofile\"]} {\n+    foreach {opts dir} {\n+\t{-mcpu=cortex-a9 -mfpu=auto -mfloat-abi=soft} \"thumb/v7/nofp\"\n+\t{-mcpu=cortex-a8 -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-a+fp -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-march=armv7-a+fp -mfpu=auto -mfloat-abi=soft} \"thumb/v7/nofp\"\n+\t{-march=armv7-a+mp+simd -mfpu=auto -mfloat-abi=softfp} \"thumb/v7+fp/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv4 -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-a+fp -mfpu=auto -mfloat-abi=hard} \"thumb/v7+fp/hard\"\n+\t{-march=armv7-a -mfpu=vfpv4 -mfloat-abi=soft} \"thumb/v7/nofp\"\n+    } {\n+\tcheck_multi_dir $opts $dir\n+    }\n+}\n if {[multilib_config \"rmprofile\"] } {\n     foreach {opts dir} {\n \t{-mcpu=cortex-m0 -mfpu=auto -mfloat-abi=soft} \"thumb/v6-m/nofp\""}]}