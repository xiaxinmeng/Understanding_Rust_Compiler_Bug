{"sha": "9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk1M2I1ZTFmNzQ5MGNjYjRmZDliZjZhZjhiOWNlM2E3YTczNTg2OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2004-05-05T20:17:08Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-05-05T20:17:08Z"}, "message": "re PR target/15290 (__float128 failed to pass to function properly)\n\n2004-05-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/15290\n\t* config/i386/i386.c (ix86_split_to_parts): Use real_to_target\n\tinstead of REAL_VALUE_TO_TARGET_LONG_DOUBLE.\n\nFrom-SVN: r81537", "tree": {"sha": "8ecffb61ae0700b067cedec8f6f6dd5159c367ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ecffb61ae0700b067cedec8f6f6dd5159c367ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3c287c9f3141a97a75ea54ca9d99d940765d831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c287c9f3141a97a75ea54ca9d99d940765d831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c287c9f3141a97a75ea54ca9d99d940765d831"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "975882bfe54a2f5c7d5177b6529569b265f1b136", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869", "patch": "@@ -1,3 +1,9 @@\n+2004-05-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/15290\n+\t* config/i386/i386.c (ix86_split_to_parts): Use real_to_target\n+\tinstead of REAL_VALUE_TO_TARGET_LONG_DOUBLE.\n+\n 2004-05-05  Mike Stump  <mrs@apple.com>\n \n \t* config/darwin-c.c (add_framework): Copy the directory name as it"}, {"sha": "2890d04f5dbecb9c19718f1e1834110fc3392684", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9953b5e1f7490ccb4fd9bf6af8b9ce3a7a735869", "patch": "@@ -10636,7 +10636,7 @@ ix86_split_to_parts (rtx operand, rtx *parts, enum machine_mode mode)\n \t      long l[3];\n \n \t      REAL_VALUE_FROM_CONST_DOUBLE (r, operand);\n-\t      REAL_VALUE_TO_TARGET_LONG_DOUBLE (r, l);\n+\t      real_to_target (l, &r, mode);\n \t      /* Do not use shift by 32 to avoid warning on 32bit systems.  */\n \t      if (HOST_BITS_PER_WIDE_INT >= 64)\n \t        parts[0]"}]}