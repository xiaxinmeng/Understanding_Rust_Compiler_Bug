{"sha": "4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY1MWM2ZTdjYTE3ZTI5YWQxNmMxZDM0NmQyNmZhMTZlMTZkZjNhZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-15T16:25:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-15T16:25:14Z"}, "message": "resync.\n\nFrom-SVN: r96514", "tree": {"sha": "e06c0b931e8a8204a35403555952c3a96d98af33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e06c0b931e8a8204a35403555952c3a96d98af33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad/comments", "author": null, "committer": null, "parents": [{"sha": "0f1b0456bf6e3dac6d1c3045327455c1115790bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1b0456bf6e3dac6d1c3045327455c1115790bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1b0456bf6e3dac6d1c3045327455c1115790bd"}], "stats": {"total": 765, "additions": 764, "deletions": 1}, "files": [{"sha": "fff1d35d6b058e66692d0259141f9aa9ee7e9853", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 764, "deletions": 1, "changes": 765, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4f51c6e7ca17e29ad16c1d346d26fa16e16df3ad", "patch": "@@ -1,8 +1,771 @@\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* system-unixware.ads, system-linux-ia64.ads, system-freebsd-x86.ads,\n+\tsystem-lynxos-ppc.ads, system-lynxos-x86.ads, system-linux-x86_64.ads,\n+\tsystem-tru64.ads, system-aix.ads, system-vxworks-sparcv9.ads,\n+\tsystem-vxworks-xscale.ads, system-solaris-x86.ads, system-irix-o32.ads,\n+\tsystem-irix-n32.ads, system-hpux.ads, system-vxworks-m68k.ads,\n+\tsystem-linux-x86.ads, system-vxworks-mips.ads, system-os2.ads,\n+\tsystem-interix.ads, system-solaris-sparc.ads,\n+\tsystem-solaris-sparcv9.ads, system-vms.ads, system-mingw.ads,\n+\tsystem-vms-zcx.ads, system-vxworks-ppc.ads, system-vxworks-alpha.ads,\n+\tsystem-vms_64.ads, system-darwin-ppc.ads, system-vxworks-x86.ads,\n+\tsystem-linux-ppc.ads, system-linux-alpha.ads, system-linux-sparc.ads,\n+\tsystem-linux-s390.ads, system-linux-s390x.ads: Add line defining\n+\tCompiler_System_Version to be False.\n+\n+\t* opt.ads: Add new flag Opt.Address_Is_Private\n+\n+\t* targparm.ads, targparm.adb: Set new flag Opt.Address_Is_Private\n+\tAdd new parameter Compiler_System_Version to avoid checking for\n+\tcompleteness of parameters when compiler is compiling itself.\n+\tAllows old versions of GNAT to be compiled with new compiler.\n+\n+2005-03-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* s-osinte-tru64.ads, s-osinte-tru64.adb (Get_Stack_Base): New function\n+\t(Hide_Yellow_Zone): New procedure to hide the Yellow Zone of the\n+\tcalling thread.\n+\t(Stack_Base_Available): New flag.\n+\t(Get_Page_Size): New overloaded functions imported from C.\n+\t(PROT_NONE, PROT_READ, PROT_WRITE, PROT_EXEC, PROT_ALL,\n+\tPROT_ON, PROT_OFF): New constants.\n+\t(mprotect): New function imported from C.\n+\t(pthread_teb_t): New record type.\n+\n+\t* s-taprop-tru64.adb: (Enter_Task): Invoke Hide_Yellow_Zone.\n+\t(Create_Task): Account for the Yellow Zone and the guard page.\n+\n+2005-03-15  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib-tgt-tru64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb,\n+\tmlib-tgt-hpux.adb, mlib-tgt-linux.adb, mlib-tgt-solaris.adb,\n+\tmlib-tgt-vms-alpha.adb, mlib-tgt-vms-ia64.adb, mlib-tgt-mingw.adb,\n+\tmlib-tgt-vxworks.adb, mlib-tgt-lynxos.adb (Library_Exist_For,\n+\tLibrary_File_Name_For): Add new parameter In_Tree\n+\tto specify the project tree: needed by the project manager.\n+\tAdapt to changes in project manager using new parameter In_Tree.\n+\tRemove local imports, use functions in System.CRTL.\n+\n+\t* make.adb, clean.adb, gnatcmd.adb (Project_Tree): New constant needed\n+\tto use the project manager.\n+\n+\t* makeutl.ads, makeutl.adb (Linker_Options_Switches): New parameter\n+\tIn_Tree to designate the project tree. Adapt to changes in the project\n+\tmanager, using In_Tree.\n+\n+\t* mlib-prj.ads, mlib-prj.adb (Build_Library, Check_Library,\n+\tCopy_Interface_Sources): Add new parameter In_Tree to specify the\n+\tproject tree: needed by the project manager.\n+\t(Build_Library): Check that Arg'Length >= 6 before checking if it\n+\tcontains \"--RTS=...\".\n+\n+\t* mlib-tgt.ads, mlib-tgt.adb (Library_Exist_For,\n+\tLibrary_File_Name_For): Add new parameter In_Tree to specify the\n+\tproject tree: needed by the project manager.\n+\n+\t* prj.ads, prj.adb: Major modifications to allow several project trees\n+\tin memory at the same time.\n+\tChange tables to dynamic tables and hash tables to dynamic hash\n+\ttables. Move tables and hash tables from Prj.Com (in the visible part)\n+\tand Prj.Env (in the private part). Move some constants from the visible\n+\tpart to the private part. Make other constants deferred.\n+\t(Project_Empty): Make it a variable, not a function\n+\t(Empty_Project): Add parameter Tree. Returns the data with the default\n+\tnaming data of the project tree Tree.\n+\t(Initialize): After updating Std_Naming_Data, copy its value to the\n+\tcomponent Naming of Project Empty.\n+\t(Register_Default_Naming_Scheme): Use and update the default naming\n+\tcomponent of the project tree, instead of the global variable\n+\tStd_Naming_Data.\n+\t(Standard_Naming_Data): Add defaulted parameter Tree. If project tree\n+\tTree is not defaulted, return the default naming data of the Tree.\n+\t(Initial_Buffer_Size): Constant moved from private part\n+\t(Default_Ada_Spec_Suffix_Id, Default_Ada_Body_Suffix_Id, Slash_Id); new\n+\tvariables initialized in procedure Initialize.\n+\t(Add_To_Buffer): Add two in out parameters to replace global variables\n+\tBuffer and Buffer_Last.\n+\t(Default_Ada_Spec_Suffix, Default_Body_Spec_Suffix, Slash): New\n+\tfunctions.\n+\tAdapt to changes to use new type Project_Tree_Ref and dynamic tables and\n+\thash tables.\n+\t(Initialize, Reset, register-Default_Namng-Scheme): Add a new parameter\n+\tfor the project tree.\n+\t(Project_Tree_Data, Project_Tree_Ref, No_Project): Declare types and\n+\tconstant at the beginning of the package spec, so that they cane be used\n+\tin subprograms before their full declarations.\n+\t(Standard_Naming_Data): Add defaulted parameter of type Project_Node_Ref\n+\t(Empty_Project): Add parameter of type Project_Node_Ref\n+\t(Private_Project_Tree_Data): Add component Default_Naming of type\n+\tNaming_Data.\n+\t(Buffer, Buffer_Last): remove global variables\n+\t(Add_To_Buffer): Add two in out parameters to replace global variables\n+\tBuffer and Buffer_Last.\n+\t(Current_Packages_To_Check): Remove global variable\n+\t(Empty_Name): Move to private part\n+\t(No-Symbols): Make it a constant\n+\t(Private_Project_Tree_Data): New type for the private part of the\n+\tproject tree data.\n+\t(Project_Tree_Data): New type for the data of a project tree\n+\t(Project_Tree_Ref): New type to designate a project tree\n+\t(Initialize, Reset, register-Default_Namng-Scheme): Add a new parameter\n+\tfor the project tree.\n+\n+\t* prj-attr.ads: Add with Table; needed, as package Prj no longer\n+\timports package Table.\n+\n+\t* prj-com.adb: Remove empty, no longer needed body\n+\n+\t* prj-com.ads: Move most of the content of this package to package Prj.\n+\n+\t* prj-dect.ads, prj-dect.adb (Parse): New parameters In_Tree to\n+\tdesignate the project node tree and Packages_To_Check to replace\n+\tglobal variable Current_Packages_To_Check.\n+\tAdd new parameters In_Tree and Packages_To_Check to local subprograms,\n+\twhen needed. Adapt to changes in project manager with project node tree\n+\tIn_Tree.\n+\n+\t* prj-env.ads, prj-env.adb: Add new parameter In_Tree to designate the\n+\tproject tree to most subprograms. Move tables and hash tables to\n+\tprivate part of package Prj.\n+\tAdapt to changes in project manager using project tree In_Tree.\n+\n+\t* prj-makr.adb (Tree): New constant to designate the project node tree\n+\tAdapt to change in project manager using project node tree Tree\n+\n+\t* prj-nmsc.ads, prj-nmsc.adb (Check_Stand_Alone_Library): Correctly\n+\tdisplay the Library_Src_Dir and the Library_Dir.\n+\tAdd new parameter In_Tree to designate the project node tree to most\n+\tsubprograms. Adapt to changes in the project manager, using project tree\n+\tIn_Tree.\n+\t(Check_Naming_Scheme): Do not alter the casing on platforms where\n+\tthe casing of file names is not significant.\n+\t(Check): Add new parameter In_Tree to designate the\n+\n+\t* prj-pars.ads, prj-pars.adb (Parse): Add new parameter In_Tree to\n+\tdesignate the project tree.\n+\tDeclare a project node tree to call Prj.Part.Parse and Prj.Proc.Process\n+\n+\t* prj-part.ads, prj-part.adb (Buffer, Buffer_Last): Global variables,\n+\tto replace those that were in the private part of package Prj.\n+\tAdd new parameter In__Tree to designate the project node tree to most\n+\tsubprograms. Adapt to change in Prj.Tree with project node tree In_Tree.\n+\t(Post_Parse_Context_Clause): When specifying the project node of a with\n+\tclause, indicate that it is a limited with only if there is \"limited\"\n+\tin the with clause, not necessarily when In_Limited is True.\n+\t(Parse): Add new parameter In_Tree to designate the project node tree\n+\n+\t* prj-pp.ads, prj-pp.adb (Pretty_Print): Add new parameter In_Tree to\n+\tdesignate the project node tree. Adapt to change in Prj.Tree with\n+\tproject node tree In_Tree.\n+\n+\t* prj-proc.ads, prj-proc.adb (Recursive_Process): Specify the project\n+\ttree In_Tree in the call to function Empty_Process to give its initial\n+\tvalue to the project data Processed_Data.\n+\tAdd new parameters In_Tree to designate the project tree and\n+\tFrom_Project_Node_Tree to designate the project node tree to several\n+\tsubprograms. Adapt to change in project manager with project tree\n+\tIn_Tree and project node tree From_Project_Node_Tree.\n+\n+\t* prj-strt.ads, prj-strt.adb (Buffer, Buffer_Last): Global variables,\n+\tto replace those that were in the private part of package Prj.\n+\tAdd new parameter In_Tree to designate the project node tree to most\n+\tsubprograms. Adapt to change in Prj.Tree with project node tree In_Tree.\n+\n+\t* prj-tree.ads, prj-tree.adb: Add new parameter of type\n+\tProject_Node_Tree_Ref to most subprograms.\n+\tUse this new parameter to store project nodes in the designated project\n+\tnode tree.\n+\t(Project_Node_Tree_Ref): New type to designate a project node tree\n+\t(Tree_Private_Part): Change table to dynamic table and hash tables to\n+\tdynamic hash tables.\n+\n+\t* prj-util.ads, prj-util.adb: Add new parameter In_Tree to designate\n+\tthe project tree to most subprograms. Adapt to changes in project\n+\tmanager using project tree In_Tree.\n+\n+\t* makegpr.adb (Project_Tree): New constant needed to use project\n+\tmanager.\n+\n+2005-03-15  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* s-intman-posix.adb (Notify_Exception): Adjust signature, as handler\n+\tfor sigactions with SA_SIGINFO set. Call\n+\t__gnat_adjust_context_for_raise before raising, to perform the\n+\tpotentially required adjustments to the machine context for the GCC\n+\tunwinder.\n+\n+\t* raise.h (__gnat_adjust_context_for_raise): New prototype.\n+\n+\t* init.c (__gnat_adjust_context_for_raise) HPUX: Initial revision.\n+\tAdjust PC by one in the provided machine context.\n+\t(__gnat_install_handler) HPUX: Set SA_SIGINFO in the sigaction flags,\n+\tso that the handler is passed the context structure to adjust prior to\n+\tthe raise.\n+\t(__gnat_error_handler) HPUX: Adjust the signature to match what an\n+\tSA_SIGINFO sigaction should look like. Call\n+\t__gnat_adjust_context_for_raise before actually raising.\n+\t(__gnat_adjust_context_for_raise): Default noop to help PC\n+\tadjustments before raise from signal handlers.\n+\t(__gnat_error_handler): Indirectly call a predicate function to\n+\tdetermine if a condition should be resignaled or not.\n+\t(__gnat_set_resignal_predicate): User interface to modify the predicate.\n+\t(__gnat_default_resignal_p): Default GNAT predicate.\n+\n+2005-03-15  Doug Rupp  <rupp@adacore.com>\n+\n+\t* adaint.c: Prefix #include of VMS system header files with vms/\n+\t[VMS] (HOST_EXECUTABLE_SUFFIX, HOST_OBJECT_SUFFIX): Define for VMS.\n+\tDo not define a dummy function \"convert_addresses\" under Darwin,\n+\tnot needed.\n+\n+\t* tb-alvms.c, expect.c: Prefix #include of VMS system header files\n+\twith vms/\n+\n+2005-03-15  Nicolas Setton  <setton@adacore.com>\n+\n+\t* tracebak.c: Under Darwin, use the same unwinding mechanisms as under\n+\tPPC/AIX.\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-reatim.ads, a-reatim.adb: Add functions Minutes and Seconds for\n+\tAI-386.\n+\n+\t* a-retide.ads: Minor comment changes\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-stzunb.adb, a-stzunb.adb a-stzunb.ads, a-stzunb.ads,\n+\ta-stwiun.ads, a-stwiun.adb, a-strunb.ads, a-strunb.adb: Move\n+\tRealloc_For_Chunk to private part of package.\n+\tNew subprograms for AI-301\n+\n+\t* a-szuzti.adb, a-suteio.adb, a-swuwti.adb: Improve efficiency of\n+\tGet_Line procedure.\n+\tAvoid unnecessary use of Get/Set_Wide_String\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\tPR ada/13470\n+\n+\t* a-stunau.ads, a-stunau.adb: \n+\tChange interface to allow efficient (and correct) implementation\n+\tThe previous changes to allow extra space in unbounded strings had\n+\tleft this interface a bit broken.\n+\n+\t* a-suteio.adb: Avoid unnecessary use of Get/Set_String\n+\n+\t* g-spipat.ads, g-spipat.adb: New interface for Get_String\n+\tMinor reformatting (function specs)\n+\n+\t* g-spitbo.adb: New interface for Get_String\n+\n+\t* g-spitbo.ads: Minor reformatting\n+\n+\t* a-swunau.ads, a-swunau.adb: New interface for Get_Wide_String\n+\n+\t* a-szunau.ads, a-szunau.adb: New interface for Get_Wide_Wide_String\n+\n+2005-03-15  Javier Miranda  <miranda@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\t    Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* atree.ads, atree.adb: Add support for Elist24 field\n+\n+\t* atree.h: Fix wrong definition of Field27\n+\tAdd support for Elist16 field\n+\tAdd support for Elist24 field\n+\n+\t* einfo.ads, einfo.adb (Abstract_Interfaces,\n+\tSet_Abstract_Interfaces): New subprograms.\n+\t(Abstract_Interface_Alias, Set_Abstract_Interface_Alias): New\n+\tsubprograms.\n+\t(Access_Disp_Table, Set_Access_Disp_Table): Modified to handle a list of\n+\tentities rather than a single node.\n+\t(Is_Interface, Set_Is_Interface): New subprogram\n+\t(First_Tag_Component): New syntesized attribute\n+\t(Next_Tag_Component): New synthesized attribute\n+\t(Write_Entity_Flags): Upgraded to write Is_Interface\n+\t(Write_Field24_Name): Upgraded to write Abstract_Interfaces\n+\t(Write_Field25_Name): Upgraded to write Abstract_Interface_Alias\n+\t(Task_Body_Procedure): New subprogram to read this attribute.\n+\t(Set_Task_Body_Procedure): New subprogram to set this attribute.\n+\t(Has_Controlled_Component): Now applies to all entities.\n+\tThis is only a documentation change, since it always worked to apply\n+\tthis to other than composite types (yielding false), but now this is\n+\tofficial.\n+\tUpdate documentation on Must_Be_Byte_Aligned for new spec\n+\n+\t* tbuild.adb, exp_dist.adb, exp_disp.adb, exp_ch3.ads, exp_ch3.adb,\n+\texp_attr.adb, exp_aggr.adb, exp_ch4.adb, exp_ch5.adb: Upgrade all the\n+\tuses of the Access_Disp_Table attribute to reference the first dispatch\n+\ttable associated with a tagged type. As\n+\tpart of the implementation of abstract interface types,\n+\tAccess_Disp_Table has been redefined to contain a list of dispatch\n+\ttables (rather than a single dispatch table).\n+\tSimilarly, upgrade all the references to Tag_Component by the\n+\tnew attribute First_Tag_Component.\n+\t(Find_Inherited_TSS): Moved to exp_tss.\n+\tClean up test in Expand_N_Object_Declaration for cases\n+\twhere we need to do a separate assignment of the initial value.\n+\t(Expand_N_Object_Declaration): If the expression in the\n+\tdeclaration of a tagged type is an aggregate, no need to generate an\n+\tadditional tag assignment.\n+\t(Freeze_Type): Now a function that returns True if the N_Freeze_Entity\n+\tis to be deleted.\n+\tBit packed array ops are only called if operands are known to be\n+\taligned.\n+\t(Component_Equality): When returning an N_Raise_Program_Error statement,\n+\tensure that its Etype is set to Empty to avoid confusing GIGI (which\n+\texpects that only expressions have a bona fide type).\n+\t(Make_Tag_Ctrl_Assignment): Use Build_Actual_Subtype to correctly\n+\tdetermine the amount of data to be copied.\n+\n+\t* par.adb (P_Interface_Type_Definition): New subprogram that parses the\n+\tnew syntax rule of Ada 2005 interfaces (for AI-251 and AI-345):\n+\t    INTERFACE_TYPE_DEFINITION ::=\n+\t      [limited | task | protected | synchronized] interface\n+\t        [AND interface_list]\n+\n+\t* par-ch3.adb (P_Type_Declaration): Modified to give support to\n+\tinterfaces.\n+\t(P_Derived_Type_Def_Or_Private_Ext_Decl): Modified to give support to\n+\tinterfaces.\n+\t(P_Interface_Type_Definition): New subprogram that parses the new\n+\tsyntax rule of Ada 2005 interfaces\n+\t(P_Identifier_Declarations): fix two occurrences of 'RENAMES' in error\n+\tmessages by the correct RENAMES (quotes removed).\n+\n+\t* sem_prag.adb: Upgrade all the references to Tag_Component by the new\n+\tattribute First_Tag_Component.\n+\n+\t* sinfo.ads, sinfo.adb: Remove OK_For_Stream flag, not used, not needed\n+\t(Interface_List, Set_Interface_List): New subprograms.\n+\t(Interface_Present, Set_Interface_Present): New subprograms.\n+\t(Limited_Present, Set_Limited_Present): Available also in derived\n+\ttype definition nodes.\n+\t(Protected_Present, Set_Protected_Present): Available also in\n+\trecord type definition and\n+\tderived type definition nodes.\n+\t(Synchronized_Present, Set_Synchronized_Present): New subprograms.\n+\t(Task_Present, Set_Task_Present): New subprogram.\n+\t(Task_Body_Procedure): Removed.\n+\t(Set_Task_Body_Procedure): Removed.\n+\tThese subprogram have been removed because the attribute\n+\tTask_Body_Procedure has been moved to the corresponding task type\n+\tor task subtype entity to leave a field free to store the list\n+\tof interfaces implemented by a task (for AI-345)\n+\tAdd Expression field to N_Raise_Statement node for Ada 2005 AI-361\n+\t(Null_Exclusion_Present): Change to Flag11, to avoid conflict with\n+\texpression flag Do_Range_Check\n+\t(Exception_Junk): Change to Flag7 to accomodate above change\n+\t(Box_Present, Default_Name, Specification, Set_Box_Present,\n+\tSet_Default_Name, Set_Specification): Expand the expression\n+\t\"X in N_Formal_Subprogram_Declaration\" into the corresponding\n+\ttwo comparisons. Required to use the csinfo tool.\n+\n+\t* exp_ch11.adb (Expand_N_Raise_Statement): Deal with case where\n+\t\"with string\" given.\n+\n+        * sem_ch11.adb (Analyze_Raise_Statement): Handle case where string\n+        expression given.\n+\n+\t* par-ch11.adb (P_Raise_Statement): Recognize with string expression\n+\tin 2005 mode\n+\n+\t* exp_ch9.adb (Build_Task_Proc_Specification): Modified to use entity\n+\tattribute Task_Body_Procedure rather than the old semantic field that\n+\twas available in the task_type_declaration node.\n+\n+\t* par-ch12.adb (P_Formal_Type_Definition): Modified to handle formal\n+\tinterface type definitions.\n+\t(P_Formal_Derived_Type_Definition): Modified to handle the list of\n+\tinterfaces.\n+\n+\t* par-ch9.adb (P_Task): Modified to handle the list of interfaces in a\n+\ttask type declaration.\n+\t(P_Protected): Modified to handle the list of interfaces in a\n+\tprotected type declaration.\n+\n+2005-03-15  Doug Rupp  <rupp@adacore.com>\n+\t    Vincent Celier  <celier@adacore.com>\n+\n+\t* bindgen.adb (Gen_Main_C): Change WBI __posix_exit to decc$posix_exit\n+\t(Gen_Output_File_C): Likewise.\n+\t(Gen_Main_C): Issue #include <stdlib.h> to avoid warning\n+\n+2005-03-15  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* checks.adb (Get_E_First_Or_Last): When the expression being retrieved\n+\tis an N_Raise_Constraint_Error node, create a new copy of it without\n+\tgoing through a call to Duplicate_Subexpr.\n+\n+2005-03-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\t    Nicolas Setton  <setton@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\tPR ada/19900\n+\tPR ada/19408\n+\tPR ada/19140\n+\tPR ada/20255\n+\n+\t* decl.c (gnat_to_gnu_field): Reject aliased components with a\n+\trepresentation clause that prescribes a size not equal to the rounded\n+\tsize of their types.\n+\t(gnat_to_gnu_entity, case E_Component): Always look at\n+\tOriginal_Record_Component if Present and not the entity.\n+\t(gnat_to_gnu_entity, case E_Record_Subtype): Rework handling of subtypes\n+\tof tagged extension types by not making field for components that are\n+\tinside the parent.\n+\t(gnat_to_gnu_entity) <E_Record_Type>: Fix typo in the alignment formula\n+\t(gnat_to_gnu_entity) <E_Variable>: Do not convert again the\n+\texpression to the type of the object when the object is constant.\n+\tReverse defer_debug_incomplete_list before traversing it, so that trees\n+\tare processed in the order at which they were added to the list. This\n+\torder is important when using the stabs debug format.\n+\tIf we are deferring the output of debug information, also defer this\n+\toutput for a function return type.\n+\tWhen adding fields to a record, prevent emitting debug information\n+\tfor incomplete records, emit the information only when the record is\n+\tcomplete.\n+\t(components_to_record): New parameter defer_debug.\n+\t(gnat_to_gnu_entity, case E_Array_Subtype): Call copy_alias_set.\n+\t(gnat_to_gnu_field_decl): New function.\n+\t(substitution_list, annotate_rep): Call it.\n+\t(gnat_to_gnu_entity, case E_Record_Subtype): Likewise.\n+\t(gnat_to_gnu_entity, case E_Record_Type): Likewise.\n+\tNo longer update discriminants to not be a COMPONENT_REF.\n+\t(copy_alias_set): Strip padding from input type; also handle\n+\tunconstrained arrays properly.\n+\n+\t* gigi.h (write_record_type_debug_info): New function.\n+\tConvert to use ANSI-style prototypes. Remove unused\n+\tdeclarations for emit_stack_check, elab_all_gnat and\n+\tset_second_error_entity.\n+\t(gnat_to_gnu_field_decl): New decl.\n+\n+\t* utils.c (write_record_type_debug_info): New function.\n+\t(finish_record_type): Delegate generation of debug information to\n+\twrite_record_type_debug_info.\n+\t(update_pointer_to): Remove unneeded calls to rest_of_decl_compilation.\n+\t(update_pointer_to): Fix pasto.\n+\t(convert) <UNION_TYPE>: Accept slight type variations when\n+\tconverting to an unchecked union type.\n+\n+\t* exp_ch13.adb (Expand_N_Freeze_Entity): If Freeze_Type returns True,\n+\treplace the N_Freeze_Entity with a null statement.\n+\n+\t* freeze.adb (Freeze_Expression): If the freeze nodes are generated\n+\twithin a constrained subcomponent of an enclosing record, place the\n+\tfreeze nodes in the scope stack entry for the enclosing record.\n+\t(Undelay_Type): New Subprogram.\n+\t(Set_Small_Size): Pass T, the type to modify; all callers changed.\n+\t(Freeze_Entity, Freeze_Record_Type): Change the way we handle types\n+\twithin records; allow them to have freeze nodes if their base types\n+\taren't frozen yet.\n+\n+\t* sem_ch3.adb (Derived_Type_Declaration): New predicate\n+\tComes_From_Generic, to recognize accurately that the parent type in a\n+\tderived type declaration can be traced back to a formal type, because\n+\tit is one or is derived from one, or because its completion is derived\n+\tfrom one.\n+\t(Constrain_Component_Type): If component comes from source and has no\n+\texplicit constraint, no need to constrain in in a subtype of the\n+\tenclosing record.\n+\t(Constrain_Access, Constrain_Array): Allow itypes to be delayed.\n+\tMinor change to propagate Is_Ada_2005 flag\n+\n+\t* trans.c (gnat_to_gnu, case N_Aggregate): Verify that\n+\tExpansion_Delayed is False.\n+\t(assoc_to_constructor): Ignore fields that have a\n+\tCorresponding_Discriminant.\n+\t(gnat_to_gnu) <N_Return_Statement>: Restructure. If the\n+\tfunction returns \"by target\", dereference the target pointer using the\n+\ttype of the actual return value.\n+\t<all>: Be prepared for a null gnu_result.\n+\t(processed_inline_subprograms): Check flag_really_no_inline\n+\tinstead of flag_no_inline.\n+\t(set_second_error_entity): Remove unused function.\n+\t(gnat_to_gnu, case N_Selected_Component): Call\n+\tgnat_to_gnu_field_decl.\n+\t(assoc_to_constructor): Likewise.\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\tPR ada/19900\n+\n+\t* exp_pakd.adb (Create_Packed_Array_Type): Do not set\n+\tMust_Be_Byte_Aligned for cases where we do not need to use a\n+\tSystem.Pack_nn unit.\n+\n+\t* exp_ch6.adb (Expand_Call): Call Expand_Actuals for functions as well\n+\tas procedures.\n+\tNeeded now that we do some processing for IN parameters as well. This\n+\tmay well fix some unrelated errors.\n+\t(Expand_Call): Handle case of unaligned objects (in particular those\n+\tthat come from packed arrays).\n+\t(Expand_Inlined_Call): If the subprogram is a renaming as body, and the\n+\trenamed entity is an inherited operation, re-expand the call using the\n+\toriginal operation, which is the one to call.\n+\tDetect attempt to inline parameterless recursive subprogram.\n+\t(Represented_As_Scalar): Fix to work properly with private types\n+\t(Is_Possibly_Unaligned_Object): Major rewrite to get a much more\n+\taccurate estimate. Yields True in far fewer cases than before,\n+\timproving the quality of code that depends on this test.\n+\t(Remove_Side_Effects): Properly test for Expansion_Delayed and handle\n+\tcase when it's inside an N_Qualified_Expression.\n+\n+\t* exp_util.adb (Kill_Dead_Code): For a package declaration, iterate\n+\tover both visible and private declarations to remove them from tree,\n+\tand mark subprograms declared in package as eliminated, to prevent\n+\tspurious use in subsequent compilation of generic units in the context.\n+\n+\t* exp_util.ads: Minor cleanup in variable names\n+\n+\t* sem_eval.ads, sem_eval.adb: Minor reformatting\n+\t(Compile_Time_Known_Bounds): New function\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch7.adb (Convert_View): Use base types of underlying types when\n+\tdetermining whether an unchecked conversion is needed for the argument\n+\tof an initialization call.\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_intr.adb (Expand_Unc_Conversion): As a target type, use the type\n+\tthat appears in the instantiation rather than the internal subtype\n+\tgenerated in the wrapper package, to avoid anomalies in gigi when the\n+\ttarget is derived from a private type whose full view is an access type.\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_smem.adb, sem_attr.adb: Remove OK_For_Stream flag, not used,\n+\tnot needed.\n+\tAdd documentation to replace the use of this flag\n+\tFix kludge for Maximum_Alignment on x86 so that it does not apply to\n+\tthe x86_64.\n+\n+2005-03-15  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_tss.ads, exp_tss.adb (Find_Inherited_TSS): New subprogram, moved\n+\there from exp_attr so it can be shared between exp_attr and exp_dist.\n+\t(TSS_Names): Renamed from OK_TSS_Names. This array contains the list of\n+\tall TSS names, not a subset thereof, and the previous name introduced\n+\tan unnecessarily confusion that a distinction might exist between\n+\t\"OK\" TSS names and some \"not OK\" TSS names.\n+\n+2005-03-15  Doug Rupp  <rupp@adacore.com>\n+\n+\t* gnatchop.adb (Locate_Executable): Normalize the possibly VMS style\n+\tCommand_Name.\n+\n+2005-03-15  Pascal Obry  <obry@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/20226\n+\tPR ada/20344\n+\n+\t* init.c (__gnat_initialize): Do not call __gnat_install_SEH_handler()\n+\twhen IN_RTS. This is to work around a bootstrap path problem.\n+\n+\t* misc.c (gnat_parse_file): Create a SEH (Structured Exception Handler)\n+\ttable and pass it to __gnat_install_SEH_handler().\n+\t(gnat_handle_option): Accept OPT_fRTS_, not OPT_fRTS.\n+\n+\t* lang.opt: Fix specification of -fRTS=.\n+\n+2005-03-15  Doug Rupp  <rupp@adacore.com>\n+\t    Bernard Banner  <banner@adacore.com>\n+\t    Vincent Celier  <celier@adacore.com>\n+\t    Arnaud Charlet  <charlet@adacore.com>\n+\n+\tPR ada/6852\n+\tThis change works fine when gnatlib is built from the gcc directory,\n+\tbut does not work when using the libada Makefile, since GCC_FOR_TARGET\n+\tis not passed to ada/Makefile.in, so more work is needed by a\n+\tMakefile/configure expert.\n+\n+\t* Makefile.in(gnatlib): Use $(GCC_FOR_TARGET) for compiling library.\n+\tset GMEM_LIB on ia64 linux to add optional support for gnatmem.\n+\tSetup gnatlink switch -M for x86_64 linux, as it is already setup\n+\tfor Linux x86.\n+\t(gnatlib-shared-default): Use GNATLIBCFLAGS as well.\n+\tRun ranlib on libgccprefix.a\n+\tDefine PREFIX_OBJS for Darwin, to build libgccprefix.\n+\t(ADA_INCLUDE_SRCS): Split Ada packages.\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* Make-lang.in: Add g-utf_32 unit for gnat and gnatbind\n+\n+\t* impunit.adb: Add GNAT.UTF_32\n+\n+\t* scng.adb: Use gnat.utf_32 instead of widechar for utf_32 stuff\n+\n+\t* widechar.ads, widechar.adb: Remove redundant UTF-32 tables (scng\n+\tnow uses GNAT.UTF_32).\n+\n+\t* g-utf_32.ads, g-utf_32.adb: This is a new unit with full\n+\tcapabilities for categorizing characters using Unicode categories\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Build_Ancestor_Name): If the ancestor is an\n+\tinstantiation that has been rewritten as a package body, retrieve spec\n+\tto generate proper name for implicit_with_clause.\n+\t(Install_Parents): Recognize a parent that is an instantiation but has\n+\tbeen rewritten as a package declaration during analysis.\n+\n+2005-03-15  Javier Miranda  <miranda@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Object): If the analysis of the actual\n+\tparameter reported some error we immediately return. This improves the\n+\tbehaviour of the frontend in case of errors.\n+\t(Install_Parent, Remove_Parent): Introduce new flag\n+\tParent_Unit_Visible, to preserve the proper visibility of the ultimate\n+\tancestor of a generic child unit, when the child is being instantiated.\n+\t(Inline_Instance_Body): If we are compiling the private\n+\tpart or the body of a child unit, restore the proper visibility of the\n+\tparents after compiling the instance body.\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\tPR ada/15608\n+\t* sem_util.adb (Get_Task_Body_Procedure): Type may be the completion\n+\tof a private type, in which case it is underlying_type that denotes\n+\tthe proper task. Also modified to use the new entity attribute\n+\tthat is directly available in the task type and task subtype entities\n+\t(Build_Actual_Subtype_Of_Component): Handle properly multidimensional\n+\tarrays when other dimensions than the first are constrained by\n+\tdiscriminants of an enclosing record.\n+\t(Insert_Explicit_Dereference): If the prefix is an indexed component or\n+\ta combination of indexed and selected components, find ultimate entity\n+\tand generate the appropriate reference for it, to suppress spurious\n+\twarnings.\n+\t(Note_Possible_Modification): If an entity name has no entity, return.\n+\t(Is_Variable): A function call never denotes a variable.\n+\t(Requires_Transient_Scope): For record types, recurse only on\n+\tcomponents, not on internal subtypes that may have been generated for\n+\tconstrained components.\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Concatenation): Do not consider operators marked\n+\tEliminated as candidates for resolution. Both efficient, and avoids\n+\tanomalies with operators declared in deleted code.\n+\t(Process_Implicit_Dereference_Prefix): Use this procedure whenever\n+\texpansion is disabled (as when compiling a generic) to prevent spurious\n+\twarnings on prefixes of selected components.\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Is_Private_Declaration): Verify that the declaration is\n+\tattached to a list before checking whether it appears in the private\n+\tdeclarations of the current package.\n+\t(Make_Inequality_Operator): Insert declaration in proper declarative\n+\tlist rather than just setting the Parent field, so that\n+\tIs_Private_Declaration can handle it properly.\n+\n+2005-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): In a generic, if this is\n+\ta renaming a body, check that the renamed subprogram in not intrinsic.\n+\t(Find_Direct_Name): If several use_visible entities hide\n+\teach other, and the context is a predefined file compiled through\n+\trtsfind, keep only the entity that comes from a predefined file.\n+\n+2005-03-15  Geert Bosch  <bosch@adacore.com>\n+\n+\t* s-fatgen.adb (Valid): Extend special exceptions to account for long\n+\tlong float padding to also cover AMD64 and IA64.\n+\n+2005-03-15  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* s-imgwch.adb: Add with and use of Interfaces.\n+\t(Img_Wide_Character): Change type of Val to Unsigned_16.\n+\t(Img_Wide_Wide_Character): Change type of Val to Unsigned_32.\n+\n+2005-03-15  Matthew Gingell  <gingell@adacore.com>\n+\n+\t* sysdep.c: Implement __gnat_localtime_r as call to localtime_r on AIX.\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* usage.adb: Add missing lines for -gnat95 and -gnat05 switches\n+\n+\t* sem_ch7.adb: Minor change to propagate Is_Ada_2005 flag\n+\n+\t* i-c.adb: Clarify that AI-258 behavior is also intended in Ada 95\n+\n+2005-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-bitops.adb, s-bitops.ads,\n+\ts-taprop-os2.adb, s-intman-vms.ads, s-intman-vxworks.ads,\n+\ts-taprop-vxworks.adb, a-caldel.ads, a-calend.adb, a-tasatt.adb,\n+\ttbuild.ads, s-finimp.adb, s-imgwch.adb, s-intman.ads, s-intman.ads,\n+\ts-memory.adb, s-soflin.ads, s-taasde.ads, s-taprob.adb, s-taprop.ads,\n+\ts-taprop.ads, s-tasini.adb, s-tasini.ads, s-tasini.ads, s-tasini.ads,\n+\ts-taskin.ads, s-tasren.adb, s-tassta.adb, s-tassta.ads, s-tassta.ads,\n+\ts-tasuti.ads, s-tataat.ads, s-tataat.ads, s-tataat.ads, s-tataat.ads,\n+\ts-tpoben.adb, s-tpoben.adb, s-tpobop.ads: Update comments. Minor\n+\treformatting.\n+\n+2005-03-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* utils2.c (build_binary_op): Fix typo.\n+\n+2005-03-15  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-crtl.ads (popen,pclose): New imports.\n+\n+2005-03-15  Cyrille Comar  <comar@adacore.com>\n+\n+\t* comperr.adb (Compiler_Abort): remove references to obsolete\n+\tprocedures in the bug boxes for various GNAT builds.\n+\n+2005-03-15  Vincent Celier  <celier@adacore.com>\n+\n+\t* snames.ads, snames.adb: Save as Unix text file, not as DOS text file\n+\n+2005-03-15  Geert Bosch  <bosch@adacore.com>\n+\t    Arnaud Charlet  <charlet@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Cyrille Comar  <comar@adacore.com>\n+\t    Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: Remove extended inline assembly example, as it was far\n+\ttoo specific and long-winded to be appropriate for the GNAT User's\n+\tGuide.\n+\tWarn about use of GCC switches not documented in the GNAT User's Guide,\n+\tas these may cause generated code to not conform to Ada semantics.\n+\tRemove mention of -gdwarf-2 for sparc64, since this is now the default.\n+\tAdd documentation for -gnat95 and -gnat05 switches\n+\tRemove paragraph documenting obsolete way to refer to third party\n+\tlibraries.\n+\tAdd a few references to Ada_05 that were missing.\n+\tUpdate documentation on -gnatZ/-gnatL.\n+\tDocument limitation when using -m64 under Solaris.\n+\tChange the \"Name Casing\" subsection of the pretty-printer section\n+\taccording to the changes in the dictionary processing.\n+\n+\t* gnat_rm.texi: Document the Ada_05 pragma.\n+\tSection on record representation clauses describes the new more\n+\trelaxed rules about placement of large packed bit array components.\n+\tAdd documentation of GNAT.UTF_32\n+\n 2005-03-12  Daniel Berlin <dberlin@dberlin.org>\n \n \t* misc.c (gnat_post_options): Turn off structural\n \taliasing for now.\n-\t\n+\n 2005-03-08  Laurent Guerby <laurent@guerby.net>\n \n \t* system-linux-sparc.ads: Fix typo in previous commit."}]}