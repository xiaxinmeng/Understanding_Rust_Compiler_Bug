{"sha": "cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RhYTBlMGI4YzFjZDc1NjliNTBhYjUwODE5NDAxZjdkMzk5OTgzYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-06-03T10:52:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-06-03T10:52:40Z"}, "message": "decl.c (gnat_to_gnu_entity): When adjusting the discriminant nodes in an extension...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: When\n\tadjusting the discriminant nodes in an extension, use the full view\n\tof the parent subtype if it is of a private kind.\n\nFrom-SVN: r148125", "tree": {"sha": "814533141d2c4d825ded89a4f5223f2bb99676da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/814533141d2c4d825ded89a4f5223f2bb99676da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/comments", "author": null, "committer": null, "parents": [{"sha": "a6a29d0c39e207cf1ec8ad94ec44744ae9814660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6a29d0c39e207cf1ec8ad94ec44744ae9814660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6a29d0c39e207cf1ec8ad94ec44744ae9814660"}], "stats": {"total": 89, "additions": 76, "deletions": 13}, "files": [{"sha": "d439a19c2f2f4b044139dfc16c914d154cdf3344", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -1,3 +1,9 @@\n+2009-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: When\n+\tadjusting the discriminant nodes in an extension, use the full view\n+\tof the parent subtype if it is of a private kind.\n+\n 2009-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Add the"}, {"sha": "d32ddadc70e75101642c24b1b049ca3e39a55c39", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -2899,22 +2899,33 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t       of the parent subtype and not those of its base type for the\n \t       placeholder machinery to properly work.  */\n \t    if (Has_Discriminants (gnat_entity))\n-\t      for (gnat_field = First_Stored_Discriminant (gnat_entity);\n-\t\t   Present (gnat_field);\n-\t\t   gnat_field = Next_Stored_Discriminant (gnat_field))\n-\t\tif (Present (Corresponding_Discriminant (gnat_field)))\n+\t      {\n+\t\t/* The actual parent subtype is the full view.  */\n+\t\tif (IN (Ekind (gnat_parent), Private_Kind))\n \t\t  {\n-\t\t    Entity_Id field = Empty;\n-\t\t    for (field = First_Stored_Discriminant (gnat_parent);\n-\t\t\t Present (field);\n-\t\t\t field = Next_Stored_Discriminant (field))\n-\t\t      if (same_discriminant_p (gnat_field, field))\n-\t\t\tbreak;\n-\t\t    gcc_assert (Present (field));\n-\t\t    TREE_OPERAND (get_gnu_tree (gnat_field), 1)\n-\t\t      = gnat_to_gnu_field_decl (field);\n+\t\t    if (Present (Full_View (gnat_parent)))\n+\t\t      gnat_parent = Full_View (gnat_parent);\n+\t\t    else\n+\t\t      gnat_parent = Underlying_Full_View (gnat_parent);\n \t\t  }\n \n+\t\tfor (gnat_field = First_Stored_Discriminant (gnat_entity);\n+\t\t     Present (gnat_field);\n+\t\t     gnat_field = Next_Stored_Discriminant (gnat_field))\n+\t\t  if (Present (Corresponding_Discriminant (gnat_field)))\n+\t\t    {\n+\t\t      Entity_Id field = Empty;\n+\t\t      for (field = First_Stored_Discriminant (gnat_parent);\n+\t\t\t   Present (field);\n+\t\t\t   field = Next_Stored_Discriminant (field))\n+\t\t\tif (same_discriminant_p (gnat_field, field))\n+\t\t\t  break;\n+\t\t      gcc_assert (Present (field));\n+\t\t      TREE_OPERAND (get_gnu_tree (gnat_field), 1)\n+\t\t\t= gnat_to_gnu_field_decl (field);\n+\t\t    }\n+\t      }\n+\n \t    /* The \"get to the parent\" COMPONENT_REF must be given its\n \t       proper type...  */\n \t    TREE_TYPE (gnu_get_parent) = gnu_parent;"}, {"sha": "981a89128e449b5fc134d2e198c6b29d680c3320", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -1,3 +1,10 @@\n+2009-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/root.ads: New test.\n+\t* gnat.dg/specs/root-level_1.ads: Likewise.\n+\t* gnat.dg/specs/root-level_2.ads: Likewise.\n+\t* gnat.dg/specs/root-level_1-level_2.ads: Likewise.\n+\n 2009-06-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/init/ref15.C: Require unwrapped targets."}, {"sha": "9687208e0823665b123ffb3ac779ee151dad52fc", "filename": "gcc/testsuite/gnat.dg/specs/root-level_1-level_2.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_1-level_2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_1-level_2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_1-level_2.ads?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -0,0 +1,7 @@\n+package Root.Level_1.Level_2 is\n+\n+   type Level_2_Type (First  : Natural;\n+                      Second : Natural) is new\n+     Level_1.Level_1_Type (First => First, Second => Second) with null record;\n+\n+end Root.Level_1.Level_2;"}, {"sha": "6bcb1251f2bc97f299f22119081c77ac1b92cfc8", "filename": "gcc/testsuite/gnat.dg/specs/root-level_1.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_1.ads?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -0,0 +1,14 @@\n+package Root.Level_1 is\n+\n+   type Level_1_Type (First  : Natural;\n+                      Second : Natural) is new Root_Type with private;\n+\n+private\n+\n+   type Level_1_Type (First  : Natural;\n+                      Second : Natural) is new Root_Type (First => First)\n+   with record\n+      Buffer_1 : Buffer_Type (1 .. Second);\n+   end record;\n+\n+end Root.Level_1;"}, {"sha": "c4f812ecfb62012bca91b467770ee28573664116", "filename": "gcc/testsuite/gnat.dg/specs/root-level_2.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot-level_2.ads?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -0,0 +1,9 @@\n+with Root.Level_1;\n+\n+package Root.Level_2 is\n+\n+   type Level_2_Type (First  : Natural;\n+                      Second : Natural) is new\n+     Level_1.Level_1_Type (First => First, Second => Second) with null record;\n+\n+end Root.Level_2;"}, {"sha": "e80ab88040168295e7136739d220fbf4222060f1", "filename": "gcc/testsuite/gnat.dg/specs/root.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa0e0b8c1cd7569b50ab50819401f7d399983b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Froot.ads?ref=cdaa0e0b8c1cd7569b50ab50819401f7d399983b", "patch": "@@ -0,0 +1,9 @@\n+package Root is\n+\n+   type Buffer_Type is array (Positive range <>) of Natural;\n+\n+   type Root_Type (First : Natural) is abstract tagged record\n+      Buffer_Root : Buffer_Type (1 .. First);\n+   end record;\n+\n+end Root;"}]}