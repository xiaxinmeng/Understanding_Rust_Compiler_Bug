{"sha": "c2ec26b8afb76691aeb476e829053e4a5bda64d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJlYzI2YjhhZmI3NjY5MWFlYjQ3NmU4MjkwNTNlNGE1YmRhNjRkMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-12T12:51:14Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-12T12:51:14Z"}, "message": "(expand_shift): Use convert_modes.\n\n(emit_store_flag): Likewise.\n\nFrom-SVN: r5309", "tree": {"sha": "42fc66ac988d4e17c88549c941db531fc52b02b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42fc66ac988d4e17c88549c941db531fc52b02b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2ec26b8afb76691aeb476e829053e4a5bda64d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ec26b8afb76691aeb476e829053e4a5bda64d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ec26b8afb76691aeb476e829053e4a5bda64d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ec26b8afb76691aeb476e829053e4a5bda64d3/comments", "author": null, "committer": null, "parents": [{"sha": "3fad11c9213905de742d28b451d2f870952c91d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fad11c9213905de742d28b451d2f870952c91d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fad11c9213905de742d28b451d2f870952c91d5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "bb22a05851b1bbbae9da8fe1faef3f7299e3485a", "filename": "gcc/expmed.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ec26b8afb76691aeb476e829053e4a5bda64d3/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ec26b8afb76691aeb476e829053e4a5bda64d3/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=c2ec26b8afb76691aeb476e829053e4a5bda64d3", "patch": "@@ -1699,9 +1699,9 @@ expand_shift (code, mode, shifted, amount, target, unsignedp)\n \t      || (methods == OPTAB_WIDEN\n \t\t  && GET_MODE_SIZE (mode) < GET_MODE_SIZE (output_mode)))\n \t    {\n-\t      rtx shifted1 = convert_to_mode (output_mode,\n-\t\t\t\t\t      protect_from_queue (shifted, 0),\n-\t\t\t\t\t      1);\n+\t      rtx shifted1 = convert_modes (output_mode, mode,\n+\t\t\t\t\t    protect_from_queue (shifted, 0),\n+\t\t\t\t\t    1);\n \t      enum machine_mode length_mode\n \t\t= insn_operand_mode[(int) CODE_FOR_extzv][2];\n \t      enum machine_mode pos_mode\n@@ -1730,8 +1730,8 @@ expand_shift (code, mode, shifted, amount, target, unsignedp)\n \t\ttarget1 = gen_reg_rtx (output_mode);\n \n \t      xop1 = protect_from_queue (xop1, 0);\n-\t      xop1 = convert_to_mode (pos_mode, xop1,\n-\t\t\t\t      TREE_UNSIGNED (TREE_TYPE (amount)));\n+\t      xop1 = convert_modes (pos_mode, TYPE_MODE (TREE_TYPE (amount)),\n+\t\t\t\t    xop1, TREE_UNSIGNED (TREE_TYPE (amount)));\n \n \t      /* If this machine's extzv insists on a register for\n \t\t operand 3 (position), arrange for that.  */\n@@ -2906,7 +2906,7 @@ emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)\n \t\t\t    subtarget, normalizep != -1);\n \n       if (mode != target_mode)\n-\top0 = convert_to_mode (target_mode, op0, 0);\n+\top0 = convert_modes (target_mode, mode, op0, 0);\n \n       return op0;\n     }\n@@ -3128,7 +3128,7 @@ emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)\n       else if (GET_MODE_SIZE (mode) < UNITS_PER_WORD)\n \t{\n \t  op0 = protect_from_queue (op0, 0);\n-\t  tem = convert_to_mode (word_mode, mode, op0, 1);\n+\t  tem = convert_modes (word_mode, mode, op0, 1);\n \t  mode = word_mode;\n \t}\n "}]}