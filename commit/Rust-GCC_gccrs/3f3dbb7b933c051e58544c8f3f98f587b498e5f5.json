{"sha": "3f3dbb7b933c051e58544c8f3f98f587b498e5f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzZGJiN2I5MzNjMDUxZTU4NTQ0YzhmM2Y5OGY1ODdiNDk4ZTVmNQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-07-03T08:16:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:16:20Z"}, "message": "[Ada] Suppress warnings in generic instantiations with pragma Warnings\n\nWarnings issued by GNAT or GNATprove inside generic instantiations can\nnow be suppressed by using pragma Warnings Off/On around the instance.\nThis has mostly an effect on GNATprove, since GNAT typically does not\nissue warnings on instantiations, only on the generic code itself.\n\n2019-07-03  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* erroutc.adb (Sloc_In_Range): New function to determine whether\n\tthe range of a pragma Warnings covers a location, taking\n\tinstantiations into account.\n\nFrom-SVN: r272985", "tree": {"sha": "9d41066ec8daa918d0b5353a1729880a59a8d7f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d41066ec8daa918d0b5353a1729880a59a8d7f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f3dbb7b933c051e58544c8f3f98f587b498e5f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3dbb7b933c051e58544c8f3f98f587b498e5f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3dbb7b933c051e58544c8f3f98f587b498e5f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3dbb7b933c051e58544c8f3f98f587b498e5f5/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10aea826dae5e3bc306dc74b4aea9df830a3c96c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aea826dae5e3bc306dc74b4aea9df830a3c96c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10aea826dae5e3bc306dc74b4aea9df830a3c96c"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "859380f9aa3c36372ba9d80af8b5bb6b3d0e59d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3dbb7b933c051e58544c8f3f98f587b498e5f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3dbb7b933c051e58544c8f3f98f587b498e5f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3f3dbb7b933c051e58544c8f3f98f587b498e5f5", "patch": "@@ -1,3 +1,9 @@\n+2019-07-03  Yannick Moy  <moy@adacore.com>\n+\n+\t* erroutc.adb (Sloc_In_Range): New function to determine whether\n+\tthe range of a pragma Warnings covers a location, taking\n+\tinstantiations into account.\n+\n 2019-07-03  Johannes Kanig  <kanig@adacore.com>\n \n \t* osint.ads, osint.adb (Get_First_Main_File_Name): New routine"}, {"sha": "0c8ef5de7cc9690efd43fece8143c044452eb973", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3dbb7b933c051e58544c8f3f98f587b498e5f5/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3dbb7b933c051e58544c8f3f98f587b498e5f5/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=3f3dbb7b933c051e58544c8f3f98f587b498e5f5", "patch": "@@ -56,6 +56,12 @@ package body Erroutc is\n    --  wild card chars (*). The entire pattern must match the entire string.\n    --  Case is ignored in the comparison (so X matches x).\n \n+   function Sloc_In_Range (Loc, Start, Stop : Source_Ptr) return Boolean;\n+   --  Return whether Loc is in the range Start .. Stop, taking instantiation\n+   --  locations of Loc into account. This is useful for suppressing warnings\n+   --  from generic instantiations by using pragma Warnings around generic\n+   --  instances, as needed in GNATprove.\n+\n    ---------------\n    -- Add_Class --\n    ---------------\n@@ -1588,6 +1594,24 @@ package body Erroutc is\n       end if;\n    end Set_Warnings_Mode_On;\n \n+   -------------------\n+   -- Sloc_In_Range --\n+   -------------------\n+\n+   function Sloc_In_Range (Loc, Start, Stop : Source_Ptr) return Boolean is\n+      Cur_Loc : Source_Ptr := Loc;\n+\n+   begin\n+      while Cur_Loc /= No_Location loop\n+         if Start <= Cur_Loc and then Cur_Loc <= Stop then\n+            return True;\n+         end if;\n+         Cur_Loc := Instantiation_Location (Cur_Loc);\n+      end loop;\n+\n+      return False;\n+   end Sloc_In_Range;\n+\n    --------------------------------\n    -- Validate_Specific_Warnings --\n    --------------------------------\n@@ -1652,7 +1676,7 @@ package body Erroutc is\n             --  location is in range of a specific non-configuration pragma.\n \n             if SWE.Config\n-              or else (SWE.Start <= Loc and then Loc <= SWE.Stop)\n+              or else Sloc_In_Range (Loc, SWE.Start, SWE.Stop)\n             then\n                if Matches (Msg.all, SWE.Msg.all)\n                  or else Matches (Tag, SWE.Msg.all)\n@@ -1691,8 +1715,8 @@ package body Erroutc is\n       --  Loop through table of ON/OFF warnings\n \n       for J in Warnings.First .. Warnings.Last loop\n-         if Warnings.Table (J).Start <= Loc\n-           and then Loc <= Warnings.Table (J).Stop\n+         if Sloc_In_Range (Loc, Warnings.Table (J).Start,\n+                                Warnings.Table (J).Stop)\n          then\n             return Warnings.Table (J).Reason;\n          end if;"}]}