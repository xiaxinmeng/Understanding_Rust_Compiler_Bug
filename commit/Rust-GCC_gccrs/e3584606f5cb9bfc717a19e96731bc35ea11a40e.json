{"sha": "e3584606f5cb9bfc717a19e96731bc35ea11a40e", "node_id": "C_kwDOANBUbNoAKGUzNTg0NjA2ZjVjYjliZmM3MTdhMTllOTY3MzFiYzM1ZWExMWE0MGU", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-02-18T15:35:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-13T08:04:42Z"}, "message": "[Ada] Fix iterated component association for array aggregate\n\nCreate a scope for the Ada 2022 iterated component association loops. In\nthe case of elements needing finalization, the late expansion would\ncrash on references to the loop variable within the loop body.\n\ngcc/ada/\n\n\t* exp_aggr.adb (Gen_Loop): Create scope for loop variable of\n\titerated components.", "tree": {"sha": "3084c5cada38a85596080780ac2683c9f2ce7b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3084c5cada38a85596080780ac2683c9f2ce7b3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3584606f5cb9bfc717a19e96731bc35ea11a40e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3584606f5cb9bfc717a19e96731bc35ea11a40e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3584606f5cb9bfc717a19e96731bc35ea11a40e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3584606f5cb9bfc717a19e96731bc35ea11a40e/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c9a8183b3469f50c9418a2309e56b37cbac9f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9a8183b3469f50c9418a2309e56b37cbac9f9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c9a8183b3469f50c9418a2309e56b37cbac9f9f"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "72f65555681ea711e5e6d23a352bace4e2b291b1", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3584606f5cb9bfc717a19e96731bc35ea11a40e/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3584606f5cb9bfc717a19e96731bc35ea11a40e/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=e3584606f5cb9bfc717a19e96731bc35ea11a40e", "patch": "@@ -1916,6 +1916,8 @@ package body Exp_Aggr is\n          Is_Iterated_Component : constant Boolean :=\n            Parent_Kind (Expr) = N_Iterated_Component_Association;\n \n+         Ent : Entity_Id;\n+\n          L_J : Node_Id;\n \n          L_L : Node_Id;\n@@ -2025,10 +2027,28 @@ package body Exp_Aggr is\n          --  Otherwise construct the loop, starting with the loop index L_J\n \n          if Is_Iterated_Component then\n+\n+            --  Create a new scope for the loop variable so that the\n+            --  following Gen_Assign (that ends up calling\n+            --  Preanalyze_And_Resolve) can correctly find it.\n+\n+            Ent := New_Internal_Entity (E_Loop,\n+                 Current_Scope, Loc, 'L');\n+            Set_Etype  (Ent, Standard_Void_Type);\n+            Set_Parent (Ent, Parent (Parent (Expr)));\n+            Push_Scope (Ent);\n+\n             L_J :=\n               Make_Defining_Identifier (Loc,\n                 Chars => (Chars (Defining_Identifier (Parent (Expr)))));\n \n+            Enter_Name (L_J);\n+\n+            --  The Etype will be set by a later Analyze call.\n+            Set_Etype (L_J, Any_Type);\n+\n+            Mutate_Ekind (L_J, E_Variable);\n+            Set_Scope (L_J, Ent);\n          else\n             L_J := Make_Temporary (Loc, 'J', L);\n          end if;\n@@ -2083,6 +2103,10 @@ package body Exp_Aggr is\n               Iteration_Scheme => L_Iteration_Scheme,\n               Statements       => L_Body));\n \n+         if Is_Iterated_Component then\n+            End_Scope;\n+         end if;\n+\n          --  A small optimization: if the aggregate is initialized with a box\n          --  and the component type has no initialization procedure, remove the\n          --  useless empty loop."}]}