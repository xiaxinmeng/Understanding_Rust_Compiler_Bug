{"sha": "351bae3d7df284c94babb81e1b5bb6142c5963a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUxYmFlM2Q3ZGYyODRjOTRiYWJiODFlMWI1YmI2MTQyYzU5NjNhOA==", "commit": {"author": {"name": "Falk Hueffner", "email": "falk@debian.org", "date": "2005-01-09T22:27:07Z"}, "committer": {"name": "Falk Hueffner", "email": "falk@gcc.gnu.org", "date": "2005-01-09T22:27:07Z"}, "message": "fold-const.c (fold): Also handle EXACT_DIV_EXPR when folding X/C1 cmpop C2.\n\n\t* fold-const.c (fold): Also handle EXACT_DIV_EXPR when folding\n\tX/C1 cmpop C2.\n\nFrom-SVN: r93121", "tree": {"sha": "0eff0abb5f43de962a26daa9fc08fb7f81a95145", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eff0abb5f43de962a26daa9fc08fb7f81a95145"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/351bae3d7df284c94babb81e1b5bb6142c5963a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/351bae3d7df284c94babb81e1b5bb6142c5963a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/351bae3d7df284c94babb81e1b5bb6142c5963a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/351bae3d7df284c94babb81e1b5bb6142c5963a8/comments", "author": {"login": "falk-hueffner", "id": 2112658, "node_id": "MDQ6VXNlcjIxMTI2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2112658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falk-hueffner", "html_url": "https://github.com/falk-hueffner", "followers_url": "https://api.github.com/users/falk-hueffner/followers", "following_url": "https://api.github.com/users/falk-hueffner/following{/other_user}", "gists_url": "https://api.github.com/users/falk-hueffner/gists{/gist_id}", "starred_url": "https://api.github.com/users/falk-hueffner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falk-hueffner/subscriptions", "organizations_url": "https://api.github.com/users/falk-hueffner/orgs", "repos_url": "https://api.github.com/users/falk-hueffner/repos", "events_url": "https://api.github.com/users/falk-hueffner/events{/privacy}", "received_events_url": "https://api.github.com/users/falk-hueffner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7142ae779f48178dcdda1a76ba18aafa1a3940ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7142ae779f48178dcdda1a76ba18aafa1a3940ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7142ae779f48178dcdda1a76ba18aafa1a3940ca"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "3f57b962ae60497a363a5a9fed978bf5a33005b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351bae3d7df284c94babb81e1b5bb6142c5963a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351bae3d7df284c94babb81e1b5bb6142c5963a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=351bae3d7df284c94babb81e1b5bb6142c5963a8", "patch": "@@ -1,3 +1,8 @@\n+2005-01-09  Falk Hueffner  <falk@debian.org>\n+\n+\t* fold-const.c (fold): Also handle EXACT_DIV_EXPR when folding\n+\tX/C1 cmpop C2.\n+\n 2005-01-09  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/18720"}, {"sha": "7ccd3a895a8265ac62c11971a2cb43398bb70ded", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351bae3d7df284c94babb81e1b5bb6142c5963a8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351bae3d7df284c94babb81e1b5bb6142c5963a8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=351bae3d7df284c94babb81e1b5bb6142c5963a8", "patch": "@@ -8965,7 +8965,8 @@ fold (tree expr)\n \n       /* We can fold X/C1 op C2 where C1 and C2 are integer constants\n \t into a single range test.  */\n-      if (TREE_CODE (arg0) == TRUNC_DIV_EXPR\n+      if ((TREE_CODE (arg0) == TRUNC_DIV_EXPR\n+\t   || TREE_CODE (arg0) == EXACT_DIV_EXPR)\n \t  && TREE_CODE (arg1) == INTEGER_CST\n \t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n \t  && !integer_zerop (TREE_OPERAND (arg0, 1))"}]}