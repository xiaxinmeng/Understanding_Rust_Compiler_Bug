{"sha": "391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxZDhlZjVlMGYyYWQyYThiZTcyYjEyZTgzNzM4NmYzYWMyYjczMA==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T16:14:25Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T16:14:25Z"}, "message": "[multiple changes]\n\n2004-04-20  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/text/DecimalFormat.java (scanFix): Removed suffix check\n\tfor percent and permill check.\n\n2004-04-20  Guilhem Lavaux <guilhem@kaffe.org>\n\n\t* java/text/FieldPosition.java\n\t(FieldPosition) Constructor now behaves as it should according\n\tto the java documentation.\n\n2004-04-20  Mark Wielaard  <mark@klomp.org>\n\n\t* java/util/Properties.java: Use the word umlaut, not &auml; in api\n\tdocumentation.\n\nFrom-SVN: r80910", "tree": {"sha": "454cb44303514e8bdff5ab657943c3b093d1d468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/454cb44303514e8bdff5ab657943c3b093d1d468"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/comments", "author": null, "committer": null, "parents": [{"sha": "92e1fe674851eff331db253bcb79199716a341f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e1fe674851eff331db253bcb79199716a341f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e1fe674851eff331db253bcb79199716a341f6"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "47121da8f967742e5f0992c67aae33501ccdf4e3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "patch": "@@ -1,3 +1,19 @@\n+2004-04-20  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/text/DecimalFormat.java (scanFix): Removed suffix check\n+\tfor percent and permill check.\n+\n+2004-04-20  Guilhem Lavaux <guilhem@kaffe.org>\n+\n+\t* java/text/FieldPosition.java\n+\t(FieldPosition) Constructor now behaves as it should according\n+\tto the java documentation.\n+\n+2004-04-20  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/Properties.java: Use the word umlaut, not &auml; in api\n+\tdocumentation.\n+\n 2004-04-20  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/Buffer.java,"}, {"sha": "2f6691a85313ec398da6ebf19c60e544864159e3", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "patch": "@@ -90,7 +90,7 @@ else if (c == '\\u00a4')\n \t    else\n \t      buf.append(syms.getCurrencySymbol());\n \t  }\n-\telse if (is_suffix && c == syms.getPercent())\n+\telse if (c == syms.getPercent())\n \t  {\n \t    if (multiplierSet)\n \t      throw new IllegalArgumentException (\"multiplier already set \" +\n@@ -99,7 +99,7 @@ else if (is_suffix && c == syms.getPercent())\n \t    multiplier = 100;\n \t    buf.append(c);\n \t  }\n-\telse if (is_suffix && c == syms.getPerMill())\n+\telse if (c == syms.getPerMill())\n \t  {\n \t    if (multiplierSet)\n \t      throw new IllegalArgumentException (\"multiplier already set \" +"}, {"sha": "47cf7a146f400b042c74cdaf5846e51bf1c1dc4b", "filename": "libjava/java/text/FieldPosition.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2Fjava%2Ftext%2FFieldPosition.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2Fjava%2Ftext%2FFieldPosition.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FFieldPosition.java?ref=391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "patch": "@@ -72,13 +72,13 @@\n   /**\n    * This method initializes a new instance of <code>FieldPosition</code>\n    * to have the specified field attribute. The attribute will be used as\n-   * an id.\n+   * an id. It is formally equivalent to calling FieldPosition(field, -1).\n    *\n    * @param field The field format attribute.\n    */\n   public FieldPosition (Format.Field field)\n   {\n-    this.field_attribute = field;\n+    this(field, -1);\n   }\n \n   /**"}, {"sha": "8f0cbab385d221b0d1e1998ddfb745b70e9fe141", "filename": "libjava/java/util/Properties.java", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2Fjava%2Futil%2FProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391d8ef5e0f2ad2a8be72b12e837386f3ac2b730/libjava%2Fjava%2Futil%2FProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FProperties.java?ref=391d8ef5e0f2ad2a8be72b12e837386f3ac2b730", "patch": "@@ -188,17 +188,14 @@ public void load(InputStream inStream) throws IOException\n       {\n         char c = 0;\n         int pos = 0;\n-        // If empty line or begins with a comment character, skip this line.\n-        if (line.length() == 0\n-\t    || line.charAt(0) == '#' || line.charAt(0) == '!')\n-          continue;\n-\n+\t// Leading whitespaces must be deleted first.\n         while (pos < line.length()\n                && Character.isWhitespace(c = line.charAt(pos)))\n           pos++;\n \n-        // If line is empty skip this line.\n-        if (pos == line.length())\n+        // If empty line or begins with a comment character, skip this line.\n+        if (line.length() == 0\n+\t    || line.charAt(0) == '#' || line.charAt(0) == '!')\n           continue;\n \n         // The characters up to the next Whitespace, ':', or '='"}]}