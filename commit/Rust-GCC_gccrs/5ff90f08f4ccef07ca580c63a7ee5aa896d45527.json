{"sha": "5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZmOTBmMDhmNGNjZWYwN2NhNTgwYzYzYTdlZTVhYTg5NmQ0NTUyNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T13:59:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T13:59:08Z"}, "message": "[multiple changes]\n\n2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Slice): Relocate some variables and\n\tconstants to the \"Local variables\" area. Add new constant D. Add\n\tnew variables Drange and Index_Typ.  Rename Pfx to Rep and Ptp\n\tto Pref_Typ and update all occurrences. Add circuitry to extract\n\tthe discrete_range and the index type and build a range check.\n\n2014-01-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Enable\n\tTreat_Categorization_Errors_As_Warnings when Relaxed_RM_Semantics\n\tis set.\n\n2014-01-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch5.adb, sem_ch4.adb: Minor reformatting.\n\n2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications):\n\tWhen aspect SPARK_Mode appears on a package body, insert the\n\tgenerated pragma at the top of the body declarations.\n\nFrom-SVN: r206814", "tree": {"sha": "fd290956d9b82e715e0fe16051e11379d1fe8e5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd290956d9b82e715e0fe16051e11379d1fe8e5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/comments", "author": null, "committer": null, "parents": [{"sha": "1f0b1e48473f587a1d6104612ef1c865df169643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0b1e48473f587a1d6104612ef1c865df169643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0b1e48473f587a1d6104612ef1c865df169643"}], "stats": {"total": 122, "additions": 104, "deletions": 18}, "files": [{"sha": "aec17d69ea5db5ec898b905116411e5e0a37b781", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "patch": "@@ -1,3 +1,27 @@\n+2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Slice): Relocate some variables and\n+\tconstants to the \"Local variables\" area. Add new constant D. Add\n+\tnew variables Drange and Index_Typ.  Rename Pfx to Rep and Ptp\n+\tto Pref_Typ and update all occurrences. Add circuitry to extract\n+\tthe discrete_range and the index type and build a range check.\n+\n+2014-01-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Enable\n+\tTreat_Categorization_Errors_As_Warnings when Relaxed_RM_Semantics\n+\tis set.\n+\n+2014-01-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch5.adb, sem_ch4.adb: Minor reformatting.\n+\n+2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications):\n+\tWhen aspect SPARK_Mode appears on a package body, insert the\n+\tgenerated pragma at the top of the body declarations.\n+\n 2014-01-20  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb, exp_prag.adb, sem_aux.adb, sinfo.ads, sem_ch10.adb,"}, {"sha": "c8cded1639987e18c869338ce88c268190e9535b", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 54, "deletions": 14, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "patch": "@@ -9329,10 +9329,8 @@ package body Exp_Ch4 is\n    --------------------\n \n    procedure Expand_N_Slice (N : Node_Id) is\n-      Loc  : constant Source_Ptr := Sloc (N);\n-      Typ  : constant Entity_Id  := Etype (N);\n-      Pfx  : constant Node_Id    := Prefix (N);\n-      Ptp  : Entity_Id           := Etype (Pfx);\n+      Loc : constant Source_Ptr := Sloc (N);\n+      Typ : constant Entity_Id  := Etype (N);\n \n       function Is_Procedure_Actual (N : Node_Id) return Boolean;\n       --  Check whether the argument is an actual for a procedure call, in\n@@ -9390,8 +9388,8 @@ package body Exp_Ch4 is\n       ------------------------------\n \n       procedure Make_Temporary_For_Slice is\n-         Decl : Node_Id;\n          Ent  : constant Entity_Id := Make_Temporary (Loc, 'T', N);\n+         Decl : Node_Id;\n \n       begin\n          Decl :=\n@@ -9404,38 +9402,80 @@ package body Exp_Ch4 is\n          Insert_Actions (N, New_List (\n            Decl,\n            Make_Assignment_Statement (Loc,\n-             Name => New_Occurrence_Of (Ent, Loc),\n+             Name       => New_Occurrence_Of (Ent, Loc),\n              Expression => Relocate_Node (N))));\n \n          Rewrite (N, New_Occurrence_Of (Ent, Loc));\n          Analyze_And_Resolve (N, Typ);\n       end Make_Temporary_For_Slice;\n \n+      --  Local variables\n+\n+      D         : constant Node_Id := Discrete_Range (N);\n+      Pref      : constant Node_Id := Prefix (N);\n+      Pref_Typ  : Entity_Id        := Etype (Pref);\n+      Drange    : Node_Id;\n+      Index_Typ : Entity_Id;\n+\n    --  Start of processing for Expand_N_Slice\n \n    begin\n       --  Special handling for access types\n \n-      if Is_Access_Type (Ptp) then\n+      if Is_Access_Type (Pref_Typ) then\n+         Pref_Typ := Designated_Type (Pref_Typ);\n \n-         Ptp := Designated_Type (Ptp);\n-\n-         Rewrite (Pfx,\n+         Rewrite (Pref,\n            Make_Explicit_Dereference (Sloc (N),\n-            Prefix => Relocate_Node (Pfx)));\n+            Prefix => Relocate_Node (Pref)));\n \n-         Analyze_And_Resolve (Pfx, Ptp);\n+         Analyze_And_Resolve (Pref, Pref_Typ);\n       end if;\n \n       --  Ada 2005 (AI-318-02): If the prefix is a call to a build-in-place\n       --  function, then additional actuals must be passed.\n \n       if Ada_Version >= Ada_2005\n-        and then Is_Build_In_Place_Function_Call (Pfx)\n+        and then Is_Build_In_Place_Function_Call (Pref)\n       then\n-         Make_Build_In_Place_Call_In_Anonymous_Context (Pfx);\n+         Make_Build_In_Place_Call_In_Anonymous_Context (Pref);\n       end if;\n \n+      --  Find the range of the discrete_range. For ranges that do not appear\n+      --  in the slice itself, we make a shallow copy and inherit the source\n+      --  location and the parent field from the discrete_range. This ensures\n+      --  that the range check is inserted relative to the slice and that the\n+      --  runtime exception poins to the proper construct.\n+\n+      if Nkind (D) = N_Range then\n+         Drange := D;\n+\n+      elsif Nkind_In (D, N_Expanded_Name, N_Identifier) then\n+         Drange := New_Copy (Scalar_Range (Entity (D)));\n+         Set_Etype  (Drange, Entity (D));\n+         Set_Parent (Drange, Parent (D));\n+         Set_Sloc   (Drange, Sloc   (D));\n+\n+      else pragma Assert (Nkind (D) = N_Subtype_Indication);\n+         Drange := New_Copy (Range_Expression (Constraint (D)));\n+         Set_Etype  (Drange, Etype  (D));\n+         Set_Parent (Drange, Parent (D));\n+         Set_Sloc   (Drange, Sloc   (D));\n+      end if;\n+\n+      --  Find the type of the array index\n+\n+      if Ekind (Pref_Typ) = E_String_Literal_Subtype then\n+         Index_Typ := Etype (String_Literal_Low_Bound (Pref_Typ));\n+      else\n+         Index_Typ := Etype (First_Index (Pref_Typ));\n+      end if;\n+\n+      --  Add a runtime check to test the compatibility between the array range\n+      --  and the discrete_range.\n+\n+      Apply_Range_Check (Drange, Index_Typ);\n+\n       --  The remaining case to be handled is packed slices. We can leave\n       --  packed slices as they are in the following situations:\n "}, {"sha": "8eb9173923d02efd70a546bfb2a1a8aef5b980c0", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "patch": "@@ -291,6 +291,7 @@ procedure Gnat1drv is\n \n       if Relaxed_RM_Semantics then\n          Overriding_Renamings := True;\n+         Treat_Categorization_Errors_As_Warnings := True;\n       end if;\n \n       --  Set switches for formal verification mode"}, {"sha": "67dfd8d924bf465c9725f70e7720c691a86d96f8", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "patch": "@@ -2132,13 +2132,34 @@ package body Sem_Ch13 is\n \n                --  SPARK_Mode\n \n-               when Aspect_SPARK_Mode =>\n+               when Aspect_SPARK_Mode => SPARK_Mode : declare\n+                  Decls : List_Id;\n+\n+               begin\n                   Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n                      Pragma_Name                  => Name_SPARK_Mode);\n \n+                  --  When the aspect appears on a package body, insert the\n+                  --  generated pragma at the top of the body declarations to\n+                  --  emulate the behavior of a source pragma.\n+\n+                  if Nkind (N) = N_Package_Body then\n+                     Decorate_Delayed_Aspect_And_Pragma (Aspect, Aitem);\n+                     Decls := Declarations (N);\n+\n+                     if No (Decls) then\n+                        Decls := New_List;\n+                        Set_Declarations (N, Decls);\n+                     end if;\n+\n+                     Prepend_To (Decls, Aitem);\n+                     goto Continue;\n+                  end if;\n+               end SPARK_Mode;\n+\n                --  Refined_Depends\n \n                --  Aspect Refined_Depends must be delayed because it can"}, {"sha": "457b581da5d8fce6ce6b8ef7d9a74234d2b96e38", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "patch": "@@ -6839,8 +6839,8 @@ package body Sem_Ch4 is\n \n       if No (Func_Name) then\n \n-         --  The prefix itself may be an indexing of a container\n-         --  rewrite as such and re-analyze.\n+         --  The prefix itself may be an indexing of a container: rewrite\n+         --  as such and re-analyze.\n \n          if Has_Implicit_Dereference (Etype (Prefix)) then\n             Build_Explicit_Dereference"}, {"sha": "bb66856536437df2659fe8eabb378d384206ae17", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff90f08f4ccef07ca580c63a7ee5aa896d45527/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=5ff90f08f4ccef07ca580c63a7ee5aa896d45527", "patch": "@@ -187,7 +187,7 @@ package body Sem_Ch5 is\n       end Diagnose_Non_Variable_Lhs;\n \n       --------------\n-      -- Kill_LHS --\n+      -- Kill_Lhs --\n       --------------\n \n       procedure Kill_Lhs is"}]}