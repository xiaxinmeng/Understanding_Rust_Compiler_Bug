{"sha": "8c8627c472ede1c89c7f61f6c0c26b87f2d27681", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4NjI3YzQ3MmVkZTFjODljN2Y2MWY2YzBjMjZiODdmMmQyNzY4MQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-08-31T00:04:33Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-08-31T00:04:33Z"}, "message": "re PR fortran/36895 (Namelist writting to internal files:  Control characters wrong?)\n\n2008-08-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/36895\n\t* io/write.c (namelist_write_newline): New function to correctly mark\n\tnext records in both external and internal units.\n\t(nml_write_obj): Use new function.\n\t(namelist_write: Use new function.\n\nFrom-SVN: r139813", "tree": {"sha": "7d96658215e45dc279a7c2dcc07fa9a0d13690e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d96658215e45dc279a7c2dcc07fa9a0d13690e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c8627c472ede1c89c7f61f6c0c26b87f2d27681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8627c472ede1c89c7f61f6c0c26b87f2d27681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8627c472ede1c89c7f61f6c0c26b87f2d27681", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8627c472ede1c89c7f61f6c0c26b87f2d27681/comments", "author": null, "committer": null, "parents": [{"sha": "5779e7133d84c5873249bb643d9852f314022f0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5779e7133d84c5873249bb643d9852f314022f0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5779e7133d84c5873249bb643d9852f314022f0b"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "f8083c8dbbdb605644793d8c85abf3ced9f1e069", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8627c472ede1c89c7f61f6c0c26b87f2d27681/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8627c472ede1c89c7f61f6c0c26b87f2d27681/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8c8627c472ede1c89c7f61f6c0c26b87f2d27681", "patch": "@@ -1,3 +1,11 @@\n+2008-08-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/36895\n+\t* io/write.c (namelist_write_newline): New function to correctly mark\n+\tnext records in both external and internal units.\n+\t(nml_write_obj): Use new function.\n+\t(namelist_write: Use new function.\n+\n 2008-08-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR libfortran/35863"}, {"sha": "65210bcbe1fc9d13693513c47b0b5e09092e72ad", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8627c472ede1c89c7f61f6c0c26b87f2d27681/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8627c472ede1c89c7f61f6c0c26b87f2d27681/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=8c8627c472ede1c89c7f61f6c0c26b87f2d27681", "patch": "@@ -1116,6 +1116,22 @@ list_formatted_write (st_parameter_dt *dtp, bt type, void *p, int kind,\n \n #define NML_DIGITS 20\n \n+static void\n+namelist_write_newline (st_parameter_dt *dtp)\n+{\n+  if (!is_internal_unit (dtp))\n+    {\n+#ifdef HAVE_CRLF\n+      write_character (dtp, \"\\r\\n\", 1, 2);\n+#else\n+      write_character (dtp, \"\\n\", 1, 1);\n+#endif\n+    }\n+  else\n+    write_character (dtp, \" \", 1, 1);\n+}\n+\n+\n static namelist_info *\n nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t       namelist_info * base, char * base_name)\n@@ -1152,11 +1168,9 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \n   if (obj->type != GFC_DTYPE_DERIVED)\n     {\n-#ifdef HAVE_CRLF\n-      write_character (dtp, \"\\r\\n \", 1, 3);\n-#else\n-      write_character (dtp, \"\\n \", 1, 2);\n-#endif\n+      namelist_write_newline (dtp);\n+      write_character (dtp, \" \", 1, 1);\n+\n       len = 0;\n       if (base)\n \t{\n@@ -1361,11 +1375,8 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t  if (num > 5)\n \t    {\n \t      num = 0;\n-#ifdef HAVE_CRLF\n-\t      write_character (dtp, \"\\r\\n \", 1, 3);\n-#else\n-\t      write_character (dtp, \"\\n \", 1, 2);\n-#endif\n+\t      namelist_write_newline (dtp);\n+\t      write_character (dtp, \" \", 1, 1);\n \t    }\n \t  rep_ctr = 1;\n \t}\n@@ -1392,6 +1403,7 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n   return retval;\n }\n \n+\n /* This is the entry function for namelist writes.  It outputs the name\n    of the namelist and iterates through the namelist by calls to\n    nml_write_obj.  The call below has dummys in the arguments used in\n@@ -1447,12 +1459,8 @@ namelist_write (st_parameter_dt *dtp)\n \t}\n     }\n \n-#ifdef HAVE_CRLF\n-  write_character (dtp, \"  /\\r\\n\", 1, 5);\n-#else\n-  write_character (dtp, \"  /\\n\", 1, 4);\n-#endif\n-\n+  write_character (dtp, \"  /\", 1, 3);\n+  namelist_write_newline (dtp);\n   /* Restore the original delimiter.  */\n   dtp->u.p.delim_status = tmp_delim;\n }"}]}