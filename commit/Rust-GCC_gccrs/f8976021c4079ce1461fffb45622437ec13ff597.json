{"sha": "f8976021c4079ce1461fffb45622437ec13ff597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5NzYwMjFjNDA3OWNlMTQ2MWZmZmI0NTYyMjQzN2VjMTNmZjU5Nw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1998-12-09T15:50:12Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1998-12-09T15:50:12Z"}, "message": "java-tree.def (NEW_ARRAY_INIT): New Java tree code.\n\nWed Dec  9 15:37:05 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* java-tree.def (NEW_ARRAY_INIT): New Java tree code.\n\t* lex.c (java_lex): Remember column position before advancing one\n \ttoken. Retain location information on OCB_TK.\n\t* lex.h (typedef struct java_lc): Added new field.\n\t* parse.h (GET_SKIP_TYPE): New macro.\n\t(QUAL_DECL_TYPE): Redefined using GET_SKIP_TYPE.\n\t* parse.y (build_new_array_init, patch_new_array_init,\n \tpatch_array_constructor, maybe_build_array_element_wfl,\n \tarray_constructor_check_entry): New function prototypes.\n\t(switch_block:): Tagged <node>.\n\t(OCB_TK): Tagged <operator>.\n\t(array_initializer:): Installed actions.\n\t(variable_initializer): Build location information on element if\n \tnecessary.\n\t(switch_statement:): Fixed indentation typo.\n\t(switch_block:): Redefined default action.\n\t(java_complete_tree): Handle NEW_ARRAY_INIT in MODIFY_EXPR:.\n\t(patch_assignment): Removed duplicate code.\n\t(maybe_build_array_element_wfl, build_new_array_init,\n \tpatch_new_array_init, patch_array_constructor,\n \tarray_constructor_check_entry): New functions.\nParse and walk array initializer nodes.\n\nFrom-SVN: r24224", "tree": {"sha": "136a2facf7b183653374d398723981a6e03e7777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/136a2facf7b183653374d398723981a6e03e7777"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8976021c4079ce1461fffb45622437ec13ff597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8976021c4079ce1461fffb45622437ec13ff597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8976021c4079ce1461fffb45622437ec13ff597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8976021c4079ce1461fffb45622437ec13ff597/comments", "author": null, "committer": null, "parents": [{"sha": "996d0685a14687f870f96f29fc95e1ba8f71900c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996d0685a14687f870f96f29fc95e1ba8f71900c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996d0685a14687f870f96f29fc95e1ba8f71900c"}], "stats": {"total": 1336, "additions": 893, "deletions": 443}, "files": [{"sha": "45dbf9915bacef382dc5f500176ae575c4b5f663", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -1,3 +1,27 @@\n+Wed Dec  9 15:37:05 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* java-tree.def (NEW_ARRAY_INIT): New Java tree code.\n+\t* lex.c (java_lex): Remember column position before advancing one\n+ \ttoken. Retain location information on OCB_TK.\n+\t* lex.h (typedef struct java_lc): Added new field.\n+\t* parse.h (GET_SKIP_TYPE): New macro.\n+\t(QUAL_DECL_TYPE): Redefined using GET_SKIP_TYPE.\n+\t* parse.y (build_new_array_init, patch_new_array_init,\n+ \tpatch_array_constructor, maybe_build_array_element_wfl,\n+ \tarray_constructor_check_entry): New function prototypes.\n+\t(switch_block:): Tagged <node>.\n+\t(OCB_TK): Tagged <operator>.\n+\t(array_initializer:): Installed actions.\n+\t(variable_initializer): Build location information on element if\n+ \tnecessary.\n+\t(switch_statement:): Fixed indentation typo.\n+\t(switch_block:): Redefined default action.\n+\t(java_complete_tree): Handle NEW_ARRAY_INIT in MODIFY_EXPR:.\n+\t(patch_assignment): Removed duplicate code.\n+\t(maybe_build_array_element_wfl, build_new_array_init,\n+ \tpatch_new_array_init, patch_array_constructor,\n+ \tarray_constructor_check_entry): New functions.\n+\n Mon Dec  7 15:13:52 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (array_initializer): Tagged <node>."}, {"sha": "2134c5b70af972c5dedd51836922ead0fae59c97", "filename": "gcc/java/java-tree.def", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fjava-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fjava-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.def?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -76,4 +76,8 @@ DEFTREECODE (CONDITIONAL_EXPR, \"?:\", 'e', 3)\n    Operand 1 is the class used for the test.  */\n DEFTREECODE (INSTANCEOF_EXPR, \"instanceof\", 'e', 2)\n \n-\n+/* Array initializers.\n+   Operand 0 is the (sub) array target to initialize, left to NULL_TREE\n+   when the node is created.\n+   Operand 1 is a CONSTRUCTOR node.  */\n+DEFTREECODE (NEW_ARRAY_INIT, \"new_array_init\", '1', 1)"}, {"sha": "b8b635ab1fc28ddcce466706e621b43a10fae386", "filename": "gcc/java/lex.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -567,6 +567,7 @@ java_lex (java_lval)\n     }\n \n   ctxp->elc.line = ctxp->c_line->lineno;\n+  ctxp->elc.prev_col = ctxp->elc.col;\n   ctxp->elc.col = ctxp->c_line->char_col - JAVA_COLUMN_DELTA (-1);\n   if (ctxp->elc.col < 0)\n     fatal (\"ctxp->elc.col < 0 - java_lex\");\n@@ -924,7 +925,7 @@ java_lex (java_lval)\n       if (ctxp->ccb_indent == 1)\n \tctxp->first_ccb_indent1 = lineno;\n       ctxp->ccb_indent++;\n-      return OCB_TK;\n+      BUILD_OPERATOR (OCB_TK);\n     case '}':\n       JAVA_LEX_SEP (c);\n       ctxp->ccb_indent--;"}, {"sha": "609251c8d3931c05200d8fd6eac7eca63b2b76fd", "filename": "gcc/java/lex.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -92,6 +92,7 @@ struct java_error {\n \n typedef struct _java_lc {\n   int line;\n+  int prev_col;\n   int col;\n } java_lc;\n "}, {"sha": "d159e3a74a80eba2f917a6aaaac1c9372573f5af", "filename": "gcc/java/parse.c", "status": "modified", "additions": 641, "deletions": 426, "changes": 1067, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -308,6 +308,11 @@ static tree maybe_build_primttype_type_ref PROTO ((tree, tree));\n static void unreachable_stmt_error PROTO ((tree));\n static tree find_expr_with_wfl PROTO ((tree));\n static void missing_return_error PROTO ((tree));\n+static tree build_new_array_init PROTO ((int, tree));\n+static tree patch_new_array_init PROTO ((tree, tree));\n+static tree patch_array_constructor PROTO ((tree, tree));\n+static tree maybe_build_array_element_wfl PROTO ((tree));\n+static int array_constructor_check_entry PROTO ((tree, tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -353,7 +358,7 @@ static tree wfl_append = NULL_TREE;\n /* The \"toString\" identifier used for String `+' operator. */\n static tree wfl_to_string = NULL_TREE;\n \n-#line 281 \"./parse.y\"\n+#line 286 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -657,56 +662,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   431,   437,   439,   440,   441,   442,   443,   447,   449,   452,\n-   454,   455,   458,   460,   463,   467,   471,   475,   481,   483,\n-   485,   487,   492,   494,   497,   501,   506,   511,   513,   514,\n-   515,   516,   517,   518,   519,   522,   527,   533,   535,   538,\n-   541,   543,   547,   549,   552,   579,   581,   585,   598,   600,\n-   604,   611,   612,   614,   624,   629,   644,   648,   651,   654,\n-   657,   659,   661,   663,   667,   669,   671,   673,   677,   679,\n-   681,   688,   694,   699,   703,   706,   710,   712,   715,   717,\n-   718,   719,   723,   725,   726,   728,   733,   736,   746,   749,\n-   751,   755,   758,   765,   771,   779,   781,   783,   785,   787,\n-   791,   793,   797,   804,   805,   809,   812,   814,   816,   818,\n-   820,   822,   824,   826,   833,   836,   838,   847,   849,   853,\n-   858,   863,   867,   872,   874,   876,   883,   885,   887,   891,\n-   894,   896,   900,   902,   903,   908,   913,   919,   927,   934,\n-   937,   940,   944,   947,   951,   960,   962,   964,   969,   976,\n-   984,   986,   990,   998,  1009,  1013,  1016,  1019,  1022,  1025,\n-  1028,  1031,  1034,  1036,  1040,  1046,  1051,  1053,  1057,  1060,\n-  1064,  1066,  1069,  1071,  1072,  1074,  1078,  1082,  1088,  1093,\n-  1096,  1098,  1100,  1104,  1107,  1109,  1114,  1117,  1121,  1126,\n-  1134,  1136,  1139,  1141,  1143,  1147,  1151,  1154,  1158,  1160,\n-  1161,  1162,  1163,  1164,  1174,  1176,  1177,  1178,  1179,  1182,\n-  1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,\n-  1196,  1201,  1212,  1219,  1223,  1234,  1244,  1250,  1256,  1262,\n-  1264,  1270,  1272,  1278,  1280,  1282,  1284,  1286,  1290,  1292,\n-  1293,  1294,  1295,  1296,  1297,  1300,  1303,  1305,  1307,  1311,\n-  1316,  1321,  1327,  1336,  1342,  1344,  1346,  1350,  1352,  1353,\n-  1354,  1357,  1359,  1362,  1366,  1368,  1371,  1378,  1384,  1386,\n-  1388,  1392,  1400,  1403,  1405,  1407,  1411,  1416,  1425,  1430,\n-  1433,  1440,  1442,  1444,  1448,  1451,  1460,  1467,  1469,  1473,\n-  1486,  1488,  1494,  1500,  1504,  1506,  1510,  1513,  1515,  1519,\n-  1522,  1524,  1526,  1530,  1533,  1535,  1537,  1541,  1544,  1546,\n-  1548,  1552,  1558,  1560,  1564,  1571,  1573,  1575,  1577,  1581,\n-  1589,  1592,  1594,  1596,  1600,  1602,  1609,  1617,  1634,  1636,\n-  1638,  1642,  1648,  1653,  1655,  1658,  1660,  1662,  1664,  1665,\n-  1666,  1667,  1671,  1673,  1675,  1680,  1682,  1684,  1686,  1688,\n-  1692,  1695,  1700,  1702,  1707,  1708,  1709,  1710,  1711,  1713,\n-  1715,  1717,  1719,  1721,  1725,  1727,  1730,  1736,  1741,  1745,\n-  1748,  1750,  1752,  1756,  1758,  1760,  1762,  1766,  1769,  1773,\n-  1779,  1781,  1789,  1792,  1794,  1798,  1803,  1811,  1815,  1818,\n-  1820,  1831,  1842,  1847,  1856,  1858,  1862,  1865,  1867,  1872,\n-  1877,  1882,  1889,  1891,  1892,  1893,  1896,  1901,  1906,  1908,\n-  1909,  1911,  1913,  1914,  1916,  1920,  1923,  1927,  1930,  1934,\n-  1936,  1938,  1940,  1941,  1943,  1947,  1955,  1957,  1959,  1971,\n-  1973,  1979,  1981,  1983,  1987,  1989,  1994,  1999,  2004,  2006,\n-  2008,  2012,  2014,  2019,  2024,  2026,  2030,  2032,  2037,  2042,\n-  2047,  2049,  2051,  2055,  2057,  2062,  2067,  2072,  2077,  2079,\n-  2081,  2083,  2085,  2087,  2091,  2093,  2098,  2103,  2105,  2109,\n-  2111,  2116,  2120,  2122,  2127,  2131,  2133,  2138,  2142,  2144,\n-  2149,  2153,  2155,  2160,  2164,  2166,  2171,  2177,  2179,  2183,\n-  2185,  2188,  2191,  2199,  2201,  2202,  2205,  2207,  2210,  2214\n+   436,   442,   444,   445,   446,   447,   448,   452,   454,   457,\n+   459,   460,   463,   465,   468,   472,   476,   480,   486,   488,\n+   490,   492,   497,   499,   502,   506,   511,   516,   518,   519,\n+   520,   521,   522,   523,   524,   527,   532,   538,   540,   543,\n+   546,   548,   552,   554,   557,   584,   586,   590,   603,   605,\n+   609,   616,   617,   619,   629,   634,   649,   653,   656,   659,\n+   662,   664,   666,   668,   672,   674,   676,   678,   682,   684,\n+   686,   693,   699,   704,   708,   711,   715,   717,   720,   722,\n+   723,   724,   728,   730,   731,   733,   738,   741,   751,   754,\n+   756,   760,   763,   770,   776,   784,   786,   788,   790,   792,\n+   796,   798,   802,   809,   810,   814,   817,   819,   821,   823,\n+   825,   827,   829,   831,   838,   841,   843,   852,   854,   858,\n+   863,   868,   872,   877,   879,   881,   888,   890,   892,   896,\n+   899,   901,   905,   907,   908,   913,   918,   924,   932,   939,\n+   942,   945,   949,   952,   956,   965,   967,   969,   974,   981,\n+   989,   991,   995,  1003,  1014,  1018,  1021,  1024,  1027,  1030,\n+  1033,  1036,  1039,  1041,  1045,  1051,  1056,  1058,  1062,  1065,\n+  1069,  1071,  1074,  1076,  1077,  1079,  1083,  1087,  1093,  1098,\n+  1105,  1107,  1113,  1117,  1123,  1125,  1130,  1133,  1137,  1142,\n+  1150,  1152,  1155,  1157,  1159,  1163,  1167,  1170,  1174,  1176,\n+  1177,  1178,  1179,  1180,  1190,  1192,  1193,  1194,  1195,  1198,\n+  1200,  1201,  1202,  1203,  1204,  1205,  1206,  1207,  1208,  1209,\n+  1212,  1217,  1228,  1235,  1239,  1250,  1260,  1266,  1272,  1278,\n+  1280,  1286,  1288,  1294,  1296,  1298,  1300,  1302,  1306,  1308,\n+  1309,  1310,  1311,  1312,  1313,  1316,  1319,  1321,  1323,  1327,\n+  1332,  1337,  1343,  1353,  1359,  1361,  1363,  1370,  1373,  1375,\n+  1377,  1381,  1383,  1386,  1390,  1392,  1395,  1402,  1408,  1410,\n+  1412,  1416,  1424,  1427,  1429,  1431,  1435,  1440,  1449,  1454,\n+  1457,  1464,  1466,  1468,  1472,  1475,  1484,  1491,  1493,  1497,\n+  1510,  1512,  1518,  1524,  1528,  1530,  1534,  1537,  1539,  1543,\n+  1546,  1548,  1550,  1554,  1557,  1559,  1561,  1565,  1568,  1570,\n+  1572,  1576,  1582,  1584,  1588,  1595,  1597,  1599,  1601,  1605,\n+  1613,  1616,  1618,  1620,  1624,  1626,  1633,  1641,  1658,  1660,\n+  1662,  1666,  1672,  1677,  1679,  1682,  1684,  1686,  1688,  1689,\n+  1690,  1691,  1695,  1697,  1699,  1704,  1706,  1708,  1710,  1712,\n+  1716,  1719,  1724,  1726,  1731,  1732,  1733,  1734,  1735,  1737,\n+  1739,  1741,  1743,  1745,  1749,  1751,  1754,  1760,  1765,  1769,\n+  1772,  1774,  1776,  1780,  1782,  1784,  1786,  1790,  1793,  1797,\n+  1803,  1805,  1813,  1816,  1818,  1822,  1827,  1835,  1839,  1842,\n+  1844,  1855,  1866,  1871,  1880,  1882,  1886,  1889,  1891,  1896,\n+  1901,  1906,  1913,  1915,  1916,  1917,  1920,  1925,  1930,  1932,\n+  1933,  1935,  1937,  1938,  1940,  1944,  1947,  1951,  1954,  1958,\n+  1960,  1962,  1964,  1965,  1967,  1971,  1979,  1981,  1983,  1995,\n+  1997,  2003,  2005,  2007,  2011,  2013,  2018,  2023,  2028,  2030,\n+  2032,  2036,  2038,  2043,  2048,  2050,  2054,  2056,  2061,  2066,\n+  2071,  2073,  2075,  2079,  2081,  2086,  2091,  2096,  2101,  2103,\n+  2105,  2107,  2109,  2111,  2115,  2117,  2122,  2127,  2129,  2133,\n+  2135,  2140,  2144,  2146,  2151,  2155,  2157,  2162,  2166,  2168,\n+  2173,  2177,  2179,  2184,  2188,  2190,  2195,  2201,  2203,  2207,\n+  2209,  2212,  2215,  2223,  2225,  2226,  2229,  2231,  2234,  2238\n };\n #endif\n \n@@ -2716,66 +2721,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 433 \"./parse.y\"\n+#line 438 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 477 \"./parse.y\"\n+#line 482 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 482 \"./parse.y\"\n+#line 487 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 484 \"./parse.y\"\n+#line 489 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 486 \"./parse.y\"\n+#line 491 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 488 \"./parse.y\"\n+#line 493 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 503 \"./parse.y\"\n+#line 508 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 512 \"./parse.y\"\n+#line 517 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 524 \"./parse.y\"\n+#line 529 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 528 \"./parse.y\"\n+#line 533 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 540 \"./parse.y\"\n+#line 545 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 542 \"./parse.y\"\n+#line 547 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 544 \"./parse.y\"\n+#line 549 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 554 \"./parse.y\"\n+#line 559 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2803,15 +2808,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 580 \"./parse.y\"\n+#line 585 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 582 \"./parse.y\"\n+#line 587 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 587 \"./parse.y\"\n+#line 592 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  tree node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n@@ -2825,40 +2830,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 599 \"./parse.y\"\n+#line 604 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 601 \"./parse.y\"\n+#line 606 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 606 \"./parse.y\"\n+#line 611 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  maybe_generate_finit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 613 \"./parse.y\"\n+#line 618 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 615 \"./parse.y\"\n+#line 620 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 626 \"./parse.y\"\n+#line 631 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 630 \"./parse.y\"\n+#line 635 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2872,116 +2877,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 646 \"./parse.y\"\n+#line 651 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 648 \"./parse.y\"\n+#line 653 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 652 \"./parse.y\"\n+#line 657 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 654 \"./parse.y\"\n+#line 659 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 658 \"./parse.y\"\n+#line 663 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 660 \"./parse.y\"\n+#line 665 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 662 \"./parse.y\"\n+#line 667 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 664 \"./parse.y\"\n+#line 669 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 668 \"./parse.y\"\n+#line 673 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 670 \"./parse.y\"\n+#line 675 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 672 \"./parse.y\"\n+#line 677 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 674 \"./parse.y\"\n+#line 679 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 678 \"./parse.y\"\n+#line 683 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 680 \"./parse.y\"\n+#line 685 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 682 \"./parse.y\"\n+#line 687 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 690 \"./parse.y\"\n+#line 695 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 695 \"./parse.y\"\n+#line 700 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 700 \"./parse.y\"\n+#line 705 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 705 \"./parse.y\"\n+#line 710 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 707 \"./parse.y\"\n+#line 712 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 720 \"./parse.y\"\n+#line 725 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 727 \"./parse.y\"\n+#line 732 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 729 \"./parse.y\"\n+#line 734 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 735 \"./parse.y\"\n+#line 740 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 737 \"./parse.y\"\n+#line 742 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -2991,19 +2996,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 750 \"./parse.y\"\n+#line 755 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 752 \"./parse.y\"\n+#line 757 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 757 \"./parse.y\"\n+#line 762 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 759 \"./parse.y\"\n+#line 764 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3012,101 +3017,101 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 766 \"./parse.y\"\n+#line 771 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 772 \"./parse.y\"\n+#line 777 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 782 \"./parse.y\"\n+#line 787 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 784 \"./parse.y\"\n+#line 789 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 786 \"./parse.y\"\n+#line 791 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 788 \"./parse.y\"\n+#line 793 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 103:\n-#line 799 \"./parse.y\"\n+#line 804 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 804 \"./parse.y\"\n+#line 809 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 105:\n-#line 806 \"./parse.y\"\n+#line 811 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 811 \"./parse.y\"\n+#line 816 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 813 \"./parse.y\"\n+#line 818 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 815 \"./parse.y\"\n+#line 820 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 817 \"./parse.y\"\n+#line 822 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 819 \"./parse.y\"\n+#line 824 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 821 \"./parse.y\"\n+#line 826 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 823 \"./parse.y\"\n+#line 828 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 825 \"./parse.y\"\n+#line 830 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 827 \"./parse.y\"\n+#line 832 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 835 \"./parse.y\"\n+#line 840 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 837 \"./parse.y\"\n+#line 842 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 839 \"./parse.y\"\n+#line 844 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3117,169 +3122,169 @@ case 117:\n \t\t;\n     break;}\n case 118:\n-#line 848 \"./parse.y\"\n+#line 853 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 850 \"./parse.y\"\n+#line 855 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 855 \"./parse.y\"\n+#line 860 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 859 \"./parse.y\"\n+#line 864 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 864 \"./parse.y\"\n+#line 869 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 869 \"./parse.y\"\n+#line 874 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 873 \"./parse.y\"\n+#line 878 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 875 \"./parse.y\"\n+#line 880 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 877 \"./parse.y\"\n+#line 882 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 884 \"./parse.y\"\n+#line 889 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 886 \"./parse.y\"\n+#line 891 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 888 \"./parse.y\"\n+#line 893 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 893 \"./parse.y\"\n+#line 898 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 895 \"./parse.y\"\n+#line 900 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 897 \"./parse.y\"\n+#line 902 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 904 \"./parse.y\"\n+#line 909 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 910 \"./parse.y\"\n+#line 915 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 914 \"./parse.y\"\n+#line 919 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 921 \"./parse.y\"\n+#line 926 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 929 \"./parse.y\"\n+#line 934 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 934 \"./parse.y\"\n+#line 939 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 939 \"./parse.y\"\n+#line 944 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 941 \"./parse.y\"\n+#line 946 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 946 \"./parse.y\"\n+#line 951 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 948 \"./parse.y\"\n+#line 953 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 956 \"./parse.y\"\n+#line 961 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 961 \"./parse.y\"\n+#line 966 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 963 \"./parse.y\"\n+#line 968 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 965 \"./parse.y\"\n+#line 970 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 971 \"./parse.y\"\n+#line 976 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 977 \"./parse.y\"\n+#line 982 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 985 \"./parse.y\"\n+#line 990 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 987 \"./parse.y\"\n+#line 992 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 992 \"./parse.y\"\n+#line 997 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3288,7 +3293,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 999 \"./parse.y\"\n+#line 1004 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3297,167 +3302,178 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1011 \"./parse.y\"\n+#line 1016 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1013 \"./parse.y\"\n+#line 1018 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1017 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1019 \"./parse.y\"\n+#line 1024 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1023 \"./parse.y\"\n+#line 1028 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1025 \"./parse.y\"\n+#line 1030 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1029 \"./parse.y\"\n+#line 1034 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1031 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1035 \"./parse.y\"\n+#line 1040 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1037 \"./parse.y\"\n+#line 1042 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1042 \"./parse.y\"\n+#line 1047 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1047 \"./parse.y\"\n+#line 1052 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1052 \"./parse.y\"\n+#line 1057 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1054 \"./parse.y\"\n+#line 1059 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1059 \"./parse.y\"\n+#line 1064 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1061 \"./parse.y\"\n+#line 1066 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1073 \"./parse.y\"\n+#line 1078 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1075 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1084 \"./parse.y\"\n+#line 1089 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1089 \"./parse.y\"\n+#line 1094 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1095 \"./parse.y\"\n-{ yyval.node = NULL_TREE; ;\n+#line 1100 \"./parse.y\"\n+{ \n+\t\t  yyval.node = build_new_array_init \n+\t\t    (yyvsp[-1].operator.location, \n+\t\t     tree_cons (NULL_TREE, NULL_TREE, NULL_TREE));\n+\t\t;\n     break;}\n case 181:\n-#line 1097 \"./parse.y\"\n-{ yyval.node = yyvsp[-1].node; ;\n+#line 1106 \"./parse.y\"\n+{ yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 182:\n-#line 1099 \"./parse.y\"\n-{ yyval.node = NULL_TREE; ;\n+#line 1108 \"./parse.y\"\n+{\n+\t\t  yyval.node = build_new_array_init \n+\t\t    (yyvsp[-2].operator.location,\n+\t\t     tree_cons (NULL_TREE, NULL_TREE, NULL_TREE));\n+\t\t;\n     break;}\n case 183:\n-#line 1101 \"./parse.y\"\n-{ yyval.node = yyvsp[-2].node; ;\n+#line 1114 \"./parse.y\"\n+{ yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 184:\n-#line 1106 \"./parse.y\"\n-{ yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE); ;\n+#line 1119 \"./parse.y\"\n+{ \n+\t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n+\t\t\t\t  yyvsp[0].node, NULL_TREE);\n+\t\t;\n     break;}\n case 185:\n-#line 1108 \"./parse.y\"\n-{ yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node); ;\n+#line 1124 \"./parse.y\"\n+{ yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 186:\n-#line 1110 \"./parse.y\"\n+#line 1126 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1116 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 188:\n-#line 1118 \"./parse.y\"\n+#line 1134 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1123 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1128 \"./parse.y\"\n+#line 1144 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 194:\n-#line 1142 \"./parse.y\"\n+#line 1158 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1144 \"./parse.y\"\n+#line 1160 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1153 \"./parse.y\"\n+#line 1169 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1155 \"./parse.y\"\n+#line 1171 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1165 \"./parse.y\"\n+#line 1181 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3467,11 +3483,11 @@ case 204:\n \t\t;\n     break;}\n case 221:\n-#line 1198 \"./parse.y\"\n+#line 1214 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1203 \"./parse.y\"\n+#line 1219 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3481,27 +3497,27 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1214 \"./parse.y\"\n+#line 1230 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 224:\n-#line 1220 \"./parse.y\"\n+#line 1236 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1225 \"./parse.y\"\n+#line 1241 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 226:\n-#line 1236 \"./parse.y\"\n+#line 1252 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3512,204 +3528,221 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1245 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1251 \"./parse.y\"\n+#line 1267 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1257 \"./parse.y\"\n+#line 1273 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1263 \"./parse.y\"\n+#line 1279 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1265 \"./parse.y\"\n+#line 1281 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1271 \"./parse.y\"\n+#line 1287 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1273 \"./parse.y\"\n+#line 1289 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1279 \"./parse.y\"\n+#line 1295 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1281 \"./parse.y\"\n+#line 1297 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1283 \"./parse.y\"\n+#line 1299 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1285 \"./parse.y\"\n+#line 1301 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1287 \"./parse.y\"\n+#line 1303 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1302 \"./parse.y\"\n+#line 1318 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 247:\n-#line 1304 \"./parse.y\"\n+#line 1320 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1306 \"./parse.y\"\n+#line 1322 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1308 \"./parse.y\"\n+#line 1324 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1313 \"./parse.y\"\n+#line 1329 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1318 \"./parse.y\"\n+#line 1334 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1323 \"./parse.y\"\n+#line 1339 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1327 \"./parse.y\"\n+#line 1343 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n-\t\t     I.e. make the last statment also have its own COMPOUND_EXPR. */\n+\t\t     I.e. make the last statment also have its own\n+\t\t     COMPOUND_EXPR. */\n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  TREE_OPERAND (yyvsp[-2].node, 1) = exit_block ();\n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-2].node), yyvsp[-2].node);\n \t\t;\n     break;}\n case 254:\n-#line 1338 \"./parse.y\"\n+#line 1355 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1343 \"./parse.y\"\n+#line 1360 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1345 \"./parse.y\"\n+#line 1362 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1347 \"./parse.y\"\n+#line 1364 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n+case 258:\n+#line 1372 \"./parse.y\"\n+{ yyval.node = NULL_TREE; ;\n+    break;}\n+case 259:\n+#line 1374 \"./parse.y\"\n+{ yyval.node = NULL_TREE; ;\n+    break;}\n+case 260:\n+#line 1376 \"./parse.y\"\n+{ yyval.node = NULL_TREE; ;\n+    break;}\n+case 261:\n+#line 1378 \"./parse.y\"\n+{ yyval.node = NULL_TREE; ;\n+    break;}\n case 267:\n-#line 1373 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1379 \"./parse.y\"\n+#line 1403 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1385 \"./parse.y\"\n+#line 1409 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1387 \"./parse.y\"\n+#line 1411 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1389 \"./parse.y\"\n+#line 1413 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1394 \"./parse.y\"\n+#line 1418 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1402 \"./parse.y\"\n+#line 1426 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1404 \"./parse.y\"\n+#line 1428 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1406 \"./parse.y\"\n+#line 1430 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1408 \"./parse.y\"\n+#line 1432 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1413 \"./parse.y\"\n+#line 1437 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1418 \"./parse.y\"\n+#line 1442 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1427 \"./parse.y\"\n+#line 1451 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1432 \"./parse.y\"\n+#line 1456 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 281:\n-#line 1434 \"./parse.y\"\n+#line 1458 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3718,23 +3751,23 @@ case 281:\n \t\t;\n     break;}\n case 282:\n-#line 1441 \"./parse.y\"\n+#line 1465 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1443 \"./parse.y\"\n+#line 1467 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1445 \"./parse.y\"\n+#line 1469 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1450 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1452 \"./parse.y\"\n+#line 1476 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3743,23 +3776,23 @@ case 286:\n \t\t;\n     break;}\n case 287:\n-#line 1462 \"./parse.y\"\n+#line 1486 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1468 \"./parse.y\"\n+#line 1492 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1470 \"./parse.y\"\n+#line 1494 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1475 \"./parse.y\"\n+#line 1499 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3772,176 +3805,176 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1487 \"./parse.y\"\n+#line 1511 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1489 \"./parse.y\"\n+#line 1513 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1495 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1501 \"./parse.y\"\n+#line 1525 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1505 \"./parse.y\"\n+#line 1529 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1507 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1512 \"./parse.y\"\n+#line 1536 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1514 \"./parse.y\"\n+#line 1538 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1516 \"./parse.y\"\n+#line 1540 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1521 \"./parse.y\"\n+#line 1545 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1523 \"./parse.y\"\n+#line 1547 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1525 \"./parse.y\"\n+#line 1549 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1527 \"./parse.y\"\n+#line 1551 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1532 \"./parse.y\"\n+#line 1556 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1534 \"./parse.y\"\n+#line 1558 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1536 \"./parse.y\"\n+#line 1560 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1538 \"./parse.y\"\n+#line 1562 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1543 \"./parse.y\"\n+#line 1567 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1545 \"./parse.y\"\n+#line 1569 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1547 \"./parse.y\"\n+#line 1571 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1549 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1554 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1559 \"./parse.y\"\n+#line 1583 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1561 \"./parse.y\"\n+#line 1585 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1566 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1572 \"./parse.y\"\n+#line 1596 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1574 \"./parse.y\"\n+#line 1598 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1576 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1578 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1583 \"./parse.y\"\n+#line 1607 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1591 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 322:\n-#line 1593 \"./parse.y\"\n+#line 1617 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1595 \"./parse.y\"\n+#line 1619 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1597 \"./parse.y\"\n+#line 1621 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1603 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1611 \"./parse.y\"\n+#line 1635 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1619 \"./parse.y\"\n+#line 1643 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3959,203 +3992,203 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1635 \"./parse.y\"\n+#line 1659 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1637 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1639 \"./parse.y\"\n+#line 1663 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1644 \"./parse.y\"\n+#line 1668 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 333:\n-#line 1649 \"./parse.y\"\n+#line 1673 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1661 \"./parse.y\"\n+#line 1685 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1663 \"./parse.y\"\n+#line 1687 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1672 \"./parse.y\"\n+#line 1696 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1674 \"./parse.y\"\n+#line 1698 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1676 \"./parse.y\"\n+#line 1700 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1681 \"./parse.y\"\n+#line 1705 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1683 \"./parse.y\"\n+#line 1707 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1685 \"./parse.y\"\n+#line 1709 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1687 \"./parse.y\"\n+#line 1711 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1689 \"./parse.y\"\n+#line 1713 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1694 \"./parse.y\"\n+#line 1718 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1696 \"./parse.y\"\n+#line 1720 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1701 \"./parse.y\"\n+#line 1725 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1703 \"./parse.y\"\n+#line 1727 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1712 \"./parse.y\"\n+#line 1736 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1714 \"./parse.y\"\n+#line 1738 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1716 \"./parse.y\"\n+#line 1740 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1718 \"./parse.y\"\n+#line 1742 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1720 \"./parse.y\"\n+#line 1744 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1722 \"./parse.y\"\n+#line 1746 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1732 \"./parse.y\"\n+#line 1756 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1737 \"./parse.y\"\n+#line 1761 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1742 \"./parse.y\"\n+#line 1766 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1747 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1749 \"./parse.y\"\n+#line 1773 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1751 \"./parse.y\"\n+#line 1775 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 373:\n-#line 1753 \"./parse.y\"\n+#line 1777 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 374:\n-#line 1757 \"./parse.y\"\n+#line 1781 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1759 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1761 \"./parse.y\"\n+#line 1785 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1763 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1768 \"./parse.y\"\n+#line 1792 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1770 \"./parse.y\"\n+#line 1794 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1775 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1780 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1782 \"./parse.y\"\n+#line 1806 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1791 \"./parse.y\"\n+#line 1815 \"./parse.y\"\n { ctxp->osb_number = 1; ;\n     break;}\n case 384:\n-#line 1793 \"./parse.y\"\n+#line 1817 \"./parse.y\"\n { ctxp->osb_number++; ;\n     break;}\n case 385:\n-#line 1795 \"./parse.y\"\n+#line 1819 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1800 \"./parse.y\"\n+#line 1824 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1804 \"./parse.y\"\n+#line 1828 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4165,19 +4198,19 @@ case 387:\n \t\t;\n     break;}\n case 388:\n-#line 1812 \"./parse.y\"\n+#line 1836 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1817 \"./parse.y\"\n+#line 1841 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1819 \"./parse.y\"\n+#line 1843 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1821 \"./parse.y\"\n+#line 1845 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4190,7 +4223,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1832 \"./parse.y\"\n+#line 1856 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4203,121 +4236,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1843 \"./parse.y\"\n+#line 1867 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1848 \"./parse.y\"\n+#line 1872 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1857 \"./parse.y\"\n+#line 1881 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1859 \"./parse.y\"\n+#line 1883 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1864 \"./parse.y\"\n+#line 1888 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1866 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1868 \"./parse.y\"\n+#line 1892 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1873 \"./parse.y\"\n+#line 1897 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1878 \"./parse.y\"\n+#line 1902 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1883 \"./parse.y\"\n+#line 1907 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1898 \"./parse.y\"\n+#line 1922 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1903 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1910 \"./parse.y\"\n+#line 1934 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1912 \"./parse.y\"\n+#line 1936 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1915 \"./parse.y\"\n+#line 1939 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1917 \"./parse.y\"\n+#line 1941 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 1922 \"./parse.y\"\n+#line 1946 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 1924 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 1929 \"./parse.y\"\n+#line 1953 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 1931 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 1937 \"./parse.y\"\n+#line 1961 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 1939 \"./parse.y\"\n+#line 1963 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 1942 \"./parse.y\"\n+#line 1966 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1944 \"./parse.y\"\n+#line 1968 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 1949 \"./parse.y\"\n+#line 1973 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (ctxp->osb_number--)\n@@ -4326,15 +4359,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 1956 \"./parse.y\"\n+#line 1980 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 1958 \"./parse.y\"\n+#line 1982 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 1960 \"./parse.y\"\n+#line 1984 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (ctxp->osb_number--)\n@@ -4348,275 +4381,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 1972 \"./parse.y\"\n+#line 1996 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 1974 \"./parse.y\"\n+#line 1998 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 1980 \"./parse.y\"\n+#line 2004 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 1982 \"./parse.y\"\n+#line 2006 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 1984 \"./parse.y\"\n+#line 2008 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 1990 \"./parse.y\"\n+#line 2014 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 1995 \"./parse.y\"\n+#line 2019 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2000 \"./parse.y\"\n+#line 2024 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2005 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2007 \"./parse.y\"\n+#line 2031 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2009 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2015 \"./parse.y\"\n+#line 2039 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2020 \"./parse.y\"\n+#line 2044 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2025 \"./parse.y\"\n+#line 2049 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2027 \"./parse.y\"\n+#line 2051 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2033 \"./parse.y\"\n+#line 2057 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2038 \"./parse.y\"\n+#line 2062 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2043 \"./parse.y\"\n+#line 2067 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2048 \"./parse.y\"\n+#line 2072 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2050 \"./parse.y\"\n+#line 2074 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2052 \"./parse.y\"\n+#line 2076 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2058 \"./parse.y\"\n+#line 2082 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2063 \"./parse.y\"\n+#line 2087 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2068 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2073 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2078 \"./parse.y\"\n+#line 2102 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2080 \"./parse.y\"\n+#line 2104 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2082 \"./parse.y\"\n+#line 2106 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2084 \"./parse.y\"\n+#line 2108 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2086 \"./parse.y\"\n+#line 2110 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2088 \"./parse.y\"\n+#line 2112 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2094 \"./parse.y\"\n+#line 2118 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2099 \"./parse.y\"\n+#line 2123 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2104 \"./parse.y\"\n+#line 2128 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2106 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2112 \"./parse.y\"\n+#line 2136 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2117 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2123 \"./parse.y\"\n+#line 2147 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2128 \"./parse.y\"\n+#line 2152 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2134 \"./parse.y\"\n+#line 2158 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2139 \"./parse.y\"\n+#line 2163 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2145 \"./parse.y\"\n+#line 2169 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2150 \"./parse.y\"\n+#line 2174 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2156 \"./parse.y\"\n+#line 2180 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2161 \"./parse.y\"\n+#line 2185 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2167 \"./parse.y\"\n+#line 2191 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2172 \"./parse.y\"\n+#line 2196 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2178 \"./parse.y\"\n+#line 2202 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2180 \"./parse.y\"\n+#line 2204 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2190 \"./parse.y\"\n+#line 2214 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2192 \"./parse.y\"\n+#line 2216 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4821,7 +4854,7 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2218 \"./parse.y\"\n+#line 2242 \"./parse.y\"\n \n \f\n \n@@ -10315,16 +10348,24 @@ java_complete_tree (node)\n \t  TREE_OPERAND (TREE_OPERAND (node, 1), 0) = lvalue;\n \t}\n \n+      /* If we're about to patch a NEW_ARRAY_INIT, we call a special\n+\t function to complete this RHS */\n+      if (TREE_CODE (wfl_op2) == NEW_ARRAY_INIT)\n+\tnn = patch_new_array_init (GET_SKIP_TYPE (TREE_OPERAND (node, 0)),\n+\t\t\t\t   TREE_OPERAND (node, 1));\n+      else\n+\tnn = java_complete_tree (TREE_OPERAND (node, 1));\n+\n       /* There are cases where the type of RHS is fixed. In those\n \t cases, if the evaluation of the RHS fails, we further the\n \t evaluation of the assignment to detect more errors. */\n-      nn = java_complete_tree (TREE_OPERAND (node, 1));\n       if (nn == error_mark_node)\n \t{\n \t  /* It's hopeless, but we can further things on to discover\n \t     an error during the assignment. In any cases, the\n \t     assignment operation fails. */\n \t  if (TREE_CODE (TREE_OPERAND (node, 1)) != EXPR_WITH_FILE_LOCATION\n+\t      && TREE_CODE (TREE_OPERAND (node, 1)) != NEW_ARRAY_INIT\n \t      && TREE_TYPE (TREE_OPERAND (node, 1)) != error_mark_node)\n \t    patch_assignment (node, wfl_op1, wfl_op2);\n \n@@ -10881,8 +10922,10 @@ patch_assignment (node, wfl_op1, wfl_op2)\n       error_found = 1;\n     }\n \n+#if 0\n   /* Inline read access to java.lang.PRIMTYPE.TYPE */\n   rhs = maybe_build_primttype_type_ref (rhs, wfl_op2);\n+#endif\n \n   /* Inline read access to java.lang.PRIMTYPE.TYPE */\n   if (new_rhs)\n@@ -12290,6 +12333,178 @@ patch_newarray (node)\n \t\tNULL_TREE);\n }\n \n+/* 10.6 Array initializer.  */\n+\n+/* Build a wfl for array element that don't have one, so we can\n+   pin-point errors.  */\n+\n+static tree\n+maybe_build_array_element_wfl (node)\n+     tree node;\n+{\n+  if (TREE_CODE (node) != EXPR_WITH_FILE_LOCATION)\n+    return build_expr_wfl (NULL_TREE, ctxp->filename,\n+\t\t\t   ctxp->elc.line, ctxp->elc.prev_col);\n+  else\n+    return NULL_TREE;\n+}\n+\n+/* Build a NEW_ARRAY_INIT that features a CONSTRUCTOR node. This makes\n+   identification of initialized arrays easier to detect during walk\n+   and expansion.  */\n+\n+static tree\n+build_new_array_init (location, values)\n+     int location;\n+     tree values;\n+{\n+  tree constructor = build (CONSTRUCTOR, NULL_TREE, NULL_TREE, values);\n+  tree to_return = build1 (NEW_ARRAY_INIT, NULL_TREE, constructor);\n+  EXPR_WFL_LINECOL (to_return) = EXPR_WFL_LINECOL (constructor) = location;\n+  return to_return;\n+}\n+\n+/* Expand a NEW_ARRAY_INIT node. Return error_mark_node if an error\n+   occurred.  Otherwise return NODE after having set its type\n+   appropriately.  */\n+\n+static tree\n+patch_new_array_init (type, node)\n+     tree type, node;\n+{\n+  TREE_OPERAND (node, 0) = patch_array_constructor (type, \n+\t\t\t\t\t\t    TREE_OPERAND (node, 0));\n+  if (TREE_OPERAND (node, 0) == error_mark_node)\n+      return error_mark_node;\n+\n+  TREE_TYPE (node) = TREE_TYPE (TREE_OPERAND (node, 0));\n+  return node;\n+}\n+\n+/* Choose to walk further NEW_ARRAY_INIT or check array assignment\n+   when reaching the leaves of the initializing expression. Report\n+   error_mark_node if errors were encountered, otherwise return NODE\n+   after having set it type.  */\n+\n+static tree\n+patch_array_constructor (type, node)\n+     tree type, node;\n+{\n+  int error_seen = 0;\n+  tree current, lhs_type;\n+  HOST_WIDE_INT length;\n+\n+  CONSTRUCTOR_ELTS (node) = nreverse (CONSTRUCTOR_ELTS (node));\n+  lhs_type = GET_SKIP_TYPE (type);\n+\n+  if (TYPE_ARRAY_P (lhs_type))\n+    {\n+      /* Verify that we have what we expect here. This points a\n+\t discrepancy between the annouced type and the specified\n+\t one. */\n+      for (length = 0, current = CONSTRUCTOR_ELTS (node);\n+\t   current; length++, current = TREE_CHAIN (current))\n+\t{\n+\t  tree elt = TREE_VALUE (current);\n+\t  if (elt && TREE_CODE (elt) == NEW_ARRAY_INIT)\n+\t    TREE_VALUE (current) = patch_new_array_init (lhs_type, elt);\n+\t  /* We're under dimensioned: we want to have elements\n+             examined. */\n+\t  else\n+\t    error_seen |= array_constructor_check_entry (lhs_type, current);\n+\t  if ((elt && TREE_VALUE (elt) == error_mark_node) || error_seen)\n+\t    error_seen = 1;\n+\t}\n+    }\n+  else\n+    {\n+      /* This is the list of the values that need to be affected. We\n+\t browse the list and check for a valid assignment */\n+      for (length = 0, current = CONSTRUCTOR_ELTS (node);\n+\t   current; length++, current = TREE_CHAIN (current))\n+\terror_seen |= array_constructor_check_entry (lhs_type, current);\n+    }\n+\n+  if (error_seen)\n+    return error_mark_node;\n+\n+  /* Create a new type. We can't reuse the one we have here by\n+     patching its dimension because it originally is of dimension -1\n+     hence reused by gcc. This would prevent triangular arrays. */\n+  TREE_TYPE (node) = promote_type (build_java_array_type (lhs_type, length));\n+  return node;\n+}\n+\n+/* Verify that one entry of the initializer element list can be\n+   assigned to the array base type. Report 1 if an error occurred, 0\n+   otherwise.  */\n+\n+static int\n+array_constructor_check_entry (type, entry)\n+     tree type, entry;\n+{\n+  char *array_type_string = NULL;\t/* For error reports */\n+  tree value, type_value, new_value, wfl_value, patched;\n+  int error_seen = 0;\n+\n+  new_value = NULL_TREE;\n+  wfl_value = TREE_VALUE (entry);\n+\n+  /* NULL_TREE here means that we're creating an array of dimensions 0\n+     here. Probably needs a FIXME. */\n+  if (!wfl_value)\n+    return 0;\n+\n+  /* If we have a TREE_LIST here, it means that we're specifying more\n+     dimensions that we should. Report errors within the list. */\n+  if (TREE_CODE (wfl_value) == NEW_ARRAY_INIT)\n+    {\n+      if (TREE_CODE (wfl_value) == NEW_ARRAY_INIT)\n+\tEXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (wfl_value);\n+      parse_error_context (wfl_operator, \"Invalid initializer for type `%s'\",\n+\t\t\t   lang_printable_name (type, 1));\n+      return 1;\n+    }\n+  \n+  value = java_complete_tree (TREE_VALUE (entry));\n+  if ((patched = patch_string (value)))\n+    value = patched;\n+  \n+  /* Check for errors here. FIXME */\n+  type_value = TREE_TYPE (value);\n+  \n+  /* At anytime, try_builtin_assignconv can report an warning on\n+     constant overflow during narrowing. */\n+  SET_WFL_OPERATOR (wfl_operator, TREE_PURPOSE (entry), wfl_value);\n+  new_value = try_builtin_assignconv (wfl_operator, type, value);\n+  if (!new_value && (new_value = try_reference_assignconv (type, value)))\n+    type_value = promote_type (type);\n+  \n+  /* Check and report errors */\n+  if (!new_value)\n+    {\n+      char *msg = (!valid_cast_to_p (type_value, type) ?\n+\t\t   \"Can't\" : \"Explicit cast needed to\");\n+      if (!array_type_string)\n+\tarray_type_string = strdup (lang_printable_name (type, 1));\n+      parse_error_context \n+\t(wfl_operator, \"Incompatible type for array. %s convert `%s' to `%s'\",\n+\t msg, lang_printable_name (type_value, 1), array_type_string);\n+      error_seen = 1;\n+    }\n+  \n+  if (new_value)\n+    {\n+      new_value = maybe_build_primttype_type_ref (new_value, wfl_operator);\n+      TREE_VALUE (entry) = new_value;\n+    }\n+\n+  if (array_type_string)\n+    free (array_type_string);\n+  \n+  return error_seen;\n+}\n+\n static tree\n build_this (location)\n      int location;"}, {"sha": "0f3c3b64a6bf82381e9c40ad8b85a9cbac9cad23", "filename": "gcc/java/parse.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -482,9 +482,11 @@ static jdeplist *reverse_jdep_list ();\n #define EXPR_WFL_QUALIFICATION(WFL) TREE_OPERAND ((WFL), 1)\n #define QUAL_WFL(NODE) TREE_PURPOSE (NODE)\n #define QUAL_RESOLUTION(NODE) TREE_VALUE (NODE)\n-#define QUAL_DECL_TYPE(NODE) \t\t\t\t\\\n+#define QUAL_DECL_TYPE(NODE) GET_SKIP_TYPE (NODE)\n+\n+#define GET_SKIP_TYPE(NODE)\t\t\t\t\\\n   (TREE_CODE (TREE_TYPE (NODE)) == POINTER_TYPE ?\t\\\n-   TREE_TYPE (TREE_TYPE (NODE)) : TREE_TYPE (NODE))\n+   TREE_TYPE (TREE_TYPE (NODE)): TREE_TYPE (NODE))\n \n /* Handy macros for the walk operation */\n #define COMPLETE_CHECK_OP(NODE, N)\t\t\t\\"}, {"sha": "60c95e5122d5c71bccc6b589ea1bf2e945054224", "filename": "gcc/java/parse.y", "status": "modified", "additions": 216, "deletions": 13, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8976021c4079ce1461fffb45622437ec13ff597/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f8976021c4079ce1461fffb45622437ec13ff597", "patch": "@@ -232,6 +232,11 @@ static tree maybe_build_primttype_type_ref PROTO ((tree, tree));\n static void unreachable_stmt_error PROTO ((tree));\n static tree find_expr_with_wfl PROTO ((tree));\n static void missing_return_error PROTO ((tree));\n+static tree build_new_array_init PROTO ((int, tree));\n+static tree patch_new_array_init PROTO ((tree, tree));\n+static tree patch_array_constructor PROTO ((tree, tree));\n+static tree maybe_build_array_element_wfl PROTO ((tree));\n+static int array_constructor_check_entry PROTO ((tree, tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -396,7 +401,7 @@ static tree wfl_to_string = NULL_TREE;\n \t\t\tleft_hand_side assignment for_header for_begin\n \t\t\tconstant_expression do_statement_begin empty_statement\n \t\t\tswitch_statement synchronized_statement throw_statement\n-\t\t\ttry_statement switch_expression\n+\t\t\ttry_statement switch_expression switch_block\n \t\t\tcatches catch_clause catch_clause_parameter finally\n %type    <node>         return_statement break_statement continue_statement\n \n@@ -408,7 +413,7 @@ static tree wfl_to_string = NULL_TREE;\n %token   <operator>     EQ_TK GTE_TK ZRS_TK SRS_TK GT_TK LTE_TK LS_TK \n %token   <operator>     BOOL_AND_TK AND_TK BOOL_OR_TK OR_TK INCR_TK PLUS_TK\n %token   <operator>     DECR_TK MINUS_TK MULT_TK DIV_TK XOR_TK REM_TK NEQ_TK\n-%token   <operator>     NEG_TK REL_QM_TK REL_CL_TK NOT_TK LT_TK\n+%token   <operator>     NEG_TK REL_QM_TK REL_CL_TK NOT_TK LT_TK OCB_TK\n %token   <operator>     OP_TK OSB_TK DOT_TK THROW_TK INSTANCEOF_TK\n %type    <operator>\tTHIS_TK SUPER_TK RETURN_TK BREAK_TK CONTINUE_TK \n %type\t <operator>     CASE_TK DEFAULT_TK TRY_TK CATCH_TK SYNCHRONIZED_TK\n@@ -1092,20 +1097,31 @@ abstract_method_declaration:\n /* 19.10 Productions from 10: Arrays  */\n array_initializer:\n \tOCB_TK CCB_TK\n-\t\t{ $$ = NULL_TREE; }\n+\t\t{ \n+\t\t  $$ = build_new_array_init \n+\t\t    ($1.location, \n+\t\t     tree_cons (NULL_TREE, NULL_TREE, NULL_TREE));\n+\t\t}\n |\tOCB_TK variable_initializers CCB_TK\n-\t\t{ $$ = $2; }\n+\t\t{ $$ = build_new_array_init ($1.location, $2); }\n |\tOCB_TK C_TK CCB_TK\n-\t\t{ $$ = NULL_TREE; }\n+\t\t{\n+\t\t  $$ = build_new_array_init \n+\t\t    ($1.location,\n+\t\t     tree_cons (NULL_TREE, NULL_TREE, NULL_TREE));\n+\t\t}\n |\tOCB_TK variable_initializers C_TK CCB_TK\n-\t\t{ $$ = $2; }\n+\t\t{ $$ = build_new_array_init ($1.location, $2); }\n ;\n \n variable_initializers:\n \tvariable_initializer\n-\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE); }\n+\t\t{ \n+\t\t  $$ = tree_cons (maybe_build_array_element_wfl ($1), \n+\t\t\t\t  $1, NULL_TREE);\n+\t\t}\n |\tvariable_initializers C_TK variable_initializer\n-\t\t{ $$ = tree_cons (NULL_TREE, $3, $1); }\n+\t\t{ $$ = tree_cons (maybe_build_array_element_wfl ($3), $3, $1); }\n |\tvariable_initializers C_TK error\n \t\t{yyerror (\"Missing term\"); RECOVER;}\n ;\n@@ -1326,7 +1342,8 @@ switch_statement:\n \tswitch_block\n \t\t{ \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n-\t\t     I.e. make the last statment also have its own COMPOUND_EXPR. */\n+\t\t     I.e. make the last statment also have its own\n+\t\t     COMPOUND_EXPR. */\n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  TREE_OPERAND ($1, 1) = exit_block ();\n \t\t  $$ = build_debugable_stmt (EXPR_WFL_LINECOL ($1), $1);\n@@ -1347,11 +1364,18 @@ switch_expression:\n \t\t{yyerror (\"'{' expected\"); RECOVER;}\n ;\n \n+/* Default assignment is there to avoid type node on switch_block\n+   node. */\n+\n switch_block:\n \tOCB_TK CCB_TK\n+\t\t{ $$ = NULL_TREE; }\n |\tOCB_TK switch_labels CCB_TK\n+\t\t{ $$ = NULL_TREE; }\n |\tOCB_TK switch_block_statement_groups CCB_TK\n+\t\t{ $$ = NULL_TREE; }\n |\tOCB_TK switch_block_statement_groups switch_labels CCB_TK\n+\t\t{ $$ = NULL_TREE; }\n ;\n \n switch_block_statement_groups: \n@@ -7708,16 +7732,24 @@ java_complete_tree (node)\n \t  TREE_OPERAND (TREE_OPERAND (node, 1), 0) = lvalue;\n \t}\n \n+      /* If we're about to patch a NEW_ARRAY_INIT, we call a special\n+\t function to complete this RHS */\n+      if (TREE_CODE (wfl_op2) == NEW_ARRAY_INIT)\n+\tnn = patch_new_array_init (GET_SKIP_TYPE (TREE_OPERAND (node, 0)),\n+\t\t\t\t   TREE_OPERAND (node, 1));\n+      else\n+\tnn = java_complete_tree (TREE_OPERAND (node, 1));\n+\n       /* There are cases where the type of RHS is fixed. In those\n \t cases, if the evaluation of the RHS fails, we further the\n \t evaluation of the assignment to detect more errors. */\n-      nn = java_complete_tree (TREE_OPERAND (node, 1));\n       if (nn == error_mark_node)\n \t{\n \t  /* It's hopeless, but we can further things on to discover\n \t     an error during the assignment. In any cases, the\n \t     assignment operation fails. */\n \t  if (TREE_CODE (TREE_OPERAND (node, 1)) != EXPR_WITH_FILE_LOCATION\n+\t      && TREE_CODE (TREE_OPERAND (node, 1)) != NEW_ARRAY_INIT\n \t      && TREE_TYPE (TREE_OPERAND (node, 1)) != error_mark_node)\n \t    patch_assignment (node, wfl_op1, wfl_op2);\n \n@@ -8274,9 +8306,6 @@ patch_assignment (node, wfl_op1, wfl_op2)\n       error_found = 1;\n     }\n \n-  /* Inline read access to java.lang.PRIMTYPE.TYPE */\n-  rhs = maybe_build_primttype_type_ref (rhs, wfl_op2);\n-\n   /* Inline read access to java.lang.PRIMTYPE.TYPE */\n   if (new_rhs)\n     new_rhs = maybe_build_primttype_type_ref (new_rhs, wfl_op2);\n@@ -9683,6 +9712,180 @@ patch_newarray (node)\n \t\tNULL_TREE);\n }\n \n+/* 10.6 Array initializer.  */\n+\n+/* Build a wfl for array element that don't have one, so we can\n+   pin-point errors.  */\n+\n+static tree\n+maybe_build_array_element_wfl (node)\n+     tree node;\n+{\n+  if (TREE_CODE (node) != EXPR_WITH_FILE_LOCATION)\n+    return build_expr_wfl (NULL_TREE, ctxp->filename,\n+\t\t\t   ctxp->elc.line, ctxp->elc.prev_col);\n+  else\n+    return NULL_TREE;\n+}\n+\n+/* Build a NEW_ARRAY_INIT that features a CONSTRUCTOR node. This makes\n+   identification of initialized arrays easier to detect during walk\n+   and expansion.  */\n+\n+static tree\n+build_new_array_init (location, values)\n+     int location;\n+     tree values;\n+{\n+  tree constructor = build (CONSTRUCTOR, NULL_TREE, NULL_TREE, values);\n+  tree to_return = build1 (NEW_ARRAY_INIT, NULL_TREE, constructor);\n+  EXPR_WFL_LINECOL (to_return) = EXPR_WFL_LINECOL (constructor) = location;\n+  return to_return;\n+}\n+\n+/* Expand a NEW_ARRAY_INIT node. Return error_mark_node if an error\n+   occurred.  Otherwise return NODE after having set its type\n+   appropriately.  */\n+\n+static tree\n+patch_new_array_init (type, node)\n+     tree type, node;\n+{\n+  TREE_OPERAND (node, 0) =\n+      patch_array_constructor (type, TREE_OPERAND (node, 0));\n+\n+  if (TREE_OPERAND (node, 0) == error_mark_node)\n+      return error_mark_node;\n+\n+  TREE_TYPE (node) = TREE_TYPE (TREE_OPERAND (node, 0));\n+  return node;\n+}\n+\n+/* Choose to walk further NEW_ARRAY_INIT or check array assignment\n+   when reaching the leaves of the initializing expression. Report\n+   error_mark_node if errors were encountered, otherwise return NODE\n+   after having set it type.  */\n+\n+static tree\n+patch_array_constructor (type, node)\n+     tree type, node;\n+{\n+  int error_seen = 0;\n+  tree current, lhs_type;\n+  HOST_WIDE_INT length;\n+\n+  CONSTRUCTOR_ELTS (node) = nreverse (CONSTRUCTOR_ELTS (node));\n+  lhs_type = GET_SKIP_TYPE (type);\n+\n+  if (TYPE_ARRAY_P (lhs_type))\n+    {\n+      /* Verify that we have what we expect here. This points a\n+\t discrepancy between the annouced type and the specified\n+\t one. */\n+      for (length = 0, current = CONSTRUCTOR_ELTS (node);\n+\t   current; length++, current = TREE_CHAIN (current))\n+\t{\n+\t  tree elt = TREE_VALUE (current);\n+\t  if (elt && TREE_CODE (elt) == NEW_ARRAY_INIT)\n+\t    TREE_VALUE (current) = patch_new_array_init (lhs_type, elt);\n+\t  /* We're under dimensioned: we want to have elements\n+             examined. */\n+\t  else\n+\t    error_seen |= array_constructor_check_entry (lhs_type, current);\n+\t  if ((elt && TREE_VALUE (elt) == error_mark_node) || error_seen)\n+\t    error_seen = 1;\n+\t}\n+    }\n+  else\n+    {\n+      /* This is the list of the values that need to be affected. We\n+\t browse the list and check for a valid assignment */\n+      for (length = 0, current = CONSTRUCTOR_ELTS (node);\n+\t   current; length++, current = TREE_CHAIN (current))\n+\terror_seen |= array_constructor_check_entry (lhs_type, current);\n+    }\n+\n+  if (error_seen)\n+    return error_mark_node;\n+\n+  /* Create a new type. We can't reuse the one we have here by\n+     patching its dimension because it originally is of dimension -1\n+     hence reused by gcc. This would prevent triangular arrays. */\n+  TREE_TYPE (node) = promote_type (build_java_array_type (lhs_type, length));\n+  return node;\n+}\n+\n+/* Verify that one entry of the initializer element list can be\n+   assigned to the array base type. Report 1 if an error occurred, 0\n+   otherwise.  */\n+\n+static int\n+array_constructor_check_entry (type, entry)\n+     tree type, entry;\n+{\n+  char *array_type_string = NULL;\t/* For error reports */\n+  tree value, type_value, new_value, wfl_value, patched;\n+  int error_seen = 0;\n+\n+  new_value = NULL_TREE;\n+  wfl_value = TREE_VALUE (entry);\n+\n+  /* NULL_TREE here means that we're creating an array of dimensions 0\n+     here. Probably needs a FIXME. */\n+  if (!wfl_value)\n+    return 0;\n+\n+  /* If we have a TREE_LIST here, it means that we're specifying more\n+     dimensions that we should. Report errors within the list. */\n+  if (TREE_CODE (wfl_value) == NEW_ARRAY_INIT)\n+    {\n+      if (TREE_CODE (wfl_value) == NEW_ARRAY_INIT)\n+\tEXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (wfl_value);\n+      parse_error_context (wfl_operator, \"Invalid initializer for type `%s'\",\n+\t\t\t   lang_printable_name (type, 1));\n+      return 1;\n+    }\n+  \n+  value = java_complete_tree (TREE_VALUE (entry));\n+  if ((patched = patch_string (value)))\n+    value = patched;\n+  \n+  /* Check for errors here. FIXME */\n+  type_value = TREE_TYPE (value);\n+  \n+  /* At anytime, try_builtin_assignconv can report an warning on\n+     constant overflow during narrowing. */\n+  SET_WFL_OPERATOR (wfl_operator, TREE_PURPOSE (entry), wfl_value);\n+  new_value = try_builtin_assignconv (wfl_operator, type, value);\n+  if (!new_value && (new_value = try_reference_assignconv (type, value)))\n+    type_value = promote_type (type);\n+  \n+  /* Check and report errors */\n+  if (!new_value)\n+    {\n+      char *msg = (!valid_cast_to_p (type_value, type) ?\n+\t\t   \"Can't\" : \"Explicit cast needed to\");\n+      if (!array_type_string)\n+\tarray_type_string = strdup (lang_printable_name (type, 1));\n+      parse_error_context \n+\t(wfl_operator, \"Incompatible type for array. %s convert `%s' to `%s'\",\n+\t msg, lang_printable_name (type_value, 1), array_type_string);\n+      error_seen = 1;\n+    }\n+  \n+  if (new_value)\n+    {\n+      new_value = maybe_build_primttype_type_ref (new_value, wfl_operator);\n+      TREE_VALUE (entry) = new_value;\n+    }\n+\n+  if (array_type_string)\n+    free (array_type_string);\n+\n+  TREE_PURPOSE (entry) = NULL_TREE;\n+  return error_seen;\n+}\n+\n static tree\n build_this (location)\n      int location;"}]}