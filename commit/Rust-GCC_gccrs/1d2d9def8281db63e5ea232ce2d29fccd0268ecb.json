{"sha": "1d2d9def8281db63e5ea232ce2d29fccd0268ecb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyZDlkZWY4MjgxZGI2M2U1ZWEyMzJjZTJkMjlmY2NkMDI2OGVjYg==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2002-03-15T21:36:27Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2002-03-15T21:36:27Z"}, "message": "larith.asm (___adddi3): Optimize saving of result.\n\n\t* config/m68hc11/larith.asm (___adddi3): Optimize saving of result.\n\t(___subdi3): Likewise.\n\t(__mulsi3, __mulhi32): Avoid using _.tmp scratch location.\n\t(__map_data_section): Optimize 68hc11 case.\n\nFrom-SVN: r50835", "tree": {"sha": "930ca2ac00efc48116c9a1ab199d8edd084f9e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/930ca2ac00efc48116c9a1ab199d8edd084f9e5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d2d9def8281db63e5ea232ce2d29fccd0268ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2d9def8281db63e5ea232ce2d29fccd0268ecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d2d9def8281db63e5ea232ce2d29fccd0268ecb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2d9def8281db63e5ea232ce2d29fccd0268ecb/comments", "author": null, "committer": null, "parents": [{"sha": "a0ccf503a84269f8e6813d8b2daf57dc214d8ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ccf503a84269f8e6813d8b2daf57dc214d8ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0ccf503a84269f8e6813d8b2daf57dc214d8ba3"}], "stats": {"total": 195, "additions": 116, "deletions": 79}, "files": [{"sha": "6d760556b9b7b4e305fd977cfa2fb79c8e6d4cf2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2d9def8281db63e5ea232ce2d29fccd0268ecb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2d9def8281db63e5ea232ce2d29fccd0268ecb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d2d9def8281db63e5ea232ce2d29fccd0268ecb", "patch": "@@ -1,3 +1,10 @@\n+2002-03-15  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/larith.asm (___adddi3): Optimize saving of result.\n+\t(___subdi3): Likewise.\n+\t(__mulsi3, __mulhi32): Avoid using _.tmp scratch location.\n+\t(__map_data_section): Optimize 68hc11 case.\n+\n 2002-03-15  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.c (m6812_cost): Make cost of add higher"}, {"sha": "b39d81a8a9348ce630a5424f19d29567eb02bc25", "filename": "gcc/config/m68hc11/larith.asm", "status": "modified", "additions": 109, "deletions": 79, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2d9def8281db63e5ea232ce2d29fccd0268ecb/gcc%2Fconfig%2Fm68hc11%2Flarith.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2d9def8281db63e5ea232ce2d29fccd0268ecb/gcc%2Fconfig%2Fm68hc11%2Flarith.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Flarith.asm?ref=1d2d9def8281db63e5ea232ce2d29fccd0268ecb", "patch": "@@ -1,5 +1,5 @@\n /* libgcc routines for M68HC11 & M68HC12.\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -352,39 +352,27 @@ End:\n \n ___adddi3:\n \ttsx\n-\tpshb\n-\tpsha\n-\tldd\t8,x\n+\txgdy\n+\tldd\t8,x\t\t; Add LSB\n \taddd\t16,x\n-\tpshb\n-\tpsha\n+\tstd\t6,y\t\t; Save (carry preserved)\n \n \tldd\t6,x\n \tadcb\t15,x\n \tadca\t14,x\n-\tpshb\n-\tpsha\n+\tstd\t4,y\n \n \tldd\t4,x\n \tadcb\t13,x\n \tadca\t12,x\n-\tpshb\n-\tpsha\n+\tstd\t2,y\n \t\n \tldd\t2,x\n-\tadcb\t11,x\n+\tadcb\t11,x\t\t; Add MSB\n \tadca\t10,x\n-\ttsx\n-\tldy\t6,x\n-\n \tstd\t0,y\n-\tpulx\n-\tstx\t2,y\n-\tpulx\n-\tstx\t4,y\n-\tpulx\n-\tstx\t6,y\n-\tpulx\n+\n+\txgdy\n \trts\n #endif\n \n@@ -394,40 +382,27 @@ ___adddi3:\n \n ___subdi3:\n \ttsx\n-\tpshb\n-\tpsha\n-\tldd\t8,x\n+\txgdy\n+\tldd\t8,x\t\t; Subtract LSB\n \tsubd\t16,x\n-\tpshb\n-\tpsha\n+\tstd\t6,y\t\t; Save, borrow preserved\n \n \tldd\t6,x\n \tsbcb\t15,x\n \tsbca\t14,x\n-\tpshb\n-\tpsha\n+\tstd\t4,y\n \n \tldd\t4,x\n \tsbcb\t13,x\n \tsbca\t12,x\n-\tpshb\n-\tpsha\n+\tstd\t2,y\n \t\n-\tldd\t2,x\n+\tldd\t2,x\t\t; Subtract MSB\n \tsbcb\t11,x\n \tsbca\t10,x\n-\t\n-\ttsx\n-\tldy\t6,x\n-\n \tstd\t0,y\n-\tpulx\n-\tstx\t2,y\n-\tpulx\n-\tstx\t4,y\n-\tpulx\n-\tstx\t6,y\n-\tpulx\n+\n+\txgdy\t\t\t;\n \trts\n #endif\n \t\n@@ -457,6 +432,7 @@ ___notdi2:\n \tcoma\n \tcomb\n \tstd\t0,x\n+\txgdx\n \trts\n #endif\n \t\n@@ -798,24 +774,73 @@ ___mulhi3:\n \temul\n \texg\tx,y\n \tpulx\n+\trts\n #else\n-\tstx\t*_.tmp\n-\tpshb\n-\tldab\t*_.tmp+1\n-\tmul\t\t\t; A.high * B.low\n-\tldaa\t*_.tmp\n-\tstab\t*_.tmp\n-\tpulb\n-\tpshb\n-\tmul\t\t\t; A.low * B.high\n-\taddb\t*_.tmp\n-\tstab\t*_.tmp\n-\tldaa\t*_.tmp+1\n-\tpulb\n-\tmul\t\t\t; A.low * B.low\n-\tadda\t*_.tmp\n+#ifdef NO_TMP\n+\t;\n+\t; 16 bit multiplication without temp memory location.\n+\t; (smaller but slower)\n+\t;\n+\tpshx\t\t\t; (4)\n+\tins\t\t\t; (3)\n+\tpshb\t\t\t; (3)\n+\tpsha\t\t\t; (3)\n+\tpshx\t\t\t; (4)\n+\tpula\t\t\t; (4)\n+\tpulx\t\t\t; (5)\n+\tmul\t\t\t; (10) B.high * A.low\n+\txgdx\t\t\t; (3)\n+\tmul\t\t\t; (10) B.low * A.high\n+\tabx\t\t\t; (3)\n+\tpula\t\t\t; (4)\n+\tpulb\t\t\t; (4)\n+\tmul\t\t\t; (10) B.low * A.low\n+\tpshx\t\t\t; (4) \n+\ttsx\t\t\t; (3)\n+\tadda\t1,x\t\t; (4)\n+\tpulx\t\t\t; (5)\n+\trts\t\t\t; (5) 20 bytes\n+\t\t\t\t; ---\n+\t\t\t\t; 91 cycles\n+#else\n+\tstx\t_.tmp\t\t; (4/5)\n+\tpshb\t\t\t; (3)\n+\tldab\t_.tmp+1\t\t; (3/4)\n+\tmul\t\t\t; (10) B.high * A.low\n+\txgdx\t\t\t; (3)\n+\tpulb\t\t\t; (4)\n+\tstab\t_.tmp\t\t; (3/4)\n+\tmul\t\t\t; (10) B.low * A.high\n+\tabx\t\t\t; (3)\n+\tldd\t_.tmp\t\t; (4/5)\n+\tmul\t\t\t; (10) B.low * A.low\n+\tstx\t_.tmp\t\t; (4) \n+\tadda\t_.tmp+1\t\t; (4/5)\n+\trts\t\t\t; (5) 20/26 bytes\n+\t\t\t\t; ---\n+\t\t\t\t; 70/76 cycles\n+\n+#ifdef OLD_MUL\n+\tstx\t*_.tmp\t\t; (4)\n+\tpshb\t\t\t; (3)\n+\tldab\t*_.tmp+1\t; (3)\n+\tmul\t\t\t; (10) A.high * B.low\n+\tldaa\t*_.tmp\t\t; (3)\n+\tstab\t*_.tmp\t\t; (3)\n+\tpulb\t\t\t; (4)\n+\tpshb\t\t\t; (4)\n+\tmul\t\t\t; (10) A.low * B.high\n+\taddb\t*_.tmp\t\t; (4)\n+\tstab\t*_.tmp\t\t; (3)\n+\tldaa\t*_.tmp+1\t; (3)\n+\tpulb\t\t\t; (4)\n+\tmul\t\t\t; (10) A.low * B.low\n+\tadda\t*_.tmp\t\t; (4)\n+\trts\t\t\t; (5) 24/32 bytes\n+\t\t\t\t; 77/85 cycles\n+#endif\n+#endif\n #endif\n-\trts\n #endif\n \n #ifdef L_mulhi32\n@@ -830,14 +855,18 @@ ___mulhi3:\n ;\tb = value on stack\n ;\n ;\t+---------------+\n-;       |  B low\t| <- 5,x\n+;       |  B low\t| <- 7,x\n ;\t+---------------+\n-;       |  B high\t| <- 4,x\n+;       |  B high\t| <- 6,x\n ;\t+---------------+\n ;       |  PC low\t|  \n ;\t+---------------+\n ;       |  PC high\t|  \n ;\t+---------------+\n+;\t|  Tmp low\t|\n+;\t+---------------+\n+;\t|  Tmp high     |\n+;\t+---------------+\n ;\t|  A low\t|\n ;\t+---------------+\n ;\t|  A high\t|\n@@ -855,41 +884,43 @@ __mulhi32:\n \tldy\t2,sp\n \temul\n \texg\tx,y\n+\trts\n #else\n+\tpshx\t\t\t; Room for temp value\n \tpshb\n \tpsha\n \ttsx\n-\tldab\t4,x\n+\tldab\t6,x\n \tmul\n \txgdy\t\t\t; A.high * B.high\n-\tldab\t5,x\n+\tldab\t7,x\n \tpula\n \tmul\t\t\t; A.high * B.low\n-\tstd\t*_.tmp\n+\tstd\t2,x\n \tldaa\t1,x\n-\tldab\t4,x\n+\tldab\t6,x\n \tmul\t\t\t; A.low * B.high\n-\taddd\t*_.tmp\n-\tstab\t*_.tmp\n+\taddd\t2,x\n+\tstab\t2,x\n \ttab\n \taby\n \tbcc\tN\n \tldab\t#0xff\n \taby\n \tiny\n N:\n-\tldab\t5,x\n+\tldab\t7,x\n \tpula\n \tmul\t\t\t; A.low * B.low\n-\tadda\t*_.tmp\n+\tadda\t2,x\n+\tpulx\t\t\t; Drop temp location\n+\tpshy\t\t\t; Put high part in X\n+\tpulx\n \tbcc\tRet\n-\tiny\n+\tinx\n Ret:\n-\tpshy\n-\tpulx\n-#endif\n \trts\n-\t\n+#endif\t\n #endif\n \n #ifdef L_mulsi3\n@@ -946,7 +977,7 @@ A_high\t=\t2\n ;\n ; If A.high is 0, optimize into: (A.low * B.high) << 16 + (A.low * B.low)\n ;\n-\tstx\t*_.tmp\n+\tcpx\t#0\n \tbeq\tA_high_zero\n \tbsr\t___mulhi3\t\t; A.high * B.low\n ;\n@@ -1050,7 +1081,8 @@ A_low_B_low:\n \n \t.sect\t.install2,\"ax\",@progbits\n \t.globl\t__map_data_section\n-\n+\t.globl __data_image\n+\t.globl __data_section_size\n __map_data_section:\n \tldd\t#__data_section_size\n \tbeq\tDone\n@@ -1061,14 +1093,12 @@ Loop:\n \tmovb\t1,x+,1,y+\n \tdbne\td,Loop\n #else\n-\tpsha\n \tldaa\t0,x\n \tstaa\t0,y\n-\tpula\n \tinx\n \tiny\n-\tsubd\t#1\n-\tbne\tLoop\n+\tcpx\t#__data_image_end\n+\tblt\tLoop\n #endif\n Done:\n "}]}