{"sha": "ec459469f8a75d96a9b26694554efcc900d411de", "node_id": "C_kwDOANBUbNoAKGVjNDU5NDY5ZjhhNzVkOTZhOWIyNjY5NDU1NGVmY2M5MDBkNDExZGU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-19T13:55:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-19T15:36:21Z"}, "message": "tree-optimization/108164 - undefined overflow with IV vectorization\n\nvect_update_ivs_after_vectorizer can end up emitting a signed\nIV update when the loop body performed an unsigned computation.\nThe following makes sure to perform that update in the type\nof the loop update type to avoid undefined behavior on overflow.\n\n\tPR tree-optimization/108164\n\t* tree-vect-loop-manip.cc (vect_update_ivs_after_vectorizer):\n\tPerform vect_step_op_add update in the appropriate type.\n\n\t* gcc.dg/pr108164.c: New testcase.", "tree": {"sha": "012e28e3a94af892efd782c0002d0dc892507454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/012e28e3a94af892efd782c0002d0dc892507454"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec459469f8a75d96a9b26694554efcc900d411de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec459469f8a75d96a9b26694554efcc900d411de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec459469f8a75d96a9b26694554efcc900d411de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec459469f8a75d96a9b26694554efcc900d411de/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa510619f8b650322c113d8593dd57afe6c6f9ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa510619f8b650322c113d8593dd57afe6c6f9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa510619f8b650322c113d8593dd57afe6c6f9ae"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "d76d557876ef430f9d03af79f42c70f4f438e6f0", "filename": "gcc/testsuite/gcc.dg/pr108164.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec459469f8a75d96a9b26694554efcc900d411de/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108164.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec459469f8a75d96a9b26694554efcc900d411de/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108164.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108164.c?ref=ec459469f8a75d96a9b26694554efcc900d411de", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -fno-tree-dce\" } */\n+\n+int a, b, c;\n+int main()\n+{\n+  int e = -1;\n+  short f = -1;\n+  for (; c < 1; c++)\n+    while (f >= e)\n+      f++;\n+  for (; a < 2; a++) {\n+    short g = ~(~b | ~f);\n+    int h = -g;\n+    int i = (3 / ~h) / ~b;\n+    b = i;\n+  }\n+  return 0;\n+}"}, {"sha": "5ec739ed218170c456d43d3db4f2a388af573dc5", "filename": "gcc/tree-vect-loop-manip.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec459469f8a75d96a9b26694554efcc900d411de/gcc%2Ftree-vect-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec459469f8a75d96a9b26694554efcc900d411de/gcc%2Ftree-vect-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.cc?ref=ec459469f8a75d96a9b26694554efcc900d411de", "patch": "@@ -1576,14 +1576,16 @@ vect_update_ivs_after_vectorizer (loop_vec_info loop_vinfo,\n \n       if (induction_type == vect_step_op_add)\n \t{\n-\t  off = fold_build2 (MULT_EXPR, TREE_TYPE (step_expr),\n-\t\t\t     fold_convert (TREE_TYPE (step_expr), niters),\n-\t\t\t     step_expr);\n+\t  tree stype = TREE_TYPE (step_expr);\n+\t  off = fold_build2 (MULT_EXPR, stype,\n+\t\t\t     fold_convert (stype, niters), step_expr);\n \t  if (POINTER_TYPE_P (type))\n \t    ni = fold_build_pointer_plus (init_expr, off);\n \t  else\n-\t    ni = fold_build2 (PLUS_EXPR, type,\n-\t\t\t      init_expr, fold_convert (type, off));\n+\t    ni = fold_convert (type,\n+\t\t\t       fold_build2 (PLUS_EXPR, stype,\n+\t\t\t\t\t    fold_convert (stype, init_expr),\n+\t\t\t\t\t    off));\n \t}\n       /* Don't bother call vect_peel_nonlinear_iv_init.  */\n       else if (induction_type == vect_step_op_neg)"}]}