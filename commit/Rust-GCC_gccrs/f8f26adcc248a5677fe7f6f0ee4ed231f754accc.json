{"sha": "f8f26adcc248a5677fe7f6f0ee4ed231f754accc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmMjZhZGNjMjQ4YTU2NzdmZTdmNmYwZWU0ZWQyMzFmNzU0YWNjYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-04-12T23:23:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-04-12T23:23:05Z"}, "message": "h8300.c (dosize): Remove unused \"fped\" argument.\n\n        * h8300/h8300.c (dosize): Remove unused \"fped\" argument.  All callers\n        changed.  Handle add/sub of 5-8 bytes efficiently on the h8300h.\n\nFrom-SVN: r11708", "tree": {"sha": "318e62a2d2a1912dd62bc63c2b71acef37ed46e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/318e62a2d2a1912dd62bc63c2b71acef37ed46e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8f26adcc248a5677fe7f6f0ee4ed231f754accc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f26adcc248a5677fe7f6f0ee4ed231f754accc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8f26adcc248a5677fe7f6f0ee4ed231f754accc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f26adcc248a5677fe7f6f0ee4ed231f754accc/comments", "author": null, "committer": null, "parents": [{"sha": "15dc331ee63e6954f443a180978602c370a56af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15dc331ee63e6954f443a180978602c370a56af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15dc331ee63e6954f443a180978602c370a56af9"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "2d8fc53c18f7ffa3ff1b9f663dc14fbc62accebe", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f26adcc248a5677fe7f6f0ee4ed231f754accc/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f26adcc248a5677fe7f6f0ee4ed231f754accc/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=f8f26adcc248a5677fe7f6f0ee4ed231f754accc", "patch": "@@ -121,15 +121,23 @@ byte_reg (x, b)\n \n /* Output assembly language to FILE for the operation OP with operand size\n    SIZE to adjust the stack pointer.  */\n-/* ??? FPED is currently unused.  */\n \n static void\n-dosize (file, op, size, fped)\n+dosize (file, op, size)\n      FILE *file;\n      char *op;\n      unsigned int size;\n-     int fped;\n {\n+  /* On the h8300h, for sizes <= 8 bytes it is as good or\n+     better to use adds/subs insns rather than add.l/sub.l\n+     with an immediate value.   */\n+  if (size > 4 && size <= 8 && TARGET_H8300H)\n+    {\n+      /* Crank the size down to <= 4 */\n+      fprintf (file, \"\\t%ss\\t#%d,sp\\n\", op, 4);\n+      size -= 4;\n+    }\n+\n   switch (size)\n     {\n     case 4:\n@@ -208,7 +216,7 @@ function_prologue (file, size)\n \t       h8_reg_names[FRAME_POINTER_REGNUM]);\n \n       /* leave room for locals */\n-      dosize (file, \"sub\", fsize, 1);\n+      dosize (file, \"sub\", fsize);\n \n       /* Push the rest of the registers */\n       for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n@@ -221,7 +229,7 @@ function_prologue (file, size)\n     }\n   else\n     {\n-      dosize (file, \"sub\", fsize, 0);\n+      dosize (file, \"sub\", fsize);\n       for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n \t{\n \t  int regno = push_order[idx];\n@@ -265,7 +273,7 @@ function_epilogue (file, size)\n \t    fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[regno]);\n \t}\n       /* deallocate locals */\n-      dosize (file, \"add\", fsize, 1);\n+      dosize (file, \"add\", fsize);\n       /* pop frame pointer */\n       fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[FRAME_POINTER_REGNUM]);\n     }\n@@ -279,7 +287,7 @@ function_epilogue (file, size)\n \t    fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[regno]);\n \t}\n       /* deallocate locals */\n-      dosize (file, \"add\", fsize, 0);\n+      dosize (file, \"add\", fsize;\n     }\n \n   if (interrupt_handler)"}]}