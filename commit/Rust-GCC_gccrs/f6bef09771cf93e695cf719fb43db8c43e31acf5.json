{"sha": "f6bef09771cf93e695cf719fb43db8c43e31acf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiZWYwOTc3MWNmOTNlNjk1Y2Y3MTlmYjQzZGI4YzQzZTMxYWNmNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-05T22:59:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-05T23:38:23Z"}, "message": "c++: Fix decltype of empty pack expansion of parm.\n\nIn unevaluated context, we only substitute a single PARM_DECL, not the\nentire chain, but the handling of an empty pack expansion was missing that\ncheck.\n\n\tPR c++/93140\n\t* pt.c (tsubst_decl) [PARM_DECL]: Check cp_unevaluated_operand in\n\thandling of TREE_CHAIN for empty pack.", "tree": {"sha": "935e12f4206a452407e80aef63da78fef59f8aec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/935e12f4206a452407e80aef63da78fef59f8aec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6bef09771cf93e695cf719fb43db8c43e31acf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bef09771cf93e695cf719fb43db8c43e31acf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6bef09771cf93e695cf719fb43db8c43e31acf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bef09771cf93e695cf719fb43db8c43e31acf5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba67231631b83b0b4dc499a42e07104233ee4b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba67231631b83b0b4dc499a42e07104233ee4b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba67231631b83b0b4dc499a42e07104233ee4b03"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "6a7ba564d1280a03e82539355bffab8cd4037a05", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bef09771cf93e695cf719fb43db8c43e31acf5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bef09771cf93e695cf719fb43db8c43e31acf5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f6bef09771cf93e695cf719fb43db8c43e31acf5", "patch": "@@ -1,3 +1,9 @@\n+2020-02-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93140\n+\t* pt.c (tsubst_decl) [PARM_DECL]: Check cp_unevaluated_operand in\n+\thandling of TREE_CHAIN for empty pack.\n+\n 2020-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/93557"}, {"sha": "01bade85cdfff48a3d327b6227d1441fd1326b47", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bef09771cf93e695cf719fb43db8c43e31acf5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bef09771cf93e695cf719fb43db8c43e31acf5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f6bef09771cf93e695cf719fb43db8c43e31acf5", "patch": "@@ -14076,7 +14076,7 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \n                 /* Zero-length parameter packs are boring. Just substitute\n                    into the chain.  */\n-                if (len == 0)\n+\t\tif (len == 0 && !cp_unevaluated_operand)\n                   RETURN (tsubst (TREE_CHAIN (t), args, complain,\n \t\t\t\t  TREE_CHAIN (t)));\n               }"}, {"sha": "4300c781400c54e236ea7f5186faa9a6718e65d5", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-parm1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bef09771cf93e695cf719fb43db8c43e31acf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-parm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bef09771cf93e695cf719fb43db8c43e31acf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-parm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-parm1.C?ref=f6bef09771cf93e695cf719fb43db8c43e31acf5", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/93140\n+// { dg-do compile { target c++11 } }\n+\n+int\n+bar ()\n+{\n+  return 42;\n+}\n+\n+template <typename... R>\n+void foo (R... r, decltype (bar (r...)) x = 0) {}\n+\n+int\n+main ()\n+{\n+  foo (3);\n+}"}]}