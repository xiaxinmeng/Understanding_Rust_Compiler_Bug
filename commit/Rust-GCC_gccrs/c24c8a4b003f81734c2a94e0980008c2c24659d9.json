{"sha": "c24c8a4b003f81734c2a94e0980008c2c24659d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0YzhhNGIwMDNmODE3MzRjMmE5NGUwOTgwMDA4YzJjMjQ2NTlkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-11-05T07:46:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-11-05T07:46:52Z"}, "message": "PR c++/60503 - wrong lambda attribute syntax.\n\nThis patch fixes two issues with lambda attribute handling: First, it was in\nthe wrong place in the grammar.  Second, it was treating attributes as\napplying to the whole declaration rather than to the function type, as\nspecified by the standard.\n\n\t* parser.c (cp_parser_lambda_declarator_opt): Fix attribute\n\thandling.\n\nFrom-SVN: r265787", "tree": {"sha": "f6903db115aff5c17547f7a29decc584021ecb1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6903db115aff5c17547f7a29decc584021ecb1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c24c8a4b003f81734c2a94e0980008c2c24659d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24c8a4b003f81734c2a94e0980008c2c24659d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c24c8a4b003f81734c2a94e0980008c2c24659d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24c8a4b003f81734c2a94e0980008c2c24659d9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac27459299b143bcd3998193530b8b69f682e778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac27459299b143bcd3998193530b8b69f682e778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac27459299b143bcd3998193530b8b69f682e778"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "7e9c0e2642ae3f4d172e81719e677583463b74ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c24c8a4b003f81734c2a94e0980008c2c24659d9", "patch": "@@ -1,3 +1,9 @@\n+2018-11-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/60503 - wrong lambda attribute syntax.\n+\t* parser.c (cp_parser_lambda_declarator_opt): Fix attribute\n+\thandling.\n+\n 2018-11-02  Nathan Sidwell  <nathan@acm.org>\n \n \t* decl.c (duplicate_decls): Refactor checks."}, {"sha": "5ea8e8ca0124cfea3c807d557f2a577b1078fbed", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c24c8a4b003f81734c2a94e0980008c2c24659d9", "patch": "@@ -10596,8 +10596,6 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n \n       parens.require_close (parser);\n \n-      attributes = cp_parser_attributes_opt (parser);\n-\n       /* In the decl-specifier-seq of the lambda-declarator, each\n \t decl-specifier shall either be mutable or constexpr.  */\n       int declares_class_or_enum;\n@@ -10618,6 +10616,8 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n       /* Parse optional exception specification.  */\n       exception_spec = cp_parser_exception_specification_opt (parser);\n \n+      attributes = cp_parser_std_attribute_spec_seq (parser);\n+\n       /* Parse optional trailing return type.  */\n       if (cp_lexer_next_token_is (parser->lexer, CPP_DEREF))\n         {\n@@ -10668,15 +10668,14 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n                                        REF_QUAL_NONE,\n \t\t\t\t       tx_qual,\n \t\t\t\t       exception_spec,\n-                                       /*late_return_type=*/NULL_TREE,\n+                                       return_type,\n                                        /*requires_clause*/NULL_TREE);\n     declarator->id_loc = LAMBDA_EXPR_LOCATION (lambda_expr);\n-    if (return_type)\n-      declarator->u.function.late_return_type = return_type;\n+    declarator->std_attributes = attributes;\n \n     fco = grokmethod (&return_type_specs,\n \t\t      declarator,\n-\t\t      attributes);\n+\t\t      NULL_TREE);\n     if (fco != error_mark_node)\n       {\n \tDECL_INITIALIZED_IN_CLASS_P (fco) = 1;"}, {"sha": "9aa6506d5ed88f5c19a7347ffe2ed017cb0d0ae9", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-attr1.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-attr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-attr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-attr1.C?ref=c24c8a4b003f81734c2a94e0980008c2c24659d9", "patch": "@@ -0,0 +1,3 @@\n+// { dg-do compile { target c++11 } }\n+\n+auto l = []() [[noreturn]] {};\t// { dg-warning \"ignored\" }"}, {"sha": "82d88f370c49f5086b3fd0d8d38ec3e9a754816a", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-attr2.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-attr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24c8a4b003f81734c2a94e0980008c2c24659d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-attr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-attr2.C?ref=c24c8a4b003f81734c2a94e0980008c2c24659d9", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/60503\n+// { dg-do compile { target c++11 } }\n+\n+auto l = []() mutable noexcept [[ ]] {};\n+auto m = []() [[ ]] mutable noexcept {}; // { dg-error \"\" }"}]}