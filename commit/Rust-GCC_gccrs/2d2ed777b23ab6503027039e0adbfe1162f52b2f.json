{"sha": "2d2ed777b23ab6503027039e0adbfe1162f52b2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQyZWQ3NzdiMjNhYjY1MDMwMjcwMzllMGFkYmZlMTE2MmY1MmIyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-10T07:28:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-10T07:28:27Z"}, "message": "ifcvt: Fix -fcompare-debug bug [PR100852]\n\nThe following testcase fails -fcompare-debug, because it is ifcvt optimized\ninto umin only with -g0 and not with -g - the function(s) use\nprev_nonnote_insn, which without -g finds a real insn the code is looking\nfor, while with -g finds a DEBUG_INSN.\n\n2021-06-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/100852\n\t* ifcvt.c (noce_get_alt_condition, noce_try_abs): Use\n\tprev_nonnote_nondebug_insn instead of prev_nonnote_insn.\n\n\t* g++.dg/opt/pr100852.C: New test.", "tree": {"sha": "4831039572de8d0a1592895102be1211694f6315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4831039572de8d0a1592895102be1211694f6315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d2ed777b23ab6503027039e0adbfe1162f52b2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d2ed777b23ab6503027039e0adbfe1162f52b2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d2ed777b23ab6503027039e0adbfe1162f52b2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d2ed777b23ab6503027039e0adbfe1162f52b2f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8b067056ba5dd53f7bc883a1f59833efc26bd3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8b067056ba5dd53f7bc883a1f59833efc26bd3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8b067056ba5dd53f7bc883a1f59833efc26bd3e"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "d086ce8f0b7b3e2b5ffdeb1cd4386a6da0bde705", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d2ed777b23ab6503027039e0adbfe1162f52b2f/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d2ed777b23ab6503027039e0adbfe1162f52b2f/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2d2ed777b23ab6503027039e0adbfe1162f52b2f", "patch": "@@ -2398,7 +2398,7 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n       rtx_insn *prev_insn;\n \n       /* First, look to see if we put a constant in a register.  */\n-      prev_insn = prev_nonnote_insn (if_info->cond_earliest);\n+      prev_insn = prev_nonnote_nondebug_insn (if_info->cond_earliest);\n       if (prev_insn\n \t  && BLOCK_FOR_INSN (prev_insn)\n \t     == BLOCK_FOR_INSN (if_info->cond_earliest)\n@@ -2669,7 +2669,7 @@ noce_try_abs (struct noce_if_info *if_info)\n   if (REG_P (c))\n     {\n       rtx set;\n-      rtx_insn *insn = prev_nonnote_insn (earliest);\n+      rtx_insn *insn = prev_nonnote_nondebug_insn (earliest);\n       if (insn\n \t  && BLOCK_FOR_INSN (insn) == BLOCK_FOR_INSN (earliest)\n \t  && (set = single_set (insn))"}, {"sha": "9d9a9f08f80395894362850b73ab3cd0de837240", "filename": "gcc/testsuite/g++.dg/opt/pr100852.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d2ed777b23ab6503027039e0adbfe1162f52b2f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr100852.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d2ed777b23ab6503027039e0adbfe1162f52b2f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr100852.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr100852.C?ref=2d2ed777b23ab6503027039e0adbfe1162f52b2f", "patch": "@@ -0,0 +1,25 @@\n+// PR debug/100852\n+// { dg-do compile }\n+// { dg-options \"-Og -fif-conversion -fno-tree-ccp -fno-tree-copy-prop -fcompare-debug\" }\n+\n+static inline int\n+min (unsigned a, int b)\n+{\n+  return a < b ? a : b;\n+}\n+\n+struct S { S (char); };\n+\n+static inline S\n+foo (unsigned x)\n+{\n+  int h;\n+  h += min (x * 4, h);\n+  return h;\n+}\n+\n+void\n+bar ()\n+{\n+  foo (0);\n+}"}]}