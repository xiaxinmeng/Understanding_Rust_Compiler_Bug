{"sha": "e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMyYmEzZjdhYmYyZjJiZTZjYWM2ZDk3ODVhNWU4Y2Y5ZjJhNDdjNQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-01-08T09:26:29Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-01-08T09:26:29Z"}, "message": "teststuite - avoid parts of builtin-has-attribute tests requireing alias support.\n\n2019-01-08  Iain Sandoe  <iain@sandoe.co.uk>\n\ngcc/testsuite/\n\n\t* c-c++-common/builtin-has-attribute-3.c: Skip tests requiring symbol\n\talias support.\n\t* c-c++-common/builtin-has-attribute-4.c: Likewise.\n\tAppend match for warning that \u2018protected\u2019 attribute is not supported.\n\nFrom-SVN: r267674", "tree": {"sha": "bb78fc417cf5b3c7858e4b98d52142c8a571b5e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb78fc417cf5b3c7858e4b98d52142c8a571b5e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e81e6e929f10ea2d404c254366f060a8e826041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e81e6e929f10ea2d404c254366f060a8e826041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e81e6e929f10ea2d404c254366f060a8e826041"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "48a6a53f24cccad86250444dee1a5f9529eb0ffe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "patch": "@@ -1,3 +1,10 @@\n+2019-01-08  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* c-c++-common/builtin-has-attribute-3.c: Skip tests requiring symbol\n+\talias support.\n+\t* c-c++-common/builtin-has-attribute-4.c: Likewise.\n+\tAppend match for warning that \u2018protected\u2019 attribute is not supported.\n+\n 2019-01-08  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.dg/Wmissing-attributes.c: Require alias support."}, {"sha": "5b2e5c7c762b0cec4bb7df9697efd64eee8f8dcd", "filename": "gcc/testsuite/c-c++-common/builtin-has-attribute-3.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-has-attribute-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-has-attribute-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-has-attribute-3.c?ref=e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "patch": "@@ -1,7 +1,9 @@\n /* Verify __builtin_has_attribute return value for functions.\n    { dg-do compile }\n    { dg-options \"-Wall -ftrack-macro-expansion=0\" }\n-   { dg-options \"-Wall -Wno-narrowing -Wno-unused-local-typedefs -ftrack-macro-expansion=0\" { target c++ } }  */\n+   { dg-options \"-Wall -Wno-narrowing -Wno-unused-local-typedefs -ftrack-macro-expansion=0\" { target c++ } } \n+   { dg-additional-options \"-DSKIP_ALIAS\" { target *-*-darwin* } } \n+*/\n \n #define ATTR(...) __attribute__ ((__VA_ARGS__))\n \n@@ -27,7 +29,9 @@ extern \"C\"\n #endif\n ATTR (noreturn) void fnoreturn (void) { __builtin_abort (); }\n \n+#ifndef SKIP_ALIAS\n ATTR (alias (\"fnoreturn\")) void falias (void);\n+#endif\n \n #define A(expect, sym, attr)\t\t\t\t\t\t\\\n   typedef int Assert [1 - 2 * !(__builtin_has_attribute (sym, attr) == expect)]\n@@ -114,7 +118,7 @@ void test_alloc_size_malloc (void)\n   A (1, fmalloc_size_3, malloc);\n }\n \n-\n+#ifndef SKIP_ALIAS\n void test_alias (void)\n {\n   A (0, fnoreturn, alias);\n@@ -123,7 +127,7 @@ void test_alias (void)\n   A (0, falias, alias (\"falias\"));\n   A (0, falias, alias (\"fnone\"));\n }\n-\n+#endif\n \n void test_cold_hot (void)\n {"}, {"sha": "84c9892baaa77a0b074ddf3c0a9350a96ab024dd", "filename": "gcc/testsuite/c-c++-common/builtin-has-attribute-4.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-has-attribute-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-has-attribute-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fbuiltin-has-attribute-4.c?ref=e32ba3f7abf2f2be6cac6d9785a5e8cf9f2a47c5", "patch": "@@ -1,7 +1,9 @@\n /* Verify __builtin_has_attribute return value for variables.\n    { dg-do compile }\n    { dg-options \"-Wall -ftrack-macro-expansion=0\" }\n-   { dg-options \"-Wall -Wno-narrowing -Wno-unused -ftrack-macro-expansion=0\" { target c++ } }  */\n+   { dg-options \"-Wall -Wno-narrowing -Wno-unused -ftrack-macro-expansion=0\" { target c++ } }\n+   { dg-additional-options \"-DSKIP_ALIAS\" { target *-*-darwin* } } \n+*/\n \n #define ATTR(...) __attribute__ ((__VA_ARGS__))\n \n@@ -45,6 +47,7 @@ void test_aligned (void)\n }\n \n \n+#ifndef SKIP_ALIAS\n int vtarget;\n extern ATTR (alias (\"vtarget\")) int valias;\n \n@@ -55,7 +58,7 @@ void test_alias (void)\n   A (1, valias, alias (\"vtarget\"));\n   A (0, valias, alias (\"vnone\"));\n }\n-\n+#endif\n \n void test_cleanup (void)\n {\n@@ -280,6 +283,6 @@ void test_weak (void)\n \n   A (1, var_init_weak, weak);\n   A (1, var_uninit_weak, weak);\n-}\n+} /* { dg-warning \"protected visibility attribute not supported\" \"\" { target { *-*-darwin* } } } */\n \n /* { dg-prune-output \"specifies less restrictive attribute\" } */"}]}