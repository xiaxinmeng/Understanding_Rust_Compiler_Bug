{"sha": "0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552", "node_id": "C_kwDOANBUbNoAKDBjYjVkN2NkYmFiOGU1ZjgzNTk3NjRlZjVmNjJkOTNjMmJjODg1NTI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-22T11:44:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-22T11:44:13Z"}, "message": "cse: Fix up CSE const_anchor handling [PR108193]\n\nThe following testcase ICEs on aarch64, because insert_const_anchor\ninserts invalid CONST_INT into the CSE tables - 0x80000000 for SImode.\nThe second hunk of the patch fixes that, the first one is to avoid\ntriggering undefined behavior at compile time during compute_const_anchors\ncomputations - performing those additions and subtractions in\nHOST_WIDE_INT means it can overflow for certain constants.\n\n2022-12-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/108193\n\t* cse.cc (compute_const_anchors): Change n type to\n\tunsigned HOST_WIDE_INT, adjust comparison against it to avoid\n\twarnings.  Formatting fix.\n\t(insert_const_anchor): Use gen_int_mode instead of GEN_INT.\n\n\t* gfortran.dg/pr108193.f90: New test.", "tree": {"sha": "622e6f49f7d78a8b4ec2c947f53bf04a0783ce9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/622e6f49f7d78a8b4ec2c947f53bf04a0783ce9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b2cf5041460859ca4f58e5da1308b7ef9129d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b2cf5041460859ca4f58e5da1308b7ef9129d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b2cf5041460859ca4f58e5da1308b7ef9129d8b"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "b030f06ade7935bd254c69f0b52dc8cc8ce36e9d", "filename": "gcc/cse.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552/gcc%2Fcse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552/gcc%2Fcse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.cc?ref=0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552", "patch": "@@ -1169,14 +1169,14 @@ compute_const_anchors (rtx cst,\n \t\t       HOST_WIDE_INT *lower_base, HOST_WIDE_INT *lower_offs,\n \t\t       HOST_WIDE_INT *upper_base, HOST_WIDE_INT *upper_offs)\n {\n-  HOST_WIDE_INT n = INTVAL (cst);\n+  unsigned HOST_WIDE_INT n = UINTVAL (cst);\n \n   *lower_base = n & ~(targetm.const_anchor - 1);\n-  if (*lower_base == n)\n+  if ((unsigned HOST_WIDE_INT) *lower_base == n)\n     return false;\n \n-  *upper_base =\n-    (n + (targetm.const_anchor - 1)) & ~(targetm.const_anchor - 1);\n+  *upper_base = ((n + (targetm.const_anchor - 1))\n+\t\t & ~(targetm.const_anchor - 1));\n   *upper_offs = n - *upper_base;\n   *lower_offs = n - *lower_base;\n   return true;\n@@ -1193,7 +1193,7 @@ insert_const_anchor (HOST_WIDE_INT anchor, rtx reg, HOST_WIDE_INT offs,\n   rtx anchor_exp;\n   rtx exp;\n \n-  anchor_exp = GEN_INT (anchor);\n+  anchor_exp = gen_int_mode (anchor, mode);\n   hash = HASH (anchor_exp, mode);\n   elt = lookup (anchor_exp, hash, mode);\n   if (!elt)"}, {"sha": "3a3655f124807e37857be3158c6e7666fd4cf2c3", "filename": "gcc/testsuite/gfortran.dg/pr108193.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108193.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108193.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108193.f90?ref=0cb5d7cdbab8e5f8359764ef5f62d93c2bc88552", "patch": "@@ -0,0 +1,24 @@\n+! PR rtl-optimization/108193\n+! { dg-do compile { target pthread } }\n+! { dg-options \"-O2 -fsplit-loops -ftree-parallelize-loops=2 -fno-tree-dominator-opts\" }\n+\n+subroutine foo (n, r)\n+  implicit none\n+  integer :: i, j, n\n+  real :: s, r(*)\n+\n+  s = 0.0\n+\n+  do j = 1, 2\n+     do i = j, n\n+        s = r(i)\n+     end do\n+  end do\n+\n+  do i = 1, n\n+     do j = i, n\n+        s = s + 1\n+     end do\n+     r(i) = s\n+  end do\n+end subroutine foo"}]}