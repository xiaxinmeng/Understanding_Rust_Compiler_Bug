{"sha": "3bffa1954c786a96419edce86343f6e66f111941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmZmExOTU0Yzc4NmE5NjQxOWVkY2U4NjM0M2Y2ZTY2ZjExMTk0MQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-05-25T16:24:43Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-05-25T16:24:43Z"}, "message": "final.c (frame_pointer_needed): Removed.\n\n2008-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* final.c (frame_pointer_needed): Removed.\n\t* flags.h (frame_pointer_needed): Likewise.\n\n\t* function.h (rtl_data): Add frame_pointer_needed.\n\t(frame_pointer_needed): New.\n\nFrom-SVN: r135870", "tree": {"sha": "af2ec7844c655e53de39b185e0fb8fa73a4c9d3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af2ec7844c655e53de39b185e0fb8fa73a4c9d3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bffa1954c786a96419edce86343f6e66f111941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bffa1954c786a96419edce86343f6e66f111941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bffa1954c786a96419edce86343f6e66f111941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bffa1954c786a96419edce86343f6e66f111941/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93fea8d3d840e71cfefb9f795663af460bd66498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93fea8d3d840e71cfefb9f795663af460bd66498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93fea8d3d840e71cfefb9f795663af460bd66498"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "2f99a512b0153e8322568f937d046290719dcf65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bffa1954c786a96419edce86343f6e66f111941/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bffa1954c786a96419edce86343f6e66f111941/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bffa1954c786a96419edce86343f6e66f111941", "patch": "@@ -1,3 +1,11 @@\n+2008-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* final.c (frame_pointer_needed): Removed.\n+\t* flags.h (frame_pointer_needed): Likewise.\n+\n+\t* function.h (rtl_data): Add frame_pointer_needed.\n+\t(frame_pointer_needed): New.\n+\n 2008-05-25  Arthur Loiret  <arthur.loiret@u-psud.fr>\n \n \t* config.gcc (sh2[lbe]*-*-linux*): Allow target."}, {"sha": "5d19e2d2abac968393d5caf598652cf189971e9d", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bffa1954c786a96419edce86343f6e66f111941/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bffa1954c786a96419edce86343f6e66f111941/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=3bffa1954c786a96419edce86343f6e66f111941", "patch": "@@ -178,12 +178,6 @@ CC_STATUS cc_status;\n CC_STATUS cc_prev_status;\n #endif\n \n-/* Nonzero means current function must be given a frame pointer.\n-   Initialized in function.c to 0.  Set only in reload1.c as per\n-   the needs of the function.  */\n-\n-int frame_pointer_needed;\n-\n /* Number of unmatched NOTE_INSN_BLOCK_BEG notes we have seen.  */\n \n static int block_depth;"}, {"sha": "1818a42c5caa76e4deb22c9e79425da5eb0915c2", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bffa1954c786a96419edce86343f6e66f111941/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bffa1954c786a96419edce86343f6e66f111941/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=3bffa1954c786a96419edce86343f6e66f111941", "patch": "@@ -223,12 +223,6 @@ extern int flag_dump_rtl_in_asm;\n \f\n /* Other basic status info about current function.  */\n \n-/* Nonzero means current function must be given a frame pointer.\n-   Set in stmt.c if anything is allocated on the stack there.\n-   Set in reload1.c if anything is allocated on the stack there.  */\n-\n-extern int frame_pointer_needed;\n-\n /* Nonzero if subexpressions must be evaluated from left-to-right.  */\n extern int flag_evaluation_order;\n "}, {"sha": "2c4699047126b38fb7b72fba878afa9a25ba891a", "filename": "gcc/function.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bffa1954c786a96419edce86343f6e66f111941/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bffa1954c786a96419edce86343f6e66f111941/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=3bffa1954c786a96419edce86343f6e66f111941", "patch": "@@ -392,6 +392,11 @@ struct rtl_data GTY(())\n \n   /* Nonzero if code to initialize arg_pointer_save_area has been emitted.  */\n   bool arg_pointer_save_area_init;\n+\n+  /* Nonzero means current function must be given a frame pointer.\n+     Set in stmt.c if anything is allocated on the stack there.\n+     Set in reload1.c if anything is allocated on the stack there.  */\n+  bool frame_pointer_needed;\n };\n \n #define return_label (crtl->x_return_label)\n@@ -405,6 +410,7 @@ struct rtl_data GTY(())\n #define avail_temp_slots (crtl->x_avail_temp_slots)\n #define temp_slot_level (crtl->x_temp_slot_level)\n #define nonlocal_goto_handler_labels (crtl->x_nonlocal_goto_handler_labels)\n+#define frame_pointer_needed (crtl->frame_pointer_needed)\n \n extern GTY(()) struct rtl_data x_rtl;\n "}]}