{"sha": "7292b8e4bac5eaf830e81b38be439719ecee8cf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI5MmI4ZTRiYWM1ZWFmODMwZTgxYjM4YmU0Mzk3MTllY2VlOGNmMw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2008-06-19T01:13:53Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2008-06-19T01:13:53Z"}, "message": "dfp.h, [...]: Remove references to IEEE 754R.\n\n\t* dfp.h, dfp.c, config/dfp-bit.h, config/dfp-bit.c, real.h,\n\treal.c: Remove references to IEEE 754R.\n\t* doc/install.texi (Configuration): IEEE 754R -> IEEE 754-2008.\n\t* doc/libgcc.texi (Decimal float library routines): Likewise.\n\nFrom-SVN: r136933", "tree": {"sha": "940ffd349ee44abb1c1899dc60f336e184cf035f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/940ffd349ee44abb1c1899dc60f336e184cf035f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7292b8e4bac5eaf830e81b38be439719ecee8cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7292b8e4bac5eaf830e81b38be439719ecee8cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7292b8e4bac5eaf830e81b38be439719ecee8cf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7292b8e4bac5eaf830e81b38be439719ecee8cf3/comments", "author": null, "committer": null, "parents": [{"sha": "31dd593cddc4a78e9f2450b890e4a505be98e59c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31dd593cddc4a78e9f2450b890e4a505be98e59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31dd593cddc4a78e9f2450b890e4a505be98e59c"}], "stats": {"total": 56, "additions": 31, "deletions": 25}, "files": [{"sha": "9d5e933d471ff19e0fd1fcbadf0fecbbe221591a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -1,3 +1,10 @@\n+2008-06-19  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* dfp.h, dfp.c, config/dfp-bit.h, config/dfp-bit.c, real.h,\n+\treal.c: Remove references to IEEE 754R.\n+\t* doc/install.texi (Configuration): IEEE 754R -> IEEE 754-2008.\n+\t* doc/libgcc.texi (Decimal float library routines): Likewise.\n+\n 2008-06-18  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* targhooks.h (struct gcc_target): New member unwind_word_mode."}, {"sha": "bfce851d7b9f91b8527183fe8ab36237ec014f3a", "filename": "gcc/config/dfp-bit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fconfig%2Fdfp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fconfig%2Fdfp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.c?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -27,7 +27,7 @@ along with GCC; see the file COPYING.  If not, write to the Free\n Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n 02110-1301, USA.  */\n \n-/* This implements IEEE 754R decimal floating point arithmetic, but\n+/* This implements IEEE 754 decimal floating point arithmetic, but\n    does not provide a mechanism for setting the rounding mode, or for\n    generating or handling exceptions.  Conversions between decimal\n    floating point types and other types depend on C library functions."}, {"sha": "4e46e34324678a27f9f28e02f821517df67b956b", "filename": "gcc/config/dfp-bit.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fconfig%2Fdfp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fconfig%2Fdfp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.h?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -65,7 +65,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n    DFP_C_TYPE: type of the arguments to the libgcc functions;\n \t(eg _Decimal32)\n \n-   IEEE_TYPE: the corresponding (encoded) IEEE754R type;\n+   IEEE_TYPE: the corresponding (encoded) IEEE754 type;\n \t(eg decimal32)\n    \n    TO_INTERNAL: the name of the decNumber function to convert an\n@@ -163,7 +163,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n \n    DFP_C_TYPE_TO: type of the result of dfp to dfp conversion.\n \n-   IEEE_TYPE_TO: the corresponding (encoded) IEEE754R type.\n+   IEEE_TYPE_TO: the corresponding (encoded) IEEE754 type.\n \n    TO_ENCODED_TO: the name of the decNumber function to convert an\n    internally represented decNumber into the encoded representation"}, {"sha": "0485430305fd8bdac7cfa9c6ceed7128d559fe40", "filename": "gcc/dfp.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.c?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -123,7 +123,7 @@ decimal_to_decnumber (const REAL_VALUE_TYPE *r, decNumber *dn)\n     dn->bits ^= DECNEG;\n }\n \n-/* Encode a real into an IEEE 754R decimal32 type.  */\n+/* Encode a real into an IEEE 754 decimal32 type.  */\n \n void\n encode_decimal32 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n@@ -142,7 +142,7 @@ encode_decimal32 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n   buf[0] = *(uint32_t *) d32.bytes;\n }\n \n-/* Decode an IEEE 754R decimal32 type into a real.  */\n+/* Decode an IEEE 754 decimal32 type into a real.  */\n \n void\n decode_decimal32 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n@@ -161,7 +161,7 @@ decode_decimal32 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n   decimal_from_decnumber (r, &dn, &set); \n }\n \n-/* Encode a real into an IEEE 754R decimal64 type.  */\n+/* Encode a real into an IEEE 754 decimal64 type.  */\n \n void\n encode_decimal64 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n@@ -189,7 +189,7 @@ encode_decimal64 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n     }\n }\n \n-/* Decode an IEEE 754R decimal64 type into a real.  */\n+/* Decode an IEEE 754 decimal64 type into a real.  */\n \n void\n decode_decimal64 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n@@ -217,7 +217,7 @@ decode_decimal64 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n   decimal_from_decnumber (r, &dn, &set); \n }\n \n-/* Encode a real into an IEEE 754R decimal128 type.  */\n+/* Encode a real into an IEEE 754 decimal128 type.  */\n \n void\n encode_decimal128 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n@@ -249,7 +249,7 @@ encode_decimal128 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n     }\n }\n \n-/* Decode an IEEE 754R decimal128 type into a real.  */\n+/* Decode an IEEE 754 decimal128 type into a real.  */\n \n void\n decode_decimal128 (const struct real_format *fmt ATTRIBUTE_UNUSED,"}, {"sha": "4e3bb5e5c8ec24d2694427b420d906143d03e2bb", "filename": "gcc/dfp.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdfp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdfp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.h?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -20,12 +20,12 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_DFP_H\n #define GCC_DFP_H\n \n-/* Encode REAL_VALUE_TYPEs into 32/64/128-bit IEEE 754R encoded values.  */\n+/* Encode REAL_VALUE_TYPEs into 32/64/128-bit IEEE 754 encoded values.  */\n void encode_decimal32  (const struct real_format *fmt, long *, const REAL_VALUE_TYPE *);\n void encode_decimal64  (const struct real_format *fmt, long *, const REAL_VALUE_TYPE *);\n void decode_decimal128 (const struct real_format *, REAL_VALUE_TYPE *, const long *);\n \n-/* Decode 32/64/128-bit IEEE 754R encoded values into REAL_VALUE_TYPEs.  */\n+/* Decode 32/64/128-bit IEEE 754 encoded values into REAL_VALUE_TYPEs.  */\n void decode_decimal32  (const struct real_format *, REAL_VALUE_TYPE *, const long *);\n void decode_decimal64  (const struct real_format *, REAL_VALUE_TYPE *, const long *);\n void encode_decimal128 (const struct real_format *fmt, long *, const REAL_VALUE_TYPE *);"}, {"sha": "3ce62cb07f921e32441ec02f76412bc0637a81a9", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -1355,14 +1355,13 @@ forward to maintain the port.\n @itemx --enable-decimal-float=dpd\n @itemx --disable-decimal-float\n Enable (or disable) support for the C decimal floating point extension\n-that is in the IEEE 754R extension to the IEEE754 floating point\n-standard.  This is enabled by default only on PowerPC, i386, and\n-x86_64 GNU/Linux systems.  Other systems may also support it, but\n-require the user to specifically enable it.  You can optionally\n-control which decimal floating point format is used (either @samp{bid}\n-or @samp{dpd}).  The @samp{bid} (binary integer decimal) format is\n-default on i386 and x86_64 systems, and the @samp{dpd} (densely packed\n-decimal) format is default on PowerPC systems.\n+that is in the IEEE 754-2008 standard.  This is enabled by default only\n+on PowerPC, i386, and x86_64 GNU/Linux systems.  Other systems may also\n+support it, but require the user to specifically enable it.  You can\n+optionally control which decimal floating point format is used (either\n+@samp{bid} or @samp{dpd}).  The @samp{bid} (binary integer decimal)\n+format is default on i386 and x86_64 systems, and the @samp{dpd}\n+(densely packed decimal) format is default on PowerPC systems.\n \n @item --enable-fixed-point\n @itemx --disable-fixed-point"}, {"sha": "8ead53d90a9960ecf69b3c056158346a3f88f153", "filename": "gcc/doc/libgcc.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdoc%2Flibgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Fdoc%2Flibgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flibgcc.texi?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -495,9 +495,9 @@ These functions return the quotient of @math{@var{a} + i@var{b}} and\n @node Decimal float library routines\n @section Routines for decimal floating point emulation\n @cindex decimal float library\n-@cindex IEEE-754R\n+@cindex IEEE 754-2008\n \n-The software decimal floating point library implements IEEE 754R\n+The software decimal floating point library implements IEEE 754-2008\n decimal floating point arithmetic and is only activated on selected\n targets.\n "}, {"sha": "b07175696837c7c943950c72d624174a2cabc7fd", "filename": "gcc/real.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -4279,7 +4279,7 @@ decode_decimal_quad (const struct real_format *fmt ATTRIBUTE_UNUSED,\n   decode_decimal128 (fmt, r, buf);\n }\n \n-/* Single precision decimal floating point (IEEE 754R). */\n+/* Single precision decimal floating point (IEEE 754). */\n const struct real_format decimal_single_format =\n   {\n     encode_decimal_single,\n@@ -4299,7 +4299,7 @@ const struct real_format decimal_single_format =\n     false\n   };\n \n-/* Double precision decimal floating point (IEEE 754R). */\n+/* Double precision decimal floating point (IEEE 754). */\n const struct real_format decimal_double_format =\n   {\n     encode_decimal_double,\n@@ -4319,7 +4319,7 @@ const struct real_format decimal_double_format =\n     false\n   };\n \n-/* Quad precision decimal floating point (IEEE 754R). */\n+/* Quad precision decimal floating point (IEEE 754). */\n const struct real_format decimal_quad_format =\n   {\n     encode_decimal_quad,"}, {"sha": "633229969a7c9554db21814ef397ddbe89b80fc5", "filename": "gcc/real.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7292b8e4bac5eaf830e81b38be439719ecee8cf3/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=7292b8e4bac5eaf830e81b38be439719ecee8cf3", "patch": "@@ -319,7 +319,7 @@ extern const struct real_format decimal_quad_format;\n #define REAL_VALUE_FROM_UNSIGNED_INT(r, lo, hi, mode) \\\n   real_from_integer (&(r), mode, lo, hi, 1)\n \n-/* Real values to IEEE 754R decimal floats.  */\n+/* Real values to IEEE 754 decimal floats.  */\n \n /* IN is a REAL_VALUE_TYPE.  OUT is an array of longs.  */\n #define REAL_VALUE_TO_TARGET_DECIMAL128(IN, OUT) \\"}]}