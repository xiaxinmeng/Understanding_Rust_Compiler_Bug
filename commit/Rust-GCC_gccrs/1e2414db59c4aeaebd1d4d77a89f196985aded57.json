{"sha": "1e2414db59c4aeaebd1d4d77a89f196985aded57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyNDE0ZGI1OWM0YWVhZWJkMWQ0ZDc3YTg5ZjE5Njk4NWFkZWQ1Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T20:51:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T20:51:20Z"}, "message": "(expand_function_end): Allow TRAMPOLINE_TEMPLATE\nto be omitted on systems for which it is not cost effective.\n\nFrom-SVN: r11822", "tree": {"sha": "71ce5287ebb0a266be85f9025813134b296eaf8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71ce5287ebb0a266be85f9025813134b296eaf8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e2414db59c4aeaebd1d4d77a89f196985aded57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2414db59c4aeaebd1d4d77a89f196985aded57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2414db59c4aeaebd1d4d77a89f196985aded57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2414db59c4aeaebd1d4d77a89f196985aded57/comments", "author": null, "committer": null, "parents": [{"sha": "8b7bf67189a6cba6c3e726eb5d81e0d24c8a4ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7bf67189a6cba6c3e726eb5d81e0d24c8a4ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7bf67189a6cba6c3e726eb5d81e0d24c8a4ef5"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "4d0966f1158fe0d8863d79ee51d60b92d5efc30a", "filename": "gcc/function.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2414db59c4aeaebd1d4d77a89f196985aded57/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2414db59c4aeaebd1d4d77a89f196985aded57/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1e2414db59c4aeaebd1d4d77a89f196985aded57", "patch": "@@ -5309,7 +5309,9 @@ expand_function_end (filename, line, end_bindings)\n   register int i;\n   tree link;\n \n+#ifdef TRAMPOLINE_TEMPLATE\n   static rtx initial_trampoline;\n+#endif\n \n   if (output_bytecode)\n     {\n@@ -5342,8 +5344,10 @@ expand_function_end (filename, line, end_bindings)\n       tree function = TREE_PURPOSE (link);\n       rtx context = lookup_static_chain (function);\n       rtx tramp = RTL_EXPR_RTL (TREE_VALUE (link));\n+      rtx blktramp;\n       rtx seq;\n \n+#ifdef TRAMPOLINE_TEMPLATE\n       /* First make sure this compilation has a template for\n \t initializing trampolines.  */\n       if (initial_trampoline == 0)\n@@ -5353,15 +5357,18 @@ expand_function_end (filename, line, end_bindings)\n \t    = gen_rtx (MEM, BLKmode, assemble_trampoline_template ());\n \t  resume_temporary_allocation ();\n \t}\n+#endif\n \n       /* Generate insns to initialize the trampoline.  */\n       start_sequence ();\n-      tramp = change_address (initial_trampoline, BLKmode,\n-\t\t\t      round_trampoline_addr (XEXP (tramp, 0)));\n-      emit_block_move (tramp, initial_trampoline, GEN_INT (TRAMPOLINE_SIZE),\n+      tramp = round_trampoline_addr (XEXP (tramp, 0));\n+#ifdef TRAMPOLINE_TEMPLATE\n+      blktramp = change_address (initial_trampoline, BLKmode, tramp);\n+      emit_block_move (blktramp, initial_trampoline,\n+\t\t       GEN_INT (TRAMPOLINE_SIZE),\n \t\t       FUNCTION_BOUNDARY / BITS_PER_UNIT);\n-      INITIALIZE_TRAMPOLINE (XEXP (tramp, 0),\n-\t\t\t     XEXP (DECL_RTL (function), 0), context);\n+#endif\n+      INITIALIZE_TRAMPOLINE (tramp, XEXP (DECL_RTL (function), 0), context);\n       seq = get_insns ();\n       end_sequence ();\n "}]}