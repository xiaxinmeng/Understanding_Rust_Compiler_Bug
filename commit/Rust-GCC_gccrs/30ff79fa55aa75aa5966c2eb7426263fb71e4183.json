{"sha": "30ff79fa55aa75aa5966c2eb7426263fb71e4183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmZjc5ZmE1NWFhNzVhYTU5NjZjMmViNzQyNjI2M2ZiNzFlNDE4Mw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-09-04T10:49:13Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-09-04T10:49:13Z"}, "message": "re PR fortran/50227 ([OOP] ICE-on-valid with allocatable class variable)\n\n2011-09-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50227\n\t* trans-types.c (gfc_sym_type): Check for proc_name.\n\n2011-09-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50227\n\t* gfortran.dg/class_45a.f03: New.\n\t* gfortran.dg/class_45b.f03: New.\n\nFrom-SVN: r178509", "tree": {"sha": "eb6b9c7d3a2d46fded678ccec8347eb6aebb64dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb6b9c7d3a2d46fded678ccec8347eb6aebb64dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30ff79fa55aa75aa5966c2eb7426263fb71e4183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ff79fa55aa75aa5966c2eb7426263fb71e4183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ff79fa55aa75aa5966c2eb7426263fb71e4183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ff79fa55aa75aa5966c2eb7426263fb71e4183/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad949bcc5e482ddd34bff6a3d01d02d5866155f8"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "b8c5e0119ba1956c39c5b24aca274fb8f3d9592a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=30ff79fa55aa75aa5966c2eb7426263fb71e4183", "patch": "@@ -1,3 +1,8 @@\n+2011-09-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50227\n+\t* trans-types.c (gfc_sym_type): Check for proc_name.\n+\n 2011-08-30  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/45044"}, {"sha": "43f1a19cc83fb43f94b08fa7d157657375cb71fb", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=30ff79fa55aa75aa5966c2eb7426263fb71e4183", "patch": "@@ -2109,7 +2109,8 @@ gfc_sym_type (gfc_symbol * sym)\n     {\n       /* We must use pointer types for potentially absent variables.  The\n \t optimizers assume a reference type argument is never NULL.  */\n-      if (sym->attr.optional || sym->ns->proc_name->attr.entry_master)\n+      if (sym->attr.optional\n+\t  || (sym->ns->proc_name && sym->ns->proc_name->attr.entry_master))\n \ttype = build_pointer_type (type);\n       else\n \t{"}, {"sha": "e60b88432f9313ec67140a64770e3cb322678dce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30ff79fa55aa75aa5966c2eb7426263fb71e4183", "patch": "@@ -1,3 +1,9 @@\n+2011-09-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50227\n+\t* gfortran.dg/class_45a.f03: New.\n+\t* gfortran.dg/class_45b.f03: New.\n+\n 2011-09-04  Jakub Jelinek  <jakub@redhat.com>\n \t    Ira Rosen  <ira.rosen@linaro.org>\n "}, {"sha": "af8932a6b18b0fd57296bfd535740bd13f41852a", "filename": "gcc/testsuite/gfortran.dg/class_45a.f03", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45a.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45a.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45a.f03?ref=30ff79fa55aa75aa5966c2eb7426263fb71e4183", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+!\n+! PR 50227: [4.7 Regression] [OOP] ICE-on-valid with allocatable class variable\n+!\n+! Contributed by Andrew Benson <abenson@caltech.edu>\n+\n+module G_Nodes\n+  private\n+\n+  type, public :: t0\n+  end type\n+  \n+  type, public, extends(t0) :: t1\n+  end type\n+\n+contains\n+  \n+  function basicGet(self)\n+    implicit none\n+    class(t0), pointer :: basicGet\n+    class(t0), intent(in) :: self\n+    select type (self)\n+    type is (t1)\n+       basicGet => self\n+    end select\n+  end function basicGet\n+\n+end module G_Nodes"}, {"sha": "e37fa96d3c2560d32fc7be55fb1aa1d45c014d7a", "filename": "gcc/testsuite/gfortran.dg/class_45b.f03", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45b.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ff79fa55aa75aa5966c2eb7426263fb71e4183/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45b.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45b.f03?ref=30ff79fa55aa75aa5966c2eb7426263fb71e4183", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+! { dg-additional-sources class_45a.f03 }\n+!\n+! PR 50227: [4.7 Regression] [OOP] ICE-on-valid with allocatable class variable\n+!\n+! Contributed by Andrew Benson <abenson@caltech.edu>\n+\n+program Test\n+  use G_Nodes\n+  class(t0), allocatable :: c\n+  allocate(t1 :: c)\n+end program Test\n+\n+! { dg-final { cleanup-modules \"G_Nodes\" } }"}]}