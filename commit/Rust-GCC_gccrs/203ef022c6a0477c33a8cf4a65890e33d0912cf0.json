{"sha": "203ef022c6a0477c33a8cf4a65890e33d0912cf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAzZWYwMjJjNmEwNDc3YzMzYThjZjRhNjU4OTBlMzNkMDkxMmNmMA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2019-08-22T14:40:52Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2019-08-22T14:40:52Z"}, "message": "[Arm] Add 16-bit thumb alternatives to iorsi3_compare0[_scratch]\n\nThe iorsi3_compare0 and iorsi3_compare0_scratch patterns can make use\nof the 16-bit thumb orrs instruction if suitable registers are\nallocated.  This patch adds the alternative to allow this to happen.\n\n\t* config/arm/arm.md (iorsi3_compare0): Add alternative for 16-bit thumb\n\tinsn.\n\t(iorsi3_compare0_scratch): Likewise.\n\nFrom-SVN: r274822", "tree": {"sha": "8b499ff0e85de91c9b460c2571a1f9d0f2240fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b499ff0e85de91c9b460c2571a1f9d0f2240fa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/203ef022c6a0477c33a8cf4a65890e33d0912cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203ef022c6a0477c33a8cf4a65890e33d0912cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203ef022c6a0477c33a8cf4a65890e33d0912cf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203ef022c6a0477c33a8cf4a65890e33d0912cf0/comments", "author": null, "committer": null, "parents": [{"sha": "391625888d4d97f9016ab9ac04acc55d81f0c26f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391625888d4d97f9016ab9ac04acc55d81f0c26f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391625888d4d97f9016ab9ac04acc55d81f0c26f"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "93e8420ea93549588d7b6e8cb6fb090173456260", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203ef022c6a0477c33a8cf4a65890e33d0912cf0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203ef022c6a0477c33a8cf4a65890e33d0912cf0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=203ef022c6a0477c33a8cf4a65890e33d0912cf0", "patch": "@@ -1,3 +1,9 @@\n+2019-08-22  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/arm.md (iorsi3_compare0): Add alternative for 16-bit thumb\n+\tinsn.\n+\t(iorsi3_compare0_scratch): Likewise.\n+\n 2019-08-22  Sylvia Taylor  <sylvia.taylor@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def:"}, {"sha": "4ba246ceeee8ea991220c8527bceb101d0abdf42", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203ef022c6a0477c33a8cf4a65890e33d0912cf0/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203ef022c6a0477c33a8cf4a65890e33d0912cf0/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=203ef022c6a0477c33a8cf4a65890e33d0912cf0", "patch": "@@ -3339,27 +3339,33 @@\n \n (define_insn \"*iorsi3_compare0\"\n   [(set (reg:CC_NOOV CC_REGNUM)\n-\t(compare:CC_NOOV (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r,r\")\n-\t\t\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"I,r\"))\n-\t\t\t (const_int 0)))\n-   (set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n+\t(compare:CC_NOOV\n+\t (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r,0,r\")\n+\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"I,l,r\"))\n+\t (const_int 0)))\n+   (set (match_operand:SI 0 \"s_register_operand\" \"=r,l,r\")\n \t(ior:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_32BIT\"\n   \"orrs%?\\\\t%0, %1, %2\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"logics_imm,logics_reg\")]\n+   (set_attr \"arch\" \"*,t2,*\")\n+   (set_attr \"length\" \"4,2,4\")\n+   (set_attr \"type\" \"logics_imm,logics_reg,logics_reg\")]\n )\n \n (define_insn \"*iorsi3_compare0_scratch\"\n   [(set (reg:CC_NOOV CC_REGNUM)\n-\t(compare:CC_NOOV (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r,r\")\n-\t\t\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"I,r\"))\n-\t\t\t (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=r,r\"))]\n+\t(compare:CC_NOOV\n+\t (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r,0,r\")\n+\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"I,l,r\"))\n+\t (const_int 0)))\n+   (clobber (match_scratch:SI 0 \"=r,l,r\"))]\n   \"TARGET_32BIT\"\n   \"orrs%?\\\\t%0, %1, %2\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"logics_imm,logics_reg\")]\n+   (set_attr \"arch\" \"*,t2,*\")\n+   (set_attr \"length\" \"4,2,4\")\n+   (set_attr \"type\" \"logics_imm,logics_reg,logics_reg\")]\n )\n \n (define_expand \"xordi3\""}]}