{"sha": "da73100b48932e7e01669993031fd694ed1590b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE3MzEwMGI0ODkzMmU3ZTAxNjY5OTkzMDMxZmQ2OTRlZDE1OTBiMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-26T18:15:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-26T18:15:29Z"}, "message": "c-common.h (enum cxx_dialect): Add cxx1z.\n\n\t* c-common.h (enum cxx_dialect): Add cxx1z.\n\t* c.opt (std=c++1z, std=c++17, std=gnu++1z, std=gnu++17): New.\n\t* c-opts.c (c_common_handle_option, set_std_cxx1z): Handle it.\n\nFrom-SVN: r212042", "tree": {"sha": "d199320e18256021973a188688722031198ee26f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d199320e18256021973a188688722031198ee26f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da73100b48932e7e01669993031fd694ed1590b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da73100b48932e7e01669993031fd694ed1590b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da73100b48932e7e01669993031fd694ed1590b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da73100b48932e7e01669993031fd694ed1590b2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8a36c783d8cc386ad77c2a5ed005273071db157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a36c783d8cc386ad77c2a5ed005273071db157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a36c783d8cc386ad77c2a5ed005273071db157"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "0112bc5c49c3685ffecfc3f9aa020d6541c8ae06", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=da73100b48932e7e01669993031fd694ed1590b2", "patch": "@@ -1,3 +1,9 @@\n+2014-06-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-common.h (enum cxx_dialect): Add cxx1z.\n+\t* c.opt (std=c++1z, std=c++17, std=gnu++1z, std=gnu++17): New.\n+\t* c-opts.c (c_common_handle_option, set_std_cxx1z): Handle it.\n+\n 2014-06-23  Marek Polacek  <polacek@redhat.com>\n \t    Andrew MacLeod  <amacleod@redhat.com>\n "}, {"sha": "3e8c8e716f86c6f0a6a54c4fcc1da4ef394d98da", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=da73100b48932e7e01669993031fd694ed1590b2", "patch": "@@ -640,8 +640,10 @@ enum cxx_dialect {\n   /* C++11  */\n   cxx0x,\n   cxx11 = cxx0x,\n-  /* C++1y (C++17?) */\n-  cxx1y\n+  /* C++1y (C++14?) */\n+  cxx1y,\n+  /* C++1z (C++17?) */\n+  cxx1z\n };\n \n /* The C++ dialect being used. C++98 is the default.  */"}, {"sha": "968b703328b50cd950f4afd5deac825086733f0d", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=da73100b48932e7e01669993031fd694ed1590b2", "patch": "@@ -116,6 +116,7 @@ static void handle_OPT_d (const char *);\n static void set_std_cxx98 (int);\n static void set_std_cxx11 (int);\n static void set_std_cxx1y (int);\n+static void set_std_cxx1z (int);\n static void set_std_c89 (int, int);\n static void set_std_c99 (int);\n static void set_std_c11 (int);\n@@ -702,6 +703,16 @@ c_common_handle_option (size_t scode, const char *arg, int value,\n \t}\n       break;\n \n+    case OPT_std_c__1z:\n+    case OPT_std_gnu__1z:\n+      if (!preprocessing_asm_p)\n+\t{\n+\t  set_std_cxx1z (code == OPT_std_c__1z /* ISO */);\n+\t  if (code == OPT_std_c__1z)\n+\t    cpp_opts->ext_numeric_literals = 0;\n+\t}\n+      break;\n+\n     case OPT_std_c90:\n     case OPT_std_iso9899_199409:\n       if (!preprocessing_asm_p)\n@@ -1579,6 +1590,20 @@ set_std_cxx1y (int iso)\n   cxx_dialect = cxx1y;\n }\n \n+/* Set the C++ 201z draft standard (without GNU extensions if ISO).  */\n+static void\n+set_std_cxx1z (int iso)\n+{\n+  cpp_set_lang (parse_in, iso ? CLK_CXX1Y: CLK_GNUCXX1Y);\n+  flag_no_gnu_keywords = iso;\n+  flag_no_nonansi_builtin = iso;\n+  flag_iso = iso;\n+  /* C++11 includes the C99 standard library.  */\n+  flag_isoc94 = 1;\n+  flag_isoc99 = 1;\n+  cxx_dialect = cxx1z;\n+}\n+\n /* Args to -d specify what to dump.  Silently ignore\n    unrecognized options; they may be aimed at toplev.c.  */\n static void"}, {"sha": "1d02bae30635a2956c68ab3e14b129131d49a048", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da73100b48932e7e01669993031fd694ed1590b2/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=da73100b48932e7e01669993031fd694ed1590b2", "patch": "@@ -1414,6 +1414,13 @@ Conform to the ISO 2014(?) C++ draft standard (experimental and incomplete suppo\n std=c++14\n C++ ObjC++ Alias(std=c++1y) Undocumented\n \n+std=c++1z\n+C++ ObjC++\n+Conform to the ISO 2017(?) C++ draft standard (experimental and incomplete support)\n+\n+std=c++17\n+C++ ObjC++ Alias(std=c++1z) Undocumented\n+\n std=c11\n C ObjC\n Conform to the ISO 2011 C standard (experimental and incomplete support)\n@@ -1458,11 +1465,18 @@ Deprecated in favor of -std=gnu++11\n \n std=gnu++1y\n C++ ObjC++\n-Conform to the ISO 201y(7?) C++ draft standard with GNU extensions (experimental and incomplete support)\n+Conform to the ISO 201y(4?) C++ draft standard with GNU extensions (experimental and incomplete support)\n \n std=gnu++14\n C++ ObjC++ Alias(std=gnu++1y) Undocumented\n \n+std=gnu++1z\n+C++ ObjC++\n+Conform to the ISO 201z(7?) C++ draft standard with GNU extensions (experimental and incomplete support)\n+\n+std=gnu++17\n+C++ ObjC++ Alias(std=gnu++1y) Undocumented\n+\n std=gnu11\n C ObjC\n Conform to the ISO 2011 C standard with GNU extensions (experimental and incomplete support)"}]}