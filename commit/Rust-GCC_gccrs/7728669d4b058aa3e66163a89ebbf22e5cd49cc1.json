{"sha": "7728669d4b058aa3e66163a89ebbf22e5cd49cc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyODY2OWQ0YjA1OGFhM2U2NjE2M2E4OWViYmYyMmU1Y2Q0OWNjMQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2018-05-28T09:06:02Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2018-05-28T09:06:02Z"}, "message": "DWARF: Handle expressions containing \"-1\" in dw2_asm_output_delta_uleb128.\n\nIn dwarf2out.c dwarf2out_var_location () we create loclabels that might\ncontain -1 (for example \".LVL5-1\"). Technically those are expressions,\nnot just plain labels. But they work fine everywhere we use them, except\nwhen calculating an uleb128 delta between two labels.\n\nFor example we might create the following DWARF5 location list entry:\n\n        .byte   0x3     # DW_LLE_startx_length (*.LLST0)\n        .uleb128 0x6    # Location list range start index (*.LVL5-1)\n        .uleb128 .LFE1-.LVL5-1        # Location list length (*.LLST0)\n        .uleb128 0x1    # Location expression size\n        .byte   0x54    # DW_OP_reg4\n        .byte   0       # DW_LLE_end_of_list (*.LLST0)\n\nNote the length is calculated using .uleb128 .LFE1-.LVL5-1. This is\nwrong, since both .LVL5 and 1 are substracted from .LFE1, instead of\n1 being subtracted from .LVL5 first, before substracting from .LFE1.\n\nThis happens because dw2_asm_output_delta_uleb128 expects two plain\nlabels and simply inserts a minus sign between them. To fix this we\nsimply look if the second label is actually an expression containing\na minus sign and then add brackets around it. That will emit the\ncorrect .uleb128 expression:\n\n        .uleb128 .LFE1-(.LVL5-1)        # Location list length (*.LLST0)\n\nWe cannot simply generate the loclabel containing brackets directly\nbecause we do use them also in contexts that don't take a full\nexpression (for example we use them with .quad too).\n\ngcc/\n\n\t* dwarf2asm.c (dw2_asm_output_delta_uleb128): Add brackets around\n\tlab2 if it is an expression containing a minus sign.\n\nFrom-SVN: r260845", "tree": {"sha": "70dddc3d4e6cb24ebf8e0987a31db95e579117af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70dddc3d4e6cb24ebf8e0987a31db95e579117af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7728669d4b058aa3e66163a89ebbf22e5cd49cc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7728669d4b058aa3e66163a89ebbf22e5cd49cc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7728669d4b058aa3e66163a89ebbf22e5cd49cc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7728669d4b058aa3e66163a89ebbf22e5cd49cc1/comments", "author": null, "committer": null, "parents": [{"sha": "ab4dad49127bc65de7dd4af02db3cad437a477d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4dad49127bc65de7dd4af02db3cad437a477d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab4dad49127bc65de7dd4af02db3cad437a477d6"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "9ea908606bee18534007493668844be0c63f3d29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7728669d4b058aa3e66163a89ebbf22e5cd49cc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7728669d4b058aa3e66163a89ebbf22e5cd49cc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7728669d4b058aa3e66163a89ebbf22e5cd49cc1", "patch": "@@ -1,3 +1,8 @@\n+2018-05-28  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf2asm.c (dw2_asm_output_delta_uleb128): Add brackets around lab2\n+\tif it is an expression containing a minus sign.\n+\n 2018-05-27  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa-linux.h (NEED_INDICATE_EXEC_STACK): Define to 0."}, {"sha": "c6f11c7468af36af23d43e98a7a581dd52d7aa55", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7728669d4b058aa3e66163a89ebbf22e5cd49cc1/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7728669d4b058aa3e66163a89ebbf22e5cd49cc1/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=7728669d4b058aa3e66163a89ebbf22e5cd49cc1", "patch": "@@ -811,7 +811,17 @@ dw2_asm_output_delta_uleb128 (const char *lab1 ATTRIBUTE_UNUSED,\n   fputs (\"\\t.uleb128 \", asm_out_file);\n   assemble_name (asm_out_file, lab1);\n   putc ('-', asm_out_file);\n-  assemble_name (asm_out_file, lab2);\n+  /* dwarf2out.c might give us a label expression (e.g. .LVL548-1)\n+     as second argument.  If so, make it a subexpression, to make\n+     sure the substraction is done in the right order.  */\n+  if (strchr (lab2, '-') != NULL)\n+    {\n+      putc ('(', asm_out_file);\n+      assemble_name (asm_out_file, lab2);\n+      putc (')', asm_out_file);\n+    }\n+  else\n+    assemble_name (asm_out_file, lab2);\n \n   if (flag_debug_asm && comment)\n     {"}]}