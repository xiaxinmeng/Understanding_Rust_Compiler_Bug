{"sha": "c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA0YmFiZDlkZmE1YzYzYzEwZDY1ZjFiZDNmYjhjZjUwM2FiNzM5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-04T12:38:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-04T12:38:16Z"}, "message": "libcpp: Fix ICEs on __has_include syntax errors [PR93545]\n\nSome of the following testcases ICE, because one of the cpp_get_token\ncalls in builtin_has_include reads the CPP_EOF token but the caller isn't\naware that CPP_EOF has been reached and will do another cpp_get_token.\nget_token_no_padding is something that is use by the\nhas_attribute/has_builtin callbacks, which will first peek and will not\nconsume CPP_EOF (but will consume other tokens).  The !SEEN_EOL ()\ncheck on the other side doesn't work anymore and isn't really needed,\nas we don't consume the EOF.  The change adds one further error to the\npr88974.c testcase, if we wanted just one error per __has_include,\nwe could add some boolean whether we've emitted errors already and\nonly emit the first one we encounter (not implemented).\n\n2020-02-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR preprocessor/93545\n\t* macro.c (cpp_get_token_no_padding): New function.\n\t(builtin_has_include): Use it instead of cpp_get_token.  Don't check\n\tSEEN_EOL.\n\n\t* c-c++-common/cpp/pr88974.c: Expect another diagnostics during error\n\trecovery.\n\t* c-c++-common/cpp/pr93545-1.c: New test.\n\t* c-c++-common/cpp/pr93545-2.c: New test.\n\t* c-c++-common/cpp/pr93545-3.c: New test.\n\t* c-c++-common/cpp/pr93545-4.c: New test.", "tree": {"sha": "27ca4c4c576f923bbe3abd73dd0f7d8ae70f5720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ca4c4c576f923bbe3abd73dd0f7d8ae70f5720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bc9d2f5ed4c39a7cad74db34e2bb125e012fa60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc9d2f5ed4c39a7cad74db34e2bb125e012fa60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc9d2f5ed4c39a7cad74db34e2bb125e012fa60"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "e46561a540cf598d3b1b58371a41d93c71f35553", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -1,3 +1,13 @@\n+2020-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/93545\n+\t* c-c++-common/cpp/pr88974.c: Expect another diagnostics during error\n+\trecovery.\n+\t* c-c++-common/cpp/pr93545-1.c: New test.\n+\t* c-c++-common/cpp/pr93545-2.c: New test.\n+\t* c-c++-common/cpp/pr93545-3.c: New test.\n+\t* c-c++-common/cpp/pr93545-4.c: New test.\n+\n 2020-02-04  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* g++.dg/coroutines/coro-missing-promise.C: New test."}, {"sha": "d6c2414ea1f79e7ba8912455806a46a8420baf64", "filename": "gcc/testsuite/c-c++-common/cpp/pr88974.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr88974.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr88974.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr88974.c?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -3,4 +3,5 @@\n \n #if __has_include (<pr88974.h)\n /* { dg-error \"missing terminating > character\" \"\" { target *-*-* } .-1 } */\n+/* { dg-error \"missing '\\\\\\)' after .__has_include. operand\" \"\" { target *-*-* } .-2 } */\n #endif"}, {"sha": "757277b71358f663d4b89434cf5cf5af05ce55a4", "filename": "gcc/testsuite/c-c++-common/cpp/pr93545-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-1.c?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -0,0 +1,4 @@\n+/* PR preprocessor/93545 */\n+/* { dg-do preprocess } */\n+\n+__has_include\t/* { dg-error \"\" } */"}, {"sha": "5ed2dab47ecc169a19c1628a5ad27114a23eeb95", "filename": "gcc/testsuite/c-c++-common/cpp/pr93545-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-2.c?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -0,0 +1,4 @@\n+/* PR preprocessor/93545 */\n+/* { dg-do preprocess } */\n+\n+__has_include (\t/* { dg-error \"\" } */"}, {"sha": "eae13bddfaa12569ec1df861305e427a4c331f9f", "filename": "gcc/testsuite/c-c++-common/cpp/pr93545-3.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-3.c?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -0,0 +1,4 @@\n+/* PR preprocessor/93545 */\n+/* { dg-do preprocess } */\n+\n+__has_include (\"foobarbaz\"\t/* { dg-error \"\" } */"}, {"sha": "977d210ac76a2d39973de92fd3dc80e4ce8f5217", "filename": "gcc/testsuite/c-c++-common/cpp/pr93545-4.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr93545-4.c?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -0,0 +1,4 @@\n+/* PR preprocessor/93545 */\n+/* { dg-do preprocess } */\n+\n+__has_include ()\t/* { dg-error \"\" } */"}, {"sha": "11c0773adb6e979e49343180e2d3834f76eac49b", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -1,3 +1,10 @@\n+2020-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/93545\n+\t* macro.c (cpp_get_token_no_padding): New function.\n+\t(builtin_has_include): Use it instead of cpp_get_token.  Don't check\n+\tSEEN_EOL.\n+\n 2020-02-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* configure: Regenerate."}, {"sha": "9f9f83134b4fea71c28f9c840c2faa16901634f6", "filename": "libcpp/macro.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=c04babd9dfa5c63c10d65f1bd3fb8cf503ab739d", "patch": "@@ -336,6 +336,22 @@ unsigned num_expanded_macros_counter = 0;\n    from macro expansion.  */\n unsigned num_macro_tokens_counter = 0;\n \n+/* Wrapper around cpp_get_token to skip CPP_PADDING tokens\n+   and not consume CPP_EOF.  */\n+static const cpp_token *\n+cpp_get_token_no_padding (cpp_reader *pfile)\n+{\n+  for (;;)\n+    {\n+      const cpp_token *ret = cpp_peek_token (pfile, 0);\n+      if (ret->type == CPP_EOF)\n+\treturn ret;\n+      ret = cpp_get_token (pfile);\n+      if (ret->type != CPP_PADDING)\n+\treturn ret;\n+    }\n+}\n+\n /* Handle meeting \"__has_include\" builtin macro.  */\n \n static int\n@@ -344,10 +360,10 @@ builtin_has_include (cpp_reader *pfile, cpp_hashnode *op, bool has_next)\n   int result = 0;\n \n   pfile->state.angled_headers = true;\n-  const cpp_token *token = cpp_get_token (pfile);\n+  const cpp_token *token = cpp_get_token_no_padding (pfile);\n   bool paren = token->type == CPP_OPEN_PAREN;\n   if (paren)\n-    token = cpp_get_token (pfile);\n+    token = cpp_get_token_no_padding (pfile);\n   else\n     cpp_error (pfile, CPP_DL_ERROR,\n \t       \"missing '(' before \\\"%s\\\" operand\", NODE_NAME (op));\n@@ -379,7 +395,8 @@ builtin_has_include (cpp_reader *pfile, cpp_hashnode *op, bool has_next)\n       XDELETEVEC (fname);\n     }\n \n-  if (paren && !SEEN_EOL () && cpp_get_token (pfile)->type != CPP_CLOSE_PAREN)\n+  if (paren\n+      && cpp_get_token_no_padding (pfile)->type != CPP_CLOSE_PAREN)\n     cpp_error (pfile, CPP_DL_ERROR,\n \t       \"missing ')' after \\\"%s\\\" operand\", NODE_NAME (op));\n "}]}