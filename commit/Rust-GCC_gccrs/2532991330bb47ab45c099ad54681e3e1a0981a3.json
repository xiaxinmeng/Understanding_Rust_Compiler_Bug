{"sha": "2532991330bb47ab45c099ad54681e3e1a0981a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzMjk5MTMzMGJiNDdhYjQ1YzA5OWFkNTQ2ODFlM2UxYTA5ODFhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-13T08:16:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-13T08:16:59Z"}, "message": "gimple-parser.c (c_parser_gimple_postfix_expression): Parse _Literal ( type-name ) number.\n\n2017-01-13  Richard Biener  <rguenther@suse.de>\n\n\tc/\n\t* gimple-parser.c (c_parser_gimple_postfix_expression): Parse\n\t_Literal ( type-name ) number.\n\n\t* tree-pretty-print.c (dump_generic_node): Dump INTEGER_CSTs\n\tas _Literal ( type ) number in case usual suffixes do not\n\tpreserve all information.\n\n\t* gcc.dg/gimplefe-22.c: New testcase.\n\nFrom-SVN: r244393", "tree": {"sha": "ff747237c5c0afc4668ec0dcff4a7b37a6310112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff747237c5c0afc4668ec0dcff4a7b37a6310112"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2532991330bb47ab45c099ad54681e3e1a0981a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2532991330bb47ab45c099ad54681e3e1a0981a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2532991330bb47ab45c099ad54681e3e1a0981a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2532991330bb47ab45c099ad54681e3e1a0981a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b70b8e5eb8d4b5ab175785366cfc6cbe837390"}], "stats": {"total": 84, "additions": 79, "deletions": 5}, "files": [{"sha": "d79749ecefe401562cc104371cdc97b06fc23254", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2532991330bb47ab45c099ad54681e3e1a0981a3", "patch": "@@ -1,3 +1,9 @@\n+2017-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-pretty-print.c (dump_generic_node): Dump INTEGER_CSTs\n+\tas _Literal ( type ) number in case usual suffixes do not\n+\tpreserve all information.\n+\n 2017-01-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/79004"}, {"sha": "fd6f74b3b4136a57795d64cd2fd9db7aa11846d0", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=2532991330bb47ab45c099ad54681e3e1a0981a3", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-parser.c (c_parser_gimple_postfix_expression): Parse\n+\t_Literal ( type-name ) number.\n+\n 2017-01-12  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-parser.c (c_parser_gimple_postfix_expression): Parse"}, {"sha": "927c68545cf31e3464b0b6e6d3e323dcb748aee7", "filename": "gcc/c/gimple-parser.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Fc%2Fgimple-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Fc%2Fgimple-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgimple-parser.c?ref=2532991330bb47ab45c099ad54681e3e1a0981a3", "patch": "@@ -799,6 +799,32 @@ c_parser_gimple_postfix_expression (c_parser *parser)\n \t\t\t\t       type, ptr.value, alias_off);\n \t      break;\n \t    }\n+\t  else if (strcmp (IDENTIFIER_POINTER (id), \"_Literal\") == 0)\n+\t    {\n+\t      /* _Literal '(' type-name ')' number  */\n+\t      c_parser_consume_token (parser);\n+\t      tree type = NULL_TREE;\n+\t      if (c_parser_require (parser, CPP_OPEN_PAREN, \"expected %<(%>\"))\n+\t\t{\n+\t\t  struct c_type_name *type_name = c_parser_type_name (parser);\n+\t\t  tree tem;\n+\t\t  if (type_name)\n+\t\t    type = groktypename (type_name, &tem, NULL);\n+\t\t  c_parser_skip_until_found (parser, CPP_CLOSE_PAREN,\n+\t\t\t\t\t     \"expected %<)%>\");\n+\t\t}\n+\t      tree val = c_parser_gimple_postfix_expression (parser).value;\n+\t      if (! type\n+\t\t  || ! val\n+\t\t  || val == error_mark_node\n+\t\t  || TREE_CODE (val) != INTEGER_CST)\n+\t\t{\n+\t\t  c_parser_error (parser, \"invalid _Literal\");\n+\t\t  return expr;\n+\t\t}\n+\t      expr.value = fold_convert (type, val);\n+\t      return expr;\n+\t    }\n \t  /* SSA name.  */\n \t  unsigned version, ver_offset;\n \t  if (! lookup_name (id)"}, {"sha": "91b769c0be5118a323324a721919f89ac565d6f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2532991330bb47ab45c099ad54681e3e1a0981a3", "patch": "@@ -1,3 +1,7 @@\n+2017-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/gimplefe-22.c: New testcase.\n+\n 2017-01-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77283"}, {"sha": "8e213b94ae0069cb2cbda57e1bc8212439e9389c", "filename": "gcc/testsuite/gcc.dg/gimplefe-22.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-22.c?ref=2532991330bb47ab45c099ad54681e3e1a0981a3", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgimple\" } */\n+\n+void __GIMPLE ()\n+foo (short * p)\n+{\n+  *p = _Literal (short int) 1;\n+  return;\n+}"}, {"sha": "ebce67ec3e16930b118f20b013382b55a90ab833", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2532991330bb47ab45c099ad54681e3e1a0981a3/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=2532991330bb47ab45c099ad54681e3e1a0981a3", "patch": "@@ -1664,6 +1664,16 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, int flags,\n       break;\n \n     case INTEGER_CST:\n+      if (flags & TDF_GIMPLE\n+\t  && (POINTER_TYPE_P (TREE_TYPE (node))\n+\t      || (TYPE_PRECISION (TREE_TYPE (node))\n+\t\t  < TYPE_PRECISION (integer_type_node))\n+\t      || exact_log2 (TYPE_PRECISION (TREE_TYPE (node))) == -1))\n+\t{\n+\t  pp_string (pp, \"_Literal (\");\n+\t  dump_generic_node (pp, TREE_TYPE (node), spc, flags, false);\n+\t  pp_string (pp, \") \");\n+\t}\n       if (TREE_CODE (TREE_TYPE (node)) == POINTER_TYPE\n \t  && ! (flags & TDF_GIMPLE))\n \t{\n@@ -1693,11 +1703,7 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, int flags,\n       else if (tree_fits_shwi_p (node))\n \tpp_wide_integer (pp, tree_to_shwi (node));\n       else if (tree_fits_uhwi_p (node))\n-\t{\n-\t  pp_unsigned_wide_integer (pp, tree_to_uhwi (node));\n-\t  if (flags & TDF_GIMPLE)\n-\t    pp_character (pp, 'U');\n-\t}\n+\tpp_unsigned_wide_integer (pp, tree_to_uhwi (node));\n       else\n \t{\n \t  wide_int val = node;\n@@ -1710,6 +1716,24 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, int flags,\n \t  print_hex (val, pp_buffer (pp)->digit_buffer);\n \t  pp_string (pp, pp_buffer (pp)->digit_buffer);\n \t}\n+      if ((flags & TDF_GIMPLE)\n+\t  && (POINTER_TYPE_P (TREE_TYPE (node))\n+\t      || (TYPE_PRECISION (TREE_TYPE (node))\n+\t\t  < TYPE_PRECISION (integer_type_node))\n+\t      || exact_log2 (TYPE_PRECISION (TREE_TYPE (node))) == -1))\n+\t{\n+\t  if (TYPE_UNSIGNED (TREE_TYPE (node)))\n+\t    pp_character (pp, 'u');\n+\t  if (TYPE_PRECISION (TREE_TYPE (node))\n+\t      == TYPE_PRECISION (unsigned_type_node))\n+\t    ;\n+\t  else if (TYPE_PRECISION (TREE_TYPE (node))\n+\t\t   == TYPE_PRECISION (long_unsigned_type_node))\n+\t    pp_character (pp, 'l');\n+\t  else if (TYPE_PRECISION (TREE_TYPE (node))\n+\t\t   == TYPE_PRECISION (long_long_unsigned_type_node))\n+\t    pp_string (pp, \"ll\");\n+\t}\n       if (TREE_OVERFLOW (node))\n \tpp_string (pp, \"(OVF)\");\n       break;"}]}