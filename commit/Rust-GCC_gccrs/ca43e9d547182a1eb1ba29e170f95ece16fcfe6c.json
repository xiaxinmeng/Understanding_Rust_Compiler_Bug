{"sha": "ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E0M2U5ZDU0NzE4MmExZWIxYmEyOWUxNzBmOTVlY2UxNmZjZmU2Yw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2013-08-24T22:29:37Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2013-08-24T22:29:37Z"}, "message": "c-pretty-print.h (c_pretty_printer::constant): Now a virtual member function.\n\n\t* c-pretty-print.h (c_pretty_printer::constant): Now a virtual\n\tmember function.\n\t(pp_constant): Adjust.\n\t(pp_c_constant): Remove.\n\t* c-pretty-print.c (c_pretty_printer::constant): Rename from\n\tpp_c_constant.  Adjust.\n\t(pp_c_constant)\n\t(pp_c_primary_expression): Call pp_constant in lieu of pp_c_constant.\n\t(c_pretty_printer::c_pretty_printer): Remove assignment to constant.\n\ncp/\n\t* cxx-pretty-print.h (cxx_pretty_printer::constant): Now a member\n\tfunction, overriding c_pretty_printer::constant.\n\t* cxx-pretty-print.c (cxx_pretty_printer::constant): Rename from\n\tpp_cxx_constant.  Adjust.\n\t(cxx_pretty_printer::cxx_pretty_printer): Do not assign to constant.\n\nFrom-SVN: r201969", "tree": {"sha": "4b35d7d9d9257f3609b5a24c0d5f87653ee87c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b35d7d9d9257f3609b5a24c0d5f87653ee87c46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ead69dac2006c72a14ecdac799d24171ab2f25fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead69dac2006c72a14ecdac799d24171ab2f25fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead69dac2006c72a14ecdac799d24171ab2f25fc"}], "stats": {"total": 73, "additions": 46, "deletions": 27}, "files": [{"sha": "ffac4dd07aaf47f2c99bded06a037491d572473f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "patch": "@@ -1,3 +1,15 @@\n+2013-08-24  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* c-pretty-print.h (c_pretty_printer::constant): Now a virtual\n+\tmember function.\n+\t(pp_constant): Adjust.\n+\t(pp_c_constant): Remove.\n+\t* c-pretty-print.c (c_pretty_printer::constant): Rename from\n+\tpp_c_constant.  Adjust.\n+\t(pp_c_constant)\n+\t(pp_c_primary_expression): Call pp_constant in lieu of pp_c_constant.\n+\t(c_pretty_printer::c_pretty_printer): Remove assignment to constant.\n+\n 2013-08-22  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-pretty-print.h (pp_c_pretty_printer_init): Remove."}, {"sha": "5291be775c2eff57dee5a625d7757f880d56b34e", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "patch": "@@ -1130,7 +1130,7 @@ pp_c_complex_expr (c_pretty_printer *pp, tree e)\n       character-constant   */\n \n void\n-pp_c_constant (c_pretty_printer *pp, tree e)\n+c_pretty_printer::constant (tree e)\n {\n   const enum tree_code code = TREE_CODE (e);\n \n@@ -1140,38 +1140,38 @@ pp_c_constant (c_pretty_printer *pp, tree e)\n       {\n \ttree type = TREE_TYPE (e);\n \tif (type == boolean_type_node)\n-\t  pp_c_bool_constant (pp, e);\n+\t  pp_c_bool_constant (this, e);\n \telse if (type == char_type_node)\n-\t  pp_c_character_constant (pp, e);\n+\t  pp_c_character_constant (this, e);\n \telse if (TREE_CODE (type) == ENUMERAL_TYPE\n-\t\t && pp_c_enumeration_constant (pp, e))\n+\t\t && pp_c_enumeration_constant (this, e))\n \t  ;\n \telse\n-\t  pp_c_integer_constant (pp, e);\n+\t  pp_c_integer_constant (this, e);\n       }\n       break;\n \n     case REAL_CST:\n-      pp_c_floating_constant (pp, e);\n+      pp_c_floating_constant (this, e);\n       break;\n \n     case FIXED_CST:\n-      pp_c_fixed_constant (pp, e);\n+      pp_c_fixed_constant (this, e);\n       break;\n \n     case STRING_CST:\n-      pp_c_string_literal (pp, e);\n+      pp_c_string_literal (this, e);\n       break;\n \n     case COMPLEX_CST:\n       /* Sometimes, we are confused and we think a complex literal\n          is a constant.  Such thing is a compound literal which\n          grammatically belongs to postfix-expr production.  */\n-      pp_c_compound_literal (pp, e);\n+      pp_c_compound_literal (this, e);\n       break;\n \n     default:\n-      pp_unsupported_tree (pp, e);\n+      pp_unsupported_tree (this, e);\n       break;\n     }\n }\n@@ -1236,7 +1236,7 @@ pp_c_primary_expression (c_pretty_printer *pp, tree e)\n     case REAL_CST:\n     case FIXED_CST:\n     case STRING_CST:\n-      pp_c_constant (pp, e);\n+      pp_constant (pp, e);\n       break;\n \n     case TARGET_EXPR:\n@@ -1357,7 +1357,7 @@ pp_c_initializer_list (c_pretty_printer *pp, tree e)\n \t      {\n \t\tpp_c_left_bracket (pp);\n \t\tif (TREE_PURPOSE (init))\n-\t\t  pp_c_constant (pp, TREE_PURPOSE (init));\n+\t\t  pp_constant (pp, TREE_PURPOSE (init));\n \t\tpp_c_right_bracket (pp);\n \t      }\n \t    pp_c_whitespace (pp);\n@@ -2339,7 +2339,6 @@ c_pretty_printer::c_pretty_printer ()\n \n   statement                 = pp_c_statement;\n \n-  constant                  = pp_c_constant;\n   id_expression             = pp_c_id_expression;\n   primary_expression        = pp_c_primary_expression;\n   postfix_expression        = pp_c_postfix_expression;"}, {"sha": "13b0fe55397ae2b0a8ecb80338054c9abd713890", "filename": "gcc/c-family/c-pretty-print.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fc-family%2Fc-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fc-family%2Fc-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.h?ref=ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "patch": "@@ -51,6 +51,7 @@ struct c_pretty_printer : pretty_printer\n {\n   c_pretty_printer ();\n \n+  virtual void constant (tree);\n   /* Points to the first element of an array of offset-list.\n      Not used yet.  */\n   int *offset_list;\n@@ -76,7 +77,6 @@ struct c_pretty_printer : pretty_printer\n \n   c_pretty_print_fn statement;\n \n-  c_pretty_print_fn constant;\n   c_pretty_print_fn id_expression;\n   c_pretty_print_fn primary_expression;\n   c_pretty_print_fn postfix_expression;\n@@ -109,7 +109,7 @@ struct c_pretty_printer : pretty_printer\n \n #define pp_statement(PP, S)             (PP)->statement (PP, S)\n \n-#define pp_constant(PP, E)              (PP)->constant (PP, E)\n+#define pp_constant(PP, E)              (PP)->constant (E)\n #define pp_id_expression(PP, E)         (PP)->id_expression (PP, E)\n #define pp_primary_expression(PP, E)    (PP)->primary_expression (PP, E)\n #define pp_postfix_expression(PP, E)    (PP)->postfix_expression (PP, E)\n@@ -169,7 +169,6 @@ void pp_c_cast_expression (c_pretty_printer *, tree);\n void pp_c_postfix_expression (c_pretty_printer *, tree);\n void pp_c_primary_expression (c_pretty_printer *, tree);\n void pp_c_init_declarator (c_pretty_printer *, tree);\n-void pp_c_constant (c_pretty_printer *, tree);\n void pp_c_id_expression (c_pretty_printer *, tree);\n void pp_c_ws_string (c_pretty_printer *, const char *);\n void pp_c_identifier (c_pretty_printer *, const char *);"}, {"sha": "42db29561abcf39556673d50d3b2c58b94e6d075", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "patch": "@@ -1,3 +1,11 @@\n+2013-08-24  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* cxx-pretty-print.h (cxx_pretty_printer::constant): Now a member\n+\tfunction, overriding c_pretty_printer::constant.\n+\t* cxx-pretty-print.c (cxx_pretty_printer::constant): Rename from\n+\tpp_cxx_constant.  Adjust.\n+\t(cxx_pretty_printer::cxx_pretty_printer): Do not assign to constant.\n+\n 2013-08-23  Gabriel Dos Reis  <gdr@integrable-solutiobs.net>\n \n \t* cp-objcp-common.c (cxx_initialize_diagnostics): Call a"}, {"sha": "f83f31db26089f954990cc9e9a89679914e18cae", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "patch": "@@ -321,32 +321,32 @@ pp_cxx_qualified_id (cxx_pretty_printer *pp, tree t)\n }\n \n \n-static void\n-pp_cxx_constant (cxx_pretty_printer *pp, tree t)\n+void\n+cxx_pretty_printer::constant (tree t)\n {\n   switch (TREE_CODE (t))\n     {\n     case STRING_CST:\n       {\n \tconst bool in_parens = PAREN_STRING_LITERAL_P (t);\n \tif (in_parens)\n-\t  pp_cxx_left_paren (pp);\n-\tpp_c_constant (pp, t);\n+\t  pp_cxx_left_paren (this);\n+\tc_pretty_printer::constant (t);\n \tif (in_parens)\n-\t  pp_cxx_right_paren (pp);\n+\t  pp_cxx_right_paren (this);\n       }\n       break;\n \n     case INTEGER_CST:\n       if (NULLPTR_TYPE_P (TREE_TYPE (t)))\n \t{\n-\t  pp_string (pp, \"nullptr\");\n+\t  pp_string (this, \"nullptr\");\n \t  break;\n \t}\n       /* else fall through.  */\n \n     default:\n-      pp_c_constant (pp, t);\n+      c_pretty_printer::constant (t);\n       break;\n     }\n }\n@@ -372,7 +372,7 @@ pp_cxx_id_expression (cxx_pretty_printer *pp, tree t)\n void\n pp_cxx_userdef_literal (cxx_pretty_printer *pp, tree t)\n {\n-  pp_cxx_constant (pp, USERDEF_LITERAL_VALUE (t));\n+  pp_constant (pp, USERDEF_LITERAL_VALUE (t));\n   pp_cxx_id_expression (pp, USERDEF_LITERAL_SUFFIX_ID (t));\n }\n \n@@ -420,7 +420,7 @@ pp_cxx_primary_expression (cxx_pretty_printer *pp, tree t)\n     case REAL_CST:\n     case COMPLEX_CST:\n     case STRING_CST:\n-      pp_cxx_constant (pp, t);\n+      pp_constant (pp, t);\n       break;\n \n     case USERDEF_LITERAL:\n@@ -1041,7 +1041,7 @@ pp_cxx_expression (cxx_pretty_printer *pp, tree t)\n     case INTEGER_CST:\n     case REAL_CST:\n     case COMPLEX_CST:\n-      pp_cxx_constant (pp, t);\n+      pp_constant (pp, t);\n       break;\n \n     case USERDEF_LITERAL:\n@@ -2452,7 +2452,6 @@ cxx_pretty_printer::cxx_pretty_printer ()\n \n   /* pp->statement = (pp_fun) pp_cxx_statement;  */\n \n-  constant = (pp_fun) pp_cxx_constant;\n   id_expression = (pp_fun) pp_cxx_id_expression;\n   primary_expression = (pp_fun) pp_cxx_primary_expression;\n   postfix_expression = (pp_fun) pp_cxx_postfix_expression;"}, {"sha": "3d82ecbf8b06ef608320895311158196f6fd24da", "filename": "gcc/cp/cxx-pretty-print.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fcp%2Fcxx-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca43e9d547182a1eb1ba29e170f95ece16fcfe6c/gcc%2Fcp%2Fcxx-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.h?ref=ca43e9d547182a1eb1ba29e170f95ece16fcfe6c", "patch": "@@ -32,6 +32,8 @@ enum cxx_pretty_printer_flags\n struct cxx_pretty_printer : c_pretty_printer\n {\n   cxx_pretty_printer ();\n+\n+  virtual void constant (tree);\n   /* This is the enclosing scope of the entity being pretty-printed.  */\n   tree enclosing_scope;\n };"}]}