{"sha": "2794f02243b66df4e2ecbb042e26835f8b4a2a93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5NGYwMjI0M2I2NmRmNGUyZWNiYjA0MmUyNjgzNWY4YjRhMmE5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T10:27:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T10:27:47Z"}, "message": "[multiple changes]\n\n2009-04-16  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch6.ads, exp_ch6.adb (Is_Build_In_Place_Function_Return): Remove,\n\tunused.\n\n2009-04-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch4.adb: Minor reformatting\n\n\t* adaint.c: Remove junk duplicated code.\n\n\t* sem_ch3.adb: Minor reformatting\n\n\t* exp_dist.adb: Minor comment rewording\n\nFrom-SVN: r146165", "tree": {"sha": "f9b2bdff86bc1060fbbee4da8e48621242d5f0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9b2bdff86bc1060fbbee4da8e48621242d5f0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2794f02243b66df4e2ecbb042e26835f8b4a2a93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2794f02243b66df4e2ecbb042e26835f8b4a2a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2794f02243b66df4e2ecbb042e26835f8b4a2a93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2794f02243b66df4e2ecbb042e26835f8b4a2a93/comments", "author": null, "committer": null, "parents": [{"sha": "b0fbf3c0ca19ee803de0f9568db4a9744092688c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0fbf3c0ca19ee803de0f9568db4a9744092688c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0fbf3c0ca19ee803de0f9568db4a9744092688c"}], "stats": {"total": 65, "additions": 19, "deletions": 46}, "files": [{"sha": "50605213065a95930342b623c4399fc8a9b503b5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -1,3 +1,18 @@\n+2009-04-16  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch6.ads, exp_ch6.adb (Is_Build_In_Place_Function_Return): Remove,\n+\tunused.\n+\n+2009-04-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch4.adb: Minor reformatting\n+\n+\t* adaint.c: Remove junk duplicated code.\n+\n+\t* sem_ch3.adb: Minor reformatting\n+\n+\t* exp_dist.adb: Minor comment rewording\n+\n 2009-04-16  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Document effect of Assume_No_Invalid_Values and -gnatVa"}, {"sha": "4f38528c648e99e797a68a08e0981fe350aff1fe", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -469,7 +469,7 @@ __gnat_symlink (char *oldpath ATTRIBUTE_UNUSED,\n /* Try to lock a file, return 1 if success.  */\n \n #if defined (__vxworks) || defined (__nucleus__) || defined (MSDOS) \\\n-  || defined (_WIN32)\n+  || defined (_WIN32) || defined (__EMX__) || defined (VMS)\n \n /* Version that does not use link. */\n \n@@ -501,27 +501,6 @@ __gnat_try_lock (char *dir, char *file)\n   return 1;\n }\n \n-#elif defined (__EMX__) || defined (VMS)\n-\n-/* More cases that do not use link; identical code, to solve too long\n-   line problem ??? */\n-\n-int\n-__gnat_try_lock (char *dir, char *file)\n-{\n-  char full_path[256];\n-  int fd;\n-\n-  sprintf (full_path, \"%s%c%s\", dir, DIR_SEPARATOR, file);\n-  fd = open (full_path, O_CREAT | O_EXCL, 0600);\n-\n-  if (fd < 0)\n-    return 0;\n-\n-  close (fd);\n-  return 1;\n-}\n-\n #else\n \n /* Version using link(), more secure over NFS.  */"}, {"sha": "254456034ec961409a23d55c8f6b2a2f150f7399", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -4748,22 +4748,6 @@ package body Exp_Ch6 is\n       end if;\n    end Is_Build_In_Place_Function_Call;\n \n-   ---------------------------------------\n-   -- Is_Build_In_Place_Function_Return --\n-   ---------------------------------------\n-\n-   function Is_Build_In_Place_Function_Return (N : Node_Id) return Boolean is\n-   begin\n-      if Nkind_In (N, N_Simple_Return_Statement,\n-                      N_Extended_Return_Statement)\n-      then\n-         return Is_Build_In_Place_Function\n-                  (Return_Applies_To (Return_Statement_Entity (N)));\n-      else\n-         return False;\n-      end if;\n-   end Is_Build_In_Place_Function_Return;\n-\n    -----------------------\n    -- Freeze_Subprogram --\n    -----------------------"}, {"sha": "242995f490d2c92b9a50948dcf28233ccdda50d1", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -112,11 +112,6 @@ package Exp_Ch6 is\n    --  that requires handling as a build-in-place call or is a qualified\n    --  expression applied to such a call; otherwise returns False.\n \n-   function Is_Build_In_Place_Function_Return (N : Node_Id) return Boolean;\n-   --  Ada 2005 (AI-318-02): Returns True if N is an N_Simple_Return_Statement\n-   --  or N_Extended_Return_Statement and it applies to a build-in-place\n-   --  function or generic function.\n-\n    procedure Make_Build_In_Place_Call_In_Allocator\n      (Allocator     : Node_Id;\n       Function_Call : Node_Id);"}, {"sha": "63ccc358d21515651e7bc281ce79d029f48acd3b", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -8528,7 +8528,7 @@ package body Exp_Dist is\n                     Parameter_Type => New_Occurrence_Of (RTE (RE_Any), Loc))),\n                 Result_Definition => New_Occurrence_Of (Typ, Loc));\n \n-            --  The following  is taken care of by Exp_Dist.Add_RACW_From_Any\n+            --  The RACW case is taken care of by Exp_Dist.Add_RACW_From_Any\n \n             pragma Assert\n               (not (Is_Remote_Access_To_Class_Wide_Type (Typ)));"}, {"sha": "765adb3b4141a28eae5a5aa1489e295f0ea5a093", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -3330,7 +3330,7 @@ package body Sem_Ch3 is\n       --  extension with a synchronized parent must be explicitly declared\n       --  synchronized, because the full view will be a synchronized type.\n       --  This must be checked before the check for limited types below,\n-      --  to ensure that types declared limited are not allowed extend\n+      --  to ensure that types declared limited are not allowed to extend\n       --  synchronized interfaces.\n \n       elsif Is_Interface (Parent_Type)"}, {"sha": "e1829054adef261c52d5d7c425e72b9f1d605fec", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794f02243b66df4e2ecbb042e26835f8b4a2a93/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=2794f02243b66df4e2ecbb042e26835f8b4a2a93", "patch": "@@ -4760,7 +4760,7 @@ package body Sem_Ch4 is\n             null;\n \n          else\n-            --  Save candidate type for subsquent error message, if any.\n+            --  Save candidate type for subsquent error message, if any\n \n             if not Is_Limited_Type (T1) then\n                Candidate_Type := T1;"}]}