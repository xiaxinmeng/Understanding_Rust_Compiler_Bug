{"sha": "ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "node_id": "C_kwDOANBUbNoAKGVmNWNjNmJiYjYwYjBjY2JjMTBmYjc2YjY5N2FlMDJmMjhhZjE4YzA", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2022-06-08T07:14:11Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2022-06-08T07:17:19Z"}, "message": "arm: Add star-mc1 cpu\n\nThe star-mc1 is an embedded processor with armv8m architecture.  Majorly\nit is designed to meet the requirements of AIoT application performance,\npower consumption and security.  This patch is to add support of star-mc1\ncpu.\n\nSigned-off-by: Chung-Ju Wu <jasonwucj@gmail.com>\n\ngcc/ChangeLog:\n\n\t* config/arm/arm-cpus.in (star-mc1): New cpu.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Regenerate.\n\t* doc/invoke.texi: Update docs.", "tree": {"sha": "939894c3982ff9fe2fe2939129af9111b4f7de69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/939894c3982ff9fe2fe2939129af9111b4f7de69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75df1594ae56dcdcc471f138e088cfa81c48082b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75df1594ae56dcdcc471f138e088cfa81c48082b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75df1594ae56dcdcc471f138e088cfa81c48082b"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "5a63bc548e54dbfdce5d1df425bd615d81895d80", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "patch": "@@ -1638,6 +1638,16 @@ begin cpu cortex-m55\n  vendor 41\n end cpu cortex-m55\n \n+begin cpu star-mc1\n+ cname starmc1\n+ tune flags LDSCHED\n+ architecture armv8-m.main+dsp+fp\n+ option nofp remove ALL_FP\n+ option nodsp remove armv7em\n+ isa quirk_no_asmcpu quirk_vlldm\n+ costs v7m\n+end cpu star-mc1\n+\n # V8 R-profile implementations.\n begin cpu cortex-r52\n  cname cortexr52"}, {"sha": "e6461abcc57cd485025f3e18535267c454662cbe", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "patch": "@@ -282,6 +282,9 @@ Enum(processor_type) String(cortex-m35p) Value( TARGET_CPU_cortexm35p)\n EnumValue\n Enum(processor_type) String(cortex-m55) Value( TARGET_CPU_cortexm55)\n \n+EnumValue\n+Enum(processor_type) String(star-mc1) Value( TARGET_CPU_starmc1)\n+\n EnumValue\n Enum(processor_type) String(cortex-r52) Value( TARGET_CPU_cortexr52)\n "}, {"sha": "abc290edd094179379f3856a3f8f64781e0c33f2", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "patch": "@@ -49,6 +49,6 @@\n \tcortexa710,cortexx1,neoversen1,\n \tcortexa75cortexa55,cortexa76cortexa55,neoversev1,\n \tneoversen2,cortexm23,cortexm33,\n-\tcortexm35p,cortexm55,cortexr52,\n-\tcortexr52plus\"\n+\tcortexm35p,cortexm55,starmc1,\n+\tcortexr52,cortexr52plus\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "ac0c06cd2b0b9c3d92fc17ce4fcb4bcb8a078751", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ef5cc6bbb60b0ccbc10fb76b697ae02f28af18c0", "patch": "@@ -21190,7 +21190,8 @@ Permissible names are: @samp{arm7tdmi}, @samp{arm7tdmi-s}, @samp{arm710t},\n @samp{cortex-m0plus.small-multiply}, @samp{exynos-m1}, @samp{marvell-pj4},\n @samp{neoverse-n1}, @samp{neoverse-n2}, @samp{neoverse-v1}, @samp{xscale},\n @samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312}, @samp{fa526}, @samp{fa626},\n-@samp{fa606te}, @samp{fa626te}, @samp{fmp626}, @samp{fa726te}, @samp{xgene1}.\n+@samp{fa606te}, @samp{fa626te}, @samp{fmp626}, @samp{fa726te}, @samp{star-mc1},\n+@samp{xgene1}.\n \n Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  Permissible names are:\n@@ -21596,8 +21597,9 @@ Development Tools Engineering Specification\", which can be found on\n Mitigate against a potential security issue with the @code{VLLDM} instruction\n in some M-profile devices when using CMSE (CVE-2021-365465).  This option is\n enabled by default when the option @option{-mcpu=} is used with\n-@code{cortex-m33}, @code{cortex-m35p} or @code{cortex-m55}.  The option\n-@option{-mno-fix-cmse-cve-2021-35465} can be used to disable the mitigation.\n+@code{cortex-m33}, @code{cortex-m35p}, @code{cortex-m55} or @code{star-mc1}.\n+The option @option{-mno-fix-cmse-cve-2021-35465} can be used to disable\n+the mitigation.\n \n @item -mstack-protector-guard=@var{guard}\n @itemx -mstack-protector-guard-offset=@var{offset}"}]}