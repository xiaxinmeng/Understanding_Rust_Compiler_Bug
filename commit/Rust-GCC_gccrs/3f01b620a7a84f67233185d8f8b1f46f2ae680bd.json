{"sha": "3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwMWI2MjBhN2E4NGY2NzIzMzE4NWQ4ZjhiMWY0NmYyYWU2ODBiZA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-03-21T22:33:39Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-03-21T22:33:39Z"}, "message": "PR c++/79548 - missing -Wunused-variable on a typedef'd variable in a function template\n\ngcc/c-family/ChangeLog:\n\n\tPR c++/79548\n\t* c-common.c (set_underlying_type): Mark type used only when\n\toriginal del is declared unused.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/79548\n\t* g++.dg/warn/Wunused-var-26.C: New test.\n\nFrom-SVN: r246335", "tree": {"sha": "b6e3dbc7ba092a9077d668b134400cb6a5ce690d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6e3dbc7ba092a9077d668b134400cb6a5ce690d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd250f0d4e02e7578fbaba2a77a46be3ca0dc47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd250f0d4e02e7578fbaba2a77a46be3ca0dc47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd250f0d4e02e7578fbaba2a77a46be3ca0dc47f"}], "stats": {"total": 165, "additions": 164, "deletions": 1}, "files": [{"sha": "4afb4b8af6ec6d391494d01e1da6495a0f99cc04", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "patch": "@@ -1,3 +1,9 @@\n+2017-03-21  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/79548\n+\t* c-common.c (set_underlying_type): Mark type used only when\n+\toriginal del is declared unused.\n+\n 2017-03-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR translation/79848"}, {"sha": "65ffd8cd7bdb3510f2d67809483828777456ca56", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "patch": "@@ -7476,7 +7476,12 @@ set_underlying_type (tree x)\n       tt = build_variant_type_copy (tt);\n       TYPE_STUB_DECL (tt) = TYPE_STUB_DECL (DECL_ORIGINAL_TYPE (x));\n       TYPE_NAME (tt) = x;\n-      TREE_USED (tt) = TREE_USED (x);\n+\n+      /* Mark the type as used only when its type decl is decorated\n+\t with attribute unused.  */\n+      if (lookup_attribute (\"unused\", DECL_ATTRIBUTES (x)))\n+\tTREE_USED (tt) = 1;\n+\n       TREE_TYPE (x) = tt;\n     }\n }"}, {"sha": "4dbc719777915ee3c400103e5294835aacc57822", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "patch": "@@ -1,3 +1,8 @@\n+2017-03-21  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/79548\n+\t* g++.dg/warn/Wunused-var-26.C: New test.\n+\n 2017-03-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/79908"}, {"sha": "b3e020b600781f42b0b1123bd7f4911bfd79852d", "filename": "gcc/testsuite/g++.dg/warn/Wunused-var-26.C", "status": "added", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-var-26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f01b620a7a84f67233185d8f8b1f46f2ae680bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-var-26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-var-26.C?ref=3f01b620a7a84f67233185d8f8b1f46f2ae680bd", "patch": "@@ -0,0 +1,147 @@\n+// PR c++/79548 - missing -Wunused-variable on a typedef'd variable\n+// in a function template\n+// { dg-do compile }\n+// { dg-options \"-Wunused\" }\n+\n+\n+#define UNUSED __attribute__ ((unused))\n+\n+template <class T>\n+void f_int ()\n+{\n+  T t;                        // { dg-warning \"unused variable\" }\n+\n+  typedef T U;\n+  U u;                        // { dg-warning \"unused variable\" }\n+}\n+\n+template void f_int<int>();\n+\n+\n+template <class T>\n+void f_intptr ()\n+{\n+  T *t = 0;                   // { dg-warning \"unused variable\" }\n+\n+  typedef T U;\n+  U *u = 0;                   // { dg-warning \"unused variable\" }\n+}\n+\n+template void f_intptr<int>();\n+\n+\n+template <class T>\n+void f_var_unused ()\n+{\n+  // The variable is marked unused.\n+  T t UNUSED;\n+\n+  typedef T U;\n+  U u UNUSED;\n+}\n+\n+template void f_var_unused<int>();\n+\n+\n+template <class T>\n+void f_var_type_unused ()\n+{\n+  // The variable's type is marked unused.\n+  T* UNUSED t = new T;   // { dg-bogus \"unused variable\" \"bug 79585\" { xfail *-*-* } }\n+\n+  typedef T U;\n+  U* UNUSED u = new U;   // { dg-bogus \"unused variable\" \"bug 79585\" { xfail *-*-* } }\n+\n+  typedef T UNUSED U;\n+  U v = U ();   // { dg-bogus \"unused variable\" \"bug 79585\" }\n+}\n+\n+template void f_var_type_unused<int>();\n+\n+\n+struct A { int i; };\n+\n+template <class T>\n+void f_A ()\n+{\n+  T t;                        // { dg-warning \"unused variable\" }\n+\n+  typedef T U;\n+  U u;                        // { dg-warning \"unused variable\" }\n+}\n+\n+template void f_A<A>();\n+\n+\n+template <class T>\n+void f_A_unused ()\n+{\n+  T t UNUSED;\n+\n+  typedef T U;\n+  U u UNUSED;\n+}\n+\n+template void f_A_unused<A>();\n+\n+\n+struct B { B (); };\n+\n+template <class T>\n+void f_B ()\n+{\n+  T t;\n+\n+  typedef T U;\n+  U u;\n+}\n+\n+template void f_B<B>();\n+\n+\n+struct NonTrivialDtor { ~NonTrivialDtor (); };\n+\n+template <class T>\n+void f_with_NonTrivialDtor ()\n+{\n+  // Expect no warnings when instantiated on a type with a non-trivial\n+  // destructor.\n+  T t;\n+\n+  typedef T U;\n+  U u;\n+}\n+\n+template void f_with_NonTrivialDtor<NonTrivialDtor>();\n+\n+\n+struct D { NonTrivialDtor b; };\n+\n+template <class T>\n+void f_D ()\n+{\n+  // Same as f_with_NonTrivialDtor but with a class that has a member\n+  // with a non-trivial dtor.\n+  T t;\n+\n+  typedef T U;\n+  U u;\n+}\n+\n+template void f_D<D>();\n+\n+\n+struct UNUSED DeclaredUnused { };\n+\n+template <class T>\n+void f_with_unused ()\n+{\n+  // Expect no warnings when instantiatiated on a type declared\n+  // with attribute unused.\n+  T t;\n+\n+  typedef T U;\n+  U u;\n+}\n+\n+template void f_with_unused<DeclaredUnused>();"}]}