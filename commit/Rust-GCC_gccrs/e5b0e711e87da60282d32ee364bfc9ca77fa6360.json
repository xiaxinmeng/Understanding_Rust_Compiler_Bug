{"sha": "e5b0e711e87da60282d32ee364bfc9ca77fa6360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTViMGU3MTFlODdkYTYwMjgyZDMyZWUzNjRiZmM5Y2E3N2ZhNjM2MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-06-25T03:45:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-25T03:45:13Z"}, "message": "jump.c (next_nondeleted_insn): Remove.\n\n\t* jump.c (next_nondeleted_insn): Remove.\n\t* rtl.h: Remove the prototype for next_nondeleted_insn.\n\nFrom-SVN: r68453", "tree": {"sha": "c2b021a4a8de95063140b929ef51eba3db07fa55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2b021a4a8de95063140b929ef51eba3db07fa55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5b0e711e87da60282d32ee364bfc9ca77fa6360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b0e711e87da60282d32ee364bfc9ca77fa6360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b0e711e87da60282d32ee364bfc9ca77fa6360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b0e711e87da60282d32ee364bfc9ca77fa6360/comments", "author": null, "committer": null, "parents": [{"sha": "b9ba01a11f30733eb45554f8820d4084724d308c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ba01a11f30733eb45554f8820d4084724d308c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ba01a11f30733eb45554f8820d4084724d308c"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "f30e83542c92e5f9ccec36b6e4e4f1b45f887c32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b0e711e87da60282d32ee364bfc9ca77fa6360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b0e711e87da60282d32ee364bfc9ca77fa6360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5b0e711e87da60282d32ee364bfc9ca77fa6360", "patch": "@@ -1,3 +1,8 @@\n+2003-06-24  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* jump.c (next_nondeleted_insn): Remove.\n+\t* rtl.h: Remove the prototype for next_nondeleted_insn.\n+\n 2003-06-24  Roger Sayle  <roger@eyesopen.com>\n \n \tPR optimization/11311"}, {"sha": "630524bb356e2085749380627580e9f0b28b067c", "filename": "gcc/jump.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b0e711e87da60282d32ee364bfc9ca77fa6360/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b0e711e87da60282d32ee364bfc9ca77fa6360/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=e5b0e711e87da60282d32ee364bfc9ca77fa6360", "patch": "@@ -1834,18 +1834,6 @@ delete_related_insns (insn)\n \n   return next;\n }\n-\n-/* Advance from INSN till reaching something not deleted\n-   then return that.  May return INSN itself.  */\n-\n-rtx\n-next_nondeleted_insn (insn)\n-     rtx insn;\n-{\n-  while (INSN_DELETED_P (insn))\n-    insn = NEXT_INSN (insn);\n-  return insn;\n-}\n \f\n /* Delete a range of insns from FROM to TO, inclusive.\n    This is for the sake of peephole optimization, so assume"}, {"sha": "98be2d0565d145c9c1e8972bb813d702df8946f0", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b0e711e87da60282d32ee364bfc9ca77fa6360/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b0e711e87da60282d32ee364bfc9ca77fa6360/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e5b0e711e87da60282d32ee364bfc9ca77fa6360", "patch": "@@ -1567,7 +1567,6 @@ extern const char * insn_file\t\tPARAMS ((rtx));\n extern int prologue_locator, epilogue_locator;\n \n /* In jump.c */\n-extern rtx next_nondeleted_insn\t\tPARAMS ((rtx));\n extern enum rtx_code reverse_condition\tPARAMS ((enum rtx_code));\n extern enum rtx_code reverse_condition_maybe_unordered PARAMS ((enum rtx_code));\n extern enum rtx_code swap_condition\tPARAMS ((enum rtx_code));"}]}