{"sha": "45cb789e6adf5d571c574a94b77413c845fed106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVjYjc4OWU2YWRmNWQ1NzFjNTc0YTk0Yjc3NDEzYzg0NWZlZDEwNg==", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-06-20T07:21:39Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-07-30T16:55:22Z"}, "message": "mips: add MSA vec_cmp and vec_cmpu expand pattern [PR101132]\n\nMiddle-end started to emit vec_cmp and vec_cmpu since GCC 11, causing\nICE on MIPS with MSA enabled.  Add the pattern to prevent it.\n\ngcc/\n\n\tPR target/101132\n\t* config/mips/mips-protos.h (mips_expand_vec_cmp_expr): Declare.\n\t* config/mips/mips.c (mips_expand_vec_cmp_expr): New function.\n\t* config/mips/mips-msa.md (vec_cmp<MSA:mode><mode_i>): New\n\t  expander.\n\t  (vec_cmpu<IMSA:mode><mode_i>): New expander.\n\ngcc/testsuite/\n\n\tPR target/101132\n\t* gcc.target/mips/pr101132.c: New test.", "tree": {"sha": "dbda3d3f9db46e7f032e53aec9f310f2e5983664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbda3d3f9db46e7f032e53aec9f310f2e5983664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45cb789e6adf5d571c574a94b77413c845fed106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45cb789e6adf5d571c574a94b77413c845fed106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45cb789e6adf5d571c574a94b77413c845fed106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45cb789e6adf5d571c574a94b77413c845fed106/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cd005a255f15c1b4b3eaae71c844ea2592c9dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd005a255f15c1b4b3eaae71c844ea2592c9dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd005a255f15c1b4b3eaae71c844ea2592c9dce"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "3a67f25be56601dae2d5d7a428ed799794166dde", "filename": "gcc/config/mips/mips-msa.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-msa.md?ref=45cb789e6adf5d571c574a94b77413c845fed106", "patch": "@@ -435,6 +435,28 @@\n   DONE;\n })\n \n+(define_expand \"vec_cmp<MSA:mode><mode_i>\"\n+  [(match_operand:<VIMODE> 0 \"register_operand\")\n+   (match_operator 1 \"\"\n+     [(match_operand:MSA 2 \"register_operand\")\n+      (match_operand:MSA 3 \"register_operand\")])]\n+  \"ISA_HAS_MSA\"\n+{\n+  mips_expand_vec_cmp_expr (operands);\n+  DONE;\n+})\n+\n+(define_expand \"vec_cmpu<IMSA:mode><mode_i>\"\n+  [(match_operand:<VIMODE> 0 \"register_operand\")\n+   (match_operator 1 \"\"\n+     [(match_operand:IMSA 2 \"register_operand\")\n+      (match_operand:IMSA 3 \"register_operand\")])]\n+  \"ISA_HAS_MSA\"\n+{\n+  mips_expand_vec_cmp_expr (operands);\n+  DONE;\n+})\n+\n (define_insn \"msa_insert_<msafmt_f>\"\n   [(set (match_operand:MSA 0 \"register_operand\" \"=f,f\")\n \t(vec_merge:MSA"}, {"sha": "a5e4151b9e6e5912cc159ace4351e2c9aa0ecf39", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=45cb789e6adf5d571c574a94b77413c845fed106", "patch": "@@ -385,6 +385,7 @@ extern mulsidi3_gen_fn mips_mulsidi3_gen_fn (enum rtx_code);\n \n extern void mips_register_frame_header_opt (void);\n extern void mips_expand_vec_cond_expr (machine_mode, machine_mode, rtx *);\n+extern void mips_expand_vec_cmp_expr (rtx *);\n \n /* Routines implemented in mips-d.c  */\n extern void mips_d_target_versions (void);"}, {"sha": "8f043399a8e685797aa150b6ae84e07f8dd8914f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=45cb789e6adf5d571c574a94b77413c845fed106", "patch": "@@ -22321,6 +22321,17 @@ mips_expand_msa_cmp (rtx dest, enum rtx_code cond, rtx op0, rtx op1)\n     }\n }\n \n+void\n+mips_expand_vec_cmp_expr (rtx *operands)\n+{\n+  rtx cond = operands[1];\n+  rtx op0 = operands[2];\n+  rtx op1 = operands[3];\n+  rtx res = operands[0];\n+\n+  mips_expand_msa_cmp (res, GET_CODE (cond), op0, op1);\n+}\n+\n /* Expand VEC_COND_EXPR, where:\n    MODE is mode of the result\n    VIMODE equivalent integer mode"}, {"sha": "d490b5d3a8286571af8528c8ca9cb68e48d187ec", "filename": "gcc/testsuite/gcc.target/mips/pr101132.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr101132.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45cb789e6adf5d571c574a94b77413c845fed106/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr101132.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr101132.c?ref=45cb789e6adf5d571c574a94b77413c845fed106", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/101132\n+   This was triggering an ICE in do_store_flag when compiled with -mmsa -O3. */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-mmsa\" } */\n+\n+int r_0, q_0;\n+void bar() {\n+  int i;\n+  for (i = 0; i < 96; i++) {\n+    r_0 = i << i ? 2 + i : -i;\n+    q_0 = r_0 > 2 ?: i;\n+  }\n+}"}]}