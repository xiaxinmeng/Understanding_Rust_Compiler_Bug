{"sha": "57910f3a9a81e9ad122a814255197f6f24c6af08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5MTBmM2E5YTgxZTlhZDEyMmE4MTQyNTUxOTdmNmYyNGM2YWYwOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-03-04T00:53:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-03-04T00:53:30Z"}, "message": "class.c (add_method): Always build an OVERLOAD for using-decls.\n\n\t* class.c (add_method): Always build an OVERLOAD for using-decls.\n\t* search.c (lookup_member): Handle getting an OVERLOAD for a\n\tsingle function.\n\nFrom-SVN: r184873", "tree": {"sha": "e0ec09d3761fb9852c3da23b28aefb03ba9de29a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0ec09d3761fb9852c3da23b28aefb03ba9de29a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57910f3a9a81e9ad122a814255197f6f24c6af08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57910f3a9a81e9ad122a814255197f6f24c6af08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57910f3a9a81e9ad122a814255197f6f24c6af08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57910f3a9a81e9ad122a814255197f6f24c6af08/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41fa723a78802569d26cf7b1043f45984bf9cc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41fa723a78802569d26cf7b1043f45984bf9cc9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41fa723a78802569d26cf7b1043f45984bf9cc9d"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "4674ba7b4395a37e93c9c0fe25a3de4b5be8a1e1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57910f3a9a81e9ad122a814255197f6f24c6af08/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57910f3a9a81e9ad122a814255197f6f24c6af08/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=57910f3a9a81e9ad122a814255197f6f24c6af08", "patch": "@@ -1,3 +1,9 @@\n+2012-03-03  Jason Merrill  <jason@redhat.com>\n+\n+\t* class.c (add_method): Always build an OVERLOAD for using-decls.\n+\t* search.c (lookup_member): Handle getting an OVERLOAD for a\n+\tsingle function.\n+\n 2012-03-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51989"}, {"sha": "6ed4cde6b51a4d8052435158a4e1151224e73944", "filename": "gcc/cp/class.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57910f3a9a81e9ad122a814255197f6f24c6af08/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57910f3a9a81e9ad122a814255197f6f24c6af08/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=57910f3a9a81e9ad122a814255197f6f24c6af08", "patch": "@@ -1117,9 +1117,13 @@ add_method (tree type, tree method, tree using_decl)\n     return false;\n \n   /* Add the new binding.  */\n-  overload = build_overload (method, current_fns);\n-  if (using_decl && TREE_CODE (overload) == OVERLOAD)\n-    OVL_USED (overload) = true;\n+  if (using_decl)\n+    {\n+      overload = ovl_cons (method, current_fns);\n+      OVL_USED (overload) = true;\n+    }\n+  else\n+    overload = build_overload (method, current_fns);\n \n   if (conv_p)\n     TYPE_HAS_CONVERSION (type) = 1;"}, {"sha": "a1f8a3db173a7dde16d71b8923dbf37415e754e3", "filename": "gcc/cp/search.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57910f3a9a81e9ad122a814255197f6f24c6af08/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57910f3a9a81e9ad122a814255197f6f24c6af08/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=57910f3a9a81e9ad122a814255197f6f24c6af08", "patch": "@@ -1250,10 +1250,12 @@ lookup_member (tree xbasetype, tree name, int protect, bool want_type,\n     only the first call to \"f\" is valid.  However, if the function is\n     static, we can check.  */\n   if (rval && protect \n-      && !really_overloaded_fn (rval)\n-      && !(TREE_CODE (rval) == FUNCTION_DECL\n-\t   && DECL_NONSTATIC_MEMBER_FUNCTION_P (rval)))\n-    perform_or_defer_access_check (basetype_path, rval, rval);\n+      && !really_overloaded_fn (rval))\n+    {\n+      tree decl = is_overloaded_fn (rval) ? get_first_fn (rval) : rval;\n+      if (!DECL_NONSTATIC_MEMBER_FUNCTION_P (decl))\n+\tperform_or_defer_access_check (basetype_path, decl, decl);\n+    }\n \n   if (errstr && protect)\n     {"}]}