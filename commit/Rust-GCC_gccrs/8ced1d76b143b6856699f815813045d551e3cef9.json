{"sha": "8ced1d76b143b6856699f815813045d551e3cef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlZDFkNzZiMTQzYjY4NTY2OTlmODE1ODEzMDQ1ZDU1MWUzY2VmOQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2019-11-04T21:41:12Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2019-11-04T21:41:12Z"}, "message": "Use the value_range_base constructors in value_range_base::invert to\nmake sure we build canonically correct ranges.\n\nFrom-SVN: r277794", "tree": {"sha": "d70528682f093bb308726e1a647bda8b36090b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d70528682f093bb308726e1a647bda8b36090b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ced1d76b143b6856699f815813045d551e3cef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ced1d76b143b6856699f815813045d551e3cef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ced1d76b143b6856699f815813045d551e3cef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ced1d76b143b6856699f815813045d551e3cef9/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1b680597178df866e6de80444695fab82b90492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b680597178df866e6de80444695fab82b90492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b680597178df866e6de80444695fab82b90492"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "6bdd5ffddbd7b2c01d0cb13c066c2f0b06d49fb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ced1d76b143b6856699f815813045d551e3cef9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ced1d76b143b6856699f815813045d551e3cef9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ced1d76b143b6856699f815813045d551e3cef9", "patch": "@@ -1,3 +1,8 @@\n+2019-11-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (value_range_base::invert): Use constructors to build\n+\trange.\n+\n 2019-11-04  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (range_int_cst_singleton_p): Remove."}, {"sha": "085308e519feb02762caf444126eecdaec4b8df2", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ced1d76b143b6856699f815813045d551e3cef9/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ced1d76b143b6856699f815813045d551e3cef9/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=8ced1d76b143b6856699f815813045d551e3cef9", "patch": "@@ -6286,10 +6286,12 @@ value_range_base::contains_p (tree cst) const\n void\n value_range_base::invert ()\n {\n+  /* We can't just invert VR_RANGE and VR_ANTI_RANGE because we may\n+     create non-canonical ranges.  Use the constructors instead.  */\n   if (m_kind == VR_RANGE)\n-    m_kind = VR_ANTI_RANGE;\n+    *this = value_range_base (VR_ANTI_RANGE, m_min, m_max);\n   else if (m_kind == VR_ANTI_RANGE)\n-    m_kind = VR_RANGE;\n+    *this = value_range_base (VR_RANGE, m_min, m_max);\n   else\n     gcc_unreachable ();\n }"}]}