{"sha": "124580b00f83a6b84bdedee3486e03ce181dd179", "node_id": "C_kwDOANBUbNoAKDEyNDU4MGIwMGY4M2E2Yjg0YmRlZGVlMzQ4NmUwM2NlMTgxZGQxNzk", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2022-06-23T20:45:15Z"}, "committer": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2022-06-24T14:15:51Z"}, "message": "[PATCH,RS6000 1/5] Clean-up MASK_<xxxx> and RS6000_BTM_<xxxx> definitions.\n\nThis patch removes the defines that are no longer used, and\nupdates the comment for the set of MASK_<xxxx> defines.\n\nThis patch removes the defines for\nMASK_REGNAMES, MASK_PROTOTYPE, RS6000_BTM_ALWAYS, RS6000_BTM_COMMON.\n\ngcc/\n\t* config/rs6000/rs6000.h (RS6000_BTM_COMMON, RS6000_BTM_ALWAYS,\n\tMASK_REGNAMES, OPTION_MASK_REGNAMES, MASK_PROTOTYPE,\n\tOPTION_MASK_PROTOTYPE, MASK_UPDATE, OPTION_MASK_UPDATE): Remove.", "tree": {"sha": "434ca256f9dce5839dc6758046bf49e7c516c2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/434ca256f9dce5839dc6758046bf49e7c516c2e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/124580b00f83a6b84bdedee3486e03ce181dd179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124580b00f83a6b84bdedee3486e03ce181dd179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124580b00f83a6b84bdedee3486e03ce181dd179", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124580b00f83a6b84bdedee3486e03ce181dd179/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36a1c964f99758de1f3b169628965d3c3af812b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36a1c964f99758de1f3b169628965d3c3af812b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36a1c964f99758de1f3b169628965d3c3af812b"}], "stats": {"total": 37, "additions": 3, "deletions": 34}, "files": [{"sha": "2ff17a16e43cfa74da3f926e78b4bee4002949a3", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 34, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124580b00f83a6b84bdedee3486e03ce181dd179/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124580b00f83a6b84bdedee3486e03ce181dd179/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=124580b00f83a6b84bdedee3486e03ce181dd179", "patch": "@@ -505,8 +505,9 @@ extern int rs6000_vector_align[];\n \t\t\t && (TARGET_P9_MINMAX || !flag_trapping_math))\n \n /* In switching from using target_flags to using rs6000_isa_flags, the options\n-   machinery creates OPTION_MASK_<xxx> instead of MASK_<xxx>.  For now map\n-   OPTION_MASK_<xxx> back into MASK_<xxx>.  */\n+   machinery creates OPTION_MASK_<xxx> instead of MASK_<xxx>.  The MASK_<xxxx>\n+   options that have not yet been replaced by their OPTION_MASK_<xxx>\n+   equivalents are defined here.  */\n #define MASK_ALTIVEC\t\t\tOPTION_MASK_ALTIVEC\n #define MASK_CMPB\t\t\tOPTION_MASK_CMPB\n #define MASK_CRYPTO\t\t\tOPTION_MASK_CRYPTO\n@@ -536,7 +537,6 @@ extern int rs6000_vector_align[];\n #define MASK_RECIP_PRECISION\t\tOPTION_MASK_RECIP_PRECISION\n #define MASK_SOFT_FLOAT\t\t\tOPTION_MASK_SOFT_FLOAT\n #define MASK_STRICT_ALIGN\t\tOPTION_MASK_STRICT_ALIGN\n-#define MASK_UPDATE\t\t\tOPTION_MASK_UPDATE\n #define MASK_VSX\t\t\tOPTION_MASK_VSX\n #define MASK_POWER10\t\t\tOPTION_MASK_POWER10\n #define MASK_P10_FUSION\t\t\tOPTION_MASK_P10_FUSION\n@@ -553,14 +553,6 @@ extern int rs6000_vector_align[];\n #define MASK_LITTLE_ENDIAN\t\tOPTION_MASK_LITTLE_ENDIAN\n #endif\n \n-#ifdef TARGET_REGNAMES\n-#define MASK_REGNAMES\t\t\tOPTION_MASK_REGNAMES\n-#endif\n-\n-#ifdef TARGET_PROTOTYPE\n-#define MASK_PROTOTYPE\t\t\tOPTION_MASK_PROTOTYPE\n-#endif\n-\n #ifdef TARGET_MODULO\n #define RS6000_BTM_MODULO\t\tOPTION_MASK_MODULO\n #endif\n@@ -2252,7 +2244,6 @@ extern int frame_pointer_needed;\n /* Builtin targets.  For now, we reuse the masks for those options that are in\n    target flags, and pick a random bit for ldbl128, which isn't in\n    target_flags.  */\n-#define RS6000_BTM_ALWAYS\t0\t\t/* Always enabled.  */\n #define RS6000_BTM_ALTIVEC\tMASK_ALTIVEC\t/* VMX/altivec vectors.  */\n #define RS6000_BTM_CMPB\t\tMASK_CMPB\t/* ISA 2.05: compare bytes.  */\n #define RS6000_BTM_VSX\t\tMASK_VSX\t/* VSX (vector/scalar).  */\n@@ -2277,28 +2268,6 @@ extern int frame_pointer_needed;\n #define RS6000_BTM_MMA\t\tMASK_MMA\t/* ISA 3.1 MMA.  */\n #define RS6000_BTM_P10\t\tMASK_POWER10\n \n-#define RS6000_BTM_COMMON\t(RS6000_BTM_ALTIVEC\t\t\t\\\n-\t\t\t\t | RS6000_BTM_VSX\t\t\t\\\n-\t\t\t\t | RS6000_BTM_P8_VECTOR\t\t\t\\\n-\t\t\t\t | RS6000_BTM_P9_VECTOR\t\t\t\\\n-\t\t\t\t | RS6000_BTM_P9_MISC\t\t\t\\\n-\t\t\t\t | RS6000_BTM_MODULO                    \\\n-\t\t\t\t | RS6000_BTM_CRYPTO\t\t\t\\\n-\t\t\t\t | RS6000_BTM_FRE\t\t\t\\\n-\t\t\t\t | RS6000_BTM_FRES\t\t\t\\\n-\t\t\t\t | RS6000_BTM_FRSQRTE\t\t\t\\\n-\t\t\t\t | RS6000_BTM_FRSQRTES\t\t\t\\\n-\t\t\t\t | RS6000_BTM_HTM\t\t\t\\\n-\t\t\t\t | RS6000_BTM_POPCNTD\t\t\t\\\n-\t\t\t\t | RS6000_BTM_CELL\t\t\t\\\n-\t\t\t\t | RS6000_BTM_DFP\t\t\t\\\n-\t\t\t\t | RS6000_BTM_HARD_FLOAT\t\t\\\n-\t\t\t\t | RS6000_BTM_LDBL128\t\t\t\\\n-\t\t\t\t | RS6000_BTM_POWERPC64\t\t\t\\\n-\t\t\t\t | RS6000_BTM_FLOAT128\t\t\t\\\n-\t\t\t\t | RS6000_BTM_FLOAT128_HW\t\t\\\n-\t\t\t\t | RS6000_BTM_MMA\t\t\t\\\n-\t\t\t\t | RS6000_BTM_P10)\n \n enum rs6000_builtin_type_index\n {"}]}