{"sha": "3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExNWMyY2Y2OGIyZTc2YTRjMGQwODM2MWVhYmEzNWVmYTZiOTlmMw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-11-09T12:31:32Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-11-09T12:31:32Z"}, "message": "re PR middle-end/54385 (ICE in pre_and_rev_post_order_compute, at cfganal.c:873)\n\n\tPR middle-end/54385\n\t* postreload.c (reload_cse_simplify): Return a bool indicating\n\twhether the CFG was changed.\n\t(reload_cse_regs_1): Traverse the CFG instead of the insns chain.\n\tCleanup the CFG if edges may have been removed.\n\t(reload_cse_regs): Update.\n\nFrom-SVN: r193359", "tree": {"sha": "48bcf1b0a40997379c1851b92a77202b6d2bac3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48bcf1b0a40997379c1851b92a77202b6d2bac3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3/comments", "author": null, "committer": null, "parents": [{"sha": "50919d13a394428f3c1394863c5e13e23e3a6fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50919d13a394428f3c1394863c5e13e23e3a6fb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50919d13a394428f3c1394863c5e13e23e3a6fb0"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "01aa551ce2bb17a862d5adb3c942ebd63012f829", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3", "patch": "@@ -1,7 +1,15 @@\n+2012-11-09  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR middle-end/54385\n+\t* postreload.c (reload_cse_simplify): Return a bool indicating\n+\twhether the CFG was changed.\n+\t(reload_cse_regs_1): Traverse the CFG instead of the insns chain.\n+\tCleanup the CFG if edges may have been removed.\n+\t(reload_cse_regs): Update.\n+\n 2012-11-09  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/54472\n-\n \t* sel-sched-ir.c (has_dependence_note_reg_set): Handle implicit sets.\n \t(has_dependence_note_reg_clobber,\n \thas_dependence_note_reg_use): Likewise. "}, {"sha": "cafcf0f659f6516b7e2237d73df2a53fca624552", "filename": "gcc/postreload.c", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=3a15c2cf68b2e76a4c0d08361eaba35efa6b99f3", "patch": "@@ -48,8 +48,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbgcnt.h\"\n \n static int reload_cse_noop_set_p (rtx);\n-static void reload_cse_simplify (rtx, rtx);\n-static void reload_cse_regs_1 (rtx);\n+static bool reload_cse_simplify (rtx, rtx);\n+static void reload_cse_regs_1 (void);\n static int reload_cse_simplify_set (rtx, rtx);\n static int reload_cse_simplify_operands (rtx, rtx);\n \n@@ -67,14 +67,14 @@ static void\n reload_cse_regs (rtx first ATTRIBUTE_UNUSED)\n {\n   bool moves_converted;\n-  reload_cse_regs_1 (first);\n+  reload_cse_regs_1 ();\n   reload_combine ();\n   moves_converted = reload_cse_move2add (first);\n   if (flag_expensive_optimizations)\n     {\n       if (moves_converted)\n \treload_combine ();\n-      reload_cse_regs_1 (first);\n+      reload_cse_regs_1 ();\n     }\n }\n \n@@ -88,11 +88,13 @@ reload_cse_noop_set_p (rtx set)\n   return rtx_equal_for_cselib_p (SET_DEST (set), SET_SRC (set));\n }\n \n-/* Try to simplify INSN.  */\n-static void\n+/* Try to simplify INSN.  Return true if the CFG may have changed.  */\n+static bool\n reload_cse_simplify (rtx insn, rtx testreg)\n {\n   rtx body = PATTERN (insn);\n+  basic_block insn_bb = BLOCK_FOR_INSN (insn);\n+  unsigned insn_bb_succs = EDGE_COUNT (insn_bb->succs);\n \n   if (GET_CODE (body) == SET)\n     {\n@@ -113,7 +115,8 @@ reload_cse_simplify (rtx insn, rtx testreg)\n \t    value = 0;\n \t  if (check_for_inc_dec (insn))\n \t    delete_insn_and_edges (insn);\n-\t  return;\n+\t  /* We're done with this insn.  */\n+\t  goto done;\n \t}\n \n       if (count > 0)\n@@ -166,7 +169,7 @@ reload_cse_simplify (rtx insn, rtx testreg)\n \t  if (check_for_inc_dec (insn))\n \t    delete_insn_and_edges (insn);\n \t  /* We're done with this insn.  */\n-\t  return;\n+\t  goto done;\n \t}\n \n       /* It's not a no-op, but we can try to simplify it.  */\n@@ -179,6 +182,9 @@ reload_cse_simplify (rtx insn, rtx testreg)\n       else\n \treload_cse_simplify_operands (insn, testreg);\n     }\n+\n+done:\n+  return (EDGE_COUNT (insn_bb->succs) != insn_bb_succs);\n }\n \n /* Do a very simple CSE pass over the hard registers.\n@@ -199,25 +205,30 @@ reload_cse_simplify (rtx insn, rtx testreg)\n    if possible, much like an optional reload would.  */\n \n static void\n-reload_cse_regs_1 (rtx first)\n+reload_cse_regs_1 (void)\n {\n+  bool cfg_changed = false;\n+  basic_block bb;\n   rtx insn;\n   rtx testreg = gen_rtx_REG (VOIDmode, -1);\n \n   cselib_init (CSELIB_RECORD_MEMORY);\n   init_alias_analysis ();\n \n-  for (insn = first; insn; insn = NEXT_INSN (insn))\n-    {\n-      if (INSN_P (insn))\n-\treload_cse_simplify (insn, testreg);\n+  FOR_EACH_BB (bb)\n+    FOR_BB_INSNS (bb, insn)\n+      {\n+\tif (INSN_P (insn))\n+\t  cfg_changed |= reload_cse_simplify (insn, testreg);\n \n-      cselib_process_insn (insn);\n-    }\n+\tcselib_process_insn (insn);\n+      }\n \n   /* Clean up.  */\n   end_alias_analysis ();\n   cselib_finish ();\n+  if (cfg_changed)\n+    cleanup_cfg (0);\n }\n \n /* Try to simplify a single SET instruction.  SET is the set pattern."}]}