{"sha": "7bd2a8a7ef778f7425121974cea4204a11c24388", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JkMmE4YTdlZjc3OGY3NDI1MTIxOTc0Y2VhNDIwNGExMWMyNDM4OA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-08-28T20:40:59Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-08-28T20:40:59Z"}, "message": "graphite-interchange.c (pbb_interchange_profitable_p): Adjust the strides by multiplying by PDR_NB_REFS.\n\n2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-interchange.c (pbb_interchange_profitable_p): Adjust\n\tthe strides by multiplying by PDR_NB_REFS.\n\t* graphite-poly.c (can_collapse_pdr): New.\n\t(pdr_find_duplicate): New.\n\t(new_poly_dr): Call pdr_find_duplicate.  Collapse duplicate PDRs.\n\tInitialize PDR_NB_REFS.\n\t* graphite-poly.h (struct poly_dr): Add field nb_refs.\n\t(PDR_NB_REFS): New.\n\t(new_poly_dr): Number of subscripts is a graphite_dim_t.\n\nFrom-SVN: r151191", "tree": {"sha": "f4bc77546493208666cd3b4afa7a90ecb6195f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4bc77546493208666cd3b4afa7a90ecb6195f6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bd2a8a7ef778f7425121974cea4204a11c24388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd2a8a7ef778f7425121974cea4204a11c24388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd2a8a7ef778f7425121974cea4204a11c24388", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd2a8a7ef778f7425121974cea4204a11c24388/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93b2db87bba9552a502db78e9e9bcd67b5687c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b2db87bba9552a502db78e9e9bcd67b5687c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93b2db87bba9552a502db78e9e9bcd67b5687c98"}], "stats": {"total": 105, "additions": 101, "deletions": 4}, "files": [{"sha": "d8df593c912f8539df8dcf9c360bee3190318279", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bd2a8a7ef778f7425121974cea4204a11c24388", "patch": "@@ -1,3 +1,15 @@\n+2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-interchange.c (pbb_interchange_profitable_p): Adjust\n+\tthe strides by multiplying by PDR_NB_REFS.\n+\t* graphite-poly.c (can_collapse_pdr): New.\n+\t(pdr_find_duplicate): New.\n+\t(new_poly_dr): Call pdr_find_duplicate.  Collapse duplicate PDRs.\n+\tInitialize PDR_NB_REFS.\n+\t* graphite-poly.h (struct poly_dr): Add field nb_refs.\n+\t(PDR_NB_REFS): New.\n+\t(new_poly_dr): Number of subscripts is a graphite_dim_t.\n+\n 2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/40965"}, {"sha": "c7b8fcf675be9a8dbba5e6b5b8b96755b903bc8d", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=7bd2a8a7ef778f7425121974cea4204a11c24388", "patch": "@@ -1,3 +1,22 @@\n+2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-interchange.c (pbb_interchange_profitable_p): Adjust\n+\tthe strides by multiplying by PDR_NB_REFS.\n+\t* graphite-poly.c (can_collapse_pdr): New.\n+\t(pdr_find_duplicate): New.\n+\t(new_poly_dr): Call pdr_find_duplicate.  Collapse duplicate PDRs.\n+\tInitialize PDR_NB_REFS.\n+\t* graphite-poly.h (struct poly_dr): Add field nb_refs.\n+\t(PDR_NB_REFS): New.\n+\t(new_poly_dr): Number of subscripts is a graphite_dim_t.\n+\n+2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tRevert one of the previous commits:\n+\t* graphite-dependences.c (graphite_legal_transform_bb): Avoid\n+\tthe computation of symmetric data dependence relations.\n+\t(dependency_between_pbbs_p): Same.\n+\n 2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/40965"}, {"sha": "0a751d6336e98ffe9d726dee0468037ce2b77c14", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=7bd2a8a7ef778f7425121974cea4204a11c24388", "patch": "@@ -244,7 +244,7 @@ pbb_interchange_profitable_p (graphite_dim_t depth1, graphite_dim_t depth2,\n {\n   int i;\n   poly_dr_p pdr;\n-  Value d1, d2, s;\n+  Value d1, d2, s, n;\n   bool res;\n \n   gcc_assert (depth1 < depth2);\n@@ -254,13 +254,18 @@ pbb_interchange_profitable_p (graphite_dim_t depth1, graphite_dim_t depth2,\n   value_init (d2);\n   value_set_si (d2, 0);\n   value_init (s);\n+  value_init (n);\n \n   for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n     {\n+      value_set_si (n, PDR_NB_REFS (pdr));\n+\n       memory_stride_in_loop (s, depth1, pdr);\n+      value_multiply (s, s, n);\n       value_addto (d1, d1, s);\n \n       memory_stride_in_loop (s, depth2, pdr);\n+      value_multiply (s, s, n);\n       value_addto (d2, d2, s);\n     }\n \n@@ -269,6 +274,7 @@ pbb_interchange_profitable_p (graphite_dim_t depth1, graphite_dim_t depth2,\n   value_clear (d1);\n   value_clear (d2);\n   value_clear (s);\n+  value_clear (n);\n \n   return res;\n }"}, {"sha": "3e005d41da7e8926beb5e3b6cdbfce8dca235a7c", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 58, "deletions": 2, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=7bd2a8a7ef778f7425121974cea4204a11c24388", "patch": "@@ -261,19 +261,75 @@ apply_poly_transforms (scop_p scop)\n   return transform_done;\n }\n \n+/* Returns true when PDR in the same PBB and is a duplicate of the\n+   data reference described by ACCESSES, TYPE, and NB_SUBSCRIPTS.  */\n+\n+static inline bool\n+can_collapse_pdr (poly_dr_p pdr, poly_bb_p pbb,\n+\t\t  ppl_Pointset_Powerset_C_Polyhedron_t accesses,\n+\t\t  enum poly_dr_type type, graphite_dim_t nb_subscripts)\n+{\n+  bool res = false;\n+  ppl_Pointset_Powerset_C_Polyhedron_t af, diff;\n+\n+  if (PDR_PBB (pdr) != pbb\n+      || PDR_NB_SUBSCRIPTS (pdr) != nb_subscripts\n+      || PDR_TYPE (pdr) != type)\n+    return false;\n+\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n+    (&diff, accesses);\n+  af = PDR_ACCESSES (pdr);\n+  ppl_Pointset_Powerset_C_Polyhedron_difference_assign (diff, af);\n+\n+  if (ppl_Pointset_Powerset_C_Polyhedron_is_empty (diff))\n+    res = true;\n+\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (diff);\n+  return res;\n+}\n+\n+/* Returns a duplicate of the data reference described by ACCESSES,\n+   TYPE, and NB_SUBSCRIPTS in the vector PBB_DRS (PBB).  If there is\n+   no duplicate, returns NULL.  */\n+\n+static inline poly_dr_p\n+pdr_find_duplicate (poly_bb_p pbb,\n+\t\t    ppl_Pointset_Powerset_C_Polyhedron_t accesses,\n+\t\t    enum poly_dr_type type, graphite_dim_t nb_subscripts)\n+{\n+  int i;\n+  poly_dr_p pdr;\n+\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n+    if (can_collapse_pdr (pdr, pbb, accesses, type, nb_subscripts))\n+      return pdr;\n+\n+  return NULL;\n+}\n+\n /* Create a new polyhedral data reference and add it to PBB.  It is\n    defined by its ACCESSES, its TYPE, and the number of subscripts\n    NB_SUBSCRIPTS.  */\n \n void\n new_poly_dr (poly_bb_p pbb,\n \t     ppl_Pointset_Powerset_C_Polyhedron_t accesses,\n-\t     enum poly_dr_type type, void *cdr, int nb_subscripts)\n+\t     enum poly_dr_type type, void *cdr, graphite_dim_t nb_subscripts)\n {\n-  poly_dr_p pdr = XNEW (struct poly_dr);\n   static int id = 0;\n+  poly_dr_p pdr;\n+  poly_dr_p same = pdr_find_duplicate (pbb, accesses, type, nb_subscripts);\n+\n+  if (same)\n+    {\n+      PDR_NB_REFS (same) += 1;\n+      return;\n+    }\n \n+  pdr = XNEW (struct poly_dr);\n   PDR_ID (pdr) = id++;\n+  PDR_NB_REFS (pdr) = 1;\n   PDR_PBB (pdr) = pbb;\n   PDR_ACCESSES (pdr) = accesses;\n   PDR_TYPE (pdr) = type;"}, {"sha": "8f7352a5efbab0266b0bf4684afa8dcc56b953f2", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd2a8a7ef778f7425121974cea4204a11c24388/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=7bd2a8a7ef778f7425121974cea4204a11c24388", "patch": "@@ -56,6 +56,9 @@ struct poly_dr\n   /* An identifier for this PDR.  */\n   int id;\n \n+  /* The number of data refs identical to this one in the PBB.  */\n+  int nb_refs;\n+\n   /* A pointer to compiler's data reference description.  */\n   void *compiler_dr;\n \n@@ -137,14 +140,15 @@ struct poly_dr\n };\n \n #define PDR_ID(PDR) (PDR->id)\n+#define PDR_NB_REFS(PDR) (PDR->nb_refs)\n #define PDR_CDR(PDR) (PDR->compiler_dr)\n #define PDR_PBB(PDR) (PDR->pbb)\n #define PDR_TYPE(PDR) (PDR->type)\n #define PDR_ACCESSES(PDR) (PDR->accesses)\n #define PDR_NB_SUBSCRIPTS(PDR) (PDR->nb_subscripts)\n \n void new_poly_dr (poly_bb_p, ppl_Pointset_Powerset_C_Polyhedron_t,\n-\t\t  enum poly_dr_type, void *, int);\n+\t\t  enum poly_dr_type, void *, graphite_dim_t);\n void free_poly_dr (poly_dr_p);\n void debug_pdr (poly_dr_p);\n void print_pdr (FILE *, poly_dr_p);"}]}