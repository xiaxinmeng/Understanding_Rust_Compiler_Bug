{"sha": "a401107daf176f8cbc5d05aade114d8b854054ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwMTEwN2RhZjE3NmY4Y2JjNWQwNWFhZGUxMTRkOGI4NTQwNTRiYQ==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-02-06T04:59:51Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-02-06T04:59:51Z"}, "message": "dwarf2out.c: Revise DWARF2 Abbreviation Glossary comments.\n\n2001-02-05  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* dwarf2out.c: Revise DWARF2 Abbreviation Glossary comments.\n\t(dwarf2out_frame_debug_expr): Revise introductory comments to add\n\ta high-level description.\n\nFrom-SVN: r39475", "tree": {"sha": "9457bdfe9922c58befb9f2af6cd977af0d10b01f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9457bdfe9922c58befb9f2af6cd977af0d10b01f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a401107daf176f8cbc5d05aade114d8b854054ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a401107daf176f8cbc5d05aade114d8b854054ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a401107daf176f8cbc5d05aade114d8b854054ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a401107daf176f8cbc5d05aade114d8b854054ba/comments", "author": null, "committer": null, "parents": [{"sha": "d6706c51030fe7191a6a4eebfd5cdc9a666feecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6706c51030fe7191a6a4eebfd5cdc9a666feecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6706c51030fe7191a6a4eebfd5cdc9a666feecb"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "5b11f055c415827c80968dcedd54d254bbc7ce83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a401107daf176f8cbc5d05aade114d8b854054ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a401107daf176f8cbc5d05aade114d8b854054ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a401107daf176f8cbc5d05aade114d8b854054ba", "patch": "@@ -1,3 +1,9 @@\n+2001-02-05  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* dwarf2out.c: Revise DWARF2 Abbreviation Glossary comments.\n+\t(dwarf2out_frame_debug_expr): Revise introductory comments to add\n+\ta high-level description.\n+\n 2001-02-05  Chandrakala Chavva  <cchavva@redhat.com>\n \n \t* final.c: Move the declaration of profile_label_no to ..."}, {"sha": "2ca66203a76428f49f7779c1859ec4d03663610a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a401107daf176f8cbc5d05aade114d8b854054ba/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a401107daf176f8cbc5d05aade114d8b854054ba/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a401107daf176f8cbc5d05aade114d8b854054ba", "patch": "@@ -57,12 +57,12 @@ Boston, MA 02111-1307, USA.  */\n \n /* DWARF2 Abbreviation Glossary:\n    CFA = Canonical Frame Address\n-\t   stack address identifying a stack call frame; its value is\n-\t   the value of the stack pointer just before the call to the\n-\t   current function\n-   CFI = Canonical Frame Instruction\n-           information describing entries in a stack call frame, e.g.,\n-\t   CIE and FDE\n+\t   an abstract idea representing a fixed stack address\n+\t   identifying a stack call frame.  The CFA register and\n+\t   offset, whose value may change, keeps track of its value at\n+\t   runtime.\n+   CFI = Call Frame Instruction\n+\t   an instruction for the DWARF2 abstract machine\n    CIE = Common Information Entry\n \t   information describing information common to one or more FDEs\n    DIE = Debugging Information Entry\n@@ -1283,10 +1283,34 @@ dw_cfa_location cfa_temp;\n    cfa, cfa_store, and cfa_temp.reg.  We describe these rules so\n    users need not read the source code.\n \n+  The High-Level Picture\n+\n+  Changes in the register we use to calculate the CFA: Currently we\n+  assume that if you copy the CFA register into another register, we\n+  should take the other one as the new CFA register; this seems to\n+  work pretty well.  If it's wrong for some target, it's simple\n+  enough not to set RTX_FRAME_RELATED_P on the insn in question.\n+\n+  Changes in the register we use for saving registers to the stack:\n+  This is usually SP, but not always.  Again, we deduce that if you\n+  copy SP into another register (and SP is not the CFA register),\n+  then the new register is the one we will be using for register\n+  saves.  This also seems to work.\n+\n+  Register saves: There's not much guesswork about this one; if\n+  RTX_FRAME_RELATED_P is set on an insn which modifies memory, it's a\n+  register save, and the register used to calculate the destination\n+  had better be the one we think we're using for this purpose.\n+\n+  Except: If the register being saved is the CFA register, and the\n+  offset is non-zero, we are saving the CFA, so we assume we have to\n+  use DW_CFA_def_cfa_expression.  If the offset is 0, we assume that\n+  the intent is to save the value of SP from the previous frame.\n+\n   Invariants / Summaries of Rules\n \n-  cfa\t       current register used to calculate the DWARF2 canonical\n-\t       frame address register and offset\n+  cfa\t       current rule for calculating the CFA.  It usually\n+\t       consists of a register and an offset.\n   cfa_store    register used by prologue code to save things to the stack\n \t       cfa_store.offset is the offset from the value of\n \t       cfa_store.reg to the actual CFA\n@@ -1307,9 +1331,9 @@ dw_cfa_location cfa_temp;\n   Rule 5:      Create a new register cfa_store used to save items to the\n \t       stack.\n \n-  Rules 10-13: Save a register to the stack.  Record the location in\n-\t       cfa_store.offset.  Define offset as the difference of\n-\t       the original location and cfa_store's location.\n+  Rules 10-13: Save a register to the stack.  Define offset as the\n+\t       difference of the original location and cfa_store's\n+\t       location.\n \n   The Rules\n "}]}