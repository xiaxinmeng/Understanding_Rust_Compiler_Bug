{"sha": "6083578b4123a41fc9001dbb27ea568c3d442ad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA4MzU3OGI0MTIzYTQxZmM5MDAxZGJiMjdlYTU2OGMzZDQ0MmFkNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-11T14:07:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-11T14:07:38Z"}, "message": "tree-pass.h (pass_rest_of_compilation, [...]): Remove.\n\n2012-05-11  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-pass.h (pass_rest_of_compilation,\n\tpass_all_optimizations, pass_postreload, pass_all_early_optimizations):\n\tRemove.\n\t* passes.c (pass_all_optimizations, pass_postreload,\n\tpass_all_early_optimizations): Make static.\n\t(pass_rest_of_compilation): Likewise.  Make it an RTL_PASS.\n\t* tree-phinodes.c (init_phinodes, fini_phinodes): Remove.\n\t* tree-ssa.c (init_tree_ssa): Do not call init_phinodes.\n\t(delete_tree_ssa): Do not call fini_phinodes.\n\t* tree-flow.h (init_phinodes, fini_phinodes): Remove.\n\nFrom-SVN: r187407", "tree": {"sha": "0eeb74722c6f05b398c7d62aad2871734e913808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eeb74722c6f05b398c7d62aad2871734e913808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6083578b4123a41fc9001dbb27ea568c3d442ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6083578b4123a41fc9001dbb27ea568c3d442ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6083578b4123a41fc9001dbb27ea568c3d442ad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6083578b4123a41fc9001dbb27ea568c3d442ad4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91077d4ef9381c153b939267cecd8e9c80bc7ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91077d4ef9381c153b939267cecd8e9c80bc7ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91077d4ef9381c153b939267cecd8e9c80bc7ec8"}], "stats": {"total": 60, "additions": 19, "deletions": 41}, "files": [{"sha": "a71420c70d3d875cf656e7ced525ca41db14fa21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6083578b4123a41fc9001dbb27ea568c3d442ad4", "patch": "@@ -1,3 +1,16 @@\n+2012-05-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-pass.h (pass_rest_of_compilation,\n+\tpass_all_optimizations, pass_postreload, pass_all_early_optimizations):\n+\tRemove.\n+\t* passes.c (pass_all_optimizations, pass_postreload,\n+\tpass_all_early_optimizations): Make static.\n+\t(pass_rest_of_compilation): Likewise.  Make it an RTL_PASS.\n+\t* tree-phinodes.c (init_phinodes, fini_phinodes): Remove.\n+\t* tree-ssa.c (init_tree_ssa): Do not call init_phinodes.\n+\t(delete_tree_ssa): Do not call fini_phinodes.\n+\t* tree-flow.h (init_phinodes, fini_phinodes): Remove.\n+\n 2012-05-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR 53063"}, {"sha": "b6fe18e4501a668d663dab360c703b34360a31b8", "filename": "gcc/passes.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6083578b4123a41fc9001dbb27ea568c3d442ad4", "patch": "@@ -334,7 +334,7 @@ gate_all_early_optimizations (void)\n \t  && !seen_error ());\n }\n \n-struct gimple_opt_pass pass_all_early_optimizations =\n+static struct gimple_opt_pass pass_all_early_optimizations =\n {\n  {\n   GIMPLE_PASS,\n@@ -364,7 +364,7 @@ gate_all_optimizations (void)\n \t  && (!seen_error () || gimple_in_ssa_p (cfun)));\n }\n \n-struct gimple_opt_pass pass_all_optimizations =\n+static struct gimple_opt_pass pass_all_optimizations =\n {\n  {\n   GIMPLE_PASS,\n@@ -391,10 +391,10 @@ gate_rest_of_compilation (void)\n   return !(rtl_dump_and_exit || flag_syntax_only || seen_error ());\n }\n \n-struct gimple_opt_pass pass_rest_of_compilation =\n+static struct rtl_opt_pass pass_rest_of_compilation =\n {\n  {\n-  GIMPLE_PASS,\n+  RTL_PASS,\n   \"*rest_of_compilation\",               /* name */\n   gate_rest_of_compilation,             /* gate */\n   NULL,                                 /* execute */\n@@ -416,7 +416,7 @@ gate_postreload (void)\n   return reload_completed;\n }\n \n-struct rtl_opt_pass pass_postreload =\n+static struct rtl_opt_pass pass_postreload =\n {\n  {\n   RTL_PASS,\n@@ -1377,6 +1377,7 @@ init_optimization_passes (void)\n   p = &all_late_ipa_passes;\n   NEXT_PASS (pass_ipa_pta);\n   *p = NULL;\n+\n   /* These passes are run after IPA passes on every function that is being\n      output to the assembler file.  */\n   p = &all_passes;"}, {"sha": "bda4ba9ce7775a857ef5124c802263d583f120fa", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=6083578b4123a41fc9001dbb27ea568c3d442ad4", "patch": "@@ -514,8 +514,6 @@ extern void add_phi_arg (gimple, tree, edge, source_location);\n extern void remove_phi_args (edge);\n extern void remove_phi_node (gimple_stmt_iterator *, bool);\n extern void remove_phi_nodes (basic_block);\n-extern void init_phinodes (void);\n-extern void fini_phinodes (void);\n extern void release_phi_node (gimple);\n #ifdef GATHER_STATISTICS\n extern void phinodes_print_statistics (void);"}, {"sha": "aa2959c4def232c5942c2ce8de6536229d61ee65", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=6083578b4123a41fc9001dbb27ea568c3d442ad4", "patch": "@@ -430,7 +430,6 @@ extern struct gimple_opt_pass pass_tree_ifcombine;\n extern struct gimple_opt_pass pass_dse;\n extern struct gimple_opt_pass pass_nrv;\n extern struct gimple_opt_pass pass_rename_ssa_copies;\n-extern struct gimple_opt_pass pass_rest_of_compilation;\n extern struct gimple_opt_pass pass_sink_code;\n extern struct gimple_opt_pass pass_fre;\n extern struct gimple_opt_pass pass_check_data_deps;\n@@ -477,7 +476,6 @@ extern struct simple_ipa_opt_pass pass_ipa_tm;\n extern struct ipa_opt_pass_d pass_ipa_profile;\n extern struct ipa_opt_pass_d pass_ipa_cdtor_merge;\n \n-extern struct gimple_opt_pass pass_all_optimizations;\n extern struct gimple_opt_pass pass_cleanup_cfg_post_optimizing;\n extern struct gimple_opt_pass pass_init_datastructures;\n extern struct gimple_opt_pass pass_fixup_cfg;\n@@ -535,7 +533,6 @@ extern struct rtl_opt_pass pass_sms;\n extern struct rtl_opt_pass pass_sched;\n extern struct rtl_opt_pass pass_ira;\n extern struct rtl_opt_pass pass_reload;\n-extern struct rtl_opt_pass pass_postreload;\n extern struct rtl_opt_pass pass_clean_state;\n extern struct rtl_opt_pass pass_branch_prob;\n extern struct rtl_opt_pass pass_value_profile_transformations;\n@@ -576,7 +573,6 @@ extern struct rtl_opt_pass pass_rtl_seqabstr;\n extern struct gimple_opt_pass pass_release_ssa_names;\n extern struct gimple_opt_pass pass_early_inline;\n extern struct gimple_opt_pass pass_inline_parameters;\n-extern struct gimple_opt_pass pass_all_early_optimizations;\n extern struct gimple_opt_pass pass_update_address_taken;\n extern struct gimple_opt_pass pass_convert_switch;\n "}, {"sha": "bd0bde399e168260fcac898b4af83855b1cc62c0", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=6083578b4123a41fc9001dbb27ea568c3d442ad4", "patch": "@@ -44,10 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n    garbage collector.  Similar results have been seen on a wider variety\n    of tests (such as the compiler itself).\n \n-   Right now we maintain our free list on a per-function basis.  It may\n-   or may not make sense to maintain the free list for the duration of\n-   a compilation unit.\n-\n    We could also use a zone allocator for these objects since they have\n    a very well defined lifetime.  If someone wants to experiment with that\n    this is the place to try it.\n@@ -87,30 +83,6 @@ unsigned int phi_nodes_reused;\n unsigned int phi_nodes_created;\n #endif\n \n-/* Initialize management of PHIs.  */\n-\n-void\n-init_phinodes (void)\n-{\n-  int i;\n-\n-  for (i = 0; i < NUM_BUCKETS - 2; i++)\n-    free_phinodes[i] = NULL;\n-  free_phinode_count = 0;\n-}\n-\n-/* Finalize management of PHIs.  */\n-\n-void\n-fini_phinodes (void)\n-{\n-  int i;\n-\n-  for (i = 0; i < NUM_BUCKETS - 2; i++)\n-    free_phinodes[i] = NULL;\n-  free_phinode_count = 0;\n-}\n-\n /* Dump some simple statistics regarding the re-use of PHI nodes.  */\n \n #ifdef GATHER_STATISTICS"}, {"sha": "2655d26e5e232862f26229976d595405986895a9", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6083578b4123a41fc9001dbb27ea568c3d442ad4/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=6083578b4123a41fc9001dbb27ea568c3d442ad4", "patch": "@@ -1117,7 +1117,6 @@ init_tree_ssa (struct function *fn)\n \t\t\t\t                 uid_ssaname_map_eq, NULL);\n   pt_solution_reset (&fn->gimple_df->escaped);\n   init_ssanames (fn, 0);\n-  init_phinodes ();\n }\n \n /* Do the actions required to initialize internal data structures used\n@@ -1173,7 +1172,6 @@ delete_tree_ssa (void)\n   cfun->gimple_df->referenced_vars = NULL;\n \n   fini_ssanames ();\n-  fini_phinodes ();\n \n   /* We no longer maintain the SSA operand cache at this point.  */\n   if (ssa_operands_active ())"}]}