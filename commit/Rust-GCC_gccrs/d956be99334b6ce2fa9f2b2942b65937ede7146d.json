{"sha": "d956be99334b6ce2fa9f2b2942b65937ede7146d", "node_id": "C_kwDOANBUbNoAKGQ5NTZiZTk5MzM0YjZjZTJmYTlmMmIyOTQyYjY1OTM3ZWRlNzE0NmQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-21T20:43:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-21T20:43:15Z"}, "message": "Merge #881 #882\n\n881: Add TraitItemKind to HIR TraitItems r=philberty a=philberty\n\nThis allows us to safely switch and cast between the items without the\r\nneed for visitors.\r\n\n\n882: Add Mappings::iterate_trait_items helper r=philberty a=philberty\n\nThis helper is part of a larger PR into fixing our implementation of MethodResolution\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "fd2bc947a2649c003d27c25405293afbb330dd22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd2bc947a2649c003d27c25405293afbb330dd22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d956be99334b6ce2fa9f2b2942b65937ede7146d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6xrjCRBK7hj4Ov3rIwAATTAIAHzSrGtxa4PU37pbzJRDQEZ2\n1gg0c1CDt1wrlPSaKUQmi27oGwUowL0ct10YFbiCnfJ2HYL931Dxr+5y22wOKiPo\nCCPDxiGljkKeXTZPnKDTRVHYFhrjG3zh4RnExRYVB5rJE0ifA58IFkEWJKHOqhIM\n8pn0BJPfkbnV4lWpdLl1wIjapXjHiHIgol27UBtgRSmb2a2rrih8Bi79CsqLniVu\n9Np8b0+GhuvYG4rW+xFqrjgIyFq/YZLbmky/GPLPRh0KsBmgETCpAl8I8XtwRrEW\nfydc2pCmWiGbmd04L4aVObQdzCJ6wpc6wNPAgUcDbDdJKgBpX9xlKykh2E9DZCA=\n=JwYZ\n-----END PGP SIGNATURE-----\n", "payload": "tree fd2bc947a2649c003d27c25405293afbb330dd22\nparent a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2\nparent 120967b80bec0bc4427c61dd94c2f81187223966\nparent dfb7f9c123ad930734aaa2befbbf40163f115920\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1642797795 +0000\ncommitter GitHub <noreply@github.com> 1642797795 +0000\n\nMerge #881 #882\n\n881: Add TraitItemKind to HIR TraitItems r=philberty a=philberty\n\nThis allows us to safely switch and cast between the items without the\r\nneed for visitors.\r\n\n\n882: Add Mappings::iterate_trait_items helper r=philberty a=philberty\n\nThis helper is part of a larger PR into fixing our implementation of MethodResolution\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d956be99334b6ce2fa9f2b2942b65937ede7146d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d956be99334b6ce2fa9f2b2942b65937ede7146d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d956be99334b6ce2fa9f2b2942b65937ede7146d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c5dbadc3c9023821244bd4af4e78ad9d8f63f2"}, {"sha": "120967b80bec0bc4427c61dd94c2f81187223966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120967b80bec0bc4427c61dd94c2f81187223966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120967b80bec0bc4427c61dd94c2f81187223966"}, {"sha": "dfb7f9c123ad930734aaa2befbbf40163f115920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb7f9c123ad930734aaa2befbbf40163f115920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb7f9c123ad930734aaa2befbbf40163f115920"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "4391f39d3040eb9f8881571bcc73ef855683a627", "filename": "gcc/rust/hir/tree/rust-hir-full-test.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc?ref=d956be99334b6ce2fa9f2b2942b65937ede7146d", "patch": "@@ -3453,7 +3453,7 @@ TraitFunctionDecl::as_string () const\n   str += \"\\n Function params: \";\n   if (is_method ())\n     {\n-      str += self.as_string ();\n+      str += self.as_string () + (has_params () ? \", \" : \"\");\n     }\n \n   if (has_params ())\n@@ -3463,7 +3463,7 @@ TraitFunctionDecl::as_string () const\n \t  str += \"\\n  \" + param.as_string ();\n \t}\n     }\n-  else\n+  else if (!is_method ())\n     {\n       str += \"none\";\n     }"}, {"sha": "3afea36b9c60dee561a8f332acdc390097cf8f85", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=d956be99334b6ce2fa9f2b2942b65937ede7146d", "patch": "@@ -2346,6 +2346,11 @@ class TraitItemFunc : public TraitItem\n     return decl.get_function_name ();\n   }\n \n+  TraitItemKind get_item_kind () const override final\n+  {\n+    return TraitItemKind::FUNC;\n+  }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   TraitItemFunc *clone_trait_item_impl () const override\n@@ -2420,6 +2425,11 @@ class TraitItemConst : public TraitItem\n \n   const std::string trait_identifier () const override final { return name; }\n \n+  TraitItemKind get_item_kind () const override final\n+  {\n+    return TraitItemKind::CONST;\n+  }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   TraitItemConst *clone_trait_item_impl () const override\n@@ -2495,6 +2505,11 @@ class TraitItemType : public TraitItem\n \n   const std::string trait_identifier () const override final { return name; }\n \n+  TraitItemKind get_item_kind () const override final\n+  {\n+    return TraitItemKind::TYPE;\n+  }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   TraitItemType *clone_trait_item_impl () const override"}, {"sha": "76d451ca8e83a149d6497455ed2a555a1b43169f", "filename": "gcc/rust/hir/tree/rust-hir.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h?ref=d956be99334b6ce2fa9f2b2942b65937ede7146d", "patch": "@@ -677,6 +677,14 @@ class LifetimeParam : public GenericParam\n // Item used in trait declarations - abstract base class\n class TraitItem\n {\n+public:\n+  enum TraitItemKind\n+  {\n+    FUNC,\n+    CONST,\n+    TYPE\n+  };\n+\n protected:\n   // Constructor\n   TraitItem (Analysis::NodeMapping mappings) : mappings (mappings) {}\n@@ -701,6 +709,8 @@ class TraitItem\n   virtual const std::string trait_identifier () const = 0;\n \n   const Analysis::NodeMapping get_mappings () const { return mappings; }\n+\n+  virtual TraitItemKind get_item_kind () const = 0;\n };\n \n class ImplItem"}, {"sha": "786fc5a627e91562d8809ed8c2dbccf3f46df98c", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=d956be99334b6ce2fa9f2b2942b65937ede7146d", "patch": "@@ -719,5 +719,24 @@ Mappings::iterate_impl_blocks (std::function<bool (HirId, HIR::ImplBlock *)> cb)\n     }\n }\n \n+void\n+Mappings::iterate_trait_items (\n+  std::function<bool (HIR::TraitItem *, HIR::Trait *)> cb)\n+{\n+  for (auto it = hirTraitItemMappings.begin ();\n+       it != hirTraitItemMappings.end (); it++)\n+    {\n+      for (auto iy = it->second.begin (); iy != it->second.end (); iy++)\n+\t{\n+\t  HirId trait_item_id = iy->first;\n+\t  HIR::TraitItem *trait_item = iy->second;\n+\t  HIR::Trait *trait = lookup_trait_item_mapping (trait_item_id);\n+\n+\t  if (!cb (trait_item, trait))\n+\t    return;\n+\t}\n+    }\n+}\n+\n } // namespace Analysis\n } // namespace Rust"}, {"sha": "ec08170af83c5789763c6a139d84b681093a9daf", "filename": "gcc/rust/util/rust-hir-map.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Futil%2Frust-hir-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d956be99334b6ce2fa9f2b2942b65937ede7146d/gcc%2Frust%2Futil%2Frust-hir-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.h?ref=d956be99334b6ce2fa9f2b2942b65937ede7146d", "patch": "@@ -474,6 +474,9 @@ class Mappings\n \n   void iterate_impl_blocks (std::function<bool (HirId, HIR::ImplBlock *)> cb);\n \n+  void iterate_trait_items (\n+    std::function<bool (HIR::TraitItem *item, HIR::Trait *)> cb);\n+\n   bool is_impl_item (HirId id)\n   {\n     HirId parent_impl_block_id = UNKNOWN_HIRID;"}]}