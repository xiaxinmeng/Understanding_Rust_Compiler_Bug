{"sha": "cf352092e2ec219b0c841cb6e49d876a4b312bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YzNTIwOTJlMmVjMjE5YjBjODQxY2I2ZTQ5ZDg3NmE0YjMxMmJjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-22T11:17:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-22T11:17:24Z"}, "message": "re PR tree-optimization/77665 (ICE in expand_GOMP_SIMD_VF, at internal-fn.c:172)\n\n\tPR fortran/77665\n\t* tree-inline.c (remap_gimple_stmt): Set has_simduid_loops\n\tfor all IFN_GOMP_SIMD_* internal fns, not just for\n\tIFN_GOMP_SIMD_ORDERED_*.\n\n\t* gfortran.dg/gomp/pr77665.f90: New test.\n\nFrom-SVN: r240348", "tree": {"sha": "8f7885ede46d699c3f4c553dd975517f72352e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f7885ede46d699c3f4c553dd975517f72352e04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf352092e2ec219b0c841cb6e49d876a4b312bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf352092e2ec219b0c841cb6e49d876a4b312bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf352092e2ec219b0c841cb6e49d876a4b312bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf352092e2ec219b0c841cb6e49d876a4b312bca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a4c4f1273679f493dd513b3dc0e9e1952459bd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a4c4f1273679f493dd513b3dc0e9e1952459bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a4c4f1273679f493dd513b3dc0e9e1952459bd4"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "0b689ab86df828a70fc5b6718547b7362ebdb97a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf352092e2ec219b0c841cb6e49d876a4b312bca", "patch": "@@ -1,3 +1,10 @@\n+2016-09-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/77665\n+\t* tree-inline.c (remap_gimple_stmt): Set has_simduid_loops\n+\tfor all IFN_GOMP_SIMD_* internal fns, not just for\n+\tIFN_GOMP_SIMD_ORDERED_*.\n+\n 2016-09-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/77670"}, {"sha": "08911219f16763f1d57f3d89461177b2cb3d8f9f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf352092e2ec219b0c841cb6e49d876a4b312bca", "patch": "@@ -1,3 +1,8 @@\n+2016-09-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/77665\n+\t* gfortran.dg/gomp/pr77665.f90: New test.\n+\n 2016-09-22  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* gfortran.dg/dtio_11.f90: Correct for changed error messages."}, {"sha": "50183cbce6dd5d9291d1ef9e9a1b3c45b6489cb3", "filename": "gcc/testsuite/gfortran.dg/gomp/pr77665.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr77665.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr77665.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr77665.f90?ref=cf352092e2ec219b0c841cb6e49d876a4b312bca", "patch": "@@ -0,0 +1,18 @@\n+! PR fortran/77665\n+! { dg-do compile }\n+! { dg-additional-options \"-O2\" }\n+\n+program pr77665\n+  type t\n+    integer :: a = 0\n+  end type\n+  type(t) :: x\n+  integer :: i\n+  !$omp declare reduction (+:t: omp_out%a = omp_out%a + omp_in%a)\n+  !$omp simd reduction(+:x)\n+  do i = 1, 8\n+    if (abs(i) < 5) call abort\n+    x%a = x%a + 1\n+  end do\n+  print *, x%a\n+end"}, {"sha": "8a06e29d93247693bbc960a250f761f7abd19827", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf352092e2ec219b0c841cb6e49d876a4b312bca/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=cf352092e2ec219b0c841cb6e49d876a4b312bca", "patch": "@@ -1644,11 +1644,19 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \t    gimple_call_set_tail (call_stmt, false);\n \t  if (gimple_call_from_thunk_p (call_stmt))\n \t    gimple_call_set_from_thunk (call_stmt, false);\n-\t  if (gimple_call_internal_p (call_stmt)\n-\t      && IN_RANGE (gimple_call_internal_fn (call_stmt),\n-\t\t\t   IFN_GOMP_SIMD_ORDERED_START,\n-\t\t\t   IFN_GOMP_SIMD_ORDERED_END))\n-\t    DECL_STRUCT_FUNCTION (id->dst_fn)->has_simduid_loops = true;\n+\t  if (gimple_call_internal_p (call_stmt))\n+\t    switch (gimple_call_internal_fn (call_stmt))\n+\t      {\n+\t      case IFN_GOMP_SIMD_LANE:\n+\t      case IFN_GOMP_SIMD_VF:\n+\t      case IFN_GOMP_SIMD_LAST_LANE:\n+\t      case IFN_GOMP_SIMD_ORDERED_START:\n+\t      case IFN_GOMP_SIMD_ORDERED_END:\n+\t\tDECL_STRUCT_FUNCTION (id->dst_fn)->has_simduid_loops = true;\n+\t        break;\n+\t      default:\n+\t\tbreak;\n+\t      }\n \t}\n \n       /* Remap the region numbers for __builtin_eh_{pointer,filter},"}]}