{"sha": "35c2dbf43bd8e88b514e67b2c1334e1c04f4724e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVjMmRiZjQzYmQ4ZTg4YjUxNGU2N2IyYzEzMzRlMWMwNGY0NzI0ZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-02-10T16:49:12Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-02-10T16:49:12Z"}, "message": "Remove last change.\n\nFrom-SVN: r8900", "tree": {"sha": "53418398ed828cd1f0e5793eb8dd3b0fcf5cd3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53418398ed828cd1f0e5793eb8dd3b0fcf5cd3ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35c2dbf43bd8e88b514e67b2c1334e1c04f4724e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c2dbf43bd8e88b514e67b2c1334e1c04f4724e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35c2dbf43bd8e88b514e67b2c1334e1c04f4724e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c2dbf43bd8e88b514e67b2c1334e1c04f4724e/comments", "author": null, "committer": null, "parents": [{"sha": "8b236af9f9005ebde5dd0d0f5dc2a064626d4bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b236af9f9005ebde5dd0d0f5dc2a064626d4bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b236af9f9005ebde5dd0d0f5dc2a064626d4bb4"}], "stats": {"total": 20, "additions": 0, "deletions": 20}, "files": [{"sha": "d848450bb0fe2f9b75eff65bb55359bc9251bbb9", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c2dbf43bd8e88b514e67b2c1334e1c04f4724e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c2dbf43bd8e88b514e67b2c1334e1c04f4724e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=35c2dbf43bd8e88b514e67b2c1334e1c04f4724e", "patch": "@@ -1130,26 +1130,6 @@ struct rs6000_args {int words, fregno, nargs_prototype; };\n \t\t\t\t\t   plus_constant ((ADDR), 8))), \\\n \t\t  force_reg (SImode, (CXT)));\t\t\t\\\n }\n-\f\n-/* Definitions for __builtin_return_address and __builtin_frame_address.  */\n-/* __builtin_return_address (0) should give $lr, enable this. */\n-/* This should be uncommented, so that the link register is used, but\n-   currently this would result in unmatched insns and spilling fixed\n-   registers so we'll leave it for another day.  When these problems are taken\n-   care of one additional fetch will be necessary in RETURN_ADDR_RTX.  (mrs) */\n-/* #define RETURN_ADDR_IN_PREVIOUS_FRAME */\n-\n-/* The current return address is in $lr (65).  The return address of anything\n-   farther back is accessed normally at [[%fp]+8].  */\n-#define RETURN_ADDR_RTX(count, frame)\t\\\n-  ((count == -1)\t\t\t\\\n-   ? gen_rtx (REG, Pmode, 65)\t\t\\\n-   : copy_to_reg (gen_rtx (MEM, Pmode,\t\\\n-\t\t\t   memory_address (Pmode, \\\n-\t\t\t\t\t   plus_constant (copy_to_reg (gen_rtx (MEM, Pmode, \\\n-\t\t\t\t\t\t\t\t\t\tmemory_address (Pmode, frame))), \\\n-\t\t\t\t\t\t\t  8)))))\n-\n \f\n /* Definitions for register eliminations.\n "}]}