{"sha": "f84c2018797e14c7deac9265a96e51707ab0dcdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg0YzIwMTg3OTdlMTRjN2RlYWM5MjY1YTk2ZTUxNzA3YWIwZGNkYg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-19T22:52:43Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-19T22:52:43Z"}, "message": "cppalloc.c: PROTO -> PARAMS.\n\n        * cppalloc.c: PROTO -> PARAMS.\n        * cpperror.c: Likewise.\n        * cppfiles.c: Likewise.\n        * cpplib.c: Likewise.\n        * cpplib.h: Likewise.\n\nFrom-SVN: r31521", "tree": {"sha": "0319b7469142d309d9f854a370b3b83ac8d4ac57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0319b7469142d309d9f854a370b3b83ac8d4ac57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f84c2018797e14c7deac9265a96e51707ab0dcdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84c2018797e14c7deac9265a96e51707ab0dcdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84c2018797e14c7deac9265a96e51707ab0dcdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84c2018797e14c7deac9265a96e51707ab0dcdb/comments", "author": null, "committer": null, "parents": [{"sha": "299d06ad4acdbc03b0912a1b0f8b36d277f0efac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299d06ad4acdbc03b0912a1b0f8b36d277f0efac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299d06ad4acdbc03b0912a1b0f8b36d277f0efac"}], "stats": {"total": 104, "additions": 55, "deletions": 49}, "files": [{"sha": "9c4c9b2c273564b1687e6e43d04c66dd31157ed8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f84c2018797e14c7deac9265a96e51707ab0dcdb", "patch": "@@ -1,4 +1,10 @@\n 2000-01-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\t\n+\t* cppalloc.c: PROTO -> PARAMS.\n+\t* cpperror.c: Likewise.\n+\t* cppfiles.c: Likewise.\n+\t* cpplib.c: Likewise.\n+\t* cpplib.h: Likewise.\n \n \t* config/arm/arm-protos.h: PROTO -> PARAMS.\n \t* config/arm/arm.c: Likewise."}, {"sha": "f0a81b577b308e5a697d539198b8cd5ee5e364c2", "filename": "gcc/cppalloc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcppalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcppalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppalloc.c?ref=f84c2018797e14c7deac9265a96e51707ab0dcdb", "patch": "@@ -26,7 +26,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #include \"system.h\"\n #include \"cpplib.h\"\n \n-static void memory_full PROTO ((void)) ATTRIBUTE_NORETURN;\n+static void memory_full PARAMS ((void)) ATTRIBUTE_NORETURN;\n \n static void\n memory_full ()"}, {"sha": "220f8fadecc5c2cd56cc5ca0260b940502a2c1a2", "filename": "gcc/cpperror.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcpperror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcpperror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpperror.c?ref=f84c2018797e14c7deac9265a96e51707ab0dcdb", "patch": "@@ -124,7 +124,7 @@ v_cpp_message (pfile, is_error, msgid, ap)\n }\n \n void\n-cpp_message VPROTO ((cpp_reader *pfile, int is_error, const char *msgid, ...))\n+cpp_message VPARAMS ((cpp_reader *pfile, int is_error, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   cpp_reader *pfile;\n@@ -152,7 +152,7 @@ cpp_message VPROTO ((cpp_reader *pfile, int is_error, const char *msgid, ...))\n    CPP_FATAL_ERRORS.  */\n \n void\n-cpp_fatal VPROTO ((cpp_reader *pfile, const char *msgid, ...))\n+cpp_fatal VPARAMS ((cpp_reader *pfile, const char *msgid, ...))\n {  \n #ifndef ANSI_PROTOTYPES\n   cpp_reader *pfile;\n@@ -188,7 +188,7 @@ cpp_pfatal_with_name (pfile, name)\n /* Print an error message.  */\n \n void\n-cpp_notice VPROTO ((const char *msgid, ...))\n+cpp_notice VPARAMS ((const char *msgid, ...))\n {  \n #ifndef ANSI_PROTOTYPES\n   const char *msgid;"}, {"sha": "845dbad3cd9d9c75fb95b20aa9bc3f78751b3c28", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=f84c2018797e14c7deac9265a96e51707ab0dcdb", "patch": "@@ -33,27 +33,27 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n    so it's static anyway. */\n \n static struct include_hash *redundant_include_p\n-\t\t\t\t\tPROTO ((cpp_reader *,\n+\t\t\t\t\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\tstruct include_hash *,\n \t\t\t\t\t\tstruct file_name_list *));\n-static struct file_name_map *read_name_map\tPROTO ((cpp_reader *,\n+static struct file_name_map *read_name_map\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t\tconst char *));\n-static char *read_filename_string\tPROTO ((int, FILE *));\n-static char *remap_filename \t\tPROTO ((cpp_reader *, char *,\n+static char *read_filename_string\tPARAMS ((int, FILE *));\n+static char *remap_filename \t\tPARAMS ((cpp_reader *, char *,\n \t\t\t\t\t\tstruct file_name_list *));\n-static long read_and_prescan\t\tPROTO ((cpp_reader *, cpp_buffer *,\n+static long read_and_prescan\t\tPARAMS ((cpp_reader *, cpp_buffer *,\n \t\t\t\t\t\tint, size_t));\n-static struct file_name_list *actual_directory PROTO ((cpp_reader *,\n+static struct file_name_list *actual_directory PARAMS ((cpp_reader *,\n \t\t\t\t\t\t       const char *));\n-static void initialize_input_buffer\tPROTO ((cpp_reader *, int,\n+static void initialize_input_buffer\tPARAMS ((cpp_reader *, int,\n \t\t\t\t\t\tstruct stat *));\n-static int file_cleanup\t\t\tPROTO ((cpp_buffer *, cpp_reader *));\n-static void find_position\t\tPROTO ((U_CHAR *, U_CHAR *,\n+static int file_cleanup\t\t\tPARAMS ((cpp_buffer *, cpp_reader *));\n+static void find_position\t\tPARAMS ((U_CHAR *, U_CHAR *,\n \t\t\t\t\t\tunsigned long *,\n \t\t\t\t\t\tunsigned long *));\n \n #if 0\n-static void hack_vms_include_specification PROTO ((char *));\n+static void hack_vms_include_specification PARAMS ((char *));\n #endif\n \n /* Windows does not natively support inodes, and neither does MSDOS."}, {"sha": "c6e19c920a364cfbd1dc321bd1161dcc00cfb36b", "filename": "gcc/cpplib.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=f84c2018797e14c7deac9265a96e51707ab0dcdb", "patch": "@@ -37,13 +37,13 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n /* Forward declarations.  */\n \n-static const char *my_strerror\t\tPROTO ((int));\n-static void validate_else\t\tPROTO ((cpp_reader *, const char *));\n-static HOST_WIDEST_INT eval_if_expression\tPROTO ((cpp_reader *));\n+static const char *my_strerror\t\tPARAMS ((int));\n+static void validate_else\t\tPARAMS ((cpp_reader *, const char *));\n+static HOST_WIDEST_INT eval_if_expression\tPARAMS ((cpp_reader *));\n \n-static void conditional_skip\t\tPROTO ((cpp_reader *, int,\n+static void conditional_skip\t\tPARAMS ((cpp_reader *, int,\n \t\t\t\t\t\tenum node_type, U_CHAR *));\n-static void skip_if_group\t\tPROTO ((cpp_reader *));\n+static void skip_if_group\t\tPARAMS ((cpp_reader *));\n \n static void parse_name\t\t\tPARAMS ((cpp_reader *, int));\n static void parse_string\t\tPARAMS ((cpp_reader *, int));\n@@ -3258,7 +3258,7 @@ v_cpp_error (pfile, msgid, ap)\n }\n \n void\n-cpp_error VPROTO ((cpp_reader * pfile, const char *msgid, ...))\n+cpp_error VPARAMS ((cpp_reader * pfile, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   cpp_reader *pfile;\n@@ -3297,7 +3297,7 @@ v_cpp_warning (pfile, msgid, ap)\n }\n \n void\n-cpp_warning VPROTO ((cpp_reader * pfile, const char *msgid, ...))\n+cpp_warning VPARAMS ((cpp_reader * pfile, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   cpp_reader *pfile;\n@@ -3319,7 +3319,7 @@ cpp_warning VPROTO ((cpp_reader * pfile, const char *msgid, ...))\n /* Print an error message and maybe count it.  */\n \n void\n-cpp_pedwarn VPROTO ((cpp_reader * pfile, const char *msgid, ...))\n+cpp_pedwarn VPARAMS ((cpp_reader * pfile, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   cpp_reader *pfile;\n@@ -3360,7 +3360,7 @@ v_cpp_error_with_line (pfile, line, column, msgid, ap)\n }\n \n void\n-cpp_error_with_line VPROTO ((cpp_reader * pfile, int line, int column,\n+cpp_error_with_line VPARAMS ((cpp_reader * pfile, int line, int column,\n \t\t\t     const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n@@ -3411,7 +3411,7 @@ v_cpp_warning_with_line (pfile, line, column, msgid, ap)\n }  \n \n void\n-cpp_warning_with_line VPROTO ((cpp_reader * pfile, int line, int column,\n+cpp_warning_with_line VPARAMS ((cpp_reader * pfile, int line, int column,\n \t\t\t       const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n@@ -3436,7 +3436,7 @@ cpp_warning_with_line VPROTO ((cpp_reader * pfile, int line, int column,\n }\n \n void\n-cpp_pedwarn_with_line VPROTO ((cpp_reader * pfile, int line, int column,\n+cpp_pedwarn_with_line VPARAMS ((cpp_reader * pfile, int line, int column,\n \t\t\t       const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n@@ -3467,7 +3467,7 @@ cpp_pedwarn_with_line VPROTO ((cpp_reader * pfile, int line, int column,\n    giving specified file name and line number, not current.  */\n \n void\n-cpp_pedwarn_with_file_and_line VPROTO ((cpp_reader *pfile, const char *file,\n+cpp_pedwarn_with_file_and_line VPARAMS ((cpp_reader *pfile, const char *file,\n \t\t\t\t\tint line, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES"}, {"sha": "e48d07bdb77b259aea6f58d505284ac3f47fbc2a", "filename": "gcc/cpplib.h", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84c2018797e14c7deac9265a96e51707ab0dcdb/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=f84c2018797e14c7deac9265a96e51707ab0dcdb", "patch": "@@ -722,24 +722,24 @@ extern void cpp_assert PARAMS ((cpp_reader *, unsigned char *));\n extern void cpp_undef  PARAMS ((cpp_reader *, unsigned char *));\n extern void cpp_unassert PARAMS ((cpp_reader *, unsigned char *));\n \n-extern void cpp_error PVPROTO ((cpp_reader *, const char *, ...))\n+extern void cpp_error PARAMS ((cpp_reader *, const char *, ...))\n   ATTRIBUTE_PRINTF_2;\n-extern void cpp_warning PVPROTO ((cpp_reader *, const char *, ...))\n+extern void cpp_warning PARAMS ((cpp_reader *, const char *, ...))\n   ATTRIBUTE_PRINTF_2;\n-extern void cpp_pedwarn PVPROTO ((cpp_reader *, const char *, ...))\n+extern void cpp_pedwarn PARAMS ((cpp_reader *, const char *, ...))\n   ATTRIBUTE_PRINTF_2;\n-extern void cpp_error_with_line PVPROTO ((cpp_reader *, int, int, const char *, ...))\n+extern void cpp_error_with_line PARAMS ((cpp_reader *, int, int, const char *, ...))\n   ATTRIBUTE_PRINTF_4;\n-extern void cpp_warning_with_line PVPROTO ((cpp_reader *, int, int, const char *, ...))\n+extern void cpp_warning_with_line PARAMS ((cpp_reader *, int, int, const char *, ...))\n   ATTRIBUTE_PRINTF_4;\n-extern void cpp_pedwarn_with_line PVPROTO ((cpp_reader *, int, int, const char *, ...))\n+extern void cpp_pedwarn_with_line PARAMS ((cpp_reader *, int, int, const char *, ...))\n   ATTRIBUTE_PRINTF_4;\n-extern void cpp_pedwarn_with_file_and_line PVPROTO ((cpp_reader *, const char *, int, const char *, ...))\n+extern void cpp_pedwarn_with_file_and_line PARAMS ((cpp_reader *, const char *, int, const char *, ...))\n   ATTRIBUTE_PRINTF_4;\n-extern void cpp_message_from_errno PROTO ((cpp_reader *, int, const char *));\n-extern void cpp_error_from_errno PROTO ((cpp_reader *, const char *));\n-extern void cpp_perror_with_name PROTO ((cpp_reader *, const char *));\n-extern void v_cpp_message PROTO ((cpp_reader *, int, const char *, va_list));\n+extern void cpp_message_from_errno PARAMS ((cpp_reader *, int, const char *));\n+extern void cpp_error_from_errno PARAMS ((cpp_reader *, const char *));\n+extern void cpp_perror_with_name PARAMS ((cpp_reader *, const char *));\n+extern void v_cpp_message PARAMS ((cpp_reader *, int, const char *, va_list));\n \n extern void cpp_grow_buffer PARAMS ((cpp_reader *, long));\n extern cpp_buffer *cpp_push_buffer PARAMS ((cpp_reader *,\n@@ -768,29 +768,29 @@ extern void output_line_command\t\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t enum file_change_code));\n \n /* From cpperror.c */\n-extern void cpp_fatal PVPROTO ((cpp_reader *, const char *, ...))\n+extern void cpp_fatal PARAMS ((cpp_reader *, const char *, ...))\n   ATTRIBUTE_PRINTF_2;\n-extern void cpp_message PVPROTO ((cpp_reader *, int, const char *, ...))\n+extern void cpp_message PARAMS ((cpp_reader *, int, const char *, ...))\n   ATTRIBUTE_PRINTF_3;\n-extern void cpp_pfatal_with_name PROTO ((cpp_reader *, const char *))\n+extern void cpp_pfatal_with_name PARAMS ((cpp_reader *, const char *))\n   ATTRIBUTE_NORETURN;\n-extern void cpp_file_line_for_message PROTO ((cpp_reader *, const char *,\n+extern void cpp_file_line_for_message PARAMS ((cpp_reader *, const char *,\n \t\t\t\t\t      int, int));\n-extern void cpp_print_containing_files PROTO ((cpp_reader *));\n-extern void cpp_notice PVPROTO ((const char *msgid, ...)) ATTRIBUTE_PRINTF_1;\n+extern void cpp_print_containing_files PARAMS ((cpp_reader *));\n+extern void cpp_notice PARAMS ((const char *msgid, ...)) ATTRIBUTE_PRINTF_1;\n \n /* In cppfiles.c */\n-extern void simplify_pathname\t\tPROTO ((char *));\n-extern void merge_include_chains\tPROTO ((struct cpp_options *));\n-extern int find_include_file\t\tPROTO ((cpp_reader *, const char *,\n+extern void simplify_pathname\t\tPARAMS ((char *));\n+extern void merge_include_chains\tPARAMS ((struct cpp_options *));\n+extern int find_include_file\t\tPARAMS ((cpp_reader *, const char *,\n \t\t\t\t\t\tstruct file_name_list *,\n \t\t\t\t\t\tstruct include_hash **,\n \t\t\t\t\t\tint *));\n-extern int finclude\t\t\tPROTO ((cpp_reader *, int,\n+extern int finclude\t\t\tPARAMS ((cpp_reader *, int,\n \t\t\t\t\t        struct include_hash *));\n-extern void deps_output\t\t\tPROTO ((cpp_reader *,\n+extern void deps_output\t\t\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\tconst char *, int));\n-extern struct include_hash *include_hash PROTO ((cpp_reader *, const char *, int));\n+extern struct include_hash *include_hash PARAMS ((cpp_reader *, const char *, int));\n \n #ifndef INCLUDE_LEN_FUDGE\n #define INCLUDE_LEN_FUDGE 0"}]}