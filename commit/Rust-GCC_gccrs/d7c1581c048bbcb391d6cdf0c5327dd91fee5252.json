{"sha": "d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdjMTU4MWMwNDhiYmNiMzkxZDZjZGYwYzUzMjdkZDkxZmVlNTI1Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-15T23:12:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-15T23:12:13Z"}, "message": "Use static assertion for uses-allocator construction\n\n\tPR libstdc++/69293\n\t* include/bits/uses_allocator.h (__uses_alloc<true, ...>): Add\n\tstatic assertion that type is constructible from the arguments.\n\t* testsuite/20_util/scoped_allocator/69293_neg.cc: New.\n\t* testsuite/20_util/uses_allocator/69293_neg.cc: New.\n\t* testsuite/20_util/uses_allocator/cons_neg.cc: Adjust dg-error.\n\nFrom-SVN: r232457", "tree": {"sha": "48f41d9d3552c8ea588cf4deeeb2b8ec755fe005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48f41d9d3552c8ea588cf4deeeb2b8ec755fe005"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28621a5c0255fc8f31e379df316828c5548680c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28621a5c0255fc8f31e379df316828c5548680c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28621a5c0255fc8f31e379df316828c5548680c2"}], "stats": {"total": 116, "additions": 114, "deletions": 2}, "files": [{"sha": "4f1687553edeaf2aff9c03a6407dd0b7bfbf359f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "patch": "@@ -1,5 +1,12 @@\n 2016-01-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/69293\n+\t* include/bits/uses_allocator.h (__uses_alloc<true, ...>): Add\n+\tstatic assertion that type is constructible from the arguments.\n+\t* testsuite/20_util/scoped_allocator/69293_neg.cc: New.\n+\t* testsuite/20_util/uses_allocator/69293_neg.cc: New.\n+\t* testsuite/20_util/uses_allocator/cons_neg.cc: Adjust dg-error.\n+\n \tPR libstdc++/69294\n \t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Check for obsolete isinf\n \tand isnan on AIX. Quote variables."}, {"sha": "b1ff58a294b79d717052f7bbe70643c4f95ead4d", "filename": "libstdc++-v3/include/bits/uses_allocator.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h?ref=d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "patch": "@@ -85,7 +85,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         is_constructible<_Tp, allocator_arg_t, _Alloc, _Args...>::value,\n         __uses_alloc1<_Alloc>,\n        \t__uses_alloc2<_Alloc>>::type\n-    { };\n+    {\n+      static_assert(__or_<\n+\t  is_constructible<_Tp, allocator_arg_t, _Alloc, _Args...>,\n+\t  is_constructible<_Tp, _Args..., _Alloc>>::value, \"construction with\"\n+\t  \" an allocator must be possible if uses_allocator is true\");\n+    };\n \n   template<typename _Tp, typename _Alloc, typename... _Args>\n     struct __uses_alloc<false, _Tp, _Alloc, _Args...>"}, {"sha": "f3b2d87ab99b4f070f61dbc38c614abdbc76343a", "filename": "libstdc++-v3/testsuite/20_util/scoped_allocator/69293_neg.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F69293_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F69293_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fscoped_allocator%2F69293_neg.cc?ref=d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// PR libstdc++/69293\n+\n+#include <scoped_allocator>\n+#include <memory>\n+\n+using std::allocator;\n+using std::allocator_arg_t;\n+using std::uses_allocator;\n+using std::scoped_allocator_adaptor;\n+using std::is_constructible;\n+\n+struct X\n+{\n+  using allocator_type = allocator<int>;\n+};\n+\n+using scoped_alloc = scoped_allocator_adaptor<allocator<X>, X::allocator_type>;\n+using inner_alloc_type = scoped_alloc::inner_allocator_type;\n+\n+static_assert(uses_allocator<X, inner_alloc_type>{}, \"\");\n+static_assert(!is_constructible<X, allocator_arg_t, inner_alloc_type>{}, \"\");\n+static_assert(!is_constructible<X, inner_alloc_type>{}, \"\");\n+\n+void\n+test01()\n+{\n+  scoped_alloc sa;\n+  auto p = sa.allocate(1);\n+  sa.construct(p);  // this is required to be ill-formed\n+  // { dg-error \"static assertion failed\" \"\" { target *-*-* } 89 }\n+}"}, {"sha": "19417fc2cef4209f8a0bed2cb0497f059524f7ba", "filename": "libstdc++-v3/testsuite/20_util/uses_allocator/69293_neg.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2F69293_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2F69293_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2F69293_neg.cc?ref=d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// PR libstdc++/69293\n+\n+#include <tuple>\n+#include <memory>\n+\n+using std::allocator;\n+using std::allocator_arg_t;\n+using std::uses_allocator;\n+using std::tuple;\n+using std::is_constructible;\n+\n+struct X\n+{\n+  using allocator_type = allocator<int>;\n+};\n+\n+using alloc_type = X::allocator_type;\n+\n+static_assert(uses_allocator<X, alloc_type>{}, \"\");\n+static_assert(!is_constructible<X, allocator_arg_t, alloc_type>{}, \"\");\n+static_assert(!is_constructible<X, alloc_type>{}, \"\");\n+\n+void\n+test01()\n+{\n+  alloc_type a;\n+  std::tuple<X> t(std::allocator_arg, a); // this is required to be ill-formed\n+  // { dg-error \"static assertion failed\" \"\" { target *-*-* } 89 }\n+}"}, {"sha": "b3df4ae9d7d5f0cd30421aa81295450df597d41f", "filename": "libstdc++-v3/testsuite/20_util/uses_allocator/cons_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fcons_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c1581c048bbcb391d6cdf0c5327dd91fee5252/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fcons_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Fcons_neg.cc?ref=d7c1581c048bbcb391d6cdf0c5327dd91fee5252", "patch": "@@ -44,4 +44,4 @@ void test01()\n \n   tuple<Type> t(allocator_arg, a, 1);\n }\n-// { dg-error \"no matching function\" \"\" { target *-*-* } 92 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 89 }"}]}