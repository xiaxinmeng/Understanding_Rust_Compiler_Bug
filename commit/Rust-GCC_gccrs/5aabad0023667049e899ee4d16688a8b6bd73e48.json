{"sha": "5aabad0023667049e899ee4d16688a8b6bd73e48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhYmFkMDAyMzY2NzA0OWU4OTllZTRkMTY2ODhhOGI2YmQ3M2U0OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-08-28T23:29:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-08-28T23:29:55Z"}, "message": "flow.c (flow_delete_insn_chain): Rename from delete_insn_chain.\n\n        * flow.c (flow_delete_insn_chain): Rename from delete_insn_chain.\n        (update_life_info) [REG_WAS_0]: Search the original insns rather\n        than the new insns for the note.  Fix typos finding note_dest.\n        If no dest found, discard the note rather than abort.\n        [REG_NOALIAS]: Handle as REG_NO_CONFLICT.\n        (replace_insns): Remove the old insn list after update_life_info\n        not before.\n\nFrom-SVN: r28946", "tree": {"sha": "37f1ce503c3e9fbf4dd00c7d48c47a2964d546d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f1ce503c3e9fbf4dd00c7d48c47a2964d546d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aabad0023667049e899ee4d16688a8b6bd73e48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aabad0023667049e899ee4d16688a8b6bd73e48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aabad0023667049e899ee4d16688a8b6bd73e48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aabad0023667049e899ee4d16688a8b6bd73e48/comments", "author": null, "committer": null, "parents": [{"sha": "87373fba4acdc74aef92bbdbca1dde0675f0a781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87373fba4acdc74aef92bbdbca1dde0675f0a781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87373fba4acdc74aef92bbdbca1dde0675f0a781"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "47c76add5f6e78bf5fdd3b6f3dbf3f3ffb0901fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aabad0023667049e899ee4d16688a8b6bd73e48/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aabad0023667049e899ee4d16688a8b6bd73e48/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5aabad0023667049e899ee4d16688a8b6bd73e48", "patch": "@@ -1,3 +1,13 @@\n+Sat Aug 28 16:24:31 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* flow.c (flow_delete_insn_chain): Rename from delete_insn_chain.\n+\t(update_life_info) [REG_WAS_0]: Search the original insns rather\n+\tthan the new insns for the note.  Fix typos finding note_dest.\n+\tIf no dest found, discard the note rather than abort.\n+\t[REG_NOALIAS]: Handle as REG_NO_CONFLICT.\n+\t(replace_insns): Remove the old insn list after update_life_info\n+\tnot before.\n+\n Sat Aug 28 16:20:12 1999  Richard Henderson  <rth@cygnus.com>\n \n         * haifa-sched.c (sched_analyze): Clear LOG_LINKS before calling"}, {"sha": "d39c17aa7f953b4176f3d929c78dde789e05fcb4", "filename": "gcc/flow.c", "status": "modified", "additions": 18, "deletions": 28, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aabad0023667049e899ee4d16688a8b6bd73e48/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aabad0023667049e899ee4d16688a8b6bd73e48/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=5aabad0023667049e899ee4d16688a8b6bd73e48", "patch": "@@ -287,7 +287,7 @@ static void commit_one_edge_insertion\tPROTO((edge));\n static void delete_unreachable_blocks\tPROTO((void));\n static void delete_eh_regions\t\tPROTO((void));\n static int can_delete_note_p\t\tPROTO((rtx));\n-static void delete_insn_chain\t\tPROTO((rtx, rtx));\n+static void flow_delete_insn_chain\tPROTO((rtx, rtx));\n static int delete_block\t\t\tPROTO((basic_block));\n static void expunge_block\t\tPROTO((basic_block));\n static rtx flow_delete_insn\t\tPROTO((rtx));\n@@ -1641,7 +1641,7 @@ can_delete_note_p (note)\n    that must be paired.  */\n \n static void\n-delete_insn_chain (start, finish)\n+flow_delete_insn_chain (start, finish)\n      rtx start, finish;\n {\n   /* Unchain the insns one by one.  It would be quicker to delete all\n@@ -1733,7 +1733,7 @@ delete_block (b)\n   end = next_nonnote_insn (b->end);\n   if (!end || GET_CODE (end) != BARRIER)\n     end = b->end;\n-  delete_insn_chain (insn, end);\n+  flow_delete_insn_chain (insn, end);\n \n no_delete_insns:\n \n@@ -2022,7 +2022,7 @@ tidy_fallthru_edge (e, b, c)\n \n   /* Selectively unlink the sequence.  */\n   if (q != PREV_INSN (c->head))\n-    delete_insn_chain (NEXT_INSN (q), PREV_INSN (c->head));\n+    flow_delete_insn_chain (NEXT_INSN (q), PREV_INSN (c->head));\n \n   e->flags |= EDGE_FALLTHRU;\n }\n@@ -5774,22 +5774,21 @@ update_life_info (notes, first, last, orig_first_insn, orig_last_insn)\n \t      }\n \t    else\n \t      {\n-\t\tnote_dest = find_insn_with_note (note, first, last);\n+\t\tnote_dest = find_insn_with_note (note, orig_first_insn,\n+\t\t\t\t\t\t orig_last_insn);\n \t\tif (note_dest != NULL_RTX)\n \t\t  {\n-\t\t    note_dest = single_set (orig_dest);\n+\t\t    note_dest = single_set (note_dest);\n \t\t    if (note_dest != NULL_RTX)\n-\t\t      {\n-\t\t\tnote_dest = SET_DEST (orig_dest);\n-\t\t      }\n+\t\t      note_dest = SET_DEST (note_dest);\n \t\t  }\n \t      }\n \t      /* This note applies to the dest of the original insn.  Find the\n \t\t first new insn that now has the same dest, and move the note\n \t\t there.  */\n \n \t    if (! note_dest)\n-\t      abort ();\n+\t      break;\n \n \t    for (insn = first; ; insn = NEXT_INSN (insn))\n \t      {\n@@ -5812,10 +5811,9 @@ update_life_info (notes, first, last, orig_first_insn, orig_last_insn)\n \t\t    && HARD_REGNO_NREGS (REGNO (note_dest),\n \t\t\t\t\t GET_MODE (note_dest)) > 1)\n \t\t  break;\n-\t\t/* It must be set somewhere; fail if we couldn't find\n+\n+\t\t/* It must be set somewhere; bail if we couldn't find\n \t\t   where it was set.  */\n-\t\tif (insn == last)\n-\t\t  abort ();\n \t      }\n \t  }\n \t  break;\n@@ -5828,6 +5826,7 @@ update_life_info (notes, first, last, orig_first_insn, orig_last_insn)\n \t    break;\n \n \tcase REG_NO_CONFLICT:\n+\tcase REG_NOALIAS:\n \t  /* These notes apply to the dest of the original insn.  Find the last\n \t     new insn that now has the same dest, and move the note there.  \n \n@@ -6091,29 +6090,19 @@ replace_insns (first, last, first_new, notes)\n   if (notes == NULL_RTX)\n     {\n       for (curr = first; curr != stop; curr = NEXT_INSN (curr))\n-\t{\n+\tif (GET_RTX_CLASS (GET_CODE (curr)) == 'i')\n \t  notes = prepend_reg_notes (notes, REG_NOTES (curr));\n-\t}\n-    }\n-  for (curr = first; curr; curr = next)\n-    {\n-      next = NEXT_INSN (curr);\n-      delete_insn (curr);\n-      if (curr == last)\n-\tbreak;\n     }\n+\n   last_new = emit_insn_after (first_new, prev);\n   first_new = NEXT_INSN (prev);\n+\n   for (i = 0; i < n_basic_blocks; i++)\n     {\n       if (BLOCK_HEAD (i) == first)\n-\t{\n-\t  BLOCK_HEAD (i) = first_new;\n-\t}\n+\tBLOCK_HEAD (i) = first_new;\n       if (BLOCK_END (i) == last)\n-\t{\n-\t  BLOCK_END (i) = last_new;\n-\t}\n+\tBLOCK_END (i) = last_new;\n     }\n   /* This is probably bogus. */\n   if (first_new == last_new)\n@@ -6125,6 +6114,7 @@ replace_insns (first, last, first_new, notes)\n \t}\n     }\n   update_life_info (notes, first_new, last_new, first, last);\n+  flow_delete_insn_chain (first, last);\n }\n \f\n /* Verify the CFG consistency.  This function check some CFG invariants and"}]}