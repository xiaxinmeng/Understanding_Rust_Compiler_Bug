{"sha": "c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzYjkyMDYzYWU3OGI3MDFkMmQ1M2Y0ZmU0NmYxNmEzZjZhMzliYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-10-31T19:58:21Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-10-31T19:58:21Z"}, "message": "target-supports.exp (get_compiler_messages): Append options as a single list element.\n\n2006-10-31  Joseph Myers  <joseph@codesourcery.com>\n            Richard Sandiford  <richard@codesourcery.com>\n\n\t* lib/target-supports.exp (get_compiler_messages): Append options\n\tas a single list element.\n\t(check_effective_target_arm_vfp_ok): New.\n\t* gcc.dg/arm-vfp1.c: Use arm_vfp_ok.\n\nCo-Authored-By: Richard Sandiford <richard@codesourcery.com>\n\nFrom-SVN: r118334", "tree": {"sha": "992be231677f5ad1300f4298d9781a08bc697efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/992be231677f5ad1300f4298d9781a08bc697efd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5ace3b78346ae029998488057606133f714f222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ace3b78346ae029998488057606133f714f222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ace3b78346ae029998488057606133f714f222"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "28d64cba463e1c795a9dc8299bc321d4dc7be2bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "patch": "@@ -1,3 +1,11 @@\n+2006-10-31  Joseph Myers  <joseph@codesourcery.com>\n+            Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* lib/target-supports.exp (get_compiler_messages): Append options\n+\tas a single list element.\n+\t(check_effective_target_arm_vfp_ok): New.\n+\t* gcc.dg/arm-vfp1.c: Use arm_vfp_ok.\n+\n 2006-10-31  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/29387"}, {"sha": "bbf91409842fca4773b4b403205a8b5d9041a6e7", "filename": "gcc/testsuite/gcc.dg/arm-vfp1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/gcc%2Ftestsuite%2Fgcc.dg%2Farm-vfp1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/gcc%2Ftestsuite%2Fgcc.dg%2Farm-vfp1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farm-vfp1.c?ref=c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mfpu=vfp -mfloat-abi=softfp\" } */\n-/* { dg-require-effective-target arm32 } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=iwmmxt\" \"-march=iwmmxt\" } { \"\" } } */\n+/* { dg-require-effective-target arm_vfp_ok } */\n \n extern float fabsf (float);\n extern float sqrtf (float);"}, {"sha": "89bb9d1ddca310e22b54155fb2941f9ab150467b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03b92063ae78b701d2d53f4fe46f16a3f6a39ba/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c03b92063ae78b701d2d53f4fe46f16a3f6a39ba", "patch": "@@ -37,7 +37,7 @@ proc get_compiler_messages {basename want_output type contents args} {\n     global tool\n \n     if { [llength $args] > 0 } {\n-\tset options \"additional_flags=[lindex $args 0]\"\n+\tset options [list \"additional_flags=[lindex $args 0]\"]\n     } else {\n \tset options \"\"\n     }\n@@ -1298,6 +1298,20 @@ proc check_effective_target_arm32 { } {\n     return $et_arm32_saved\n }\n \n+# Return 1 if this is an ARM target supporting -mfpu=vfp\n+# -mfloat-abi=softfp.  Some multilibs may be incompatible with these\n+# options.\n+\n+proc check_effective_target_arm_vfp_ok { } {\n+    if { [check_effective_target_arm32] } {\n+\treturn [check_no_compiler_messages arm_vfp_ok object {\n+\t    int dummy;\n+\t} \"-mfpu=vfp -mfloat-abi=softfp\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is a PowerPC target with floating-point registers.\n \n proc check_effective_target_powerpc_fprs { } {"}]}