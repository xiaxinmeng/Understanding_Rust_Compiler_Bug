{"sha": "5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0OWQyZmM0ZTUyMzk4ZjA0YTM5ZjgxMDY5YmI1ZDFjMjFiYjE2OA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-03-10T21:55:30Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-03-10T21:55:30Z"}, "message": "re PR d/87824 (x86_64-linux multilib issues)\n\n    PR d/87824\nd/dmd: Merge upstream dmd fcc235e8e\n\nAssociative arrays are value types, which are not covariant with the\npointer type typeof(null).\n\nUpdates https://gcc.gnu.org/PR87824\n\nReviewed-on: https://github.com/dlang/dmd/pull/9435\n\nFrom-SVN: r269561", "tree": {"sha": "eec381467d65575a54b03cacbdba6c61a8fbc314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec381467d65575a54b03cacbdba6c61a8fbc314"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/comments", "author": null, "committer": null, "parents": [{"sha": "42a84c28ef2fec57faa061e0676437e354c8c521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a84c28ef2fec57faa061e0676437e354c8c521", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a84c28ef2fec57faa061e0676437e354c8c521"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "cf5a22f070f1ae76f044f28181cf9ef7c3797ea1", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "patch": "@@ -1,4 +1,4 @@\n-da26db81943952c7e35dab98650df589ec122485\n+fcc235e8e25f7758266f7874edd5abefb9943e0b\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "900f172cccb7a69172405d8bd19d2da6d05ebb00", "filename": "gcc/d/dmd/mtype.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/gcc%2Fd%2Fdmd%2Fmtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/gcc%2Fd%2Fdmd%2Fmtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.c?ref=5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "patch": "@@ -5331,9 +5331,16 @@ int Type::covariant(Type *t, StorageClass *pstc, bool fix17349)\n     }\n     else if (t1n->ty == t2n->ty && t1n->implicitConvTo(t2n))\n         goto Lcovariant;\n-    else if (t1n->ty == Tnull && t1n->implicitConvTo(t2n) &&\n-             t1n->size() == t2n->size())\n-        goto Lcovariant;\n+    else if (t1n->ty == Tnull)\n+    {\n+        // NULL is covariant with any pointer type, but not with any\n+        // dynamic arrays, associative arrays or delegates.\n+        // https://issues.dlang.org/show_bug.cgi?id=8589\n+        // https://issues.dlang.org/show_bug.cgi?id=19618\n+        Type *t2bn = t2n->toBasetype();\n+        if (t2bn->ty == Tnull || t2bn->ty == Tpointer || t2bn->ty == Tclass)\n+            goto Lcovariant;\n+    }\n   }\n     goto Lnotcovariant;\n "}, {"sha": "c400d7f61f1fa8e00e956a0c5b62af6b6e56c510", "filename": "gcc/testsuite/gdc.test/runnable/nulltype.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnulltype.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f49d2fc4e52398f04a39f81069bb5d1c21bb168/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnulltype.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnulltype.d?ref=5f49d2fc4e52398f04a39f81069bb5d1c21bb168", "patch": "@@ -127,7 +127,7 @@ void test8589()\n     {\n         void f(T function() dg) { assert(!dg()); }\n \n-        static assert((T.sizeof == typeof(null).sizeof) == result);\n+        static assert((is(typeof(null) function() : T function())) == result);\n         static assert(is(typeof( f(&retnull) )) == result);\n         static assert(is(typeof( f(()=>null) )) == result);\n         static if (result)\n@@ -138,7 +138,7 @@ void test8589()\n     }\n     test!(true,  int*)();\n     test!(true,  Object)();\n-    test!(true,  int[int])();\n+    test!(false, int[int])();\n     test!(false, int[])();\n     test!(false, void delegate())();\n }"}]}