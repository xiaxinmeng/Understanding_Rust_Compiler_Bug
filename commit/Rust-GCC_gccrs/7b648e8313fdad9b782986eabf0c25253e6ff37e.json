{"sha": "7b648e8313fdad9b782986eabf0c25253e6ff37e", "node_id": "C_kwDOANBUbNoAKDdiNjQ4ZTgzMTNmZGFkOWI3ODI5ODZlYWJmMGMyNTI1M2U2ZmYzN2U", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-25T11:40:37Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-25T15:07:29Z"}, "message": "libstdc++: Fix orphaned/nested output of configure checks\n\nThis moves two AC_MSG_RESULT lines for <uchar.h> features so that they\nare only printed when the corresponding AC_MSG_CHECKING actually\nhappened. This fixes configure output like:\n\nchecking for uchar.h... no\nno\nchecking for int64_t... yes\n\nAlso move the AC_MSG_CHECKING for libbacktrace support so it doesn't\ncome after AC_CHECK_HEADERS output. This fixes:\n\nchecking whether to build libbacktrace support... checking for sys/mman.h... (cached) yes\nyes\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4 (GLIBCXX_CHECK_UCHAR_H): Don't use AC_MSG_RESULT\n\tunless the AC_MSG_CHECKING happened.\n\t* configure: Regenerate.", "tree": {"sha": "40c2741a0efb19b3f2bcbb3d083fdd53e0472d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40c2741a0efb19b3f2bcbb3d083fdd53e0472d16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b648e8313fdad9b782986eabf0c25253e6ff37e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b648e8313fdad9b782986eabf0c25253e6ff37e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b648e8313fdad9b782986eabf0c25253e6ff37e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b648e8313fdad9b782986eabf0c25253e6ff37e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f54ceb2062c7fef294f85ae093914fa6c7ca35b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54ceb2062c7fef294f85ae093914fa6c7ca35b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f54ceb2062c7fef294f85ae093914fa6c7ca35b8"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b957c728ba117af6996573ba2efd24eeaeffb311", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b648e8313fdad9b782986eabf0c25253e6ff37e/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b648e8313fdad9b782986eabf0c25253e6ff37e/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=7b648e8313fdad9b782986eabf0c25253e6ff37e", "patch": "@@ -2060,10 +2060,10 @@ AC_DEFUN([GLIBCXX_CHECK_UCHAR_H], [\n \t\t   ],\n \t\t   [], [ac_uchar_c8rtomb_mbrtoc8_fchar8_t=yes],\n \t\t       [ac_uchar_c8rtomb_mbrtoc8_fchar8_t=no])\n+    AC_MSG_RESULT($ac_uchar_c8rtomb_mbrtoc8_fchar8_t)\n   else\n     ac_uchar_c8rtomb_mbrtoc8_fchar8_t=no\n   fi\n-  AC_MSG_RESULT($ac_uchar_c8rtomb_mbrtoc8_fchar8_t)\n   if test x\"$ac_uchar_c8rtomb_mbrtoc8_fchar8_t\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T, 1,\n \t      [Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be\n@@ -2082,10 +2082,10 @@ AC_DEFUN([GLIBCXX_CHECK_UCHAR_H], [\n \t\t   ],\n \t\t   [], [ac_uchar_c8rtomb_mbrtoc8_cxx20=yes],\n \t\t       [ac_uchar_c8rtomb_mbrtoc8_cxx20=no])\n+    AC_MSG_RESULT($ac_uchar_c8rtomb_mbrtoc8_cxx20)\n   else\n     ac_uchar_c8rtomb_mbrtoc8_cxx20=no\n   fi\n-  AC_MSG_RESULT($ac_uchar_c8rtomb_mbrtoc8_cxx20)\n   if test x\"$ac_uchar_c8rtomb_mbrtoc8_cxx20\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20, 1,\n \t      [Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be\n@@ -5045,6 +5045,7 @@ BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n   if test \"$enable_libstdcxx_backtrace\" = \"auto\"; then\n     enable_libstdcxx_backtrace=no\n   fi\n+  AC_MSG_RESULT($enable_libstdcxx_backtrace)\n   if test \"$enable_libstdcxx_backtrace\" = \"yes\"; then\n     BACKTRACE_SUPPORTED=1\n \n@@ -5091,7 +5092,6 @@ BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n     BACKTRACE_USES_MALLOC=0\n     BACKTRACE_SUPPORTS_THREADS=0\n   fi\n-  AC_MSG_RESULT($enable_libstdcxx_backtrace)\n   GLIBCXX_CONDITIONAL(ENABLE_BACKTRACE, [test \"$enable_libstdcxx_backtrace\" = yes])\n ])\n "}, {"sha": "1f7017c08a4c08c8d868a873bc85cceec244c6db", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b648e8313fdad9b782986eabf0c25253e6ff37e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b648e8313fdad9b782986eabf0c25253e6ff37e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=7b648e8313fdad9b782986eabf0c25253e6ff37e", "patch": "@@ -19215,11 +19215,11 @@ else\n   ac_uchar_c8rtomb_mbrtoc8_fchar8_t=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_uchar_c8rtomb_mbrtoc8_fchar8_t\" >&5\n+$as_echo \"$ac_uchar_c8rtomb_mbrtoc8_fchar8_t\" >&6; }\n   else\n     ac_uchar_c8rtomb_mbrtoc8_fchar8_t=no\n   fi\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_uchar_c8rtomb_mbrtoc8_fchar8_t\" >&5\n-$as_echo \"$ac_uchar_c8rtomb_mbrtoc8_fchar8_t\" >&6; }\n   if test x\"$ac_uchar_c8rtomb_mbrtoc8_fchar8_t\" = x\"yes\"; then\n \n $as_echo \"#define _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T 1\" >>confdefs.h\n@@ -19253,11 +19253,11 @@ else\n   ac_uchar_c8rtomb_mbrtoc8_cxx20=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_uchar_c8rtomb_mbrtoc8_cxx20\" >&5\n+$as_echo \"$ac_uchar_c8rtomb_mbrtoc8_cxx20\" >&6; }\n   else\n     ac_uchar_c8rtomb_mbrtoc8_cxx20=no\n   fi\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_uchar_c8rtomb_mbrtoc8_cxx20\" >&5\n-$as_echo \"$ac_uchar_c8rtomb_mbrtoc8_cxx20\" >&6; }\n   if test x\"$ac_uchar_c8rtomb_mbrtoc8_cxx20\" = x\"yes\"; then\n \n $as_echo \"#define _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 1\" >>confdefs.h\n@@ -71212,6 +71212,8 @@ $as_echo_n \"checking whether to build libbacktrace support... \" >&6; }\n   if test \"$enable_libstdcxx_backtrace\" = \"auto\"; then\n     enable_libstdcxx_backtrace=no\n   fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libstdcxx_backtrace\" >&5\n+$as_echo \"$enable_libstdcxx_backtrace\" >&6; }\n   if test \"$enable_libstdcxx_backtrace\" = \"yes\"; then\n     BACKTRACE_SUPPORTED=1\n \n@@ -71280,8 +71282,6 @@ $as_echo \"#define HAVE_STACKTRACE 1\" >>confdefs.h\n     BACKTRACE_USES_MALLOC=0\n     BACKTRACE_SUPPORTS_THREADS=0\n   fi\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libstdcxx_backtrace\" >&5\n-$as_echo \"$enable_libstdcxx_backtrace\" >&6; }\n \n \n "}]}