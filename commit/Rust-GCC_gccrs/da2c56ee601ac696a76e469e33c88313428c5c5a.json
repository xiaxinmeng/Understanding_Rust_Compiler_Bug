{"sha": "da2c56ee601ac696a76e469e33c88313428c5c5a", "node_id": "C_kwDOANBUbNoAKGRhMmM1NmVlNjAxYWM2OTZhNzZlNDY5ZTMzYzg4MzEzNDI4YzVjNWE", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-04-28T17:21:41Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-05-25T20:13:45Z"}, "message": "c++: fix ICE on invalid attributes [PR96637]\n\nWhen chaining attributes, attr_chainon should be used rather than plain\nchainon, so that we don't end up with a TREE_LIST where one of the elements\nis error_mark_node, which causes problems.  parser.cc has already been\nfixed to use attr_chainon, but decl.cc has not.  Until now.\n\n\tPR c++/96637\n\ngcc/cp/ChangeLog:\n\n\t* cp-tree.h (attr_chainon): Declare.\n\t* decl.cc (start_decl): Use attr_chainon.\n\t(grokdeclarator): Likewise.\n\t* parser.cc (cp_parser_statement): No longer static.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/parse/error64.C: New test.", "tree": {"sha": "4d6279b55c6c7652e918d41ea47843cebc76710b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d6279b55c6c7652e918d41ea47843cebc76710b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da2c56ee601ac696a76e469e33c88313428c5c5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2c56ee601ac696a76e469e33c88313428c5c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da2c56ee601ac696a76e469e33c88313428c5c5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2c56ee601ac696a76e469e33c88313428c5c5a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34970d08c6297e12f3f9117b6ac19fb2de522e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34970d08c6297e12f3f9117b6ac19fb2de522e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34970d08c6297e12f3f9117b6ac19fb2de522e24"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "d77fd1eb8a93c963cc77f48d2e6f10ea4bf30da5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=da2c56ee601ac696a76e469e33c88313428c5c5a", "patch": "@@ -7235,6 +7235,7 @@ extern void inject_this_parameter (tree, cp_cv_quals);\n extern location_t defparse_location (tree);\n extern void maybe_show_extern_c_location (void);\n extern bool literal_integer_zerop (const_tree);\n+extern tree attr_chainon (tree, tree);\n \n /* in pt.cc */\n extern tree canonical_type_parameter\t\t(tree);"}, {"sha": "b1ea838ce8b6a308bdb2ee349cb5fccd1e5cfbd6", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=da2c56ee601ac696a76e469e33c88313428c5c5a", "patch": "@@ -5557,7 +5557,7 @@ start_decl (const cp_declarator *declarator,\n   *pushed_scope_p = NULL_TREE;\n \n   if (prefix_attributes != error_mark_node)\n-    attributes = chainon (attributes, prefix_attributes);\n+    attributes = attr_chainon (attributes, prefix_attributes);\n \n   decl = grokdeclarator (declarator, declspecs, NORMAL, initialized,\n \t\t\t &attributes);\n@@ -12728,9 +12728,10 @@ grokdeclarator (const cp_declarator *declarator,\n \t       as a whole.  */\n \t    late_attrs = splice_template_attributes (&attrs, type);\n \t  returned_attrs = decl_attributes (&type,\n-\t\t\t\t\t    chainon (returned_attrs, attrs),\n+\t\t\t\t\t    attr_chainon (returned_attrs,\n+\t\t\t\t\t\t\t  attrs),\n \t\t\t\t\t    attr_flags);\n-\t  returned_attrs = chainon (late_attrs, returned_attrs);\n+\t  returned_attrs = attr_chainon (late_attrs, returned_attrs);\n \t}\n \n       inner_declarator = declarator->declarator;\n@@ -12781,8 +12782,8 @@ grokdeclarator (const cp_declarator *declarator,\n \n \t       The optional attribute-specifier-seq appertains to the\n \t       array.  */\n-\t    returned_attrs = chainon (returned_attrs,\n-\t\t\t\t      declarator->std_attributes);\n+\t    returned_attrs = attr_chainon (returned_attrs,\n+\t\t\t\t\t   declarator->std_attributes);\n \t  break;\n \n \tcase cdk_function:\n@@ -13122,9 +13123,9 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t/* transaction_safe applies to the type, but\n \t\t   transaction_safe_dynamic applies to the function.  */\n \t\tif (is_attribute_p (\"transaction_safe\", tx_qual))\n-\t\t  attrs = chainon (attrs, att);\n+\t\t  attrs = attr_chainon (attrs, att);\n \t\telse\n-\t\t  returned_attrs = chainon (returned_attrs, att);\n+\t\t  returned_attrs = attr_chainon (returned_attrs, att);\n \t      }\n \t    if (attrs)\n \t      /* [dcl.fct]/2:\n@@ -13438,7 +13439,7 @@ grokdeclarator (const cp_declarator *declarator,\n   if (returned_attrs)\n     {\n       if (attrlist)\n-\t*attrlist = chainon (returned_attrs, *attrlist);\n+\t*attrlist = attr_chainon (returned_attrs, *attrlist);\n       else\n \tattrlist = &returned_attrs;\n     }\n@@ -13451,7 +13452,7 @@ grokdeclarator (const cp_declarator *declarator,\n       /* [dcl.meaning]/1: The optional attribute-specifier-seq following\n \t a declarator-id appertains to the entity that is declared.  */\n       if (declarator->std_attributes != error_mark_node)\n-\t*attrlist = chainon (*attrlist, declarator->std_attributes);\n+\t*attrlist = attr_chainon (*attrlist, declarator->std_attributes);\n       else\n \t/* We should have already diagnosed the issue (c++/78344).  */\n \tgcc_assert (seen_error ());"}, {"sha": "62aaccda23d241b252025a7c8896e9518a541be5", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=da2c56ee601ac696a76e469e33c88313428c5c5a", "patch": "@@ -12557,7 +12557,7 @@ cp_parser_statement (cp_parser* parser, tree in_statement_expr,\n \n /* Append ATTR to attribute list ATTRS.  */\n \n-static tree\n+tree\n attr_chainon (tree attrs, tree attr)\n {\n   if (attrs == error_mark_node)"}, {"sha": "87848a58c278c85cd91320cefc6e13de270c0a98", "filename": "gcc/testsuite/g++.dg/parse/error64.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2c56ee601ac696a76e469e33c88313428c5c5a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror64.C?ref=da2c56ee601ac696a76e469e33c88313428c5c5a", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/96637\n+// { dg-do compile }\n+\n+void foo(int[] alignas[1] alignas(1)){} // { dg-error \"\" }"}]}