{"sha": "fee13acdd89f77a81a63711534f1d0737b965d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVlMTNhY2RkODlmNzdhODFhNjM3MTE1MzRmMWQwNzM3Yjk2NWQxZA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2016-10-10T12:16:00Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2016-10-10T12:16:00Z"}, "message": "re PR target/77738 (Invalid initialisation of ar.lc register)\n\nPR target/77738\n* config/ia64/ia64.md (\"doloop_end\"): Reject if mode of loop\npseudo is not DImode.\n\nFrom-SVN: r240918", "tree": {"sha": "6e365d7d6a8e3f1ea20ab1492c48995128635b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e365d7d6a8e3f1ea20ab1492c48995128635b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fee13acdd89f77a81a63711534f1d0737b965d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee13acdd89f77a81a63711534f1d0737b965d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee13acdd89f77a81a63711534f1d0737b965d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee13acdd89f77a81a63711534f1d0737b965d1d/comments", "author": null, "committer": null, "parents": [{"sha": "208b8b69b660382eed5b1550f0ee945c614a6bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208b8b69b660382eed5b1550f0ee945c614a6bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208b8b69b660382eed5b1550f0ee945c614a6bb4"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "6d27102a8d7b32660b470039cbff8af822555164", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee13acdd89f77a81a63711534f1d0737b965d1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee13acdd89f77a81a63711534f1d0737b965d1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fee13acdd89f77a81a63711534f1d0737b965d1d", "patch": "@@ -1,3 +1,9 @@\n+2016-10-10  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR target/77738\n+\t* config/ia64/ia64.md (\"doloop_end\"): Reject if mode of loop\n+\tpseudo is not DImode.\n+\n 2016-10-10  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* common/config/arc/arc-common.c (arc_option_optimization_table):\n@@ -8,7 +14,7 @@\n \n 2016-10-09  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n-\t* config/rs6000/rs6000.h (TARGET_EFFICIENT_OVERLAPPING_UNALIGNED): \n+\t* config/rs6000/rs6000.h (TARGET_EFFICIENT_OVERLAPPING_UNALIGNED):\n \tAdd macro to say we can efficiently handle overlapping unaligned\n \tloads.\n \t* config/rs6000/rs6000.c (expand_block_compare): Avoid generating\n@@ -207,15 +213,15 @@\n \t(write_ipcp_transformation_info): Remove streaming for alignment\n \tpropagation summary.\n \t(read_ipcp_transformation_info): Remove reading of alignment\n-\tpropagation summary. \n+\tpropagation summary.\n \t(ipcp_update_alignments): Remove.\n \t(ipcp_update_bits): Adjust to set alignment for parameters of pointer\n \ttype.\n \t(ipcp_transform_function): Remove call to ipcp_update_alignments()\n \tand remove assignment to (*ipcp_transformations)[node->uid].alignments.\n \t* ipa-prop.h (ipa_alignment): Remove.\n \t(ipa_jump_func): Remove field alignment.\n-\t(ipcp_transformation_summary): Remove field alignments. \n+\t(ipcp_transformation_summary): Remove field alignments.\n \t* doc/invoke.texi: Mark fipa-cp-alignment as obsolete.\n \t* opts.c (default_options_table): Remove entry for fipa-cp-alignment.\n \t(enable_fdo_optimizations): Remove checking for fipa-cp-alignment.\n@@ -491,7 +497,7 @@\n \twhich is not safe.\n \n 2016-10-06  James Clarke  <jrtc27@jrtc27.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/77759\n \t* config/sparc/sparc.c (classify_data_t): Remove int_regs field.\n@@ -3397,7 +3403,7 @@\n 2016-09-02  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* cfg.c (free_original_copy_tables): Replace second assignment of\n-\tbb_copy = NULL by bb_original = NULL. \n+\tbb_copy = NULL by bb_original = NULL.\n \n 2016-09-02  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -19189,7 +19195,7 @@\n \n \tTweak the pipeline model for Exynos M1\n \n-\t* config/aarch64/aarch64.c (exynosm1_tunings): \tEnable weak prefetching\n+\t* config/aarch64/aarch64.c (exynosm1_tunings):\tEnable weak prefetching\n \tmodel.\n \n 2016-03-17  David Malcolm  <dmalcolm@redhat.com>"}, {"sha": "afde75aa74ddf727269e1644d7a4e9185d9602f0", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee13acdd89f77a81a63711534f1d0737b965d1d/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee13acdd89f77a81a63711534f1d0737b965d1d/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=fee13acdd89f77a81a63711534f1d0737b965d1d", "patch": "@@ -3959,6 +3959,9 @@\n    (use (match_operand 1 \"\" \"\"))]\t; label\n   \"\"\n {\n+  if (GET_MODE (operands[0]) != DImode)\n+    FAIL;\n+\n   emit_jump_insn (gen_doloop_end_internal (gen_rtx_REG (DImode, AR_LC_REGNUM),\n \t\t\t\t\t   operands[1]));\n   DONE;"}]}