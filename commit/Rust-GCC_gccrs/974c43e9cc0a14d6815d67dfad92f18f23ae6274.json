{"sha": "974c43e9cc0a14d6815d67dfad92f18f23ae6274", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc0YzQzZTljYzBhMTRkNjgxNWQ2N2RmYWQ5MmYxOGYyM2FlNjI3NA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-22T21:04:29Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-22T21:04:29Z"}, "message": "sched-deps.c: Use rtx_insn\n\ngcc/\n2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n\n\t* sched-deps.c (maybe_add_or_update_dep_1): Strengthen locals\n\t\"elem\", \"insn\" from rtx to rtx_insn *.\n\t(change_spec_dep_to_hard): Likewise.\n\t(get_back_and_forw_lists): Likewise for local \"con\".\n\t(sd_add_dep): Likewise for locals \"elem\", \"insn\".\n\t(sd_resolve_dep): Likewise for locals \"pro\", \"con\".\n\t(sd_unresolve_dep): Likewise.\n\t(sd_delete_dep): Likewise.\n\t(chain_to_prev_insn): Likewise for local \"pro\".\n\t(find_inc): Likewise for locals \"pro\", \"con\".\n\nFrom-SVN: r214374", "tree": {"sha": "7391eeb248ce2c309cea6967007193cb631e5837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7391eeb248ce2c309cea6967007193cb631e5837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/974c43e9cc0a14d6815d67dfad92f18f23ae6274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974c43e9cc0a14d6815d67dfad92f18f23ae6274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/974c43e9cc0a14d6815d67dfad92f18f23ae6274", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974c43e9cc0a14d6815d67dfad92f18f23ae6274/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bbbc4a3b75978bc6d40b66e966f7ec914a9476f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbbc4a3b75978bc6d40b66e966f7ec914a9476f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbbc4a3b75978bc6d40b66e966f7ec914a9476f"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "04f6628008ee59815126884d5c344d33ce23fc58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/974c43e9cc0a14d6815d67dfad92f18f23ae6274/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/974c43e9cc0a14d6815d67dfad92f18f23ae6274/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=974c43e9cc0a14d6815d67dfad92f18f23ae6274", "patch": "@@ -1,3 +1,16 @@\n+2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sched-deps.c (maybe_add_or_update_dep_1): Strengthen locals\n+\t\"elem\", \"insn\" from rtx to rtx_insn *.\n+\t(change_spec_dep_to_hard): Likewise.\n+\t(get_back_and_forw_lists): Likewise for local \"con\".\n+\t(sd_add_dep): Likewise for locals \"elem\", \"insn\".\n+\t(sd_resolve_dep): Likewise for locals \"pro\", \"con\".\n+\t(sd_unresolve_dep): Likewise.\n+\t(sd_delete_dep): Likewise.\n+\t(chain_to_prev_insn): Likewise for local \"pro\".\n+\t(find_inc): Likewise for locals \"pro\", \"con\".\n+\n 2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtlanal.c (reg_used_between_p): Strengthen local \"insn\" from rtx"}, {"sha": "f2ebff7e46fc64e6c7dfccf59246f449b184e8a0", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/974c43e9cc0a14d6815d67dfad92f18f23ae6274/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/974c43e9cc0a14d6815d67dfad92f18f23ae6274/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=974c43e9cc0a14d6815d67dfad92f18f23ae6274", "patch": "@@ -927,8 +927,8 @@ sd_find_dep_between (rtx pro, rtx con, bool resolved_p)\n static enum DEPS_ADJUST_RESULT\n maybe_add_or_update_dep_1 (dep_t dep, bool resolved_p, rtx mem1, rtx mem2)\n {\n-  rtx elem = DEP_PRO (dep);\n-  rtx insn = DEP_CON (dep);\n+  rtx_insn *elem = DEP_PRO (dep);\n+  rtx_insn *insn = DEP_CON (dep);\n \n   gcc_assert (INSN_P (insn) && INSN_P (elem));\n \n@@ -1118,8 +1118,8 @@ change_spec_dep_to_hard (sd_iterator_def sd_it)\n   dep_node_t node = DEP_LINK_NODE (*sd_it.linkp);\n   dep_link_t link = DEP_NODE_BACK (node);\n   dep_t dep = DEP_NODE_DEP (node);\n-  rtx elem = DEP_PRO (dep);\n-  rtx insn = DEP_CON (dep);\n+  rtx_insn *elem = DEP_PRO (dep);\n+  rtx_insn *insn = DEP_CON (dep);\n \n   move_dep_link (link, INSN_SPEC_BACK_DEPS (insn), INSN_HARD_BACK_DEPS (insn));\n \n@@ -1296,7 +1296,7 @@ get_back_and_forw_lists (dep_t dep, bool resolved_p,\n \t\t\t deps_list_t *back_list_ptr,\n \t\t\t deps_list_t *forw_list_ptr)\n {\n-  rtx con = DEP_CON (dep);\n+  rtx_insn *con = DEP_CON (dep);\n \n   if (!resolved_p)\n     {\n@@ -1322,8 +1322,8 @@ sd_add_dep (dep_t dep, bool resolved_p)\n   dep_node_t n = create_dep_node ();\n   deps_list_t con_back_deps;\n   deps_list_t pro_forw_deps;\n-  rtx elem = DEP_PRO (dep);\n-  rtx insn = DEP_CON (dep);\n+  rtx_insn *elem = DEP_PRO (dep);\n+  rtx_insn *insn = DEP_CON (dep);\n \n   gcc_assert (INSN_P (insn) && INSN_P (elem) && insn != elem);\n \n@@ -1365,8 +1365,8 @@ sd_resolve_dep (sd_iterator_def sd_it)\n {\n   dep_node_t node = DEP_LINK_NODE (*sd_it.linkp);\n   dep_t dep = DEP_NODE_DEP (node);\n-  rtx pro = DEP_PRO (dep);\n-  rtx con = DEP_CON (dep);\n+  rtx_insn *pro = DEP_PRO (dep);\n+  rtx_insn *con = DEP_CON (dep);\n \n   if (dep_spec_p (dep))\n     move_dep_link (DEP_NODE_BACK (node), INSN_SPEC_BACK_DEPS (con),\n@@ -1386,8 +1386,8 @@ sd_unresolve_dep (sd_iterator_def sd_it)\n {\n   dep_node_t node = DEP_LINK_NODE (*sd_it.linkp);\n   dep_t dep = DEP_NODE_DEP (node);\n-  rtx pro = DEP_PRO (dep);\n-  rtx con = DEP_CON (dep);\n+  rtx_insn *pro = DEP_PRO (dep);\n+  rtx_insn *con = DEP_CON (dep);\n \n   if (dep_spec_p (dep))\n     move_dep_link (DEP_NODE_BACK (node), INSN_RESOLVED_BACK_DEPS (con),\n@@ -1428,8 +1428,8 @@ sd_delete_dep (sd_iterator_def sd_it)\n {\n   dep_node_t n = DEP_LINK_NODE (*sd_it.linkp);\n   dep_t dep = DEP_NODE_DEP (n);\n-  rtx pro = DEP_PRO (dep);\n-  rtx con = DEP_CON (dep);\n+  rtx_insn *pro = DEP_PRO (dep);\n+  rtx_insn *con = DEP_CON (dep);\n   deps_list_t con_back_deps;\n   deps_list_t pro_forw_deps;\n \n@@ -1670,7 +1670,7 @@ chain_to_prev_insn (rtx insn)\n   FOR_EACH_DEP (insn, SD_LIST_BACK, sd_it, dep)\n     {\n       rtx i = insn;\n-      rtx pro = DEP_PRO (dep);\n+      rtx_insn *pro = DEP_PRO (dep);\n \n       do\n \t{\n@@ -4725,8 +4725,8 @@ find_inc (struct mem_inc_info *mii, bool backwards)\n   while (sd_iterator_cond (&sd_it, &dep))\n     {\n       dep_node_t node = DEP_LINK_NODE (*sd_it.linkp);\n-      rtx pro = DEP_PRO (dep);\n-      rtx con = DEP_CON (dep);\n+      rtx_insn *pro = DEP_PRO (dep);\n+      rtx_insn *con = DEP_CON (dep);\n       rtx inc_cand = backwards ? pro : con;\n       if (DEP_NONREG (dep) || DEP_MULTIPLE (dep))\n \tgoto next;"}]}