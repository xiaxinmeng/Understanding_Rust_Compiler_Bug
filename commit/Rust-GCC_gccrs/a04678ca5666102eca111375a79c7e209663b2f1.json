{"sha": "a04678ca5666102eca111375a79c7e209663b2f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0Njc4Y2E1NjY2MTAyZWNhMTExMzc1YTc5YzdlMjA5NjYzYjJmMQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-04-25T00:11:34Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-04-25T00:11:34Z"}, "message": "call.c (standard_conversion): Accept conversion between COMPLEX_TYPEs\n\n2000-04-24  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n        * call.c (standard_conversion): Accept conversion between\n        COMPLEX_TYPEs\n\n        * cvt.c (ocp_convert): Handle conversion to COMPLEX_TYPE\n\nFrom-SVN: r33396", "tree": {"sha": "f56014c79f0a2ccea3a08aa31e6271f4994dd52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f56014c79f0a2ccea3a08aa31e6271f4994dd52c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a04678ca5666102eca111375a79c7e209663b2f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04678ca5666102eca111375a79c7e209663b2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04678ca5666102eca111375a79c7e209663b2f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04678ca5666102eca111375a79c7e209663b2f1/comments", "author": null, "committer": null, "parents": [{"sha": "b633b6c0947aa4201a31fb17869fb5157471f58f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b633b6c0947aa4201a31fb17869fb5157471f58f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b633b6c0947aa4201a31fb17869fb5157471f58f"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "295be198d2c966080fca833ec65e766825e3c4eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04678ca5666102eca111375a79c7e209663b2f1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04678ca5666102eca111375a79c7e209663b2f1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a04678ca5666102eca111375a79c7e209663b2f1", "patch": "@@ -1,3 +1,10 @@\n+2000-04-24  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* call.c (standard_conversion): Accept conversion between\n+\tCOMPLEX_TYPEs \n+\n+\t* cvt.c (ocp_convert): Handle conversion to COMPLEX_TYPE\n+\n 2000-04-24  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* decl2.c (finish_file): Remove double setup for accounting"}, {"sha": "d8dda3e24167770278da3f9042ad0de3bdebcce5", "filename": "gcc/cp/call.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04678ca5666102eca111375a79c7e209663b2f1/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04678ca5666102eca111375a79c7e209663b2f1/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a04678ca5666102eca111375a79c7e209663b2f1", "patch": "@@ -679,6 +679,26 @@ standard_conversion (to, from, expr)\n   else if (fromref || (expr && real_lvalue_p (expr)))\n     conv = build_conv (RVALUE_CONV, from, conv);\n \n+   /* Allow conversion between `__complex__' data types  */\n+  if (tcode == COMPLEX_TYPE && fcode == COMPLEX_TYPE)\n+    {\n+      /* The standard conversion sequence to convert FROM to TO is\n+         the standard conversion sequence to perform componentwise\n+         conversion.  */\n+      tree part_conv = standard_conversion\n+        (TREE_TYPE (to), TREE_TYPE (from), NULL_TREE);\n+      \n+      if (part_conv)\n+        {\n+          conv = build_conv (TREE_CODE (part_conv), to, conv);\n+          ICS_STD_RANK (conv) = ICS_STD_RANK (part_conv);\n+        }\n+      else\n+        conv = NULL_TREE;\n+\n+      return conv;\n+    }\n+\n   if (same_type_p (from, to))\n     return conv;\n "}, {"sha": "376cdaa3460666a135675e9b884ef657079dad79", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04678ca5666102eca111375a79c7e209663b2f1/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04678ca5666102eca111375a79c7e209663b2f1/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=a04678ca5666102eca111375a79c7e209663b2f1", "patch": "@@ -692,6 +692,10 @@ ocp_convert (type, expr, convtype, flags)\n \t   that can result in infinite recursion; fold will call\n \t   convert, which will call ocp_convert, etc.  */\n \treturn e;\n+      /* For complex data types, we need to perform componentwise\n+         conversion.  */\n+      else if (TREE_CODE (type) == COMPLEX_TYPE)\n+        return fold (convert_to_complex (type, e));\n       else\n \treturn fold (build1 (NOP_EXPR, type, e));\n     }"}]}