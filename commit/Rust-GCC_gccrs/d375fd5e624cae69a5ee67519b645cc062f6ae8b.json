{"sha": "d375fd5e624cae69a5ee67519b645cc062f6ae8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM3NWZkNWU2MjRjYWU2OWE1ZWU2NzUxOWI2NDVjYzA2MmY2YWU4Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-21T10:05:43Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-21T10:05:43Z"}, "message": "gcc/\n\t* config/mips/mips.c (mips_set_mips16_mode) Say sorry for hard-float\n\tMIPS16 code unless using o32 or o64.  \n\ngcc/testsuite/\n\t* gcc.target/mips/mips.exp (setup_mips_tests): Set mips_mips16.\n\t(dg-mips-options): Skip tests that specify an ABI other than o32\n\tand o64 if generating MIPS16 hard-float code.\n\nFrom-SVN: r129530", "tree": {"sha": "9a5321fc1de0f412d45a0160fb507e688820ea20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a5321fc1de0f412d45a0160fb507e688820ea20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d375fd5e624cae69a5ee67519b645cc062f6ae8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d375fd5e624cae69a5ee67519b645cc062f6ae8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d375fd5e624cae69a5ee67519b645cc062f6ae8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d375fd5e624cae69a5ee67519b645cc062f6ae8b/comments", "author": null, "committer": null, "parents": [{"sha": "8d0e5316e7e054e85102d36b96d24cce21b26bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0e5316e7e054e85102d36b96d24cce21b26bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0e5316e7e054e85102d36b96d24cce21b26bcd"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "b2356a6eb04452d42131b45c4c767a4524abae9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d375fd5e624cae69a5ee67519b645cc062f6ae8b", "patch": "@@ -1,3 +1,8 @@\n+2007-10-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c (mips_set_mips16_mode) Say sorry for hard-float\n+\tMIPS16 code unless using o32 or o64.  \n+\n 2007-10-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (mips_cannot_change_mode_class): Don't check"}, {"sha": "9a839c4384006f01870e57c0fdd8ea8eb75ef6bb", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d375fd5e624cae69a5ee67519b645cc062f6ae8b", "patch": "@@ -11632,6 +11632,9 @@ mips_set_mips16_mode (int mips16_p)\n \n       if (flag_pic || TARGET_ABICALLS)\n \tsorry (\"MIPS16 PIC\");\n+\n+      if (TARGET_HARD_FLOAT_ABI && !TARGET_OLDABI)\n+\tsorry (\"hard-float MIPS16 code for ABIs other than o32 and o64\");\n     }\n   else\n     {"}, {"sha": "a0b4c2e1f7157846aa4c9eb6a32ddfa4f800f1f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d375fd5e624cae69a5ee67519b645cc062f6ae8b", "patch": "@@ -1,3 +1,9 @@\n+2007-10-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* gcc.target/mips/mips.exp (setup_mips_tests): Set mips_mips16.\n+\t(dg-mips-options): Skip tests that specify an ABI other than o32\n+\tand o64 if generating MIPS16 hard-float code.\n+\n 2007-10-21  Ira Rosen  <irar@il.ibm.com>\n             Revital Eres  <eres@il.ibm.com>\n "}, {"sha": "7a542065376b6ac67e8edf0b526de1f69afcec9d", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d375fd5e624cae69a5ee67519b645cc062f6ae8b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=d375fd5e624cae69a5ee67519b645cc062f6ae8b", "patch": "@@ -31,6 +31,7 @@ load_lib gcc-dg.exp\n #    $mips_isa:\t\t the ISA level specified by __mips\n #    $mips_isa_rev:\t the ISA revision specified by __mips_isa_rev\n #    $mips_arch:\t the architecture specified by _MIPS_ARCH\n+#    $mips_mips16:\t true if MIPS16 output is selected\n #    $mips_gp:\t\t the number of bytes in a general register\n #    $mips_fp:\t\t the number of bytes in a floating-point register\n #    $mips_float:\t \"hard\" or \"soft\"\n@@ -48,6 +49,7 @@ proc setup_mips_tests {} {\n     global mips_isa\n     global mips_isa_rev\n     global mips_arch\n+    global mips_mips16\n     global mips_gp\n     global mips_fp\n     global mips_float\n@@ -75,6 +77,9 @@ proc setup_mips_tests {} {\n \tint isa_rev = 1;\n \t#endif\n \tconst char *arch = _MIPS_ARCH;\n+\t#ifdef __mips16\n+\tint mips16 = 1;\n+\t#endif\n \t#ifdef __mips64\n \tint gp = 64;\n \t#else\n@@ -105,6 +110,7 @@ proc setup_mips_tests {} {\n     regexp {isa = ([^;]*)} $output dummy mips_isa\n     regexp {isa_rev = ([^;]*)} $output dummy mips_isa_rev\n     regexp {arch = \"([^\"]*)} $output dummy mips_arch\n+    set mips_mips16 [regexp {mips16 = 1} $output]\n     regexp {gp = ([^;]*)} $output dummy mips_gp\n     regexp {fp = ([^;]*)} $output dummy mips_fp\n     regexp {float = \"([^\"]*)} $output dummy mips_float\n@@ -145,7 +151,9 @@ proc setup_mips_tests {} {\n #\n #    -mabi=*\n #\tForce a particular ABI.  Skip the test if the multilib flags\n-#\tforce a specific ABI or a different register size.\n+#\tforce a specific ABI or a different register size.  If testing\n+#\tMIPS16 multilibs, try to force -msoft-float for ABIs other than\n+#\to32 and o64, and skip the test if this is not possible.\n #\n #    -march=*\n #    -mips*\n@@ -183,6 +191,7 @@ proc dg-mips-options {args} {\n     global mips_isa\n     global mips_isa_rev\n     global mips_arch\n+    global mips_mips16\n     global mips_gp\n     global mips_fp\n     global mips_float\n@@ -205,6 +214,15 @@ proc dg-mips-options {args} {\n \tif {[string match -mpaired-single $flag]\n \t    && [lsearch $flags -mfp*] < 0} {\n \t    append flags \" -mfp64\"\n+\t} elseif {[regexp -- {^-mabi=(.*)} $flag dummy abi]\n+\t\t  && $mips_mips16\n+\t\t  && $abi != \"32\"\n+\t\t  && $abi != \"o64\"} {\n+\t    if {[lsearch $flags -mhard-float] >= 0} {\n+\t\tset matches 0\n+\t    } else {\n+\t\tappend flags \" -msoft-float\"\n+\t    }\n \t}\n     }\n     foreach flag $flags {"}]}