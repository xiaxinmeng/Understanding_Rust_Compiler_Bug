{"sha": "2fd1350624de57d3784c80efbf730ef8aff5cdc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZkMTM1MDYyNGRlNTdkMzc4NGM4MGVmYmY3MzBlZjhhZmY1Y2RjNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-27T16:45:15Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-27T16:45:15Z"}, "message": "linux.h: Fix a comment typo.\n\n\t* config/i386/linux.h: Fix a comment typo.\n\t* doc/extend.texi: Fix a typo.\n\nFrom-SVN: r91377", "tree": {"sha": "1ca2cf9efc14485f4437057a3d3b6a5b6552c921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ca2cf9efc14485f4437057a3d3b6a5b6552c921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fd1350624de57d3784c80efbf730ef8aff5cdc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd1350624de57d3784c80efbf730ef8aff5cdc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fd1350624de57d3784c80efbf730ef8aff5cdc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd1350624de57d3784c80efbf730ef8aff5cdc4/comments", "author": null, "committer": null, "parents": [{"sha": "086aa12e9c57cef4e4872a179cf1610487215f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/086aa12e9c57cef4e4872a179cf1610487215f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/086aa12e9c57cef4e4872a179cf1610487215f19"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "1319cfa4262d3a58797f81a501d21b994750ccd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd1350624de57d3784c80efbf730ef8aff5cdc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd1350624de57d3784c80efbf730ef8aff5cdc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fd1350624de57d3784c80efbf730ef8aff5cdc4", "patch": "@@ -1,3 +1,8 @@\n+2004-11-27  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/i386/linux.h: Fix a comment typo.\n+\t* doc/extend.texi: Fix a typo.\n+\n 2004-11-27  Jeff Law  <law@redhat.com>\n \n \t* tree-cfg.c (cleanup_tree_cfg): Also return true if blocks"}, {"sha": "bbdfef6b1ba06cf81e142ad70b96b7d94f417006", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd1350624de57d3784c80efbf730ef8aff5cdc4/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd1350624de57d3784c80efbf730ef8aff5cdc4/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=2fd1350624de57d3784c80efbf730ef8aff5cdc4", "patch": "@@ -183,5 +183,5 @@ Boston, MA 02111-1307, USA.  */\n \n #define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\"\n \n-/* This macro may be overriden in i386/k*bsd-gnu.h */\n+/* This macro may be overridden in i386/k*bsd-gnu.h.  */\n #define REG_NAME(reg) reg"}, {"sha": "f4134b164b6ed2f4406bd24532e0bddf2e4498b5", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd1350624de57d3784c80efbf730ef8aff5cdc4/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd1350624de57d3784c80efbf730ef8aff5cdc4/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=2fd1350624de57d3784c80efbf730ef8aff5cdc4", "patch": "@@ -8476,7 +8476,7 @@ int vec_any_out (vector float, vector float);\n @subsection SPARC VIS Built-in Functions\n \n GCC supports SIMD operations on the SPARC using both the generic vector\n-extentions (@pxref{Vector Extensions}) as well as built-in functions for\n+extensions (@pxref{Vector Extensions}) as well as built-in functions for\n the SPARC Visual Instruction Set (VIS).  When you use the @option{-mvis}\n switch, the VIS extension is exposed as the following built-in functions:\n "}]}