{"sha": "b81fd0f4f23b8a207fd2ac04f88b995843d67b6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxZmQwZjRmMjNiOGEyMDdmZDJhYzA0Zjg4Yjk5NTg0M2Q2N2I2Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-23T03:46:26Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-23T03:46:26Z"}, "message": "(basic_induction_var): Inside PLUS, when looking for promoted\nvar, make sure it's a REG.\n\nFrom-SVN: r2210", "tree": {"sha": "14f93a5fde374eb5bc2c847e6b8a13e60b9d2c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14f93a5fde374eb5bc2c847e6b8a13e60b9d2c1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b81fd0f4f23b8a207fd2ac04f88b995843d67b6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81fd0f4f23b8a207fd2ac04f88b995843d67b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81fd0f4f23b8a207fd2ac04f88b995843d67b6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81fd0f4f23b8a207fd2ac04f88b995843d67b6f/comments", "author": null, "committer": null, "parents": [{"sha": "8c153768f4f545dd2c50dc016d7def08348cb643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c153768f4f545dd2c50dc016d7def08348cb643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c153768f4f545dd2c50dc016d7def08348cb643"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "87509be4b146eef9896dfb5621d148666673efa4", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81fd0f4f23b8a207fd2ac04f88b995843d67b6f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81fd0f4f23b8a207fd2ac04f88b995843d67b6f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=b81fd0f4f23b8a207fd2ac04f88b995843d67b6f", "patch": "@@ -4693,7 +4693,8 @@ basic_induction_var (x, dest_reg, p, inc_val, mult_val)\n  \targ = XEXP (x, 1);\n       else if (XEXP (x, 1) == dest_reg\n \t       || (GET_CODE (XEXP (x, 1)) == SUBREG\n-\t\t   && SUBREG_PROMOTED_VAR_P (XEXP (x, 1))))\n+\t\t   && SUBREG_PROMOTED_VAR_P (XEXP (x, 1))\n+\t\t   && SUBREG_REG (XEXP (x, 1)) == dest_reg))\n \targ = XEXP (x, 0);\n       else\n  \treturn 0;"}]}