{"sha": "6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkMmI4ZWM4ZGRkYWRjZTJmZmYyMWMyZjIyYTcxMTkyYTJlNGU0Mw==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2018-10-02T17:31:53Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2018-10-02T17:31:53Z"}, "message": "re PR target/87474 (ICE in extract_insn, at recog.c:2305)\n\n2018-10-02  Aaron Sawdey  <acsawdey@linux.ibm.com>\n\n\tPR target/87474\n\t* config/rs6000/rs6000-string.c (expand_strn_compare): Check that both\n\tP8_VECTOR and VSX are enabled.\n\nFrom-SVN: r264799", "tree": {"sha": "8d96be14c9214786133cc91e550bc7c1aaca05e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d96be14c9214786133cc91e550bc7c1aaca05e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "9906789b510f375c1914cd49dec012aaa0f5ec83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43", "patch": "@@ -1,3 +1,9 @@\n+2018-10-02  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\tPR target/87474\n+\t* config/rs6000/rs6000-string.c (expand_strn_compare): Check that both\n+\tP8_VECTOR and VSX are enabled.\n+\n 2018-10-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/driver-native.c (s390_host_detect_local_cpu): Add"}, {"sha": "9c25bad97a1848ba4da102acfd85f76cbf546164", "filename": "gcc/config/rs6000/rs6000-string.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-string.c?ref=6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43", "patch": "@@ -2205,6 +2205,7 @@ emit_final_str_compare_vec (rtx str1, rtx str2, rtx result,\n     }\n   else\n     {\n+      gcc_assert (TARGET_P8_VECTOR);\n       rtx diffix = gen_reg_rtx (DImode);\n       rtx result_gbbd = gen_reg_rtx (V16QImode);\n       /* Since each byte of the input is either 00 or FF, the bytes in \n@@ -2313,9 +2314,12 @@ expand_strn_compare (rtx operands[], int no_length)\n   /* Is it OK to use vec/vsx for this. TARGET_VSX means we have at\n      least POWER7 but we use TARGET_EFFICIENT_UNALIGNED_VSX which is\n      at least POWER8.  That way we can rely on overlapping compares to\n-     do the final comparison of less than 16 bytes.  Also I do not want\n-     to deal with making this work for 32 bits.  */\n-  int use_vec = (bytes >= 16 && !TARGET_32BIT && TARGET_EFFICIENT_UNALIGNED_VSX);\n+     do the final comparison of less than 16 bytes.  Also I do not\n+     want to deal with making this work for 32 bits.  In addition, we\n+     have to make sure that we have at least P8_VECTOR (we don't allow\n+     P9_VECTOR without P8_VECTOR).  */\n+  int use_vec = (bytes >= 16 && !TARGET_32BIT\n+\t\t && TARGET_EFFICIENT_UNALIGNED_VSX && TARGET_P8_VECTOR);\n \n   if (use_vec)\n     required_align = 16;"}]}