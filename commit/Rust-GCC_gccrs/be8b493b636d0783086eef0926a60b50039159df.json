{"sha": "be8b493b636d0783086eef0926a60b50039159df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU4YjQ5M2I2MzZkMDc4MzA4NmVlZjA5MjZhNjBiNTAwMzkxNTlkZg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-06-29T02:01:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-29T02:01:08Z"}, "message": "* mips.md (leasi, leadi): New patterns.\n\nFrom-SVN: r27827", "tree": {"sha": "0a52a4dd401943f2037298692284b840f38a7655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a52a4dd401943f2037298692284b840f38a7655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be8b493b636d0783086eef0926a60b50039159df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8b493b636d0783086eef0926a60b50039159df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8b493b636d0783086eef0926a60b50039159df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8b493b636d0783086eef0926a60b50039159df/comments", "author": null, "committer": null, "parents": [{"sha": "35393415f4485371bdde5310515c1e44445ba428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35393415f4485371bdde5310515c1e44445ba428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35393415f4485371bdde5310515c1e44445ba428"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "793d9d0f21f1fbd28c5a808be5310bfbdbaeace4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8b493b636d0783086eef0926a60b50039159df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8b493b636d0783086eef0926a60b50039159df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be8b493b636d0783086eef0926a60b50039159df", "patch": "@@ -1,5 +1,7 @@\n Tue Jun 29 01:37:53 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* mips.md (leasi, leadi): New patterns.\n+\n \t* expr.c (emit_block_move): Properly handle case where one of the\n \tblock move arguments has a queued increment or decrement.\n \t(clear_storage): Similarly.  Fix formatting goof."}, {"sha": "c3a6ba7068c5e36d84488fd059ce2baeadd9fbaa", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8b493b636d0783086eef0926a60b50039159df/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8b493b636d0783086eef0926a60b50039159df/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=be8b493b636d0783086eef0926a60b50039159df", "patch": "@@ -10395,3 +10395,27 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set_attr \"type\"\t\"branch\")\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"8\")])\n+\n+;; For the rare case where we need to load an address into a register\n+;; that can not be recognized by the normal movsi/addsi instructions.\n+;; I have no idea how many insns this can actually generate.  It should\n+;; be rare, so over-estimating as 10 instructions should not have any\n+;; real performance impact.\n+(define_insn \"leasi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (match_operand:SI 1 \"address_operand\" \"p\"))]\n+  \"Pmode == SImode\"\n+  \"la %0,%a1\"\n+  [(set_attr \"type\"\t\"arith\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"\t\"40\")])\n+\n+;; Similarly for targets where we have 64bit pointers.\n+(define_insn \"leadi\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+        (match_operand:DI 1 \"address_operand\" \"p\"))]\n+  \"Pmode == DImode\"\n+  \"la %0,%a1\"\n+  [(set_attr \"type\"\t\"arith\")\n+   (set_attr \"mode\"\t\"DI\")\n+   (set_attr \"length\"\t\"40\")])"}]}