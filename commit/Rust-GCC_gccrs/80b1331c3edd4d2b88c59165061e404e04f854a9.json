{"sha": "80b1331c3edd4d2b88c59165061e404e04f854a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiMTMzMWMzZWRkNGQyYjg4YzU5MTY1MDYxZTQwNGUwNGY4NTRhOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-06-23T20:10:09Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-06-23T20:10:09Z"}, "message": "parse.y (parse_scoped_id): New function.\n\n\t* parse.y (parse_scoped_id): New function.\n\t(primary): Use it.\n\t* cp-tree.h (do_scoped_id): Adjust declaration.\n\t* lex.c (do_scoped_id): Remove call to yylex.\n\t* decl2.c (build_expr_from_tree): Adjust use of do_scoped_id.\n\t* typeck2.c (add_exception_specifier): Use tree_cons, rather than\n\texpanding it inline.\n\nFrom-SVN: r54930", "tree": {"sha": "7cc2358a9229ff7a7f7a326aac644a117e0561c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cc2358a9229ff7a7f7a326aac644a117e0561c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b1331c3edd4d2b88c59165061e404e04f854a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b1331c3edd4d2b88c59165061e404e04f854a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b1331c3edd4d2b88c59165061e404e04f854a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b1331c3edd4d2b88c59165061e404e04f854a9/comments", "author": null, "committer": null, "parents": [{"sha": "08c7ae5a5103100df7b61e27d7e03452c01af9f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c7ae5a5103100df7b61e27d7e03452c01af9f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c7ae5a5103100df7b61e27d7e03452c01af9f7"}], "stats": {"total": 65, "additions": 40, "deletions": 25}, "files": [{"sha": "6cbaf2a376f8b7ffff95640cb1b4fe796e4490d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=80b1331c3edd4d2b88c59165061e404e04f854a9", "patch": "@@ -1,3 +1,13 @@\n+2002-06-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* parse.y (parse_scoped_id): New function.\n+\t(primary): Use it.\n+\t* cp-tree.h (do_scoped_id): Adjust declaration.\n+\t* lex.c (do_scoped_id): Remove call to yylex.\n+\t* decl2.c (build_expr_from_tree): Adjust use of do_scoped_id.\n+\t* typeck2.c (add_exception_specifier): Use tree_cons, rather than\n+\texpanding it inline.\n+\t\n 2002-06-23  Matt Thomas  <matt@3am-software.com>\n \n \t* decl.c (finish_function): Change \"#ifdef VMS_TARGET\" to"}, {"sha": "6b39adade388553a02f5b95d15464ab13c53842c", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=80b1331c3edd4d2b88c59165061e404e04f854a9", "patch": "@@ -4044,7 +4044,7 @@ extern void note_list_got_semicolon\t\tPARAMS ((tree));\n extern void do_pending_lang_change\t\tPARAMS ((void));\n extern void see_typename\t\t\tPARAMS ((void));\n extern tree do_identifier\t\t\tPARAMS ((tree, int, tree));\n-extern tree do_scoped_id\t\t\tPARAMS ((tree, int));\n+extern tree do_scoped_id\t\t\tPARAMS ((tree, tree));\n extern tree identifier_typedecl_value\t\tPARAMS ((tree));\n extern tree build_lang_decl\t\t\tPARAMS ((enum tree_code, tree, tree));\n extern void retrofit_lang_decl\t\t\tPARAMS ((tree));"}, {"sha": "72930c233b72b05f18a23c18d09cbc203e641198", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=80b1331c3edd4d2b88c59165061e404e04f854a9", "patch": "@@ -3652,7 +3652,10 @@ build_expr_from_tree (t)\n \n     case LOOKUP_EXPR:\n       if (LOOKUP_EXPR_GLOBAL (t))\n-\treturn do_scoped_id (TREE_OPERAND (t, 0), 0);\n+\t{\n+\t  tree token = TREE_OPERAND (t, 0);\n+\t  return do_scoped_id (token, IDENTIFIER_GLOBAL_VALUE (token));\n+\t}\n       else\n \treturn do_identifier (TREE_OPERAND (t, 0), 0, NULL_TREE);\n "}, {"sha": "a5e0b1068279a62f93f6a11d29c5b324332e9640", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=80b1331c3edd4d2b88c59165061e404e04f854a9", "patch": "@@ -1281,24 +1281,10 @@ do_identifier (token, parsing, args)\n }\n \n tree\n-do_scoped_id (token, parsing)\n+do_scoped_id (token, id)\n      tree token;\n-     int parsing;\n+     tree id;\n {\n-  tree id;\n-  /* during parsing, this is ::name. Otherwise, it is black magic. */\n-  if (parsing)\n-    {\n-      id = make_node (CPLUS_BINDING);\n-      if (!qualified_lookup_using_namespace (token, global_namespace, id, 0))\n-\tid = NULL_TREE;\n-      else\n-\tid = BINDING_VALUE (id);\n-    }\n-  else\n-    id = IDENTIFIER_GLOBAL_VALUE (token);\n-  if (parsing && yychar == YYEMPTY)\n-    yychar = yylex ();\n   if (!id || (TREE_CODE (id) == FUNCTION_DECL\n \t      && DECL_ANTICIPATED (id)))\n     {"}, {"sha": "31a9ee007cb7ec05550fdfdc7f6f13b8e4212918", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=80b1331c3edd4d2b88c59165061e404e04f854a9", "patch": "@@ -130,6 +130,7 @@ static tree parse_bitfield PARAMS ((tree, tree, tree));\n static tree parse_method PARAMS ((tree, tree, tree));\n static void frob_specs PARAMS ((tree, tree));\n static void check_class_key PARAMS ((tree, tree));\n+static tree parse_scoped_id PARAMS ((tree));\n \n /* Cons up an empty parameter list.  */\n static inline tree\n@@ -1706,14 +1707,14 @@ primary:\n \t\t  check_for_new_type (\"typeid\", $3);\n \t\t  $$ = get_typeid (type); }\n \t| global_scope IDENTIFIER\n-\t\t{ $$ = do_scoped_id ($2, 1); }\n+\t\t{ $$ = parse_scoped_id ($2); }\n \t| global_scope template_id\n \t\t{ $$ = $2; }\n \t| global_scope operator_name\n \t\t{\n \t\t  got_scope = NULL_TREE;\n \t\t  if (TREE_CODE ($2) == IDENTIFIER_NODE)\n-\t\t    $$ = do_scoped_id ($2, 1);\n+\t\t    $$ = parse_scoped_id ($2);\n \t\t  else\n \t\t    $$ = $2;\n \t\t}\n@@ -4022,4 +4023,23 @@ free_parser_stacks ()\n     }\n }\n \n+/* Return the value corresponding to TOKEN in the global scope.  */\n+\n+static tree\n+parse_scoped_id (token)\n+     tree token;\n+{\n+  tree id;\n+\n+  id = make_node (CPLUS_BINDING);\n+  if (!qualified_lookup_using_namespace (token, global_namespace, id, 0))\n+    id = NULL_TREE;\n+  else\n+    id = BINDING_VALUE (id);\n+  if (yychar == YYEMPTY)\n+    yychar = yylex();\n+\n+  return do_scoped_id (token, id);\n+}\n+\n #include \"gt-cp-parse.h\""}, {"sha": "2cb4cc3b01ef80ed0013c4c92ccdee197a892e35", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b1331c3edd4d2b88c59165061e404e04f854a9/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=80b1331c3edd4d2b88c59165061e404e04f854a9", "patch": "@@ -1372,11 +1372,7 @@ add_exception_specifier (list, spec, complain)\n         if (same_type_p (TREE_VALUE (probe), spec))\n           break;\n       if (!probe)\n-        {\n-          spec = build_tree_list (NULL_TREE, spec);\n-          TREE_CHAIN (spec) = list;\n-          list = spec;\n-        }\n+\tlist = tree_cons (NULL_TREE, spec, list);\n     }\n   else if (complain)\n     cxx_incomplete_type_error (NULL_TREE, core);"}]}