{"sha": "afab5269db6d67a85a4397e00bfd9879e9ee888a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZhYjUyNjlkYjZkNjdhODVhNDM5N2UwMGJmZDk4NzllOWVlODg4YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-20T12:52:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-20T12:52:47Z"}, "message": "Initial revision\n\nFrom-SVN: r14265", "tree": {"sha": "c82a82e2e67502775b2f49810abd71fb8f1a08e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c82a82e2e67502775b2f49810abd71fb8f1a08e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afab5269db6d67a85a4397e00bfd9879e9ee888a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afab5269db6d67a85a4397e00bfd9879e9ee888a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afab5269db6d67a85a4397e00bfd9879e9ee888a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afab5269db6d67a85a4397e00bfd9879e9ee888a/comments", "author": null, "committer": null, "parents": [{"sha": "618d2e700bdaa535eb93a5227bef9ab86075bfc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/618d2e700bdaa535eb93a5227bef9ab86075bfc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/618d2e700bdaa535eb93a5227bef9ab86075bfc2"}], "stats": {"total": 134, "additions": 134, "deletions": 0}, "files": [{"sha": "67f5c6f0503713e8d9a0a9d71a74cc1cdc75e192", "filename": "gcc/config/arm/linux-gas.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afab5269db6d67a85a4397e00bfd9879e9ee888a/gcc%2Fconfig%2Farm%2Flinux-gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afab5269db6d67a85a4397e00bfd9879e9ee888a/gcc%2Fconfig%2Farm%2Flinux-gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-gas.h?ref=afab5269db6d67a85a4397e00bfd9879e9ee888a", "patch": "@@ -0,0 +1,33 @@\n+/* Definitions of target machine for GNU compiler.  ARM Linux version.\n+   Copyright (C) 1997 Free Software Foundation, Inc.\n+   Contributed by Russell King  <rmk92@ecs.soton.ac.uk>.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Limit the length of a stabs entry (for the broken Acorn assembler) */\n+#define DBX_CONTIN_LENGTH 80\n+\n+#include \"arm/linux.h\"\n+\n+/*\n+ * We are using GAS, so stabs should work.\n+ */\n+\n+#ifndef DBX_DEBUGGING_INFO\n+#define DBX_DEBUGGING_INFO 1\n+#endif"}, {"sha": "32edc6224f600c676205e2f953d0664f2804839c", "filename": "gcc/config/arm/linux.h", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afab5269db6d67a85a4397e00bfd9879e9ee888a/gcc%2Fconfig%2Farm%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afab5269db6d67a85a4397e00bfd9879e9ee888a/gcc%2Fconfig%2Farm%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux.h?ref=afab5269db6d67a85a4397e00bfd9879e9ee888a", "patch": "@@ -0,0 +1,85 @@\n+/* Definitions for ARM running Linux\n+   Copyright (C) 1993, 1994, 1997 Free Software Foundation, Inc.\n+   Adapted from ARM Linux by Russell King  <rmk92@ecs.soton.ac.uk>.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include <linux-aout.h>\n+\n+/* these are different... */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+\t\"%{pg:gcrt0.o%s} %{!pg:%{p:gcrt0.o%s} %{!p:crt0.o%s}} %{static:-static}\"\n+\n+#undef ASM_APP_ON\n+#undef ASM_APP_OFF\n+#undef COMMENT_BEGIN\n+ \n+/* We default to ARM3.  */\n+#define __DEFAULT_CPP \"-D__arm3__\"\n+#define __DEFAULT_ASM \"-marm3\"\n+#define __DEFAULT_MLB \"m3\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \\\n+\t\"-Dunix -Darm -Dlinux -Asystem(unix) -Asystem(posix) -Acpu(arm) -Amachine(arm)\"\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \\\n+\t\"%{m2:-D__arm2__} %{m3:-D__arm3__} %{m6:-D__arm6__} %{m7:-D__arm7__} \" \\\n+\t\"%{!m2:%{!m3:%{!m6:%{!m7:\" __DEFAULT_CPP \"}}}} %{posix:-D_POSIX_SOURCE}\"\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \\\n+\t\"%{m2:-marm2} %{m3:-marm3} %{m6:-marm6} %{m7:-marm7} \" \\\n+\t\"%{!m2:%{!m3:%{!m6:%{!m7:\" __DEFAULT_ASM \"}}}}\"\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \\\n+\t\"%{mieee-fp:-lieee} %{p:-lgmon} %{pg:-lgmon} %{!ggdb:-lc} %{ggdb:-lg}\"\n+\n+#undef SIZE_TYPE\n+#define SIZE_TYPE \"unsigned int\"\n+\n+#undef PTRDIFF_TYPE\n+#define PTRDIFF_TYPE \"int\"\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"long int\"\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE BITS_PER_WORD\n+\n+#define HANDLE_SYSV_PRAGMA\n+  \n+/* Run-time Target Specification.  */\n+#define TARGET_VERSION  \\\n+  fputs (\" (ARM Linux/a.out)\", stderr);\n+\n+/* This is used in ASM_FILE_START */\n+#define ARM_OS_NAME \"Linux\"\n+\n+/* Unsigned chars produces much better code than signed.  */\n+#define DEFAULT_SIGNED_CHAR 0\n+\n+/* Maths operation domain error number, EDOM */\n+#define TARGET_EDOM 33\n+#include \"arm/arm.h\"\n+\n+#undef MULTILIB_DEFAULTS\n+#define MULTILIB_DEFAULTS { __DEFAULT_MLB }"}, {"sha": "194604d7ed1632d9f7b570207e252233dffe1a67", "filename": "gcc/config/arm/t-linux", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afab5269db6d67a85a4397e00bfd9879e9ee888a/gcc%2Fconfig%2Farm%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afab5269db6d67a85a4397e00bfd9879e9ee888a/gcc%2Fconfig%2Farm%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-linux?ref=afab5269db6d67a85a4397e00bfd9879e9ee888a", "patch": "@@ -0,0 +1,16 @@\n+# Just for these, we omit the frame pointer since it makes such a big\n+# difference.  It is then pointless adding debugging.\n+LIBGCC2_CFLAGS=-O2 -fomit-frame-pointer $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) -g0\n+\n+# Don't build enquire\n+ENQUIRE=\n+\n+LIBGCC1 = libgcc1-asm.a\n+LIB1ASMSRC = arm/lib1funcs-linux.asm\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls\n+\n+MULTILIB_OPTIONS = m2/m3/m6/m7\n+MULTILIB_DIRNAMES =\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}]}