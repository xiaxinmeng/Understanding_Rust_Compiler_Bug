{"sha": "c5a1e3d69af23fefe755f18ece4d76542766aa46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhMWUzZDY5YWYyM2ZlZmU3NTVmMThlY2U0ZDc2NTQyNzY2YWE0Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-07T22:05:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-07T22:05:49Z"}, "message": "re PR rtl-optimization/8634 (incorrect code for inlining of memcpy under -O2)\n\n        PR opt/8634\n        * function.c (purge_addressof_1): Don't try arithmetics for\n        unchanging memories.\n\nFrom-SVN: r65351", "tree": {"sha": "4ec74d162d70908bbc98df381fe98e72aa2b53db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ec74d162d70908bbc98df381fe98e72aa2b53db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5a1e3d69af23fefe755f18ece4d76542766aa46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a1e3d69af23fefe755f18ece4d76542766aa46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a1e3d69af23fefe755f18ece4d76542766aa46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a1e3d69af23fefe755f18ece4d76542766aa46/comments", "author": null, "committer": null, "parents": [{"sha": "7760d7f9b7b6d6afbe475bbe812592cc05d9b735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7760d7f9b7b6d6afbe475bbe812592cc05d9b735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7760d7f9b7b6d6afbe475bbe812592cc05d9b735"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b3cf6563425b43af741cffa73b1f20c6cd0ce80e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a1e3d69af23fefe755f18ece4d76542766aa46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a1e3d69af23fefe755f18ece4d76542766aa46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5a1e3d69af23fefe755f18ece4d76542766aa46", "patch": "@@ -1,3 +1,9 @@\n+2003-04-07  Richard Henderson  <rth@redhat.com>\n+\n+        PR opt/8634\n+        * function.c (purge_addressof_1): Don't try arithmetics for\n+        unchanging memories.\n+\n 2003-04-07  Janis Johnson  <janis187@us.ibm.com>\n \n \t* doc/sourcebuild.texi (Test Suites): Document testing support for"}, {"sha": "0b4f93fa6278e5f31b44d29a6db58b641afcb5a9", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a1e3d69af23fefe755f18ece4d76542766aa46/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a1e3d69af23fefe755f18ece4d76542766aa46/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=c5a1e3d69af23fefe755f18ece4d76542766aa46", "patch": "@@ -3140,10 +3140,16 @@ purge_addressof_1 (loc, insn, force, store, ht)\n \t  size_x = GET_MODE_BITSIZE (GET_MODE (x));\n \t  size_sub = GET_MODE_BITSIZE (GET_MODE (sub));\n \n+\t  /* Do not frob unchanging MEMs.  If a later reference forces the\n+\t     pseudo to the stack, we can wind up with multiple writes to\n+\t     an unchanging memory, which is invalid.  */\n+\t  if (RTX_UNCHANGING_P (x) && size_x != size_sub)\n+\t    ;\n+\n \t  /* Don't even consider working with paradoxical subregs,\n \t     or the moral equivalent seen here.  */\n-\t  if (size_x <= size_sub\n-\t      && int_mode_for_mode (GET_MODE (sub)) != BLKmode)\n+\t  else if (size_x <= size_sub\n+\t           && int_mode_for_mode (GET_MODE (sub)) != BLKmode)\n \t    {\n \t      /* Do a bitfield insertion to mirror what would happen\n \t\t in memory.  */"}]}