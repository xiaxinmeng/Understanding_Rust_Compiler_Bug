{"sha": "a8572b62e71dc5b453f3390e4e9111b466201fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg1NzJiNjJlNzFkYzViNDUzZjMzOTBlNGU5MTExYjQ2NjIwMWZjOA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-12-19T10:43:11Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-12-19T10:43:11Z"}, "message": "Increase clock resolution for system_clock_8.\n\nFrom-SVN: r155359", "tree": {"sha": "f968a2650357b12c8888ff6b37091a65baa18b63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f968a2650357b12c8888ff6b37091a65baa18b63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8572b62e71dc5b453f3390e4e9111b466201fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8572b62e71dc5b453f3390e4e9111b466201fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8572b62e71dc5b453f3390e4e9111b466201fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8572b62e71dc5b453f3390e4e9111b466201fc8/comments", "author": null, "committer": null, "parents": [{"sha": "2a5e9d165ef6cc2cb3b783b5aa1c4a37dfd166aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5e9d165ef6cc2cb3b783b5aa1c4a37dfd166aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5e9d165ef6cc2cb3b783b5aa1c4a37dfd166aa"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "162915287a5d672baf99a1c29733038dee61d01b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8572b62e71dc5b453f3390e4e9111b466201fc8/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8572b62e71dc5b453f3390e4e9111b466201fc8/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a8572b62e71dc5b453f3390e4e9111b466201fc8", "patch": "@@ -1,3 +1,10 @@\n+2009-12-19  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/system_clock.c: Fix library name in comment, move TCK\n+\tdefinition into functions.\n+\t(system_clock_4): Remove unused struct timezone.\n+\t(system_clock_8): Remove unused struct timezone, increase TCK.\n+\n 2009-12-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41711"}, {"sha": "7806059ccdf4251d88991ffad4ace7f8ff62e283", "filename": "libgfortran/intrinsics/system_clock.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8572b62e71dc5b453f3390e4e9111b466201fc8/libgfortran%2Fintrinsics%2Fsystem_clock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8572b62e71dc5b453f3390e4e9111b466201fc8/libgfortran%2Fintrinsics%2Fsystem_clock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsystem_clock.c?ref=a8572b62e71dc5b453f3390e4e9111b466201fc8", "patch": "@@ -1,7 +1,7 @@\n /* Implementation of the SYSTEM_CLOCK intrinsic.\n    Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -28,7 +28,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined(HAVE_SYS_TIME_H) && defined(HAVE_GETTIMEOFDAY)\n #  include <sys/time.h>\n-#  define TCK 1000\n #elif defined(HAVE_TIME_H)\n #  include <time.h>\n #  define TCK 1\n@@ -57,13 +56,13 @@ system_clock_4(GFC_INTEGER_4 *count, GFC_INTEGER_4 *count_rate,\n   GFC_INTEGER_4 mx;\n \n #if defined(HAVE_SYS_TIME_H) && defined(HAVE_GETTIMEOFDAY)\n+#define TCK 1000\n   struct timeval tp1;\n-  struct timezone tzp;\n \n   if (sizeof (tp1.tv_sec) < sizeof (GFC_INTEGER_4))\n     internal_error (NULL, \"tv_sec too small\");\n \n-  if (gettimeofday(&tp1, &tzp) == 0)\n+  if (gettimeofday(&tp1, NULL) == 0)\n     {\n       GFC_UINTEGER_4 ucnt = (GFC_UINTEGER_4) tp1.tv_sec * TCK;\n       ucnt += (tp1.tv_usec + 500000 / TCK) / (1000000 / TCK);\n@@ -118,13 +117,13 @@ system_clock_8 (GFC_INTEGER_8 *count, GFC_INTEGER_8 *count_rate,\n   GFC_INTEGER_8 mx;\n \n #if defined(HAVE_SYS_TIME_H) && defined(HAVE_GETTIMEOFDAY)\n+#define TCK 1000000\n   struct timeval tp1;\n-  struct timezone tzp;\n \n   if (sizeof (tp1.tv_sec) < sizeof (GFC_INTEGER_4))\n     internal_error (NULL, \"tv_sec too small\");\n \n-  if (gettimeofday(&tp1, &tzp) == 0)\n+  if (gettimeofday(&tp1, NULL) == 0)\n     {\n       if (sizeof (tp1.tv_sec) < sizeof (GFC_INTEGER_8))\n \t{"}]}