{"sha": "5a706c322d07f1c834b4120fd98d943b806b4228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE3MDZjMzIyZDA3ZjFjODM0YjQxMjBmZDk4ZDk0M2I4MDZiNDIyOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-09-05T04:16:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-09-05T04:16:58Z"}, "message": "re PR c++/54420 (Segmentation fault in decl_mangling_context)\n\n\tPR c++/54420\n\t* cp-tree.h (LAMBDANAME_P): Remove.\n\t(LAMBDA_TYPE_P): Check CLASSTYPE_LAMBDA_EXPR instead.\n\t* cp-lang.c (cxx_dwarf_name): Likewise.\n\t* error.c (dump_aggr_type): Likewise.\n\t* semantics.c (begin_lambda_type): Set CLASSTYPE_LAMBDA_EXPR sooner.\n\nFrom-SVN: r190961", "tree": {"sha": "63ca0b4ccbc76d59f42ee8461c917fcd562240c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63ca0b4ccbc76d59f42ee8461c917fcd562240c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a706c322d07f1c834b4120fd98d943b806b4228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a706c322d07f1c834b4120fd98d943b806b4228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a706c322d07f1c834b4120fd98d943b806b4228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a706c322d07f1c834b4120fd98d943b806b4228/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf30f2296211300e272f018c67d18bae4deddc19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf30f2296211300e272f018c67d18bae4deddc19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf30f2296211300e272f018c67d18bae4deddc19"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "4501217f056e1c1a99e208e97632b4421ade5b12", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -1,5 +1,12 @@\n 2012-09-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54420\n+\t* cp-tree.h (LAMBDANAME_P): Remove.\n+\t(LAMBDA_TYPE_P): Check CLASSTYPE_LAMBDA_EXPR instead.\n+\t* cp-lang.c (cxx_dwarf_name): Likewise.\n+\t* error.c (dump_aggr_type): Likewise.\n+\t* semantics.c (begin_lambda_type): Set CLASSTYPE_LAMBDA_EXPR sooner.\n+\n \tPR c++/54198\n \t* decl.c (check_default_argument): Set cp_unevaluated_operand\n \taround call to perform_implicit_conversion_flags."}, {"sha": "0e90ab2a80dea5519c53e3a2fe55d96c17203a97", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -115,7 +115,7 @@ cxx_dwarf_name (tree t, int verbosity)\n   gcc_assert (DECL_P (t));\n \n   if (DECL_NAME (t)\n-      && (ANON_AGGRNAME_P (DECL_NAME (t)) || LAMBDANAME_P (DECL_NAME (t))))\n+      && (ANON_AGGRNAME_P (DECL_NAME (t)) || LAMBDA_TYPE_P (t)))\n     return NULL;\n   if (verbosity >= 2)\n     return decl_as_dwarf_string (t,"}, {"sha": "fa3d7b0b774f703224ede2c1714a207131d63bad", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -621,7 +621,7 @@ struct GTY (()) tree_trait_expr {\n \n /* Based off of TYPE_ANONYMOUS_P.  */\n #define LAMBDA_TYPE_P(NODE) \\\n-  (CLASS_TYPE_P (NODE) && LAMBDANAME_P (TYPE_LINKAGE_IDENTIFIER (NODE)))\n+  (CLASS_TYPE_P (NODE) && CLASSTYPE_LAMBDA_EXPR (NODE))\n \n /* Test if FUNCTION_DECL is a lambda function.  */\n #define LAMBDA_FUNCTION_P(FNDECL) \\\n@@ -4329,10 +4329,6 @@ extern GTY(()) VEC(tree,gc) *local_classes;\n \n #define LAMBDANAME_PREFIX \"__lambda\"\n #define LAMBDANAME_FORMAT LAMBDANAME_PREFIX \"%d\"\n-#define LAMBDANAME_P(ID_NODE) \\\n-  (!strncmp (IDENTIFIER_POINTER (ID_NODE), \\\n-             LAMBDANAME_PREFIX, \\\n-\t     sizeof (LAMBDANAME_PREFIX) - 1))\n \n #define UDLIT_OP_ANSI_PREFIX \"operator\\\"\\\" \"\n #define UDLIT_OP_ANSI_FORMAT UDLIT_OP_ANSI_PREFIX \"%s\""}, {"sha": "80a145d974c50dad921e0f67580eb14657d3edce", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -657,7 +657,7 @@ dump_aggr_type (tree t, int flags)\n       else\n \tpp_printf (pp_base (cxx_pp), M_(\"<anonymous %s>\"), variety);\n     }\n-  else if (LAMBDANAME_P (name))\n+  else if (LAMBDA_TYPE_P (name))\n     {\n       /* A lambda's \"type\" is essentially its signature.  */\n       pp_string (cxx_pp, M_(\"<lambda\"));"}, {"sha": "0211d4fa3d01956082c5083036c10fc357c383e1", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -1998,10 +1998,9 @@ make_anon_name (void)\n }\n \n /* This code is practically identical to that for creating\n-   anonymous names, but is just used for lambdas instead.  This is necessary\n-   because anonymous names are recognized and cannot be passed to template\n-   functions.  */\n-/* FIXME is this still necessary? */\n+   anonymous names, but is just used for lambdas instead.  This isn't really\n+   necessary, but it's convenient to avoid treating lambdas like other\n+   anonymous types.  */\n \n static GTY(()) int lambda_cnt = 0;\n "}, {"sha": "f64246d82d691190b2a27bac2443be8f3ecee823", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -8746,6 +8746,10 @@ begin_lambda_type (tree lambda)\n   /* Designate it as a struct so that we can use aggregate initialization.  */\n   CLASSTYPE_DECLARED_CLASS (type) = false;\n \n+  /* Cross-reference the expression and the type.  */\n+  LAMBDA_EXPR_CLOSURE (lambda) = type;\n+  CLASSTYPE_LAMBDA_EXPR (type) = lambda;\n+\n   /* Clear base types.  */\n   xref_basetypes (type, /*bases=*/NULL_TREE);\n \n@@ -8754,10 +8758,6 @@ begin_lambda_type (tree lambda)\n   if (type == error_mark_node)\n     return error_mark_node;\n \n-  /* Cross-reference the expression and the type.  */\n-  LAMBDA_EXPR_CLOSURE (lambda) = type;\n-  CLASSTYPE_LAMBDA_EXPR (type) = lambda;\n-\n   return type;\n }\n "}, {"sha": "31d219a4d2290ec502529b6d2125b68e10622c64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -1,5 +1,8 @@\n 2012-09-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54420\n+\t* g++.dg/cpp0x/lambda/lambda-intname.C: New.\n+\n \tPR c++/54198\n \t* g++.dg/template/defarg15.C: New.\n "}, {"sha": "4c268c6782076b36f947fc6c06bd8f1cc156b488", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-intname.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-intname.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a706c322d07f1c834b4120fd98d943b806b4228/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-intname.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-intname.C?ref=5a706c322d07f1c834b4120fd98d943b806b4228", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/54420\n+\n+class __lambda\n+{\n+  virtual bool is_sub ();\n+};"}]}