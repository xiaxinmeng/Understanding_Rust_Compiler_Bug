{"sha": "1e863adf8376bff6e3ec741101eae39063f1a98d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU4NjNhZGY4Mzc2YmZmNmUzZWM3NDExMDFlYWUzOTA2M2YxYTk4ZA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-03-22T15:37:25Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-03-22T15:37:25Z"}, "message": "re PR fortran/20897 (derived type name shall not be same as intrinsic type name)\n\nPR fortran/20897\nfortran/\n* decl.c (gfc_match_derived_decl): Reliably reject\n'doubleprecision' and 'doublecomplex' as type names.\ntestsuite/\n* gfortran.dg/derived_name_1.f90: New.\n* gfortran.dg/derived_name_2.f: New.\n\nFrom-SVN: r123129", "tree": {"sha": "882cdd13c2d34e1457116a52cec83aa37b6143f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/882cdd13c2d34e1457116a52cec83aa37b6143f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e863adf8376bff6e3ec741101eae39063f1a98d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e863adf8376bff6e3ec741101eae39063f1a98d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e863adf8376bff6e3ec741101eae39063f1a98d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e863adf8376bff6e3ec741101eae39063f1a98d/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8766652c6e5781bf288ebbacf678fce26204d519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8766652c6e5781bf288ebbacf678fce26204d519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8766652c6e5781bf288ebbacf678fce26204d519"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "c32304bf9529362d76d4f462adbd0a9977e4ba49", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1e863adf8376bff6e3ec741101eae39063f1a98d", "patch": "@@ -1,3 +1,9 @@\n+2007-03-22  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n+\n+\tPR fortran/20897\n+\t* decl.c (gfc_match_derived_decl): Reliably reject\n+\t'doubleprecision' and 'doublecomplex' as type names.\n+\n 2007-03-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/31203"}, {"sha": "570a036c0419b88c39d7483ef924c02f2f9e4742", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=1e863adf8376bff6e3ec741101eae39063f1a98d", "patch": "@@ -4341,12 +4341,16 @@ gfc_match_derived_decl (void)\n     return m;\n \n   /* Make sure the name isn't the name of an intrinsic type.  The\n-     'double precision' type doesn't get past the name matcher.  */\n+     'double {precision,complex}' types don't get past the name\n+     matcher, unless they're written as a single word or in fixed\n+     form.  */\n   if (strcmp (name, \"integer\") == 0\n       || strcmp (name, \"real\") == 0\n       || strcmp (name, \"character\") == 0\n       || strcmp (name, \"logical\") == 0\n-      || strcmp (name, \"complex\") == 0)\n+      || strcmp (name, \"complex\") == 0\n+      || strcmp (name, \"doubleprecision\") == 0\n+      || strcmp (name, \"doublecomplex\") == 0)\n     {\n       gfc_error (\"Type name '%s' at %C cannot be the same as an intrinsic \"\n \t\t \"type\", name);"}, {"sha": "d993a15c1f6ae93bff1ea626026349eec8f72bc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e863adf8376bff6e3ec741101eae39063f1a98d", "patch": "@@ -1,3 +1,9 @@\n+2007-03-22  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n+\n+\tPR fortran/20897\n+\t* gfortran.dg/derived_name_1.f90: New.\n+\t* gfortran.dg/derived_name_2.f: New.\n+\n 2007-03-21  Richard Sandiford  <richard@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_nonpic): New"}, {"sha": "9c6b1775d11d72e0f252d6c9144528640935e20b", "filename": "gcc/testsuite/gfortran.dg/derived_name_1.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_name_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_name_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_name_1.f90?ref=1e863adf8376bff6e3ec741101eae39063f1a98d", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! PR 20897\n+! Make sure intrinsic type names do not appear as names of derived types\n+type integer ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type real    ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type complex ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type character ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type logical ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type complex ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type double precision ! { dg-error \"Unclassifiable statement\" }\n+type doubleprecision ! { dg-error \"cannot be the same as an intrinsic type\" }\n+type double complex ! { dg-error \"Unclassifiable statement\" }\n+type doublecomplex ! { dg-error \"cannot be the same as an intrinsic type\" }\n+\n+type x\n+   integer y\n+end type x\n+end\n+"}, {"sha": "a89dcdfbd71bcda9129a5f111414e6eb70fcbbc2", "filename": "gcc/testsuite/gfortran.dg/derived_name_2.f", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_name_2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e863adf8376bff6e3ec741101eae39063f1a98d/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_name_2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_name_2.f?ref=1e863adf8376bff6e3ec741101eae39063f1a98d", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! PR 20897\n+! Make sure intrinsic type names do not appear as names of derived types\n+      type integer     ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type real        ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type complex     ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type character   ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type logical     ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type complex     ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type double precision     ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type doubleprecision      ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type double complex       ! { dg-error \"cannot be the same as an intrinsic type\" }\n+      type doublecomplex        ! { dg-error \"cannot be the same as an intrinsic type\" }\n+\n+      type x\n+      integer y\n+      end type x\n+      end\n+"}]}