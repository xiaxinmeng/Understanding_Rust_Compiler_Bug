{"sha": "ace984c85138fbc4aa823a3aae0d0eba2d117437", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlOTg0Yzg1MTM4ZmJjNGFhODIzYTNhYWUwZDBlYmEyZDExNzQzNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2009-01-06T21:58:46Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2009-01-06T21:58:46Z"}, "message": "re PR rtl-optimization/38426 (Incorrect code produced with -momit-leaf-frame-pointer -fno-unit-at-a-time)\n\ngcc/\n\tPR rtl-optimization/38426.\n\t* ira.c (ira): Set current_function_is_leaf earlier.\n\nFrom-SVN: r143135", "tree": {"sha": "c4301cbdf655765fd7d6cb61637ee0e9b20c8114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4301cbdf655765fd7d6cb61637ee0e9b20c8114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ace984c85138fbc4aa823a3aae0d0eba2d117437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace984c85138fbc4aa823a3aae0d0eba2d117437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace984c85138fbc4aa823a3aae0d0eba2d117437", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace984c85138fbc4aa823a3aae0d0eba2d117437/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3145cc701b458b2ce77db7b49111c011a176ff45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3145cc701b458b2ce77db7b49111c011a176ff45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3145cc701b458b2ce77db7b49111c011a176ff45"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "942d733ed531e06e5aa83b6aef7d7bf3ce7779af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace984c85138fbc4aa823a3aae0d0eba2d117437/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace984c85138fbc4aa823a3aae0d0eba2d117437/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ace984c85138fbc4aa823a3aae0d0eba2d117437", "patch": "@@ -1,3 +1,8 @@\n+2009-01-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR rtl-optimization/38426.\n+\t* ira.c (ira): Set current_function_is_leaf earlier.\n+\n 2009-01-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/38722"}, {"sha": "5830bae16348c35b024e4e5dfef4066a737f1e3a", "filename": "gcc/ira.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace984c85138fbc4aa823a3aae0d0eba2d117437/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace984c85138fbc4aa823a3aae0d0eba2d117437/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=ace984c85138fbc4aa823a3aae0d0eba2d117437", "patch": "@@ -1879,6 +1879,11 @@ ira (FILE *f)\n   if (warn_clobbered)\n     generate_setjmp_warnings ();\n \n+  /* Determine if the current function is a leaf before running IRA\n+     since this can impact optimizations done by the prologue and\n+     epilogue thus changing register elimination offsets.  */\n+  current_function_is_leaf = leaf_function_p ();\n+\n   rebuild_p = update_equiv_regs ();\n \n #ifndef IRA_NO_OBSTACK\n@@ -1977,11 +1982,6 @@ ira (FILE *f)\n   delete_trivially_dead_insns (get_insns (), max_reg_num ());\n   max_regno = max_reg_num ();\n   \n-  /* Determine if the current function is a leaf before running IRA\n-     since this can impact optimizations done by the prologue and\n-     epilogue thus changing register elimination offsets.  */\n-  current_function_is_leaf = leaf_function_p ();\n-  \n   /* And the reg_equiv_memory_loc array.  */\n   VEC_safe_grow (rtx, gc, reg_equiv_memory_loc_vec, max_regno);\n   memset (VEC_address (rtx, reg_equiv_memory_loc_vec), 0,"}]}