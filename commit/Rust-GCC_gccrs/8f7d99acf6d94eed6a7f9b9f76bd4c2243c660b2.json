{"sha": "8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3ZDk5YWNmNmQ5NGVlZDZhN2Y5YjlmNzZiZDRjMjI0M2M2NjBiMg==", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-08-30T17:58:13Z"}, "committer": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-08-30T17:58:13Z"}, "message": "\t2020-8-20  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/96726\n\t* expr.c (check_references): Change different relational operator\n\tto less-than operator to avoid infinite loop.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/96726\n\t* gfortran.dg/PR96726.f90: New test.", "tree": {"sha": "33894bf7bf7f7f44eea7123a6cf8d1a87178bd93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33894bf7bf7f7f44eea7123a6cf8d1a87178bd93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd49b7067893b548a10c99ea0cb6aba2977eef2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd49b7067893b548a10c99ea0cb6aba2977eef2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd49b7067893b548a10c99ea0cb6aba2977eef2e"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "2ef01f0f14fc4f2a048488085e2ac78525ea5170", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2", "patch": "@@ -3273,7 +3273,7 @@ check_references (gfc_ref* ref, bool (*checker) (gfc_expr*))\n   switch (ref->type)\n     {\n     case REF_ARRAY:\n-      for (dim = 0; dim != ref->u.ar.dimen; ++dim)\n+      for (dim = 0; dim < ref->u.ar.dimen; ++dim)\n \t{\n \t  if (!checker (ref->u.ar.start[dim]))\n \t    return false;"}, {"sha": "b0b26b906693f743dc5e2bf8d7598c0f3d7d17e5", "filename": "gcc/testsuite/gfortran.dg/PR96726.f90", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2/gcc%2Ftestsuite%2Fgfortran.dg%2FPR96726.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2/gcc%2Ftestsuite%2Fgfortran.dg%2FPR96726.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR96726.f90?ref=8f7d99acf6d94eed6a7f9b9f76bd4c2243c660b2", "patch": "@@ -0,0 +1,72 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR96726\n+!\n+\n+module cref_m\n+\n+  implicit none\n+\n+  private\n+\n+  public ::   &\n+    sizeish\n+  \n+contains\n+\n+  pure function sizeish(a) result(s)\n+    integer, intent(in) :: a(..)\n+\n+    integer :: s\n+\n+    s = size(a)\n+    return\n+  end function sizeish\n+  \n+end module cref_m\n+\n+program cref_p\n+\n+  use cref_m, only: &\n+    sizeish\n+\n+  implicit none\n+  \n+  integer            :: i\n+\n+  integer, parameter :: n = 3\n+  integer, parameter :: p(*) = [(i, i=1,n*n)]\n+  \n+  integer :: a(n,n)\n+  integer :: b(n*n)\n+\n+  a = reshape(p, shape=[n,n])\n+  call isub_a(a, b)\n+  if (any(b/=p)) stop 1\n+  call isub_b(a, b)\n+  if (any(b/=p)) stop 2\n+  stop\n+\n+contains\n+\n+  subroutine isub_a(a, b)\n+    integer, intent(in)  :: a(..)\n+    integer, intent(out) :: b(size(a))\n+\n+    integer :: i\n+    \n+    b = [(i, i=1,size(b))]\n+    return\n+  end subroutine isub_a\n+  \n+  subroutine isub_b(a, b)\n+    integer, intent(in)  :: a(..)\n+    integer, intent(out) :: b(sizeish(a))\n+\n+    integer :: i\n+    \n+    b = [(i, i=1,sizeish(b))]\n+    return\n+  end subroutine isub_b\n+  \n+end program cref_p"}]}