{"sha": "becb7a366039fe2738d56017cfe9eac74a5512fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjYjdhMzY2MDM5ZmUyNzM4ZDU2MDE3Y2ZlOWVhYzc0YTU1MTJmZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-12-08T08:22:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-12-08T08:22:08Z"}, "message": "re PR tree-optimization/81303 (410.bwaves regression caused by r249919)\n\n2017-12-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81303\n\t* gfortran.dg/pr81303.f: New testcase.\n\t* gfortran.dg/vect/pr81303.f: Likewise.\n\nFrom-SVN: r255499", "tree": {"sha": "0b26cfdbfd47d5040656e7e3137b999730eae987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b26cfdbfd47d5040656e7e3137b999730eae987"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/becb7a366039fe2738d56017cfe9eac74a5512fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becb7a366039fe2738d56017cfe9eac74a5512fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/becb7a366039fe2738d56017cfe9eac74a5512fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becb7a366039fe2738d56017cfe9eac74a5512fd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e4a6f9d6c9d7a84d15c0d0504d2be7591c7d6c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4a6f9d6c9d7a84d15c0d0504d2be7591c7d6c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4a6f9d6c9d7a84d15c0d0504d2be7591c7d6c9"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "3b1a7e291112402cedf284e01bc2dc8486e94213", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb7a366039fe2738d56017cfe9eac74a5512fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb7a366039fe2738d56017cfe9eac74a5512fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=becb7a366039fe2738d56017cfe9eac74a5512fd", "patch": "@@ -1,3 +1,9 @@\n+2017-12-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81303\n+\t* gfortran.dg/pr81303.f: New testcase.\n+\t* gfortran.dg/vect/pr81303.f: Likewise.\n+\n 2017-12-08  Julia Koval  <julia.koval@intel.com>\n \n \t* gcc.target/i386/avx512f-vnni-1.c: Add checks for vdpdwssds."}, {"sha": "f83a859d8ff865b197d27c10b2a8174d401074ec", "filename": "gcc/testsuite/gfortran.dg/pr81303.f", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb7a366039fe2738d56017cfe9eac74a5512fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81303.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb7a366039fe2738d56017cfe9eac74a5512fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81303.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81303.f?ref=becb7a366039fe2738d56017cfe9eac74a5512fd", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -ffast-math -floop-interchange -fdump-tree-linterchange-details\" }\n+\n+        subroutine mat_times_vec(y,x,a,axp,ayp,azp,axm,aym,azm,\n+     $  nb,nx,ny,nz)\n+        implicit none\n+        integer nb,nx,ny,nz,i,j,k,m,l,kit,im1,ip1,jm1,jp1,km1,kp1\n+\n+        real*8 y(nb,nx,ny,nz),x(nb,nx,ny,nz)\n+\n+        real*8 a(nb,nb,nx,ny,nz),\n+     1  axp(nb,nb,nx,ny,nz),ayp(nb,nb,nx,ny,nz),azp(nb,nb,nx,ny,nz),\n+     2  axm(nb,nb,nx,ny,nz),aym(nb,nb,nx,ny,nz),azm(nb,nb,nx,ny,nz)\n+\n+\n+      do k=1,nz\n+         km1=mod(k+nz-2,nz)+1\n+         kp1=mod(k,nz)+1\n+         do j=1,ny\n+            jm1=mod(j+ny-2,ny)+1\n+            jp1=mod(j,ny)+1\n+            do i=1,nx\n+               im1=mod(i+nx-2,nx)+1\n+               ip1=mod(i,nx)+1\n+               do l=1,nb\n+                  y(l,i,j,k)=0.0d0\n+                  do m=1,nb\n+                     y(l,i,j,k)=y(l,i,j,k)+\n+     1               a(l,m,i,j,k)*x(m,i,j,k)+\n+     2               axp(l,m,i,j,k)*x(m,ip1,j,k)+\n+     3               ayp(l,m,i,j,k)*x(m,i,jp1,k)+\n+     4               azp(l,m,i,j,k)*x(m,i,j,kp1)+\n+     5               axm(l,m,i,j,k)*x(m,im1,j,k)+\n+     6               aym(l,m,i,j,k)*x(m,i,jm1,k)+\n+     7               azm(l,m,i,j,k)*x(m,i,j,km1)\n+                  enddo\n+               enddo\n+            enddo\n+         enddo\n+        enddo          \n+        return\n+        end\n+\n+! { dg-final { scan-tree-dump-times \"is interchanged\" 1 \"linterchange\" } }"}, {"sha": "16deb7d38d2be01a1dd0031ab77cc9be3e420456", "filename": "gcc/testsuite/gfortran.dg/vect/pr81303.f", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/becb7a366039fe2738d56017cfe9eac74a5512fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr81303.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/becb7a366039fe2738d56017cfe9eac74a5512fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr81303.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr81303.f?ref=becb7a366039fe2738d56017cfe9eac74a5512fd", "patch": "@@ -0,0 +1,50 @@\n+! { dg-do compile }\n+! { dg-require-effective-target vect_cond_mixed }\n+! { dg-require-effective-target vect_double }\n+! { dg-additional-options \"-O3 -ffast-math -floop-interchange -fdump-tree-linterchange-details\" }\n+! vect_cond_mixed lies on x86, we cannot do vcond[_eq]v2div2df\n+! { dg-additional-options \"-msse4.1\" { target { x86_64-*-* i?86-*-* } } }\n+\n+        subroutine mat_times_vec(y,x,a,axp,ayp,azp,axm,aym,azm,\n+     $  nb,nx,ny,nz)\n+        implicit none\n+        integer nb,nx,ny,nz,i,j,k,m,l,kit,im1,ip1,jm1,jp1,km1,kp1\n+\n+        real*8 y(nb,nx,ny,nz),x(nb,nx,ny,nz)\n+\n+        real*8 a(nb,nb,nx,ny,nz),\n+     1  axp(nb,nb,nx,ny,nz),ayp(nb,nb,nx,ny,nz),azp(nb,nb,nx,ny,nz),\n+     2  axm(nb,nb,nx,ny,nz),aym(nb,nb,nx,ny,nz),azm(nb,nb,nx,ny,nz)\n+\n+\n+      do k=1,nz\n+         km1=mod(k+nz-2,nz)+1\n+         kp1=mod(k,nz)+1\n+         do j=1,ny\n+            jm1=mod(j+ny-2,ny)+1\n+            jp1=mod(j,ny)+1\n+            do i=1,nx\n+               im1=mod(i+nx-2,nx)+1\n+               ip1=mod(i,nx)+1\n+               do l=1,nb\n+                  y(l,i,j,k)=0.0d0\n+                  do m=1,nb\n+                     y(l,i,j,k)=y(l,i,j,k)+\n+     1               a(l,m,i,j,k)*x(m,i,j,k)+\n+     2               axp(l,m,i,j,k)*x(m,ip1,j,k)+\n+     3               ayp(l,m,i,j,k)*x(m,i,jp1,k)+\n+     4               azp(l,m,i,j,k)*x(m,i,j,kp1)+\n+     5               axm(l,m,i,j,k)*x(m,im1,j,k)+\n+     6               aym(l,m,i,j,k)*x(m,i,jm1,k)+\n+     7               azm(l,m,i,j,k)*x(m,i,j,km1)\n+                  enddo\n+               enddo\n+            enddo\n+         enddo\n+        enddo          \n+        return\n+        end\n+\n+! verify we can vectorize the inner loop after interchange\n+! { dg-final { scan-tree-dump-times \"is interchanged\" 1 \"linterchange\" } }\n+! { dg-final { scan-tree-dump \"vectorized 1 loops in function\" \"vect\" } }"}]}