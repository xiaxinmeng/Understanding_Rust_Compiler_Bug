{"sha": "c83198264705c6a36d0f20470af67f62928278bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzMTk4MjY0NzA1YzZhMzZkMGYyMDQ3MGFmNjdmNjI5MjgyNzhiYg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2015-05-19T11:06:31Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2015-05-19T11:06:31Z"}, "message": "plugin-nvptx.c (nvptx_get_num_devices): Return zero on cuInit failure.\n\n\t* plugin/plugin-nvptx.c (nvptx_get_num_devices): Return zero\n\ton cuInit failure.\n\nFrom-SVN: r223352", "tree": {"sha": "bd62cf7b3e9199169506a253a878c6cb1a4cbb84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd62cf7b3e9199169506a253a878c6cb1a4cbb84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c83198264705c6a36d0f20470af67f62928278bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83198264705c6a36d0f20470af67f62928278bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83198264705c6a36d0f20470af67f62928278bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83198264705c6a36d0f20470af67f62928278bb/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9626d143b96c1d860b478cd4196373b6c9428f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9626d143b96c1d860b478cd4196373b6c9428f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9626d143b96c1d860b478cd4196373b6c9428f6d"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "60ad7f50817c958207a32b655ea46ae263632fce", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83198264705c6a36d0f20470af67f62928278bb/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83198264705c6a36d0f20470af67f62928278bb/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=c83198264705c6a36d0f20470af67f62928278bb", "patch": "@@ -1,3 +1,8 @@\n+2015-05-19  Julian Brown  <julian@codesourcery.com>\n+\n+\t* plugin/plugin-nvptx.c (nvptx_get_num_devices): Return zero\n+\ton cuInit failure.\n+\n 2015-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/66133"}, {"sha": "ee3a0ae14a935e685cf43efd16a797a14a16e2fb", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83198264705c6a36d0f20470af67f62928278bb/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83198264705c6a36d0f20470af67f62928278bb/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=c83198264705c6a36d0f20470af67f62928278bb", "patch": "@@ -782,7 +782,13 @@ nvptx_get_num_devices (void)\n      until cuInit has been called.  Just call it now (but don't yet do any\n      further initialization).  */\n   if (instantiated_devices == 0)\n-    cuInit (0);\n+    {\n+      r = cuInit (0);\n+      /* This is not an error: e.g. we may have CUDA libraries installed but\n+         no devices available.  */\n+      if (r != CUDA_SUCCESS)\n+        return 0;\n+    }\n \n   r = cuDeviceGetCount (&n);\n   if (r!= CUDA_SUCCESS)"}]}