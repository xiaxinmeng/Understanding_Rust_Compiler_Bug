{"sha": "a861990d21a7f495695597e75509a834d44fdb2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg2MTk5MGQyMWE3ZjQ5NTY5NTU5N2U3NTUwOWE4MzRkNDRmZGIyZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-22T07:34:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-22T07:34:47Z"}, "message": "Do not emit __gnu_lto_v1 symbol.\n\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\t* config/avr/avr.c (avr_asm_output_aligned_decl_common): Update\n\tcomment.\n\t* toplev.c (compile_file): Do not emit __gnu_lto_v1 symbol.\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\t* config/pa/stublib.c: Remove stub symbol __gnu_lto_v1.\n\t* config/pa/t-stublib: Likewise.\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n\tDo not search for gnu_lto_v1, but search for first '\\0'.\n\nFrom-SVN: r273662", "tree": {"sha": "2db8d2971bc773879593177b253a46b32d2cbbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2db8d2971bc773879593177b253a46b32d2cbbca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a861990d21a7f495695597e75509a834d44fdb2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a861990d21a7f495695597e75509a834d44fdb2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a861990d21a7f495695597e75509a834d44fdb2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a861990d21a7f495695597e75509a834d44fdb2d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1caf05a899bb57d1a96acd4869890991dedca20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1caf05a899bb57d1a96acd4869890991dedca20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1caf05a899bb57d1a96acd4869890991dedca20"}], "stats": {"total": 72, "additions": 26, "deletions": 46}, "files": [{"sha": "05d8efaf971532085126d9d926ed28a00c70cd64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -1,3 +1,9 @@\n+2019-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/avr/avr.c (avr_asm_output_aligned_decl_common): Update\n+\tcomment.\n+\t* toplev.c (compile_file): Do not emit __gnu_lto_v1 symbol.\n+\n 2019-07-22  Martin Liska  <mliska@suse.cz>\n \n \t* lto-section-in.c (lto_get_section_data):"}, {"sha": "760e9371a01237aaf5f0c9bbae2ea5bd42eceb81", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -10163,7 +10163,7 @@ avr_asm_output_aligned_decl_common (FILE * stream,\n       return;\n     }\n \n-  /* __gnu_lto_v1 etc. are just markers for the linker injected by toplev.c.\n+  /* __gnu_lto_slim is just a marker for the linker injected by toplev.c.\n      There is no need to trigger __do_clear_bss code for them.  */\n \n   if (!STR_PREFIX_P (name, \"__gnu_lto\"))"}, {"sha": "56ef63e5adb06f01bfc4258db3faf99ef26530a6", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -543,27 +543,6 @@ compile_file (void)\n       process_pending_assemble_externals ();\n    }\n \n-  /* Emit LTO marker if LTO info has been previously emitted.  This is\n-     used by collect2 to determine whether an object file contains IL.\n-     We used to emit an undefined reference here, but this produces\n-     link errors if an object file with IL is stored into a shared\n-     library without invoking lto1.  */\n-  if (flag_generate_lto || flag_generate_offload)\n-    {\n-#if defined ASM_OUTPUT_ALIGNED_DECL_COMMON\n-      ASM_OUTPUT_ALIGNED_DECL_COMMON (asm_out_file, NULL_TREE,\n-\t\t\t\t      \"__gnu_lto_v1\",\n-\t\t\t\t      HOST_WIDE_INT_1U, 8);\n-#elif defined ASM_OUTPUT_ALIGNED_COMMON\n-      ASM_OUTPUT_ALIGNED_COMMON (asm_out_file, \"__gnu_lto_v1\",\n-\t\t\t\t HOST_WIDE_INT_1U, 8);\n-#else\n-      ASM_OUTPUT_COMMON (asm_out_file, \"__gnu_lto_v1\",\n-\t\t\t HOST_WIDE_INT_1U,\n-\t\t\t HOST_WIDE_INT_1U);\n-#endif\n-    }\n-\n   /* Let linker plugin know that this is a slim object and must be LTOed\n      even when user did not ask for it.  */\n   if (flag_generate_lto && !flag_fat_lto_objects)"}, {"sha": "7997ad871f468ca2f48f6f5135b1fd77fe0b84a4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/pa/stublib.c: Remove stub symbol __gnu_lto_v1.\n+\t* config/pa/t-stublib: Likewise.\n+\n 2019-07-22  Stafford Horne  <shorne@gmail.com>\n \n \tPR target/90362"}, {"sha": "7e79dbfd6c92c235c1d91151fb208af419cbedef", "filename": "libgcc/config/pa/stublib.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/libgcc%2Fconfig%2Fpa%2Fstublib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/libgcc%2Fconfig%2Fpa%2Fstublib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Fstublib.c?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -115,7 +115,3 @@ pthread_once (void)\n   return 0;\n }\n #endif\n-\n-#ifdef L_gnu_lto_v1\n-char gnu_lto_v1;\n-#endif"}, {"sha": "8004c1e46a78fffdd7e1feac25d717212b8a2e22", "filename": "libgcc/config/pa/t-stublib", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/libgcc%2Fconfig%2Fpa%2Ft-stublib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/libgcc%2Fconfig%2Fpa%2Ft-stublib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ft-stublib?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -3,8 +3,7 @@ LIBGCCSTUB_OBJS = rfi-stub.o dfi-stub.o ritm-stub.o ditm-stub.o \\\n \tpthread_default_stacksize_np-stub.o \\\n \tpthread_mutex_lock-stub.o \\\n \tpthread_mutex_unlock-stub.o \\\n-\tpthread_once-stub.o \\\n-\tgnu_lto_v1-stub.o\n+\tpthread_once-stub.o\n \n rfi-stub.o: $(srcdir)/config/pa/stublib.c\n \t$(gcc_compile) -c -O2 -DL_register_frame_info $<\n@@ -36,9 +35,6 @@ pthread_mutex_unlock-stub.o: $(srcdir)/config/pa/stublib.c\n pthread_once-stub.o: $(srcdir)/config/pa/stublib.c\n \t$(gcc_compile) -c -O2 -DL_pthread_once $<\n \n-gnu_lto_v1-stub.o: $(srcdir)/config/pa/stublib.c\n-\t$(gcc_compile) -c -O2 -DL_gnu_lto_v1 $<\n-\n libgcc_stub.a: $(LIBGCCSTUB_OBJS)\n \t-rm -rf $@\n \t$(AR) rc $@ $(LIBGCCSTUB_OBJS)"}, {"sha": "a0508e98b08660469c4fced3e3bee55b3ddfcc7a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n+\tDo not search for gnu_lto_v1, but search for first '\\0'.\n+\n 2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n \n \t* cplus-dem.c: Include rust-demangle.h."}, {"sha": "502388991a08e3e0bb5104f9981ee775a0e016b8", "filename": "libiberty/simple-object-elf.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a861990d21a7f495695597e75509a834d44fdb2d/libiberty%2Fsimple-object-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a861990d21a7f495695597e75509a834d44fdb2d/libiberty%2Fsimple-object-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-elf.c?ref=a861990d21a7f495695597e75509a834d44fdb2d", "patch": "@@ -1358,9 +1358,8 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t  return errmsg;\n \t}\n \n-      /* If we are processing .symtab purge __gnu_lto_v1 and\n-\t __gnu_lto_slim symbols from it and any symbols in discarded\n-\t sections.  */\n+      /* If we are processing .symtab purge __gnu_lto_slim symbol\n+\t from it and any symbols in discarded sections.  */\n       if (sh_type == SHT_SYMTAB)\n \t{\n \t  unsigned entsize = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n@@ -1380,14 +1379,9 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t\t\t       sobj->offset + stroff,\n \t\t\t\t       (unsigned char *)strings,\n \t\t\t\t       strsz, &errmsg, err);\n-\t  /* Find gnu_lto_ in strings.  */\n-\t  while ((gnu_lto = (char *) memchr (gnu_lto, 'g',\n-\t\t\t\t\t     strings + strsz - gnu_lto)))\n-\t    if (strncmp (gnu_lto, \"gnu_lto_v1\",\n-\t\t\t strings + strsz - gnu_lto) == 0)\n-\t      break;\n-\t    else\n-\t      gnu_lto++;\n+\t  /* Find first '\\0' in strings.  */\n+\t  gnu_lto = (char *) memchr (gnu_lto, '\\0',\n+\t\t\t\t     strings + strsz - gnu_lto + 1);\n \t  /* Read the section index table if present.  */\n \t  if (symtab_indices_shndx[i - 1] != 0)\n \t    {\n@@ -1461,10 +1455,9 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t\t undefined and sharing the gnu_lto_ name.  */\n \t\t      bind = STB_WEAK;\n \t\t      other = STV_HIDDEN;\n-\t\t      if (gnu_lto)\n-\t\t\tELF_SET_FIELD (type_functions, ei_class, Sym,\n-\t\t\t\t       ent, st_name, Elf_Word,\n-\t\t\t\t       gnu_lto - strings);\n+\t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n+\t\t\t\t     ent, st_name, Elf_Word,\n+\t\t\t\t     gnu_lto - strings);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_shndx, Elf_Half, SHN_UNDEF);\n \t\t    }"}]}