{"sha": "0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiOWYxYzM5YjdhNGFkMTdiYmRhY2FhYjk2NWRmNjdkYWY0YzdjNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-12-08T00:33:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-12-08T00:33:08Z"}, "message": "error.c (dump_decl): Handle LOOKUP_EXPR.\n\n\t* error.c (dump_decl): Handle LOOKUP_EXPR.\n\nSun Dec  7 15:45:07 1997  Mark Mitchell  <mmitchell@usa.net>\n\n\t* rtti.c (build_dynamic_cast): Copy the cast-to type to the\n\tpermanent obstack if we are processing a template decl.\n\t* typeck.c (build_static_cast): Likewise.\n\t(build_const_cast): Likewise.\n\t(build_reinterpret_cast): Likewise.\n\n\t* pt.c (coerce_template_parms): Coerce some expressions, even\n\twhen processing_template_decl.\n\nFrom-SVN: r17001", "tree": {"sha": "6dc36852e9101501b948c141a7ce162ee2b22423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dc36852e9101501b948c141a7ce162ee2b22423"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/comments", "author": null, "committer": null, "parents": [{"sha": "0fe09481b0875a317defd2bc767b4fefe7b3955e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe09481b0875a317defd2bc767b4fefe7b3955e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe09481b0875a317defd2bc767b4fefe7b3955e"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "d2049dfd23082bbe22756e5f3b1cc1f3de81701b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "patch": "@@ -1,3 +1,18 @@\n+Sun Dec  7 15:53:06 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* error.c (dump_decl): Handle LOOKUP_EXPR.\n+\n+Sun Dec  7 15:45:07 1997  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* rtti.c (build_dynamic_cast): Copy the cast-to type to the\n+\tpermanent obstack if we are processing a template decl.\n+\t* typeck.c (build_static_cast): Likewise.\n+\t(build_const_cast): Likewise.\n+\t(build_reinterpret_cast): Likewise.\n+\n+\t* pt.c (coerce_template_parms): Coerce some expressions, even\n+\twhen processing_template_decl.\n+\n Sun Dec  7 01:46:33 1997  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>\n \n \t* typeck.c (build_binary_op_nodefault, pointer_diff): Symmetric"}, {"sha": "016573dfc871fa75d8888bc4b90d1172936d2514", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "patch": "@@ -797,6 +797,10 @@ dump_decl (t, v)\n       }\n       break;\n \n+    case LOOKUP_EXPR:\n+      OB_PUTID (TREE_OPERAND (t, 0));\n+      break;\n+\n     case LABEL_DECL:\n       OB_PUTID (DECL_NAME (t));\n       break;"}, {"sha": "f9f501728b5472dcdc1254d605b5540b57454eb0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "patch": "@@ -1075,12 +1075,14 @@ coerce_template_parms (parms, arglist, in_decl)\n \t{\n \t  tree t = tsubst (TREE_TYPE (parm), vec,\n \t\t\t   TREE_VEC_LENGTH (vec), in_decl);\n-\t  if (processing_template_decl)\n+\t  if (processing_template_decl && \n+\t      (uses_template_parms (arg) || uses_template_parms (t)))\n \t    val = arg;\n \t  else\n \t    val = digest_init (t, arg, (tree *) 0);\n \n-\t  if (val == error_mark_node || processing_template_decl)\n+\t  if (val == error_mark_node \n+\t      || (processing_template_decl && uses_template_parms (val)))\n \t    ;\n \n \t  /* 14.2: Other template-arguments must be constant-expressions,"}, {"sha": "18d45ba69cb62cf2b906064e407e12c1b263fb44", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "patch": "@@ -642,7 +642,7 @@ build_dynamic_cast (type, expr)\n     return error_mark_node;\n   \n   if (processing_template_decl)\n-    return build_min (DYNAMIC_CAST_EXPR, type, expr);\n+    return build_min (DYNAMIC_CAST_EXPR, copy_to_permanent (type), expr);\n \n   return convert_from_reference (build_dynamic_cast_1 (type, expr));\n }"}, {"sha": "1edd1bbaff20c1e3ee460b293800b441fd61bec3", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=0fb9f1c39b7a4ad17bbdacaab965df67daf4c7c5", "patch": "@@ -5264,7 +5264,8 @@ build_static_cast (type, expr)\n \n   if (processing_template_decl)\n     {\n-      tree t = build_min (STATIC_CAST_EXPR, type, expr);\n+      tree t = build_min (STATIC_CAST_EXPR, copy_to_permanent (type),\n+\t\t\t  expr); \n       return t;\n     }\n \n@@ -5356,7 +5357,8 @@ build_reinterpret_cast (type, expr)\n \n   if (processing_template_decl)\n     {\n-      tree t = build_min (REINTERPRET_CAST_EXPR, type, expr);\n+      tree t = build_min (REINTERPRET_CAST_EXPR, \n+\t\t\t  copy_to_permanent (type), expr);\n       return t;\n     }\n \n@@ -5456,7 +5458,8 @@ build_const_cast (type, expr)\n \n   if (processing_template_decl)\n     {\n-      tree t = build_min (CONST_CAST_EXPR, type, expr);\n+      tree t = build_min (CONST_CAST_EXPR, copy_to_permanent (type),\n+\t\t\t  expr);\n       return t;\n     }\n "}]}