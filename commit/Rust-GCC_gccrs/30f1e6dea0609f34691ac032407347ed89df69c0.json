{"sha": "30f1e6dea0609f34691ac032407347ed89df69c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmMWU2ZGVhMDYwOWYzNDY5MWFjMDMyNDA3MzQ3ZWQ4OWRmNjljMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-07-04T12:06:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-04T12:06:17Z"}, "message": "re PR tree-optimization/49615 (internal compiler error: verify_stmts failed / LHS in noreturn call with pointer-to-never-returning-member)\n\n2011-07-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49615\n\t* tree-cfgcleanup.c (split_bbs_on_noreturn_calls): Fix\n\tbasic-block index check.\n\n\t* g++.dg/torture/pr49615.C: New testcase.\n\nFrom-SVN: r175803", "tree": {"sha": "d8d848361db6b3296dd9c34a27afc087fb8ba008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8d848361db6b3296dd9c34a27afc087fb8ba008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f1e6dea0609f34691ac032407347ed89df69c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f1e6dea0609f34691ac032407347ed89df69c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f1e6dea0609f34691ac032407347ed89df69c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f1e6dea0609f34691ac032407347ed89df69c0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6dab9931f8f4b4366c3e1670902ace73e736ac4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dab9931f8f4b4366c3e1670902ace73e736ac4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dab9931f8f4b4366c3e1670902ace73e736ac4d"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "2ef91ce3047ccedde5f8ae76e8c8df5fb661785f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30f1e6dea0609f34691ac032407347ed89df69c0", "patch": "@@ -1,3 +1,9 @@\n+2011-07-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49615\n+\t* tree-cfgcleanup.c (split_bbs_on_noreturn_calls): Fix\n+\tbasic-block index check.\n+\n 2011-07-04  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* longlong.h (count_leading_zeros, count_trailing_zeros,"}, {"sha": "70806e1acfa13c15561044e47a21c98dac545985", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30f1e6dea0609f34691ac032407347ed89df69c0", "patch": "@@ -1,3 +1,8 @@\n+2011-07-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49615\n+\t* g++.dg/torture/pr49615.C: New testcase.\n+\n 2011-07-03  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/49610"}, {"sha": "98a2f95b8b3f1659ac62beca942d57d5e737dee1", "filename": "gcc/testsuite/g++.dg/torture/pr49615.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49615.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49615.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49615.C?ref=30f1e6dea0609f34691ac032407347ed89df69c0", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g\" } */\n+\n+template <class T>\n+static inline bool Dispatch (T* obj, void (T::*func) ())\n+{\n+  (obj->*func) ();\n+}\n+class C\n+{\n+  bool f (int);\n+  void g ();\n+};\n+bool C::f (int n)\n+{\n+  bool b;\n+  switch (n)\n+    {\n+      case 0:\n+\t  b = Dispatch (this, &C::g);\n+      case 1:\n+\t  b = Dispatch (this, &C::g);\n+    }\n+}\n+void C::g ()\n+{\n+  for (;;) { }\n+}\n+"}, {"sha": "0c8c0852024bc63c53fb379bf7d548e4752677e0", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f1e6dea0609f34691ac032407347ed89df69c0/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=30f1e6dea0609f34691ac032407347ed89df69c0", "patch": "@@ -599,7 +599,7 @@ split_bbs_on_noreturn_calls (void)\n \t   BB is present in the cfg.  */\n \tif (bb == NULL\n \t    || bb->index < NUM_FIXED_BLOCKS\n-\t    || bb->index >= n_basic_blocks\n+\t    || bb->index >= last_basic_block\n \t    || BASIC_BLOCK (bb->index) != bb\n \t    || !gimple_call_noreturn_p (stmt))\n \t  continue;"}]}