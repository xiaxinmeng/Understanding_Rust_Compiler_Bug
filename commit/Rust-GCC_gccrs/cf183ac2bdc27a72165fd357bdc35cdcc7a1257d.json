{"sha": "cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YxODNhYzJiZGMyN2E3MjE2NWZkMzU3YmRjMzVjZGNjN2ExMjU3ZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-11-21T10:47:30Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-11-21T10:47:30Z"}, "message": "cplus-dem.c (cplus_demangle): Fix formatting.\n\n\t* cplus-dem.c (cplus_demangle): Fix formatting.\n\t(grow_vect): Ditto.\n\t(ada_demangle): Ditto.\n\t(internal_cplus_demangle): Ditto.\n\t(mop_up): Ditto.\n\n\t* cplus-dem.c (main): Handle java_demangling.\n\nFrom-SVN: r37612", "tree": {"sha": "1dda09eaed74b40c5ecfa799e69881e6deb0adf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dda09eaed74b40c5ecfa799e69881e6deb0adf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d/comments", "author": null, "committer": null, "parents": [{"sha": "a5ccb99da91d1493b0f68881171c1ab6f971a63c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ccb99da91d1493b0f68881171c1ab6f971a63c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ccb99da91d1493b0f68881171c1ab6f971a63c"}], "stats": {"total": 76, "additions": 45, "deletions": 31}, "files": [{"sha": "044a60319f52a04af7538475c3efc1b095d72ee1", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "patch": "@@ -1,3 +1,15 @@\n+2000-11-21  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* cplus-dem.c (cplus_demangle): Fix formatting.\n+\t(grow_vect): Ditto.\n+\t(ada_demangle): Ditto.\n+\t(internal_cplus_demangle): Ditto.\n+\t(mop_up): Ditto.\n+\n+2000-11-21  H.J. Lu  <hjl@gnu.org>\n+\n+\t* cplus-dem.c (main): Handle java_demangling.\n+\n 2000-11-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cplus-dem.c (grow_vect): Prototype."}, {"sha": "8a16002e88ee4849c83bf38da6143cb581782da3", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 33, "deletions": 31, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "patch": "@@ -52,7 +52,7 @@ char * realloc ();\n \n #include \"libiberty.h\"\n \n-static char *ada_demangle  PARAMS ((const char*, int));\n+static char *ada_demangle  PARAMS ((const char *, int));\n \n #define min(X,Y) (((X) < (Y)) ? (X) : (Y))\n \n@@ -528,7 +528,7 @@ recursively_demangle PARAMS ((struct work_stuff *, const char **, string *,\n \t\t\t      int));\n \n static void\n-grow_vect PARAMS ((void**, size_t*, size_t, int));\n+grow_vect PARAMS ((void **, size_t *, size_t, int));\n \n /* Translate count to integer, consuming tokens in the process.\n    Conversion terminates on the first non-digit character.\n@@ -909,9 +909,9 @@ cplus_demangle (mangled, options)\n   char *ret;\n   struct work_stuff work[1];\n   memset ((char *) work, 0, sizeof (work));\n-  work -> options = options;\n-  if ((work -> options & DMGL_STYLE_MASK) == 0)\n-    work -> options |= (int) current_demangling_style & DMGL_STYLE_MASK;\n+  work->options = options;\n+  if ((work->options & DMGL_STYLE_MASK) == 0)\n+    work->options |= (int) current_demangling_style & DMGL_STYLE_MASK;\n \n   /* The new-ABI demangling is implemented elsewhere.  */\n   if (GNU_NEW_ABI_DEMANGLING)\n@@ -928,43 +928,44 @@ cplus_demangle (mangled, options)\n \n /* Assuming *OLD_VECT points to an array of *SIZE objects of size\n    ELEMENT_SIZE, grow it to contain at least MIN_SIZE objects,\n-   updating *OLD_VECT and *SIZE as necessary. */\n+   updating *OLD_VECT and *SIZE as necessary.  */\n+\n static void\n grow_vect (old_vect, size, min_size, element_size)\n-     void** old_vect;\n-     size_t* size;\n+     void **old_vect;\n+     size_t *size;\n      size_t min_size;\n      int element_size;\n {\n-  if (*size < min_size) {\n-    *size *= 2;\n-    if (*size < min_size)\n-      *size = min_size;\n-    *old_vect = xrealloc (*old_vect, *size * element_size);\n-  }\n+  if (*size < min_size)\n+    {\n+      *size *= 2;\n+      if (*size < min_size)\n+\t*size = min_size;\n+      *old_vect = xrealloc (*old_vect, *size * element_size);\n+    }\n }\n \n /* Demangle ada names:\n    1. Discard final __{DIGIT}+ or ${DIGIT}+\n    2. Convert other instances of embedded \"__\" to `.'.\n    3. Discard leading _ada_.\n-   4. Remove everything after first ___ if it is followed by\n-   'X'.\n+   4. Remove everything after first ___ if it is followed by 'X'.\n    5. Put symbols that should be suppressed in <...> brackets.\n-   The resulting string is valid until the next call of ada_demangle.\n-*/\n+   The resulting string is valid until the next call of ada_demangle.  */\n+\n static char *\n ada_demangle (mangled, option)\n-     const char* mangled;\n+     const char *mangled;\n      int option ATTRIBUTE_UNUSED;\n {\n   int i, j;\n   int len0;\n   const char* p;\n-  char* demangled = NULL;\n+  char *demangled = NULL;\n   int at_start_name;\n   int changed;\n-  char* demangling_buffer = NULL;\n+  char *demangling_buffer = NULL;\n   size_t demangling_buffer_size = 0;\n   \n   changed = 0;\n@@ -992,16 +993,16 @@ ada_demangle (mangled, option)\n \tgoto Suppress;\n     }\n   \n-  /* Make demangled big enough for possible expansion by operator name. */\n-  grow_vect ((void**) &(demangling_buffer),\n+  /* Make demangled big enough for possible expansion by operator name.  */\n+  grow_vect ((void **) &(demangling_buffer),\n \t     &demangling_buffer_size,  2 * len0 + 1,\n \t     sizeof (char));\n   demangled = demangling_buffer;\n   \n-  if (isdigit ((unsigned char)mangled[len0 - 1])) {\n-    for (i = len0-2; i >= 0 && isdigit ((unsigned char)mangled[i]); i -= 1)\n+  if (isdigit ((unsigned char) mangled[len0 - 1])) {\n+    for (i = len0 - 2; i >= 0 && isdigit ((unsigned char) mangled[i]); i -= 1)\n       ;\n-    if (i > 1 && mangled[i] == '_' && mangled[i-1] == '_')\n+    if (i > 1 && mangled[i] == '_' && mangled[i - 1] == '_')\n       {\n \tlen0 = i - 1;\n \tchanged = 1;\n@@ -1022,7 +1023,7 @@ ada_demangle (mangled, option)\n     {\n       at_start_name = 0;\n       \n-      if (i < len0-2 && mangled[i] == '_' && mangled[i+1] == '_')\n+      if (i < len0 - 2 && mangled[i] == '_' && mangled[i + 1] == '_')\n \t{\n \t  demangled[j] = '.';\n \t  changed = at_start_name = 1;\n@@ -1046,7 +1047,7 @@ ada_demangle (mangled, option)\n     return demangled;\n   \n  Suppress:\n-  grow_vect ((void**) &(demangling_buffer),\n+  grow_vect ((void **) &(demangling_buffer),\n \t     &demangling_buffer_size,  strlen (mangled) + 3,\n \t     sizeof (char));\n   demangled = demangling_buffer;\n@@ -1073,7 +1074,7 @@ internal_cplus_demangle (work, mangled)\n   string decl;\n   int success = 0;\n   char *demangled = NULL;\n-  int s1,s2,s3,s4;\n+  int s1, s2, s3, s4;\n   s1 = work->constructor;\n   s2 = work->destructor;\n   s3 = work->static_type;\n@@ -1126,7 +1127,7 @@ internal_cplus_demangle (work, mangled)\n   work->destructor = s2;\n   work->static_type = s3;\n   work->type_quals = s4;\n-  return (demangled);\n+  return demangled;\n }\n \n \n@@ -1287,7 +1288,7 @@ mop_up (work, declp, success)\n   else\n     {\n       string_appendn (declp, \"\", 1);\n-      demangled = declp -> b;\n+      demangled = declp->b;\n     }\n   return (demangled);\n }\n@@ -5096,6 +5097,7 @@ main (argc, argv)\n \tcase gnu_demangling:\n \tcase lucid_demangling:\n \tcase arm_demangling:\n+\tcase java_demangling:\n \tcase edg_demangling:\n \t  valid_symbols = standard_symbol_characters ();\n \t  break;"}]}