{"sha": "c8361db176c68d1d3b4085970b8862387785e0c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzNjFkYjE3NmM2OGQxZDNiNDA4NTk3MGI4ODYyMzg3Nzg1ZTBjMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-17T19:53:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-17T19:53:45Z"}, "message": "re PR c++/44158 ([C++0x] wrong overload resolution for copy-initialization from an rvalue)\n\n\tPR c++/44158\n\t* call.c (build_over_call): Don't do bitwise copy for move ctor.\n\nFrom-SVN: r159508", "tree": {"sha": "1fdc240c917ac286bc38d34d6a9ce5d688527319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fdc240c917ac286bc38d34d6a9ce5d688527319"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8361db176c68d1d3b4085970b8862387785e0c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8361db176c68d1d3b4085970b8862387785e0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8361db176c68d1d3b4085970b8862387785e0c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8361db176c68d1d3b4085970b8862387785e0c2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b258210c50149d3c643aaa85e4ea60b9b366946b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b258210c50149d3c643aaa85e4ea60b9b366946b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b258210c50149d3c643aaa85e4ea60b9b366946b"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "f06c6cd481af9bb06c5b328bf6b92882125498cc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c8361db176c68d1d3b4085970b8862387785e0c2", "patch": "@@ -1,3 +1,8 @@\n+2010-05-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44158\n+\t* call.c (build_over_call): Don't do bitwise copy for move ctor.\n+\n 2010-05-17  Dodji Seketeli  <dodji@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "5d1300709c9a1d930110b1df27a32332aa797041", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c8361db176c68d1d3b4085970b8862387785e0c2", "patch": "@@ -5776,7 +5776,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t}\n       /* [class.copy]: the copy constructor is implicitly defined even if\n \t the implementation elided its use.  */\n-      else if (TYPE_HAS_COMPLEX_INIT_REF (DECL_CONTEXT (fn)))\n+      else if (TYPE_HAS_COMPLEX_INIT_REF (DECL_CONTEXT (fn))\n+\t       || move_fn_p (fn))\n \t{\n \t  mark_used (fn);\n \t  already_used = true;\n@@ -5794,7 +5795,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t{\n \t  if (TREE_CODE (arg) == TARGET_EXPR)\n \t    return arg;\n-\t  else if (TYPE_HAS_TRIVIAL_INIT_REF (DECL_CONTEXT (fn)))\n+\t  else if (TYPE_HAS_TRIVIAL_INIT_REF (DECL_CONTEXT (fn))\n+\t\t   && !move_fn_p (fn))\n \t    return build_target_expr_with_type (arg, DECL_CONTEXT (fn));\n \t}\n       else if (TREE_CODE (arg) == TARGET_EXPR"}, {"sha": "67cd4ad1e88f9346e8b71d714bb9821f5159d156", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8361db176c68d1d3b4085970b8862387785e0c2", "patch": "@@ -1,3 +1,8 @@\n+2010-05-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44158\n+\t* g++.dg/cpp0x/rv-trivial-bug.C: Test copy-init too.\n+\n 2010-05-17  Martin Jambor  <mjambor@suse.cz>\n \n \t* g++.dg/ipa/ivinline-1.C: New test."}, {"sha": "beb8acb5a501a766d580c9b740156875bc666b0d", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-trivial-bug.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-trivial-bug.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8361db176c68d1d3b4085970b8862387785e0c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-trivial-bug.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-trivial-bug.C?ref=c8361db176c68d1d3b4085970b8862387785e0c2", "patch": "@@ -19,7 +19,8 @@ int test2()\n     base2 b2(b);\n     assert(move_construct == 0);\n     base2 b3(static_cast<base2&&>(b));\n-    assert(move_construct == 1);\n+    base2 b4 = static_cast<base2&&>(b);\n+    assert(move_construct == 2);\n     b = b2;\n     assert(move_assign == 0);\n     b = static_cast<base2&&>(b2);"}]}