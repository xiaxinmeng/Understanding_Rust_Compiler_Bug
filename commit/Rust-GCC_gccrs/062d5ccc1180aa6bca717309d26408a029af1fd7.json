{"sha": "062d5ccc1180aa6bca717309d26408a029af1fd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyZDVjY2MxMTgwYWE2YmNhNzE3MzA5ZDI2NDA4YTAyOWFmMWZkNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-03T07:16:28Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-03T07:16:28Z"}, "message": "poly_int: vectorizable_conversion\n\nThis patch makes vectorizable_conversion cope with variable-length\nvectors.  We already require the number of elements in one vector\nto be a multiple of the number of elements in the other vector,\nso the patch uses that to choose between widening and narrowing.\n\n2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* tree-vect-stmts.c (vectorizable_conversion): Treat the number\n\tof units as polynomial.  Choose between WIDE and NARROW based\n\ton multiple_p.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r256139", "tree": {"sha": "28241ae886e345168496960efb14a73002a657a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28241ae886e345168496960efb14a73002a657a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062d5ccc1180aa6bca717309d26408a029af1fd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062d5ccc1180aa6bca717309d26408a029af1fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062d5ccc1180aa6bca717309d26408a029af1fd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062d5ccc1180aa6bca717309d26408a029af1fd7/comments", "author": null, "committer": null, "parents": [{"sha": "cf1b2ba4ea9ee4b27e341c3f704416dc77d7172f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1b2ba4ea9ee4b27e341c3f704416dc77d7172f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1b2ba4ea9ee4b27e341c3f704416dc77d7172f"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "87c70af60f2eba7a142326cdfe2da1947550b5c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062d5ccc1180aa6bca717309d26408a029af1fd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062d5ccc1180aa6bca717309d26408a029af1fd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=062d5ccc1180aa6bca717309d26408a029af1fd7", "patch": "@@ -1,3 +1,11 @@\n+2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* tree-vect-stmts.c (vectorizable_conversion): Treat the number\n+\tof units as polynomial.  Choose between WIDE and NARROW based\n+\ton multiple_p.\n+\n 2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "249f69fcda08334019d6815310f8f19261b27320", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062d5ccc1180aa6bca717309d26408a029af1fd7/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062d5ccc1180aa6bca717309d26408a029af1fd7/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=062d5ccc1180aa6bca717309d26408a029af1fd7", "patch": "@@ -4115,8 +4115,8 @@ vectorizable_conversion (gimple *stmt, gimple_stmt_iterator *gsi,\n   int ndts = 2;\n   gimple *new_stmt = NULL;\n   stmt_vec_info prev_stmt_info;\n-  int nunits_in;\n-  int nunits_out;\n+  poly_uint64 nunits_in;\n+  poly_uint64 nunits_out;\n   tree vectype_out, vectype_in;\n   int ncopies, i, j;\n   tree lhs_type, rhs_type;\n@@ -4251,12 +4251,15 @@ vectorizable_conversion (gimple *stmt, gimple_stmt_iterator *gsi,\n \n   nunits_in = TYPE_VECTOR_SUBPARTS (vectype_in);\n   nunits_out = TYPE_VECTOR_SUBPARTS (vectype_out);\n-  if (nunits_in < nunits_out)\n-    modifier = NARROW;\n-  else if (nunits_out == nunits_in)\n+  if (known_eq (nunits_out, nunits_in))\n     modifier = NONE;\n+  else if (multiple_p (nunits_out, nunits_in))\n+    modifier = NARROW;\n   else\n-    modifier = WIDEN;\n+    {\n+      gcc_checking_assert (multiple_p (nunits_in, nunits_out));\n+      modifier = WIDEN;\n+    }\n \n   /* Multiple types in SLP are handled by creating the appropriate number of\n      vectorized stmts for each SLP node.  Hence, NCOPIES is always 1 in"}]}