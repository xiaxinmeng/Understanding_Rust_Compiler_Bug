{"sha": "694114ea9567d1d7bc96b3d5ce287daede11b941", "node_id": "C_kwDOANBUbNoAKDY5NDExNGVhOTU2N2QxZDdiYzk2YjNkNWNlMjg3ZGFlZGUxMWI5NDE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-05-02T19:38:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-02T19:38:51Z"}, "message": "Merge #1201\n\n1201: Generic functions should not be TREE_PUBLIC r=philberty a=philberty\n\nGeneric functions cannot be public since the symbols could overlap in\r\nlinking other crates reusing the same generic. The other benefit here is\r\nthat when optimizations are turned on we can eliminate more code since the\r\nsymbol does not _need_ to be public.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "4fc4f47dcd5b4268c5161ddd6747f36ec7456049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fc4f47dcd5b4268c5161ddd6747f36ec7456049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/694114ea9567d1d7bc96b3d5ce287daede11b941", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJicDNLCRBK7hj4Ov3rIwAABAIIAI+RAgGfDXspIdMgn/TFjsLB\nvRORU3FaJh0za7RkKCLuFXWW1JuuLOuA2iuXR8LK8HvbkX6bfi5v7gAv9odpW9Ka\nCSlk55M82YQVR0bRBT9cOd1V6nGRlMDiEUSIlU/6afeEUAuseU0d2gvhjme0GfUt\ns6sLbfwrIzQXov5ZOVXnIEjAM1XWxnzCGnmT5qtxa7YIdZsNI1VeAubiileNHrh/\nZ8jLtQzl7PLKT4thXfdQjKVSF/b3cSeYLRDwcDcguTj6BNHHz5iuKzAamkOS+HDV\njCRw2t8GljsKa9g1gG4DPxx4lcpbkDL5qAEmE4939amcxOucgV9TXyGcSgMYhIU=\n=4T/2\n-----END PGP SIGNATURE-----\n", "payload": "tree 4fc4f47dcd5b4268c5161ddd6747f36ec7456049\nparent fb136314f9584744ccc7b09ace3cea99129b7cf4\nparent cf9d65a913640ecb4f839fbe2e7683ee00dc07f3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1651520331 +0000\ncommitter GitHub <noreply@github.com> 1651520331 +0000\n\nMerge #1201\n\n1201: Generic functions should not be TREE_PUBLIC r=philberty a=philberty\n\nGeneric functions cannot be public since the symbols could overlap in\r\nlinking other crates reusing the same generic. The other benefit here is\r\nthat when optimizations are turned on we can eliminate more code since the\r\nsymbol does not _need_ to be public.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694114ea9567d1d7bc96b3d5ce287daede11b941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694114ea9567d1d7bc96b3d5ce287daede11b941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694114ea9567d1d7bc96b3d5ce287daede11b941/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb136314f9584744ccc7b09ace3cea99129b7cf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb136314f9584744ccc7b09ace3cea99129b7cf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb136314f9584744ccc7b09ace3cea99129b7cf4"}, {"sha": "cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "49f31fca233d18a219ac51b9857b2b39584b1e64", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694114ea9567d1d7bc96b3d5ce287daede11b941/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694114ea9567d1d7bc96b3d5ce287daede11b941/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=694114ea9567d1d7bc96b3d5ce287daede11b941", "patch": "@@ -38,14 +38,14 @@ bool inline should_mangle_item (const tree fndecl)\n \n void\n HIRCompileBase::setup_fndecl (tree fndecl, bool is_main_entry_point,\n-\t\t\t      HIR::Visibility &visibility,\n+\t\t\t      bool is_generic_fn, HIR::Visibility &visibility,\n \t\t\t      const HIR::FunctionQualifiers &qualifiers,\n \t\t\t      const AST::AttrVec &attrs)\n {\n   // if its the main fn or pub visibility mark its as DECL_PUBLIC\n   // please see https://github.com/Rust-GCC/gccrs/pull/137\n   bool is_pub = visibility.get_vis_type () == HIR::Visibility::VisType::PUBLIC;\n-  if (is_main_entry_point || is_pub)\n+  if (is_main_entry_point || (is_pub && !is_generic_fn))\n     {\n       TREE_PUBLIC (fndecl) = 1;\n     }\n@@ -427,7 +427,9 @@ HIRCompileBase::compile_function (\n   unsigned int flags = 0;\n   tree fndecl = ctx->get_backend ()->function (compiled_fn_type, ir_symbol_name,\n \t\t\t\t\t       \"\" /* asm_name */, flags, locus);\n-  setup_fndecl (fndecl, is_main_fn, visibility, qualifiers, outer_attrs);\n+\n+  setup_fndecl (fndecl, is_main_fn, fntype->has_subsititions_defined (),\n+\t\tvisibility, qualifiers, outer_attrs);\n   setup_abi_options (fndecl, fntype->get_abi ());\n \n   // conditionally mangle the function name"}, {"sha": "f12913ce97059ebf93299d86714773b285a8c268", "filename": "gcc/rust/backend/rust-compile-base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694114ea9567d1d7bc96b3d5ce287daede11b941/gcc%2Frust%2Fbackend%2Frust-compile-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694114ea9567d1d7bc96b3d5ce287daede11b941/gcc%2Frust%2Fbackend%2Frust-compile-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.h?ref=694114ea9567d1d7bc96b3d5ce287daede11b941", "patch": "@@ -76,7 +76,7 @@ class HIRCompileBase\n \t\t\t\t   tree expression, Location locus);\n \n   static void setup_fndecl (tree fndecl, bool is_main_entry_point,\n-\t\t\t    HIR::Visibility &visibility,\n+\t\t\t    bool is_generic_fn, HIR::Visibility &visibility,\n \t\t\t    const HIR::FunctionQualifiers &qualifiers,\n \t\t\t    const AST::AttrVec &attrs);\n "}]}