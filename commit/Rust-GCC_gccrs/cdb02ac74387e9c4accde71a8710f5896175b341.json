{"sha": "cdb02ac74387e9c4accde71a8710f5896175b341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RiMDJhYzc0Mzg3ZTljNGFjY2RlNzFhODcxMGY1ODk2MTc1YjM0MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-12-02T20:39:25Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-12-02T20:39:25Z"}, "message": "re PR sanitizer/59353 (-fsanitize=return is not documented)\n\n\tPR sanitizer/59353\n\t* doc/invoke.texi: Document -fsanitize=return.\n\nFrom-SVN: r205601", "tree": {"sha": "2736d8b08b195d96cfeb0805f690fdef73bd9bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2736d8b08b195d96cfeb0805f690fdef73bd9bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdb02ac74387e9c4accde71a8710f5896175b341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb02ac74387e9c4accde71a8710f5896175b341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb02ac74387e9c4accde71a8710f5896175b341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb02ac74387e9c4accde71a8710f5896175b341/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52cacf7207de329a48b63f1a4cf1cb3cef37fdea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cacf7207de329a48b63f1a4cf1cb3cef37fdea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52cacf7207de329a48b63f1a4cf1cb3cef37fdea"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "1285f237f988170e97a796c82ce551493feb0dc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb02ac74387e9c4accde71a8710f5896175b341/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb02ac74387e9c4accde71a8710f5896175b341/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cdb02ac74387e9c4accde71a8710f5896175b341", "patch": "@@ -1,3 +1,8 @@\n+2013-12-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/59353\n+\t* doc/invoke.texi: Document -fsanitize=return.\n+\n 2013-12-02  Tobias Burnus  <burnus@net-b.de>\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n "}, {"sha": "b30e889764d406379f9819114090b8fe6710d7b0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb02ac74387e9c4accde71a8710f5896175b341/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb02ac74387e9c4accde71a8710f5896175b341/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=cdb02ac74387e9c4accde71a8710f5896175b341", "patch": "@@ -5355,6 +5355,14 @@ built with this option turned on will issue an error message when it\n tries to dereference a NULL pointer, or if a reference (possibly an\n rvalue reference) is bound to a NULL pointer.\n \n+@item -fsanitize=return\n+@opindex fsanitize=return\n+\n+This option enables return statement checking.  Programs\n+built with this option turned on will issue an error message\n+when the end of a non-void function is reached without actually\n+returning a value.  This option works in C++ only.\n+\n @end table\n \n While @option{-ftrapv} causes traps for signed overflows to be emitted,"}]}