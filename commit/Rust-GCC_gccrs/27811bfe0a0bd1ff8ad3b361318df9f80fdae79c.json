{"sha": "27811bfe0a0bd1ff8ad3b361318df9f80fdae79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc4MTFiZmUwYTBiZDFmZjhhZDNiMzYxMzE4ZGY5ZjgwZmRhZTc5Yw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-07-15T15:53:55Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-15T15:53:55Z"}, "message": "re PR tree-optimization/22376 (PTA is slow on a silly unrealistic test case)\n\n2005-07-13  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/22376\n\t* tree-ssa-structalias.c (build_constraint_graph): We really meant\n\tspecial var here.\n\t(need_to_solve): New function.\n\t(compute_points_to_sets): Use it.\n\nFrom-SVN: r102056", "tree": {"sha": "1f8e84aae59133e04ab98fcb62b8d416c4848aed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f8e84aae59133e04ab98fcb62b8d416c4848aed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b151cb23b672323fea91892fcb1d2f41c410e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b151cb23b672323fea91892fcb1d2f41c410e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b151cb23b672323fea91892fcb1d2f41c410e78"}], "stats": {"total": 73, "additions": 58, "deletions": 15}, "files": [{"sha": "312106e8e953ad9e50e40bffb5a467278217811f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27811bfe0a0bd1ff8ad3b361318df9f80fdae79c", "patch": "@@ -1,3 +1,11 @@\n+2005-07-13  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/22376\n+\t* tree-ssa-structalias.c (build_constraint_graph): We really meant\n+\tspecial var here.\n+\t(need_to_solve): New function.\n+\t(compute_points_to_sets): Use it.\n+\t\n 2005-07-15  Jan Hubicka  <jh@suse.cz>\n \n \t* cfg.c (update_bb_profile_for_threading): More diagnostic."}, {"sha": "cb45a8cc83c3ed51974d9e104550a7eb088e8c07", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 50, "deletions": 15, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27811bfe0a0bd1ff8ad3b361318df9f80fdae79c/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=27811bfe0a0bd1ff8ad3b361318df9f80fdae79c", "patch": "@@ -985,8 +985,8 @@ build_constraint_graph (void)\n \t}\n       else if (rhs.type == DEREF)\n \t{\n-\t  /* !ANYTHING = *y */\n-\t  if (lhs.var > anything_id) \n+\t  /* !special var= *y */\n+\t  if (!(get_varinfo (lhs.var)->is_special_var))\n \t    insert_into_complex (rhs.var, c);\n \t}\n       else if (rhs.type == ADDRESSOF)\n@@ -3491,6 +3491,38 @@ init_base_vars (void)\n   process_constraint (new_constraint (lhs, rhs));\n }  \n \n+/* Return true if we actually need to solve the constraint graph in order to\n+   get our points-to sets.  This is false when, for example, no addresses are\n+   taken other than special vars, or all points-to sets with members already\n+   contain the anything variable.  */\n+\n+static bool\n+need_to_solve (void)\n+{\n+  int i;\n+  varinfo_t v;\n+  bool found_address_taken = false;\n+  bool found_non_anything = false;\n+\n+  for (i = 0; VEC_iterate (varinfo_t, varmap, i, v); i++)\n+    {\n+      if (v->is_special_var)\n+\tcontinue;\n+\n+      if (v->address_taken)\n+\tfound_address_taken = true;\n+\n+      if (v->solution \n+\t  && !bitmap_empty_p (v->solution) \n+\t  && !bitmap_bit_p (v->solution, anything_id))\n+\tfound_non_anything = true;\n+\n+      if (found_address_taken && found_non_anything)\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n \n /* Create points-to sets for the current function.  See the comments\n    at the start of the file for an algorithmic overview.  */\n@@ -3541,19 +3573,22 @@ compute_points_to_sets (struct alias_info *ai)\n       fprintf (dump_file, \"Points-to analysis\\n\\nConstraints:\\n\\n\");\n       dump_constraints (dump_file);\n     }\n-\n-  if (dump_file)\n-    fprintf (dump_file, \"\\nCollapsing static cycles and doing variable \"\n-\t                \"substitution:\\n\");\n-\n-  find_and_collapse_graph_cycles (graph, false);\n-  perform_var_substitution (graph);\n-\n-  if (dump_file)\n-    fprintf (dump_file, \"\\nSolving graph:\\n\");\n-\n-  solve_graph (graph);\n-\n+  \n+  if (need_to_solve ())\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"\\nCollapsing static cycles and doing variable \"\n+\t\t \"substitution:\\n\");\n+      \n+      find_and_collapse_graph_cycles (graph, false);\n+      perform_var_substitution (graph);\n+      \n+      if (dump_file)\n+\tfprintf (dump_file, \"\\nSolving graph:\\n\");\n+      \n+      solve_graph (graph);\n+    }\n+  \n   if (dump_file)\n     dump_sa_points_to_info (dump_file);\n   "}]}