{"sha": "4184ef1b53a953f11d32569788d2ec3261dde565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE4NGVmMWI1M2E5NTNmMTFkMzI1Njk3ODhkMmVjMzI2MWRkZTU2NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-03-23T09:38:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-03-23T09:38:07Z"}, "message": "decl.c (gnat_to_gnu_entity): Create TYPE_DECL for the padded type built in order to support a specified...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Create TYPE_DECL\n\tfor the padded type built in order to support a specified alignment.\n\tFix incorrect formatting.\n\nFrom-SVN: r171342", "tree": {"sha": "cd54b4fec1924d75ab28ab56b0ea03c19e37cc25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd54b4fec1924d75ab28ab56b0ea03c19e37cc25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4184ef1b53a953f11d32569788d2ec3261dde565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4184ef1b53a953f11d32569788d2ec3261dde565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4184ef1b53a953f11d32569788d2ec3261dde565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4184ef1b53a953f11d32569788d2ec3261dde565/comments", "author": null, "committer": null, "parents": [{"sha": "a5c7d693b920b650fb863e4b9a41b01c199f698f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c7d693b920b650fb863e4b9a41b01c199f698f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c7d693b920b650fb863e4b9a41b01c199f698f"}], "stats": {"total": 104, "additions": 91, "deletions": 13}, "files": [{"sha": "1ae98609ba6352351983bce3cc55915895d78b70", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4184ef1b53a953f11d32569788d2ec3261dde565", "patch": "@@ -1,3 +1,9 @@\n+2011-03-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Create TYPE_DECL\n+\tfor the padded type built in order to support a specified alignment.\n+\tFix incorrect formatting.\n+\n 2011-03-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR bootstrap/48216"}, {"sha": "313841ab873ea27c80feddd071bc3e2d18583344", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=4184ef1b53a953f11d32569788d2ec3261dde565", "patch": "@@ -687,6 +687,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tif (kind != E_Exception && Known_Alignment (gnat_entity))\n \t  {\n \t    gcc_assert (Present (Alignment (gnat_entity)));\n+\n \t    align = validate_alignment (Alignment (gnat_entity), gnat_entity,\n \t\t\t\t\tTYPE_ALIGN (gnu_type));\n \n@@ -695,9 +696,20 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    if (Present (Address_Clause (gnat_entity)))\n \t      align = 0;\n \t    else\n-\t      gnu_type\n-\t\t= maybe_pad_type (gnu_type, NULL_TREE, align, gnat_entity,\n-\t\t\t\t  false, false, definition, true);\n+\t      {\n+\t\ttree orig_type = gnu_type;\n+\n+\t\tgnu_type\n+\t\t  = maybe_pad_type (gnu_type, NULL_TREE, align, gnat_entity,\n+\t\t\t\t    false, false, definition, true);\n+\n+\t\t/* If a padding record was made, declare it now since it will\n+\t\t   never be declared otherwise.  This is necessary to ensure\n+\t\t   that its subtrees are properly marked.  */\n+\t\tif (gnu_type != orig_type && !DECL_P (TYPE_NAME (gnu_type)))\n+\t\t  create_type_decl (TYPE_NAME (gnu_type), gnu_type, NULL, true,\n+\t\t\t\t    debug_info_p, gnat_entity);\n+\t      }\n \t  }\n \n \t/* If we are defining the object, see if it has a Size and validate it\n@@ -865,16 +877,15 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tif (Is_Constr_Subt_For_UN_Aliased (Etype (gnat_entity))\n \t    && Is_Array_Type (Etype (gnat_entity))\n \t    && !type_annotate_only)\n-\t{\n-\t  tree gnu_fat\n-\t    = TREE_TYPE (gnat_to_gnu_type (Base_Type (Etype (gnat_entity))));\n-\n-\t  gnu_type\n-\t    = build_unc_object_type_from_ptr (gnu_fat, gnu_type,\n-\t\t\t\t\t      concat_name (gnu_entity_name,\n-\t\t\t\t\t\t\t   \"UNC\"),\n-\t\t\t\t\t      debug_info_p);\n-\t}\n+\t  {\n+\t    tree gnu_fat\n+\t      = TREE_TYPE (gnat_to_gnu_type (Base_Type (Etype (gnat_entity))));\n+\t    gnu_type\n+\t      = build_unc_object_type_from_ptr (gnu_fat, gnu_type,\n+\t\t\t\t\t\tconcat_name (gnu_entity_name,\n+\t\t\t\t\t\t\t     \"UNC\"),\n+\t\t\t\t\t\tdebug_info_p);\n+\t  }\n \n #ifdef MINIMUM_ATOMIC_ALIGNMENT\n \t/* If the size is a constant and no alignment is specified, force"}, {"sha": "8bc06037175d9e67f59e25cd16ffb88db4b3ecde", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4184ef1b53a953f11d32569788d2ec3261dde565", "patch": "@@ -1,3 +1,8 @@\n+2011-03-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/array14.ad[sb]: New test.\n+\t* gnat.dg/array14_pkg.ads: New helper.\n+\n 2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.c-torture/execute/920501-8.x: Remove."}, {"sha": "aed29015a9a1f2ae47cfd4acd7ffb31b846b5aa7", "filename": "gcc/testsuite/gnat.dg/array14.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.adb?ref=4184ef1b53a953f11d32569788d2ec3261dde565", "patch": "@@ -0,0 +1,35 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-gnatws\" }\r\n+\r\n+with Array14_Pkg; use Array14_Pkg;\r\n+\r\n+package body Array14 is\r\n+\r\n+  package Nested is\r\n+\r\n+    Length : constant SSE.Storage_Count := Length2;\r\n+\r\n+    subtype Encoded_Index_Type is SSE.Storage_Count range 1 .. Length;\r\n+    subtype Encoded_Type is SSE.Storage_Array (Encoded_Index_Type'Range);\r\n+\r\n+    procedure Encode (Input : in Integer; Output : out Encoded_Type);\r\n+\r\n+  end;\r\n+\r\n+  package body Nested is\r\n+\r\n+    procedure Encode (Input : in Integer; Output : out Encoded_Type) is\r\n+    begin\r\n+      Encode2 (Input, Output);\r\n+    end;\r\n+\r\n+  end;\r\n+\r\n+  procedure Init is\r\n+    O : Nested.Encoded_Type;\r\n+    for O'Alignment use 4;\r\n+  begin\r\n+    null;\r\n+  end;\r\n+\r\n+end Array14;\r"}, {"sha": "9d38eeb8895919c21c5cab29f68b48b712640eef", "filename": "gcc/testsuite/gnat.dg/array14.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray14.ads?ref=4184ef1b53a953f11d32569788d2ec3261dde565", "patch": "@@ -0,0 +1,5 @@\n+package Array14 is\r\n+\r\n+  procedure Init;\r\n+\r\n+end Array14;\r"}, {"sha": "804090586e304d16b16bfab3a71392ad9a69797e", "filename": "gcc/testsuite/gnat.dg/array14_pkg.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2Fgnat.dg%2Farray14_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4184ef1b53a953f11d32569788d2ec3261dde565/gcc%2Ftestsuite%2Fgnat.dg%2Farray14_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray14_pkg.ads?ref=4184ef1b53a953f11d32569788d2ec3261dde565", "patch": "@@ -0,0 +1,16 @@\n+with System.Storage_Elements;\r\n+\r\n+package Array14_Pkg is\r\n+\r\n+  package SSE renames System.Storage_Elements;\r\n+\r\n+  function Parity_Byte_Count return SSE.Storage_Count;\r\n+\r\n+  Length2 : constant SSE.Storage_Count := Parity_Byte_Count;\r\n+\r\n+  subtype Encoded_Index_Type2 is SSE.Storage_Count range 1 .. Length2;\r\n+  subtype Encoded_Type2 is SSE.Storage_Array (Encoded_Index_Type2'Range);\r\n+\r\n+  procedure Encode2 (Input : in Integer; Output : out Encoded_Type2);\r\n+\r\n+end Array14_Pkg;\r"}]}