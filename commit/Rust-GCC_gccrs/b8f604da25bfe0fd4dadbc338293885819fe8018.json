{"sha": "b8f604da25bfe0fd4dadbc338293885819fe8018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhmNjA0ZGEyNWJmZTBmZDRkYWRiYzMzODI5Mzg4NTgxOWZlODAxOA==", "commit": {"author": {"name": "prathamesh.kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2021-08-11T10:00:14Z"}, "committer": {"name": "prathamesh.kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2021-08-11T10:01:53Z"}, "message": "arm/66791: Replace builtins for vdup_n and vmov_n intrinsics.\n\ngcc/ChangeLog:\n\n\tPR target/66791\n\t* config/arm/arm_neon.h (vdup_n_s8): Replace call to builtin\n\twith constructor.\n\t(vdup_n_s16): Likewise.\n\t(vdup_n_s32): Likewise.\n\t(vdup_n_s64): Likewise.\n\t(vdup_n_u8): Likewise.\n\t(vdup_n_u16): Likewise.\n\t(vdup_n_u32): Likewise.\n\t(vdup_n_u64): Likewise.\n\t(vdup_n_p8): Likewise.\n\t(vdup_n_p16): Likewise.\n\t(vdup_n_p64): Likewise.\n\t(vdup_n_f16): Likewise.\n\t(vdup_n_f32): Likewise.\n\t(vdupq_n_s8): Likewise.\n\t(vdupq_n_s16): Likewise.\n\t(vdupq_n_s32): Likewise.\n\t(vdupq_n_s64): Likewise.\n\t(vdupq_n_u8): Likewise.\n\t(vdupq_n_u16): Likewise.\n\t(vdupq_n_u32): Likewise.\n\t(vdupq_n_u64): Likewise.\n\t(vdupq_n_p8): Likewise.\n\t(vdupq_n_p16): Likewise.\n\t(vdupq_n_p64): Likewise.\n\t(vdupq_n_f16): Likewise.\n\t(vdupq_n_f32): Likewise.\n\t(vmov_n_s8): Replace call to builtin with call to corresponding\n\tvdup_n intrinsic.\n\t(vmov_n_s16): Likewise.\n\t(vmov_n_s32): Likewise.\n\t(vmov_n_s64): Likewise.\n\t(vmov_n_u8): Likewise.\n\t(vmov_n_u16): Likewise.\n\t(vmov_n_u32): Likewise.\n\t(vmov_n_u64): Likewise.\n\t(vmov_n_p8): Likewise.\n\t(vmov_n_p16): Likewise.\n\t(vmov_n_f16): Likewise.\n\t(vmov_n_f32): Likewise.\n\t(vmovq_n_s8): Likewise.\n\t(vmovq_n_s16): Likewise.\n\t(vmovq_n_s32): Likewise.\n\t(vmovq_n_s64): Likewise.\n\t(vmovq_n_u8): Likewise.\n\t(vmovq_n_u16): Likewise.\n\t(vmovq_n_u32): Likewise.\n\t(vmovq_n_u64): Likewise.\n\t(vmovq_n_p8): Likewise.\n\t(vmovq_n_p16): Likewise.\n\t(vmovq_n_f16): Likewise.\n\t(vmovq_n_f32): Likewise.\n\t* config/arm/arm_neon_builtins.def: Remove entries for vdup_n.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/66791\n\t* gcc.target/arm/pr51534.c: Adjust test.", "tree": {"sha": "681e9916205e0c703a6b3d1f01978510f04ab9c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/681e9916205e0c703a6b3d1f01978510f04ab9c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8f604da25bfe0fd4dadbc338293885819fe8018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f604da25bfe0fd4dadbc338293885819fe8018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8f604da25bfe0fd4dadbc338293885819fe8018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f604da25bfe0fd4dadbc338293885819fe8018/comments", "author": null, "committer": null, "parents": [{"sha": "0e6017f5b4f13906dd2c09b25403ffa94a80181f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6017f5b4f13906dd2c09b25403ffa94a80181f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e6017f5b4f13906dd2c09b25403ffa94a80181f"}], "stats": {"total": 136, "additions": 63, "deletions": 73}, "files": [{"sha": "3364b37f69dfc33082388246c03149d9ad66a634", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 55, "deletions": 52, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f604da25bfe0fd4dadbc338293885819fe8018/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f604da25bfe0fd4dadbc338293885819fe8018/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=b8f604da25bfe0fd4dadbc338293885819fe8018", "patch": "@@ -6664,63 +6664,63 @@ __extension__ extern __inline int8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_s8 (int8_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vdup_nv8qi ((__builtin_neon_qi) __a);\n+  return (int8x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline int16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_s16 (int16_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vdup_nv4hi ((__builtin_neon_hi) __a);\n+  return (int16x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline int32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_s32 (int32_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vdup_nv2si ((__builtin_neon_si) __a);\n+  return (int32x2_t) {__a, __a};\n }\n \n __extension__ extern __inline float32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_f32 (float32_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vdup_nv2sf ((__builtin_neon_sf) __a);\n+  return (float32x2_t) {__a, __a};\n }\n \n __extension__ extern __inline uint8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_u8 (uint8_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vdup_nv8qi ((__builtin_neon_qi) __a);\n+  return (uint8x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline uint16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_u16 (uint16_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vdup_nv4hi ((__builtin_neon_hi) __a);\n+  return (uint16x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline uint32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_u32 (uint32_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vdup_nv2si ((__builtin_neon_si) __a);\n+  return (uint32x2_t) {__a, __a};\n }\n \n __extension__ extern __inline poly8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_p8 (poly8_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vdup_nv8qi ((__builtin_neon_qi) __a);\n+  return (poly8x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline poly16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_p16 (poly16_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vdup_nv4hi ((__builtin_neon_hi) __a);\n+  return (poly16x4_t) {__a, __a, __a, __a};\n }\n \n #pragma GCC push_options\n@@ -6729,22 +6729,22 @@ __extension__ extern __inline poly64x1_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_p64 (poly64_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vdup_ndi ((__builtin_neon_di) __a);\n+  return (poly64x1_t) {__a};\n }\n \n #pragma GCC pop_options\n __extension__ extern __inline int64x1_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_s64 (int64_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vdup_ndi ((__builtin_neon_di) __a);\n+  return (int64x1_t) {__a};\n }\n \n __extension__ extern __inline uint64x1_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_u64 (uint64_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vdup_ndi ((__builtin_neon_di) __a);\n+  return (uint64x1_t) {__a};\n }\n \n #pragma GCC push_options\n@@ -6753,239 +6753,242 @@ __extension__ extern __inline poly64x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_p64 (poly64_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vdup_nv2di ((__builtin_neon_di) __a);\n+  return (poly64x2_t) {__a, __a};\n }\n \n #pragma GCC pop_options\n __extension__ extern __inline int8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_s8 (int8_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vdup_nv16qi ((__builtin_neon_qi) __a);\n+  return (int8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,\n+\t\t      __a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline int16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_s16 (int16_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vdup_nv8hi ((__builtin_neon_hi) __a);\n+  return (int16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline int32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_s32 (int32_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vdup_nv4si ((__builtin_neon_si) __a);\n+  return (int32x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_f32 (float32_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vdup_nv4sf ((__builtin_neon_sf) __a);\n+  return (float32x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline uint8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_u8 (uint8_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vdup_nv16qi ((__builtin_neon_qi) __a);\n+  return (uint8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,\n+\t\t       __a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline uint16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_u16 (uint16_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vdup_nv8hi ((__builtin_neon_hi) __a);\n+  return (uint16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline uint32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_u32 (uint32_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vdup_nv4si ((__builtin_neon_si) __a);\n+  return (uint32x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline poly8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_p8 (poly8_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vdup_nv16qi ((__builtin_neon_qi) __a);\n+  return (poly8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,\n+\t\t       __a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline poly16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_p16 (poly16_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vdup_nv8hi ((__builtin_neon_hi) __a);\n+  return (poly16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline int64x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_s64 (int64_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vdup_nv2di ((__builtin_neon_di) __a);\n+  return (int64x2_t) {__a, __a};\n }\n \n __extension__ extern __inline uint64x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_u64 (uint64_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vdup_nv2di ((__builtin_neon_di) __a);\n+  return (uint64x2_t) {__a, __a};\n }\n \n __extension__ extern __inline int8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_s8 (int8_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vdup_nv8qi ((__builtin_neon_qi) __a);\n+  return vdup_n_s8 (__a);\n }\n \n __extension__ extern __inline int16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_s16 (int16_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vdup_nv4hi ((__builtin_neon_hi) __a);\n+  return vdup_n_s16 (__a);\n }\n \n __extension__ extern __inline int32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_s32 (int32_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vdup_nv2si ((__builtin_neon_si) __a);\n+  return vdup_n_s32 (__a);\n }\n \n __extension__ extern __inline float32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_f32 (float32_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vdup_nv2sf ((__builtin_neon_sf) __a);\n+  return vdup_n_f32 (__a);\n }\n \n __extension__ extern __inline uint8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_u8 (uint8_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vdup_nv8qi ((__builtin_neon_qi) __a);\n+  return vdup_n_u8 (__a);\n }\n \n __extension__ extern __inline uint16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_u16 (uint16_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vdup_nv4hi ((__builtin_neon_hi) __a);\n+  return vdup_n_u16 (__a);\n }\n \n __extension__ extern __inline uint32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_u32 (uint32_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vdup_nv2si ((__builtin_neon_si) __a);\n+  return vdup_n_u32 (__a);\n }\n \n __extension__ extern __inline poly8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_p8 (poly8_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vdup_nv8qi ((__builtin_neon_qi) __a);\n+  return vdup_n_p8 (__a);\n }\n \n __extension__ extern __inline poly16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_p16 (poly16_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vdup_nv4hi ((__builtin_neon_hi) __a);\n+  return vdup_n_p16 (__a);\n }\n \n __extension__ extern __inline int64x1_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_s64 (int64_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vdup_ndi ((__builtin_neon_di) __a);\n+  return vdup_n_s64 (__a);\n }\n \n __extension__ extern __inline uint64x1_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_u64 (uint64_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vdup_ndi ((__builtin_neon_di) __a);\n+  return vdup_n_u64 (__a);\n }\n \n __extension__ extern __inline int8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_s8 (int8_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vdup_nv16qi ((__builtin_neon_qi) __a);\n+  return vdupq_n_s8 (__a);\n }\n \n __extension__ extern __inline int16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_s16 (int16_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vdup_nv8hi ((__builtin_neon_hi) __a);\n+  return vdupq_n_s16 (__a);\n }\n \n __extension__ extern __inline int32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_s32 (int32_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vdup_nv4si ((__builtin_neon_si) __a);\n+  return vdupq_n_s32 (__a);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_f32 (float32_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vdup_nv4sf ((__builtin_neon_sf) __a);\n+  return vdupq_n_f32 (__a);\n }\n \n __extension__ extern __inline uint8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_u8 (uint8_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vdup_nv16qi ((__builtin_neon_qi) __a);\n+  return vdupq_n_u8 (__a);\n }\n \n __extension__ extern __inline uint16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_u16 (uint16_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vdup_nv8hi ((__builtin_neon_hi) __a);\n+  return vdupq_n_u16 (__a);\n }\n \n __extension__ extern __inline uint32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_u32 (uint32_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vdup_nv4si ((__builtin_neon_si) __a);\n+  return vdupq_n_u32 (__a);\n }\n \n __extension__ extern __inline poly8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_p8 (poly8_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vdup_nv16qi ((__builtin_neon_qi) __a);\n+  return vdupq_n_p8 (__a);\n }\n \n __extension__ extern __inline poly16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_p16 (poly16_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vdup_nv8hi ((__builtin_neon_hi) __a);\n+  return vdupq_n_p16 (__a);\n }\n \n __extension__ extern __inline int64x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_s64 (int64_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vdup_nv2di ((__builtin_neon_di) __a);\n+  return vdupq_n_s64 (__a);\n }\n \n __extension__ extern __inline uint64x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_u64 (uint64_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vdup_nv2di ((__builtin_neon_di) __a);\n+  return vdupq_n_u64 (__a);\n }\n \n __extension__ extern __inline int8x8_t\n@@ -18005,14 +18008,14 @@ __extension__ extern __inline float16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_f16 (float16_t __a)\n {\n-  return __builtin_neon_vdup_nv4hf (__a);\n+  return (float16x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_f16 (float16_t __a)\n {\n-  return __builtin_neon_vdup_nv8hf (__a);\n+  return (float16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline float16x4_t\n@@ -18047,14 +18050,14 @@ __extension__ extern __inline float16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmov_n_f16 (float16_t __a)\n {\n-  return __builtin_neon_vdup_nv4hf (__a);\n+  return vdup_n_f16 (__a);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vmovq_n_f16 (float16_t __a)\n {\n-  return __builtin_neon_vdup_nv8hf (__a);\n+  return vdupq_n_f16 (__a);\n }\n \n __extension__ extern __inline float16x4_t\n@@ -18978,14 +18981,14 @@ __extension__ extern __inline bfloat16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdup_n_bf16 (bfloat16_t __a)\n {\n-  return __builtin_neon_vdup_nv4bf (__a);\n+  return (bfloat16x4_t) {__a, __a, __a, __a};\n }\n \n __extension__ extern __inline bfloat16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vdupq_n_bf16 (bfloat16_t __a)\n {\n-  return __builtin_neon_vdup_nv8bf (__a);\n+  return (bfloat16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};\n }\n \n __extension__ extern __inline bfloat16x4_t"}, {"sha": "fafb5c6fc51c16679ead1afda7cccfea8264fd15", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f604da25bfe0fd4dadbc338293885819fe8018/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f604da25bfe0fd4dadbc338293885819fe8018/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=b8f604da25bfe0fd4dadbc338293885819fe8018", "patch": "@@ -211,9 +211,6 @@ VAR10 (GETLANE, vget_lane,\n VAR6 (GETLANE, vget_laneu, v8qi, v4hi, v2si, v16qi, v8hi, v4si)\n VAR10 (SETLANE, vset_lane,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di)\n-VAR10 (UNOP, vdup_n,\n-\t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di)\n-VAR4 (UNOP, vdup_n, v8hf, v4hf, v8bf, v4bf)\n VAR10 (GETLANE, vdup_lane,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di)\n VAR4 (GETLANE, vdup_lane, v8hf, v4hf, v8bf, v4bf)"}, {"sha": "ac7f1ea472232b74857787517321786511178380", "filename": "gcc/testsuite/gcc.target/arm/pr51534.c", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f604da25bfe0fd4dadbc338293885819fe8018/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51534.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f604da25bfe0fd4dadbc338293885819fe8018/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51534.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51534.c?ref=b8f604da25bfe0fd4dadbc338293885819fe8018", "patch": "@@ -35,29 +35,17 @@ GEN_COND_TESTS(vceq)\n \n /* Scan for expected outputs.  */\n /* { dg-final { scan-assembler \"vcgt\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcgt\\.u8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcgt\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcgt\\.u16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcgt\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcgt\\.u32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcgt\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcgt\\.u8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcgt\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcgt\\.u16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcgt\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcgt\\.u32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcge\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcge\\.u8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcge\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcge\\.u16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcge\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcge\\.u32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcge\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcge\\.u8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcge\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcge\\.u16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vcge\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vcge\\.u32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler \"vclt\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n /* { dg-final { scan-assembler \"vclt\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n /* { dg-final { scan-assembler \"vclt\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n@@ -70,12 +58,14 @@ GEN_COND_TESTS(vceq)\n /* { dg-final { scan-assembler \"vcle\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n /* { dg-final { scan-assembler \"vcle\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n /* { dg-final { scan-assembler \"vcle\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n-/* { dg-final { scan-assembler-times \"vceq\\.i8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vceq\\.i16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vceq\\.i8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vceq\\.i16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vmov\\.i32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, #0xffffffff\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vmov\\.i32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, #4294967295\" 3 } } */\n \n /* And ensure we don't have unexpected output too.  */\n /* { dg-final { scan-assembler-not \"vc\\[gl\\]\\[te\\]\\.u\\[0-9\\]+\\[ \t\\]+\\[qQdD\\]\\[0-9\\]+, \\[qQdD\\]\\[0-9\\]+, #0\" } } */"}]}