{"sha": "1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRmNGY1MTRmYWMzYjE3YzUyYmIyODNmY2M1MmRhZjNkMTljMjZlNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:32:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:32:43Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* impunit.adb, exp_ch4.adb, s-finmas.adb: Minor reformatting.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb (TC_Rec_Add_Process_Element): For a choice with multiple\n\tvalues, we generate multiple triples of parameters in the TypeCode.\n\tBump Choice_Index for each such triple so that a subsequent default\n\tchoice is associated with the correct index in the typecode.\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-cdlili.adb (Iterate): Initialize properly an iterator over a null\n\tcontainer.\n\t(First, Last): Handle properly an iterator over a null container.\n\n2011-08-29  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch10.adb (Analyze_With_Clause,Install_Withed_Unit): Abandon\n\tprocessing if we run across a node with no Scope. This can happen if\n\twe're with-ing an library-level instance, and that instance got errors\n\tthat caused \"instantiation abandoned\".\n\t* sem_util.adb (Unit_Declaration_Node): Make it more robust, by raising\n\tan exception instead of using Assert, so it won't go into an infinite\n\tloop, even when assertions are turned off.\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-coorse.adb: Proper handling of empty ordered sets.\n\nFrom-SVN: r178249", "tree": {"sha": "5b0e00002daef44290edd3196cd25f963c17a158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b0e00002daef44290edd3196cd25f963c17a158"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/comments", "author": null, "committer": null, "parents": [{"sha": "14f0f659acfb490fc37e1a9de8f19c4759845337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f0f659acfb490fc37e1a9de8f19c4759845337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f0f659acfb490fc37e1a9de8f19c4759845337"}], "stats": {"total": 174, "additions": 123, "deletions": 51}, "files": [{"sha": "b2f77e1fabb04460c8443982372360a3175cb740", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -1,3 +1,34 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* impunit.adb, exp_ch4.adb, s-finmas.adb: Minor reformatting.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (TC_Rec_Add_Process_Element): For a choice with multiple\n+\tvalues, we generate multiple triples of parameters in the TypeCode.\n+\tBump Choice_Index for each such triple so that a subsequent default\n+\tchoice is associated with the correct index in the typecode.\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-cdlili.adb (Iterate): Initialize properly an iterator over a null\n+\tcontainer.\n+\t(First, Last): Handle properly an iterator over a null container.\n+\n+2011-08-29  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_With_Clause,Install_Withed_Unit): Abandon\n+\tprocessing if we run across a node with no Scope. This can happen if\n+\twe're with-ing an library-level instance, and that instance got errors\n+\tthat caused \"instantiation abandoned\".\n+\t* sem_util.adb (Unit_Declaration_Node): Make it more robust, by raising\n+\tan exception instead of using Assert, so it won't go into an infinite\n+\tloop, even when assertions are turned off.\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-coorse.adb: Proper handling of empty ordered sets.\n+\n 2011-08-29  Johannes Kanig  <kanig@adacore.com>\n \n \t* debug.adb: Add comments."}, {"sha": "ef02e460cceb6a5917cce0bdb8c0651a187d6be6", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -412,9 +412,12 @@ package body Ada.Containers.Doubly_Linked_Lists is\n    end First;\n \n    function First (Object : Iterator) return Cursor is\n-      C : constant Cursor := (Object.Container, Object.Container.First);\n    begin\n-      return C;\n+      if Object.Container = null then\n+         return No_Element;\n+      else\n+         return (Object.Container, Object.Container.First);\n+      end if;\n    end First;\n \n    -------------------\n@@ -819,9 +822,12 @@ package body Ada.Containers.Doubly_Linked_Lists is\n    function Iterate (Container : List)\n      return List_Iterator_Interfaces.Reversible_Iterator'class\n    is\n-      It : constant Iterator := (Container'Unchecked_Access, Container.First);\n    begin\n-      return It;\n+      if Container.Length = 0 then\n+         return Iterator'(null, null);\n+      else\n+         return Iterator'(Container'Unchecked_Access, Container.First);\n+      end if;\n    end Iterate;\n \n    function Iterate (Container : List; Start : Cursor)\n@@ -846,9 +852,12 @@ package body Ada.Containers.Doubly_Linked_Lists is\n    end Last;\n \n    function Last (Object : Iterator) return Cursor is\n-      C : constant Cursor := (Object.Container, Object.Container.Last);\n    begin\n-      return C;\n+      if Object.Container = null then\n+         return No_Element;\n+      else\n+         return (Object.Container, Object.Container.Last);\n+      end if;\n    end Last;\n \n    ------------------"}, {"sha": "849cb53c64a7f6ae26a5f40fc4252e34870719da", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -451,7 +451,11 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n    function First (Object : Iterator) return Cursor is\n    begin\n-      return Cursor'(Object.Container, Object.Container.First);\n+      if Object.Container = null then\n+         return No_Element;\n+      else\n+         return Cursor'(Object.Container, Object.Container.First);\n+      end if;\n    end First;\n \n    -------------------\n@@ -847,9 +851,12 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n      (Container : List)\n       return List_Iterator_Interfaces.Reversible_Iterator'class\n    is\n-      It : constant Iterator := (Container'Unchecked_Access, Container.First);\n    begin\n-      return It;\n+      if Container.Length = 0 then\n+         return Iterator'(null, null);\n+      else\n+         return Iterator'(Container'Unchecked_Access, Container.First);\n+      end if;\n    end Iterate;\n \n    function Iterate\n@@ -877,11 +884,11 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n    function Last (Object : Iterator) return Cursor is\n    begin\n-      if Object.Container.Last = null then\n+      if Object.Container = null then\n          return No_Element;\n+      else\n+         return Cursor'(Object.Container, Object.Container.Last);\n       end if;\n-\n-      return Cursor'(Object.Container, Object.Container.Last);\n    end Last;\n \n    ------------------"}, {"sha": "668bd739e8482e7b82128c655b7d7902fe8647fe", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -532,8 +532,13 @@ package body Ada.Containers.Ordered_Sets is\n \n    function First (Object : Iterator) return Cursor is\n    begin\n-      return Cursor'(\n-       Object.Container.all'Unrestricted_Access, Object.Container.Tree.First);\n+      if Object.Container = null then\n+         return No_Element;\n+      else\n+         return Cursor'(\n+          Object.Container.all'Unrestricted_Access,\n+            Object.Container.Tree.First);\n+      end if;\n    end First;\n \n    -------------------\n@@ -1142,10 +1147,12 @@ package body Ada.Containers.Ordered_Sets is\n    function Iterate (Container : Set)\n      return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class\n    is\n-      It : constant Iterator :=\n-             (Container'Unchecked_Access, Container.Tree.First);\n    begin\n-      return It;\n+      if Container.Length = 0 then\n+         return Iterator'(null, null);\n+      else\n+         return Iterator'(Container'Unchecked_Access, Container.Tree.First);\n+      end if;\n    end Iterate;\n \n    function Iterate (Container : Set; Start : Cursor)\n@@ -1171,7 +1178,7 @@ package body Ada.Containers.Ordered_Sets is\n \n    function Last (Object : Iterator) return Cursor is\n    begin\n-      if Object.Container.Tree.Last = null then\n+      if Object.Container = null then\n          return No_Element;\n       end if;\n "}, {"sha": "e3f9412393baf486dbfbd373da90d09fd8f7e2fd", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -664,6 +664,8 @@ package body Exp_Ch4 is\n    --  Start of processing for Expand_Allocator_Expression\n \n    begin\n+      --  WOuld be nice to comment the branches of this very long if ???\n+\n       if Is_Tagged_Type (T)\n         or else Needs_Finalization (T)\n       then\n@@ -1136,6 +1138,7 @@ package body Exp_Ch4 is\n \n             Rewrite (Exp, New_Copy (Expression (Exp)));\n          end if;\n+\n       else\n          Build_Allocate_Deallocate_Proc (N, True);\n "}, {"sha": "1f59c7ae09c593d15e1daedfeff0379b90a4744a", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 21, "deletions": 25, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -2084,8 +2084,7 @@ package body Exp_Dist is\n    is\n       N : constant Name_Id := Chars (Def);\n \n-      Overload_Order : constant Int :=\n-                         Overload_Counter_Table.Get (N) + 1;\n+      Overload_Order : constant Int := Overload_Counter_Table.Get (N) + 1;\n \n    begin\n       Overload_Counter_Table.Set (N, Overload_Order);\n@@ -10429,7 +10428,7 @@ package body Exp_Dist is\n \n                   --  A variant part\n \n-                  declare\n+                  Variant_Part : declare\n                      Disc_Type : constant Entity_Id := Etype (Name (Field));\n \n                      Is_Enum : constant Boolean :=\n@@ -10451,6 +10450,8 @@ package body Exp_Dist is\n                      Dummy_Counter : Int := 0;\n \n                      Choice_Index : Int := 0;\n+                     --  Index of current choice in TypeCode, used to identify\n+                     --  it as the default choice if it is a \"when others\".\n \n                      procedure Add_Params_For_Variant_Components;\n                      --  Add a struct TypeCode and a corresponding member name\n@@ -10489,6 +10490,8 @@ package body Exp_Dist is\n                         Add_String_Parameter (Name_Str, Union_TC_Params);\n                      end Add_Params_For_Variant_Components;\n \n+                  --  Start of processing for Variant_Part\n+\n                   begin\n                      Get_Name_String (U_Name);\n                      Name_Str := String_From_Name_Buffer;\n@@ -10547,6 +10550,8 @@ package body Exp_Dist is\n                                        Add_Params_For_Variant_Components;\n                                        J := J + Uint_1;\n                                     end loop;\n+                                    Choice_Index :=\n+                                      Choice_Index + UI_To_Int (H - L) + 1;\n                                  end;\n \n                               when N_Others_Choice =>\n@@ -10556,26 +10561,16 @@ package body Exp_Dist is\n                                  --  current choice index. This parameter is by\n                                  --  construction the 4th in Union_TC_Params.\n \n-                                 declare\n-                                    Default_Node : constant Node_Id :=\n-                                                     Pick (Union_TC_Params, 4);\n-\n-                                    New_Default_Node : constant Node_Id :=\n-                                      Make_Function_Call (Loc,\n-                                       Name =>\n-                                         New_Occurrence_Of\n-                                           (RTE (RE_TA_I32), Loc),\n-                                       Parameter_Associations =>\n-                                         New_List (\n-                                           Make_Integer_Literal (Loc,\n-                                             Intval => Choice_Index)));\n-\n-                                 begin\n-                                    Insert_Before\n-                                      (Default_Node, New_Default_Node);\n-\n-                                    Remove (Default_Node);\n-                                 end;\n+                                 Replace\n+                                   (Pick (Union_TC_Params, 4),\n+                                    Make_Function_Call (Loc,\n+                                      Name =>\n+                                        New_Occurrence_Of\n+                                          (RTE (RE_TA_I32), Loc),\n+                                      Parameter_Associations =>\n+                                        New_List (\n+                                          Make_Integer_Literal (Loc,\n+                                            Intval => Choice_Index))));\n \n                                  --  Add a placeholder member label for the\n                                  --  default case, which must have the\n@@ -10594,6 +10589,7 @@ package body Exp_Dist is\n                                  end;\n \n                                  Add_Params_For_Variant_Components;\n+                                 Choice_Index := Choice_Index + 1;\n \n                               when others =>\n \n@@ -10608,15 +10604,15 @@ package body Exp_Dist is\n                                  end;\n \n                                  Add_Params_For_Variant_Components;\n+                                 Choice_Index := Choice_Index + 1;\n                            end case;\n \n                            Next (Choice);\n-                           Choice_Index := Choice_Index + 1;\n                         end loop;\n \n                         Next_Non_Pragma (Variant);\n                      end loop;\n-                  end;\n+                  end Variant_Part;\n                end if;\n             end TC_Rec_Add_Process_Element;\n "}, {"sha": "87498d85f3011fc8c8ff9530cb8c38d06da7d0a9", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -524,9 +524,9 @@ package body Impunit is\n      \"a-synbar\",    -- Ada.Synchronous_Barriers\n      \"a-undesu\",    -- Ada.Unchecked_Deallocate_Subpool\n \n-   -----------------------------------------\n-   -- GNAT Defined Additions to Ada 20012 --\n-   -----------------------------------------\n+   ----------------------------------------\n+   -- GNAT Defined Additions to Ada 2012 --\n+   ----------------------------------------\n \n      \"a-cofove\",    -- Ada.Containers.Formal_Vectors\n      \"a-cfdlli\",    -- Ada.Containers.Formal_Doubly_Linked_Lists"}, {"sha": "a08bb08a49424d636670cf6bd120636cac748168", "filename": "gcc/ada/s-finmas.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fs-finmas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fs-finmas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -29,7 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Exceptions;          use Ada.Exceptions;\n+with Ada.Exceptions; use Ada.Exceptions;\n+\n with System.Address_Image;\n with System.HTable;           use System.HTable;\n with System.IO;               use System.IO;\n@@ -241,12 +242,10 @@ package body System.Finalization_Masters is\n      (Obj : System.Address) return Finalize_Address_Ptr\n    is\n       Result : Finalize_Address_Ptr;\n-\n    begin\n       Lock_Task.all;\n       Result := Finalize_Address_Table.Get (Obj);\n       Unlock_Task.all;\n-\n       return Result;\n    end Finalize_Address;\n "}, {"sha": "2ab7084a11cdbf9620b3e1727c3e6e3693474e08", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -2585,6 +2585,13 @@ package body Sem_Ch10 is\n             if Par_Name /= Standard_Standard then\n                Par_Name := Scope (Par_Name);\n             end if;\n+\n+            --  Abandon processing in case of previous errors\n+\n+            if No (Par_Name) then\n+               pragma Assert (Serious_Errors_Detected /= 0);\n+               return;\n+            end if;\n          end loop;\n \n          if Present (Entity (Pref))\n@@ -5034,6 +5041,13 @@ package body Sem_Ch10 is\n               (\"instantiation depends on itself\", Name (With_Clause));\n \n          elsif not Is_Visible_Child_Unit (Uname) then\n+            --  Abandon processing in case of previous errors\n+\n+            if No (Scope (Uname)) then\n+               pragma Assert (Serious_Errors_Detected /= 0);\n+               return;\n+            end if;\n+\n             Set_Is_Visible_Child_Unit (Uname);\n \n             --  If the child unit appears in the context of its parent, it is"}, {"sha": "eab20bf9efe17d14334499f0992528e7ad46a000", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df4f514fac3b17c52bb283fcc52daf3d19c26e7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1df4f514fac3b17c52bb283fcc52daf3d19c26e7", "patch": "@@ -12638,7 +12638,13 @@ package body Sem_Util is\n         and then Nkind (N) not in N_Generic_Renaming_Declaration\n       loop\n          N := Parent (N);\n-         pragma Assert (Present (N));\n+\n+         --  We don't use Assert here, because that causes an infinite loop\n+         --  when assertions are turned off. Better to crash.\n+\n+         if No (N) then\n+            raise Program_Error;\n+         end if;\n       end loop;\n \n       return N;"}]}