{"sha": "f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3OTEwYjUxZTgxODkxZTRmNzBmYTY2ZjViMWRkY2RhYjRlNjgxZA==", "commit": {"author": {"name": "Andrew Sutton", "email": "andrew.n.sutton@gmail.com", "date": "2014-07-09T08:32:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-09T08:32:43Z"}, "message": "re PR c++/59361 (cannot expand parenthesized pack expression)\n\n/cp\n2014-07-09  Andrew Sutton  <andrew.n.sutton@gmail.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59361\n\t* parser.c (cp_parser_tokens_start_cast_expression): Return 0 for\n\tCPP_ELLIPSIS too.\n\n/testsuite\n2014-07-09  Andrew Sutton  <andrew.n.sutton@gmail.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59361\n\t* g++.dg/cpp0x/vt-59361.C: New.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r212386", "tree": {"sha": "48ef573be5455c67e16ebae6e12dbdd6fb639fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48ef573be5455c67e16ebae6e12dbdd6fb639fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/comments", "author": {"login": "asutton", "id": 570796, "node_id": "MDQ6VXNlcjU3MDc5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/570796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asutton", "html_url": "https://github.com/asutton", "followers_url": "https://api.github.com/users/asutton/followers", "following_url": "https://api.github.com/users/asutton/following{/other_user}", "gists_url": "https://api.github.com/users/asutton/gists{/gist_id}", "starred_url": "https://api.github.com/users/asutton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asutton/subscriptions", "organizations_url": "https://api.github.com/users/asutton/orgs", "repos_url": "https://api.github.com/users/asutton/repos", "events_url": "https://api.github.com/users/asutton/events{/privacy}", "received_events_url": "https://api.github.com/users/asutton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4e01495cc04172fbee0bb63a38c555b3e47db42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4e01495cc04172fbee0bb63a38c555b3e47db42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4e01495cc04172fbee0bb63a38c555b3e47db42"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "f1832ce407dbef4284bda6ddd917b8c94ef86fde", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "patch": "@@ -1,3 +1,10 @@\n+2014-07-09  Andrew Sutton  <andrew.n.sutton@gmail.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59361\n+\t* parser.c (cp_parser_tokens_start_cast_expression): Return 0 for\n+\tCPP_ELLIPSIS too.\n+\n 2014-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* class.c (check_for_override): Wrap the 'final' and 'override'"}, {"sha": "72f987ee5300a18e563e71fcf0e79475de97272a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "patch": "@@ -7666,6 +7666,7 @@ cp_parser_tokens_start_cast_expression (cp_parser *parser)\n     case CPP_OR:\n     case CPP_OR_OR:\n     case CPP_EOF:\n+    case CPP_ELLIPSIS:\n       return 0;\n \n     case CPP_OPEN_PAREN:"}, {"sha": "8db319205fcb5ca69378c7b716b6e17d10f86313", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "patch": "@@ -1,3 +1,9 @@\n+2014-07-09  Andrew Sutton  <andrew.n.sutton@gmail.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59361\n+\t* g++.dg/cpp0x/vt-59361.C: New.\n+\n 2014-07-08  Sriraman Tallam  <tmsriram@google.com>\n \n \tPR target/61599"}, {"sha": "519ae35dda9526e7a512a8347e3eeb9c65dec9a4", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-59361.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-59361.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47910b51e81891e4f70fa66f5b1ddcdab4e681d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-59361.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-59361.C?ref=f47910b51e81891e4f70fa66f5b1ddcdab4e681d", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/59361\n+// { dg-do compile { target c++11 } }\n+\n+template<bool ...Bs>\n+struct and_ \n+{\n+  constexpr static bool value{true};\n+};\n+\n+template<typename T>\n+struct true_\n+{\n+  constexpr operator bool() const { return true; }\n+};\n+\n+template<typename ...Ts>\n+constexpr bool foo(Ts...)\n+{\n+  return and_<(true_<Ts>())...>::value;\n+}"}]}