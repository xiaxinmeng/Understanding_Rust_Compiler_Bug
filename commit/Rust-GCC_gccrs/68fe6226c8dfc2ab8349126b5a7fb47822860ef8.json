{"sha": "68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmZTYyMjZjOGRmYzJhYjgzNDkxMjZiNWE3ZmI0NzgyMjg2MGVmOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-06-11T04:36:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-06-11T04:36:59Z"}, "message": "std_cwchar.h: Alphabetize.\n\n\n2001-06-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/c_std/bits/std_cwchar.h: Alphabetize.\n\t* include/bits/char_traits.h: Tweak.\n\t* acinclude.m4 (GLIBCPP_CHECK_WCHAR_T_SUPPORT): Check for\n\teverything used by std_cwchar.h.\n\t* aclocal.m4: Regenerate.\n\t* configure.in: Regenerate.\n\t* config.h.in: Regenerate.\n\nFrom-SVN: r43167", "tree": {"sha": "05a4c7991e132fbc545910c6a7d713069a20a817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05a4c7991e132fbc545910c6a7d713069a20a817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/comments", "author": null, "committer": null, "parents": [{"sha": "ad5ef673cabd1498912ef20b645cd12d2d4f66f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad5ef673cabd1498912ef20b645cd12d2d4f66f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad5ef673cabd1498912ef20b645cd12d2d4f66f2"}], "stats": {"total": 1790, "additions": 984, "deletions": 806}, "files": [{"sha": "a93073268e4369aeb85a8e0978ba8aa0aabd35e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "patch": "@@ -1,3 +1,13 @@\n+2001-06-10  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/c_std/bits/std_cwchar.h: Alphabetize.\n+\t* include/bits/char_traits.h: Tweak.\n+\t* acinclude.m4 (GLIBCPP_CHECK_WCHAR_T_SUPPORT): Check for\n+\teverything used by std_cwchar.h.\n+\t* aclocal.m4: Regenerate.\n+\t* configure.in: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t\n 2001-06-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_C99): Add stdio.h checking."}, {"sha": "76bc888a2089b81c711fd47da80cd8dce6eec5f7", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "patch": "@@ -813,11 +813,18 @@ AC_DEFUN(GLIBCPP_CHECK_WCHAR_T_SUPPORT, [\n     AC_MSG_RESULT($has_weof)\n   \n     dnl Tests for wide character functions used in char_traits<wchar_t>.\n-    AC_CHECK_FUNCS(wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset \\\n-    wcsrtombs mbsrtowcs, ac_wfuncs=yes, ac_wfuncs=no)\n+    ac_wfuncs=yes\n+    AC_CHECK_FUNCS(wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset,, \\\n+    ac_wfuncs=no)\n   \n-    dnl Do quick checks for things injected into std:: by the c_std headers.\n-    AC_CHECK_FUNCS(fgetwc, fgetws)\n+    dnl Checks for names injected into std:: by the c_std headers.\n+    AC_CHECK_FUNCS(btowc wctob fgetwc fgetwc fgetws fputwc fputws fwide \\\n+    fwprintf fwscanf swprintf swscanf vfwprintf vfwscanf vswprintf vswscanf \\\n+    vwprintf vwscanf wprintf wscanf getwc getwchar mbsinit mbrlen mbrtowc \\\n+    mbsrtowcs wcsrtombs putwc putwchar ungetwc wcrtomb wcstod wcstof wcstol \\\n+    wcstoul wcscpy wcsncpy wcscat wcsncat wcscmp wcscoll wcsncmp wcsxfrm \\\n+    wcscspn wcsspn wcstok wcsftime wcschr wcspbrk wcsrchr wcsstr,, \\\n+    ac_wfuncs=no)\n \n     AC_MSG_CHECKING([for ISO C99 wchar_t support])\n     if test x\"$has_weof\" = xyes && test x\"$has_wchar_minmax\" = xyes \\\n@@ -856,7 +863,7 @@ AC_DEFUN(GLIBCPP_CHECK_WCHAR_T_SUPPORT, [\n     dnl above support is present.\n     AC_MSG_CHECKING([for enabled wchar_t specializations])\n     if test x\"$ac_isoC99_wchar_t\" = xyes \\\n-       && test x\"$ac_XPG2_wchar_t\" = xyes; then\n+    && test x\"$ac_XPG2_wchar_t\" = xyes; then\n       AC_DEFINE(_GLIBCPP_USE_WCHAR_T)\n       AC_MSG_RESULT(\"yes\")\n     else\n@@ -1327,8 +1334,9 @@ AC_DEFUN(GLIBCPP_ENABLE_C99, [dnl\n   AC_MSG_RESULT($ac_c99_stdlib)\n \n   # Check for the existence of <wchar.h> functions used if C99 is enabled.\n+  # XXX the wchar.h checks should be rolled into the general C99 bits.\n   ac_c99_wchar=yes;\n-  AC_MSG_CHECKING([for ISO C99 support in <wchar.h>])\n+  AC_MSG_CHECKING([for additional ISO C99 support in <wchar.h>])\n   AC_TRY_COMPILE([#include <wchar.h>], \n \t         [wcstold(L\"10.0\", NULL);],, [ac_c99_wchar=no])\n   AC_TRY_COMPILE([#include <wchar.h>], \n@@ -1339,8 +1347,8 @@ AC_DEFUN(GLIBCPP_ENABLE_C99, [dnl\n \n   AC_MSG_CHECKING([for enabled ISO C99 support])\n   if test x\"$ac_c99_math\" = x\"no\" || test x\"$ac_c99_stdio\" = x\"no\" \\\n-\t|| test x\"$ac_c99_stdlib\" = x\"no\" \\\n-\t|| test x\"$ac_c99_wchar\" = x\"no\"; then\n+      || test x\"$ac_c99_stdlib\" = x\"no\" \\\n+      || test x\"$ac_c99_wchar\" = x\"no\"; then\n     enable_c99=no; \n   fi; \n   AC_MSG_RESULT($enable_c99)"}, {"sha": "55e1b98d2ea9b3b73498a2895e877a1aefc1bf77", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "patch": "@@ -825,11 +825,18 @@ AC_DEFUN(GLIBCPP_CHECK_WCHAR_T_SUPPORT, [\n     AC_MSG_RESULT($has_weof)\n   \n     dnl Tests for wide character functions used in char_traits<wchar_t>.\n-    AC_CHECK_FUNCS(wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset \\\n-    wcsrtombs mbsrtowcs, ac_wfuncs=yes, ac_wfuncs=no)\n+    ac_wfuncs=yes\n+    AC_CHECK_FUNCS(wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset,, \\\n+    ac_wfuncs=no)\n   \n-    dnl Do quick checks for things injected into std:: by the c_std headers.\n-    AC_CHECK_FUNCS(fgetwc, fgetws)\n+    dnl Checks for names injected into std:: by the c_std headers.\n+    AC_CHECK_FUNCS(btowc wctob fgetwc fgetwc fgetws fputwc fputws fwide \\\n+    fwprintf fwscanf swprintf swscanf vfwprintf vfwscanf vswprintf vswscanf \\\n+    vwprintf vwscanf wprintf wscanf getwc getwchar mbsinit mbrlen mbrtowc \\\n+    mbsrtowcs wcsrtombs putwc putwchar ungetwc wcrtomb wcstod wcstof wcstol \\\n+    wcstoul wcscpy wcsncpy wcscat wcsncat wcscmp wcscoll wcsncmp wcsxfrm \\\n+    wcscspn wcsspn wcstok wcsftime wcschr wcspbrk wcsrchr wcsstr,, \\\n+    ac_wfuncs=no)\n \n     AC_MSG_CHECKING([for ISO C99 wchar_t support])\n     if test x\"$has_weof\" = xyes && test x\"$has_wchar_minmax\" = xyes \\\n@@ -868,7 +875,7 @@ AC_DEFUN(GLIBCPP_CHECK_WCHAR_T_SUPPORT, [\n     dnl above support is present.\n     AC_MSG_CHECKING([for enabled wchar_t specializations])\n     if test x\"$ac_isoC99_wchar_t\" = xyes \\\n-       && test x\"$ac_XPG2_wchar_t\" = xyes; then\n+    && test x\"$ac_XPG2_wchar_t\" = xyes; then\n       AC_DEFINE(_GLIBCPP_USE_WCHAR_T)\n       AC_MSG_RESULT(\"yes\")\n     else\n@@ -1339,8 +1346,9 @@ AC_DEFUN(GLIBCPP_ENABLE_C99, [dnl\n   AC_MSG_RESULT($ac_c99_stdlib)\n \n   # Check for the existence of <wchar.h> functions used if C99 is enabled.\n+  # XXX the wchar.h checks should be rolled into the general C99 bits.\n   ac_c99_wchar=yes;\n-  AC_MSG_CHECKING([for ISO C99 support in <wchar.h>])\n+  AC_MSG_CHECKING([for additional ISO C99 support in <wchar.h>])\n   AC_TRY_COMPILE([#include <wchar.h>], \n \t         [wcstold(L\"10.0\", NULL);],, [ac_c99_wchar=no])\n   AC_TRY_COMPILE([#include <wchar.h>], \n@@ -1351,8 +1359,8 @@ AC_DEFUN(GLIBCPP_ENABLE_C99, [dnl\n \n   AC_MSG_CHECKING([for enabled ISO C99 support])\n   if test x\"$ac_c99_math\" = x\"no\" || test x\"$ac_c99_stdio\" = x\"no\" \\\n-\t|| test x\"$ac_c99_stdlib\" = x\"no\" \\\n-\t|| test x\"$ac_c99_wchar\" = x\"no\"; then\n+      || test x\"$ac_c99_stdlib\" = x\"no\" \\\n+      || test x\"$ac_c99_wchar\" = x\"no\"; then\n     enable_c99=no; \n   fi; \n   AC_MSG_RESULT($enable_c99)"}, {"sha": "2eb9244a2f0e3986e15df6f18cf7105bf6392371", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "patch": "@@ -273,6 +273,9 @@\n /* Define if you have the atanl function.  */\n #undef HAVE_ATANL\n \n+/* Define if you have the btowc function.  */\n+#undef HAVE_BTOWC\n+\n /* Define if you have the ceilf function.  */\n #undef HAVE_CEILF\n \n@@ -318,6 +321,9 @@\n /* Define if you have the fgetwc function.  */\n #undef HAVE_FGETWC\n \n+/* Define if you have the fgetws function.  */\n+#undef HAVE_FGETWS\n+\n /* Define if you have the finite function.  */\n #undef HAVE_FINITE\n \n@@ -342,15 +348,36 @@\n /* Define if you have the fpclass function.  */\n #undef HAVE_FPCLASS\n \n+/* Define if you have the fputwc function.  */\n+#undef HAVE_FPUTWC\n+\n+/* Define if you have the fputws function.  */\n+#undef HAVE_FPUTWS\n+\n /* Define if you have the frexpf function.  */\n #undef HAVE_FREXPF\n \n /* Define if you have the frexpl function.  */\n #undef HAVE_FREXPL\n \n+/* Define if you have the fwide function.  */\n+#undef HAVE_FWIDE\n+\n+/* Define if you have the fwprintf function.  */\n+#undef HAVE_FWPRINTF\n+\n+/* Define if you have the fwscanf function.  */\n+#undef HAVE_FWSCANF\n+\n /* Define if you have the getpagesize function.  */\n #undef HAVE_GETPAGESIZE\n \n+/* Define if you have the getwc function.  */\n+#undef HAVE_GETWC\n+\n+/* Define if you have the getwchar function.  */\n+#undef HAVE_GETWCHAR\n+\n /* Define if you have the hypot function.  */\n #undef HAVE_HYPOT\n \n@@ -405,6 +432,15 @@\n /* Define if you have the logl function.  */\n #undef HAVE_LOGL\n \n+/* Define if you have the mbrlen function.  */\n+#undef HAVE_MBRLEN\n+\n+/* Define if you have the mbrtowc function.  */\n+#undef HAVE_MBRTOWC\n+\n+/* Define if you have the mbsinit function.  */\n+#undef HAVE_MBSINIT\n+\n /* Define if you have the mbsrtowcs function.  */\n #undef HAVE_MBSRTOWCS\n \n@@ -426,6 +462,12 @@\n /* Define if you have the powl function.  */\n #undef HAVE_POWL\n \n+/* Define if you have the putwc function.  */\n+#undef HAVE_PUTWC\n+\n+/* Define if you have the putwchar function.  */\n+#undef HAVE_PUTWCHAR\n+\n /* Define if you have the qfpclass function.  */\n #undef HAVE_QFPCLASS\n \n@@ -462,6 +504,12 @@\n /* Define if you have the strtold function.  */\n #undef HAVE_STRTOLD\n \n+/* Define if you have the swprintf function.  */\n+#undef HAVE_SWPRINTF\n+\n+/* Define if you have the swscanf function.  */\n+#undef HAVE_SWSCANF\n+\n /* Define if you have the tanf function.  */\n #undef HAVE_TANF\n \n@@ -474,12 +522,99 @@\n /* Define if you have the tanl function.  */\n #undef HAVE_TANL\n \n+/* Define if you have the ungetwc function.  */\n+#undef HAVE_UNGETWC\n+\n+/* Define if you have the vfwprintf function.  */\n+#undef HAVE_VFWPRINTF\n+\n+/* Define if you have the vfwscanf function.  */\n+#undef HAVE_VFWSCANF\n+\n+/* Define if you have the vswprintf function.  */\n+#undef HAVE_VSWPRINTF\n+\n+/* Define if you have the vswscanf function.  */\n+#undef HAVE_VSWSCANF\n+\n+/* Define if you have the vwprintf function.  */\n+#undef HAVE_VWPRINTF\n+\n+/* Define if you have the vwscanf function.  */\n+#undef HAVE_VWSCANF\n+\n+/* Define if you have the wcrtomb function.  */\n+#undef HAVE_WCRTOMB\n+\n+/* Define if you have the wcscat function.  */\n+#undef HAVE_WCSCAT\n+\n+/* Define if you have the wcschr function.  */\n+#undef HAVE_WCSCHR\n+\n+/* Define if you have the wcscmp function.  */\n+#undef HAVE_WCSCMP\n+\n+/* Define if you have the wcscoll function.  */\n+#undef HAVE_WCSCOLL\n+\n+/* Define if you have the wcscpy function.  */\n+#undef HAVE_WCSCPY\n+\n+/* Define if you have the wcscspn function.  */\n+#undef HAVE_WCSCSPN\n+\n+/* Define if you have the wcsftime function.  */\n+#undef HAVE_WCSFTIME\n+\n /* Define if you have the wcslen function.  */\n #undef HAVE_WCSLEN\n \n+/* Define if you have the wcsncat function.  */\n+#undef HAVE_WCSNCAT\n+\n+/* Define if you have the wcsncmp function.  */\n+#undef HAVE_WCSNCMP\n+\n+/* Define if you have the wcsncpy function.  */\n+#undef HAVE_WCSNCPY\n+\n+/* Define if you have the wcspbrk function.  */\n+#undef HAVE_WCSPBRK\n+\n+/* Define if you have the wcsrchr function.  */\n+#undef HAVE_WCSRCHR\n+\n /* Define if you have the wcsrtombs function.  */\n #undef HAVE_WCSRTOMBS\n \n+/* Define if you have the wcsspn function.  */\n+#undef HAVE_WCSSPN\n+\n+/* Define if you have the wcsstr function.  */\n+#undef HAVE_WCSSTR\n+\n+/* Define if you have the wcstod function.  */\n+#undef HAVE_WCSTOD\n+\n+/* Define if you have the wcstof function.  */\n+#undef HAVE_WCSTOF\n+\n+/* Define if you have the wcstok function.  */\n+#undef HAVE_WCSTOK\n+\n+/* Define if you have the wcstol function.  */\n+#undef HAVE_WCSTOL\n+\n+/* Define if you have the wcstoul function.  */\n+#undef HAVE_WCSTOUL\n+\n+/* Define if you have the wcsxfrm function.  */\n+#undef HAVE_WCSXFRM\n+\n+/* Define if you have the wctob function.  */\n+#undef HAVE_WCTOB\n+\n /* Define if you have the wmemchr function.  */\n #undef HAVE_WMEMCHR\n \n@@ -495,6 +630,12 @@\n /* Define if you have the wmemset function.  */\n #undef HAVE_WMEMSET\n \n+/* Define if you have the wprintf function.  */\n+#undef HAVE_WPRINTF\n+\n+/* Define if you have the wscanf function.  */\n+#undef HAVE_WSCANF\n+\n /* Define if you have the <endian.h> header file.  */\n #undef HAVE_ENDIAN_H\n "}, {"sha": "9d0225e52738f0e0415a4375002b32165a08a891", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 750, "deletions": 733, "changes": 1483, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8"}, {"sha": "eb3f9fec3a240c14b305a94ef9e3dcd78e8a8b18", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "patch": "@@ -270,7 +270,6 @@ namespace std\n       bool \n       operator()(_CharT const& __a) { return _Traits::eq(_M_c, __a); }\n     };\n-\n } // namespace std\n \n #endif"}, {"sha": "6ad9931752d01097f5cb1f223c02bf70ca28e177", "filename": "libstdc++-v3/include/c_std/bits/std_cwchar.h", "status": "modified", "additions": 51, "deletions": 56, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fe6226c8dfc2ab8349126b5a7fb47822860ef8/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h?ref=68fe6226c8dfc2ab8349126b5a7fb47822860ef8", "patch": "@@ -61,123 +61,118 @@ namespace std\n \n // Get rid of those macros defined in <wchar.h> in lieu of real functions.\n #undef btowc\n-#undef wctob\n-#undef fgetwc\n #undef fgetwc\n #undef fgetws\n #undef fputwc\n #undef fputws\n #undef fwide\n #undef fwprintf\n #undef fwscanf\n-#undef swprintf\n-#undef swscanf\n-#undef vfwprintf\n-#undef vfwscanf\n-#undef vswprintf\n-#undef vswscanf\n-#undef vwprintf\n-#undef vwscanf\n-#undef wprintf\n-#undef wscanf\n #undef getwc\n #undef getwchar\n-#undef mbsinit\n #undef mbrlen\n #undef mbrtowc\n+#undef mbsinit\n #undef mbsrtowcs\n-#undef wcsrtombs\n #undef putwc\n #undef putwchar\n+#undef swprintf\n+#undef swscanf\n #undef ungetwc\n+#undef vfwprintf\n+#undef vfwscanf\n+#undef vswprintf\n+#undef vswscanf\n+#undef vwprintf\n+#undef vwscanf\n #undef wcrtomb\n-#undef wcstod\n-#undef wcstof\n-#undef wcstol\n-#undef wcstoul\n-#undef wcscpy\n-#undef wcsncpy\n #undef wcscat\n-#undef wcsncat\n+#undef wcschr\n #undef wcscmp\n #undef wcscoll\n-#undef wcsncmp\n-#undef wcsxfrm\n+#undef wcscpy\n #undef wcscspn\n+#undef wcsftime\n #undef wcslen\n+#undef wcsncat\n+#undef wcsncmp\n+#undef wcsncpy\n+#undef wcspbrk\n+#undef wcsrchr\n+#undef wcsrtombs\n #undef wcsspn\n+#undef wcsstr\n+#undef wcstod\n+#undef wcstof\n #undef wcstok\n+#undef wcstol\n+#undef wcstoul\n+#undef wcsxfrm\n+#undef wctob\n+#undef wmemchr\n #undef wmemcmp\n #undef wmemcpy\n #undef wmemmove\n #undef wmemset\n-#undef wcsftime\n-#undef wcschr\n-#undef wcspbrk\n-#undef wcsrchr\n-#undef wcsstr\n-#undef wmemchr\n+#undef wprintf\n+#undef wscanf\n \n #if _GLIBCPP_USE_WCHAR_T\n namespace std\n {\n   using ::wint_t;\n \n   using ::btowc;\n-  using ::wctob;\n-#if _GLIBCPP_HAVE_FGETWC\n   using ::fgetwc;\n-#endif\n-#if _GLIBCPP_HAVE_FGETWS\n   using ::fgetws;\n-#endif\n   using ::fputwc;\n   using ::fputws;\n   using ::fwide;\n   using ::fwprintf;\n   using ::fwscanf;\n-  using ::swprintf;\n-  using ::swscanf;\n-  using ::vfwprintf;\n-  using ::vfwscanf;\n-  using ::vswprintf;\n-  using ::vswscanf;\n-  using ::vwprintf;\n-  using ::vwscanf;\n-  using ::wprintf;\n-  using ::wscanf;\n   using ::getwc;\n   using ::getwchar;\n-  using ::mbsinit;\n   using ::mbrlen;\n   using ::mbrtowc;\n+  using ::mbsinit;\n   using ::mbsrtowcs;\n-  using ::wcsrtombs;\n   using ::putwc;\n   using ::putwchar;\n+  using ::swprintf;\n+  using ::swscanf;\n   using ::ungetwc;\n+  using ::vfwprintf;\n+  using ::vfwscanf;\n+  using ::vswprintf;\n+  using ::vswscanf;\n+  using ::vwprintf;\n+  using ::vwscanf;\n   using ::wcrtomb;\n-  using ::wcstod;\n-  using ::wcstof;\n-  using ::wcstol;\n-  using ::wcstoul;\n-  using ::wcscpy;\n-  using ::wcsncpy;\n   using ::wcscat;\n-  using ::wcsncat;\n   using ::wcscmp;\n   using ::wcscoll;\n-  using ::wcsncmp;\n-  using ::wcsxfrm;\n+  using ::wcscpy;\n   using ::wcscspn;\n+  using ::wcsftime;\n   using ::wcslen;\n+  using ::wcsncat;\n+  using ::wcsncmp;\n+  using ::wcsncpy;\n+  using ::wcsrtombs;\n   using ::wcsspn;\n+  using ::wcstod;\n+  using ::wcstof;\n   using ::wcstok;\n+  using ::wcstol;\n+  using ::wcstoul;\n+  using ::wcsxfrm;\n+  using ::wctob;\n   using ::wmemcmp;\n   using ::wmemcpy;\n   using ::wmemmove;\n   using ::wmemset;\n-  using ::wcsftime;\n+  using ::wprintf;\n+  using ::wscanf;\n \n   using ::wcschr;\n "}]}