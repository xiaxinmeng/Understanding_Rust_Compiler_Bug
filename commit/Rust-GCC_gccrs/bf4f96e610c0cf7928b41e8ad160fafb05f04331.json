{"sha": "bf4f96e610c0cf7928b41e8ad160fafb05f04331", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY0Zjk2ZTYxMGMwY2Y3OTI4YjQxZThhZDE2MGZhZmIwNWYwNDMzMQ==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2008-12-12T13:22:55Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2008-12-12T13:22:55Z"}, "message": "re PR fortran/36355 (matmul argument-check: wrong error messages)\n\ngcc/fortran:\n2008-12-12  Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/36355\n        * check.c (gfc_check_matmul): Fixed error message for invalid\n        types to correctly identify the offending argument, added check\n        for mismatching types.\n\n\ngcc/testsuite:\n2008-12-12 Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/36355\n        * gfortran.dg/matmul_argument_types.f90: New.\n\nFrom-SVN: r142709", "tree": {"sha": "6233022947a448d11526ea2c684fa00b7374445f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6233022947a448d11526ea2c684fa00b7374445f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf4f96e610c0cf7928b41e8ad160fafb05f04331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4f96e610c0cf7928b41e8ad160fafb05f04331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf4f96e610c0cf7928b41e8ad160fafb05f04331", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4f96e610c0cf7928b41e8ad160fafb05f04331/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8153009d83b45c491f2b2cca75d4d1ea6eb3af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8153009d83b45c491f2b2cca75d4d1ea6eb3af8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8153009d83b45c491f2b2cca75d4d1ea6eb3af8"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "db1fe4209866d720392766785f19cff1e73c89e0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bf4f96e610c0cf7928b41e8ad160fafb05f04331", "patch": "@@ -1,3 +1,10 @@\n+2008-12-12  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/36355\n+\t* check.c (gfc_check_matmul): Fixed error message for invalid\n+\ttypes to correctly identify the offending argument, added check\n+\tfor mismatching types.\n+\n 2008-12-11  Richard Guenther  <rguenther@suse.de>\n \n \t* Make-lang.in (install-finclude-dir): Use correct mode argument"}, {"sha": "8ca67f2c495283acc4c875af1f71d5cb93e36d0e", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=bf4f96e610c0cf7928b41e8ad160fafb05f04331", "patch": "@@ -1794,22 +1794,31 @@ gfc_check_malloc (gfc_expr *size)\n gfc_try\n gfc_check_matmul (gfc_expr *matrix_a, gfc_expr *matrix_b)\n {\n-  if ((matrix_a->ts.type != BT_LOGICAL) && !gfc_numeric_ts (&matrix_b->ts))\n+  if ((matrix_a->ts.type != BT_LOGICAL) && !gfc_numeric_ts (&matrix_a->ts))\n     {\n       gfc_error (\"'%s' argument of '%s' intrinsic at %L must be numeric \"\n \t\t \"or LOGICAL\", gfc_current_intrinsic_arg[0],\n \t\t gfc_current_intrinsic, &matrix_a->where);\n       return FAILURE;\n     }\n \n-  if ((matrix_b->ts.type != BT_LOGICAL) && !gfc_numeric_ts (&matrix_a->ts))\n+  if ((matrix_b->ts.type != BT_LOGICAL) && !gfc_numeric_ts (&matrix_b->ts))\n     {\n       gfc_error (\"'%s' argument of '%s' intrinsic at %L must be numeric \"\n \t\t \"or LOGICAL\", gfc_current_intrinsic_arg[1],\n \t\t gfc_current_intrinsic, &matrix_b->where);\n       return FAILURE;\n     }\n \n+  if ((matrix_a->ts.type == BT_LOGICAL && gfc_numeric_ts (&matrix_b->ts))\n+      || (gfc_numeric_ts (&matrix_a->ts) && matrix_b->ts.type == BT_LOGICAL))\n+    {\n+      gfc_error (\"Argument types of '%s' intrinsic at %L must match (%s/%s)\",\n+\t\t gfc_current_intrinsic, &matrix_a->where,\n+\t\t gfc_typename(&matrix_a->ts), gfc_typename(&matrix_b->ts));\n+       return FAILURE;\n+    }\n+\n   switch (matrix_a->rank)\n     {\n     case 1:"}, {"sha": "a3c9d7c4e64ce40dd3ef9f159ae2a75f31164a77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf4f96e610c0cf7928b41e8ad160fafb05f04331", "patch": "@@ -1,3 +1,8 @@\n+2008-12-12 Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/36355\n+\t* gfortran.dg/matmul_argument_types.f90: New.\n+\n 2008-12-11  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR testsuite/29071"}, {"sha": "1480655c4c9299a8dc78bd87c9fab1496f5db4e9", "filename": "gcc/testsuite/gfortran.dg/matmul_argument_types.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_argument_types.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4f96e610c0cf7928b41e8ad160fafb05f04331/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_argument_types.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_argument_types.f90?ref=bf4f96e610c0cf7928b41e8ad160fafb05f04331", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+!\n+! PR fortran/36355\n+! Check MATMUL argument types:\n+!\n+!           numeric   logical   other\n+! numeric      1         2        3\n+! logical      2         1        3\n+! other        3         3        3\n+!\n+! where\n+!   1    ok\n+!   2    argument type mismatch\n+!   3    invalid argument types\n+!\n+\n+  INTEGER :: a(2,2)\n+  LOGICAL :: b(2,2)\n+  CHARACTER :: c\n+\n+  a = MATMUL(a, a)            ! ok\n+  a = MATMUL(a, b)            ! { dg-error \"must match\" }\n+  a = MATMUL(a, c)            ! { dg-error \"must be numeric or LOGICAL\" }\n+\n+  b = MATMUL(b, a)            ! { dg-error \"must match\" }\n+  b = MATMUL(b, b)            ! ok\n+  b = MATMUL(b, c)            ! { dg-error \"must be numeric or LOGICAL\" }\n+\n+  c = MATMUL(c, a)            ! { dg-error \"must be numeric or LOGICAL\" }\n+  c = MATMUL(c, b)            ! { dg-error \"must be numeric or LOGICAL\" }\n+  c = MATMUL(c, c)            ! { dg-error \"must be numeric or LOGICAL\" }\n+END"}]}