{"sha": "596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "node_id": "C_kwDOANBUbNoAKDU5NmRiZmZmODgyZWMxYTBiM2M5MmY5ZThiZWU1YjQ5MGNhN2Q1YjQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-03T00:17:18Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-03T00:17:18Z"}, "message": "Daily bump.", "tree": {"sha": "63a7ede0255278de0a83eae77d04a2b0874adefc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63a7ede0255278de0a83eae77d04a2b0874adefc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/comments", "author": null, "committer": null, "parents": [{"sha": "36a4ee406b95ae24a59b8b3f8ebe29af6fd5261e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a4ee406b95ae24a59b8b3f8ebe29af6fd5261e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36a4ee406b95ae24a59b8b3f8ebe29af6fd5261e"}], "stats": {"total": 175, "additions": 174, "deletions": 1}, "files": [{"sha": "2fe57d5f958a55913cd148199ee0d65e8bcecf65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "patch": "@@ -1,3 +1,33 @@\n+2022-12-02  Bernhard Reutner-Fischer  <rep.dot.nop@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\t* function.cc (init_function_start): Use DECL_RESULT location\n+\tfor -Waggregate-return warning.\n+\n+2022-12-02  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* fold-const.cc (fold_unary_loc): Check TREE_TYPE of node.\n+\t(tree_invalid_nonnegative_warnv_p): Likewise.\n+\n+2022-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* gcc.cc (validate_switches): Reset suffix/starred on loop.\n+\n+2022-12-02  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* lra-constraints.cc (curr_insn_transform): Check available hard\n+\tregs for pseudo and its subreg to decide what to reload.\n+\n+2022-12-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/i386-expand.cc\n+\t(ix86_expand_fast_convert_bf_to_sf): Use extendbfsf2_1 for\n+\tnonimmediate operand.\n+\n+2022-12-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n 2022-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/106577"}, {"sha": "7a1b14a57f34245bfe3da5c4d83e91826c467b06", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "patch": "@@ -1 +1 @@\n-20221202\n+20221203"}, {"sha": "7ea99c116a01ce5ea41f57497378a4ed7d46742b", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "patch": "@@ -1,3 +1,88 @@\n+2022-12-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* analyzer.h (struct event_loc_info): New forward decl.\n+\t* bounds-checking.cc: Use event_loc_info throughout to bundle the\n+\tloc, fndecl, depth triples.\n+\t* call-info.cc: Likewise.\n+\t* checker-event.cc: Likewise.\n+\t* checker-event.h (struct event_loc_info): New decl.  Use it\n+\tthroughout to bundle the loc, fndecl, depth triples.\n+\t* checker-path.cc: Likewise.\n+\t* checker-path.h: Likewise.\n+\t* diagnostic-manager.cc: Likewise.\n+\t* engine.cc: Likewise.\n+\t* infinite-recursion.cc: Likewise.\n+\t* pending-diagnostic.cc: Likewise.\n+\t* pending-diagnostic.h: Likewise.\n+\t* region-model.cc: Likewise.\n+\t* sm-signal.cc: Likewise.\n+\t* varargs.cc: Likewise.\n+\n+2022-12-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/107851\n+\t* analyzer.cc (make_label_text_n): Convert param \"n\" from int to\n+\tunsigned HOST_WIDE_INT.\n+\t* analyzer.h (make_label_text_n): Likewise for decl.\n+\t* bounds-checking.cc: Include \"analyzer/checker-event.h\" and\n+\t\"analyzer/checker-path.h\".\n+\t(out_of_bounds::add_region_creation_events): New.\n+\t(concrete_past_the_end::describe_region_creation_event): Replace\n+\twith...\n+\t(concrete_past_the_end::add_region_creation_events): ...this.\n+\t(symbolic_past_the_end::describe_region_creation_event): Delete.\n+\t* checker-event.cc (region_creation_event::region_creation_event):\n+\tUpdate for dropping all member data.\n+\t(region_creation_event::get_desc): Delete, splitting out into\n+\tregion_creation_event_memory_space::get_desc,\n+\tregion_creation_event_capacity::get_desc, and\n+\tregion_creation_event_debug::get_desc.\n+\t(region_creation_event_memory_space::get_desc): New.\n+\t(region_creation_event_capacity::get_desc): New.\n+\t(region_creation_event_allocation_size::get_desc): New.\n+\t(region_creation_event_debug::get_desc): New.\n+\t* checker-event.h: Include \"analyzer/program-state.h\".\n+\t(enum rce_kind): Delete.\n+\t(class region_creation_event): Drop all member data.\n+\t(region_creation_event::region_creation_event): Make protected.\n+\t(region_creation_event::get_desc): Delete.\n+\t(class region_creation_event_memory_space): New.\n+\t(class region_creation_event_capacity): New.\n+\t(class region_creation_event_allocation_size): New.\n+\t(class region_creation_event_debug): New.\n+\t* checker-path.cc (checker_path::add_region_creation_events): Add\n+\t\"pd\" param.  Call pending_diangnostic::add_region_creation_events.\n+\tUpdate for conversion of RCE_DEBUG to region_creation_event_debug.\n+\t* checker-path.h (checker_path::add_region_creation_events): Add\n+\t\"pd\" param.\n+\t* diagnostic-manager.cc (diagnostic_manager::build_emission_path):\n+\tPass pending_diagnostic to\n+\temission_path::add_region_creation_events.\n+\t(diagnostic_manager::build_emission_path): Pass path_builder to\n+\tadd_event_on_final_node.\n+\t(diagnostic_manager::add_event_on_final_node): Add \"pb\" param.\n+\tPass pending_diagnostic to\n+\temission_path::add_region_creation_events.\n+\t(diagnostic_manager::add_events_for_eedge): Pass\n+\tpending_diagnostic to emission_path::add_region_creation_events.\n+\t* diagnostic-manager.h\n+\t(diagnostic_manager::add_event_on_final_node): Add \"pb\" param.\n+\t* pending-diagnostic.cc\n+\t(pending_diagnostic::add_region_creation_events): New.\n+\t* pending-diagnostic.h (struct region_creation): Delete.\n+\t(pending_diagnostic::describe_region_creation_event): Delete.\n+\t(pending_diagnostic::add_region_creation_events): New vfunc.\n+\t* region-model.cc: Include \"analyzer/checker-event.h\" and\n+\t\"analyzer/checker-path.h\".\n+\t(dubious_allocation_size::dubious_allocation_size): Initialize\n+\tm_has_allocation_event.\n+\t(dubious_allocation_size::describe_region_creation_event): Delete.\n+\t(dubious_allocation_size::describe_final_event): Update for\n+\treplacement of m_allocation_event with m_has_allocation_event.\n+\t(dubious_allocation_size::add_region_creation_events): New.\n+\t(dubious_allocation_size::m_allocation_event): Replace with...\n+\t(dubious_allocation_size::m_has_allocation_event): ...this.\n+\n 2022-12-02  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/107948"}, {"sha": "3fb66a7d6adc57d839e2897573d1753ed9b11d26", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "patch": "@@ -1,3 +1,8 @@\n+2022-12-02  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* c-attribs.cc (handle_deprecated_attribute): Use type when\n+\tusing TYPE_NAME.\n+\n 2022-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84469"}, {"sha": "1ce30ddcc77e83c08eb97271f082cb3a42458e2c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "patch": "@@ -1,3 +1,16 @@\n+2022-12-02  Bernhard Reutner-Fischer  <rep.dot.nop@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.cc (grokdeclarator): Build RESULT_DECL.\n+\t(start_preparsed_function): Copy location from template.\n+\t* semantics.cc (apply_deduced_return_type): Handle\n+\targ != current_function_decl.\n+\t* method.cc (implicitly_declare_fn): Use it.\n+\n+2022-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++spec.cc (lang_specific_driver): Set SKIPOPT for nostdlib++.\n+\n 2022-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84469"}, {"sha": "d59f059e72369a780a7756332b84d2cd1aed03d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=596dbfff882ec1a0b3c92f9e8bee5b490ca7d5b4", "patch": "@@ -1,3 +1,43 @@\n+2022-12-02  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/107874\n+\t* gfortran.dg/merge_1.f90: Avoid recursive I/O.\n+\n+2022-12-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/107851\n+\t* gcc.dg/analyzer/allocation-size-4.c: Update expected wording.\n+\t* gcc.dg/analyzer/allocation-size-multiline-1.c: New test.\n+\t* gcc.dg/analyzer/allocation-size-multiline-2.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-multiline-1.c: Update expected\n+\twording.\n+\t* gcc.dg/analyzer/out-of-bounds-multiline-2.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-read-char-arr.c: Update expected\n+\twording.\n+\t* gcc.dg/analyzer/out-of-bounds-read-int-arr.c: Likewise.\n+\t* gcc.dg/analyzer/out-of-bounds-write-char-arr.c: Likewise.\n+\t* gcc.dg/analyzer/out-of-bounds-write-int-arr.c: Likewise.\n+\n+2022-12-02  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-ex1.C: Adjust dg-error.\n+\t* g++.dg/cpp23/constexpr-nonlit10.C: Adjust dg-warning.\n+\t* g++.dg/cpp23/constexpr-nonlit11.C: Likewise.\n+\t* g++.dg/cpp2a/spaceship-eq3.C: Add dg-error.\n+\n+2022-12-02  Bernhard Reutner-Fischer  <rep.dot.nop@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/diagnostic/return-type-loc1.C: New test.\n+\n+2022-12-02  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/mips/pr106462.c: New test.\n+\n+2022-12-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/cbranchbf4.c: New test.\n+\n 2022-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/106577"}]}