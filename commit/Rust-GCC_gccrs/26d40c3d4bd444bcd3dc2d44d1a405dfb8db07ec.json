{"sha": "26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZkNDBjM2Q0YmQ0NDRiY2QzZGMyZDQ0ZDFhNDA1ZGZiOGRiMDdlYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-07-13T23:10:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-07-13T23:10:17Z"}, "message": "re PR c++/57793 (ICE with bitfields in get_bit_range)\n\n\tPR c++/57793\nc/\n\t* c-decl.c (finish_struct): Check for too-large class.\ncp/\n\t* class.c (layout_class_type): Check for too-large class.\n\nFrom-SVN: r200938", "tree": {"sha": "88c4036b688de6468ab9634a8b01f802b6d40a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c4036b688de6468ab9634a8b01f802b6d40a1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53db1bc08e4450cb53975377c209ff9cc9bfca9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53db1bc08e4450cb53975377c209ff9cc9bfca9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53db1bc08e4450cb53975377c209ff9cc9bfca9b"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "15bc1aa26fc63dfd120e13b73d9905dcfe4b71d7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "patch": "@@ -1,3 +1,8 @@\n+2013-07-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/57793\n+\t* c-decl.c (finish_struct): Check for too-large class.\n+\n 2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n \n \tPR c/57821"}, {"sha": "f7ae648f024fb6ad198570571acfad8caca46181", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "patch": "@@ -7210,6 +7210,12 @@ finish_struct (location_t loc, tree t, tree fieldlist, tree attributes,\n \n   layout_type (t);\n \n+  if (TYPE_SIZE_UNIT (t)\n+      && TREE_CODE (TYPE_SIZE_UNIT (t)) == INTEGER_CST\n+      && !TREE_OVERFLOW (TYPE_SIZE_UNIT (t))\n+      && !valid_constant_size_p (TYPE_SIZE_UNIT (t)))\n+    error (\"type %qT is too large\", t);\n+\n   /* Give bit-fields their proper types.  */\n   {\n     tree *fieldlistp = &fieldlist;"}, {"sha": "1bf287aecee60ccbb39a99eb608a6377696306e2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "patch": "@@ -1,5 +1,8 @@\n 2013-07-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/57793\n+\t* class.c (layout_class_type): Check for too-large class.\n+\n \t* call.c (can_convert): Allow user-defined conversions.\n \t(can_convert_standard): New.\n \t* cp-tree.h: Declare it."}, {"sha": "45652a68dbef83a49b9026f535d9259907a794f1", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "patch": "@@ -6237,6 +6237,12 @@ layout_class_type (tree t, tree *virtuals_p)\n   /* Let the back end lay out the type.  */\n   finish_record_layout (rli, /*free_p=*/true);\n \n+  if (TYPE_SIZE_UNIT (t)\n+      && TREE_CODE (TYPE_SIZE_UNIT (t)) == INTEGER_CST\n+      && !TREE_OVERFLOW (TYPE_SIZE_UNIT (t))\n+      && !valid_constant_size_p (TYPE_SIZE_UNIT (t)))\n+    error (\"type %qT is too large\", t);\n+\n   /* Warn about bases that can't be talked about due to ambiguity.  */\n   warn_about_ambiguous_bases (t);\n "}, {"sha": "d66fadaa1f754a2252743155bc641481d6a95142", "filename": "gcc/testsuite/c-c++-common/pr57793.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr57793.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr57793.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr57793.c?ref=26d40c3d4bd444bcd3dc2d44d1a405dfb8db07ec", "patch": "@@ -0,0 +1,23 @@\n+/* PR c++/57793 */\n+\n+struct A { unsigned a : 1; unsigned b : 1; };\n+struct B     /* { dg-error \"type .B. is too large\" \"\" { target { c++ && ilp32 } } } */\n+{\n+  unsigned char c[0x40000000];\n+  unsigned char d[0x40000ff0];\n+  struct A e;\n+}; /* { dg-error \"type .struct B. is too large\" \"\" { target { c && ilp32 } } } */\n+\n+void *foo (struct B *p)\n+{\n+  if (p->e.a)\n+    return (void *) 0;\n+  p->e.b = 1;\n+  return p->c;\n+}\n+\n+void\n+bar (struct B *p)\n+{\n+  foo (p);\n+}"}]}