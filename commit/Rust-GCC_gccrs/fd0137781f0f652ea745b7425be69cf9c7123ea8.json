{"sha": "fd0137781f0f652ea745b7425be69cf9c7123ea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwMTM3NzgxZjBmNjUyZWE3NDViNzQyNWJlNjljZjljNzEyM2VhOA==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@adacore.com", "date": "2006-02-15T09:34:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:34:48Z"}, "message": "re PR ada/20753 (ACATS ce3810b segfaults at runtime)\n\n2006-02-13  Geert Bosch  <bosch@adacore.com>\n\t    Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-tifiio.adb (Put_Digits): Test Last against To'First - 1 instead of\n\t0, since the lower bound of the actual string may be greater than one.\n\n\tPR ada/20753\n\n\t(Put): Fix condition to raise Layout_Error when invalid\n\tlayout is requested.\n\nFrom-SVN: r111043", "tree": {"sha": "1cdee87cac19b749f9988cee0261215bf57c3b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cdee87cac19b749f9988cee0261215bf57c3b52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd0137781f0f652ea745b7425be69cf9c7123ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0137781f0f652ea745b7425be69cf9c7123ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0137781f0f652ea745b7425be69cf9c7123ea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0137781f0f652ea745b7425be69cf9c7123ea8/comments", "author": null, "committer": null, "parents": [{"sha": "531eb217c9d0789de38c5ad1554be664500f106d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531eb217c9d0789de38c5ad1554be664500f106d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/531eb217c9d0789de38c5ad1554be664500f106d"}], "stats": {"total": 52, "additions": 27, "deletions": 25}, "files": [{"sha": "d94688668f8f539412eac9c1b920c0cfb476f83f", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0137781f0f652ea745b7425be69cf9c7123ea8/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0137781f0f652ea745b7425be69cf9c7123ea8/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=fd0137781f0f652ea745b7425be69cf9c7123ea8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -314,9 +314,9 @@ package body Ada.Text_IO.Fixed_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -329,7 +329,7 @@ package body Ada.Text_IO.Fixed_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -341,7 +341,7 @@ package body Ada.Text_IO.Fixed_IO is\n    end Get;\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -359,11 +359,11 @@ package body Ada.Text_IO.Fixed_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       S    : String (1 .. Fore + Aft + Exp + Extra_Layout_Space);\n       Last : Natural;\n@@ -373,10 +373,10 @@ package body Ada.Text_IO.Fixed_IO is\n    end Put;\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       S    : String (1 .. Fore + Aft + Exp + Extra_Layout_Space);\n       Last : Natural;\n@@ -387,9 +387,9 @@ package body Ada.Text_IO.Fixed_IO is\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       Fore : constant Integer := To'Length\n                                 - 1                      -- Decimal point\n@@ -399,7 +399,7 @@ package body Ada.Text_IO.Fixed_IO is\n       Last : Natural;\n \n    begin\n-      if Fore not in Field'Range then\n+      if Fore < 1 or else Fore > Field'Last then\n          raise Layout_Error;\n       end if;\n \n@@ -419,10 +419,11 @@ package body Ada.Text_IO.Fixed_IO is\n       Exp  : Field)\n    is\n       subtype Digit is Int64 range 0 .. 9;\n-      X     : constant Int64   := Int64'Integer_Value (Item);\n-      A     : constant Field   := Field'Max (Aft, 1);\n-      Neg   : constant Boolean := (Item < 0.0);\n-      Pos   : Integer;  -- Next digit X has value X * 10.0**Pos;\n+\n+      X   : constant Int64   := Int64'Integer_Value (Item);\n+      A   : constant Field   := Field'Max (Aft, 1);\n+      Neg : constant Boolean := (Item < 0.0);\n+      Pos : Integer;  -- Next digit X has value X * 10.0**Pos;\n \n       Y, Z : Int64;\n       E : constant Integer := Boolean'Pos (not Exact)\n@@ -438,7 +439,7 @@ package body Ada.Text_IO.Fixed_IO is\n \n       procedure Put_Digit (X : Digit);\n       --  Add digit X to the output string (going from left to right),\n-      --  updating Last and Pos, and inserting the sign, leading zeroes\n+      --  updating Last and Pos, and inserting the sign, leading zeros\n       --  or a decimal point when necessary. After outputting the first\n       --  digit, Pos must not be changed outside Put_Digit anymore\n \n@@ -470,11 +471,12 @@ package body Ada.Text_IO.Fixed_IO is\n \n       procedure Put_Digit (X : Digit) is\n          Digs : constant array (Digit) of Character := \"0123456789\";\n+\n       begin\n-         if Last = 0 then\n+         if Last = To'First - 1 then\n             if X /= 0 or Pos <= 0 then\n                --  Before outputting first digit, include leading space,\n-               --  posible minus sign and, if the first digit is fractional,\n+               --  possible minus sign and, if the first digit is fractional,\n                --  decimal seperator and leading zeros.\n \n                --  The Fore part has Pos + 1 + Boolean'Pos (Neg) characters,"}]}