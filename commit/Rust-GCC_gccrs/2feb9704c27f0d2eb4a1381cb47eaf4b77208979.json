{"sha": "2feb9704c27f0d2eb4a1381cb47eaf4b77208979", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlYjk3MDRjMjdmMGQyZWI0YTEzODFjYjQ3ZWFmNGI3NzIwODk3OQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-09-16T09:55:48Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-09-16T09:55:48Z"}, "message": "Bugfix in order_regs_for_reload\n\nFrom-SVN: r29455", "tree": {"sha": "adbe9409b3b98d855e824cd54b8b4424a5ee0c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adbe9409b3b98d855e824cd54b8b4424a5ee0c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2feb9704c27f0d2eb4a1381cb47eaf4b77208979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feb9704c27f0d2eb4a1381cb47eaf4b77208979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2feb9704c27f0d2eb4a1381cb47eaf4b77208979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feb9704c27f0d2eb4a1381cb47eaf4b77208979/comments", "author": null, "committer": null, "parents": [{"sha": "7402eca07a77af257a385144b8a4ca4e0323ef3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7402eca07a77af257a385144b8a4ca4e0323ef3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7402eca07a77af257a385144b8a4ca4e0323ef3f"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "cb20deb9a93f901abafa3a6db7e3beb64ed4e1de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feb9704c27f0d2eb4a1381cb47eaf4b77208979/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feb9704c27f0d2eb4a1381cb47eaf4b77208979/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2feb9704c27f0d2eb4a1381cb47eaf4b77208979", "patch": "@@ -1,3 +1,8 @@\n+Thu Sep 16 10:53:36 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* reload1.c (order_regs_for_reload): Move hard_reg_n_uses\n+\tcomputation out of loop over hard regs.\n+\n Wed Sep 15 21:37:06 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* function.c (identify_blocks): Don't shadow a variable in an "}, {"sha": "57b43d92cf06e1675341dcf7fe6ec75a4a502f77", "filename": "gcc/reload1.c", "status": "modified", "additions": 16, "deletions": 25, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feb9704c27f0d2eb4a1381cb47eaf4b77208979/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feb9704c27f0d2eb4a1381cb47eaf4b77208979/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=2feb9704c27f0d2eb4a1381cb47eaf4b77208979", "patch": "@@ -4109,44 +4109,35 @@ order_regs_for_reload (chain)\n \n   COPY_HARD_REG_SET (bad_spill_regs, bad_spill_regs_global);\n \n-  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    {\n-      hard_reg_n_uses[i].regno = i;\n-      hard_reg_n_uses[i].uses = 0;\n-    }\n-\n   /* Count number of uses of each hard reg by pseudo regs allocated to it\n      and then order them by decreasing use.  */\n \n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     {\n-      int j;\n+      hard_reg_n_uses[i].regno = i;\n+      hard_reg_n_uses[i].uses = 0;\n \n       /* Test the various reasons why we can't use a register for\n \t spilling in this insn.  */\n       if (fixed_regs[i]\n \t  || REGNO_REG_SET_P (chain->live_before, i)\n \t  || REGNO_REG_SET_P (chain->live_after, i))\n-\t{\n-\t  SET_HARD_REG_BIT (bad_spill_regs, i);\n-\t  continue;\n-\t}\n+\tSET_HARD_REG_BIT (bad_spill_regs, i);\n+    }\n \n-      /* Now find out which pseudos are allocated to it, and update\n-\t hard_reg_n_uses.  */\n-      CLEAR_REG_SET (pseudos_counted);\n+  /* Now compute hard_reg_n_uses.  */\n+  CLEAR_REG_SET (pseudos_counted);\n \n-      EXECUTE_IF_SET_IN_REG_SET\n-\t(chain->live_before, FIRST_PSEUDO_REGISTER, j,\n-\t {\n-\t   count_pseudo (hard_reg_n_uses, j);\n-\t });\n-      EXECUTE_IF_SET_IN_REG_SET\n-\t(chain->live_after, FIRST_PSEUDO_REGISTER, j,\n-\t {\n-\t   count_pseudo (hard_reg_n_uses, j);\n-\t });\n-    }\n+  EXECUTE_IF_SET_IN_REG_SET\n+    (chain->live_before, FIRST_PSEUDO_REGISTER, i,\n+     {\n+       count_pseudo (hard_reg_n_uses, i);\n+     });\n+  EXECUTE_IF_SET_IN_REG_SET\n+    (chain->live_after, FIRST_PSEUDO_REGISTER, i,\n+     {\n+       count_pseudo (hard_reg_n_uses, i);\n+     });\n \n   FREE_REG_SET (pseudos_counted);\n "}]}