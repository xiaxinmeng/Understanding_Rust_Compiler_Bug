{"sha": "6acc8a3cf37e7948e9d059d98118509a99e69b41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjYzhhM2NmMzdlNzk0OGU5ZDA1OWQ5ODExODUwOWE5OWU2OWI0MQ==", "commit": {"author": {"name": "Enkovich Ilya", "email": "ilya.enkovich@intel.com", "date": "2012-04-18T08:29:55Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-04-18T08:29:55Z"}, "message": "linux-common.h: New.\n\n2012-04-18  Enkovich Ilya  <ilya.enkovich@intel.com>\n\n       * config/i386/linux-common.h: New.\n\n       * config.gcc: Add i386/linux-common.h before\n       all i386/linux.h and i386/linux64.h usages.\n\n       * config/i386/gnu-user.h (GNU_USER_TARGET_LINK_SPEC): New.\n       (LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.\n       * config/i386/gnu-user64.h: Likewise.\n\n       * config/i386/gnu-user.common.h (GNU_USER_TARGET_CC1_SPEC): New.\n       (CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC.\n       (GNU_USER_TARGET_MATHFILE_SPEC): New.\n       (ENDFILE_SPEC): Use GNU_USER_TARGET_MATHFILE_SPEC.\n\nFrom-SVN: r186560", "tree": {"sha": "665618fe712d7275184c8295fd74ecbfc16d772f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/665618fe712d7275184c8295fd74ecbfc16d772f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6acc8a3cf37e7948e9d059d98118509a99e69b41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6acc8a3cf37e7948e9d059d98118509a99e69b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6acc8a3cf37e7948e9d059d98118509a99e69b41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6acc8a3cf37e7948e9d059d98118509a99e69b41/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f940ee6546bc5411d4f65174c87c20a424c7ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f940ee6546bc5411d4f65174c87c20a424c7ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f940ee6546bc5411d4f65174c87c20a424c7ca1"}], "stats": {"total": 106, "additions": 94, "deletions": 12}, "files": [{"sha": "bb0e5e2793cbbd3d33bc3212a89015d5ffada918", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6acc8a3cf37e7948e9d059d98118509a99e69b41", "patch": "@@ -1,3 +1,19 @@\n+2012-04-18  Enkovich Ilya  <ilya.enkovich@intel.com>\n+\n+\t* config/i386/linux-common.h: New.\n+\n+\t* config.gcc: Add i386/linux-common.h before\n+\tall i386/linux.h and i386/linux64.h usages.\n+\n+\t* config/i386/gnu-user.h (GNU_USER_TARGET_LINK_SPEC): New.\n+\t(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.\n+\t* config/i386/gnu-user64.h: Likewise.\n+\n+\t* config/i386/gnu-user.common.h (GNU_USER_TARGET_CC1_SPEC): New.\n+\t(CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC.\n+\t(GNU_USER_TARGET_MATHFILE_SPEC): New.\n+\t(ENDFILE_SPEC): Use GNU_USER_TARGET_MATHFILE_SPEC.\n+\n 2012-04-18  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_node_name): Remove."}, {"sha": "63d661285b2083ff7a58f2c959bdc5569b9f895a", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=6acc8a3cf37e7948e9d059d98118509a99e69b41", "patch": "@@ -1228,7 +1228,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t# Assume modern glibc\n \t\tdefault_gnu_indirect_function=yes\n \t\tif test x$enable_targets = xall; then\n-\t\t\ttm_file=\"${tm_file} i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h i386/linux64.h\"\n+\t\t\ttm_file=\"${tm_file} i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h i386/linux-common.h i386/linux64.h\"\n \t\t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n \t\t\ttmake_file=\"${tmake_file} i386/t-linux64\"\n \t\t\tx86_multilibs=\"${with_multilib_list}\"\n@@ -1263,7 +1263,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\t\t;;\n \t\t\tesac\n \t\telse\n-\t\t\ttm_file=\"${tm_file} i386/gnu-user-common.h i386/gnu-user.h i386/linux.h\"\n+\t\t\ttm_file=\"${tm_file} i386/gnu-user-common.h i386/gnu-user.h i386/linux-common.h i386/linux.h\"\n \t\tfi\n \t\t;;\n \ti[34567]86-*-knetbsd*-gnu)\n@@ -1285,7 +1285,7 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \t\t i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h\"\n \tcase ${target} in\n \tx86_64-*-linux*)\n-\t\ttm_file=\"${tm_file} linux.h i386/linux64.h\"\n+\t\ttm_file=\"${tm_file} linux.h i386/linux-common.h i386/linux64.h\"\n \t\t# Assume modern glibc\n \t\tdefault_gnu_indirect_function=yes\n \t  \t;;"}, {"sha": "555493685638eab264887a251e7ebcff313afff0", "filename": "gcc/config/i386/gnu-user-common.h", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h?ref=6acc8a3cf37e7948e9d059d98118509a99e69b41", "patch": "@@ -39,17 +39,23 @@ along with GCC; see the file COPYING3.  If not see\n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n+#undef GNU_USER_TARGET_CC1_SPEC\n+#define GNU_USER_TARGET_CC1_SPEC \"%(cc1_cpu) %{profile:-p}\"\n+\n #undef CC1_SPEC\n-#define CC1_SPEC \"%(cc1_cpu) %{profile:-p}\"\n+#define CC1_SPEC GNU_USER_TARGET_CC1_SPEC\n \n /* Similar to standard GNU userspace, but adding -ffast-math support.  */\n-#undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n+#define GNU_USER_TARGET_MATHFILE_SPEC \\\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n    %{mpc32:crtprec32.o%s} \\\n    %{mpc64:crtprec64.o%s} \\\n-   %{mpc80:crtprec80.o%s} \\\n-   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n+   %{mpc80:crtprec80.o%s}\"\n+\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  GNU_USER_TARGET_MATHFILE_SPEC \" \" \\\n+  GNU_USER_TARGET_ENDFILE_SPEC\n \n /* Put all *tf routines in libgcc.  */\n #undef LIBGCC2_HAS_TF_MODE"}, {"sha": "9020be9a3a926df9ad2cdeca95f7bd38bad92c9a", "filename": "gcc/config/i386/gnu-user.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user.h?ref=6acc8a3cf37e7948e9d059d98118509a99e69b41", "patch": "@@ -75,14 +75,16 @@ along with GCC; see the file COPYING3.  If not see\n   { \"link_emulation\", GNU_USER_LINK_EMULATION },\\\n   { \"dynamic_linker\", GNU_USER_DYNAMIC_LINKER }\n \n-#undef\tLINK_SPEC\n-#define LINK_SPEC \"-m %(link_emulation) %{shared:-shared} \\\n+#define GNU_USER_TARGET_LINK_SPEC \"-m %(link_emulation) %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n       -dynamic-linker %(dynamic_linker)} \\\n       %{static:-static}}\"\n \n+#undef\tLINK_SPEC\n+#define LINK_SPEC GNU_USER_TARGET_LINK_SPEC\n+\n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named\n    NAME whose size is SIZE bytes and alignment is ALIGN bytes."}, {"sha": "0e66d26169b16357a8896bf4ff9b25e6bf4bb774", "filename": "gcc/config/i386/gnu-user64.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user64.h?ref=6acc8a3cf37e7948e9d059d98118509a99e69b41", "patch": "@@ -53,8 +53,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n  %{\" SPEC_X32 \":--x32} \\\n  %{!mno-sse2avx:%{mavx:-msse2avx}} %{msse2avx:%{!mavx:-msse2avx}}\"\n \n-#undef\tLINK_SPEC\n-#define LINK_SPEC \"%{\" SPEC_64 \":-m \" GNU_USER_LINK_EMULATION64 \"} \\\n+#define GNU_USER_TARGET_LINK_SPEC\t\t\t\t   \\\n+                  \"%{\" SPEC_64 \":-m \" GNU_USER_LINK_EMULATION64 \"} \\\n                    %{\" SPEC_32 \":-m \" GNU_USER_LINK_EMULATION32 \"} \\\n                    %{\" SPEC_X32 \":-m \" GNU_USER_LINK_EMULATIONX32 \"} \\\n   %{shared:-shared} \\\n@@ -66,6 +66,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n       %{\" SPEC_X32 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKERX32 \"}} \\\n     %{static:-static}}\"\n \n+#undef\tLINK_SPEC\n+#define LINK_SPEC GNU_USER_TARGET_LINK_SPEC\n+\n #if TARGET_64BIT_DEFAULT\n #if TARGET_BI_ARCH == 2\n #define MULTILIB_DEFAULTS { \"mx32\" }"}, {"sha": "fd53b32ef38d9756e00494cef943688e589900d3", "filename": "gcc/config/i386/linux-common.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8a3cf37e7948e9d059d98118509a99e69b41/gcc%2Fconfig%2Fi386%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-common.h?ref=6acc8a3cf37e7948e9d059d98118509a99e69b41", "patch": "@@ -0,0 +1,55 @@\n+/* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n+   Copyright (C) 2012 Free Software Foundation, Inc.\n+   Contributed by Ilya Enkovich.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()               \\\n+  do                                           \\\n+    {                                          \\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();       \\\n+      ANDROID_TARGET_OS_CPP_BUILTINS();\t       \\\n+    }                                          \\\n+  while (0)\n+\n+#undef CC1_SPEC\n+#define CC1_SPEC \\\n+  LINUX_OR_ANDROID_CC (GNU_USER_TARGET_CC1_SPEC, \\\n+\t\t       GNU_USER_TARGET_CC1_SPEC \" \" ANDROID_CC1_SPEC)\n+\n+#undef\tLINK_SPEC\n+#define LINK_SPEC \\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LINK_SPEC, \\\n+\t\t       GNU_USER_TARGET_LINK_SPEC \" \" ANDROID_LINK_SPEC)\n+\n+#undef  LIB_SPEC\n+#define LIB_SPEC \\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LIB_SPEC, \\\n+\t\t       GNU_USER_TARGET_LIB_SPEC \" \" ANDROID_LIB_SPEC)\n+\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_STARTFILE_SPEC, \\\n+\t\t       ANDROID_STARTFILE_SPEC)\n+\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_MATHFILE_SPEC \" \" \\\n+\t\t       GNU_USER_TARGET_ENDFILE_SPEC,\t \\\n+\t\t       GNU_USER_TARGET_MATHFILE_SPEC \" \" \\\n+\t\t       ANDROID_ENDFILE_SPEC)"}]}