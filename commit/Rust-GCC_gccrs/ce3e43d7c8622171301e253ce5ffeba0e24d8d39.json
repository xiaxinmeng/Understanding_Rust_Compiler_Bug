{"sha": "ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzZTQzZDdjODYyMjE3MTMwMWUyNTNjZTVmZmViYTBlMjRkOGQzOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-01-05T14:40:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-01-05T14:40:11Z"}, "message": "re PR c++/58583 ([c++11] ICE with invalid non-static data member initialization in template)\n\n\tgcc/cp/\n\tPR c++/58583\n\t* pt.c (build_non_dependent_expr): Don't try a checking fold when\n\tparsing an nsdmi.\n\n\tgcc/testsuite/\n\tPR c++/58583\n\t* g++.dg/cpp0x/nsdmi-template14.C: Adjust test & errors.\n\nFrom-SVN: r232075", "tree": {"sha": "cc4998a7d268fbf9492585f63af61de1cf75a5f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc4998a7d268fbf9492585f63af61de1cf75a5f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "929710d96ced4cf7b2bd6e9896b3dc051cbfa235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929710d96ced4cf7b2bd6e9896b3dc051cbfa235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929710d96ced4cf7b2bd6e9896b3dc051cbfa235"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "f33e1dbf47558649c1bfa41120d39fdb3beb94df", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "patch": "@@ -1,3 +1,9 @@\n+2016-01-05  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/58583\n+\t* pt.c (build_non_dependent_expr): Don't try a checking fold when\n+\tparsing an nsdmi.\n+\n 2016-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "ad5099f94bc7941851f22e47cbbdf0cd358e6105", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "patch": "@@ -23416,9 +23416,13 @@ build_non_dependent_expr (tree expr)\n {\n   tree inner_expr;\n \n-  /* Try to get a constant value for all non-dependent expressions in\n-      order to expose bugs in *_dependent_expression_p and constexpr.  */\n-  if (flag_checking && cxx_dialect >= cxx11)\n+  /* When checking, try to get a constant value for all non-dependent\n+     expressions in order to expose bugs in *_dependent_expression_p\n+     and constexpr.  */\n+  if (flag_checking && cxx_dialect >= cxx11\n+      /* Don't do this during nsdmi parsing as it can lead to\n+\t unexpected recursive instantiations.  */\n+      && !parsing_nsdmi ())\n     fold_non_dependent_expr (expr);\n \n   /* Preserve OVERLOADs; the functions must be available to resolve"}, {"sha": "e231bbc719013743ddf7ebafa6202374fb86a151", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "patch": "@@ -1,5 +1,8 @@\n 2016-01-05  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/58583\n+\t* g++.dg/cpp0x/nsdmi-template14.C: Adjust test & errors.\n+\n \t* gcc.dg/alias-15.c: New.\n \n 2016-01-05  Nick Clifton  <nickc@redhat.com>"}, {"sha": "1a00ec0d6a9f351b0769aa917ca47ede0187b144", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-template14.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3e43d7c8622171301e253ce5ffeba0e24d8d39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template14.C?ref=ce3e43d7c8622171301e253ce5ffeba0e24d8d39", "patch": "@@ -1,11 +1,13 @@\n // PR c++/58583\n // { dg-do compile { target c++11 } }\n \n-template<int> struct A // { dg-error \"has been parsed\" }\n+template<int> struct A\n {\n-  int i = (A<0>(), 0); // { dg-error \"has been parsed\" }\n+  int i = (A<0>(), 0); // { dg-error \"recursive instantiation of non-static data\" }\n };\n \n+A<0> a;\n+\n template<int N> struct B\n {\n   B* p = new B<N>; // { dg-error \"recursive instantiation of non-static data\" }"}]}