{"sha": "e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ1YWRlN2UyZWFiMWM3MmRlNDVhZmZlYjNmOTFjZjRhNWYyNGJkOQ==", "commit": {"author": {"name": "Tobias Grosser", "email": "grosser@fim.uni-passau.de", "date": "2008-12-09T04:43:24Z"}, "committer": {"name": "Tobias Grosser", "email": "grosser@gcc.gnu.org", "date": "2008-12-09T04:43:24Z"}, "message": "re PR middle-end/38084 ([graphite] ICE : in build_graphite_scops, at graphite.c:1829)\n\n2008-12-09 Tobias Grosser  <grosser@fim.uni-passau.de>\n\n\tPR middle-end/38084\n\tFix testsuite/gfortran.dg/graphite/id-3.f90.\n\t* graphite.c (scopdet_basic_block_info): Fix bug that found some\n\tregions more than once.\n\t* testsuite/gfortran.dg/graphite/id-3.f90: New.\n\t* gcc/testsuite/gcc.dg/graphite/pr38084.c: New.\n\nFrom-SVN: r142578", "tree": {"sha": "73bad0305e53cc3e0737a0fbbf29b6ab6f3282f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73bad0305e53cc3e0737a0fbbf29b6ab6f3282f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/comments", "author": {"login": "tobiasgrosser", "id": 521960, "node_id": "MDQ6VXNlcjUyMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/521960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasgrosser", "html_url": "https://github.com/tobiasgrosser", "followers_url": "https://api.github.com/users/tobiasgrosser/followers", "following_url": "https://api.github.com/users/tobiasgrosser/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasgrosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasgrosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasgrosser/subscriptions", "organizations_url": "https://api.github.com/users/tobiasgrosser/orgs", "repos_url": "https://api.github.com/users/tobiasgrosser/repos", "events_url": "https://api.github.com/users/tobiasgrosser/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasgrosser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b16ef779830205beb18e3784c101b8f72893cdfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16ef779830205beb18e3784c101b8f72893cdfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16ef779830205beb18e3784c101b8f72893cdfb"}], "stats": {"total": 104, "additions": 82, "deletions": 22}, "files": [{"sha": "3e7fc4a0e1aefc4cbb2b2e7b4d4cdefc8659b6bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "patch": "@@ -1,3 +1,12 @@\n+2008-12-09 Tobias Grosser  <grosser@fim.uni-passau.de>\n+\n+\tPR middle-end/38084\n+\tFix testsuite/gfortran.dg/graphite/id-3.f90.\n+\t* graphite.c (scopdet_basic_block_info): Fix bug that found some\n+\tregions more than once.\n+\t* testsuite/gfortran.dg/graphite/id-3.f90: New.\n+\t* gcc/testsuite/gcc.dg/graphite/pr38084.c: New.\n+\n 2008-12-09  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/dfp-bit.c (DFP_TO_INT): Remove unnecessary cast."}, {"sha": "179d8757cabcc1d998010cb8c86825580d9e280d", "filename": "gcc/graphite.c", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "patch": "@@ -1318,36 +1318,35 @@ scopdet_basic_block_info (basic_block bb, VEC (sd_region, heap) **scops,\n \n     case GBB_LOOP_MULT_EXIT_HEADER:\n       {\n-        /* XXX: For now we just do not join loops with multiple exits. If the \n+        /* XXX: For now we just do not join loops with multiple exits.  If the \n            exits lead to the same bb it may be possible to join the loop.  */\n         VEC (sd_region, heap) *tmp_scops = VEC_alloc (sd_region, heap, 3);\n         VEC (edge, heap) *exits = get_loop_exit_edges (loop);\n         edge e;\n         int i;\n         build_scops_1 (bb, &tmp_scops, loop);\n \n-\n-\t/* Start at all bbs dominated by a loop exit that only exists in this\n-\t   loop.  */ \n+\t/* Scan the code dominated by this loop.  This means all bbs, that are\n+\t   are dominated by a bb in this loop, but are not part of this loop.\n+\t   \n+\t   The easiest case:\n+\t     - The loop exit destination is dominated by the exit sources.  \n+\t \n+\t   TODO: We miss here the more complex cases:\n+\t\t  - The exit destinations are dominated by another bb inside the\n+\t\t    loop.\n+\t\t  - The loop dominates bbs, that are not exit destinations.  */\n         for (i = 0; VEC_iterate (edge, exits, i, e); i++)\n-          if (e->src->loop_father == loop)\n-            {  \n-\t      VEC (basic_block, heap) *dominated;\n-\t      basic_block b;\n-\t      int j;\n-\t      dominated = get_dominated_by (CDI_DOMINATORS, e->src);\n-\t      for (j = 0; VEC_iterate (basic_block, dominated, j, b); j++)\n-\t\t/* Loop exit.  */\n-\t\tif (loop_depth (find_common_loop (loop, b->loop_father))\n-\t\t    < loop_depth (loop))\n-\t\t  {\n-\t\t    /* Pass loop_outer to recognize b as loop header in\n-\t\t       build_scops_1.  */\n-\t\t    if (b->loop_father->header == b)\n-\t\t      build_scops_1 (b, &tmp_scops, loop_outer (b->loop_father));\n-\t\t    else\n-\t\t      build_scops_1 (b, &tmp_scops, b->loop_father);\n-\t\t  }\n+          if (e->src->loop_father == loop\n+\t      && dominated_by_p (CDI_DOMINATORS, e->dest, e->src))\n+\t    {\n+\t      /* Pass loop_outer to recognize e->dest as loop header in\n+\t\t build_scops_1.  */\n+\t      if (e->dest->loop_father->header == e->dest)\n+\t\tbuild_scops_1 (e->dest, &tmp_scops,\n+\t\t\t       loop_outer (e->dest->loop_father));\n+\t      else\n+\t\tbuild_scops_1 (e->dest, &tmp_scops, e->dest->loop_father);\n \t    }\n \n         result.next = NULL; "}, {"sha": "7193f9600264ff65b589f90e5c334bd3bf6012df", "filename": "gcc/testsuite/gcc.dg/graphite/pr38084.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38084.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38084.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38084.c?ref=e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-options \"-O3 -fgraphite-identity\" } */\n+\n+typedef struct {\n+  unsigned int avail_out;\n+  void *state;\n+} stream;\n+\n+typedef struct {\n+  stream* test;\n+  int num;\n+} state_in;\n+\n+int test_in ( stream *test, int action )\n+{\n+  state_in* tst;\n+  if (test == ((void *)0)) return (-2);\n+  if (tst == ((void *)0)) return (-2);\n+  if (tst->test != test) return (-2);\n+ jump_here:\n+  switch (tst->num) {\n+  case 1:\n+    return (-1);\n+  case 2:\n+    if (action == 0) {\n+    }\n+    if (action == 1) {\n+      goto jump_here;\n+    }\n+  }\n+  return 0;\n+}"}, {"sha": "394bdf7ac16453d7856bd52717e428528e114e1c", "filename": "gcc/testsuite/gfortran.dg/graphite/id-3.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-3.f90?ref=e45ade7e2eab1c72de45affeb3f91cf4a5f24bd9", "patch": "@@ -0,0 +1,21 @@\n+! { dg-options \"-O2 -fgraphite-identity\" }\n+\n+subroutine gentrs (ptrst, ncls, xmin, dcls, xdont, ndon) \n+do icls1 = 1, ncls\n+   prec:    do\n+      select case (isns)\n+      case (-1)\n+         do icls = icls1, 1, -1\n+         enddo\n+      case (+1)\n+         do icls = icls1, ncls\n+            if (xale > rtrst (icls1, icls)) then\n+            endif\n+         enddo\n+      end select\n+   enddo prec\n+enddo\n+contains\n+real function genuni (jsee)\n+end function genuni\n+end subroutine gentrs"}]}