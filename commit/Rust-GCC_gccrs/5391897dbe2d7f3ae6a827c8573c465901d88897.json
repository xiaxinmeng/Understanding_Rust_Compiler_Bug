{"sha": "5391897dbe2d7f3ae6a827c8573c465901d88897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5MTg5N2RiZTJkN2YzYWU2YTgyN2M4NTczYzQ2NTkwMWQ4ODg5Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-28T08:07:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-28T08:07:09Z"}, "message": "[multiple changes]\n\n2009-07-28  Olivier Hainque  <hainque@adacore.com>\n\n\t* g-ssinty.ads: Remove, pointless and just confusing at this stage.\n\t* gnat_rm.texi: Remove documentation.\n\t* g-sse.ads: Minor reorg along the way.\n\t* gcc-interface/Makefile.in: Remove processing for g-ssinty.\n\t* g-ssvety.ads: Minor comment updates.\n\n2009-07-28  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi: gnatcheck 'Format of the Report File' section - update\n\tfor the new format of the report file.\n\nFrom-SVN: r150146", "tree": {"sha": "2639e0881f0938fd452345a2418ccb297617e8a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2639e0881f0938fd452345a2418ccb297617e8a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5391897dbe2d7f3ae6a827c8573c465901d88897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5391897dbe2d7f3ae6a827c8573c465901d88897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5391897dbe2d7f3ae6a827c8573c465901d88897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5391897dbe2d7f3ae6a827c8573c465901d88897/comments", "author": null, "committer": null, "parents": [{"sha": "ecb955bcf28766d13b2391a8642cc5395a4c5572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb955bcf28766d13b2391a8642cc5395a4c5572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecb955bcf28766d13b2391a8642cc5395a4c5572"}], "stats": {"total": 141, "additions": 37, "deletions": 104}, "files": [{"sha": "6dbd480dbff516d1c1d82e4b7e4cb8be0f3ac731", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5391897dbe2d7f3ae6a827c8573c465901d88897", "patch": "@@ -1,3 +1,16 @@\n+2009-07-28  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* g-ssinty.ads: Remove, pointless and just confusing at this stage.\n+\t* gnat_rm.texi: Remove documentation.\n+\t* g-sse.ads: Minor reorg along the way.\n+\t* gcc-interface/Makefile.in: Remove processing for g-ssinty.\n+\t* g-ssvety.ads: Minor comment updates.\n+\n+2009-07-28  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: gnatcheck 'Format of the Report File' section - update\n+\tfor the new format of the report file.\n+\n 2009-07-28  Sergey Rybin  <rybin@adacore.com>\n \n \t* gnat_ugn.texi: gnatcheck Deeply_Nested_Inlining rule: Update doc."}, {"sha": "706516b98309c706f29ca77ef149b16e9627fa04", "filename": "gcc/ada/g-sse.ads", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fg-sse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fg-sse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sse.ads?ref=5391897dbe2d7f3ae6a827c8573c465901d88897", "patch": "@@ -108,9 +108,10 @@\n --  end SSE_Base;\n \n package GNAT.SSE is\n-   type Float32 is new Float;\n-   type Float64 is new Long_Float;\n-   type Integer64 is new Long_Long_Integer;\n+\n+   -----------------------------------\n+   -- Common vector characteristics --\n+   -----------------------------------\n \n    VECTOR_BYTES : constant := 16;\n    --  Common size of all the SSE vector types, in bytes.\n@@ -125,4 +126,12 @@ package GNAT.SSE is\n    --  We apply that consistently to all the Ada vector types, as GCC does\n    --  for the corresponding C types.\n \n+   ----------------------------\n+   -- Vector component types --\n+   ----------------------------\n+\n+   type Float32 is new Float;\n+   type Float64 is new Long_Float;\n+   type Integer64 is new Long_Long_Integer;\n+\n end GNAT.SSE;"}, {"sha": "becdc7661d6012ed291e33b9266e8959aafb3d1c", "filename": "gcc/ada/g-ssinty.ads", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2Fg-ssinty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2Fg-ssinty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-ssinty.ads?ref=ecb955bcf28766d13b2391a8642cc5395a4c5572", "patch": "@@ -1,77 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S S E . I N T E R N A L _ T Y P E S              --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This unit exposes low level types to interface with the GCC vector\n---  builtins directly. These are useful for the development of higher level\n---  bindings to the reference Intel intrinsic operations.\n-\n---  See GNAT.SSE for the list of targets where this facility is supported.\n-\n-package GNAT.SSE.Internal_Types is\n-\n-   type v4sf is private;\n-   type v2df is private;\n-   type v2di is private;\n-\n-private\n-\n-   --  GCC'wise, vector operations operate on objects of vector modes,\n-   --  conveyed through vector types obtained in C by setting an attribute on\n-   --  what looks like a component typedef.  For example, in xmmintrin.h:\n-   --\n-   --    typedef float __v4sf __attribute__ ((__vector_size__ (16)));\n-\n-   --  Applying a 'vector_size' machine attribute in Ada, as in\n-   --\n-   --    type Vf is new Float;\n-   --    pragma Machine_Attribute (Vf,  \"vector_size\", 16);\n-   --\n-   --  makes Vf a 16bytes long V4SFmode GCC type but the effect on the type\n-   --  layout is not conveyed to the front-end.  The latter still sees \"Vf\"\n-   --  as a 4bytes long single float, with numerous potential pitfalls.\n-\n-   --  We devised a 'vector_type' alternate machine attribute, which applies\n-   --  to array types of the proper size and alignment from the front-end\n-   --  perspective:\n-\n-   type v4sf is array (1 .. 4) of GNAT.SSE.Float32;\n-   for v4sf'Alignment use GNAT.SSE.VECTOR_ALIGN;\n-   pragma Machine_Attribute (v4sf, \"vector_type\");\n-\n-   type v2di is array (1 .. 2) of GNAT.SSE.Integer64;\n-   for v2di'Alignment use GNAT.SSE.VECTOR_ALIGN;\n-   pragma Machine_Attribute (v2di, \"vector_type\");\n-\n-   type v2df is array (1 .. 2) of GNAT.SSE.Float64;\n-   for v2df'Alignment use GNAT.SSE.VECTOR_ALIGN;\n-   pragma Machine_Attribute (v2df, \"vector_type\");\n-\n-end GNAT.SSE.Internal_Types;"}, {"sha": "c40706474a4e45c30848f08f67e08748232ff24f", "filename": "gcc/ada/g-ssvety.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fg-ssvety.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fg-ssvety.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-ssvety.ads?ref=5391897dbe2d7f3ae6a827c8573c465901d88897", "patch": "@@ -49,7 +49,7 @@ package GNAT.SSE.Vector_Types is\n    --       access the byte elements and structures.\n    --\n    --     * Use new data types only with the respective intrinsics described\n-   --       in this documentation. >>\n+   --       in this documentation.\n \n    type m128  is private;  --  SSE >= 1\n    type m128d is private;  --  SSE >= 2\n@@ -69,7 +69,7 @@ private\n    --  typedef float __v4sf __attribute__ ((__vector_size__ (16)));\n \n    ------------\n-   --  M128  --\n+   --  m128  --\n    ------------\n \n    --  The __m128 data type can hold four 32-bit floating-point values"}, {"sha": "d487716cc5303cad1449b49642ffbde009dd6b04", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=5391897dbe2d7f3ae6a827c8573c465901d88897", "patch": "@@ -1052,7 +1052,7 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n     endif\n \n     THREADSLIB = -lpthread\n-    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o g-ssinty.o\n+    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n     EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   endif\n \n@@ -1593,7 +1593,7 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n     endif\n \n     EXTRA_GNATRTL_NONTASKING_OBJS = \\\n-\ts-win32.o s-winext.o g-regist.o g-sse.o g-ssvety.o g-ssinty.o\n+\ts-win32.o s-winext.o g-regist.o g-sse.o g-ssvety.o\n     EXTRA_GNATRTL_TASKING_OBJS = a-exetim.o\n \n     MISCLIB = -lws2_32\n@@ -2003,7 +2003,7 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o g-ssinty.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   THREADSLIB=-lpthread"}, {"sha": "1f26563397b059903aaeddf9033ea74d7b9fcc55", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=5391897dbe2d7f3ae6a827c8573c465901d88897", "patch": "@@ -382,7 +382,6 @@ The GNAT Library\n * GNAT.Spitbol.Table_Integer (g-sptain.ads)::\n * GNAT.Spitbol.Table_VString (g-sptavs.ads)::\n * GNAT.SSE (g-sse.ads)::\n-* GNAT.SSE.Internal_Types (g-ssinty.ads)::\n * GNAT.SSE.Vector_Types (g-ssvety.ads)::\n * GNAT.Strings (g-string.ads)::\n * GNAT.String_Split (g-strspl.ads)::\n@@ -13572,7 +13571,6 @@ of GNAT, and will generate a warning message.\n * GNAT.Spitbol.Table_Integer (g-sptain.ads)::\n * GNAT.Spitbol.Table_VString (g-sptavs.ads)::\n * GNAT.SSE (g-sse.ads)::\n-* GNAT.SSE.Internal_Types (g-ssinty.ads)::\n * GNAT.SSE.Vector_Types (g-ssvety.ads)::\n * GNAT.Strings (g-string.ads)::\n * GNAT.String_Split (g-strspl.ads)::\n@@ -14643,15 +14641,6 @@ the Intel(r) Streaming SIMD Extensions with GNAT on the x86 family of\n targets.  It exposes vector component types together with a general\n introduction to the binding contents and use.\n \n-@node GNAT.SSE.Internal_Types (g-ssinty.ads)\n-@section @code{GNAT.SSE.Internal_Types} (@file{g-ssinty.ads})\n-@cindex @code{GNAT.SSE.Internal_Types} (@file{g-ssinty.ads})\n-\n-@noindent\n-Low level GCC vector types for direct use of the vector related\n-builtins, required for the development of higher level bindings to SSE\n-intrinsic operations.\n-\n @node GNAT.SSE.Vector_Types (g-ssvety.ads)\n @section @code{GNAT.SSE.Vector_Types} (@file{g-ssvety.ads})\n @cindex @code{GNAT.SSE.Vector_Types} (@file{g-ssvety.ads})"}, {"sha": "7175dfd8edd3134cb3c3051e47f487cf64d8a06d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5391897dbe2d7f3ae6a827c8573c465901d88897/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5391897dbe2d7f3ae6a827c8573c465901d88897", "patch": "@@ -20712,14 +20712,13 @@ named named @file{^gnatcheck.out^GNATCHECK.OUT^} and it is located in the curren\n directory, @option{^-o^/OUTPUT^} option can be used to change the name and/or\n location of the report file. This report contains:\n @itemize @bullet\n-@item a list of the Ada source files being checked,\n-@item a list of enabled and disabled rules,\n-@item a list of the diagnostic messages, ordered in three different ways\n-and collected in three separate\n-sections. Section 1 contains the raw list of diagnostic messages. It\n-corresponds to the output going to @file{stdout}. Section 2 contains\n-messages ordered by rules.\n-Section 3 contains messages ordered by source files.\n+@item date and time of @command{gnatcheck} run, the version of\n+the tool that has generated this report and the full paarmeters\n+of the  @command{gnatcheck} invocation;\n+@item the list of enabled rules;\n+@item the total number of detected violations;\n+@item list of source files for that rule violations have been detected;\n+@item list of source files with no violations detected;\n @end itemize\n \n @node General gnatcheck Switches"}]}