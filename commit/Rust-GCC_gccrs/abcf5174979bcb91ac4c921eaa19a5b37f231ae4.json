{"sha": "abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJjZjUxNzQ5NzliY2I5MWFjNGM5MjFlYWExOWE1YjM3ZjIzMWFlNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-01-13T13:49:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-15T10:19:32Z"}, "message": "[Ada] Use runtime from base compiler during stage1\n\ngcc/ada/\n\n\t* Make-generated.in: Add rule to copy runtime files needed\n\tduring stage1.\n\t* raise.c: Remove obsolete symbols used during bootstrap.\n\t* gcc-interface/Make-lang.in: Do not use libgnat sources during\n\tstage1.\n\t(GNAT_ADA_OBJS, GNATBIND_OBJS): Split in two parts, the common\n\tpart and the part only used outside of stage1.\n\t(ADA_GENERATED_FILES): Add runtime files needed during bootstrap\n\twhen recent APIs are needed.\n\t(ada/b_gnatb.adb): Remove prerequisite.\n\t* gcc-interface/system.ads: Remove obsolete entries.", "tree": {"sha": "0ae53fac369fe0d8308c62ae9826e5a3c8db18bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae53fac369fe0d8308c62ae9826e5a3c8db18bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "472c84346799f4e0f04a22ce6958f5d4cbb69065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472c84346799f4e0f04a22ce6958f5d4cbb69065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472c84346799f4e0f04a22ce6958f5d4cbb69065"}], "stats": {"total": 455, "additions": 226, "deletions": 229}, "files": [{"sha": "2308b01933bb6695bac64f17d098e3cb60ed1bef", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "patch": "@@ -86,3 +86,6 @@ ada/stamp-sdefault : $(srcdir)/ada/version.c Makefile\n \t$(ECHO) \"end Sdefault;\" >> tmp-sdefault.adb\n \t$(fsrcdir)/../move-if-change tmp-sdefault.adb ada/sdefault.adb\n \ttouch ada/stamp-sdefault\n+\n+ada/%: $(srcdir)/ada/libgnat/%\n+\t$(CP) $< $@"}, {"sha": "896e7603af7354d498b51f13a4cee09475e615c9", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 219, "deletions": 159, "changes": 378, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "patch": "@@ -58,17 +58,40 @@ WARN_ADAFLAGS= -W -Wall\n # need to be built by a recent/matching native so we might as well leave the\n # checks fully active.\n \n+STAGE1=False\n+GNATBIND_FLAGS=\n+GNATLIB=\n+\n ifeq ($(CROSS),)\n-ADAFLAGS= $(COMMON_ADAFLAGS) -gnatwns\n+  ADAFLAGS=$(COMMON_ADAFLAGS) -gnatwns\n+\n+  ifeq ($(if $(wildcard ../stage_current),$(shell cat ../stage_current),stage1),stage1)\n+    STAGE1=True\n+    GNATBIND_FLAGS=-t\n+  endif\n else\n-ADAFLAGS= $(COMMON_ADAFLAGS)\n+  ADAFLAGS=$(COMMON_ADAFLAGS)\n endif\n \n ALL_ADAFLAGS = \\\n   $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS) $(CHECKING_ADAFLAGS) $(WARN_ADAFLAGS)\n FORCE_DEBUG_ADAFLAGS = -g\n ADA_CFLAGS =\n-ADA_INCLUDES = -nostdinc -I- -I. -Iada/generated -Iada -Iada/gcc-interface -I$(srcdir)/ada -I$(srcdir)/ada/gcc-interface -Iada/libgnat -I$(srcdir)/ada/libgnat\n+COMMON_ADA_INCLUDES = -I- -I. -Iada/generated -Iada -I$(srcdir)/ada\n+\n+STAGE1_LIBS=\n+\n+ifeq ($(strip $(filter-out linux%,$(host_os))),)\n+  STAGE1_LIBS=-ldl\n+endif\n+\n+ifeq ($(STAGE1),True)\n+  ADA_INCLUDES=$(COMMON_ADA_INCLUDES)\n+  GNATLIB=$(dir $(shell $(CC) -print-libgcc-file-name))adalib/libgnat.a $(STAGE1_LIBS)\n+else\n+  ADA_INCLUDES=-nostdinc $(COMMON_ADA_INCLUDES) -Iada/libgnat -I$(srcdir)/ada/libgnat -Iada/gcc-interface -I$(srcdir)/ada/gcc-interface\n+endif\n+\n GNATLIBFLAGS= -W -Wall -gnatpg -nostdinc\n GNATLIBCFLAGS= -g -O2 $(TCFLAGS)\n ADA_INCLUDE_DIR = $(libsubdir)/adainclude\n@@ -242,23 +265,29 @@ GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n \n # Languages-specific object files for Ada.\n \n-# Object files for gnat1 from C sources.\n-GNAT1_C_OBJS = ada/adadecode.o ada/adaint.o ada/argv.o ada/cio.o \\\n- ada/cstreams.o ada/env.o ada/init.o ada/initialize.o ada/raise.o \\\n- ada/raise-gcc.o \\\n- ada/seh_init.o ada/targext.o ada/cuintp.o ada/decl.o ada/rtfinal.o \\\n- ada/rtinit.o ada/misc.o ada/utils.o ada/utils2.o ada/trans.o ada/targtyps.o \\\n+# Object files from C sources that are used by gnat1\n+# Most of the non-gigi files are needed because of s-crtl.o and s-os_lib.o\n+# But adadecode.o should not be needed with sufficiently recent compilers\n+GNAT1_C_OBJS =   \\\n+ ada/cuintp.o    \\\n+ ada/decl.o      \\\n+ ada/misc.o      \\\n+ ada/utils.o     \\\n+ ada/utils2.o    \\\n+ ada/trans.o     \\\n+ ada/targtyps.o  \\\n+ ada/adadecode.o \\\n+ ada/adaint.o    \\\n+ ada/argv.o      \\\n+ ada/cio.o       \\\n+ ada/cstreams.o  \\\n+ ada/env.o       \\\n+ ada/errno.o     \\\n+ ada/targext.o   \\\n  ada/version.o\n \n # Object files from Ada sources that are used by gnat1\n GNAT_ADA_OBJS =\t\\\n- ada/libgnat/a-charac.o\t\\\n- ada/libgnat/a-chlat1.o\t\\\n- ada/libgnat/a-elchha.o\t\\\n- ada/libgnat/a-except.o\t\\\n- ada/libgnat/a-exctra.o \\\n- ada/libgnat/a-ioexce.o\t\\\n- ada/libgnat/ada.o\t\\\n  ada/spark_xrefs.o\t\\\n  ada/ali.o\t\\\n  ada/alloc.o\t\\\n@@ -319,26 +348,13 @@ GNAT_ADA_OBJS =\t\\\n  ada/fname.o\t\\\n  ada/freeze.o\t\\\n  ada/frontend.o\t\\\n- ada/libgnat/g-byorma.o\t\\\n- ada/libgnat/g-dynhta.o\t\\\n- ada/libgnat/g-graphs.o \\\n- ada/libgnat/g-heasor.o\t\\\n- ada/libgnat/g-htable.o\t\\\n- ada/libgnat/g-lists.o\t\\\n- ada/libgnat/g-sets.o\t\\\n- ada/libgnat/g-spchge.o\t\\\n- ada/libgnat/g-speche.o\t\\\n- ada/libgnat/g-table.o\t\\\n- ada/libgnat/g-u3spch.o\t\\\n  ada/get_targ.o\t\\\n  ada/ghost.o\t\\\n  ada/gnat_cuda.o \\\n- ada/libgnat/gnat.o\t\\\n  ada/gnatvsn.o\t\\\n  ada/hostparm.o\t\\\n  ada/impunit.o\t\\\n  ada/inline.o\t\\\n- ada/libgnat/interfac.o\t\\\n  ada/itypes.o\t\\\n  ada/krunch.o\t\\\n  ada/layout.o\t\\\n@@ -366,61 +382,6 @@ GNAT_ADA_OBJS =\t\\\n  ada/restrict.o\t\\\n  ada/rident.o\t\\\n  ada/rtsfind.o\t\\\n- ada/libgnat/s-addope.o\t\\\n- ada/libgnat/s-addima.o \\\n- ada/libgnat/s-assert.o\t\\\n- ada/libgnat/s-bitops.o\t\\\n- ada/libgnat/s-carun8.o\t\\\n- ada/libgnat/s-casuti.o\t\\\n- ada/libgnat/s-conca2.o\t\\\n- ada/libgnat/s-conca3.o\t\\\n- ada/libgnat/s-conca4.o\t\\\n- ada/libgnat/s-conca5.o\t\\\n- ada/libgnat/s-conca6.o\t\\\n- ada/libgnat/s-conca7.o\t\\\n- ada/libgnat/s-conca8.o\t\\\n- ada/libgnat/s-conca9.o\t\\\n- ada/libgnat/s-crc32.o\t\\\n- ada/libgnat/s-crtl.o\t\\\n- ada/libgnat/s-excdeb.o\t\\\n- ada/libgnat/s-except.o\t\\\n- ada/libgnat/s-excmac.o\t\\\n- ada/libgnat/s-exctab.o\t\\\n- ada/libgnat/s-htable.o\t\\\n- ada/libgnat/s-imenne.o\t\\\n- ada/libgnat/s-imgint.o\t\\\n- ada/libgnat/s-mastop.o\t\\\n- ada/libgnat/s-memory.o\t\\\n- ada/libgnat/s-os_lib.o\t\\\n- ada/libgnat/s-parame.o\t\\\n- ada/libgnat/s-pehage.o\t\\\n- ada/libgnat/s-purexc.o\t\\\n- ada/libgnat/s-restri.o\t\\\n- ada/libgnat/s-secsta.o\t\\\n- ada/libgnat/s-soflin.o\t\\\n- ada/libgnat/s-soliin.o\t\\\n- ada/libgnat/s-sopco3.o\t\\\n- ada/libgnat/s-sopco4.o\t\\\n- ada/libgnat/s-sopco5.o\t\\\n- ada/libgnat/s-stache.o\t\\\n- ada/libgnat/s-stalib.o\t\\\n- ada/libgnat/s-stoele.o\t\\\n- ada/libgnat/s-strcom.o\t\\\n- ada/libgnat/s-strhas.o\t\\\n- ada/libgnat/s-string.o\t\\\n- ada/libgnat/s-strops.o\t\\\n- ada/libgnat/s-traceb.o \\\n- ada/libgnat/s-traent.o\t\\\n- ada/libgnat/s-trasym.o \\\n- ada/libgnat/s-unstyp.o\t\\\n- ada/libgnat/s-utf_32.o\t\\\n- ada/libgnat/s-valint.o\t\\\n- ada/libgnat/s-valuns.o\t\\\n- ada/libgnat/s-valuti.o\t\\\n- ada/libgnat/s-wchcnv.o\t\\\n- ada/libgnat/s-wchcon.o\t\\\n- ada/libgnat/s-wchjis.o\t\\\n- ada/libgnat/s-wchstw.o \\\n  ada/scans.o\t\\\n  ada/scil_ll.o\t\\\n  ada/scn.o\t\\\n@@ -478,8 +439,6 @@ GNAT_ADA_OBJS =\t\\\n  ada/stylesw.o\t\\\n  ada/switch-c.o\t\\\n  ada/switch.o\t\\\n- ada/gcc-interface/a-assert.o\t\\\n- ada/gcc-interface/system.o\t\\\n  ada/table.o\t\\\n  ada/targparm.o\t\\\n  ada/tbuild.o\t\\\n@@ -493,22 +452,107 @@ GNAT_ADA_OBJS =\t\\\n  ada/validsw.o\t\\\n  ada/vast.o\t\\\n  ada/warnsw.o\t\\\n- ada/widechar.o\n+ ada/widechar.o \\\n+ ada/gnat.o\t\\\n+ ada/g-dynhta.o\t\\\n+ ada/g-graphs.o\t\\\n+ ada/g-lists.o\t\\\n+ ada/g-sets.o\t\\\n+ ada/s-casuti.o\t\\\n+ ada/s-crtl.o\t\\\n+ ada/s-os_lib.o\t\\\n+ ada/s-pehage.o\t\\\n+ ada/s-utf_32.o\n+\n+ifeq ($(STAGE1),False)\n+GNAT1_C_OBJS+=    \\\n+ ada/init.o       \\\n+ ada/initialize.o \\\n+ ada/raise.o      \\\n+ ada/raise-gcc.o  \\\n+ ada/rtfinal.o    \\\n+ ada/rtinit.o     \\\n+ ada/seh_init.o\n+\n+GNAT_ADA_OBJS+= \\\n+ ada/gcc-interface/system.o \\\n+ ada/libgnat/a-assert.o\t\\\n+ ada/libgnat/a-charac.o\t\\\n+ ada/libgnat/a-chlat1.o\t\\\n+ ada/libgnat/a-elchha.o\t\\\n+ ada/libgnat/a-except.o\t\\\n+ ada/libgnat/a-exctra.o \\\n+ ada/libgnat/a-ioexce.o\t\\\n+ ada/libgnat/ada.o\t\\\n+ ada/libgnat/g-byorma.o\t\\\n+ ada/libgnat/g-heasor.o\t\\\n+ ada/libgnat/g-htable.o\t\\\n+ ada/libgnat/g-spchge.o\t\\\n+ ada/libgnat/g-speche.o\t\\\n+ ada/libgnat/g-table.o\t\\\n+ ada/libgnat/g-u3spch.o\t\\\n+ ada/libgnat/interfac.o\t\\\n+ ada/libgnat/s-addope.o\t\\\n+ ada/libgnat/s-addima.o \\\n+ ada/libgnat/s-assert.o\t\\\n+ ada/libgnat/s-bitops.o\t\\\n+ ada/libgnat/s-carun8.o\t\\\n+ ada/libgnat/s-conca2.o\t\\\n+ ada/libgnat/s-conca3.o\t\\\n+ ada/libgnat/s-conca4.o\t\\\n+ ada/libgnat/s-conca5.o\t\\\n+ ada/libgnat/s-conca6.o\t\\\n+ ada/libgnat/s-conca7.o\t\\\n+ ada/libgnat/s-conca8.o\t\\\n+ ada/libgnat/s-conca9.o\t\\\n+ ada/libgnat/s-crc32.o\t\\\n+ ada/libgnat/s-excdeb.o\t\\\n+ ada/libgnat/s-except.o\t\\\n+ ada/libgnat/s-excmac.o\t\\\n+ ada/libgnat/s-exctab.o\t\\\n+ ada/libgnat/s-htable.o\t\\\n+ ada/libgnat/s-imenne.o\t\\\n+ ada/libgnat/s-imgint.o\t\\\n+ ada/libgnat/s-mastop.o\t\\\n+ ada/libgnat/s-memory.o\t\\\n+ ada/libgnat/s-parame.o\t\\\n+ ada/libgnat/s-purexc.o\t\\\n+ ada/libgnat/s-restri.o\t\\\n+ ada/libgnat/s-secsta.o\t\\\n+ ada/libgnat/s-soflin.o\t\\\n+ ada/libgnat/s-soliin.o\t\\\n+ ada/libgnat/s-sopco3.o\t\\\n+ ada/libgnat/s-sopco4.o\t\\\n+ ada/libgnat/s-sopco5.o\t\\\n+ ada/libgnat/s-stache.o\t\\\n+ ada/libgnat/s-stalib.o\t\\\n+ ada/libgnat/s-stoele.o\t\\\n+ ada/libgnat/s-strcom.o\t\\\n+ ada/libgnat/s-strhas.o\t\\\n+ ada/libgnat/s-string.o\t\\\n+ ada/libgnat/s-strops.o\t\\\n+ ada/libgnat/s-traceb.o \\\n+ ada/libgnat/s-traent.o\t\\\n+ ada/libgnat/s-trasym.o \\\n+ ada/libgnat/s-unstyp.o\t\\\n+ ada/libgnat/s-valint.o\t\\\n+ ada/libgnat/s-valuns.o\t\\\n+ ada/libgnat/s-valuti.o\t\\\n+ ada/libgnat/s-wchcnv.o\t\\\n+ ada/libgnat/s-wchcon.o\t\\\n+ ada/libgnat/s-wchjis.o\t\\\n+ ada/libgnat/s-wchstw.o\n+endif\n \n # Object files for gnat executables\n GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o\n \n GNAT1_OBJS = $(GNAT1_C_OBJS) $(GNAT1_ADA_OBJS) ada/b_gnat1.o\n \n GNATBIND_OBJS = \\\n- ada/libgnat/a-elchha.o   \\\n- ada/libgnat/a-except.o   \\\n- ada/libgnat/ada.o        \\\n- ada/adaint.o     \\\n  ada/ali-util.o   \\\n  ada/ali.o        \\\n  ada/alloc.o      \\\n- ada/argv.o       \\\n  ada/aspects.o    \\\n  ada/atree.o      \\\n  ada/bcheck.o     \\\n@@ -527,15 +571,12 @@ GNATBIND_OBJS = \\\n  ada/bindusg.o    \\\n  ada/butil.o      \\\n  ada/casing.o     \\\n- ada/cio.o        \\\n  ada/csets.o      \\\n- ada/cstreams.o   \\\n  ada/debug.o      \\\n  ada/einfo-entities.o \\\n  ada/einfo-utils.o \\\n  ada/einfo.o      \\\n  ada/elists.o     \\\n- ada/env.o        \\\n  ada/err_vars.o   \\\n  ada/errout.o     \\\n  ada/erroutc.o    \\\n@@ -544,20 +585,9 @@ GNATBIND_OBJS = \\\n  ada/fmap.o       \\\n  ada/fname-uf.o   \\\n  ada/fname.o      \\\n- ada/libgnat/g-byorma.o   \\\n- ada/libgnat/g-dynhta.o   \\\n- ada/libgnat/g-graphs.o   \\\n- ada/libgnat/g-hesora.o   \\\n- ada/libgnat/g-htable.o   \\\n- ada/libgnat/g-lists.o    \\\n- ada/libgnat/g-sets.o     \\\n- ada/libgnat/gnat.o       \\\n  ada/gnatbind.o   \\\n  ada/gnatvsn.o    \\\n  ada/hostparm.o   \\\n- ada/init.o       \\\n- ada/initialize.o \\\n- ada/libgnat/interfac.o   \\\n  ada/krunch.o     \\\n  ada/lib.o        \\\n  ada/link.o       \\\n@@ -567,16 +597,73 @@ GNATBIND_OBJS = \\\n  ada/osint-b.o    \\\n  ada/osint.o      \\\n  ada/output.o     \\\n- ada/raise.o      \\\n- ada/raise-gcc.o  \\\n  ada/restrict.o   \\\n  ada/rident.o     \\\n+ ada/scans.o      \\\n+ ada/scil_ll.o    \\\n+ ada/scng.o       \\\n+ ada/sdefault.o   \\\n+ ada/seinfo.o\t  \\\n+ ada/sem_aux.o    \\\n+ ada/sinfo.o      \\\n+ ada/sinfo-nodes.o \\\n+ ada/sinfo-utils.o \\\n+ ada/sinput-c.o   \\\n+ ada/sinput.o     \\\n+ ada/snames.o     \\\n+ ada/stand.o      \\\n+ ada/stringt.o    \\\n+ ada/style.o      \\\n+ ada/styleg.o     \\\n+ ada/stylesw.o    \\\n+ ada/switch-b.o   \\\n+ ada/switch.o     \\\n+ ada/table.o      \\\n+ ada/targparm.o   \\\n+ ada/types.o      \\\n+ ada/uintp.o      \\\n+ ada/uname.o      \\\n+ ada/urealp.o     \\\n+ ada/widechar.o   \\\n+ ada/gnat.o       \\\n+ ada/g-dynhta.o   \\\n+ ada/g-lists.o    \\\n+ ada/g-graphs.o   \\\n+ ada/g-sets.o     \\\n+ ada/s-casuti.o   \\\n+ ada/s-os_lib.o   \\\n+ ada/s-resfil.o   \\\n+ ada/s-utf_32.o   \\\n+ ada/adaint.o     \\\n+ ada/argv.o       \\\n+ ada/cio.o        \\\n+ ada/cstreams.o   \\\n+ ada/env.o        \\\n+ ada/errno.o      \\\n+ ada/targext.o    \\\n+ ada/version.o\n+\n+ifeq ($(STAGE1),False)\n+GNATBIND_OBJS +=  \\\n+ ada/init.o       \\\n+ ada/initialize.o \\\n+ ada/raise.o      \\\n+ ada/raise-gcc.o  \\\n  ada/rtfinal.o    \\\n  ada/rtinit.o     \\\n+ ada/seh_init.o   \\\n+ ada/gcc-interface/system.o \\\n+ ada/libgnat/a-assert.o   \\\n+ ada/libgnat/a-elchha.o   \\\n+ ada/libgnat/a-except.o   \\\n+ ada/libgnat/ada.o        \\\n+ ada/libgnat/g-byorma.o   \\\n+ ada/libgnat/g-hesora.o   \\\n+ ada/libgnat/g-htable.o   \\\n+ ada/libgnat/interfac.o   \\\n  ada/libgnat/s-addope.o   \\\n  ada/libgnat/s-assert.o   \\\n  ada/libgnat/s-carun8.o   \\\n- ada/libgnat/s-casuti.o   \\\n  ada/libgnat/s-conca2.o   \\\n  ada/libgnat/s-conca3.o   \\\n  ada/libgnat/s-conca4.o   \\\n@@ -586,7 +673,6 @@ GNATBIND_OBJS = \\\n  ada/libgnat/s-conca8.o   \\\n  ada/libgnat/s-conca9.o   \\\n  ada/libgnat/s-crc32.o    \\\n- ada/libgnat/s-crtl.o     \\\n  ada/libgnat/s-excdeb.o   \\\n  ada/libgnat/s-except.o   \\\n  ada/libgnat/s-excmac.o   \\\n@@ -596,9 +682,7 @@ GNATBIND_OBJS = \\\n  ada/libgnat/s-imgint.o   \\\n  ada/libgnat/s-mastop.o   \\\n  ada/libgnat/s-memory.o   \\\n- ada/libgnat/s-os_lib.o   \\\n  ada/libgnat/s-parame.o   \\\n- ada/libgnat/s-resfil.o   \\\n  ada/libgnat/s-restri.o   \\\n  ada/libgnat/s-secsta.o   \\\n  ada/libgnat/s-soflin.o   \\\n@@ -615,42 +699,11 @@ GNATBIND_OBJS = \\\n  ada/libgnat/s-traent.o   \\\n  ada/libgnat/s-traceb.o   \\\n  ada/libgnat/s-unstyp.o   \\\n- ada/libgnat/s-utf_32.o   \\\n  ada/libgnat/s-wchcnv.o   \\\n  ada/libgnat/s-wchcon.o   \\\n  ada/libgnat/s-wchjis.o   \\\n- ada/libgnat/s-wchstw.o   \\\n- ada/scans.o      \\\n- ada/scil_ll.o    \\\n- ada/scng.o       \\\n- ada/sdefault.o   \\\n- ada/seh_init.o   \\\n- ada/seinfo.o \\\n- ada/sem_aux.o    \\\n- ada/sinfo-nodes.o \\\n- ada/sinfo-utils.o \\\n- ada/sinfo.o      \\\n- ada/sinput-c.o   \\\n- ada/sinput.o     \\\n- ada/snames.o     \\\n- ada/stand.o      \\\n- ada/stringt.o    \\\n- ada/style.o      \\\n- ada/styleg.o     \\\n- ada/stylesw.o    \\\n- ada/switch-b.o   \\\n- ada/switch.o     \\\n- ada/gcc-interface/a-assert.o\t\\\n- ada/gcc-interface/system.o     \\\n- ada/table.o      \\\n- ada/targext.o    \\\n- ada/targparm.o   \\\n- ada/types.o      \\\n- ada/uintp.o      \\\n- ada/uname.o      \\\n- ada/urealp.o     \\\n- ada/version.o    \\\n- ada/widechar.o\n+ ada/libgnat/s-wchstw.o\n+endif\n \n # Language-independent object files.\n ADA_BACKEND = $(BACKEND) attribs.o\n@@ -684,13 +737,13 @@ ada/libgnat/s-excmac.adb: $(srcdir)/ada/libgnat/s-excmac__$(EH_MECHANISM).adb\n gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a \\\n \t\t$(LIBDEPS) $(ada.prev)\n \t@$(call LINK_PROGRESS,$(INDEX.ada),start)\n-\t+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) \\\n-\t  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)\n+\t+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) $(CFLAGS) \\\n+\t  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(GNATLIB)\n \t$(RM) stamp-gnatlib2-rts stamp-tools\n \t@$(call LINK_PROGRESS,$(INDEX.ada),end)\n \n gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)\n-\t+$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS)\n+\t+$(GCC_LINK) -o $@ $(CFLAGS) ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(GNATLIB)\n \n # use target-gcc target-gnatmake target-gnatbind target-gnatlink\n gnattools: $(GCC_PARTS) $(CONFIG_H) prefix.o force\n@@ -1023,7 +1076,7 @@ $(check_acats_targets): check-acats%:\n \n ada/b_gnat1.adb : $(GNAT1_ADA_OBJS)\n         # Old gnatbind do not allow a path for -o.\n-\t$(GNATBIND) $(ADA_INCLUDES) -o b_gnat1.adb -n ada/gnat1drv.ali\n+\t$(GNATBIND) $(GNATBIND_FLAGS) $(ADA_INCLUDES) -o b_gnat1.adb -n ada/gnat1drv.ali\n \t$(MV) b_gnat1.adb b_gnat1.ads ada/\n \n ada/b_gnat1.o : ada/b_gnat1.adb\n@@ -1032,9 +1085,9 @@ ada/b_gnat1.o : ada/b_gnat1.adb\n \t$(CC) -c $(CFLAGS) $(ADA_CFLAGS) -gnatp -gnatws $(ADA_INCLUDES) \\\n \t    $< $(ADA_OUTPUT_OPTION)\n \n-ada/b_gnatb.adb : $(GNATBIND_OBJS) ada/gnatbind.o ada/libgnat/interfac.o\n+ada/b_gnatb.adb : $(GNATBIND_OBJS) ada/gnatbind.o\n         # Old gnatbind do not allow a path for -o.\n-\t$(GNATBIND) $(ADA_INCLUDES) -o b_gnatb.adb ada/gnatbind.ali\n+\t$(GNATBIND) $(GNATBIND_FLAGS) $(ADA_INCLUDES) -o b_gnatb.adb ada/gnatbind.ali\n \t$(MV) b_gnatb.adb b_gnatb.ads ada/\n \n ada/b_gnatb.o : ada/b_gnatb.adb\n@@ -1090,7 +1143,7 @@ ada/generated/gnatvsn.ads: ada/gnatvsn.ads BASE-VER ada/GNAT_DATE\n \tcat $< | sed -e \"/Version/s/(\\([0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]\\).*)/($$d$$s)/g\" >$@\n \n ada/gnatvsn.o : ada/gnatvsn.adb ada/generated/gnatvsn.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) -Iada/generated -I../ada/generated $(ADA_INCLUDES) $< $(ADA_OUTPUT_OPTION)\n+\t$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $< $(ADA_OUTPUT_OPTION)\n \t@$(ADA_DEPS)\n \n # Dependencies for windows specific tool (mdll)\n@@ -1106,13 +1159,20 @@ ada/mdll-utl.o : ada/mdll-utl.adb ada/mdll.ads ada/mdll-utl.ads ada/sdefault.ads\n \n # All generated files.  Perhaps we should build all of these in the same\n # subdirectory, and get rid of ada/bldtools.\n-ADA_GENERATED_FILES = ada/sinfo.h ada/einfo.h ada/nmake.adb ada/nmake.ads \\\n-\t\t      ada/snames.ads ada/snames.adb ada/snames.h \\\n-\t\t      ada/generated/gnatvsn.ads \\\n-\t\t      ada/seinfo.ads \\\n-\t\t      ada/seinfo_tables.ads ada/seinfo_tables.adb \\\n-\t\t      ada/sinfo-nodes.ads ada/sinfo-nodes.adb \\\n-\t\t      ada/einfo-entities.ads ada/einfo-entities.adb\n+ADA_GENERATED_FILES = \\\n+  ada/sinfo.h ada/einfo.h ada/nmake.adb ada/nmake.ads \\\n+  ada/snames.ads ada/snames.adb ada/snames.h \\\n+  ada/generated/gnatvsn.ads \\\n+  ada/seinfo.ads ada/seinfo_tables.ads ada/seinfo_tables.adb \\\n+  ada/sinfo-nodes.ads ada/sinfo-nodes.adb \\\n+  ada/einfo-entities.ads ada/einfo-entities.adb \\\n+  ada/gnat.ads ada/g-dynhta.ads ada/g-dynhta.adb \\\n+  ada/g-dyntab.ads ada/g-dyntab.adb ada/g-graphs.ads ada/g-graphs.adb \\\n+  ada/g-lists.ads ada/g-lists.adb ada/g-sets.ads ada/g-sets.adb \\\n+  ada/s-casuti.ads ada/s-casuti.adb \\\n+  ada/s-crtl.ads ada/s-rident.ads ada/s-pehage.ads ada/s-pehage.adb \\\n+  ada/s-os_lib.ads ada/s-os_lib.adb ada/s-resfil.ads ada/s-resfil.adb \\\n+  ada/s-utf_32.ads ada/s-utf_32.adb\n \n # Only used to manually trigger the creation of the generated files.\n .PHONY:"}, {"sha": "a468ae70a75f3ce319f4a75aef2bd6f313152a76", "filename": "gcc/ada/gcc-interface/system.ads", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2Fgcc-interface%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2Fgcc-interface%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fsystem.ads?ref=abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "patch": "@@ -145,16 +145,13 @@ private\n    --  parameters is not too critical for the compiler version (e.g. we\n    --  do not use floating-point anyway in the compiler).\n \n-   AAMP                      : constant Boolean := False;\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n    Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    Preallocated_Stacks       : constant Boolean := False;\n@@ -172,13 +169,4 @@ private\n    Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n-   --  Obsolete entries, to be removed eventually (bootstrap issues)\n-\n-   Front_End_ZCX_Support     : constant Boolean := False;\n-   High_Integrity_Mode       : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   Functions_Return_By_DSP   : constant Boolean := False;\n-   Support_64_Bit_Divides    : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n-\n end System;"}, {"sha": "0c12d07476259f031639982f3000c056cd700982", "filename": "gcc/ada/raise.c", "status": "modified", "additions": 4, "deletions": 58, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2Fraise.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcf5174979bcb91ac4c921eaa19a5b37f231ae4/gcc%2Fada%2Fraise.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.c?ref=abcf5174979bcb91ac4c921eaa19a5b37f231ae4", "patch": "@@ -62,67 +62,13 @@ __gnat_unhandled_terminate (void)\n #ifndef IN_RTS\n int\n __gnat_backtrace (void **array ATTRIBUTE_UNUSED,\n-                  int size ATTRIBUTE_UNUSED,\n-                  void *exclude_min ATTRIBUTE_UNUSED,\n-                  void *exclude_max ATTRIBUTE_UNUSED,\n-                  int skip_frames ATTRIBUTE_UNUSED)\n+\t\t  int size ATTRIBUTE_UNUSED,\n+\t\t  void *exclude_min ATTRIBUTE_UNUSED,\n+\t\t  void *exclude_max ATTRIBUTE_UNUSED,\n+\t\t  int skip_frames ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n-\n-void\n-__gnat_eh_personality (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_04 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_10 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_19 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_20 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_21 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_30 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_31 (void)\n-{\n-  abort ();\n-}\n-\n-void\n-__gnat_rcheck_32 (void)\n-{\n-  abort ();\n-}\n #endif\n #ifdef __cplusplus\n }"}]}