{"sha": "e7a4277263e6eeb7c934e2d687a248e00d7f7367", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdhNDI3NzI2M2U2ZWViN2M5MzRlMmQ2ODdhMjQ4ZTAwZDdmNzM2Nw==", "commit": {"author": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-23T17:08:13Z"}, "committer": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-23T17:08:13Z"}, "message": "changed bytecode rtx structure references into macros\n\nFrom-SVN: r5435", "tree": {"sha": "59f77be46d5bc1d8fe0f11c7cf635d7aa4163942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59f77be46d5bc1d8fe0f11c7cf635d7aa4163942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7a4277263e6eeb7c934e2d687a248e00d7f7367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a4277263e6eeb7c934e2d687a248e00d7f7367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7a4277263e6eeb7c934e2d687a248e00d7f7367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a4277263e6eeb7c934e2d687a248e00d7f7367/comments", "author": null, "committer": null, "parents": [{"sha": "5b7ded0d786f0c846bde6c1bf118778f909c6b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b7ded0d786f0c846bde6c1bf118778f909c6b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b7ded0d786f0c846bde6c1bf118778f909c6b10"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "b25012204a1e7077b15ed40d200c41dfc3fe729f", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7a4277263e6eeb7c934e2d687a248e00d7f7367/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7a4277263e6eeb7c934e2d687a248e00d7f7367/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e7a4277263e6eeb7c934e2d687a248e00d7f7367", "patch": "@@ -5738,13 +5738,14 @@ bc_expand_expr (exp)\n \tabort ();\n       \n #if 0\n-      if (DECL_RTL (exp)->label)\n+      if (BYTECODE_LABEL (DECL_RTL (exp)))\n \tbc_load_externaddr (DECL_RTL (exp));\n       else\n \tbc_load_localaddr (DECL_RTL (exp));\n #endif\n       if (TREE_PUBLIC (exp))\n-\tbc_load_externaddr_id (DECL_ASSEMBLER_NAME (exp), DECL_RTL (exp)->offset);\n+\tbc_load_externaddr_id (DECL_ASSEMBLER_NAME (exp),\n+\t\t\t       BYTECODE_BC_LABEL (DECL_RTL (exp))->offset);\n       else\n \tbc_load_localaddr (DECL_RTL (exp));\n       \n@@ -9103,7 +9104,8 @@ bc_load_externaddr (externaddr)\n      rtx externaddr;\n {\n   bc_emit_bytecode (constP);\n-  bc_emit_code_labelref (externaddr->label, externaddr->offset);\n+  bc_emit_code_labelref (BYTECODE_LABEL (externaddr),\n+\t\t\t BYTECODE_BC_LABEL (externaddr)->offset);\n \n #ifdef DEBUG_PRINT_CODE\n   fputc ('\\n', stderr);\n@@ -9144,7 +9146,7 @@ void\n bc_load_localaddr (localaddr)\n      rtx localaddr;\n {\n-  bc_emit_instruction (localP, (HOST_WIDE_INT) localaddr->offset);\n+  bc_emit_instruction (localP, (HOST_WIDE_INT) BYTECODE_BC_LABEL (localaddr)->offset);\n }\n \n \n@@ -9154,7 +9156,8 @@ void\n bc_load_parmaddr (parmaddr)\n      rtx parmaddr;\n {\n-  bc_emit_instruction (argP, (HOST_WIDE_INT) parmaddr->offset / BITS_PER_UNIT);\n+  bc_emit_instruction (argP, ((HOST_WIDE_INT) BYTECODE_BC_LABEL (parmaddr)->offset\n+\t\t\t      / BITS_PER_UNIT));\n }\n \n \n@@ -9301,7 +9304,8 @@ bc_expand_address (exp)\n \n     case FUNCTION_DECL:\n \n-      bc_load_externaddr_id (DECL_ASSEMBLER_NAME (exp), DECL_RTL (exp)->offset);\n+      bc_load_externaddr_id (DECL_ASSEMBLER_NAME (exp),\n+\t\t\t     BYTECODE_BC_LABEL (DECL_RTL (exp))->offset);\n       break;\n \n     case PARM_DECL:\n@@ -9328,12 +9332,13 @@ bc_expand_address (exp)\n     case VAR_DECL:\n \n #if 0\n-      if (DECL_RTL (exp)->label)\n+      if (BYTECODE_LABEL (DECL_RTL (exp)))\n \tbc_load_externaddr (DECL_RTL (exp));\n #endif\n \n       if (DECL_EXTERNAL (exp))\n-\tbc_load_externaddr_id (DECL_ASSEMBLER_NAME (exp), DECL_RTL (exp)->offset);\n+\tbc_load_externaddr_id (DECL_ASSEMBLER_NAME (exp),\n+\t\t\t       BYTECODE_BC_OFFSET (DECL_RTL (exp)));\n       else\n \tbc_load_localaddr (DECL_RTL (exp));\n \n@@ -9355,7 +9360,7 @@ bc_expand_address (exp)\n \t\n \tbc_emit_bytecode (constP);\n \tr = output_constant_def (exp);\n-\tbc_emit_code_labelref (r->label, r->offset);\n+\tbc_emit_code_labelref (BYTECODE_LABEL (r), BYTECODE_BC_LABEL (r)->offset);\n \n #ifdef DEBUG_PRINT_CODE\n \tfputc ('\\n', stderr);"}, {"sha": "1a3a375dab96fe6822c31484e2c6e8261d658879", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7a4277263e6eeb7c934e2d687a248e00d7f7367/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7a4277263e6eeb7c934e2d687a248e00d7f7367/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e7a4277263e6eeb7c934e2d687a248e00d7f7367", "patch": "@@ -4590,7 +4590,8 @@ bc_expand_function_start (subr, parms_have_cleanups)\n   ++nlab;\n   name = (char *) obstack_copy0 (&permanent_obstack, label, strlen (label));\n   this_function_callinfo = bc_gen_rtx (name, 0, (struct bc_label *) 0);\n-  this_function_bytecode = bc_emit_trampoline (this_function_callinfo->label);\n+  this_function_bytecode =\n+    bc_emit_trampoline (BYTECODE_LABEL (this_function_callinfo));\n }\n \n \n@@ -4616,12 +4617,12 @@ bc_expand_function_end ()\n \n   /* If this changes also make sure to change bc-interp.h!  */\n \n-  bc_emit_const_labeldef (this_function_callinfo->label);\n+  bc_emit_const_labeldef (BYTECODE_LABEL (this_function_callinfo));\n   bc_emit_const ((char *) &max_stack_depth, sizeof max_stack_depth);\n   bc_emit_const ((char *) &local_vars_size, sizeof local_vars_size);\n   bc_emit_const_labelref (this_function_bytecode, 0);\n   bc_emit_const_labelref (ptrconsts, 0);\n-  bc_emit_const_labelref (this_function_calldesc->label, 0);\n+  bc_emit_const_labelref (BYTECODE_LABEL (this_function_calldesc), 0);\n }\n \n "}]}