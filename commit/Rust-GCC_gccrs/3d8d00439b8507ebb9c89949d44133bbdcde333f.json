{"sha": "3d8d00439b8507ebb9c89949d44133bbdcde333f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4ZDAwNDM5Yjg1MDdlYmI5Yzg5OTQ5ZDQ0MTMzYmJkY2RlMzMzZg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-03-21T12:59:35Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-03-21T12:59:35Z"}, "message": "re PR ipa/59176 (ICE edge points to wrong declaration / verify_cgraph_node failed)\n\n2014-03-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/59176\n\t* cgraph.h (symtab_node): New flag body_removed.\n\t* ipa.c (symtab_remove_unreachable_nodes): Set body_removed flag\n\twhen removing bodies.\n\t* symtab.c (dump_symtab_base): Dump body_removed flag.\n\t* cgraph.c (verify_edge_corresponds_to_fndecl): Skip nodes which\n\thad their bodies removed.\n\ntestsuite/\n        * g++.dg/torture/pr59176.C: New test.\n\nFrom-SVN: r208748", "tree": {"sha": "9a7d70708594301be7def95ae86b5e51f4577ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a7d70708594301be7def95ae86b5e51f4577ef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d8d00439b8507ebb9c89949d44133bbdcde333f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8d00439b8507ebb9c89949d44133bbdcde333f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d8d00439b8507ebb9c89949d44133bbdcde333f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8d00439b8507ebb9c89949d44133bbdcde333f/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d833415cdac558ab5da28048154d119856b62ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d833415cdac558ab5da28048154d119856b62ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d833415cdac558ab5da28048154d119856b62ad6"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "57a7688de32f18563e50fadb4461b490c0dd5b14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -1,3 +1,13 @@\n+2014-03-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/59176\n+\t* cgraph.h (symtab_node): New flag body_removed.\n+\t* ipa.c (symtab_remove_unreachable_nodes): Set body_removed flag\n+\twhen removing bodies.\n+\t* symtab.c (dump_symtab_base): Dump body_removed flag.\n+\t* cgraph.c (verify_edge_corresponds_to_fndecl): Skip nodes which\n+\thad their bodies removed.\n+\n 2014-03-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/60419"}, {"sha": "abfd63c9955c2cf064caacad47f75eea4b17a573", "filename": "gcc/cgraph.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -2604,8 +2604,13 @@ verify_edge_corresponds_to_fndecl (struct cgraph_edge *e, tree decl)\n   node = cgraph_get_node (decl);\n \n   /* We do not know if a node from a different partition is an alias or what it\n-     aliases and therefore cannot do the former_clone_of check reliably.  */\n-  if (!node || node->in_other_partition || e->callee->in_other_partition)\n+     aliases and therefore cannot do the former_clone_of check reliably.  When\n+     body_removed is set, we have lost all information about what was alias or\n+     thunk of and also cannot proceed.  */\n+  if (!node\n+      || node->body_removed\n+      || node->in_other_partition\n+      || e->callee->in_other_partition)\n     return false;\n   node = cgraph_function_or_thunk_node (node, NULL);\n "}, {"sha": "59d9ce66845f1dec91d29aa3b19effbc596133e2", "filename": "gcc/cgraph.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -91,7 +91,9 @@ class GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"),\n   unsigned forced_by_abi : 1;\n   /* True when the name is known to be unique and thus it does not need mangling.  */\n   unsigned unique_name : 1;\n-\n+  /* True when body and other characteristics have been removed by\n+     symtab_remove_unreachable_nodes. */\n+  unsigned body_removed : 1;\n \n   /*** WHOPR Partitioning flags.\n        These flags are used at ltrans stage when only part of the callgraph is"}, {"sha": "d23031286f2f07a245b00173fe38daafb2e9d11f", "filename": "gcc/ipa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -484,6 +484,7 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t    {\n \t      if (file)\n \t\tfprintf (file, \" %s\", node->name ());\n+\t      node->body_removed = true;\n \t      node->analyzed = false;\n \t      node->definition = false;\n \t      node->cpp_implicit_alias = false;\n@@ -543,6 +544,7 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t\tfprintf (file, \" %s\", vnode->name ());\n \t      changed = true;\n \t    }\n+\t  vnode->body_removed = true;\n \t  vnode->definition = false;\n \t  vnode->analyzed = false;\n \t  vnode->aux = NULL;"}, {"sha": "4db4870fa4e5175ae6b537cc7bcb9bb0ad20a294", "filename": "gcc/symtab.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -601,6 +601,8 @@ dump_symtab_base (FILE *f, symtab_node *node)\n \t     ? IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME\n \t\t\t\t     (node->alias_target))\n \t     : IDENTIFIER_POINTER (node->alias_target));\n+  if (node->body_removed)\n+    fprintf (f, \"\\n  Body removed by symtab_remove_unreachable_nodes\");\n   fprintf (f, \"\\n  Visibility:\");\n   if (node->in_other_partition)\n     fprintf (f, \" in_other_partition\");"}, {"sha": "9740621934c6d9cf0d0bf9fe322069ffad001ecf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -1,3 +1,8 @@\n+2014-03-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/59176\n+        * g++.dg/torture/pr59176.C: New test.\n+\n 2014-03-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/60419"}, {"sha": "d576bc3ba5a139427b414ff922eb99dd822a07f6", "filename": "gcc/testsuite/g++.dg/ipa/pr59176.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr59176.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8d00439b8507ebb9c89949d44133bbdcde333f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr59176.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr59176.C?ref=3d8d00439b8507ebb9c89949d44133bbdcde333f", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+template <class> class A {\n+protected:\n+  void m_fn2();\n+  ~A() { m_fn2(); }\n+  virtual void m_fn1();\n+};\n+\n+class D : A<int> {};\n+template <class Key> void A<Key>::m_fn2() {\n+  m_fn1();\n+  m_fn1();\n+  m_fn1();\n+}\n+\n+#pragma interface\n+class B {\n+  D m_cellsAlreadyProcessed;\n+  D m_cellsNotToProcess;\n+\n+public:\n+  virtual ~B() {}\n+  void m_fn1();\n+};\n+\n+class C {\n+  unsigned long m_fn1();\n+  B m_fn2();\n+  unsigned long m_fn3();\n+};\n+unsigned long C::m_fn1() {\n+CellHierarchy:\n+  m_fn2().m_fn1();\n+}\n+\n+unsigned long C::m_fn3() {\n+CellHierarchy:\n+  m_fn2().m_fn1();\n+}"}]}