{"sha": "0fd17968072d1cc7d6b3b4a8a5616faa8c984c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkMTc5NjgwNzJkMWNjN2Q2YjNiNGE4YTU2MTZmYWE4Yzk4NGMyNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T21:29:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T21:29:33Z"}, "message": "(build_{index,range}_type): Ensure expressions for min and max value\nare in same obstack as type.\n\nFrom-SVN: r13722", "tree": {"sha": "5901ab0332717631dc1d6beacbe000ffacc6d49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5901ab0332717631dc1d6beacbe000ffacc6d49f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fd17968072d1cc7d6b3b4a8a5616faa8c984c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd17968072d1cc7d6b3b4a8a5616faa8c984c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd17968072d1cc7d6b3b4a8a5616faa8c984c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd17968072d1cc7d6b3b4a8a5616faa8c984c26/comments", "author": null, "committer": null, "parents": [{"sha": "d5afd1d10bc39a4c56e0591554ab39063fa54341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5afd1d10bc39a4c56e0591554ab39063fa54341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5afd1d10bc39a4c56e0591554ab39063fa54341"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "f09c36a6518b639f358a1b5dc7c36ea0b19c7c26", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd17968072d1cc7d6b3b4a8a5616faa8c984c26/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd17968072d1cc7d6b3b4a8a5616faa8c984c26/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0fd17968072d1cc7d6b3b4a8a5616faa8c984c26", "patch": "@@ -3801,10 +3801,14 @@ build_index_type (maxval)\n      tree maxval;\n {\n   register tree itype = make_node (INTEGER_TYPE);\n+\n   TYPE_PRECISION (itype) = TYPE_PRECISION (sizetype);\n-  TYPE_MIN_VALUE (itype) = build_int_2 (0, 0);\n-  TREE_TYPE (TYPE_MIN_VALUE (itype)) = sizetype;\n+  TYPE_MIN_VALUE (itype) = size_zero_node;\n+\n+  push_obstacks (TYPE_OBSTACK (itype), TYPE_OBSTACK (itype));\n   TYPE_MAX_VALUE (itype) = convert (sizetype, maxval);\n+  pop_obstacks ();\n+\n   TYPE_MODE (itype) = TYPE_MODE (sizetype);\n   TYPE_SIZE (itype) = TYPE_SIZE (sizetype);\n   TYPE_ALIGN (itype) = TYPE_ALIGN (sizetype);\n@@ -3834,12 +3838,17 @@ build_range_type (type, lowval, highval)\n      tree type, lowval, highval;\n {\n   register tree itype = make_node (INTEGER_TYPE);\n+\n   TREE_TYPE (itype) = type;\n   if (type == NULL_TREE)\n     type = sizetype;\n-  TYPE_PRECISION (itype) = TYPE_PRECISION (type);\n+\n+  push_obstacks (TYPE_OBSTACK (itype), TYPE_OBSTACK (itype));\n   TYPE_MIN_VALUE (itype) = convert (type, lowval);\n   TYPE_MAX_VALUE (itype) = convert (type, highval);\n+  pop_obstacks ();\n+\n+  TYPE_PRECISION (itype) = TYPE_PRECISION (type);\n   TYPE_MODE (itype) = TYPE_MODE (type);\n   TYPE_SIZE (itype) = TYPE_SIZE (type);\n   TYPE_ALIGN (itype) = TYPE_ALIGN (type);"}]}