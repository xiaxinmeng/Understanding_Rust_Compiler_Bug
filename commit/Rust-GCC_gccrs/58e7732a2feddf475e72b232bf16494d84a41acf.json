{"sha": "58e7732a2feddf475e72b232bf16494d84a41acf", "node_id": "C_kwDOANBUbNoAKDU4ZTc3MzJhMmZlZGRmNDc1ZTcyYjIzMmJmMTY0OTRkODRhNDFhY2Y", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2022-11-09T20:30:25Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-11-13T20:19:18Z"}, "message": "Fortran: diagnostics for actual arguments to pointer dummy arguments [PR94104]\n\nError message improvement.  In Fortran 2008 actual procedure arguments\nassociated with a pointer, intent(in) attribute, dummy argument\ncan also have the target attribute, not just pointer.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/94104\n\t* interface.cc (gfc_compare_actual_formal): Improve error message\n\tdependent on Fortran standard level.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/94104\n\t* gfortran.dg/parens_2.f90: Adjust to improved error message.\n\t* gfortran.dg/PR94104a.f90: New test.\n\t* gfortran.dg/PR94104b.f90: New test.", "tree": {"sha": "d006a24299c75d0b49ee8e1f822046e7dfca0580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d006a24299c75d0b49ee8e1f822046e7dfca0580"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58e7732a2feddf475e72b232bf16494d84a41acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58e7732a2feddf475e72b232bf16494d84a41acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58e7732a2feddf475e72b232bf16494d84a41acf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58e7732a2feddf475e72b232bf16494d84a41acf/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e42b672f5297594fff4b82064c5386fbb0ae1ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42b672f5297594fff4b82064c5386fbb0ae1ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42b672f5297594fff4b82064c5386fbb0ae1ff3"}], "stats": {"total": 108, "additions": 90, "deletions": 18}, "files": [{"sha": "49dbd1d886c540356b43dd0ac04b05ca0540f3a0", "filename": "gcc/fortran/interface.cc", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ffortran%2Finterface.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ffortran%2Finterface.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.cc?ref=58e7732a2feddf475e72b232bf16494d84a41acf", "patch": "@@ -3477,25 +3477,39 @@ gfc_compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t  goto match;\n \t}\n \n-      if (a->expr->expr_type != EXPR_NULL\n-\t  && compare_pointer (f->sym, a->expr) == 0)\n+      if (a->expr->expr_type != EXPR_NULL)\n \t{\n-\t  if (where)\n-\t    gfc_error (\"Actual argument for %qs must be a pointer at %L\",\n-\t\t       f->sym->name, &a->expr->where);\n-\t  ok = false;\n-\t  goto match;\n-\t}\n+\t  int cmp = compare_pointer (f->sym, a->expr);\n+\t  bool pre2008 = ((gfc_option.allow_std & GFC_STD_F2008) == 0);\n \n-      if (a->expr->expr_type != EXPR_NULL\n-\t  && (gfc_option.allow_std & GFC_STD_F2008) == 0\n-\t  && compare_pointer (f->sym, a->expr) == 2)\n-\t{\n-\t  if (where)\n-\t    gfc_error (\"Fortran 2008: Non-pointer actual argument at %L to \"\n-\t\t       \"pointer dummy %qs\", &a->expr->where,f->sym->name);\n-\t  ok = false;\n-\t  goto match;\n+\t  if (pre2008 && cmp == 0)\n+\t    {\n+\t      if (where)\n+\t\tgfc_error (\"Actual argument for %qs at %L must be a pointer\",\n+\t\t\t   f->sym->name, &a->expr->where);\n+\t      ok = false;\n+\t      goto match;\n+\t    }\n+\n+\t  if (pre2008 && cmp == 2)\n+\t    {\n+\t      if (where)\n+\t\tgfc_error (\"Fortran 2008: Non-pointer actual argument at %L to \"\n+\t\t\t   \"pointer dummy %qs\", &a->expr->where, f->sym->name);\n+\t      ok = false;\n+\t      goto match;\n+\t    }\n+\n+\t  if (!pre2008 && cmp == 0)\n+\t    {\n+\t      if (where)\n+\t\tgfc_error (\"Actual argument for %qs at %L must be a pointer \"\n+\t\t\t   \"or a valid target for the dummy pointer in a \"\n+\t\t\t   \"pointer assignment statement\",\n+\t\t\t   f->sym->name, &a->expr->where);\n+\t      ok = false;\n+\t      goto match;\n+\t    }\n \t}\n \n "}, {"sha": "a1e578ac9ba6fa1ebb0c6ee79eda50e299e65899", "filename": "gcc/testsuite/gfortran.dg/PR94104a.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94104a.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94104a.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94104a.f90?ref=58e7732a2feddf475e72b232bf16494d84a41acf", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! PR fortran/94104\n+!\n+\n+program diag_p\n+  implicit none\n+\n+  integer, parameter :: n = 7\n+\n+  integer         :: a(n)\n+  integer, target :: b(n)\n+\n+  a = 1\n+  print *, sumf(a) ! { dg-error \"Actual argument for 'a' at .1. must be a pointer\" }\n+  print *, sumf(b) ! { dg-error \"Fortran 2008: Non-pointer actual argument at .1. to pointer dummy 'a'\" }\n+\n+contains\n+\n+  function sumf(a) result(s)\n+    integer, pointer, intent(in) :: a(:)\n+\n+    integer :: s\n+\n+    s = sum(a)\n+  end function sumf\n+\n+end program diag_p"}, {"sha": "ee7d640b926e135321fe0f097c798287090416c6", "filename": "gcc/testsuite/gfortran.dg/PR94104b.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94104b.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94104b.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR94104b.f90?ref=58e7732a2feddf475e72b232bf16494d84a41acf", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2008\" }\n+!\n+! PR fortran/94104\n+!\n+\n+program diag_p\n+  implicit none\n+\n+  integer, parameter :: n = 7\n+\n+  integer         :: a(n)\n+  integer, target :: b(n)\n+\n+  a = 1\n+  print *, sumf(a) ! { dg-error \"Actual argument for 'a' at .1. must be a pointer or a valid target\" }\n+  print *, sumf(b)\n+\n+contains\n+\n+  function sumf(a) result(s)\n+    integer, pointer, intent(in) :: a(:)\n+\n+    integer :: s\n+\n+    s = sum(a)\n+  end function sumf\n+\n+end program diag_p"}, {"sha": "dc5965de0147f05eac9d55fc8b3737842394b5aa", "filename": "gcc/testsuite/gfortran.dg/parens_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58e7732a2feddf475e72b232bf16494d84a41acf/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_2.f90?ref=58e7732a2feddf475e72b232bf16494d84a41acf", "patch": "@@ -2,7 +2,7 @@\n ! { dg-do compile }\n ! Originally contributed by Joost VandeVondele\n INTEGER, POINTER :: I\n-CALL S1((I)) ! { dg-error \"Actual argument for .i. must be a pointer\" }\n+CALL S1((I)) ! { dg-error \"Actual argument for .i. at .1. must be a pointer or a valid target\" }\n CONTAINS\n  SUBROUTINE S1(I)\n   INTEGER, POINTER ::I"}]}