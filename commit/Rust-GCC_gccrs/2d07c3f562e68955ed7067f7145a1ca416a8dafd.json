{"sha": "2d07c3f562e68955ed7067f7145a1ca416a8dafd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQwN2MzZjU2MmU2ODk1NWVkNzA2N2Y3MTQ1YTFjYTQxNmE4ZGFmZA==", "commit": {"author": {"name": "Brad Spencer", "email": "spencer@infointeractive.com", "date": "2003-09-26T20:20:55Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-09-26T20:20:55Z"}, "message": "10132-1.cc: Explicitly qualify exceptions.\n\n\n2003-09-26  Brad Spencer  <spencer@infointeractive.com>\n\n\t* testsuite/27_io/basic_filebuf/cons/wchar_t/10132-1.cc:\n\tExplicitly qualify exceptions.\n\t* testsuite/27_io/basic_istream/sentry/char/3983-fstream.cc: Same.\n\t* testsuite/27_io/basic_istream/sentry/char/3983-sstream.cc: Same.\n\t* testsuite/27_io/basic_ostream/sentry/char/3983-fstream.cc: Same.\n\t* testsuite/27_io/basic_ostream/sentry/char/3983-sstream.cc: Same.\n\nFrom-SVN: r71832", "tree": {"sha": "47547608acf13c225bff810648f49b278589a0da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47547608acf13c225bff810648f49b278589a0da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d07c3f562e68955ed7067f7145a1ca416a8dafd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d07c3f562e68955ed7067f7145a1ca416a8dafd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d07c3f562e68955ed7067f7145a1ca416a8dafd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d07c3f562e68955ed7067f7145a1ca416a8dafd/comments", "author": null, "committer": null, "parents": [{"sha": "6634a0e914af681099d147755f90ed4011a35809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6634a0e914af681099d147755f90ed4011a35809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6634a0e914af681099d147755f90ed4011a35809"}], "stats": {"total": 87, "additions": 43, "deletions": 44}, "files": [{"sha": "38a115dd00d554ad31163cc09e8ae14023cbb6ff", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2d07c3f562e68955ed7067f7145a1ca416a8dafd", "patch": "@@ -1,3 +1,12 @@\n+2003-09-26  Brad Spencer  <spencer@infointeractive.com>\n+\n+\t* testsuite/27_io/basic_filebuf/cons/wchar_t/10132-1.cc:\n+\tExplicitly qualify exceptions.\n+\t* testsuite/27_io/basic_istream/sentry/char/3983-fstream.cc: Same.\n+\t* testsuite/27_io/basic_istream/sentry/char/3983-sstream.cc: Same.\n+\t* testsuite/27_io/basic_ostream/sentry/char/3983-fstream.cc: Same.\n+\t* testsuite/27_io/basic_ostream/sentry/char/3983-sstream.cc: Same.\n+\t\n 2003-09-25  Paolo Carlini  <pcarlini@unitus.it>\n \n \tPR libstdc++/12352"}, {"sha": "503073ea9005038b76d7e1691f29ef2f8f75bb9f", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/cons/wchar_t/10132-1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fcons%2Fwchar_t%2F10132-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fcons%2Fwchar_t%2F10132-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fcons%2Fwchar_t%2F10132-1.cc?ref=2d07c3f562e68955ed7067f7145a1ca416a8dafd", "patch": "@@ -33,20 +33,19 @@ class Cvt : public std::codecvt<wchar_t, char, std::mbstate_t>\n \n int main()\n {\n-  using namespace std;\n   bool test __attribute__((unused)) = true;\n \n-  locale loc = locale(locale::classic(), new Cvt);\n-  wfilebuf* fb = new wfilebuf;\n+  std::locale loc = std::locale(std::locale::classic(), new Cvt);\n+  std::wfilebuf* fb = new std::wfilebuf;\n   fb->pubimbue(loc);\n-  fb->open(\"tmp_10132\", ios_base::out);\n+  fb->open(\"tmp_10132\", std::ios_base::out);\n   fb->sputc(L'a');\n   \n   try\n     {\n       delete fb;\n     }\n-  catch(exception& obj)\n+  catch(std::exception& obj)\n     {\n       VERIFY( false ); \n     }"}, {"sha": "d285bc11367105e4297cecd7141895354faa9e6f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/char/3983-fstream.cc", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F3983-fstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F3983-fstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F3983-fstream.cc?ref=2d07c3f562e68955ed7067f7145a1ca416a8dafd", "patch": "@@ -124,49 +124,47 @@ namespace std\n // Sentry uses locale info, so have to try one formatted input/output.\n void test03()\n {\n-  using namespace std;\n   bool test __attribute__((unused)) = true;\n \n   // input streams\n-  basic_ifstream<unsigned char> ifs_uc;\n+  std::basic_ifstream<unsigned char> ifs_uc;\n   unsigned char arr[6] = { 'a', 'b', 'c', 'd', 'e' };\n-\n   try \n     { \n       int i;\n       ifs_uc >> i;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n   \n   try \n     { \n       ifs_uc >> arr;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n   \n   try \n     { \n-      ifs_uc >> ws;\n+      ifs_uc >> std::ws;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n  \n   try \n     { \n-      basic_string<unsigned char> s_uc(arr);\n+      std::basic_string<unsigned char> s_uc(arr);\n       ifs_uc >> s_uc;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n    \n   VERIFY( test );"}, {"sha": "0ae9c80777051bb057e373b598b2422d0fb29ab5", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/char/3983-sstream.cc", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F3983-sstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F3983-sstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F3983-sstream.cc?ref=2d07c3f562e68955ed7067f7145a1ca416a8dafd", "patch": "@@ -124,49 +124,48 @@ namespace std\n // Sentry uses locale info, so have to try one formatted input/output.\n void test03()\n {\n-  using namespace std;\n   bool test __attribute__((unused)) = true;\n \n   // input streams\n-  basic_istringstream<unsigned char> iss_uc;\n+  std::basic_istringstream<unsigned char> iss_uc;\n   unsigned char arr[6] = { 'a', 'b', 'c', 'd', 'e' };\n \n   try \n     { \n       int i;\n       iss_uc >> i;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n   \n   try \n     { \n       iss_uc >> arr;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n   \n   try \n     { \n-      iss_uc >> ws;\n+      iss_uc >> std::ws;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n  \n   try \n     { \n-      basic_string<unsigned char> s_uc(arr);\n+      std::basic_string<unsigned char> s_uc(arr);\n       iss_uc >> s_uc;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n+  catch (std::exception& obj)\n     { test = false; }\n    \n   VERIFY( test );"}, {"sha": "c37c0048449f80ae8faacefbb696806f2b4defb7", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/sentry/char/3983-fstream.cc", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fchar%2F3983-fstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fchar%2F3983-fstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fchar%2F3983-fstream.cc?ref=2d07c3f562e68955ed7067f7145a1ca416a8dafd", "patch": "@@ -124,22 +124,19 @@ namespace std\n // Sentry uses locale info, so have to try one formatted input/output.\n void test03()\n {\n-  using namespace std;\n   bool test __attribute__((unused)) = true;\n \n   // output streams\n-  basic_ofstream<unsigned char> ofs_uc;\n-\n+  std::basic_ofstream<unsigned char> ofs_uc;\n   try \n     { \n       bool b = true;\n       ofs_uc << b;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n-    { test = false; }\n-   \n+  catch (std::exception& obj)\n+    { test = false; }   \n   VERIFY( test );\n }\n "}, {"sha": "5ace23211d16772ef6b6c87063a82cd90790939b", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/sentry/char/3983-sstream.cc", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fchar%2F3983-sstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d07c3f562e68955ed7067f7145a1ca416a8dafd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fchar%2F3983-sstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fchar%2F3983-sstream.cc?ref=2d07c3f562e68955ed7067f7145a1ca416a8dafd", "patch": "@@ -124,22 +124,19 @@ namespace std\n // Sentry uses locale info, so have to try one formatted input/output.\n void test03()\n {\n-  using namespace std;\n   bool test __attribute__((unused)) = true;\n \n   // output streams\n-  basic_ostringstream<unsigned char> oss_uc;\n-\n+  std::basic_ostringstream<unsigned char> oss_uc;\n   try \n     { \n       bool b = true;\n       oss_uc << b;\n     }\n-  catch (bad_cast& obj)\n+  catch (std::bad_cast& obj)\n     { }\n-  catch (exception& obj)\n-    { test = false; }\n-   \n+  catch (std::exception& obj)\n+    { test = false; }   \n   VERIFY( test );\n }\n "}]}