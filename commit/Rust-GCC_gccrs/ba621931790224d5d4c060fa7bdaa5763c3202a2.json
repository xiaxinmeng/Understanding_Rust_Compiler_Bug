{"sha": "ba621931790224d5d4c060fa7bdaa5763c3202a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2MjE5MzE3OTAyMjRkNWQ0YzA2MGZhN2JkYWE1NzYzYzMyMDJhMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-03-29T13:42:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-15T08:04:17Z"}, "message": "[Ada] Use uniform type resolution for membership tests\n\n2020-06-15  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Set_Membership): Remove local variable.\n\tIn the non-overloaded case, call Intersect_Types on the left\n\toperand and the first alternative to get the resolution type.\n\tBut test the subtype of the left operand to give the warning.", "tree": {"sha": "2cc411074f03acc7c8751bda5dc8166ef0415a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cc411074f03acc7c8751bda5dc8166ef0415a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba621931790224d5d4c060fa7bdaa5763c3202a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba621931790224d5d4c060fa7bdaa5763c3202a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba621931790224d5d4c060fa7bdaa5763c3202a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba621931790224d5d4c060fa7bdaa5763c3202a2/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82a3008e56c620008b4575a97e459e2769df54db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a3008e56c620008b4575a97e459e2769df54db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a3008e56c620008b4575a97e459e2769df54db"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "89d78518bd38dea00f30a49292bb89a7f306bf49", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba621931790224d5d4c060fa7bdaa5763c3202a2/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba621931790224d5d4c060fa7bdaa5763c3202a2/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ba621931790224d5d4c060fa7bdaa5763c3202a2", "patch": "@@ -9250,27 +9250,26 @@ package body Sem_Res is\n       T : Entity_Id;\n \n       procedure Resolve_Set_Membership;\n-      --  Analysis has determined a unique type for the left operand. Use it to\n-      --  resolve the disjuncts.\n+      --  Analysis has determined a unique type for the left operand. Use it as\n+      --  the basis to resolve the disjuncts.\n \n       ----------------------------\n       -- Resolve_Set_Membership --\n       ----------------------------\n \n       procedure Resolve_Set_Membership is\n          Alt  : Node_Id;\n-         Ltyp : Entity_Id;\n \n       begin\n          --  If the left operand is overloaded, find type compatible with not\n          --  overloaded alternative of the right operand.\n \n+         Alt := First (Alternatives (N));\n          if Is_Overloaded (L) then\n-            Ltyp := Empty;\n-            Alt := First (Alternatives (N));\n+            T := Empty;\n             while Present (Alt) loop\n                if not Is_Overloaded (Alt) then\n-                  Ltyp := Intersect_Types (L, Alt);\n+                  T := Intersect_Types (L, Alt);\n                   exit;\n                else\n                   Next (Alt);\n@@ -9280,15 +9279,15 @@ package body Sem_Res is\n             --  Unclear how to resolve expression if all alternatives are also\n             --  overloaded.\n \n-            if No (Ltyp) then\n+            if No (T) then\n                Error_Msg_N (\"ambiguous expression\", N);\n             end if;\n \n          else\n-            Ltyp := Etype (L);\n+            T := Intersect_Types (L, Alt);\n          end if;\n \n-         Resolve (L, Ltyp);\n+         Resolve (L, T);\n \n          Alt := First (Alternatives (N));\n          while Present (Alt) loop\n@@ -9299,15 +9298,15 @@ package body Sem_Res is\n             if not Is_Entity_Name (Alt)\n               or else not Is_Type (Entity (Alt))\n             then\n-               Resolve (Alt, Ltyp);\n+               Resolve (Alt, T);\n             end if;\n \n             Next (Alt);\n          end loop;\n \n          --  Check for duplicates for discrete case\n \n-         if Is_Discrete_Type (Ltyp) then\n+         if Is_Discrete_Type (T) then\n             declare\n                type Ent is record\n                   Alt : Node_Id;\n@@ -9350,11 +9349,11 @@ package body Sem_Res is\n          --  equality for the type. This may be confusing to users, and the\n          --  following warning appears useful for the most common case.\n \n-         if Is_Scalar_Type (Ltyp)\n-           and then Present (Get_User_Defined_Eq (Ltyp))\n+         if Is_Scalar_Type (Etype (L))\n+           and then Present (Get_User_Defined_Eq (Etype (L)))\n          then\n             Error_Msg_NE\n-              (\"membership test on& uses predefined equality?\", N, Ltyp);\n+              (\"membership test on& uses predefined equality?\", N, Etype (L));\n             Error_Msg_N\n               (\"\\even if user-defined equality exists (RM 4.5.2 (28.1/3)?\", N);\n          end if;"}]}