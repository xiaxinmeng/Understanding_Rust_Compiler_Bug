{"sha": "855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1Y2U0Y2RhMWEzNzRlYjFjZTRhMjRmY2RlNjVkNGMzZDExMWJjZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-17T08:35:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-17T08:35:12Z"}, "message": "guality: Workaround for guality/pr59776.c testcase\n\nThe test has been added 3 years before noipa attribute has been introduced,\nbut already at that point I wanted to avoid IPA opts getting into way,\nmost of the foo function is optimized away and the debug info just points\nto the caller\\s var.  With the recent modref/aliasing changes the caller's\nstore to the variable whose address it is passing to the function is\noptimized away too.\n\nI think we should just use noipa to avoid this, though perhaps longer term\nwe should think about some debug info improvements how to deal with that.\n\nThe caller had before dse1:\n  # DEBUG BEGIN_STMT\n  x.f = 5.0e+0;\n  x.g = 6.0e+0;\n  # DEBUG BEGIN_STMT\n  foo (&x);\n  # DEBUG BEGIN_STMT\n  x ={v} {CLOBBER};\nand the x.f and x.g stores are optimized away.  If we had a way to pretend\nthe memory contains those values anyway...\n\nTested on x86_64-linux, fixes the guality regressions\n+FAIL: gcc.dg/guality/pr59776.c   -O1  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O1  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O1  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O1  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O1  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s2.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s2.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fno-use-linker-plugin -flto-partition=none  -DPREVENT_OPTIMIZATION line pr59776.c:17 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fno-use-linker-plugin -flto-partition=none  -DPREVENT_OPTIMIZATION line pr59776.c:17 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fno-use-linker-plugin -flto-partition=none  -DPREVENT_OPTIMIZATION line pr59776.c:20 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fno-use-linker-plugin -flto-partition=none  -DPREVENT_OPTIMIZATION line pr59776.c:20 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fno-use-linker-plugin -flto-partition=none  -DPREVENT_OPTIMIZATION line pr59776.c:20 s2.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  -DPREVENT_OPTIMIZATION line pr59776.c:17 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  -DPREVENT_OPTIMIZATION line pr59776.c:17 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  -DPREVENT_OPTIMIZATION line pr59776.c:20 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  -DPREVENT_OPTIMIZATION line pr59776.c:20 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  -DPREVENT_OPTIMIZATION line pr59776.c:20 s2.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O3 -g  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O3 -g  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O3 -g  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -O3 -g  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -O3 -g  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s2.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -Os  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -Os  -DPREVENT_OPTIMIZATION  line pr59776.c:17 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -Os  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.f == 5.0\n+FAIL: gcc.dg/guality/pr59776.c   -Os  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s1.g == 6.0\n+FAIL: gcc.dg/guality/pr59776.c   -Os  -DPREVENT_OPTIMIZATION  line pr59776.c:20 s2.f == 5.0\nintroduced in the last 2 days.\n\n2020-11-17  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gcc.dg/guality/pr59776.c (foo): Use noipa attribute instead of\n\tnoinline, noclone.", "tree": {"sha": "82abe40de135936fbb8f3c84e79d133626459049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82abe40de135936fbb8f3c84e79d133626459049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ac0401eb128bf3dadec943741dfde7c499e49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ac0401eb128bf3dadec943741dfde7c499e49a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ac0401eb128bf3dadec943741dfde7c499e49a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7c95a9f94167ad79c3c9755314bd672804a90dbc", "filename": "gcc/testsuite/gcc.dg/guality/pr59776.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c?ref=855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "patch": "@@ -6,7 +6,7 @@\n \n struct S { float f, g; };\n \n-__attribute__((noinline, noclone)) void\n+__attribute__((noipa)) void\n foo (struct S *p)\n {\n   struct S s1, s2;\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.f\" \"5.0\" } } */"}]}