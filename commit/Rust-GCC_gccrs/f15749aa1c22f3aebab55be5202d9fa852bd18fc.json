{"sha": "f15749aa1c22f3aebab55be5202d9fa852bd18fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE1NzQ5YWExYzIyZjNhZWJhYjU1YmU1MjAyZDlmYTg1MmJkMThmYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T12:40:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T12:40:36Z"}, "message": "[multiple changes]\n\n2014-07-31  Pascal Obry  <obry@adacore.com>\n\n\t* s-fileio.adb: Remove obsolete comment.\n\n2014-07-31  Vincent Celier  <celier@adacore.com>\n\n\t* a-strbou.ads (\"=\" (Bounded_String, Bounded_String): Add\n\toverriding keyword before function to avoid error when compiler\n\tis called with -gnatyO (check overriding indicators).\n\n2014-07-31  Tucker Taft  <taft@adacore.com>\n\n\t* gnat_ugn.texi: Add a paragraph pointing the reader\n\tto the \"plugins\" example.\n\n2014-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* freeze.adb (Freeze_Expression): Document the\n\tpurpose of the parent chain traversal.\n\nFrom-SVN: r213350", "tree": {"sha": "5f53d21a9f0135558eb9910f78708ea4a9cd57d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f53d21a9f0135558eb9910f78708ea4a9cd57d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f15749aa1c22f3aebab55be5202d9fa852bd18fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f15749aa1c22f3aebab55be5202d9fa852bd18fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f15749aa1c22f3aebab55be5202d9fa852bd18fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f15749aa1c22f3aebab55be5202d9fa852bd18fc/comments", "author": null, "committer": null, "parents": [{"sha": "396eb900bbb7deb1243ea6de03fe881234314acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/396eb900bbb7deb1243ea6de03fe881234314acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/396eb900bbb7deb1243ea6de03fe881234314acb"}], "stats": {"total": 61, "additions": 41, "deletions": 20}, "files": [{"sha": "0a587652834a8bf592645dff4b7d45f502b99709", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f15749aa1c22f3aebab55be5202d9fa852bd18fc", "patch": "@@ -1,3 +1,23 @@\n+2014-07-31  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-fileio.adb: Remove obsolete comment.\n+\n+2014-07-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* a-strbou.ads (\"=\" (Bounded_String, Bounded_String): Add\n+\toverriding keyword before function to avoid error when compiler\n+\tis called with -gnatyO (check overriding indicators).\n+\n+2014-07-31  Tucker Taft  <taft@adacore.com>\n+\n+\t* gnat_ugn.texi: Add a paragraph pointing the reader\n+\tto the \"plugins\" example.\n+\n+2014-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* freeze.adb (Freeze_Expression): Document the\n+\tpurpose of the parent chain traversal.\n+\n 2014-07-31  Robert Dewar  <dewar@adacore.com>\n \n \t* checks.ads, checks.adb (Activate_Overflow_Check): Do not set flag for"}, {"sha": "7703b72810711864e576973ef7076df3ec09a5d8", "filename": "gcc/ada/a-strbou.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Fa-strbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Fa-strbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strbou.ads?ref=f15749aa1c22f3aebab55be5202d9fa852bd18fc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -607,7 +607,7 @@ package Ada.Strings.Bounded is\n          High   : Natural)\n          renames Super_Slice;\n \n-      function \"=\"\n+      overriding function \"=\"\n         (Left  : Bounded_String;\n          Right : Bounded_String) return Boolean\n          renames Equal;"}, {"sha": "8cfe8d8d0ca87ee37cc1c12242e9fb360870e1f0", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f15749aa1c22f3aebab55be5202d9fa852bd18fc", "patch": "@@ -5973,12 +5973,12 @@ package body Freeze is\n          return;\n       end if;\n \n-      --  Loop for looking at the right place to insert the freeze nodes,\n-      --  exiting from the loop when it is appropriate to insert the freeze\n-      --  node before the current node P.\n-\n-      --  Also checks some special exceptions to the freezing rules. These\n-      --  cases result in a direct return, bypassing the freeze action.\n+      --  Examine the enclosing context by climbing the parent chain. The\n+      --  traversal serves two purposes - to detect scenarios where freezeing\n+      --  is not needed and to find the proper insertion point for the freeze\n+      --  nodes. Although somewhat similar to Insert_Actions, this traversal\n+      --  is freezing semantics-sensitive. Inserting freeze nodes blindly in\n+      --  the tree may result in types being frozen too early.\n \n       P := N;\n       loop"}, {"sha": "8147f4a4141030828362373b756178363d28a296", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=f15749aa1c22f3aebab55be5202d9fa852bd18fc", "patch": "@@ -18053,6 +18053,11 @@ pragma Linker_Options (\"-lmy_lib\");\n @end smallexample\n @end itemize\n \n+Note that you may also load a library dynamically at\n+run time given its filename, as illustrated in the GNAT ``plugins'' example\n+in the directory @file{share/examples/gnat/plugins} within the GNAT\n+install area.\n+\n @node Stand-alone Ada Libraries\n @section Stand-alone Ada Libraries\n @cindex Stand-alone library, building, using"}, {"sha": "073dbdbbc609904f68d8488e0223488a09bcb854", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15749aa1c22f3aebab55be5202d9fa852bd18fc/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=f15749aa1c22f3aebab55be5202d9fa852bd18fc", "patch": "@@ -34,9 +34,9 @@ with Ada.IO_Exceptions;          use Ada.IO_Exceptions;\n with Ada.Unchecked_Deallocation;\n \n with Interfaces.C;\n-with Interfaces.C_Streams; use Interfaces.C_Streams;\n+with Interfaces.C_Streams;       use Interfaces.C_Streams;\n \n-with System.Case_Util;    use System.Case_Util;\n+with System.Case_Util;           use System.Case_Util;\n with System.CRTL;\n with System.OS_Lib;\n with System.Soft_Links;\n@@ -120,12 +120,12 @@ package body System.File_IO is\n       Creat   : Boolean;\n       Amethod : Character;\n       Fopstr  : out Fopen_String);\n-   --  Determines proper open mode for a file to be opened in the given\n-   --  Ada mode. Text is true for a text file and false otherwise, and\n-   --  Creat is true for a create call, and False for an open call. The\n-   --  value stored in Fopstr is a nul-terminated string suitable for a\n-   --  call to fopen or freopen. Amethod is the character designating\n-   --  the access method from the Access_Method field of the FCB.\n+   --  Determines proper open mode for a file to be opened in the given Ada\n+   --  mode. Text is true for a text file and false otherwise, and Creat is\n+   --  true for a create call, and False for an open call. The value stored\n+   --  in Fopstr is a nul-terminated string suitable for a call to fopen or\n+   --  freopen. Amethod is the character designating the access method from\n+   --  the Access_Method field of the FCB.\n \n    function Errno_Message\n      (Name  : String;\n@@ -387,10 +387,6 @@ package body System.File_IO is\n    -- Finalize --\n    --------------\n \n-   --  Note: we do not need to worry about locking against multiple task access\n-   --  in this routine, since it is called only from the environment task just\n-   --  before terminating execution.\n-\n    procedure Finalize (V : in out File_IO_Clean_Up_Type) is\n       pragma Warnings (Off, V);\n "}]}