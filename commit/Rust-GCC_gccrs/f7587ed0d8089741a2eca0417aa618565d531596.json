{"sha": "f7587ed0d8089741a2eca0417aa618565d531596", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc1ODdlZDBkODA4OTc0MWEyZWNhMDQxN2FhNjE4NTY1ZDUzMTU5Ng==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-07-16T01:30:32Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-07-16T01:30:32Z"}, "message": "c-decl.c (detect_field_duplicates): Use DECL_CHAIN insted of TREE_CHAIN.\n\n\t* c-decl.c (detect_field_duplicates): Use DECL_CHAIN insted of\n\tTREE_CHAIN.\n\t* c-typeck.c (push_init_level): Likewise.\n\t(process_init_element): Likewise.\n\nFrom-SVN: r162239", "tree": {"sha": "96d8eab9a1fe58e2a8566cd1e448d06ce4179970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96d8eab9a1fe58e2a8566cd1e448d06ce4179970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7587ed0d8089741a2eca0417aa618565d531596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7587ed0d8089741a2eca0417aa618565d531596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7587ed0d8089741a2eca0417aa618565d531596", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7587ed0d8089741a2eca0417aa618565d531596/comments", "author": null, "committer": null, "parents": [{"sha": "f0cd14a7ed21212042331c6448abb906d5955ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0cd14a7ed21212042331c6448abb906d5955ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0cd14a7ed21212042331c6448abb906d5955ebe"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "268e2f379175e95911dbfec56e0e7bb2b72f2f8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7587ed0d8089741a2eca0417aa618565d531596/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7587ed0d8089741a2eca0417aa618565d531596/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7587ed0d8089741a2eca0417aa618565d531596", "patch": "@@ -1,3 +1,10 @@\n+2010-07-15  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* c-decl.c (detect_field_duplicates): Use DECL_CHAIN insted of\n+\tTREE_CHAIN.\n+\t* c-typeck.c (push_init_level): Likewise.\n+\t(process_init_element): Likewise.\n+\n 2010-07-15  Anatoly Sokolov  <aesok@post.ru>\n \n \t* tree.h (enum tree_index): Add TI_INTEGER_THREE."}, {"sha": "010421c0b89a251ad981c5baeea42aaac0d7da6c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7587ed0d8089741a2eca0417aa618565d531596/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7587ed0d8089741a2eca0417aa618565d531596/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=f7587ed0d8089741a2eca0417aa618565d531596", "patch": "@@ -6705,8 +6705,7 @@ detect_field_duplicates (tree fieldlist)\n      the nested traversal thing.  */\n   if (timeout > 0)\n     {\n-      for (x = TREE_CHAIN (fieldlist); x ;\n-\t   x = TREE_CHAIN (x))\n+      for (x = DECL_CHAIN (fieldlist); x; x = DECL_CHAIN (x))\n \tif (DECL_NAME (x))\n \t  {\n \t    for (y = fieldlist; y != x; y = TREE_CHAIN (y))"}, {"sha": "164cda8d54ec6fe88c9a7742775cffbaacc7c196", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7587ed0d8089741a2eca0417aa618565d531596/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7587ed0d8089741a2eca0417aa618565d531596/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f7587ed0d8089741a2eca0417aa618565d531596", "patch": "@@ -6683,7 +6683,7 @@ push_init_level (int implicit, struct obstack * braced_init_obstack)\n       /* Skip any nameless bit fields at the beginning.  */\n       while (constructor_fields != 0 && DECL_C_BIT_FIELD (constructor_fields)\n \t     && DECL_NAME (constructor_fields) == 0)\n-\tconstructor_fields = TREE_CHAIN (constructor_fields);\n+\tconstructor_fields = DECL_CHAIN (constructor_fields);\n \n       constructor_unfilled_fields = constructor_fields;\n       constructor_bit_index = bitsize_zero_node;\n@@ -8014,7 +8014,7 @@ process_init_element (struct c_expr value, bool implicit,\n \t  if (fieldcode == ARRAY_TYPE\n \t      && !require_constant_value\n \t      && TYPE_SIZE (fieldtype) == NULL_TREE\n-\t      && TREE_CHAIN (constructor_fields) == NULL_TREE)\n+\t      && DECL_CHAIN (constructor_fields) == NULL_TREE)\n \t    {\n \t      error_init (\"non-static initialization of a flexible array member\");\n \t      break;\n@@ -8144,7 +8144,7 @@ process_init_element (struct c_expr value, bool implicit,\n \t       directly output as a constructor.  */\n \t    {\n \t      constructor_bit_index = DECL_SIZE (constructor_fields);\n-\t      constructor_unfilled_fields = TREE_CHAIN (constructor_fields);\n+\t      constructor_unfilled_fields = DECL_CHAIN (constructor_fields);\n \t    }\n \n \t  constructor_fields = 0;"}]}