{"sha": "7a46059462cd49f3304fe42437b94697a50e9bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E0NjA1OTQ2MmNkNDlmMzMwNGZlNDI0MzdiOTQ2OTdhNTBlOWJlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-08-16T08:57:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-08-16T08:57:29Z"}, "message": "re PR regression/58165 (internal compiler error: verify_flow_info)\n\n\tPR tree-optimization/58165\n\t* tree-call-cdce.c (shrink_wrap_one_built_in_call): If\n\tbi_call must be the last stmt in a bb, don't split_block, instead\n\tuse fallthru edge from it and give up if there is none.\n\tRelease conds vector when returning early.\n\n\t* g++.dg/opt/pr58165.C: New test.\n\nFrom-SVN: r201780", "tree": {"sha": "7f31af965b645ebdcb9d744c3b6c16a68d013604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f31af965b645ebdcb9d744c3b6c16a68d013604"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a46059462cd49f3304fe42437b94697a50e9bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a46059462cd49f3304fe42437b94697a50e9bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a46059462cd49f3304fe42437b94697a50e9bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a46059462cd49f3304fe42437b94697a50e9bed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a23d240db06c29b02b1ad1668a36f455cdbb7902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23d240db06c29b02b1ad1668a36f455cdbb7902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23d240db06c29b02b1ad1668a36f455cdbb7902"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "810b8a5528814696056176f4ab07c14a4768a44a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a46059462cd49f3304fe42437b94697a50e9bed", "patch": "@@ -1,3 +1,11 @@\n+2013-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/58165\n+\t* tree-call-cdce.c (shrink_wrap_one_built_in_call): If\n+\tbi_call must be the last stmt in a bb, don't split_block, instead\n+\tuse fallthru edge from it and give up if there is none.\n+\tRelease conds vector when returning early.\n+\n 2013-08-14  Xinliang David Li  <davidxl@google.com>\n \n \t* config/i386/i386.c (ix86_option_override_internal):"}, {"sha": "84679bbbb6551345194d923ab742ca67b921a4f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a46059462cd49f3304fe42437b94697a50e9bed", "patch": "@@ -1,3 +1,8 @@\n+2013-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/58165\n+\t* g++.dg/opt/pr58165.C: New test.\n+\n 2013-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51912"}, {"sha": "d758e370050d0a7d44924d25ea22849164153882", "filename": "gcc/testsuite/g++.dg/opt/pr58165.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr58165.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr58165.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr58165.C?ref=7a46059462cd49f3304fe42437b94697a50e9bed", "patch": "@@ -0,0 +1,14 @@\n+// PR tree-optimization/58165\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+extern \"C\" float sqrtf (float);\n+\n+struct A { A (); ~A (); };\n+\n+void\n+foo (double d)\n+{\n+  A a;\n+  sqrtf (d);\n+}"}, {"sha": "1396388676b3f23494aa58d9b46e2e959e9ab200", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a46059462cd49f3304fe42437b94697a50e9bed/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=7a46059462cd49f3304fe42437b94697a50e9bed", "patch": "@@ -726,15 +726,28 @@ shrink_wrap_one_built_in_call (gimple bi_call)\n      return false and do not do any transformation for\n      the call.  */\n   if (nconds == 0)\n-    return false;\n+    {\n+      conds.release ();\n+      return false;\n+    }\n \n   bi_call_bb = gimple_bb (bi_call);\n \n-  /* Now find the join target bb -- split\n-     bi_call_bb if needed.  */\n-  bi_call_bsi = gsi_for_stmt (bi_call);\n+  /* Now find the join target bb -- split bi_call_bb if needed.  */\n+  if (stmt_ends_bb_p (bi_call))\n+    {\n+      /* If the call must be the last in the bb, don't split the block,\n+\t it could e.g. have EH edges.  */\n+      join_tgt_in_edge_from_call = find_fallthru_edge (bi_call_bb->succs);\n+      if (join_tgt_in_edge_from_call == NULL)\n+\t{\n+\t  conds.release ();\n+\t  return false;\n+\t}\n+    }\n+  else\n+    join_tgt_in_edge_from_call = split_block (bi_call_bb, bi_call);\n \n-  join_tgt_in_edge_from_call = split_block (bi_call_bb, bi_call);\n   bi_call_bsi = gsi_for_stmt (bi_call);\n \n   join_tgt_bb = join_tgt_in_edge_from_call->dest;"}]}