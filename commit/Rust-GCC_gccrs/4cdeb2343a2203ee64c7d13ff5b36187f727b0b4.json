{"sha": "4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkZWIyMzQzYTIyMDNlZTY0YzdkMTNmZjViMzYxODdmNzI3YjBiNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-03-04T08:12:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-03-04T08:12:28Z"}, "message": "Core issues 2273 and 2277\n\n\t* call.c (joust): Adjust using-declaration tiebreaker to handle\n\tthe intermediate base case.\n\t* method.c (strip_inheriting_ctors): Just return the argument if\n\t!flag_new_inheriting_ctors.\n\nFrom-SVN: r245892", "tree": {"sha": "986b2a7d75494d0b9083a3b87c32c2603a782e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/986b2a7d75494d0b9083a3b87c32c2603a782e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea6c757a1c7da68e715db5086ff564f3ef0c2724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6c757a1c7da68e715db5086ff564f3ef0c2724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6c757a1c7da68e715db5086ff564f3ef0c2724"}], "stats": {"total": 63, "additions": 53, "deletions": 10}, "files": [{"sha": "b99a7746fb06b936ad266993337ca6206a2496a2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "patch": "@@ -1,3 +1,11 @@\n+2017-03-03  Jason Merrill  <jason@redhat.com>\n+\n+\tCore issues 2273 and 2277\n+\t* call.c (joust): Adjust using-declaration tiebreaker to handle\n+\tthe intermediate base case.\n+\t* method.c (strip_inheriting_ctors): Just return the argument if\n+\t!flag_new_inheriting_ctors.\n+\n 2017-03-03  Richard Biener  <rguenther@suse.de>\n \n \tPR c++/79825"}, {"sha": "5afec4f0897bff140ee31e0fc40c0895193e29f7", "filename": "gcc/cp/call.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "patch": "@@ -9735,20 +9735,26 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn,\n \t}\n     }\n \n-  /* or, if not that, F2 is from a using-declaration, F1 is not, and the\n-     conversion sequences are equivalent.\n-     (proposed in http://lists.isocpp.org/core/2016/10/1142.php) */\n+  /* F1 is a member of a class D, F2 is a member of a base class B of D, and\n+     for all arguments the corresponding parameters of F1 and F2 have the same\n+     type (CWG 2273/2277). */\n   if (DECL_P (cand1->fn) && DECL_CLASS_SCOPE_P (cand1->fn)\n       && !DECL_CONV_FN_P (cand1->fn)\n       && DECL_P (cand2->fn) && DECL_CLASS_SCOPE_P (cand2->fn)\n       && !DECL_CONV_FN_P (cand2->fn))\n     {\n-      bool used1 = (DECL_INHERITED_CTOR (cand1->fn)\n-\t\t    || (BINFO_TYPE (cand1->access_path)\n-\t\t\t!= DECL_CONTEXT (cand1->fn)));\n-      bool used2 = (DECL_INHERITED_CTOR (cand2->fn)\n-\t\t    || (BINFO_TYPE (cand2->access_path)\n-\t\t\t!= DECL_CONTEXT (cand2->fn)));\n+      tree base1 = DECL_CONTEXT (strip_inheriting_ctors (cand1->fn));\n+      tree base2 = DECL_CONTEXT (strip_inheriting_ctors (cand2->fn));\n+\n+      bool used1 = false;\n+      bool used2 = false;\n+      if (base1 == base2)\n+\t/* No difference.  */;\n+      else if (DERIVED_FROM_P (base1, base2))\n+\tused1 = true;\n+      else if (DERIVED_FROM_P (base2, base1))\n+\tused2 = true;\n+\n       if (int diff = used2 - used1)\n \t{\n \t  for (i = 0; i < len; ++i)"}, {"sha": "f6024cda28a97ffb385664372e6a638debf3ad87", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "patch": "@@ -498,7 +498,8 @@ forward_parm (tree parm)\n tree\n strip_inheriting_ctors (tree dfn)\n {\n-  gcc_assert (flag_new_inheriting_ctors);\n+  if (!flag_new_inheriting_ctors)\n+    return dfn;\n   tree fn = dfn;\n   while (tree inh = DECL_INHERITED_CTOR (fn))\n     {"}, {"sha": "ad17c78a561e41f15507086d803b1e6c99c660bd", "filename": "gcc/testsuite/g++.dg/overload/using5.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdeb2343a2203ee64c7d13ff5b36187f727b0b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing5.C?ref=4cdeb2343a2203ee64c7d13ff5b36187f727b0b4", "patch": "@@ -0,0 +1,28 @@\n+// Core issues 2273, 2277\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  A(int, int = 0);\n+  static void f(int = 0);\n+};\n+\n+struct B: A\n+{\n+  using A::A;\n+  B(int);\n+\n+  using A::f;\n+  static void f();\n+};\n+\n+struct C: B {\n+  using B::B;\n+  using B::f;\n+};\n+  \n+int main()\n+{\n+  C c (42);\n+  c.f();\n+}"}]}