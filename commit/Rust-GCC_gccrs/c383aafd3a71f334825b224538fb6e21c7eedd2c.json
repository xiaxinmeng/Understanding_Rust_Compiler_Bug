{"sha": "c383aafd3a71f334825b224538fb6e21c7eedd2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4M2FhZmQzYTcxZjMzNDgyNWIyMjQ1MzhmYjZlMjFjN2VlZGQyYw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-27T06:04:16Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-27T06:04:16Z"}, "message": "[multiple changes]\n\n\n2000-11-26  Benjamin Kosnik  <bkoz@fillmore.constant.com>\n\n\t* tests_flags.in: Export CXX, CXXFLAGS.\n\t* mkcheck.in: Grab them.\n\n2000-11-26  David Billinghurst  <David.Billinghurst@riotinto.com>\n\t    Benjamin Kosnik  <bkoz@redhat.com>\n\n        * mkcheck.in: Add exe extension to printnow executable, abstract\n\tout call to this with TIMER_COMMAND.\n\t* configure.target (l_glibcpp_cxxflags): Add cygwin support.\n\t* acinclude.m4 (GLIBCPP_CHECK_CTYPE_SUPPORT): Correct paths.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r37780", "tree": {"sha": "65373140c02f870f075c9093757e5865c6b227b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65373140c02f870f075c9093757e5865c6b227b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c383aafd3a71f334825b224538fb6e21c7eedd2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c383aafd3a71f334825b224538fb6e21c7eedd2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c383aafd3a71f334825b224538fb6e21c7eedd2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c383aafd3a71f334825b224538fb6e21c7eedd2c/comments", "author": null, "committer": null, "parents": [{"sha": "e36b9711fb576855928df06107ba52635e011159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36b9711fb576855928df06107ba52635e011159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e36b9711fb576855928df06107ba52635e011159"}], "stats": {"total": 63, "additions": 42, "deletions": 21}, "files": [{"sha": "d279ed1b1e90912a5bdf5e62c0b081eddb3c02f5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -1,3 +1,18 @@\n+2000-11-26  Benjamin Kosnik  <bkoz@fillmore.constant.com>\n+\n+\t* tests_flags.in: Export CXX, CXXFLAGS.\n+\t* mkcheck.in: Grab them.\n+\n+2000-11-26  David Billinghurst  <David.Billinghurst@riotinto.com>\n+\t    Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+        * mkcheck.in: Add exe extension to printnow executable, abstract\n+\tout call to this with TIMER_COMMAND.\n+\t* configure.target (l_glibcpp_cxxflags): Add cygwin support.\n+\t* acinclude.m4 (GLIBCPP_CHECK_CTYPE_SUPPORT): Correct paths.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t\n 2000-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/27_io/istream_unformatted.cc (test05): Fixup."}, {"sha": "3aa1ac64ec62220f2dd43093a9b9fd58a6b77ba5", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -929,7 +929,7 @@ AC_DEFUN(GLIBCPP_CHECK_CTYPE_SUPPORT, [\n     ctype_newlib=yes, ctype_newlib=no)\n     AC_MSG_RESULT($ctype_newlib)\n     if test $ctype_newlib = \"yes\"; then\n-      ctype_include_dir=\"config/newlib\"\n+      ctype_include_dir=\"config/os/newlib\"\n       ctype_default=no\n     fi\n     fi"}, {"sha": "a4e0148f8370c3937071d53b598dba0e08f8cf34", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -941,7 +941,7 @@ AC_DEFUN(GLIBCPP_CHECK_CTYPE_SUPPORT, [\n     ctype_newlib=yes, ctype_newlib=no)\n     AC_MSG_RESULT($ctype_newlib)\n     if test $ctype_newlib = \"yes\"; then\n-      ctype_include_dir=\"config/newlib\"\n+      ctype_include_dir=\"config/os/newlib\"\n       ctype_default=no\n     fi\n     fi"}, {"sha": "6a30003cb793cf6dde856d47ff01951cd37d0d45", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -18081,7 +18081,7 @@ fi\n rm -f conftest*\n     echo \"$ac_t\"\"$ctype_newlib\" 1>&6\n     if test $ctype_newlib = \"yes\"; then\n-      ctype_include_dir=\"config/newlib\"\n+      ctype_include_dir=\"config/os/newlib\"\n       ctype_default=no\n     fi\n     fi"}, {"sha": "774149fc8c96c66141fb13ae490410d5105d0c0e", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -84,6 +84,9 @@ case \"${target_os}\" in\n   bsd* | freebsd*)\n     os_include_dir=\"config/os/bsd\"\n     ;;\n+  cygwin*)\n+    os_include_dir=\"config/os/newlib\"\n+    ;;\n   linux*)\n     os_include_dir=\"config/os/gnu-linux\"\n     ;;"}, {"sha": "e27c4cca38760a208898976532bbd2786cebdc20", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -53,7 +53,7 @@ esac\n saved_ifs=$IFS\n IFS=':'\n set `./tests_flags ${query} $*` || exit 1\n-BUILD_DIR=$1; SRC_DIR=$2; PREFIX_DIR=$3; LTCXX=$4; LIBS=$5; LTEXE=$6;\n+BUILD_DIR=$1; SRC_DIR=$2; PREFIX_DIR=$3; LTCXX=$4; LIBS=$5; LTEXE=$6; CXX=$7; CXXFLAGS=$8;\n IFS=$saved_ifs\n \n # Set up the testing directory, which should be in a directory called\n@@ -82,6 +82,13 @@ MAX_MEM_USAGE=3072\n #\n # 2: clean, make files, append general test info\n #\n+\n+# Remove old executables.\n+rm -rf \"$TEST_DIR\"/*exe\n+\n+# Remove old core files (which now get left in cwd, not $TEST_DIR).\n+rm -rf ./*core*\n+\n if [ -f $RESULTS_FILE ]; then\n     rm $RESULTS_FILE\n fi\n@@ -101,18 +108,13 @@ if [ ! -f \"$TESTS_FILE\" ]; then\n fi\n \n # Nasty solution to replace GNU date(1)'s %s time_t output function.\n-if [ ! -x \"$TEST_DIR/printnow\" ]; then\n-    echo \"making utility $TEST_DIR/printnow\"\n-    gcc -o \"$TEST_DIR/printnow\" \"$SRC_DIR/testsuite/printnow.c\"\n-    strip \"$TEST_DIR/printnow\"\n+TIMER_COMMAND=$TEST_DIR/printnow.exe\n+if [ ! -x \"$TIMER_COMMAND\" ]; then\n+    echo \"making utility $TIMER_COMMAND\"\n+    gcc -o \"$TIMER_COMMAND\" \"$SRC_DIR/testsuite/printnow.c\"\n+    strip \"$TIMER_COMMAND\"\n fi\n \n-# Remove old executables.\n-rm -rf \"$TEST_DIR\"/*exe\n-\n-# Remove old core files (which now get left in cwd, not $TEST_DIR).\n-rm -rf ./*core*\n-\n # Copy over the data files for filebufs\n cp $SRC_DIR/testsuite/27_io/*.txt $TEST_DIR\n cp $SRC_DIR/testsuite/27_io/*.tst $TEST_DIR\n@@ -122,7 +124,7 @@ chmod u+w $TEST_DIR/*.tst\n # Emit useful info about compiler and platform\n echo \"host: $(uname -mrsv)\" >> $RESULTS_FILE\n echo \"compiler: $($CXX -v 2>&1)\" >> $RESULTS_FILE\n-echo \"compiler flags: $CXX_FLAG\" >> $RESULTS_FILE\n+echo \"compiler flags: $CXXFLAGS\" >> $RESULTS_FILE\n echo \"date: $(date +%Y%m%d)\" >> $RESULTS_FILE\n echo \"\" >> $RESULTS_FILE\n \n@@ -297,9 +299,9 @@ test_file()\n     # eventually have to calculate time_t anyhow.  Or 3) just grab two\n     # time_t's (no more overhead than grabbing two date(1)'s).\n     compiler_invocation=\"$LTCXX $S_FLAG $SRC_NAME -o $EXENAME $LIBS\"\n-    COMP_TIME_START=$($TEST_DIR/printnow)\n+    COMP_TIME_START=$($TIMER_COMMAND)\n     $compiler_invocation >> compile.out 2>&1\n-    COMP_TIME_END=$($TEST_DIR/printnow)\n+    COMP_TIME_END=$($TIMER_COMMAND)\n \n     if [ $COMP_TIME_START -lt $COMP_TIME_END ]; then\n         C_TIME=$[ $COMP_TIME_END - $COMP_TIME_START ]\n@@ -366,7 +368,7 @@ echo \"------------------------------------------------------------------------\"\n printf \"static\\tshared\\ttest\\n\"\n echo \"------------------------------------------------------------------------\"\n \n-TEST_TIME_START=$($TEST_DIR/printnow)\n+TEST_TIME_START=$($TIMER_COMMAND)\n for NAME in `cat $TESTS_FILE`\n do\n     PRE_NAME=\"$TEST_DIR/`basename $NAME`\"\n@@ -389,7 +391,7 @@ do\n \n     echo \"\" >> $RESULTS_FILE\n done\n-TEST_TIME_END=$($TEST_DIR/printnow)\n+TEST_TIME_END=$($TIMER_COMMAND)\n \n \n #"}, {"sha": "d5215b9c1776ea71efa194d3922893eb377b06a3", "filename": "libstdc++-v3/tests_flags.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Ftests_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c383aafd3a71f334825b224538fb6e21c7eedd2c/libstdc%2B%2B-v3%2Ftests_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftests_flags.in?ref=c383aafd3a71f334825b224538fb6e21c7eedd2c", "patch": "@@ -29,9 +29,10 @@\n #        LTCXX       libtoolized command to compile a C++ program\n #        LIBS        flags to pass to the linker\n #        LTEXE       libtoolized command to run a compiled C++ program\n+#\t CXX         which C++ compiler is being used\n+#        CXXFLAGS    special C++ flags used\n #\n \n-\n ##\n ## Utility functions\n ##\n@@ -173,5 +174,5 @@ case ${query} in\n     ;;\n esac\n \n-echo ${BUILD_DIR}:${SRC_DIR}:${PREFIX_DIR}:${LTCXX}:${LIBS}:${LTEXE}\n+echo ${BUILD_DIR}:${SRC_DIR}:${PREFIX_DIR}:${LTCXX}:${LIBS}:${LTEXE}:${CXX}:${CXXFLAGS}\n exit 0"}]}