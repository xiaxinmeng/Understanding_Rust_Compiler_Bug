{"sha": "487edc878fe4c984c2b16fa6dd28e2715977dd24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3ZWRjODc4ZmU0Yzk4NGMyYjE2ZmE2ZGQyOGUyNzE1OTc3ZGQyNA==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2015-05-06T10:54:40Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2015-05-06T10:54:40Z"}, "message": "re PR target/66015 (align directives not propagated after __attribute__ ((__optimize__ (\"O2\"))))\n\n2015-05-06  Christian Bruel  <christian.bruel@st.com>\n\n\tPR target/66015\n\t* config/aarch64/aarch64.c (aarch64_override_options): Move align_loops,\n\talign_jumps, align_functions into aarch64_override_options_after_change.\n\nFrom-SVN: r222847", "tree": {"sha": "aa572836c5f6204f5e5ec2336c9413f64cc5cb04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa572836c5f6204f5e5ec2336c9413f64cc5cb04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/487edc878fe4c984c2b16fa6dd28e2715977dd24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487edc878fe4c984c2b16fa6dd28e2715977dd24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/487edc878fe4c984c2b16fa6dd28e2715977dd24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487edc878fe4c984c2b16fa6dd28e2715977dd24/comments", "author": null, "committer": null, "parents": [{"sha": "240a94da04372488fb03284d5479687c9f8fbe57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240a94da04372488fb03284d5479687c9f8fbe57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240a94da04372488fb03284d5479687c9f8fbe57"}], "stats": {"total": 64, "additions": 52, "deletions": 12}, "files": [{"sha": "07ea864db7b8d5c3f046a753a5d0de0cd935942d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=487edc878fe4c984c2b16fa6dd28e2715977dd24", "patch": "@@ -1,3 +1,9 @@\n+2015-05-06  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/66015\n+\t* config/aarch64/aarch64.c (aarch64_override_options): Move align_loops,\n+\talign_jumps, align_functions into aarch64_override_options_after_change.\n+\n 2015-05-06  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-slp.c (vect_supported_load_permutation_p): Use"}, {"sha": "7a34e4905f7683c987f023706bf8e54b4b9d0126", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=487edc878fe4c984c2b16fa6dd28e2715977dd24", "patch": "@@ -7053,18 +7053,6 @@ aarch64_override_options (void)\n #endif\n     }\n \n-  /* If not opzimizing for size, set the default\n-     alignment to what the target wants */\n-  if (!optimize_size)\n-    {\n-      if (align_loops <= 0)\n-\talign_loops = aarch64_tune_params->loop_align;\n-      if (align_jumps <= 0)\n-\talign_jumps = aarch64_tune_params->jump_align;\n-      if (align_functions <= 0)\n-\talign_functions = aarch64_tune_params->function_align;\n-    }\n-\n   if (AARCH64_TUNE_FMA_STEERING)\n     aarch64_register_fma_steering ();\n \n@@ -7080,6 +7068,18 @@ aarch64_override_options_after_change (void)\n     flag_omit_leaf_frame_pointer = false;\n   else if (flag_omit_leaf_frame_pointer)\n     flag_omit_frame_pointer = true;\n+\n+  /* If not optimizing for size, set the default\n+     alignment to what the target wants */\n+  if (!optimize_size)\n+    {\n+      if (align_loops <= 0)\n+\talign_loops = aarch64_tune_params->loop_align;\n+      if (align_jumps <= 0)\n+\talign_jumps = aarch64_tune_params->jump_align;\n+      if (align_functions <= 0)\n+\talign_functions = aarch64_tune_params->function_align;\n+    }\n }\n \n static struct machine_function *"}, {"sha": "2bea3f8c3681e8db2ef77e9d1690d7c1449f8e2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=487edc878fe4c984c2b16fa6dd28e2715977dd24", "patch": "@@ -1,3 +1,8 @@\n+2015-05-06  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/66015\n+\t* gcc.target/aarch64/iinline-attr-1.c: New test.\n+\n 2015-05-06  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/vect/bb-slp-34.c: New testcase."}, {"sha": "4b390cae0ef735cfa37c4abb3f1bb30f673b274a", "filename": "gcc/testsuite/gcc.target/aarch64/iinline-attr-1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fiinline-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487edc878fe4c984c2b16fa6dd28e2715977dd24/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fiinline-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fiinline-attr-1.c?ref=487edc878fe4c984c2b16fa6dd28e2715977dd24", "patch": "@@ -0,0 +1,29 @@\n+/* Verify that alignment flags are set when  attribute __optimize is used.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\"  } */\n+\n+extern void non_existent(int);\n+\n+__attribute__ ((__optimize__ (\"O2\")))\n+static void hooray ()\n+{\n+  non_existent (1);\n+}\n+\n+__attribute__ ((__optimize__ (\"O2\")))\n+static void hiphip (void (*f)())\n+{\n+  non_existent (2);\n+  f ();\n+}\n+\n+__attribute__ ((__optimize__ (\"O2\")))\n+int test (void)\n+{\n+  hiphip (hooray);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"p2align\" } } */\n+\n+"}]}