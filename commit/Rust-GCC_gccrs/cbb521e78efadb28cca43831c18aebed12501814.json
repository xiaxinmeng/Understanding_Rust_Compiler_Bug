{"sha": "cbb521e78efadb28cca43831c18aebed12501814", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JiNTIxZTc4ZWZhZGIyOGNjYTQzODMxYzE4YWViZWQxMjUwMTgxNA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@imgtec.com", "date": "2015-11-09T23:56:33Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2015-11-09T23:56:33Z"}, "message": "optabs.c (prepare_libcall_arg): New function.\n\n2015-11-09  Steve Ellcey  <sellcey@imgtec.com>\n\n\t* optabs.c (prepare_libcall_arg): New function.\n\t(expand_fixed_convert): Add call to prepare_libcall_arg.\n\nFrom-SVN: r230065", "tree": {"sha": "68b64e25b2f80000c9da49a7fbee3c2b49538470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b64e25b2f80000c9da49a7fbee3c2b49538470"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbb521e78efadb28cca43831c18aebed12501814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb521e78efadb28cca43831c18aebed12501814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbb521e78efadb28cca43831c18aebed12501814", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb521e78efadb28cca43831c18aebed12501814/comments", "author": null, "committer": null, "parents": [{"sha": "82669b680c0f19e717b0def332b755f9f66ce49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82669b680c0f19e717b0def332b755f9f66ce49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82669b680c0f19e717b0def332b755f9f66ce49e"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "c6a25611f376c35bb68035f6ea6d4b235d99d27c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbb521e78efadb28cca43831c18aebed12501814/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbb521e78efadb28cca43831c18aebed12501814/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbb521e78efadb28cca43831c18aebed12501814", "patch": "@@ -1,3 +1,8 @@\n+2015-11-09  Steve Ellcey  <sellcey@imgtec.com>\n+\n+\t* optabs.c (prepare_libcall_arg): New function.\n+\t(expand_fixed_convert): Add call to prepare_libcall_arg.\n+\n 2015-11-09  Nikolai Bozhenov  <n.bozhenov@samsung.com>\n \n \t* sched-int.h (dump_rgn_dependencies_dot): Declare"}, {"sha": "79c5873ce368be64f72791ee510190ce98862f48", "filename": "gcc/optabs.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbb521e78efadb28cca43831c18aebed12501814/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbb521e78efadb28cca43831c18aebed12501814/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=cbb521e78efadb28cca43831c18aebed12501814", "patch": "@@ -4838,6 +4838,33 @@ expand_fix (rtx to, rtx from, int unsignedp)\n     }\n }\n \n+\n+/* Promote integer arguments for a libcall if necessary.\n+   emit_library_call_value cannot do the promotion because it does not\n+   know if it should do a signed or unsigned promotion.  This is because\n+   there are no tree types defined for libcalls.  */\n+\n+static rtx\n+prepare_libcall_arg (rtx arg, int uintp)\n+{\n+  machine_mode mode = GET_MODE (arg);\n+  machine_mode arg_mode;\n+  if (SCALAR_INT_MODE_P (mode))\n+    {\n+      /*  If we need to promote the integer function argument we need to do\n+\t  it here instead of inside emit_library_call_value because in\n+\t  emit_library_call_value we don't know if we should do a signed or\n+\t  unsigned promotion.  */\n+\n+      int unsigned_p = 0;\n+      arg_mode = promote_function_mode (NULL_TREE, mode,\n+\t\t\t\t\t&unsigned_p, NULL_TREE, 0);\n+      if (arg_mode != mode)\n+\treturn convert_to_mode (arg_mode, arg, uintp);\n+    }\n+    return arg;\n+}\n+\n /* Generate code to convert FROM or TO a fixed-point.\n    If UINTP is true, either TO or FROM is an unsigned integer.\n    If SATP is true, we need to saturate the result.  */\n@@ -4880,6 +4907,9 @@ expand_fixed_convert (rtx to, rtx from, int uintp, int satp)\n   libfunc = convert_optab_libfunc (tab, to_mode, from_mode);\n   gcc_assert (libfunc);\n \n+  from = prepare_libcall_arg (from, uintp);\n+  from_mode = GET_MODE (from);\n+\n   start_sequence ();\n   value = emit_library_call_value (libfunc, NULL_RTX, LCT_CONST, to_mode,\n \t\t\t\t   1, from, from_mode);"}]}