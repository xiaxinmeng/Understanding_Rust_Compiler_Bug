{"sha": "952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9", "node_id": "C_kwDOANBUbNoAKDk1MmM4YTFkYzYyMzVkYzQ5YWIyMDdhN2YxOGY2M2QyYmM5N2ZiYzk", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wilco.dijkstra@arm.com", "date": "2022-12-07T14:16:24Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco.dijkstra@arm.com", "date": "2022-12-07T16:59:07Z"}, "message": "AArch64: Fix assert in aarch64_move_imm [PR108006]\n\nEnsure we only pass SI/DImode which fixes the assert.\n\ngcc/\n\tPR target/108006\n\t* config/aarch64/aarch64.cc (aarch64_expand_sve_const_vector):\n\tFix call to aarch64_move_imm to use SI/DI.", "tree": {"sha": "6a7e5252feda4b23ada0bbd879b9697a285e00b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a7e5252feda4b23ada0bbd879b9697a285e00b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9/comments", "author": {"login": "Wilco1", "id": 58446312, "node_id": "MDQ6VXNlcjU4NDQ2MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/58446312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wilco1", "html_url": "https://github.com/Wilco1", "followers_url": "https://api.github.com/users/Wilco1/followers", "following_url": "https://api.github.com/users/Wilco1/following{/other_user}", "gists_url": "https://api.github.com/users/Wilco1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wilco1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wilco1/subscriptions", "organizations_url": "https://api.github.com/users/Wilco1/orgs", "repos_url": "https://api.github.com/users/Wilco1/repos", "events_url": "https://api.github.com/users/Wilco1/events{/privacy}", "received_events_url": "https://api.github.com/users/Wilco1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Wilco1", "id": 58446312, "node_id": "MDQ6VXNlcjU4NDQ2MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/58446312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wilco1", "html_url": "https://github.com/Wilco1", "followers_url": "https://api.github.com/users/Wilco1/followers", "following_url": "https://api.github.com/users/Wilco1/following{/other_user}", "gists_url": "https://api.github.com/users/Wilco1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wilco1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wilco1/subscriptions", "organizations_url": "https://api.github.com/users/Wilco1/orgs", "repos_url": "https://api.github.com/users/Wilco1/repos", "events_url": "https://api.github.com/users/Wilco1/events{/privacy}", "received_events_url": "https://api.github.com/users/Wilco1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717154f26b0856bbf19787ffcdfc895b6aa67d4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717154f26b0856bbf19787ffcdfc895b6aa67d4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717154f26b0856bbf19787ffcdfc895b6aa67d4f"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "27a814d862101ce244c52d4863c6158cf549f066", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=952c8a1dc6235dc49ab207a7f18f63d2bc97fbc9", "patch": "@@ -6513,7 +6513,8 @@ aarch64_expand_sve_const_vector (rtx target, rtx src)\n \t  /* If the integer can be moved into a general register by a\n \t     single instruction, do that and duplicate the result.  */\n \t  if (CONST_INT_P (elt_value)\n-\t      && aarch64_move_imm (INTVAL (elt_value), elt_mode))\n+\t      && aarch64_move_imm (INTVAL (elt_value),\n+\t\t\t\t   encoded_bits <= 32 ? SImode : DImode))\n \t    {\n \t      elt_value = force_reg (elt_mode, elt_value);\n \t      return expand_vector_broadcast (mode, elt_value);"}]}