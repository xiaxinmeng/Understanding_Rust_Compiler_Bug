{"sha": "78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgxNzBjOGVhMTA4ZDc2YzllZDQ0YjlhNTk1NDZhYWRmNjRlOWMzZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-08-21T08:29:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-21T08:29:42Z"}, "message": "[Ada] Fix assertion failure on derived private protected type\n\nThis fixes an assertion failure on the instantiation of a generic\npackage on a type derived from the private view of a protected type,\nultimately caused by Finalize_Address returning Empty for the subtype\nbuilt for the generic actual type of the instantiation.\n\nFinalize_Address has a special processing for untagged derivations of\nprivate views, but it would no longer trigger for the subtype because\nthis subtype is now represented as a subtype of an implicit derived base\ntype instead of as the derived type of an implicit subtype previously.\n\n2019-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.adb (Finalize_Address): Deal consistently with\n\tsubtypes of private protected types.\n\ngcc/testsuite/\n\n\t* gnat.dg/prot9.adb, gnat.dg/prot9_gen.ads,\n\tgnat.dg/prot9_pkg1.ads, gnat.dg/prot9_pkg2.ads: New testcase.\n\nFrom-SVN: r274778", "tree": {"sha": "f25d401dba115fe9f6b26cabfeeb69200890ed7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f25d401dba115fe9f6b26cabfeeb69200890ed7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/comments", "author": null, "committer": null, "parents": [{"sha": "5188952e59475e3744c88aba9d9e8b07c8364987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5188952e59475e3744c88aba9d9e8b07c8364987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5188952e59475e3744c88aba9d9e8b07c8364987"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "f9dcd0c72f1adddc364e1ca2166c6943040997e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -1,3 +1,8 @@\n+2019-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_util.adb (Finalize_Address): Deal consistently with\n+\tsubtypes of private protected types.\n+\n 2019-08-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* exp_util.adb (Corresponding_Runtime_Package): Use high-level"}, {"sha": "c3c5e792d94b4a1257b8c30dab4c3a170aff9fce", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -5347,6 +5347,7 @@ package body Exp_Util is\n    ----------------------\n \n    function Finalize_Address (Typ : Entity_Id) return Entity_Id is\n+      Btyp : constant Entity_Id := Base_Type (Typ);\n       Utyp : Entity_Id := Typ;\n \n    begin\n@@ -5386,12 +5387,12 @@ package body Exp_Util is\n       --  records do not automatically inherit operations, but maybe they\n       --  should???)\n \n-      if Is_Untagged_Derivation (Typ) then\n-         if Is_Protected_Type (Typ) then\n-            Utyp := Corresponding_Record_Type (Root_Type (Base_Type (Typ)));\n+      if Is_Untagged_Derivation (Btyp) then\n+         if Is_Protected_Type (Btyp) then\n+            Utyp := Corresponding_Record_Type (Root_Type (Btyp));\n \n          else\n-            Utyp := Underlying_Type (Root_Type (Base_Type (Typ)));\n+            Utyp := Underlying_Type (Root_Type (Btyp));\n \n             if Is_Protected_Type (Utyp) then\n                Utyp := Corresponding_Record_Type (Utyp);"}, {"sha": "0826d148040cd8bcfa0664318c473b9283479083", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -1,3 +1,8 @@\n+2019-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/prot9.adb, gnat.dg/prot9_gen.ads,\n+\tgnat.dg/prot9_pkg1.ads, gnat.dg/prot9_pkg2.ads: New testcase.\n+\n 2019-08-21  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/implicit_param.adb, gnat.dg/implicit_param_pkg.ads:"}, {"sha": "6d1a21d0af8c5314d6e1814a13d93657a3839a32", "filename": "gcc/testsuite/gnat.dg/prot9.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9.adb?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+with Prot9_Gen;\n+with Prot9_Pkg1;\n+\n+procedure Prot9 is\n+   package Dummy is new Prot9_Gen (Prot9_Pkg1.Prot_Type);\n+begin\n+   null;\n+end Prot9;"}, {"sha": "656866eee02efa7ecdf021dd371b34d453decc13", "filename": "gcc/testsuite/gnat.dg/prot9_gen.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_gen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_gen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_gen.ads?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -0,0 +1,9 @@\n+generic\n+  type Field_Type is limited private;\n+package Prot9_Gen is\n+\n+  type Field_Pointer is access all Field_Type;\n+\n+  Pointer : Field_Pointer := new Field_Type;\n+\n+end Prot9_Gen;"}, {"sha": "5b995bc6bd725183dc32c32f72a7c8a1f26dad3b", "filename": "gcc/testsuite/gnat.dg/prot9_pkg1.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_pkg1.ads?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -0,0 +1,11 @@\n+with Prot9_Pkg2;\n+\n+package Prot9_Pkg1 is\n+\n+   type Prot_Type is limited private;\n+\n+private\n+\n+   type Prot_Type is new Prot9_Pkg2.Prot_Type;\n+\n+end Prot9_Pkg1;"}, {"sha": "af0e03b311457f1d003032f7051885ac58f83bfa", "filename": "gcc/testsuite/gnat.dg/prot9_pkg2.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78170c8ea108d76c9ed44b9a59546aadf64e9c3e/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot9_pkg2.ads?ref=78170c8ea108d76c9ed44b9a59546aadf64e9c3e", "patch": "@@ -0,0 +1,16 @@\n+with Ada.Containers.Doubly_Linked_Lists;\n+\n+package Prot9_Pkg2 is\n+\n+   type Prot_type is limited private;\n+\n+private\n+\n+   package My_Lists is new Ada.Containers.Doubly_Linked_Lists (Integer);\n+\n+   protected type Prot_type is\n+   private\n+     L : My_Lists.List;\n+   end Prot_type;\n+\n+end Prot9_Pkg2;"}]}