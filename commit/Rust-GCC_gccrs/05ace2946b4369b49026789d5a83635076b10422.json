{"sha": "05ace2946b4369b49026789d5a83635076b10422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVhY2UyOTQ2YjQzNjliNDkwMjY3ODlkNWE4MzYzNTA3NmIxMDQyMg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-25T00:16:57Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-25T00:16:57Z"}, "message": "Daily bump.", "tree": {"sha": "e5b10f0d37010b43d356bc0903792a3198f71b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5b10f0d37010b43d356bc0903792a3198f71b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05ace2946b4369b49026789d5a83635076b10422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ace2946b4369b49026789d5a83635076b10422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ace2946b4369b49026789d5a83635076b10422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ace2946b4369b49026789d5a83635076b10422/comments", "author": null, "committer": null, "parents": [{"sha": "9cf3f026e281f5eb978a78055d8949a3295b7f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf3f026e281f5eb978a78055d8949a3295b7f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf3f026e281f5eb978a78055d8949a3295b7f10"}], "stats": {"total": 334, "additions": 333, "deletions": 1}, "files": [{"sha": "d496dc68eb9eac7170b5f49854cbd5c63a59e94c", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1,3 +1,9 @@\n+2021-08-24  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR other/82704\n+\t* download_prerequisites: Fix issues with --md5 and\n+\t--sha512 options.\n+\n 2021-08-18  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-git-customization.sh: Wrap $@ in quotes."}, {"sha": "e4dd2269f1957eab51906dad0ba06df4bd87c2a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 221, "deletions": 0, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1,3 +1,224 @@\n+2021-08-24  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/aix.h (SYSTEM_IMPLICIT_EXTERN_C): Delete.\n+\t* config/rs6000/aix71.h (SYSTEM_IMPLICIT_EXTERN_C): Define.\n+\t* config/rs6000/aix72.h (SYSTEM_IMPLICIT_EXTERN_C): Define.\n+\t* config/rs6000/aix73.h (TARGET_AIX_VERSION): Increase to 73.\n+\n+2021-08-24  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR middle-end/102031\n+\t* simplify-rtx.c (simplify_truncation): When comparing precisions\n+\tuse \"subreg_prec\" variable, not \"subreg_mode\".\n+\n+2021-08-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add power10 and power10-64\n+\tstanzas.\n+\n+2021-08-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-call.c (rs6000_init_builtins): Initialize\n+\tvarious pointer type nodes.\n+\t* config/rs6000/rs6000.h (rs6000_builtin_type_index): Add enum\n+\tvalues for various pointer types.\n+\t(ptr_V16QI_type_node): New macro.\n+\t(ptr_V1TI_type_node): New macro.\n+\t(ptr_V2DI_type_node): New macro.\n+\t(ptr_V2DF_type_node): New macro.\n+\t(ptr_V4SI_type_node): New macro.\n+\t(ptr_V4SF_type_node): New macro.\n+\t(ptr_V8HI_type_node): New macro.\n+\t(ptr_unsigned_V16QI_type_node): New macro.\n+\t(ptr_unsigned_V1TI_type_node): New macro.\n+\t(ptr_unsigned_V8HI_type_node): New macro.\n+\t(ptr_unsigned_V4SI_type_node): New macro.\n+\t(ptr_unsigned_V2DI_type_node): New macro.\n+\t(ptr_bool_V16QI_type_node): New macro.\n+\t(ptr_bool_V8HI_type_node): New macro.\n+\t(ptr_bool_V4SI_type_node): New macro.\n+\t(ptr_bool_V2DI_type_node): New macro.\n+\t(ptr_bool_V1TI_type_node): New macro.\n+\t(ptr_pixel_type_node): New macro.\n+\t(ptr_intQI_type_node): New macro.\n+\t(ptr_uintQI_type_node): New macro.\n+\t(ptr_intHI_type_node): New macro.\n+\t(ptr_uintHI_type_node): New macro.\n+\t(ptr_intSI_type_node): New macro.\n+\t(ptr_uintSI_type_node): New macro.\n+\t(ptr_intDI_type_node): New macro.\n+\t(ptr_uintDI_type_node): New macro.\n+\t(ptr_intTI_type_node): New macro.\n+\t(ptr_uintTI_type_node): New macro.\n+\t(ptr_long_integer_type_node): New macro.\n+\t(ptr_long_unsigned_type_node): New macro.\n+\t(ptr_float_type_node): New macro.\n+\t(ptr_double_type_node): New macro.\n+\t(ptr_long_double_type_node): New macro.\n+\t(ptr_dfloat64_type_node): New macro.\n+\t(ptr_dfloat128_type_node): New macro.\n+\t(ptr_ieee128_type_node): New macro.\n+\t(ptr_ibm128_type_node): New macro.\n+\t(ptr_vector_pair_type_node): New macro.\n+\t(ptr_vector_quad_type_node): New macro.\n+\t(ptr_long_long_integer_type_node): New macro.\n+\t(ptr_long_long_unsigned_type_node): New macro.\n+\n+2021-08-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add power9-vector, power9,\n+\tand power9-64 stanzas.\n+\n+2021-08-24  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Tom de Vries  <tdevries@suse.de>\n+\n+\t* config.gcc (nvptx-*-*): Define {c,c++}_target_objs.\n+\t* config/nvptx/nvptx-protos.h (nvptx_cpu_cpp_builtins): Prototype.\n+\t* config/nvptx/nvptx.h (TARGET_CPU_CPP_BUILTINS): Implement with\n+\ta call to the new nvptx_cpu_cpp_builtins function in nvptx-c.c.\n+\t* config/nvptx/t-nvptx (nvptx-c.o): New rule.\n+\t* config/nvptx/nvptx-c.c: New source file.\n+\t(nvptx_cpu_cpp_builtins): Move implementation here.\n+\n+2021-08-24  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/101600\n+\tPR middle-end/101977\n+\t* gimple-ssa-warn-access.cc (maybe_warn_for_bound): Tighten up\n+\tthe phrasing of a warning.\n+\t(check_access): Use the remaining size after subtracting any offset\n+\trather than the whole object size.\n+\t* pointer-query.cc (access_ref::get_ref): Clear BASE0 flag if it's\n+\tclear for any nonnull PHI argument.\n+\t(compute_objsize): Clear argument.\n+\n+2021-08-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add power8-vector stanza.\n+\n+2021-08-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add power7 and power7-64\n+\tstanzas.\n+\n+2021-08-24  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* value-relation.cc (rr_transitive_table): New.\n+\t(relation_transitive): New.\n+\t(value_relation::swap): Remove.\n+\t(value_relation::apply_transitive): New.\n+\t(relation_oracle::relation_oracle): Allocate a new tmp bitmap.\n+\t(relation_oracle::register_relation): Call register_transitives.\n+\t(relation_oracle::register_transitives): New.\n+\t* value-relation.h (relation_oracle): Add new temporary bitmap and\n+\tmethods.\n+\n+2021-08-24  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/102021\n+\t* config/i386/i386-expand.c (ix86_expand_vector_move): Broadcast\n+\tfrom integer to a pseudo vector register.\n+\n+2021-08-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100089\n+\t* tree-vectorizer.h (vect_slp_bb): Rename to ...\n+\t(vect_slp_if_converted_bb): ... this and get the original\n+\tloop as new argument.\n+\t* tree-vectorizer.c (try_vectorize_loop_1): Revert previous fix,\n+\tpass original loop to vect_slp_if_converted_bb.\n+\t* tree-vect-slp.c (vect_bb_vectorization_profitable_p):\n+\tIf orig_loop was passed scan the not vectorized stmts\n+\tfor COND_EXPRs and force not profitable if found.\n+\t(vect_slp_region): Pass down all SLP instances to costing\n+\tif orig_loop was specified.\n+\t(vect_slp_bbs): Pass through orig_loop.\n+\t(vect_slp_bb): Rename to ...\n+\t(vect_slp_if_converted_bb): ... this and get the original\n+\tloop as new argument.\n+\t(vect_slp_function): Adjust.\n+\n+2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102035\n+\t* config/arm/arm.md (attribute arch): Add fix_vlldm.\n+\t(arch_enabled): Use it.\n+\t* config/arm/vfp.md (lazy_store_multiple_insn): Add alternative to\n+\tuse when erratum mitigation is needed.\n+\n+2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102035\n+\t* config/arm/arm.opt (mfix-cmse-cve-2021-35465): New option.\n+\t* doc/invoke.texi (Arm Options): Document it.\n+\t* config/arm/arm-cpus.in (quirk_vlldm): New feature bit.\n+\t(ALL_QUIRKS): Add quirk_vlldm.\n+\t(cortex-m33): Add quirk_vlldm.\n+\t(cortex-m35p, cortex-m55): Likewise.\n+\t* config/arm/arm.c (arm_option_override): Enable fix_vlldm if\n+\ttargetting an affected CPU and not explicitly controlled on\n+\tthe command line.\n+\n+2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/vfp.md (lazy_store_multiple_insn): Rewrite as valid RTL.\n+\t(lazy_load_multiple_insn): Likewise.\n+\n+2021-08-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101989\n+\t* config/i386/sse.md (<avx512>_vternlog<mode><sd_maskz_name>):\n+\tEnable avx512 embedded broadcast.\n+\t(*<avx512>_vternlog<mode>_all): Ditto.\n+\t(<avx512>_vternlog<mode>_mask): Ditto.\n+\n+2021-08-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101989\n+\t* config/i386/i386.c (ix86_rtx_costs): Define cost for\n+\tUNSPEC_VTERNLOG.\n+\t* config/i386/i386.h (STRIP_UNARY): New macro.\n+\t* config/i386/predicates.md (reg_or_notreg_operand): New\n+\tpredicate.\n+\t* config/i386/sse.md (*<avx512>_vternlog<mode>_all): New define_insn.\n+\t(*<avx512>_vternlog<mode>_1): New pre_reload\n+\tdefine_insn_and_split.\n+\t(*<avx512>_vternlog<mode>_2): Ditto.\n+\t(*<avx512>_vternlog<mode>_3): Ditto.\n+\t(any_logic1,any_logic2): New code iterator.\n+\t(logic_op): New code attribute.\n+\t(ternlogsuffix): Extend to VNxDF and VNxSF.\n+\n+2021-08-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* doc/invoke.texi (vect-inner-loop-cost-factor): Adjust.\n+\t* params.opt (--param vect-inner-loop-cost-factor): Adjust\n+\tmaximum value.\n+\t* tree-vect-loop.c (vect_analyze_loop_form): Initialize\n+\tinner_loop_cost_factor to the minimum of the estimated number\n+\tof iterations of the inner loop and vect-inner-loop-cost-factor.\n+\n+2021-08-24  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\t* config/i386/i386-features.c (compute_convert_gain): Provide\n+\tmore accurate values for CONST_INT, when optimizing for size.\n+\t* config/i386/i386.c (COSTS_N_BYTES): Move definition from here...\n+\t* config/i386/i386.h (COSTS_N_BYTES): to here.\n+\n+2021-08-24  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/102029\n+\t* match.pd (shift transformations): Add an additional check for\n+\t!POINTER_TYPE_P in the recently added left shift transformation.\n+\n+2021-08-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR tree-optimization/100089\n+\t* tree-vectorizer.c (try_vectorize_loop_1): Disable slp in\n+\tloop vectorizer when cost model is very-cheap.\n+\n 2021-08-23  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \t* config/rs6000/rs6000-gen-builtins.c (parse_bif_entry): Don't call"}, {"sha": "83bcbc11a41e1246e48c053e9ab36b76bc9cc613", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1 +1 @@\n-20210824\n+20210825"}, {"sha": "2866f5d712df74a1dea57f70080b958cad7001e6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1,3 +1,10 @@\n+2021-08-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/98411\n+\t* trans-decl.c (gfc_finish_var_decl): Adjust check to handle\n+\timplicit SAVE as well as variables in the main program.  Improve\n+\twarning message text.\n+\n 2021-08-23  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* openmp.c (gfc_match_dupl_check, gfc_match_dupl_memorder,"}, {"sha": "84e6afbf18fcf14c10e9eab48faee030c0dab3f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1,3 +1,71 @@\n+2021-08-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/98411\n+\t* gfortran.dg/pr98411.f90: Adjust testcase options to restrict to\n+\tF2008, and verify case of implicit SAVE.\n+\n+2021-08-24  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/101600\n+\tPR middle-end/101977\n+\t* g++.dg/pr100574.C: Prune out valid warning.\n+\t* gcc.dg/pr20126.c: Same.\n+\t* gcc.dg/Wstringop-overread.c: Adjust text of expected warnings.\n+\tAdd new instances.\n+\t* gcc.dg/warn-strnlen-no-nul.c: Same.\n+\t* g++.dg/warn/Warray-bounds-26.C: New test.\n+\t* gcc.dg/Warray-bounds-88.c: New test.\n+\n+2021-08-24  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gcc.dg/predict-1.c: Disable evrp.\n+\t* gcc.dg/tree-ssa/evrp-trans.c: New.\n+\n+2021-08-24  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/102021\n+\t* gcc.target/i386/pr100865-10b.c: Expect vzeroupper.\n+\t* gcc.target/i386/pr100865-4b.c: Likewise.\n+\t* gcc.target/i386/pr100865-6b.c: Expect vmovdqu and vzeroupper.\n+\t* gcc.target/i386/pr100865-7b.c: Likewise.\n+\t* gcc.target/i386/pr102021.c: New test.\n+\n+2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102035\n+\t* gcc.target/arm/cmse/mainline/8_1m/soft/cmse-13a.c: New test.\n+\t* gcc.target/arm/cmse/mainline/8_1m/soft/cmse-7a.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/8_1m/soft/cmse-8a.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/8_1m/softfp-sp/cmse-7a.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/8_1m/softfp-sp/cmse-8a.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/8_1m/softfp/cmse-13a.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/8_1m/softfp/cmse-7a.c: Likewise.\n+\t* gcc.target/arm/cmse/mainline/8_1m/softfp/cmse-8a.c: Likewise.\n+\n+2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_cmse_hw):\n+\tCheck the CMSE feature register, rather than relying on the\n+\tSG operation causing an execution fault.\n+\n+2021-08-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101989\n+\t* gcc.target/i386/pr101989-broadcast-1.c: New test.\n+\n+2021-08-24  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101989\n+\t* gcc.target/i386/pr101989-1.c: New test.\n+\t* gcc.target/i386/pr101989-2.c: New test.\n+\t* gcc.target/i386/avx512bw-shiftqihi-constant-1.c: Adjust testcase.\n+\n+2021-08-24  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/102029\n+\t* gcc.dg/fold-convlshift-3.c: New test case.\n+\n 2021-08-23  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/analyzer/switch.c: Remove xfail.  Add various tests."}, {"sha": "32556aa455b3a5d8f8170c0bb07611f36d80187a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1,3 +1,9 @@\n+2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/102035\n+\t* config/arm/cmse_nonsecure_call.S (__gnu_cmse_nonsecure_call):\n+\tAdd vlldm erratum work-around.\n+\n 2021-08-21  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config.host: Remove extra_parts from hppa[12]*-*-hpux11* case."}, {"sha": "e62f25aa0d6d29ab61ad006396b5849374884f77", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ace2946b4369b49026789d5a83635076b10422/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ace2946b4369b49026789d5a83635076b10422/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=05ace2946b4369b49026789d5a83635076b10422", "patch": "@@ -1,3 +1,27 @@\n+2021-08-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2020.xml: Update table.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n+2021-08-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (is_layout_compatible): Define.\n+\t(is_corresponding_member): Define.\n+\t* include/std/version (__cpp_lib_is_layout_compatible): Define.\n+\t* testsuite/20_util/is_layout_compatible/is_corresponding_member.cc:\n+\tNew test.\n+\t* testsuite/20_util/is_layout_compatible/value.cc: New test.\n+\t* testsuite/20_util/is_layout_compatible/version.cc: New test.\n+\t* testsuite/20_util/is_pointer_interconvertible/with_class.cc:\n+\tNew test.\n+\t* testsuite/23_containers/span/layout_compat.cc: Do not use real\n+\tstd::is_layout_compatible trait if available.\n+\n+2021-08-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++11/cxx11-shim_facets.cc: Fix mismatched class-key in\n+\texplicit instantiation definitions.\n+\n 2021-08-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/ranges (basic_istream_view): Add default template"}]}