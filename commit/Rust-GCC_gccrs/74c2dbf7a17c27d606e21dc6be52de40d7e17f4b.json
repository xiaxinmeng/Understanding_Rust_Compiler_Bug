{"sha": "74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRjMmRiZjdhMTdjMjdkNjA2ZTIxZGM2YmU1MmRlNDBkN2UxN2Y0Yg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-05-30T13:35:15Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-30T13:35:15Z"}, "message": "BeanInfoEmbryo.java, [...]: Rename enum to e because enum is a keyword in Java 1.5.\n\n2004-05-30  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/beans/BeanInfoEmbryo.java,\n\tjava/awt/im/InputContext.java,\n\tjavax/swing/tree/DefaultMutableTreeNode.java:\n\tRename enum to e because enum is a keyword in Java 1.5.\n\nFrom-SVN: r82447", "tree": {"sha": "c30e5b77f73b74e5951adab846077f49060dc369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c30e5b77f73b74e5951adab846077f49060dc369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/comments", "author": null, "committer": null, "parents": [{"sha": "27d14326c700db52c1cbc2b61e1875165aac78d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d14326c700db52c1cbc2b61e1875165aac78d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d14326c700db52c1cbc2b61e1875165aac78d4"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "be6629e8582aad75b5589a7626c30544b5c1de4d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "patch": "@@ -1,3 +1,10 @@\n+2004-05-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/beans/BeanInfoEmbryo.java,\n+\tjava/awt/im/InputContext.java,\n+\tjavax/swing/tree/DefaultMutableTreeNode.java:\n+\tRename enum to e because enum is a keyword in Java 1.5.\n+\n 2004-05-30  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/math/MPN.java,"}, {"sha": "2dc1166527eea1319e3dd8d72d97c61b1445a0ed", "filename": "libjava/gnu/java/beans/BeanInfoEmbryo.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java?ref=74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "patch": "@@ -85,9 +85,9 @@ public BeanInfo getBeanInfo() {\n \n \t\tPropertyDescriptor[] Aproperties = new PropertyDescriptor[properties.size()];\n \t\tint i = 0;\n-\t\tEnumeration enum = properties.elements();\n-\t\twhile(enum.hasMoreElements()) {\n-\t\t\tAproperties[i] = (PropertyDescriptor)enum.nextElement();\n+\t\tEnumeration e = properties.elements();\n+\t\twhile (e.hasMoreElements()) {\n+\t\t\tAproperties[i] = (PropertyDescriptor) e.nextElement();\n \t\t\tif(defaultPropertyName != null && Aproperties[i].getName().equals(defaultPropertyName)) {\n \t\t\t\tdefaultProperty = i;\n \t\t\t}\n@@ -96,9 +96,9 @@ public BeanInfo getBeanInfo() {\n \n \t\tEventSetDescriptor[] Aevents = new EventSetDescriptor[events.size()];\n \t\ti = 0;\n-\t\tenum = events.elements();\n-\t\twhile(enum.hasMoreElements()) {\n-\t\t\tAevents[i] = (EventSetDescriptor)enum.nextElement();\n+\t\te = events.elements();\n+\t\twhile (e.hasMoreElements()) {\n+\t\t\tAevents[i] = (EventSetDescriptor) e.nextElement();\n \t\t\tif(defaultEventName != null && Aevents[i].getName().equals(defaultEventName)) {\n \t\t\t\tdefaultEvent = i;\n \t\t\t}"}, {"sha": "c8e7cf35a4c74a5b497c74d95cdecc015b88a6e5", "filename": "libjava/java/awt/im/InputContext.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java?ref=74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "patch": "@@ -86,20 +86,20 @@\n   private static final ArrayList descriptors = new ArrayList();\n   static\n   {\n-    Enumeration enum;\n+    Enumeration e;\n     try\n       {\n-        enum = ClassLoader.getSystemResources\n+        e = ClassLoader.getSystemResources\n           (\"META_INF/services/java.awt.im.spi.InputMethodDescriptor\");\n       }\n     catch (IOException ex)\n       {\n         // XXX Should we do something else?\n-        enum = EmptyEnumeration.getInstance();\n+        e = EmptyEnumeration.getInstance();\n       }\n-    while (enum.hasMoreElements())\n+    while (e.hasMoreElements())\n       {\n-        URL url = (URL) enum.nextElement();\n+        URL url = (URL) e.nextElement();\n         BufferedReader in;\n         String line;\n         try\n@@ -125,7 +125,7 @@\n                   }\n                 line = in.readLine().trim();\n               }\n-            catch (IOException e)\n+            catch (IOException ex)\n               {\n                 continue outer;\n               }"}, {"sha": "b6dd1d0b8705c6938b0d112a9796f7b6fcdaa729", "filename": "libjava/javax/swing/tree/DefaultMutableTreeNode.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c2dbf7a17c27d606e21dc6be52de40d7e17f4b/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java?ref=74c2dbf7a17c27d606e21dc6be52de40d7e17f4b", "patch": "@@ -997,17 +997,17 @@ public DefaultMutableTreeNode getPreviousLeaf() {\n \tpublic int getLeafCount() {\n \n \t\t// Variables\n-\t\tEnumeration\tenum;\n+\t\tEnumeration\te;\n \t\tint\t\t\tcount;\n \t\tTreeNode\tcurrent;\n \n \t\t// Get Enumeration of all descendants\n-\t\tenum = depthFirstEnumeration();\n+\t\te = depthFirstEnumeration();\n \n \t\t// Process Nodes\n \t\tcount = 0;\n-\t\twhile (enum.hasMoreElements() == true) {\n-\t\t\tcurrent = (TreeNode) enum.nextElement();\n+\t\twhile (e.hasMoreElements() == true) {\n+\t\t\tcurrent = (TreeNode) e.nextElement();\n \t\t\tif (current.isLeaf() == true) {\n \t\t\t\tcount++;\n \t\t\t} // if"}]}