{"sha": "21039e0e003246c87d123bcd7099d411ac82a1fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwMzllMGUwMDMyNDZjODdkMTIzYmNkNzA5OWQ0MTFhYzgyYTFmZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-21T12:45:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-21T12:45:59Z"}, "message": "re PR middle-end/53408 (ICE in get_initial_def_for_induction, at tree-vect-loop.c:3222)\n\n2012-05-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53408\n\t* tree-vect-loop.c (vectorizable_induction): Properly check\n\tthe restriction that we cannot handle induction results from\n\tthe inner loop outside of the outer loop.\n\n\t* gcc.dg/torture/pr53408.c: New testcase.\n\nFrom-SVN: r187710", "tree": {"sha": "f9e3d8cc6e12497d2fbf21bdd48492e542cb7cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9e3d8cc6e12497d2fbf21bdd48492e542cb7cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21039e0e003246c87d123bcd7099d411ac82a1fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21039e0e003246c87d123bcd7099d411ac82a1fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21039e0e003246c87d123bcd7099d411ac82a1fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21039e0e003246c87d123bcd7099d411ac82a1fd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b5effa449611ed3e8360d4e3440c6cc00c70035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b5effa449611ed3e8360d4e3440c6cc00c70035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b5effa449611ed3e8360d4e3440c6cc00c70035"}], "stats": {"total": 76, "additions": 71, "deletions": 5}, "files": [{"sha": "75190eb106ef5cfdc8f7fa06508e05ff4b9df207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21039e0e003246c87d123bcd7099d411ac82a1fd", "patch": "@@ -1,3 +1,10 @@\n+2012-05-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53408\n+\t* tree-vect-loop.c (vectorizable_induction): Properly check\n+\tthe restriction that we cannot handle induction results from\n+\tthe inner loop outside of the outer loop.\n+\n 2012-05-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/53416"}, {"sha": "585ee31ff9357104f158b26674ffccd6f4f8e584", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21039e0e003246c87d123bcd7099d411ac82a1fd", "patch": "@@ -1,3 +1,8 @@\n+2012-05-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53408\n+\t* gcc.dg/torture/pr53408.c: New testcase.\n+\n 2012-05-21  Uros Bizjak  <ubizjak@gmail.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "25c6dc7f523bd9c600d93130e56bb4f3f532f976", "filename": "gcc/testsuite/gcc.dg/torture/pr53408.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53408.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53408.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53408.c?ref=21039e0e003246c87d123bcd7099d411ac82a1fd", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d, e;\n+void\n+fn1 ()\n+{\n+  int f, g;\n+  char h = 0;\n+  b = 0;\n+  for (; b < 32; b++)\n+    {\n+      g = h > e ? h : h << 1;\n+      f = g && a ? 0 : 1;\n+      h = 1;\n+      for (; h > 0; h = h + 1)\n+\tc = 0 < h | f;\n+    }\n+  if (h)\n+    d = 0;\n+}"}, {"sha": "528788fee13c52fe4aff0ddd10180c3c52ec24ee", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21039e0e003246c87d123bcd7099d411ac82a1fd/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=21039e0e003246c87d123bcd7099d411ac82a1fd", "patch": "@@ -5061,12 +5061,46 @@ vectorizable_induction (gimple phi, gimple_stmt_iterator *gsi ATTRIBUTE_UNUSED,\n   tree vec_def;\n \n   gcc_assert (ncopies >= 1);\n-  /* FORNOW. This restriction should be relaxed.  */\n-  if (nested_in_vect_loop_p (loop, phi) && ncopies > 1)\n+  /* FORNOW. These restrictions should be relaxed.  */\n+  if (nested_in_vect_loop_p (loop, phi))\n     {\n-      if (vect_print_dump_info (REPORT_DETAILS))\n-        fprintf (vect_dump, \"multiple types in nested loop.\");\n-      return false;\n+      imm_use_iterator imm_iter;\n+      use_operand_p use_p;\n+      gimple exit_phi;\n+      edge latch_e;\n+      tree loop_arg;\n+\n+      if (ncopies > 1)\n+\t{\n+\t  if (vect_print_dump_info (REPORT_DETAILS))\n+\t    fprintf (vect_dump, \"multiple types in nested loop.\");\n+\t  return false;\n+\t}\n+\n+      exit_phi = NULL;\n+      latch_e = loop_latch_edge (loop->inner);\n+      loop_arg = PHI_ARG_DEF_FROM_EDGE (phi, latch_e);\n+      FOR_EACH_IMM_USE_FAST (use_p, imm_iter, loop_arg)\n+\t{\n+\t  if (!flow_bb_inside_loop_p (loop->inner,\n+\t\t\t\t      gimple_bb (USE_STMT (use_p))))\n+\t    {\n+\t      exit_phi = USE_STMT (use_p);\n+\t      break;\n+\t    }\n+\t}\n+      if (exit_phi)\n+\t{\n+\t  stmt_vec_info exit_phi_vinfo  = vinfo_for_stmt (exit_phi);\n+\t  if (!(STMT_VINFO_RELEVANT_P (exit_phi_vinfo)\n+\t\t&& !STMT_VINFO_LIVE_P (exit_phi_vinfo)))\n+\t    {\n+\t      if (vect_print_dump_info (REPORT_DETAILS))\n+\t\tfprintf (vect_dump, \"inner-loop induction only used outside \"\n+\t\t\t \"of the outer vectorized loop.\");\n+\t      return false;\n+\t    }\n+\t}\n     }\n \n   if (!STMT_VINFO_RELEVANT_P (stmt_info))"}]}