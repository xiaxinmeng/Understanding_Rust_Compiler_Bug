{"sha": "6521ac8542fc402e4ffdf0b8f2c7270f22248842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUyMWFjODU0MmZjNDAyZTRmZmRmMGI4ZjJjNzI3MGYyMjI0ODg0Mg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2010-06-09T13:10:47Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2010-06-09T13:10:47Z"}, "message": "tree-ssa-loop-ivopts.c (adjust_setup_cost): New function.\n\n2010-06-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* tree-ssa-loop-ivopts.c (adjust_setup_cost): New function.\n\t(get_computation_cost_at): Use it.\n\t(determine_use_iv_cost_condition): Likewise.\n\t(determine_iv_cost): Likewise.\n\nFrom-SVN: r160471", "tree": {"sha": "853ff697161cf720847bce516ef00482bb15eb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/853ff697161cf720847bce516ef00482bb15eb94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6521ac8542fc402e4ffdf0b8f2c7270f22248842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6521ac8542fc402e4ffdf0b8f2c7270f22248842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6521ac8542fc402e4ffdf0b8f2c7270f22248842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6521ac8542fc402e4ffdf0b8f2c7270f22248842/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a83169cd671ac6aa5583e0679c94e84051df3675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83169cd671ac6aa5583e0679c94e84051df3675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a83169cd671ac6aa5583e0679c94e84051df3675"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "bdddc866dce717498e33f5adc3cf90f609b6ab25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6521ac8542fc402e4ffdf0b8f2c7270f22248842/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6521ac8542fc402e4ffdf0b8f2c7270f22248842/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6521ac8542fc402e4ffdf0b8f2c7270f22248842", "patch": "@@ -1,3 +1,10 @@\n+2010-06-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* tree-ssa-loop-ivopts.c (adjust_setup_cost): New function.\n+\t(get_computation_cost_at): Use it.\n+\t(determine_use_iv_cost_condition): Likewise.\n+\t(determine_iv_cost): Likewise.\n+\n 2010-06-09  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-loop-niter.c (simplify_replace_tree): Do not"}, {"sha": "53ad252d2fcc0f88690ae881849df4f6e1dc2c4a", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6521ac8542fc402e4ffdf0b8f2c7270f22248842/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6521ac8542fc402e4ffdf0b8f2c7270f22248842/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=6521ac8542fc402e4ffdf0b8f2c7270f22248842", "patch": "@@ -2936,6 +2936,20 @@ get_computation (struct loop *loop, struct iv_use *use, struct iv_cand *cand)\n   return get_computation_at (loop, use, cand, use->stmt);\n }\n \n+/* Adjust the cost COST for being in loop setup rather than loop body.\n+   If we're optimizing for space, the loop setup overhead is constant;\n+   if we're optimizing for speed, amortize it over the per-iteration cost.  */\n+static unsigned\n+adjust_setup_cost (struct ivopts_data *data, unsigned cost)\n+{\n+  if (cost == INFTY)\n+    return cost;\n+  else if (optimize_loop_for_speed_p (data->current_loop))\n+    return cost / AVG_LOOP_NITER (data->current_loop);\n+  else\n+    return cost;\n+}\n+\n /* Returns cost of addition in MODE.  */\n \n static unsigned\n@@ -3848,8 +3862,8 @@ get_computation_cost_at (struct ivopts_data *data,\n   /* Symbol + offset should be compile-time computable so consider that they\n       are added once to the variable, if present.  */\n   if (var_present && (symbol_present || offset))\n-    cost.cost += add_cost (TYPE_MODE (ctype), speed)\n-\t\t / AVG_LOOP_NITER (data->current_loop);\n+    cost.cost += adjust_setup_cost (data,\n+\t\t\t\t    add_cost (TYPE_MODE (ctype), speed));\n \n   /* Having offset does not affect runtime cost in case it is added to\n      symbol, but it increases complexity.  */\n@@ -4114,7 +4128,7 @@ determine_use_iv_cost_condition (struct ivopts_data *data,\n       elim_cost = force_var_cost (data, bound, &depends_on_elim);\n       /* The bound is a loop invariant, so it will be only computed\n \t once.  */\n-      elim_cost.cost /= AVG_LOOP_NITER (data->current_loop);\n+      elim_cost.cost = adjust_setup_cost (data, elim_cost.cost);\n     }\n   else\n     elim_cost = infinite_cost;\n@@ -4361,7 +4375,7 @@ determine_iv_cost (struct ivopts_data *data, struct iv_cand *cand)\n   cost_base = force_var_cost (data, base, NULL);\n   cost_step = add_cost (TYPE_MODE (TREE_TYPE (base)), data->speed);\n \n-  cost = cost_step + cost_base.cost / AVG_LOOP_NITER (current_loop);\n+  cost = cost_step + adjust_setup_cost (data, cost_base.cost);\n \n   /* Prefer the original ivs unless we may gain something by replacing it.\n      The reason is to make debugging simpler; so this is not relevant for"}]}