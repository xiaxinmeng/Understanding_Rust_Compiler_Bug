{"sha": "1a9af271275f4893e28c789c8f1964025694eda1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE5YWYyNzEyNzVmNDg5M2UyOGM3ODljOGYxOTY0MDI1Njk0ZWRhMQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-10-29T00:10:39Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-10-29T00:10:39Z"}, "message": "analyzer: fix false leak diagnostic on offsets from malloc [PR97608]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/97608\n\t* region-model-reachability.cc (reachable_regions::handle_sval):\n\tOperands of reachable reversible operations are reachable.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/97608\n\t* gcc.dg/analyzer/malloc-1.c (test_42d): New.\n\t* gcc.dg/analyzer/pr97608.c: New test.", "tree": {"sha": "6f4b335ee28124f590e65d2ea4888bf93bc5919c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f4b335ee28124f590e65d2ea4888bf93bc5919c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a9af271275f4893e28c789c8f1964025694eda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9af271275f4893e28c789c8f1964025694eda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a9af271275f4893e28c789c8f1964025694eda1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9af271275f4893e28c789c8f1964025694eda1/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9751143e237b507a81234a573a200ea45e7111a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9751143e237b507a81234a573a200ea45e7111a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9751143e237b507a81234a573a200ea45e7111a"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "f6f25cc9177bbd1729b09d1a82aa361165a66896", "filename": "gcc/analyzer/region-model-reachability.cc", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9af271275f4893e28c789c8f1964025694eda1/gcc%2Fanalyzer%2Fregion-model-reachability.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9af271275f4893e28c789c8f1964025694eda1/gcc%2Fanalyzer%2Fregion-model-reachability.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-reachability.cc?ref=1a9af271275f4893e28c789c8f1964025694eda1", "patch": "@@ -181,6 +181,40 @@ reachable_regions::handle_sval (const svalue *sval)\n     }\n   if (const svalue *cast = sval->maybe_undo_cast ())\n     handle_sval (cast);\n+\n+  /* If SVAL is the result of a reversible operation, then the operands\n+     are reachable.  */\n+  switch (sval->get_kind ())\n+    {\n+    default:\n+      break;\n+    case SK_UNARYOP:\n+      {\n+\tconst unaryop_svalue *unaryop_sval = (const unaryop_svalue *)sval;\n+\tswitch (unaryop_sval->get_op ())\n+\t  {\n+\t  default:\n+\t    break;\n+\t  case NEGATE_EXPR:\n+\t    handle_sval (unaryop_sval->get_arg ());\n+\t    break;\n+\t  }\n+      }\n+      break;\n+    case SK_BINOP:\n+      {\n+\tconst binop_svalue *binop_sval = (const binop_svalue *)sval;\n+\tswitch (binop_sval->get_op ())\n+\t  {\n+\t  default:\n+\t    break;\n+\t  case POINTER_PLUS_EXPR:\n+\t    handle_sval (binop_sval->get_arg0 ());\n+\t    handle_sval (binop_sval->get_arg1 ());\n+\t    break;\n+\t  }\n+      }\n+    }\n }\n \n /* Add SVAL.  If it is a pointer, add the pointed-to region."}, {"sha": "38ce1a52987bfb50bb172fc2c152bb079f4d306c", "filename": "gcc/testsuite/gcc.dg/analyzer/malloc-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9af271275f4893e28c789c8f1964025694eda1/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9af271275f4893e28c789c8f1964025694eda1/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c?ref=1a9af271275f4893e28c789c8f1964025694eda1", "patch": "@@ -509,6 +509,14 @@ void test_42c (void)\n   free (q - 64); /* this is probably OK.  */\n } /* { dg-bogus \"leak of 'p'\" } */\n \n+void *\n+test_42d (void)\n+{\n+  void *p = malloc (1024);\n+  void *q = p + 64;\n+  return q;\n+} /* { dg-bogus \"leak of 'p'\" } */\n+\n #if 0\n void test_31 (void *p)\n {"}, {"sha": "a2bc1301097c64965bb09c586efcdbdaa0742eb3", "filename": "gcc/testsuite/gcc.dg/analyzer/pr97608.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9af271275f4893e28c789c8f1964025694eda1/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr97608.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9af271275f4893e28c789c8f1964025694eda1/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr97608.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr97608.c?ref=1a9af271275f4893e28c789c8f1964025694eda1", "patch": "@@ -0,0 +1,17 @@\n+#include <stdlib.h>\n+\n+void *f (void)\n+{\n+  void *p = malloc (8);\n+  if (p == NULL)\n+    abort ();\n+  return (void *) ((char *) p + 0);\n+}\n+\n+void *g (void)\n+{\n+  void *p = malloc (8);\n+  if (p == NULL)\n+    abort ();\n+  return (void *) ((char *) p + 1);\n+}"}]}