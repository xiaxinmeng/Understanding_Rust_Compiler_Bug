{"sha": "e8b0383c1324a80e554e9e0401dc5830c700bb0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThiMDM4M2MxMzI0YTgwZTU1NGU5ZTA0MDFkYzU4MzBjNzAwYmIwZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-06T20:05:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-06T20:05:09Z"}, "message": "re PR c++/79377 (ICE with increment operator in -fpermissive mode)\n\n\tPR c++/79377\n\t* tree.c (build_min_non_dep_op_overload): For POST{INC,DEC}REMENT_EXPR\n\tallow one fewer than expected arguments if flag_permissive.\n\n\t* g++.dg/lookup/pr79377.C: New test.\n\nFrom-SVN: r245219", "tree": {"sha": "fd703b0324b6a08e36660618e2b6bbd5bb8e8108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd703b0324b6a08e36660618e2b6bbd5bb8e8108"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8b0383c1324a80e554e9e0401dc5830c700bb0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b0383c1324a80e554e9e0401dc5830c700bb0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8b0383c1324a80e554e9e0401dc5830c700bb0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b0383c1324a80e554e9e0401dc5830c700bb0e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5e8cbd150d7e7200d54e2e1e125161139e2c7b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e8cbd150d7e7200d54e2e1e125161139e2c7b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e8cbd150d7e7200d54e2e1e125161139e2c7b8"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "a318c7fb8b8d71b021c230e61b9ab37b3cb51ae1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e8b0383c1324a80e554e9e0401dc5830c700bb0e", "patch": "@@ -1,5 +1,9 @@\n 2017-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79377\n+\t* tree.c (build_min_non_dep_op_overload): For POST{INC,DEC}REMENT_EXPR\n+\tallow one fewer than expected arguments if flag_permissive.\n+\n \tPR c++/79372\n \t* decl.c (cp_finish_decomp): On error set decl type to error_mark_node.\n \t* pt.c (tsubst_expr): Don't call tsubst_decomp_names on decompositions"}, {"sha": "afd442f580168e9bd71e66b292f2c387d4d4ed8b", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=e8b0383c1324a80e554e9e0401dc5830c700bb0e", "patch": "@@ -2938,8 +2938,10 @@ build_min_non_dep_op_overload (enum tree_code op,\n   nargs = call_expr_nargs (non_dep);\n \n   expected_nargs = cp_tree_code_length (op);\n-  if (op == POSTINCREMENT_EXPR\n-      || op == POSTDECREMENT_EXPR)\n+  if ((op == POSTINCREMENT_EXPR\n+       || op == POSTDECREMENT_EXPR)\n+      /* With -fpermissive non_dep could be operator++().  */\n+      && (!flag_permissive || nargs != expected_nargs))\n     expected_nargs += 1;\n   gcc_assert (nargs == expected_nargs);\n "}, {"sha": "3313268a639cc0467bc336a49e85c485278252fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8b0383c1324a80e554e9e0401dc5830c700bb0e", "patch": "@@ -1,5 +1,8 @@\n 2017-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79377\n+\t* g++.dg/lookup/pr79377.C: New test.\n+\n \tPR c++/79372\n \t* g++.dg/cpp1z/decomp25.C: New test.\n "}, {"sha": "baf9a256c7cb4e4f777e2929ab378285495f91c2", "filename": "gcc/testsuite/g++.dg/lookup/pr79377.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr79377.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8b0383c1324a80e554e9e0401dc5830c700bb0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr79377.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr79377.C?ref=e8b0383c1324a80e554e9e0401dc5830c700bb0e", "patch": "@@ -0,0 +1,36 @@\n+// PR c++/79377\n+// { dg-do run }\n+// { dg-options \"-fpermissive\" }\n+\n+struct A\n+{\n+  A () : a (0) {}\n+  A& operator++ () { ++a; ++c; return *this; }\n+  int a;\n+  static int c;\n+};\n+\n+int A::c = 0;\n+\n+template <typename>\n+void\n+foo (A& a)\n+{\n+  a++;\t\t// { dg-warning \"trying prefix operator instead\" }\n+  if (A::c != 3 || a.a != 3) __builtin_abort ();\n+  ++a;\n+  if (A::c != 4 || a.a != 4) __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  A a;\n+  if (A::c != 0 || a.a != 0) __builtin_abort ();\n+  ++a;\n+  if (A::c != 1 || a.a != 1) __builtin_abort ();\n+  a++;\t\t// { dg-warning \"trying prefix operator instead\" }\n+  if (A::c != 2 || a.a != 2) __builtin_abort ();\n+  foo<int> (a);\n+  if (A::c != 4 || a.a != 4) __builtin_abort ();\n+}"}]}