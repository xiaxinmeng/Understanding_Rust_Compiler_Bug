{"sha": "72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhY2Y3NTFkOGViNDFiYWI3YTRkOGI0ZGQ3NGY4MTY1YjEwY2Q3MQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-22T19:29:16Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-25T15:02:44Z"}, "message": "d: Merge upstream dmd 4f1046222.\n\nRenames OnScopeStatement to ScopeGuardStatement.\n\nReviewed-on: https://github.com/dlang/dmd/pull/11285\n\ngcc/d/ChangeLog:\n\n\t* dmd/MERGE: Merge upstream dmd 4f1046222.\n\t* toir.cc (IRVisitor::visit (OnScopeGuardStatement *)): Rename to ...\n\t(IRVisitor::visit (ScopeGuardStatement *)): ... this.", "tree": {"sha": "c96d8ac146eb035f3e04f7eb142d756af7638113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c96d8ac146eb035f3e04f7eb142d756af7638113"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f48bffe70cba310461ec19ffcd07c573a6b86575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48bffe70cba310461ec19ffcd07c573a6b86575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48bffe70cba310461ec19ffcd07c573a6b86575"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "a13b5c1fae52bb735315831f026fbef722d75d6a", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -1,4 +1,4 @@\n-13d67c5757b83a86411e510bd65a6b5167241324\n+4f1046222f3a15a746ad2455e1099ed31e39b554\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "4705862e025b0f43dbd9cfd7833d71a200e028d2", "filename": "gcc/d/dmd/blockexit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fblockexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fblockexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fblockexit.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -435,7 +435,7 @@ int blockExit(Statement *s, FuncDeclaration *func, bool mustNotThrow)\n             result |= finalresult & ~BEfallthru;\n         }\n \n-        void visit(OnScopeStatement *)\n+        void visit(ScopeGuardStatement *)\n         {\n             // At this point, this statement is just an empty placeholder\n             result = BEfallthru;"}, {"sha": "dd22fb340f5cfd7d08a890a6f6183311b197f178", "filename": "gcc/d/dmd/clone.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fclone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fclone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fclone.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -914,7 +914,7 @@ FuncDeclaration *buildPostBlit(StructDeclaration *sd, Scope *sc)\n \n             ex = new CallExp(loc, new IdentifierExp(loc, Id::__ArrayDtor), ex);\n         }\n-        a->push(new OnScopeStatement(loc, TOKon_scope_failure, new ExpStatement(loc, ex)));\n+        a->push(new ScopeGuardStatement(loc, TOKon_scope_failure, new ExpStatement(loc, ex)));\n     }\n \n     // Build our own \"postblit\" which executes a, but only if needed."}, {"sha": "dd1105c03bdc5ecccdfda50a64ea85049d0a5d7e", "filename": "gcc/d/dmd/dinterpret.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fdinterpret.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fdinterpret.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdinterpret.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -439,7 +439,7 @@ class CtfeCompiler : public Visitor\n             ctfeCompile(s->statement);\n     }\n \n-    void visit(OnScopeStatement *)\n+    void visit(ScopeGuardStatement *)\n     {\n         // rewritten to try/catch/finally\n         assert(0);\n@@ -1753,7 +1753,7 @@ class Interpreter : public Visitor\n         result = new ThrownExceptionExp(s->loc, (ClassReferenceExp *)e);\n     }\n \n-    void visit(OnScopeStatement *)\n+    void visit(ScopeGuardStatement *)\n     {\n         assert(0);\n     }"}, {"sha": "b6849559bf6c7b230463e6c3d4962eadf899464e", "filename": "gcc/d/dmd/func.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Ffunc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Ffunc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffunc.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -194,7 +194,7 @@ class StatementRewriteWalker : public Visitor\n         if (s->finalbody)\n             visitStmt(s->finalbody);\n     }\n-    void visit(OnScopeStatement *) {  }\n+    void visit(ScopeGuardStatement *) {  }\n     void visit(ThrowStatement *) {  }\n     void visit(DebugStatement *s)\n     {"}, {"sha": "33a804fdba1a0320a1062cf7fc3460042dfea106", "filename": "gcc/d/dmd/hdrgen.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fhdrgen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fhdrgen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -618,7 +618,7 @@ class PrettyPrintVisitor : public Visitor\n         buf->writenl();\n     }\n \n-    void visit(OnScopeStatement *s)\n+    void visit(ScopeGuardStatement *s)\n     {\n         buf->writestring(Token::toChars(s->tok));\n         buf->writeByte(' ');"}, {"sha": "f4cd28ed2fbe9aac7066db8e6bdfa195f9575b47", "filename": "gcc/d/dmd/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -5395,7 +5395,7 @@ Statement *Parser::parseStatement(int flags, const utf8_t** endPtr, Loc *pEndloc\n                 nextToken();\n                 check(TOKrparen);\n                 Statement *st = parseStatement(PSscope);\n-                s = new OnScopeStatement(loc, t, st);\n+                s = new ScopeGuardStatement(loc, t, st);\n                 break;\n             }\n "}, {"sha": "35e38c151ac070f8d4335280596e234d085e8474", "filename": "gcc/d/dmd/sapply.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fsapply.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fsapply.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsapply.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -133,7 +133,7 @@ class PostorderStatementVisitor : public StoppableVisitor\n     {\n         doCond(s->_body) || doCond(s->finalbody) || applyTo(s);\n     }\n-    void visit(OnScopeStatement *s)\n+    void visit(ScopeGuardStatement *s)\n     {\n         doCond(s->statement) || applyTo(s);\n     }"}, {"sha": "b22823fb84672ec11f4983d94c10226065247986", "filename": "gcc/d/dmd/scope.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fscope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fscope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fscope.h?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -77,7 +77,7 @@ struct Scope\n     LabelStatement *slabel;     // enclosing labelled statement\n     SwitchStatement *sw;        // enclosing switch statement\n     TryFinallyStatement *tf;    // enclosing try finally statement\n-    OnScopeStatement *os;       // enclosing scope(xxx) statement\n+    ScopeGuardStatement *os;       // enclosing scope(xxx) statement\n     Statement *sbreak;          // enclosing statement that supports \"break\"\n     Statement *scontinue;       // enclosing statement that supports \"continue\"\n     ForeachStatement *fes;      // if nested function for ForeachStatement, this is it"}, {"sha": "9d2e7e228692ef694ebfebae0d0f0848a614a1cb", "filename": "gcc/d/dmd/statement.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fstatement.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fstatement.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -171,7 +171,7 @@ bool Statement::usesEH()\n         void visit(Statement *)             {}\n         void visit(TryCatchStatement *)     { stop = true; }\n         void visit(TryFinallyStatement *)   { stop = true; }\n-        void visit(OnScopeStatement *)      { stop = true; }\n+        void visit(ScopeGuardStatement *)      { stop = true; }\n         void visit(SynchronizedStatement *) { stop = true; }\n     };\n \n@@ -1418,23 +1418,23 @@ bool TryFinallyStatement::hasContinue()\n     return false; //true;\n }\n \n-/****************************** OnScopeStatement ***************************/\n+/****************************** ScopeGuardStatement ***************************/\n \n-OnScopeStatement::OnScopeStatement(Loc loc, TOK tok, Statement *statement)\n+ScopeGuardStatement::ScopeGuardStatement(Loc loc, TOK tok, Statement *statement)\n     : Statement(loc)\n {\n     this->tok = tok;\n     this->statement = statement;\n }\n \n-Statement *OnScopeStatement::syntaxCopy()\n+Statement *ScopeGuardStatement::syntaxCopy()\n {\n-    return new OnScopeStatement(loc, tok, statement->syntaxCopy());\n+    return new ScopeGuardStatement(loc, tok, statement->syntaxCopy());\n }\n \n-Statement *OnScopeStatement::scopeCode(Scope *sc, Statement **sentry, Statement **sexception, Statement **sfinally)\n+Statement *ScopeGuardStatement::scopeCode(Scope *sc, Statement **sentry, Statement **sexception, Statement **sfinally)\n {\n-    //printf(\"OnScopeStatement::scopeCode()\\n\");\n+    //printf(\"ScopeGuardStatement::scopeCode()\\n\");\n     //print();\n     *sentry = NULL;\n     *sexception = NULL;"}, {"sha": "4ceec87566c8d238945cd203b3256af56ac121bc", "filename": "gcc/d/dmd/statement.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fstatement.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fstatement.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement.h?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -626,13 +626,13 @@ class TryFinallyStatement : public Statement\n     void accept(Visitor *v) { v->visit(this); }\n };\n \n-class OnScopeStatement : public Statement\n+class ScopeGuardStatement : public Statement\n {\n public:\n     TOK tok;\n     Statement *statement;\n \n-    OnScopeStatement(Loc loc, TOK tok, Statement *statement);\n+    ScopeGuardStatement(Loc loc, TOK tok, Statement *statement);\n     Statement *syntaxCopy();\n     Statement *scopeCode(Scope *sc, Statement **sentry, Statement **sexit, Statement **sfinally);\n \n@@ -670,7 +670,7 @@ class GotoStatement : public Statement\n     Identifier *ident;\n     LabelDsymbol *label;\n     TryFinallyStatement *tf;\n-    OnScopeStatement *os;\n+    ScopeGuardStatement *os;\n     VarDeclaration *lastVar;\n \n     GotoStatement(Loc loc, Identifier *ident);\n@@ -686,7 +686,7 @@ class LabelStatement : public Statement\n     Identifier *ident;\n     Statement *statement;\n     TryFinallyStatement *tf;\n-    OnScopeStatement *os;\n+    ScopeGuardStatement *os;\n     VarDeclaration *lastVar;\n     Statement *gotoTarget;      // interpret\n "}, {"sha": "599c52e754c4fe3c635208a50f20df51169920d3", "filename": "gcc/d/dmd/statementsem.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fstatementsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fstatementsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatementsem.c?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -1969,7 +1969,7 @@ class StatementSemanticVisitor : public Visitor\n             if (ifs->match->edtor)\n             {\n                 Statement *sdtor = new DtorExpStatement(ifs->loc, ifs->match->edtor, ifs->match);\n-                sdtor = new OnScopeStatement(ifs->loc, TOKon_scope_exit, sdtor);\n+                sdtor = new ScopeGuardStatement(ifs->loc, TOKon_scope_exit, sdtor);\n                 ifs->ifbody = new CompoundStatement(ifs->loc, sdtor, ifs->ifbody);\n                 ifs->match->storage_class |= STCnodtor;\n             }\n@@ -3544,7 +3544,7 @@ class StatementSemanticVisitor : public Visitor\n         result = tfs;\n     }\n \n-    void visit(OnScopeStatement *oss)\n+    void visit(ScopeGuardStatement *oss)\n     {\n         if (oss->tok != TOKon_scope_exit)\n         {"}, {"sha": "5f2bf2cccb4b1118e9532b12c794af1699237138", "filename": "gcc/d/dmd/visitor.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fvisitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Fdmd%2Fvisitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fvisitor.h?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -46,7 +46,7 @@ class SynchronizedStatement;\n class WithStatement;\n class TryCatchStatement;\n class TryFinallyStatement;\n-class OnScopeStatement;\n+class ScopeGuardStatement;\n class ThrowStatement;\n class DebugStatement;\n class GotoStatement;\n@@ -339,7 +339,7 @@ class Visitor\n     virtual void visit(WithStatement *s) { visit((Statement *)s); }\n     virtual void visit(TryCatchStatement *s) { visit((Statement *)s); }\n     virtual void visit(TryFinallyStatement *s) { visit((Statement *)s); }\n-    virtual void visit(OnScopeStatement *s) { visit((Statement *)s); }\n+    virtual void visit(ScopeGuardStatement *s) { visit((Statement *)s); }\n     virtual void visit(ThrowStatement *s) { visit((Statement *)s); }\n     virtual void visit(DebugStatement *s) { visit((Statement *)s); }\n     virtual void visit(GotoStatement *s) { visit((Statement *)s); }"}, {"sha": "fd18b9e6a763024d8f78835e5c19ae89693600b9", "filename": "gcc/d/toir.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Ftoir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71/gcc%2Fd%2Ftoir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftoir.cc?ref=72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "patch": "@@ -555,7 +555,7 @@ class IRVisitor : public Visitor\n      try/catch/finally.  At this point, this statement is just an empty\n      placeholder.  Maybe the frontend shouldn't leak these.  */\n \n-  void visit (OnScopeStatement *)\n+  void visit (ScopeGuardStatement *)\n   {\n   }\n "}]}