{"sha": "9f9cbdcea607f6705cd25c5d34e2554dfa8fa074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5Y2JkY2VhNjA3ZjY3MDVjZDI1YzVkMzRlMjU1NGRmYThmYTA3NA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2013-07-23T11:45:57Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2013-07-23T11:45:57Z"}, "message": "avr.md: Explain asm print modifier 'r' for REG.\n\n\t* config/avr/avr.md: Explain asm print modifier 'r' for REG.\n\nFrom-SVN: r201163", "tree": {"sha": "d9595f79a57845a4d80c2aecf2b8e624a9e37b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9595f79a57845a4d80c2aecf2b8e624a9e37b74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "c35938de287ad893c6711a47a57dc795cc07505c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f9cbdcea607f6705cd25c5d34e2554dfa8fa074", "patch": "@@ -1,3 +1,7 @@\n+2013-07-23  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.md: Explain asm print modifier 'r' for REG.\n+\n 2013-07-22  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n \t    Anton Blanchard <anton@au1.ibm.com>\n "}, {"sha": "cf4e0422bb94f54e5dceea3ce70100e624851246", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9cbdcea607f6705cd25c5d34e2554dfa8fa074/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=9f9cbdcea607f6705cd25c5d34e2554dfa8fa074", "patch": "@@ -32,6 +32,7 @@\n ;;  o  Displacement for (mem (plus (reg) (const_int))) operands.\n ;;  p  POST_INC or PRE_DEC address as a pointer (X, Y, Z)\n ;;  r  POST_INC or PRE_DEC address as a register (r26, r28, r30)\n+;;  r  Print a REG without the register prefix 'r'.\n ;; T/T Print operand suitable for BLD/BST instruction, i.e. register and\n ;;     bit number.  This gets 2 operands: The first %T gets a REG_P and\n ;;     just cashes the operand for the next %T.  The second %T gets"}]}