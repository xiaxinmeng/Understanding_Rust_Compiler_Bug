{"sha": "31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhM2Y1OGY5YmM5NDdlY2YzZDU5ZWIyMTAxOTlhM2U1Y2EwYjQ5Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-10T14:23:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-10T14:23:29Z"}, "message": "re PR debug/83765 (LTO bootstrap with Ada fails)\n\n2018-01-10  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/83765\n\t* dwarf2out.c (gen_subprogram_die): Hoist old_die && declaration\n\tearly out so it also covers the case where we have a non-NULL\n\torigin.\n\nFrom-SVN: r256428", "tree": {"sha": "68fd52e3dcb67e1450deafc59606df3faa1582d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68fd52e3dcb67e1450deafc59606df3faa1582d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6737facbb3c53a1f0158b05e4116c161ed9bc319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6737facbb3c53a1f0158b05e4116c161ed9bc319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6737facbb3c53a1f0158b05e4116c161ed9bc319"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "01a89c72ef34a2d803b13df310fe6300147816f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f", "patch": "@@ -1,3 +1,10 @@\n+2018-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/83765\n+\t* dwarf2out.c (gen_subprogram_die): Hoist old_die && declaration\n+\tearly out so it also covers the case where we have a non-NULL\n+\torigin.\n+\n 2018-01-10  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/83753"}, {"sha": "b70856fce8bfbb9b5307ac8ddce9eaeb81bb3a16", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=31a3f58f9bc947ecf3d59eb210199a3e5ca0b49f", "patch": "@@ -22044,6 +22044,11 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n   int declaration = (current_function_decl != decl\n \t\t     || class_or_namespace_scope_p (context_die));\n \n+  /* A declaration that has been previously dumped needs no\n+     additional information.  */\n+  if (old_die && declaration)\n+    return;\n+\n   /* Now that the C++ front end lazily declares artificial member fns, we\n      might need to retrofit the declaration into its class.  */\n   if (!declaration && !origin && !old_die\n@@ -22084,11 +22089,6 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n      much as possible.  */\n   else if (old_die)\n     {\n-      /* A declaration that has been previously dumped needs no\n-\t additional information.  */\n-      if (declaration)\n-\treturn;\n-\n       if (!get_AT_flag (old_die, DW_AT_declaration)\n \t  /* We can have a normal definition following an inline one in the\n \t     case of redefinition of GNU C extern inlines."}]}