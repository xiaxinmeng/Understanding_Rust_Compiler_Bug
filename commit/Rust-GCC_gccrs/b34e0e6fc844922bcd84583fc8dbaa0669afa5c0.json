{"sha": "b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0ZTBlNmZjODQ0OTIyYmNkODQ1ODNmYzhkYmFhMDY2OWFmYTVjMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-11T20:26:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-11T20:26:44Z"}, "message": "re PR c++/51818 ([C++0x] Name mangling error using lambda expressions in GCC47)\n\n\tPR c++/51818\n\t* mangle.c (find_substitution): A type is only a substitution\n\tmatch if we're looking for a type.\n\t(write_nested_name): Use decl_mangling_context.\n\nFrom-SVN: r183107", "tree": {"sha": "aaa92595e280011c55e0c1bb7d361c882256dbc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaa92595e280011c55e0c1bb7d361c882256dbc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "faf00d3c168bc4cc7f50f5580216e854e62e51e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf00d3c168bc4cc7f50f5580216e854e62e51e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf00d3c168bc4cc7f50f5580216e854e62e51e3"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "6850778b4d32587f2ec08f21b9e6683c429336e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "patch": "@@ -1,5 +1,10 @@\n 2012-01-11  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51818\n+\t* mangle.c (find_substitution): A type is only a substitution\n+\tmatch if we're looking for a type.\n+\t(write_nested_name): Use decl_mangling_context.\n+\n \t* decl.c (decls_match): Assert that the arguments are decls.\n \n \tPR c++/51613"}, {"sha": "60b187007b17a9d06fc225a34c9209b07b5a4382", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "patch": "@@ -615,7 +615,7 @@ find_substitution (tree node)\n       /* NODE is a matched to a candidate if it's the same decl node or\n \t if it's the same type.  */\n       if (decl == candidate\n-\t  || (TYPE_P (candidate) && type && TYPE_P (type)\n+\t  || (TYPE_P (candidate) && type && TYPE_P (node)\n \t      && same_type_p (type, candidate))\n \t  || NESTED_TEMPLATE_MATCH (node, candidate))\n \t{\n@@ -949,7 +949,7 @@ write_nested_name (const tree decl)\n   else\n     {\n       /* No, just use <prefix>  */\n-      write_prefix (CP_DECL_CONTEXT (decl));\n+      write_prefix (decl_mangling_context (decl));\n       write_unqualified_name (decl);\n     }\n   write_char ('E');"}, {"sha": "0d5b59676299413b896d9d1bed2634cd2dfd8e8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "patch": "@@ -1,3 +1,8 @@\n+2012-01-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51818\n+\t* g++.dg/cpp0x/lambda/lambda-mangle3.C: New.\n+\n 2012-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/array19.ad[sb]: New test."}, {"sha": "06913a1c1a7f574ad4911f43fa0c9ea2b0b8613c", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-mangle3.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-mangle3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e0e6fc844922bcd84583fc8dbaa0669afa5c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-mangle3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-mangle3.C?ref=b34e0e6fc844922bcd84583fc8dbaa0669afa5c0", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/51818\n+// { dg-options -std=c++0x }\n+// { dg-final { scan-assembler \"_ZN1AC1IN3foo3barMUlvE_EEET_\" } }\n+\n+struct A\n+{\n+  template <class T> A(T) { }\n+};\n+\n+struct foo\n+{\n+  A bar = []{};\n+};\n+\n+foo f;"}]}