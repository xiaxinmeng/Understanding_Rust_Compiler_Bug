{"sha": "8a1eca08037f5a936526485f1056385708dc5c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExZWNhMDgwMzdmNWE5MzY1MjY0ODVmMTA1NjM4NTcwOGRjNWM3Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-21T13:21:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-21T13:21:06Z"}, "message": "re PR middle-end/26898 (Fold does not fold signed + CST1 CMP signed + CST2)\n\n2006-10-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/26898\n\t* fold-const.c (fold_comparison): Fold signed comparisons\n\tof the form X +- C1 CMP Y +- C2.\n\n\t* gcc.dg/torture/pr26898-1.c: New testcase.\n\t* gcc.dg/torture/pr26898-2.c: Likewise.\n\nFrom-SVN: r117931", "tree": {"sha": "4cf583b76df07ca2a2dedcc508f861ce8f54ba4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cf583b76df07ca2a2dedcc508f861ce8f54ba4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a1eca08037f5a936526485f1056385708dc5c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1eca08037f5a936526485f1056385708dc5c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a1eca08037f5a936526485f1056385708dc5c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1eca08037f5a936526485f1056385708dc5c7c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a4171a01d9f9041175a6b7c473ed43a623bea0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4171a01d9f9041175a6b7c473ed43a623bea0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4171a01d9f9041175a6b7c473ed43a623bea0b"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "fdaa244cfe58e0cec1328147b702ff7bd1d0105f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a1eca08037f5a936526485f1056385708dc5c7c", "patch": "@@ -1,3 +1,9 @@\n+2006-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/26898\n+\t* fold-const.c (fold_comparison): Fold signed comparisons\n+\tof the form X +- C1 CMP Y +- C2.\n+\n 2006-10-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR target/19116"}, {"sha": "b04022e1086eac4b548996fc6f62d57a650c5828", "filename": "gcc/fold-const.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8a1eca08037f5a936526485f1056385708dc5c7c", "patch": "@@ -7835,6 +7835,48 @@ fold_comparison (enum tree_code code, tree type, tree op0, tree op1)\n \t}\n     }\n \n+  /* Transform comparisons of the form X +- C1 CMP Y +- C2 to\n+     X CMP Y +- C2 +- C1 for signed X, Y.  This is valid if\n+     the resulting offset is smaller in absolute value than the\n+     original one.  */\n+  if (!(flag_wrapv || flag_trapv)\n+      && !TYPE_UNSIGNED (TREE_TYPE (arg0))\n+      && (TREE_CODE (arg0) == PLUS_EXPR || TREE_CODE (arg0) == MINUS_EXPR)\n+      && (TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n+\t  && !TREE_OVERFLOW (TREE_OPERAND (arg0, 1)))\n+      && (TREE_CODE (arg1) == PLUS_EXPR || TREE_CODE (arg1) == MINUS_EXPR)\n+      && (TREE_CODE (TREE_OPERAND (arg1, 1)) == INTEGER_CST\n+\t  && !TREE_OVERFLOW (TREE_OPERAND (arg1, 1))))\n+    {\n+      tree const1 = TREE_OPERAND (arg0, 1);\n+      tree const2 = TREE_OPERAND (arg1, 1);\n+      tree variable1 = TREE_OPERAND (arg0, 0);\n+      tree variable2 = TREE_OPERAND (arg1, 0);\n+      tree cst;\n+\n+      /* Put the constant on the side where it doesn't overflow and is\n+\t of lower absolute value than before.  */\n+      cst = int_const_binop (TREE_CODE (arg0) == TREE_CODE (arg1)\n+\t\t\t     ? MINUS_EXPR : PLUS_EXPR,\n+\t\t\t     const2, const1, 0);\n+      if (!TREE_OVERFLOW (cst)\n+\t  && tree_int_cst_compare (const2, cst) == tree_int_cst_sgn (const2))\n+\treturn fold_build2 (code, type,\n+\t\t\t    variable1,\n+\t\t\t    fold_build2 (TREE_CODE (arg1), TREE_TYPE (arg1),\n+\t\t\t\t\t variable2, cst));\n+\n+      cst = int_const_binop (TREE_CODE (arg0) == TREE_CODE (arg1)\n+\t\t\t     ? MINUS_EXPR : PLUS_EXPR,\n+\t\t\t     const1, const2, 0);\n+      if (!TREE_OVERFLOW (cst)\n+\t  && tree_int_cst_compare (const1, cst) == tree_int_cst_sgn (const1))\n+\treturn fold_build2 (code, type,\n+\t\t\t    fold_build2 (TREE_CODE (arg0), TREE_TYPE (arg0),\n+\t\t\t\t\t variable1, cst),\n+\t\t\t    variable2);\n+    }\n+\n   if (FLOAT_TYPE_P (TREE_TYPE (arg0)))\n     {\n       tree targ0 = strip_float_extensions (arg0);"}, {"sha": "55d336cc162cd5789818b0c01e22b48404b2f8f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a1eca08037f5a936526485f1056385708dc5c7c", "patch": "@@ -1,3 +1,9 @@\n+2006-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/26898\n+\t* gcc.dg/torture/pr26898-1.c: New testcase.\n+\t* gcc.dg/torture/pr26898-2.c: Likewise.\n+\n 2006-10-20  Lee Millward  <lee.millward@codesourcery.com>\n         \n         PR c++/28053"}, {"sha": "12ca1f38a91939363d119c1ad9d2a3b61ac98ec7", "filename": "gcc/testsuite/gcc.dg/torture/pr26898-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26898-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26898-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26898-1.c?ref=8a1eca08037f5a936526485f1056385708dc5c7c", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do link } */\n+\n+#include <limits.h>\n+\n+extern void link_error(void);\n+int main()\n+{\n+  int i0, i1;\n+  if (!(i0 + 1 < i1 + 1 == i0 < i1))\n+    link_error ();\n+  if (!(i0 + INT_MIN < i1 - INT_MAX == i0 < i1 - -1))\n+    link_error ();\n+  return 0;\n+}"}, {"sha": "508fde4ce7dc04804823fa1770620c900fc2c00d", "filename": "gcc/testsuite/gcc.dg/torture/pr26898-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26898-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1eca08037f5a936526485f1056385708dc5c7c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26898-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26898-2.c?ref=8a1eca08037f5a936526485f1056385708dc5c7c", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do run } */\n+\n+#include <limits.h>\n+\n+int a = 0, b = INT_MAX - 1;\n+extern void abort(void);\n+int main()\n+{\n+  if (a - 1 > b + 1)\n+    abort();\n+  return 0;\n+}"}]}