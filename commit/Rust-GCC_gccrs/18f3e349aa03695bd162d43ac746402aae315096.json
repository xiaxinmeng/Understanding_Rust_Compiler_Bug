{"sha": "18f3e349aa03695bd162d43ac746402aae315096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThmM2UzNDlhYTAzNjk1YmQxNjJkNDNhYzc0NjQwMmFhZTMxNTA5Ng==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-07-27T01:48:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-07-27T01:48:11Z"}, "message": "varasm.c (output_constant_def_contents): Use ASM_DECLARE_CONSTANT_NAME if defined.\n\n\t* varasm.c (output_constant_def_contents): Use\n\tASM_DECLARE_CONSTANT_NAME if defined.\n\t* doc/tm.texi (Label Output): Document ASM_DECLARE_CONSTANT_NAME.\n\t* config/darwin.h (ASM_DECLARE_OBJECT_NAME): Ensure zero-sized\n\tobjects get at least one byte to prevent assembler problems.\n\t(ASM_DECLARE_CONSTANT_NAME): New.\n\nIndex: testsuite/ChangeLog\n\t* gcc.c-torture/compile/zero-strct-2.c: New test.\n\nFrom-SVN: r69842", "tree": {"sha": "b7681d01248c778248685f3ec5dfb7509c7adecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7681d01248c778248685f3ec5dfb7509c7adecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18f3e349aa03695bd162d43ac746402aae315096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f3e349aa03695bd162d43ac746402aae315096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18f3e349aa03695bd162d43ac746402aae315096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f3e349aa03695bd162d43ac746402aae315096/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "404edd110efdb47f40f0f670d25b4e2aa84d2168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404edd110efdb47f40f0f670d25b4e2aa84d2168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/404edd110efdb47f40f0f670d25b4e2aa84d2168"}], "stats": {"total": 84, "additions": 65, "deletions": 19}, "files": [{"sha": "c0915fad8353a3ef0ea5ac25a29c4893f2a4a73e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3e349aa03695bd162d43ac746402aae315096/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3e349aa03695bd162d43ac746402aae315096/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18f3e349aa03695bd162d43ac746402aae315096", "patch": "@@ -44,6 +44,13 @@\n \n 2003-07-26  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* varasm.c (output_constant_def_contents): Use \n+\tASM_DECLARE_CONSTANT_NAME if defined.\n+\t* doc/tm.texi (Label Output): Document ASM_DECLARE_CONSTANT_NAME.\n+\t* config/darwin.h (ASM_DECLARE_OBJECT_NAME): Ensure zero-sized\n+\tobjects get at least one byte to prevent assembler problems.\n+\t(ASM_DECLARE_CONSTANT_NAME): New.\n+\n \t* Makefile.in (libbackend.o): Remove options_.h.\n \t(mostlyclean): Likewise.\n "}, {"sha": "64aab067f6f9e1460ef69a0476ce1f97e571791b", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=18f3e349aa03695bd162d43ac746402aae315096", "patch": "@@ -356,18 +356,22 @@ do { text_section ();\t\t\t\t\t\t\t\\\n #undef ASM_DECLARE_OBJECT_NAME\n #define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    const char *xname = NAME;                                           \\\n-    if (GET_CODE (XEXP (DECL_RTL (DECL), 0)) != SYMBOL_REF)             \\\n-      xname = IDENTIFIER_POINTER (DECL_NAME (DECL));                    \\\n-    if ((TREE_STATIC (DECL)                                             \\\n-\t && (!DECL_COMMON (DECL) || !TREE_PUBLIC (DECL)))               \\\n-        || DECL_INITIAL (DECL))                                         \\\n-      machopic_define_name (xname);                                     \\\n-    if ((TREE_STATIC (DECL)                                             \\\n-\t && (!DECL_COMMON (DECL) || !TREE_PUBLIC (DECL)))               \\\n-        || DECL_INITIAL (DECL))                                         \\\n+    const char *xname = NAME;\t\t\t\t\t\t\\\n+    if (GET_CODE (XEXP (DECL_RTL (DECL), 0)) != SYMBOL_REF)\t\t\\\n+      xname = IDENTIFIER_POINTER (DECL_NAME (DECL));\t\t\t\\\n+    if ((TREE_STATIC (DECL)\t\t\t\t\t\t\\\n+\t && (!DECL_COMMON (DECL) || !TREE_PUBLIC (DECL)))\t\t\\\n+        || DECL_INITIAL (DECL))\t\t\t\t\t\t\\\n+      machopic_define_name (xname);\t\t\t\t\t\\\n+    if ((TREE_STATIC (DECL)\t\t\t\t\t\t\\\n+\t && (!DECL_COMMON (DECL) || !TREE_PUBLIC (DECL)))\t\t\\\n+        || DECL_INITIAL (DECL))\t\t\t\t\t\t\\\n       (* targetm.encode_section_info) (DECL, DECL_RTL (DECL), false);\t\\\n-    ASM_OUTPUT_LABEL (FILE, xname);                                     \\\n+    ASM_OUTPUT_LABEL (FILE, xname);\t\t\t\t\t\\\n+    /* Darwin doesn't support zero-size objects, so give them a \t\\\n+       byte.  */\t\t\t\t\t\t\t\\\n+    if (tree_low_cst (DECL_SIZE_UNIT (DECL), 1) == 0)\t\t\t\\\n+      assemble_zeros (1);\t\t\t\t\t\t\\\n   } while (0)\n \n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)                     \\\n@@ -389,6 +393,15 @@ do { text_section ();\t\t\t\t\t\t\t\\\n     machopic_output_possible_stub_label (FILE, xname);\t\t\t\\\n   } while (0)\n \n+#define ASM_DECLARE_CONSTANT_NAME(FILE, NAME, EXP, SIZE)\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\\\n+    /* Darwin doesn't support zero-size objects, so give them a\t\\\n+       byte.  */\t\t\t\t\t\t\\\n+    if ((SIZE) == 0)\t\t\t\t\t\t\\\n+      assemble_zeros (1);\t\t\t\t\t\\\n+  } while (0)\n+\n /* Wrap new method names in quotes so the assembler doesn't gag.\n    Make Objective-C internal symbols local.  */\n "}, {"sha": "3f9dd15d7dabe186a82c447bd6c5f6cbca1efba5", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=18f3e349aa03695bd162d43ac746402aae315096", "patch": "@@ -6634,6 +6634,22 @@ You may wish to use @code{ASM_OUTPUT_TYPE_DIRECTIVE} and/or\n @code{ASM_OUTPUT_SIZE_DIRECTIVE} in the definition of this macro.\n @end defmac\n \n+@defmac ASM_DECLARE_CONSTANT_NAME (@var{stream}, @var{name}, @var{exp}, @var{size})\n+A C statement (sans semicolon) to output to the stdio stream\n+@var{stream} any text necessary for declaring the name @var{name} of a\n+constant which is being defined.  This macro is responsible for\n+outputting the label definition (perhaps using\n+@code{ASM_OUTPUT_LABEL}).  The argument @var{exp} is the\n+value of the constant, and @var{size} is the size of the constant\n+in bytes.  @var{name} will be an internal label.\n+\n+If this macro is not defined, then the @var{name} is defined in the\n+usual manner as a label (by means of @code{ASM_OUTPUT_LABEL}).\n+\n+You may wish to use @code{ASM_OUTPUT_TYPE_DIRECTIVE} in the definition\n+of this macro.\n+@end defmac\n+\n @defmac ASM_DECLARE_REGISTER_GLOBAL (@var{stream}, @var{decl}, @var{regno}, @var{name})\n A C statement (sans semicolon) to output to the stdio stream\n @var{stream} any text necessary for claiming a register @var{regno}"}, {"sha": "c06df55a540dca31afd8d5b83494a21575067a7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18f3e349aa03695bd162d43ac746402aae315096", "patch": "@@ -1,3 +1,7 @@\n+2003-07-26  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.c-torture/compile/zero-strct-2.c: New test.\n+\n 2003-07-25  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/intermod-1.c: New test."}, {"sha": "0f97f7d12b269b15a36feac447d962a6ffd74e5c", "filename": "gcc/testsuite/gcc.c-torture/compile/zero-strct-2.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fzero-strct-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fzero-strct-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fzero-strct-2.c?ref=18f3e349aa03695bd162d43ac746402aae315096", "patch": "@@ -0,0 +1,2 @@\n+struct { } foo = { };\n+void * bar(void) { return &foo; }"}, {"sha": "c9dae8954b742f61821803a376445ec356fd6e37", "filename": "gcc/varasm.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18f3e349aa03695bd162d43ac746402aae315096/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=18f3e349aa03695bd162d43ac746402aae315096", "patch": "@@ -2547,6 +2547,7 @@ output_constant_def_contents (rtx symbol)\n {\n   tree exp = SYMBOL_REF_DECL (symbol);\n   const char *label = XSTR (symbol, 0);\n+  HOST_WIDE_INT size;\n \n   /* Make sure any other constants whose addresses appear in EXP\n      are assigned label numbers.  */\n@@ -2571,17 +2572,20 @@ output_constant_def_contents (rtx symbol)\n       ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n     }\n \n-  /* Output the label itself.  */\n+  size = int_size_in_bytes (TREE_TYPE (exp));\n+  if (TREE_CODE (exp) == STRING_CST)\n+    size = MAX (TREE_STRING_LENGTH (exp), size);\n+\n+  /* Do any machine/system dependent processing of the constant.  */\n+#ifdef ASM_DECLARE_CONSTANT_NAME\n+  ASM_DECLARE_CONSTANT_NAME (asm_out_file, label, exp, size);\n+#else\n+  /* Standard thing is just output label for the constant.  */\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n+#endif /* ASM_DECLARE_CONSTANT_NAME */\n \n   /* Output the value of EXP.  */\n-  output_constant (exp,\n-\t\t   (TREE_CODE (exp) == STRING_CST\n-\t\t    ? MAX (TREE_STRING_LENGTH (exp),\n-\t\t\t   int_size_in_bytes (TREE_TYPE (exp)))\n-\t\t    : int_size_in_bytes (TREE_TYPE (exp))),\n-\t\t   align);\n-\n+  output_constant (exp, size, align);\n }\n \n /* A constant which was deferred in its original location has been"}]}