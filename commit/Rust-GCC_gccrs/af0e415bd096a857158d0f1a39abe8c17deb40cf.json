{"sha": "af0e415bd096a857158d0f1a39abe8c17deb40cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYwZTQxNWJkMDk2YTg1NzE1OGQwZjFhMzlhYmU4YzE3ZGViNDBjZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-05-16T21:41:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-05-16T21:41:26Z"}, "message": "driver-i386.c (host_detect_local_cpu): Determine cache parameters using detect_caches_amd also for CYRIX...\n\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Determine\n\tcache parameters using detect_caches_amd also for CYRIX,\n\tNSC and TM2 signatures.\n\nFrom-SVN: r198989", "tree": {"sha": "443dcb5420eacd7ba204787d7ec318ed029ff899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/443dcb5420eacd7ba204787d7ec318ed029ff899"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af0e415bd096a857158d0f1a39abe8c17deb40cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af0e415bd096a857158d0f1a39abe8c17deb40cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af0e415bd096a857158d0f1a39abe8c17deb40cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af0e415bd096a857158d0f1a39abe8c17deb40cf/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "749dee7e60df58dea8e780134c641a9f67b9fe18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749dee7e60df58dea8e780134c641a9f67b9fe18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749dee7e60df58dea8e780134c641a9f67b9fe18"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "39f8615bd49909c37a40ae02a096f8eb3b43fefb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af0e415bd096a857158d0f1a39abe8c17deb40cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af0e415bd096a857158d0f1a39abe8c17deb40cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af0e415bd096a857158d0f1a39abe8c17deb40cf", "patch": "@@ -1,3 +1,9 @@\n+2013-05-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Determine\n+\tcache parameters using detect_caches_amd also for CYRIX,\n+\tNSC and TM2 signatures.\n+\n 2013-05-16  Uros Bizjak  <ubizjak@gmail.com>\n \t    Dzianis Kahanovich  <mahatma@eu.by>\n "}, {"sha": "49db3bea4f7128faa04ef636b91157c9642e8411", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af0e415bd096a857158d0f1a39abe8c17deb40cf/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af0e415bd096a857158d0f1a39abe8c17deb40cf/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=af0e415bd096a857158d0f1a39abe8c17deb40cf", "patch": "@@ -518,7 +518,10 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   if (!arch)\n     {\n       if (vendor == signature_AMD_ebx\n-\t  || vendor == signature_CENTAUR_ebx)\n+\t  || vendor == signature_CENTAUR_ebx\n+\t  || vendor == signature_CYRIX_ebx\n+\t  || vendor == signature_NSC_ebx\n+\t  || vendor == signature_TM2_ebx)\n \tcache = detect_caches_amd (ext_level);\n       else if (vendor == signature_INTEL_ebx)\n \t{\n@@ -565,8 +568,9 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n     {\n       if (arch)\n \t{\n-\t  if (family == 6)\n+\t  switch (family)\n \t    {\n+\t    case 6:\n \t      if (model > 9)\n \t\t/* Use the default detection procedure.  */\n \t\tprocessor = PROCESSOR_GENERIC32;\n@@ -575,16 +579,20 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t      else if (model >= 6)\n \t\tcpu = \"c3\";\n \t      else\n-\t\t/* We have no idea.  */\n \t\tprocessor = PROCESSOR_GENERIC32;\n+\t      break;\n+\t    case 5:\n+\t      if (has_3dnow)\n+\t\tcpu = \"winchip2\";\n+\t      else if (has_mmx)\n+\t\tcpu = \"winchip2-c6\";\n+\t      else\n+\t\tprocessor = PROCESSOR_GENERIC32;\n+\t      break;\n+\t    default:\n+\t      /* We have no idea.  */\n+\t      processor = PROCESSOR_GENERIC32;\n \t    }\n-\t  else if (has_3dnow)\n-\t    cpu = \"winchip2\";\n-\t  else if (has_mmx)\n-\t    cpu = \"winchip2-c6\";\n-\t  else\n-\t    /* We have no idea.  */\n-\t    processor = PROCESSOR_GENERIC32;\n \t}\n     }\n   else"}]}