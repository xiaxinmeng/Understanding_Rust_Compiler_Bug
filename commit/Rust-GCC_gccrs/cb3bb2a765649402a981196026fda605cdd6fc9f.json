{"sha": "cb3bb2a765649402a981196026fda605cdd6fc9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IzYmIyYTc2NTY0OTQwMmE5ODExOTYwMjZmZGE2MDVjZGQ2ZmM5Zg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-09-22T01:28:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-22T01:28:22Z"}, "message": "cse.c (simplify_relational_operation): Set h0u just like h0s.\n\n        * cse.c (simplify_relational_operation): Set h0u just like h0s.\n        Similarly for h1u and h1s.\n\nFrom-SVN: r15616", "tree": {"sha": "ca8b1edb1d99a8a28331458f9d95e77b1e08dcad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca8b1edb1d99a8a28331458f9d95e77b1e08dcad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb3bb2a765649402a981196026fda605cdd6fc9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3bb2a765649402a981196026fda605cdd6fc9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3bb2a765649402a981196026fda605cdd6fc9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3bb2a765649402a981196026fda605cdd6fc9f/comments", "author": null, "committer": null, "parents": [{"sha": "2a1777af229bc5e9e738fd5bb8285ac0c1e24a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1777af229bc5e9e738fd5bb8285ac0c1e24a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1777af229bc5e9e738fd5bb8285ac0c1e24a7d"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "5906f14672d47ebebe0b1f0ea094a347e6bbf529", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3bb2a765649402a981196026fda605cdd6fc9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3bb2a765649402a981196026fda605cdd6fc9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb3bb2a765649402a981196026fda605cdd6fc9f", "patch": "@@ -1,5 +1,8 @@\n Sun Sep 21 17:45:45 1997  Jeffrey A Law  (law@cygnus.com)\n \n+\t* cse.c (simplify_relational_operation): Set h0u just like h0s.\n+\tSimilarly for h1u and h1s.\n+\n \t* jump.c (jmp_uses_reg_or_mem): Deleted unused function.\n \t(find_basic_blocks): Use computed_jump_p to determine if a\n \tparticular JUMP_INSN is a computed jump."}, {"sha": "e35a814b3208dd04f937b574457aecfbb15614d4", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3bb2a765649402a981196026fda605cdd6fc9f/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3bb2a765649402a981196026fda605cdd6fc9f/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=cb3bb2a765649402a981196026fda605cdd6fc9f", "patch": "@@ -4482,14 +4482,7 @@ simplify_relational_operation (code, mode, op0, op1)\n       else\n \t{\n \t  l0u = l0s = INTVAL (op0);\n-\t  h0s = l0s < 0 ? -1 : 0;\n-\t  /* If WIDTH is nonzero and larger than HOST_BITS_PER_WIDE_INT,\n-\t     then the high word is derived from the sign bit of the low\n-\t     word, else the high word is zero.  */\n-\t  if (width != 0 && width > HOST_BITS_PER_WIDE_INT)\n-\t    h0u = l0s < 0 ? -1 : 0;\n-\t  else\n-\t    h0u = 0;\n+\t  h0u = h0s = l0s < 0 ? -1 : 0;\n \t}\n \t  \n       if (GET_CODE (op1) == CONST_DOUBLE)\n@@ -4500,14 +4493,7 @@ simplify_relational_operation (code, mode, op0, op1)\n       else\n \t{\n \t  l1u = l1s = INTVAL (op1);\n-\t  h1s = l1s < 0 ? -1 : 0;\n-\t  /* If WIDTH is nonzero and larger than HOST_BITS_PER_WIDE_INT,\n-\t     then the high word is derived from the sign bit of the low\n-\t     word, else the high word is zero.  */\n-\t  if (width != 0 && width > HOST_BITS_PER_WIDE_INT)\n-\t    h1u = l1s < 0 ? -1 : 0;\n-\t  else\n-\t    h1u = 0;\n+\t  h1u = h1s = l1s < 0 ? -1 : 0;\n \t}\n \n       /* If WIDTH is nonzero and smaller than HOST_BITS_PER_WIDE_INT,"}]}