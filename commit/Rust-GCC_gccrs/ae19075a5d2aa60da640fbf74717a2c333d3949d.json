{"sha": "ae19075a5d2aa60da640fbf74717a2c333d3949d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxOTA3NWE1ZDJhYTYwZGE2NDBmYmY3NDcxN2EyYzMzM2QzOTQ5ZA==", "commit": {"author": {"name": "Bilyan Borisov", "email": "bilyan.borisov@arm.com", "date": "2016-01-25T11:32:07Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-01-25T11:32:07Z"}, "message": "[AARCH64][ACLE][NEON] Implement vcvt*_s64_f64 and vcvt*_u64_f64 NEON intrinsics.\n\ngcc/\n\n\t* config/aarch64/arm_neon.h (vcvt_s64_f64): New intrinsic.\n\t(vcvt_u64_f64): Likewise.\n\t(vcvta_s64_f64): Likewise.\n\t(vcvta_u64_f64): Likewise.\n\t(vcvtm_s64_f64): Likewise.\n\t(vcvtm_u64_f64): Likewise.\n\t(vcvtn_s64_f64): Likewise.\n\t(vcvtn_u64_f64): Likewise.\n\t(vcvtp_s64_f64): Likewise.\n\t(vcvtp_u64_f64): Likewise.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/simd/vcvt_s64_f64_1.c: New.\n\t* gcc.target/aarch64/simd/vcvt_u64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvta_s64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvta_u64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvtm_s64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvtm_u64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvtn_s64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvtn_u64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvtp_s64_f64_1.c: Likewise.\n\t* gcc.target/aarch64/simd/vcvtp_u64_f64_1.c: Likewise.\n\nFrom-SVN: r232789", "tree": {"sha": "1725537aa43c4fb2ef9ee75ac0efbedf6b571349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1725537aa43c4fb2ef9ee75ac0efbedf6b571349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae19075a5d2aa60da640fbf74717a2c333d3949d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae19075a5d2aa60da640fbf74717a2c333d3949d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae19075a5d2aa60da640fbf74717a2c333d3949d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae19075a5d2aa60da640fbf74717a2c333d3949d/comments", "author": null, "committer": null, "parents": [{"sha": "d34a0fdc03bf55b287d884a9138e3965387af4b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d34a0fdc03bf55b287d884a9138e3965387af4b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d34a0fdc03bf55b287d884a9138e3965387af4b1"}], "stats": {"total": 306, "additions": 306, "deletions": 0}, "files": [{"sha": "96ec9f53ae4c2423a41ee28ec44ad5603571cde8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -1,3 +1,16 @@\n+2016-01-25  Bilyan Borisov  <bilyan.borisov@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vcvt_s64_f64): New intrinsic.\n+\t(vcvt_u64_f64): Likewise.\n+\t(vcvta_s64_f64): Likewise.\n+\t(vcvta_u64_f64): Likewise.\n+\t(vcvtm_s64_f64): Likewise.\n+\t(vcvtm_u64_f64): Likewise.\n+\t(vcvtn_s64_f64): Likewise.\n+\t(vcvtn_u64_f64): Likewise.\n+\t(vcvtp_s64_f64): Likewise.\n+\t(vcvtp_u64_f64): Likewise.\n+\n 2016-01-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (TARGET_DWARF_REGISTER_SPAN): Define."}, {"sha": "2612a325718918cf7cd808f28c09c9c4c7b11c07", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -13218,6 +13218,18 @@ vcvtq_u32_f32 (float32x4_t __a)\n   return __builtin_aarch64_lbtruncuv4sfv4si_us (__a);\n }\n \n+__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+vcvt_s64_f64 (float64x1_t __a)\n+{\n+  return (int64x1_t) {vcvtd_s64_f64 (__a[0])};\n+}\n+\n+__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n+vcvt_u64_f64 (float64x1_t __a)\n+{\n+  return (uint64x1_t) {vcvtd_u64_f64 (__a[0])};\n+}\n+\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vcvtq_s64_f64 (float64x2_t __a)\n {\n@@ -13280,6 +13292,18 @@ vcvtaq_u32_f32 (float32x4_t __a)\n   return __builtin_aarch64_lrounduv4sfv4si_us (__a);\n }\n \n+__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+vcvta_s64_f64 (float64x1_t __a)\n+{\n+  return (int64x1_t) {vcvtad_s64_f64 (__a[0])};\n+}\n+\n+__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n+vcvta_u64_f64 (float64x1_t __a)\n+{\n+  return (uint64x1_t) {vcvtad_u64_f64 (__a[0])};\n+}\n+\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vcvtaq_s64_f64 (float64x2_t __a)\n {\n@@ -13342,6 +13366,18 @@ vcvtmq_u32_f32 (float32x4_t __a)\n   return __builtin_aarch64_lflooruv4sfv4si_us (__a);\n }\n \n+__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+vcvtm_s64_f64 (float64x1_t __a)\n+{\n+  return (int64x1_t) {vcvtmd_s64_f64 (__a[0])};\n+}\n+\n+__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n+vcvtm_u64_f64 (float64x1_t __a)\n+{\n+  return (uint64x1_t) {vcvtmd_u64_f64 (__a[0])};\n+}\n+\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vcvtmq_s64_f64 (float64x2_t __a)\n {\n@@ -13404,6 +13440,18 @@ vcvtnq_u32_f32 (float32x4_t __a)\n   return __builtin_aarch64_lfrintnuv4sfv4si_us (__a);\n }\n \n+__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+vcvtn_s64_f64 (float64x1_t __a)\n+{\n+  return (int64x1_t) {vcvtnd_s64_f64 (__a[0])};\n+}\n+\n+__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n+vcvtn_u64_f64 (float64x1_t __a)\n+{\n+  return (uint64x1_t) {vcvtnd_u64_f64 (__a[0])};\n+}\n+\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vcvtnq_s64_f64 (float64x2_t __a)\n {\n@@ -13466,6 +13514,18 @@ vcvtpq_u32_f32 (float32x4_t __a)\n   return __builtin_aarch64_lceiluv4sfv4si_us (__a);\n }\n \n+__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+vcvtp_s64_f64 (float64x1_t __a)\n+{\n+  return (int64x1_t) {vcvtpd_s64_f64 (__a[0])};\n+}\n+\n+__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n+vcvtp_u64_f64 (float64x1_t __a)\n+{\n+  return (uint64x1_t) {vcvtpd_u64_f64 (__a[0])};\n+}\n+\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vcvtpq_s64_f64 (float64x2_t __a)\n {"}, {"sha": "e91ae134af3edb2009c3de445c2d673f7b5ebd3d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -1,3 +1,16 @@\n+2016-01-25  Bilyan Borisov  <bilyan.borisov@arm.com>\n+\n+\t* gcc.target/aarch64/simd/vcvt_s64_f64_1.c: New.\n+\t* gcc.target/aarch64/simd/vcvt_u64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvta_s64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvta_u64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvtm_s64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvtm_u64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvtn_s64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvtn_u64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvtp_s64_f64_1.c: Likewise.\n+\t* gcc.target/aarch64/simd/vcvtp_u64_f64_1.c: Likewise.\n+\n 2016-01-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69376"}, {"sha": "02f59fc7e58c988141f8f00c8866c71f2d5d660b", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvt_s64_f64_1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvt_s64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvt_s64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvt_s64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  int64x1_t b1 = vcvt_s64_f64 (a);\n+\n+  if (b1[0] != 0)\n+    abort ();\n+\n+  volatile float64x1_t a2 = {-0.5};\n+  int64x1_t b2 = vcvt_s64_f64 (a2);\n+\n+  if (b2[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtzs\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "089cc793a372b20f7657a9aa9742f3f335149fb3", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvt_u64_f64_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvt_u64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvt_u64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvt_u64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  uint64x1_t b1 = vcvt_u64_f64 (a);\n+\n+  if (b1[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtzu\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "d5cd5bb77360b3470746539cd586edf80e8879b0", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvta_s64_f64_1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvta_s64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvta_s64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvta_s64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  int64x1_t b1 = vcvta_s64_f64 (a);\n+\n+  if (b1[0] != 1)\n+    abort ();\n+\n+  volatile float64x1_t a2 = {-0.5};\n+  int64x1_t b2 = vcvta_s64_f64 (a2);\n+\n+  if (b2[0] != -1)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtas\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "aaddfa0604c33b947d3c79d538b295d08b54124c", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvta_u64_f64_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvta_u64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvta_u64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvta_u64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  uint64x1_t b1 = vcvta_u64_f64 (a);\n+\n+  if (b1[0] != 1)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtau\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "a24b737dc3fd46fea2c04b32a53e544914a53a6f", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvtm_s64_f64_1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtm_s64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtm_s64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtm_s64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  int64x1_t b1 = vcvtm_s64_f64 (a);\n+\n+  if (b1[0] != 0)\n+    abort ();\n+\n+  volatile float64x1_t a2 = {-0.5};\n+  int64x1_t b2 = vcvtm_s64_f64 (a2);\n+\n+  if (b2[0] != -1)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtms\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "0f2751cf29bc6a9c81ed760a014e525f52ade730", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvtm_u64_f64_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtm_u64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtm_u64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtm_u64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  uint64x1_t b1 = vcvtm_u64_f64 (a);\n+\n+  if (b1[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtmu\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "4a312db906a1bc4cac29abc136e7123a54300865", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvtn_s64_f64_1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtn_s64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtn_s64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtn_s64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  int64x1_t b1 = vcvtn_s64_f64 (a);\n+\n+  if (b1[0] != 0)\n+    abort ();\n+\n+  volatile float64x1_t a2 = {-0.5};\n+  int64x1_t b2 = vcvtn_s64_f64 (a2);\n+\n+  if (b2[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtns\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "823834c72ef656c86d208ef0d534e1aa8c7290a2", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvtn_u64_f64_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtn_u64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtn_u64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtn_u64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  uint64x1_t b1 = vcvtn_u64_f64 (a);\n+\n+  if (b1[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtnu\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "3ff80e292c973f27b66b81d3ffa12d76b4402dcb", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvtp_s64_f64_1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtp_s64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtp_s64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtp_s64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  int64x1_t b1 = vcvtp_s64_f64 (a);\n+\n+  if (b1[0] != 1)\n+    abort ();\n+\n+  volatile float64x1_t a2 = {-0.5};\n+  int64x1_t b2 = vcvtp_s64_f64 (a2);\n+\n+  if (b2[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtps\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}, {"sha": "6346ce5e6b3cc78911a86e422a0a0fa741c1dbb7", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcvtp_u64_f64_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtp_u64_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae19075a5d2aa60da640fbf74717a2c333d3949d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtp_u64_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcvtp_u64_f64_1.c?ref=ae19075a5d2aa60da640fbf74717a2c333d3949d", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort ();\n+\n+int\n+main()\n+{\n+  volatile float64x1_t a = {0.5};\n+  uint64x1_t b1 = vcvtp_u64_f64 (a);\n+\n+  if (b1[0] != 1)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-assembler \"fcvtpu\\[ \\t\\]+\\[xX\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" } } */"}]}