{"sha": "6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkNzg5NWFjMjNhYzk3MWEyZjNkZTllNzg5OWE1Mzg5ZWMyMWE3Yw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-08-01T02:28:43Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-08-01T02:28:43Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r44528", "tree": {"sha": "6496ff51752066c862a5e55102eb82d5d6a55b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6496ff51752066c862a5e55102eb82d5d6a55b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/comments", "author": null, "committer": null, "parents": [{"sha": "b24a9e88395d563e90e7956f2b1cb8504db43511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24a9e88395d563e90e7956f2b1cb8504db43511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24a9e88395d563e90e7956f2b1cb8504db43511"}], "stats": {"total": 73, "additions": 55, "deletions": 18}, "files": [{"sha": "aae0db0f68bf29155c8610131737e5a67089f124", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -1,3 +1,19 @@\n+2001-07-31  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* expr.c (safe_from_p): Use WITH_CLEANUP_EXPR_RTL instead of\n+\tRTL_EXPR_RTL while handling WITH_CLEANUP_EXPR nodes. Fixed typo in\n+\tcomment.\n+\t(expand_expr): Use WITH_CLEANUP_EXPR_RTL instead of RTL_EXPR_RTL\n+\twhile handling WITH_CLEANUP_EXPR node. Use second operand calling\n+\texpand_decl_cleanup.\n+\t* tree.c (firt_rtl_op): The third operand of WITH_CLEANUP_EXPR is\n+\tthe first RTX.\n+\t(simple_cst_equal): WITH_CLEANUP_EXPR node to use its second\n+\toperand while calling simple_cst_equal.\n+\t* tree.def (WITH_CLEANUP_EXPR): Switched operands: the second\n+\toperand is the cleanup expression, the third is the RTL_EXPR.\n+\t* tree.h (WITH_CLEANUP_EXPR_RTL): New macro.\t\n+\n 2001-07-31  Jeff Sturm  <jsturm@one-point.com>\n \n         * except.c (duplicate_eh_regions): Test n_array[i] for NULL."}, {"sha": "393da2e43322384baa4acf8f6dda276d9bfb5aa2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -1,3 +1,8 @@\n+2001-07-31  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* tree.c (cp_tree_equal): WITH_CLEANUP_EXPR node to use its second\n+\toperand while calling cp_tree_equal.\n+\n 2001-07-31  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tThe 3.0 ABI no longer has vbase pointer fields."}, {"sha": "348942c29ea561bd539c81f757c2098f030082ab", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -1958,7 +1958,7 @@ cp_tree_equal (t1, t2)\n       cmp = cp_tree_equal (TREE_OPERAND (t1, 0), TREE_OPERAND (t2, 0));\n       if (cmp <= 0)\n \treturn cmp;\n-      return cp_tree_equal (TREE_OPERAND (t1, 2), TREE_OPERAND (t1, 2));\n+      return cp_tree_equal (TREE_OPERAND (t1, 1), TREE_OPERAND (t1, 1));\n \n     case COMPONENT_REF:\n       if (TREE_OPERAND (t1, 1) == TREE_OPERAND (t2, 1))"}, {"sha": "80f73f854dcd2dcf06730257db3f9595c1bd1526", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -5858,7 +5858,7 @@ safe_from_p (x, exp, top_p)\n \t  break;\n \n \tcase WITH_CLEANUP_EXPR:\n-\t  exp_rtl = RTL_EXPR_RTL (exp);\n+\t  exp_rtl = WITH_CLEANUP_EXPR_RTL (exp);\n \t  break;\n \n \tcase CLEANUP_POINT_EXPR:\n@@ -6452,7 +6452,7 @@ expand_expr (exp, target, tmode, modifier)\n \tlineno = EXPR_WFL_LINENO (exp);\n \tif (EXPR_WFL_EMIT_LINE_NOTE (exp))\n \t  emit_line_note (input_filename, lineno);\n-\t/* Possibly avoid switching back and force here.  */\n+\t/* Possibly avoid switching back and forth here.  */\n \tto_return = expand_expr (EXPR_WFL_NODE (exp), target, tmode, modifier);\n \tinput_filename = saved_input_filename;\n \tlineno = saved_lineno;\n@@ -7376,16 +7376,16 @@ expand_expr (exp, target, tmode, modifier)\n       }\n \n     case WITH_CLEANUP_EXPR:\n-      if (RTL_EXPR_RTL (exp) == 0)\n+      if (WITH_CLEANUP_EXPR_RTL (exp) == 0)\n \t{\n-\t  RTL_EXPR_RTL (exp)\n+\t  WITH_CLEANUP_EXPR_RTL (exp)\n \t    = expand_expr (TREE_OPERAND (exp, 0), target, tmode, ro_modifier);\n-\t  expand_decl_cleanup (NULL_TREE, TREE_OPERAND (exp, 2));\n+\t  expand_decl_cleanup (NULL_TREE, TREE_OPERAND (exp, 1));\n \n \t  /* That's it for this cleanup.  */\n-\t  TREE_OPERAND (exp, 2) = 0;\n+\t  TREE_OPERAND (exp, 1) = 0;\n \t}\n-      return RTL_EXPR_RTL (exp);\n+      return WITH_CLEANUP_EXPR_RTL (exp);\n \n     case CLEANUP_POINT_EXPR:\n       {"}, {"sha": "69f5705516216178692b5cf3d80dfc5995019a1c", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -1,3 +1,16 @@\n+2001-07-31  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* check-init.c (check_init): WITH_CLEANUP_EXPR node to use its\n+\tsecond operand calling check_init.\n+\t* decl.c (complete_start_java_method): Swaped second and third\n+\targuments while creating WITH_CLEANUP_EXPR node.\n+\t* jcf-write.c (generate_bytecode_insns): Use second operand\n+\tinstead of third when handling WITH_CLEANUP_EXPR.\n+\t* parse.y (java_complete_lhs): Expand second operand of\n+\tWITH_CLEANUP_EXPR nodes.\n+\t(patch_synchronized_statement): Swaped second and third arguments\n+\twhile creating WITH_CLEANUP_EXPR node.\n+\n 2001-07-18  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* parse.y (create_interface): Avoid cyclic inheritance report when"}, {"sha": "0e340dd85416a3a0c5d299eb6efd6216bae4954c", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -537,7 +537,7 @@ check_init (exp, before)\n #endif\n \tcheck_init (TREE_OPERAND (exp, 0), before);\n \tUNION (alt->combined, alt->combined, before);\n-\tcheck_init (TREE_OPERAND (exp, 2), alt->combined);\n+\tcheck_init (TREE_OPERAND (exp, 1), alt->combined);\n \treturn;\n       }\n "}, {"sha": "3b856db50d87f186c15c0b98b3c6dd2955118bc0", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -1738,7 +1738,7 @@ complete_start_java_method (fndecl)\n \t  tree function_body = DECL_FUNCTION_BODY (fndecl);\n \t  tree body = BLOCK_EXPR_BODY (function_body);\n \t  lock = build (WITH_CLEANUP_EXPR, void_type_node,\n-\t\t\tenter,  NULL_TREE, exit);\n+\t\t\tenter, exit, NULL_TREE);\n \t  TREE_SIDE_EFFECTS (lock) = 1;\n \t  lock = build (COMPOUND_EXPR, TREE_TYPE (body), lock, body);\n \t  TREE_SIDE_EFFECTS (lock) = 1;"}, {"sha": "ca453c8edd9b96483d947886d86728aad2679276", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -2293,7 +2293,7 @@ generate_bytecode_insns (exp, target, state)\n \tlabel->next = state->labeled_blocks;\n \tstate->labeled_blocks = label;\n \tstate->num_finalizers++;\n-\tlabel->u.labeled_block = TREE_OPERAND (exp, 2);\n+\tlabel->u.labeled_block = TREE_OPERAND (exp, 1);\n \tlabel->v.start_label = get_jcf_label_here (state);\n \tif (target != IGNORE_TARGET)\n \t  abort ();"}, {"sha": "05be63314a8f256f05053c1e4a173184c6e59802", "filename": "gcc/java/parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -11326,7 +11326,7 @@ java_complete_lhs (node)\n \n     case WITH_CLEANUP_EXPR:\n       COMPLETE_CHECK_OP_0 (node);\n-      COMPLETE_CHECK_OP_2 (node);\n+      COMPLETE_CHECK_OP_1 (node);\n       CAN_COMPLETE_NORMALLY (node) = \n \tCAN_COMPLETE_NORMALLY (TREE_OPERAND (node, 0));\n       TREE_TYPE (node) = void_type_node;\n@@ -15326,7 +15326,7 @@ patch_synchronized_statement (node, wfl_op1)\n \t\t\tbuild (WITH_CLEANUP_EXPR, NULL_TREE,\n \t\t\t       build (COMPOUND_EXPR, NULL_TREE,\n \t\t\t\t      assignment, enter),\n-\t\t\t       NULL_TREE, exit),\n+\t\t\t       exit, NULL_TREE),\n \t\t\tblock));\n   node = build_expr_block (node, expr_decl);\n "}, {"sha": "9ce19057b6aae3e7b712f1fffbe277a180329eac", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -1628,8 +1628,7 @@ first_rtl_op (code)\n     case RTL_EXPR:\n       return 0;\n     case WITH_CLEANUP_EXPR:\n-      /* Should be defined to be 2.  */\n-      return 1;\n+      return 2;\n     case METHOD_CALL_EXPR:\n       return 3;\n     default:\n@@ -3679,7 +3678,7 @@ simple_cst_equal (t1, t2)\n       if (cmp <= 0)\n \treturn cmp;\n \n-      return simple_cst_equal (TREE_OPERAND (t1, 2), TREE_OPERAND (t1, 2));\n+      return simple_cst_equal (TREE_OPERAND (t1, 1), TREE_OPERAND (t1, 1));\n \n     case COMPONENT_REF:\n       if (TREE_OPERAND (t1, 1) == TREE_OPERAND (t2, 1))"}, {"sha": "84801e674fd2ac87fd0aec73bcad1ae6e1a7a140", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -472,8 +472,8 @@ DEFTREECODE (METHOD_CALL_EXPR, \"method_call_expr\", 'e', 4)\n \n /* Specify a value to compute along with its corresponding cleanup.\n    Operand 0 argument is an expression whose value needs a cleanup.\n-   Operand 1 is an RTL_EXPR which will eventually represent that value.\n-   Operand 2 is the cleanup expression for the object.\n+   Operand 1 is the cleanup expression for the object.\n+   Operand 2 is an RTL_EXPR which will eventually represent that value.\n      The RTL_EXPR is used in this expression, which is how the expression\n      manages to act on the proper value.\n    The cleanup is executed by the first enclosing CLEANUP_POINT_EXPR, if"}, {"sha": "70143515808a91a307011a3988fd1683453102c4", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad7895ac23ac971a2f3de9e7899a5389ec21a7c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6ad7895ac23ac971a2f3de9e7899a5389ec21a7c", "patch": "@@ -792,6 +792,10 @@ struct tree_vec\n #define RTL_EXPR_SEQUENCE(NODE) (*(struct rtx_def **) &EXPR_CHECK (NODE)->exp.operands[0])\n #define RTL_EXPR_RTL(NODE) (*(struct rtx_def **) &EXPR_CHECK (NODE)->exp.operands[1])\n \n+/* In a WITH_CLEANUP_EXPR node.  */\n+#define WITH_CLEANUP_EXPR_RTL(NODE) \\\n+  (*(struct rtx_def **) &EXPR_CHECK (NODE)->exp.operands[2])\n+\n /* In a CONSTRUCTOR node.  */\n #define CONSTRUCTOR_ELTS(NODE) TREE_OPERAND (NODE, 1)\n "}]}