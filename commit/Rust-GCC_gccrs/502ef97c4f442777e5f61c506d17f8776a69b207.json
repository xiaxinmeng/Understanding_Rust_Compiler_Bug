{"sha": "502ef97c4f442777e5f61c506d17f8776a69b207", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAyZWY5N2M0ZjQ0Mjc3N2U1ZjYxYzUwNmQxN2Y4Nzc2YTY5YjIwNw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-25T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-25T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "5413d1cfef5a4830690ba068e46681bbb194b361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5413d1cfef5a4830690ba068e46681bbb194b361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/502ef97c4f442777e5f61c506d17f8776a69b207", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502ef97c4f442777e5f61c506d17f8776a69b207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502ef97c4f442777e5f61c506d17f8776a69b207", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502ef97c4f442777e5f61c506d17f8776a69b207/comments", "author": null, "committer": null, "parents": [{"sha": "61bfff562e3b6091d5a0a412a7d496bd523868a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61bfff562e3b6091d5a0a412a7d496bd523868a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61bfff562e3b6091d5a0a412a7d496bd523868a8"}], "stats": {"total": 137, "additions": 136, "deletions": 1}, "files": [{"sha": "c53b0cf18789d18fc4867a84fae115c0aa4bda30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1,3 +1,25 @@\n+2021-04-24  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tRevert:\n+\t2021-04-24  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/100152\n+\t* config/darwin.c (darwin_binds_local_p): Assume that any\n+\tpublic symbol might be interposed for PIC code. Update function\n+\theader comment to reflect current Darwin capability.\n+\n+2021-04-24  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/100152\n+\t* config/darwin.c (darwin_binds_local_p): Assume that any\n+\tpublic symbol might be interposed for PIC code. Update function\n+\theader comment to reflect current Darwin capability.\n+\n+2021-04-24  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* doc/sourcebuild.texi: Document no-opts and any-opts target\n+\tselectors.\n+\n 2021-04-23  YiFei Zhu  <zhuyifei1999@gmail.com>\n \n \t* config/bpf/bpf.h (ASM_OUTPUT_ALIGNED_BSS): Use .type and .lcomm."}, {"sha": "9c0494ed62b52ec34ee3f43a6265aaf02099465e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1 +1 @@\n-20210424\n+20210425"}, {"sha": "182bf78cf89af66c35d911d1012167e94040edff", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1,3 +1,9 @@\n+2021-04-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/100244\n+\t* sm-malloc.cc (free_of_non_heap::describe_state_change):\n+\tBulletproof against change.m_expr being NULL.\n+\n 2021-04-13  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/98599"}, {"sha": "b213029ac81f734c34b3253770efe2b1cbd3d521", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1,3 +1,20 @@\n+2021-04-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/89565\n+\tPR c++/93383\n+\tPR c++/95291\n+\tPR c++/99200\n+\tPR c++/99683\n+\t* pt.c (do_class_deduction): Punt if the initializer is\n+\ttype-dependent.\n+\n+2021-04-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/87709\n+\t* parser.c (cp_parser_type_id_1): If we see a template\n+\tplaceholder, first try simulating an error before issuing\n+\ta real error.\n+\n 2021-04-23  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/98767"}, {"sha": "ad6616187f851b3c78c949315fcd4782a42339f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1,3 +1,21 @@\n+2021-04-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100154\n+\t* check.c (variable_check): Allow function reference having a data\n+\tpointer result.\n+\t(arg_strlen_is_zero): New function.\n+\t(gfc_check_fgetputc_sub): Add static check of character and status\n+\targuments.\n+\t(gfc_check_fgetput_sub): Likewise.\n+\t* intrinsic.c (add_subroutines): Fix argument name for the\n+\tcharacter argument to intrinsic subroutines fget[c], fput[c].\n+\n+2021-04-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100218\n+\t* expr.c (gfc_check_vardef_context): Extend check to allow pointer\n+\tfrom a function reference.\n+\n 2021-04-22  Martin Liska  <mliska@suse.cz>\n \n \tPR testsuite/100159"}, {"sha": "732f442a6fdd8782018842dff8a33eea13794f1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1,3 +1,70 @@\n+2021-04-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/100244\n+\t* g++.dg/analyzer/pr100244.C: New test.\n+\n+2021-04-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100154\n+\t* gfortran.dg/pr100154.f90: New test.\n+\n+2021-04-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100218\n+\t* gfortran.dg/ptr-func-4.f90: New test.\n+\n+2021-04-24  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/guality/example.c: Update aarch64*-*-* xfails.\n+\t* gcc.dg/guality/guality.c: Likewise.\n+\t* gcc.dg/guality/inline-params.c: Likewise.\n+\t* gcc.dg/guality/loop-1.c: Likewise.\n+\t* gcc.dg/guality/pr36728-1.c: Likewise.\n+\t* gcc.dg/guality/pr36728-2.c: Likewise.\n+\t* gcc.dg/guality/pr36728-3.c: Likewise.\n+\t* gcc.dg/guality/pr41447-1.c: Likewise.\n+\t* gcc.dg/guality/pr54200.c:  Likewise.\n+\t* gcc.dg/guality/pr54519-1.c: Likewise.\n+\t* gcc.dg/guality/pr54519-2.c: Likewise.\n+\t* gcc.dg/guality/pr54519-3.c: Likewise.\n+\t* gcc.dg/guality/pr54519-4.c: Likewise.\n+\t* gcc.dg/guality/pr54519-5.c: Likewise.\n+\t* gcc.dg/guality/pr54519-6.c: Likewise.\n+\t* gcc.dg/guality/pr54693-2.c: Likewise.\n+\t* gcc.dg/guality/pr56154-1.c: Likewise.\n+\t* gcc.dg/guality/pr59776.c: Likewise.\n+\t* gcc.dg/guality/pr68860-1.c: Likewise.\n+\t* gcc.dg/guality/pr68860-2.c: Likewise.\n+\t* gcc.dg/guality/pr90074.c: Likewise.\n+\t* gcc.dg/guality/pr90716.c: Likewise.\n+\t* gcc.dg/guality/sra-1.c: Likewise.\n+\n+2021-04-24  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* lib/target-supports-dg.exp (selector_expression): Handle any-opts\n+\tand no-opts.\n+\t* gcc.dg/guality/pr41353-1.c: Exclude -O0 from xfail.\n+\t* gcc.dg/guality/pr59776.c: Likewise.\n+\t* gcc.dg/guality/pr54970.c: Likewise -O0 and -Og.\n+\n+2021-04-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/89565\n+\tPR c++/93383\n+\tPR c++/95291\n+\tPR c++/99200\n+\tPR c++/99683\n+\t* g++.dg/cpp2a/nontype-class39.C: Remove dg-ice directive.\n+\t* g++.dg/cpp2a/nontype-class45.C: New test.\n+\t* g++.dg/cpp2a/nontype-class46.C: New test.\n+\t* g++.dg/cpp2a/nontype-class47.C: New test.\n+\t* g++.dg/cpp2a/nontype-class48.C: New test.\n+\n+2021-04-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/87709\n+\t* g++.dg/cpp1z/class-deduction86.C: New test.\n+\n 2021-04-23  Michael Meissner  <meissner@linux.ibm.com>\n \n \tPR target/98952"}, {"sha": "eeab6a24214948eabc8cbd192c2d07e03948bf73", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502ef97c4f442777e5f61c506d17f8776a69b207/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502ef97c4f442777e5f61c506d17f8776a69b207/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=502ef97c4f442777e5f61c506d17f8776a69b207", "patch": "@@ -1,3 +1,8 @@\n+2021-04-24  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* testsuite/lib/dg-options.exp (atomic_link_flags): New.\n+\t(add_options_for_libatomic): Use atomic_link_flags.\n+\n 2021-04-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/100180"}]}