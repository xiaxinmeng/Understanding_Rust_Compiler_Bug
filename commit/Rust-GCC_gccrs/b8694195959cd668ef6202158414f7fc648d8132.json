{"sha": "b8694195959cd668ef6202158414f7fc648d8132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2OTQxOTU5NTljZDY2OGVmNjIwMjE1ODQxNGY3ZmM2NDhkODEzMg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1999-09-25T12:45:09Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-09-25T12:45:09Z"}, "message": "Tidy up assemble_variable()'s handling of uninitialised varaibles.\n\nFrom-SVN: r29661", "tree": {"sha": "8440497c1a5e85caac618d0c3a615a2fbfc3da14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8440497c1a5e85caac618d0c3a615a2fbfc3da14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8694195959cd668ef6202158414f7fc648d8132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8694195959cd668ef6202158414f7fc648d8132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8694195959cd668ef6202158414f7fc648d8132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8694195959cd668ef6202158414f7fc648d8132/comments", "author": null, "committer": null, "parents": [{"sha": "74d3e96a6006ec3be8b272893e8f5158a5e63b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d3e96a6006ec3be8b272893e8f5158a5e63b3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74d3e96a6006ec3be8b272893e8f5158a5e63b3e"}], "stats": {"total": 186, "additions": 121, "deletions": 65}, "files": [{"sha": "837e7c3aa75eb1dcba7c2dee91cfd99ecfb2c78f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8694195959cd668ef6202158414f7fc648d8132/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8694195959cd668ef6202158414f7fc648d8132/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8694195959cd668ef6202158414f7fc648d8132", "patch": "@@ -1,3 +1,16 @@\n+Sat Sep 25 13:42:15 1999  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* varasm.c (asm_emit_uninitialised): New function: Generate\n+\tthe assembler statements necessary to declare an uninitialised \n+\tvariable.\n+\t(ASM_EMIT_LOCAL): New macro: Emit a local, uninitialised\n+\tvariable.\n+\t(ASM_EMIT_BSS): New macro: Emit an entry in the bss section.\n+\t(ASM_EMIT_COMMON): New macro: Emit an entry in the common\n+\tsection.\n+\t(assemble_variable): Use asm_emit_uninitialised to emit an\n+\tuninitialised variable.\n+\n Fri Sep 24 17:10:56 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* combine.c (simplify_comparison): Cope with downshifting a 32 bit"}, {"sha": "0f9d36ae705999507396f3101e73df650f0799f0", "filename": "gcc/varasm.c", "status": "modified", "additions": 108, "deletions": 65, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8694195959cd668ef6202158414f7fc648d8132/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8694195959cd668ef6202158414f7fc648d8132/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=b8694195959cd668ef6202158414f7fc648d8132", "patch": "@@ -1197,6 +1197,112 @@ assemble_string (p, size)\n }\n \n \f\n+#if defined  ASM_OUTPUT_ALIGNED_DECL_LOCAL\n+#define ASM_EMIT_LOCAL(decl, name, size, rounded) \\\n+  ASM_OUTPUT_ALIGNED_DECL_LOCAL (asm_out_file, decl, name, size, DECL_ALIGN (decl))\n+#else\n+#if defined  ASM_OUTPUT_ALIGNED_LOCAL\n+#define ASM_EMIT_LOCAL(decl, name, size, rounded) \\\n+  ASM_OUTPUT_ALIGNED_LOCAL (asm_out_file, name, size, DECL_ALIGN (decl))\n+#else\n+#define ASM_EMIT_LOCAL(decl, name, size, rounded) \\\n+  ASM_OUTPUT_LOCAL (asm_out_file, name, size, rounded)\n+#endif\n+#endif\n+\n+#if defined ASM_OUTPUT_ALIGNED_BSS\n+#define ASM_EMIT_BSS(decl, name, size, rounded) \\\n+  ASM_OUTPUT_ALIGNED_BSS (asm_out_file, decl, name, size, DECL_ALIGN (decl))\n+#else\n+#if defined ASM_OUTPUT_BSS\n+#define ASM_EMIT_BSS(decl, name, size, rounded) \\\n+  ASM_OUTPUT_BSS (asm_out_file, decl, name, size, rounded)\n+#else\n+#undef  ASM_EMIT_BSS\n+#endif\n+#endif\n+\n+#if defined ASM_OUTPUT_ALIGNED_DECL_COMMON\n+#define ASM_EMIT_COMMON(decl, name, size, rounded) \\\n+  ASM_OUTPUT_ALIGNED_DECL_COMMON (asm_out_file, decl, name, size, DECL_ALIGN (decl))\n+#else\n+#if defined ASM_OUTPUT_ALIGNED_COMMON\n+#define ASM_EMIT_COMMON(decl, name, size, rounded) \\\n+  ASM_OUTPUT_ALIGNED_COMMON (asm_out_file, name, size, DECL_ALIGN (decl))\n+#else\n+#define ASM_EMIT_COMMON(decl, name, size, rounded) \\\n+  ASM_OUTPUT_COMMON (asm_out_file, name, size, rounded)\n+#endif\n+#endif\n+\n+static void\n+asm_emit_uninitialised (decl, name, size, rounded)\n+     tree decl;\n+     char * name;\n+     int size;\n+     int rounded;\n+{\n+  enum {\n+    asm_dest_common,\n+    asm_dest_bss,\n+    asm_dest_local\n+  }\n+  destination = asm_dest_local;\n+  \n+  if (TREE_PUBLIC (decl))\n+    {\n+#if defined ASM_EMIT_BSS\n+      if (! DECL_COMMON (decl))\n+\tdestination = asm_dest_bss;\n+      else\n+#endif      \n+\tdestination = asm_dest_common;\n+    }\n+\n+  if (flag_shared_data)\n+    {\n+      switch (destination)\n+\t{\n+#ifdef ASM_OUTPUT_SHARED_BSS\n+\tcase asm_dest_bss:\n+\t  ASM_OUTPUT_SHARED_BSS (asm_out_file, decl, name, size, rounded);\n+\t  return;\n+#endif\n+#ifdef ASM_OUTPUT_SHARED_COMMON\n+\tcase asm_dest_common:\n+\t  ASM_OUTPUT_SHARED_COMMON (asm_out_file, name, size, rounded);\n+\t  return;\n+#endif\n+#ifdef ASM_OUTPUT_SHARED_LOCAL\n+\tcase asm_dest_local:\n+\t  ASM_OUTPUT_SHARED_LOCAL (asm_out_file, name, size, rounded);\n+\t  return;\n+#endif\n+\tdefault:\n+\t  break;\n+\t}\n+    }\n+\n+  switch (destination)\n+    {\n+#ifdef ASM_EMIT_BSS\n+    case asm_dest_bss:\n+      ASM_EMIT_BSS (decl, name, size, rounded);\n+      break;\n+#endif\n+    case asm_dest_common:\n+      ASM_EMIT_COMMON (decl, name, size, rounded);\n+      break;\n+    case asm_dest_local:\n+      ASM_EMIT_LOCAL (decl, name, size, rounded);\n+      break;\n+    default:\n+      abort ();\n+    }\n+\n+  return;\n+}\n+\n /* Assemble everything that is needed for a variable or function declaration.\n    Not used for automatic variables, and not used for function definitions.\n    Should not be called for variables of incomplete structure type.\n@@ -1386,7 +1492,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n   if ((DECL_INITIAL (decl) == 0 || DECL_INITIAL (decl) == error_mark_node)\n       /* If the target can't output uninitialized but not common global data\n \t in .bss, then we have to use .data.  */\n-#if ! defined (ASM_OUTPUT_BSS) && ! defined (ASM_OUTPUT_ALIGNED_BSS)\n+#if ! defined ASM_EMIT_BSS\n       && DECL_COMMON (decl)\n #endif\n       && DECL_SECTION_NAME (decl) == 0\n@@ -1436,71 +1542,8 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n       if (flag_shared_data)\n \tdata_section ();\n #endif\n+      asm_emit_uninitialised (decl, name, size, rounded);\n \n-      if (TREE_PUBLIC (decl)\n-#if defined (ASM_OUTPUT_BSS) || defined (ASM_OUTPUT_ALIGNED_BSS)\n-\t  && DECL_COMMON (decl)\n-#endif\n-\t  )\n-\t{\n-#ifdef ASM_OUTPUT_SHARED_COMMON\n-\t  if (flag_shared_data)\n-\t    ASM_OUTPUT_SHARED_COMMON (asm_out_file, name, size, rounded);\n-\t  else\n-#endif\n-\t      {\n-#ifdef ASM_OUTPUT_ALIGNED_DECL_COMMON\n-\t\tASM_OUTPUT_ALIGNED_DECL_COMMON (asm_out_file, decl, name, size,\n-\t\t\t\t\t\t   DECL_ALIGN (decl));\n-#else\n-#ifdef ASM_OUTPUT_ALIGNED_COMMON\n-\t\tASM_OUTPUT_ALIGNED_COMMON (asm_out_file, name, size,\n-\t\t\t\t\t   DECL_ALIGN (decl));\n-#else\n-\t\tASM_OUTPUT_COMMON (asm_out_file, name, size, rounded);\n-#endif\n-#endif\n-\t      }\n-\t}\n-#if defined (ASM_OUTPUT_BSS) || defined (ASM_OUTPUT_ALIGNED_BSS)\n-      else if (TREE_PUBLIC (decl))\n-\t{\n-#ifdef ASM_OUTPUT_SHARED_BSS\n-\t  if (flag_shared_data)\n-\t    ASM_OUTPUT_SHARED_BSS (asm_out_file, decl, name, size, rounded);\n-\t  else\n-#endif\n-\t      {\n-#ifdef ASM_OUTPUT_ALIGNED_BSS\n-\t\tASM_OUTPUT_ALIGNED_BSS (asm_out_file, decl, name, size,\n-\t\t\t\t\tDECL_ALIGN (decl));\n-#else\n-\t\tASM_OUTPUT_BSS (asm_out_file, decl, name, size, rounded);\n-#endif\n-\t      }\n-\t}\n-#endif /* ASM_OUTPUT_BSS || ASM_OUTPUT_ALIGNED_BSS */\n-      else\n-\t{\n-#ifdef ASM_OUTPUT_SHARED_LOCAL\n-\t  if (flag_shared_data)\n-\t    ASM_OUTPUT_SHARED_LOCAL (asm_out_file, name, size, rounded);\n-\t  else\n-#endif\n-\t      {\n-#ifdef ASM_OUTPUT_ALIGNED_DECL_LOCAL\n-\t\tASM_OUTPUT_ALIGNED_DECL_LOCAL (asm_out_file, decl, name, size,\n-\t\t\t\t\t\t  DECL_ALIGN (decl));\n-#else\n-#ifdef ASM_OUTPUT_ALIGNED_LOCAL\n-\t\tASM_OUTPUT_ALIGNED_LOCAL (asm_out_file, name, size,\n-\t\t\t\t\t  DECL_ALIGN (decl));\n-#else\n-\t\tASM_OUTPUT_LOCAL (asm_out_file, name, size, rounded);\n-#endif\n-#endif\n-\t      }\n-\t}\n       goto finish;\n     }\n "}]}