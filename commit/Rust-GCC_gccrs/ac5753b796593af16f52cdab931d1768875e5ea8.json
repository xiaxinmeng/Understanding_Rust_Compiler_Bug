{"sha": "ac5753b796593af16f52cdab931d1768875e5ea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1NzUzYjc5NjU5M2FmMTZmNTJjZGFiOTMxZDE3Njg4NzVlNWVhOA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-05-31T21:12:10Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-05-31T21:12:10Z"}, "message": "re PR fortran/32156 (ICE with characters)\n\n2007-05-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32156\n\t* trans-array.c (gfc_trans_array_constructor): Treat the case\n\twhere the ss expression charlen is missing.\n\n2007-05-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32156\n\t* gfortran.dg/char_array_constructor_3.f90: New test.\n\nFrom-SVN: r125241", "tree": {"sha": "f416b7af202db5b151b1f1b65e682b2663efbcbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f416b7af202db5b151b1f1b65e682b2663efbcbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac5753b796593af16f52cdab931d1768875e5ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5753b796593af16f52cdab931d1768875e5ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac5753b796593af16f52cdab931d1768875e5ea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5753b796593af16f52cdab931d1768875e5ea8/comments", "author": null, "committer": null, "parents": [{"sha": "cba83c6f794f7282133f08ae68908c3b5b414d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba83c6f794f7282133f08ae68908c3b5b414d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba83c6f794f7282133f08ae68908c3b5b414d20"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "a923871be0bbfd8930a5948c282aeb070f00ae9f", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5753b796593af16f52cdab931d1768875e5ea8/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5753b796593af16f52cdab931d1768875e5ea8/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=ac5753b796593af16f52cdab931d1768875e5ea8", "patch": "@@ -1635,8 +1635,18 @@ gfc_trans_array_constructor (gfc_loopinfo * loop, gfc_ss * ss)\n       if (!ss->string_length)\n \tgfc_todo_error (\"complex character array constructors\");\n \n-      ss->expr->ts.cl->backend_decl = ss->string_length;\n+      /* It is surprising but still possible to wind up with expressions that\n+\t lack a character length.\n+\t TODO Find the offending part of the front end and cure this properly.\n+\t Concatenation involving arrays is the main culprit.  */\n+      if (!ss->expr->ts.cl)\n+\t{\n+\t  ss->expr->ts.cl = gfc_get_charlen ();\n+\t  ss->expr->ts.cl->next = gfc_current_ns->cl_list;\n+\t  gfc_current_ns->cl_list = ss->expr->ts.cl->next;\n+\t}\n \n+      ss->expr->ts.cl->backend_decl = ss->string_length;\n \n       type = gfc_get_character_type_len (ss->expr->ts.kind, ss->string_length);\n       if (const_string)"}]}