{"sha": "d5f60056f02a4f2bb7201f05224de907c9c234c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVmNjAwNTZmMDJhNGYyYmI3MjAxZjA1MjI0ZGU5MDdjOWMyMzRjNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-12-10T11:45:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-12-10T11:45:13Z"}, "message": "type_traits: Implement remove_const, remove_volatile, and remove_cv.\n\n2004-12-10  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/type_traits: Implement remove_const, remove_volatile,\n\tand remove_cv.\n\t* testsuite/tr1/4_metaprogramming/const_volatile_modifications/\n\tremove_const.cc: New.\n\t* testsuite/tr1/4_metaprogramming/const_volatile_modifications/\n\tremove_cv.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/const_volatile_modifications/\n\tremove_volatile.cc: Likewise.\n\n\t* testsuite/tr1/4_metaprogramming/primary_type_categories/\n\tis_array/is_array.cc: Slightly tweak consistently, remove typedefs,\n\tadd a few tests.\n\nFrom-SVN: r91990", "tree": {"sha": "bee7128346fb6c7dbb1cbaf65c5fc8733e81e990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bee7128346fb6c7dbb1cbaf65c5fc8733e81e990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5f60056f02a4f2bb7201f05224de907c9c234c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f60056f02a4f2bb7201f05224de907c9c234c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f60056f02a4f2bb7201f05224de907c9c234c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f60056f02a4f2bb7201f05224de907c9c234c4/comments", "author": null, "committer": null, "parents": [{"sha": "72b4c734a3d08ba4a9b11345b06118899ff5c6a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b4c734a3d08ba4a9b11345b06118899ff5c6a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b4c734a3d08ba4a9b11345b06118899ff5c6a6"}], "stats": {"total": 210, "additions": 194, "deletions": 16}, "files": [{"sha": "f4ddc1c1e507f3a09fa9f46892739052867f962d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d5f60056f02a4f2bb7201f05224de907c9c234c4", "patch": "@@ -1,3 +1,18 @@\n+2004-12-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/type_traits: Implement remove_const, remove_volatile,\n+\tand remove_cv.\n+\t* testsuite/tr1/4_metaprogramming/const_volatile_modifications/\n+\tremove_const.cc: New.\n+\t* testsuite/tr1/4_metaprogramming/const_volatile_modifications/\n+\tremove_cv.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/const_volatile_modifications/\n+\tremove_volatile.cc: Likewise.\n+\n+\t* testsuite/tr1/4_metaprogramming/primary_type_categories/\n+\tis_array/is_array.cc: Slightly tweak consistently, remove typedefs,\n+\tadd a few tests.\n+\n 2004-12-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits: Implement remove_extent and"}, {"sha": "13d7ebdf64d4f43419f4e236d9894416748c135d", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=d5f60056f02a4f2bb7201f05224de907c9c234c4", "patch": "@@ -256,13 +256,35 @@ namespace tr1\n \n   /// @brief  const-volatile modifications [4.7.1].\n   template<typename _Tp>\n-    struct remove_const;\n+    struct remove_const\n+    {\n+      typedef _Tp     type;\n+    };\n+\n+  template<typename _Tp>\n+    struct remove_const<_Tp const>\n+    {\n+      typedef _Tp     type;\n+    };\n   \n   template<typename _Tp>\n-    struct remove_volatile;\n+    struct remove_volatile\n+    {\n+      typedef _Tp     type;\n+    };\n+\n+  template<typename _Tp>\n+    struct remove_volatile<_Tp volatile>\n+    {\n+      typedef _Tp     type;\n+    };\n   \n   template<typename _Tp>\n-    struct remove_cv;\n+    struct remove_cv\n+    {\n+      typedef typename\n+      remove_const<typename remove_volatile<_Tp>::type>::type     type;\n+    };\n   \n   template<typename _Tp>\n     struct add_const;"}, {"sha": "1def556b4b116dd84644872bc2ab0e1ac2e33c74", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/remove_const.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_const.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_const.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_const.cc?ref=d5f60056f02a4f2bb7201f05224de907c9c234c4", "patch": "@@ -0,0 +1,47 @@\n+// 2004-12-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.7.1 Const-volatile modifications\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::remove_const;\n+  using std::tr1::is_same;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (is_same<remove_const<const volatile int>::type,\n+\t   volatile int>::value) );\n+  VERIFY( (is_same<remove_const<const int*>::type, const int*>::value) );\n+  VERIFY( (is_same<remove_const<const volatile ClassType>::type,\n+\t   volatile ClassType>::value) );\n+  VERIFY( (is_same<remove_const<const ClassType*>::type,\n+\t   const ClassType*>::value) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "775f6ef5f34a66bd3943b7ec8bff34acfbed36ac", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/remove_cv.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_cv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_cv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_cv.cc?ref=d5f60056f02a4f2bb7201f05224de907c9c234c4", "patch": "@@ -0,0 +1,47 @@\n+// 2004-12-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.7.1 Const-volatile modifications\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::remove_cv;\n+  using std::tr1::is_same;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (is_same<remove_cv<const volatile int>::type, int>::value) );\n+  VERIFY( (is_same<remove_cv<const volatile int*>::type,\n+\t   const volatile int*>::value) );\n+  VERIFY( (is_same<remove_cv<const volatile ClassType>::type,\n+\t   ClassType>::value) );\n+  VERIFY( (is_same<remove_cv<const volatile ClassType*>::type,\n+\t   const volatile ClassType*>::value) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "7cf9bf661fc05e9912db1e4931e3313febcb6487", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/const_volatile_modifications/remove_volatile.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_volatile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_volatile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fconst_volatile_modifications%2Fremove_volatile.cc?ref=d5f60056f02a4f2bb7201f05224de907c9c234c4", "patch": "@@ -0,0 +1,48 @@\n+// 2004-12-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.7.1 Const-volatile modifications\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::remove_volatile;\n+  using std::tr1::is_same;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (is_same<remove_volatile<const volatile int>::type,\n+\t   const int>::value) );\n+  VERIFY( (is_same<remove_volatile<volatile int*>::type,\n+\t   volatile int*>::value) );\n+  VERIFY( (is_same<remove_volatile<const volatile ClassType>::type,\n+\t   const ClassType>::value) );\n+  VERIFY( (is_same<remove_volatile<volatile ClassType*>::type,\n+\t   volatile ClassType*>::value) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "bb4e363f04f1b6eeda5e6aa3ece284b1bf882809", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/primary_type_categories/is_array/is_array.cc", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fprimary_type_categories%2Fis_array%2Fis_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f60056f02a4f2bb7201f05224de907c9c234c4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fprimary_type_categories%2Fis_array%2Fis_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fprimary_type_categories%2Fis_array%2Fis_array.cc?ref=d5f60056f02a4f2bb7201f05224de907c9c234c4", "patch": "@@ -30,19 +30,18 @@ void test01()\n   using std::tr1::is_array;\n   using namespace __gnu_test;\n \n-  typedef int        int_array[5];\n-  typedef int        empty_int_array[];\n-  typedef float*     pointer_array[5];\n-  typedef float*     empty_pointer_array[];\n-  typedef ClassType  ClassType_array[5];\n-  typedef ClassType  empty_ClassType_array[];\n-\n-  VERIFY( (test_category<is_array, int_array, true>()) );\n-  VERIFY( (test_category<is_array, empty_int_array, true>()) );\n-  VERIFY( (test_category<is_array, pointer_array, true>()) );\n-  VERIFY( (test_category<is_array, empty_pointer_array, true>()) );\n-  VERIFY( (test_category<is_array, ClassType_array, true>()) );\n-  VERIFY( (test_category<is_array, empty_ClassType_array, true>()) );\n+  VERIFY( (test_category<is_array, int[2], true>()) );\n+  VERIFY( (test_category<is_array, int[], true>()) );\n+  VERIFY( (test_category<is_array, int[2][3], true>()) );\n+  VERIFY( (test_category<is_array, int[][3], true>()) );\n+  VERIFY( (test_category<is_array, float*[2], true>()) );\n+  VERIFY( (test_category<is_array, float*[], true>()) );\n+  VERIFY( (test_category<is_array, float*[2][3], true>()) );\n+  VERIFY( (test_category<is_array, float*[][3], true>()) );\n+  VERIFY( (test_category<is_array, ClassType[2], true>()) );\n+  VERIFY( (test_category<is_array, ClassType[], true>()) );\n+  VERIFY( (test_category<is_array, ClassType[2][3], true>()) );\n+  VERIFY( (test_category<is_array, ClassType[][3], true>()) );\n \n   // Sanity check.\n   VERIFY( (test_category<is_array, ClassType, false>()) );"}]}