{"sha": "218aa620c4a1f7c2fadd6605d9ed5caee604079b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE4YWE2MjBjNGExZjdjMmZhZGQ2NjA1ZDllZDVjYWVlNjA0MDc5Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-03-27T22:16:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-03-27T22:16:20Z"}, "message": "optabs.c (emit_no_conflict_block, [...]): Avoid nesting of libcall regions.\n\n\t* optabs.c (emit_no_conflict_block, emit_libcall_block): Avoid nesting\n\tof libcall regions.\n\nFrom-SVN: r51477", "tree": {"sha": "66bd365666d5402108b000c5165337152aac93ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66bd365666d5402108b000c5165337152aac93ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/218aa620c4a1f7c2fadd6605d9ed5caee604079b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218aa620c4a1f7c2fadd6605d9ed5caee604079b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218aa620c4a1f7c2fadd6605d9ed5caee604079b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218aa620c4a1f7c2fadd6605d9ed5caee604079b/comments", "author": null, "committer": null, "parents": [{"sha": "e27a4eaf4f12cf7fcb1c2bed8a0f9ac539a309e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27a4eaf4f12cf7fcb1c2bed8a0f9ac539a309e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e27a4eaf4f12cf7fcb1c2bed8a0f9ac539a309e6"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "6ad87b7a00c4ed0c1c4071fd2d7062a3aeac0e80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218aa620c4a1f7c2fadd6605d9ed5caee604079b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218aa620c4a1f7c2fadd6605d9ed5caee604079b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=218aa620c4a1f7c2fadd6605d9ed5caee604079b", "patch": "@@ -1,3 +1,8 @@\n+Wed Mar 27 23:11:35 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* optabs.c (emit_no_conflict_block, emit_libcall_block): Avoid nesting\n+\tof libcall regions.\n+\n Wed Mar 27 22:54:14 CET 2002  Zdenek Dvorak <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* cfgrtl.c (merge_blocks_nomove): Use set_block_for_insn instead of"}, {"sha": "86c20b08d817473108d650aa5ce1e9185171a845", "filename": "gcc/optabs.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218aa620c4a1f7c2fadd6605d9ed5caee604079b/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218aa620c4a1f7c2fadd6605d9ed5caee604079b/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=218aa620c4a1f7c2fadd6605d9ed5caee604079b", "patch": "@@ -2739,11 +2739,18 @@ emit_no_conflict_block (insns, target, op0, op1, equiv)\n      these from the list.  */\n   for (insn = insns; insn; insn = next)\n     {\n-      rtx set = 0;\n+      rtx set = 0, note;\n       int i;\n \n       next = NEXT_INSN (insn);\n \n+      /* Some ports (cris) create an libcall regions at their own.  We must\n+\t avoid any potential nesting of LIBCALLs.  */\n+      if ((note = find_reg_note (insn, REG_LIBCALL, NULL)) != NULL)\n+\tremove_note (insn, note);\n+      if ((note = find_reg_note (insn, REG_RETVAL, NULL)) != NULL)\n+\tremove_note (insn, note);\n+\n       if (GET_CODE (PATTERN (insn)) == SET || GET_CODE (PATTERN (insn)) == USE\n \t  || GET_CODE (PATTERN (insn)) == CLOBBER)\n \tset = PATTERN (insn);\n@@ -2906,6 +2913,14 @@ emit_libcall_block (insns, target, result, equiv)\n   for (insn = insns; insn; insn = next)\n     {\n       rtx set = single_set (insn);\n+      rtx note;\n+\n+      /* Some ports (cris) create an libcall regions at their own.  We must\n+\t avoid any potential nesting of LIBCALLs.  */\n+      if ((note = find_reg_note (insn, REG_LIBCALL, NULL)) != NULL)\n+\tremove_note (insn, note);\n+      if ((note = find_reg_note (insn, REG_RETVAL, NULL)) != NULL)\n+\tremove_note (insn, note);\n \n       next = NEXT_INSN (insn);\n "}]}