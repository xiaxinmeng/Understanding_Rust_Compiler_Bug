{"sha": "aa9aed001981645070c365bfde5911cc941d37f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5YWVkMDAxOTgxNjQ1MDcwYzM2NWJmZGU1OTExY2M5NDFkMzdmMg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-10-21T08:56:56Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-10-21T08:56:56Z"}, "message": "re PR fortran/41706 ([OOP] Calling one TBP as an actual argument of another TBP)\n\n2009-10-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41706\n\tPR fortran/41766\n\t* match.c (select_type_set_tmp): Set flavor for temporary.\n\t* resolve.c (resolve_class_typebound_call): Correctly resolve actual\n\targuments.\n\n\n2009-10-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41706\n\tPR fortran/41766\n\t* gfortran.dg/class_9.f03: Extended test case.\n\t* gfortran.dg/select_type_7.f03: New test case.\n\nFrom-SVN: r153049", "tree": {"sha": "2c52f7047535b7b1fb364f1cc0584b23da86e9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c52f7047535b7b1fb364f1cc0584b23da86e9e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa9aed001981645070c365bfde5911cc941d37f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9aed001981645070c365bfde5911cc941d37f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9aed001981645070c365bfde5911cc941d37f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9aed001981645070c365bfde5911cc941d37f2/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea524613af675c61b97f04b066e975afc58ba96b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea524613af675c61b97f04b066e975afc58ba96b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea524613af675c61b97f04b066e975afc58ba96b"}], "stats": {"total": 72, "additions": 68, "deletions": 4}, "files": [{"sha": "b3567e4cff79f4ef425200ea88921da160f1d473", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aa9aed001981645070c365bfde5911cc941d37f2", "patch": "@@ -1,3 +1,11 @@\n+2009-10-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41706\n+\tPR fortran/41766\n+\t* match.c (select_type_set_tmp): Set flavor for temporary.\n+\t* resolve.c (resolve_class_typebound_call): Correctly resolve actual\n+\targuments.\n+\n 2009-10-20  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41706"}, {"sha": "0a418c8a44930f837c406c0f0e04c24954e7cdaf", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=aa9aed001981645070c365bfde5911cc941d37f2", "patch": "@@ -4047,9 +4047,10 @@ select_type_set_tmp (gfc_typespec *ts)\n \n   sprintf (name, \"tmp$%s\", ts->u.derived->name);\n   gfc_get_sym_tree (name, gfc_current_ns, &tmp, false);\n-  tmp->n.sym->ts = *ts;\n-  tmp->n.sym->attr.referenced = 1;\n-  tmp->n.sym->attr.pointer = 1;\n+  gfc_add_type (tmp->n.sym, ts, NULL);\n+  gfc_set_sym_referenced (tmp->n.sym);\n+  gfc_add_pointer (&tmp->n.sym->attr, NULL);\n+  gfc_add_flavor (&tmp->n.sym->attr, FL_VARIABLE, name, NULL);\n \n   select_type_stack->tmp = tmp;\n }"}, {"sha": "8e23308d5b248cedd6b16ac3c65df04b8ad027fa", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=aa9aed001981645070c365bfde5911cc941d37f2", "patch": "@@ -5369,7 +5369,7 @@ resolve_class_typebound_call (gfc_code *code)\n     } \n \n   /* Resolve the argument expressions,  */\n-  resolve_arg_exprs (code->ext.actual); \n+  resolve_arg_exprs (code->expr1->value.compcall.actual); \n \n   /* Get the data component, which is of the declared type.  */\n   derived = declared->components->ts.u.derived;"}, {"sha": "d5cb9eb7d3e84c9f2e3e7fa9e49a9afc28d34d79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa9aed001981645070c365bfde5911cc941d37f2", "patch": "@@ -1,3 +1,10 @@\n+2009-10-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41706\n+\tPR fortran/41766\n+\t* gfortran.dg/class_9.f03: Extended test case.\n+\t* gfortran.dg/select_type_7.f03: New test case.\n+\n 2009-10-20  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/lto/20091020-3_0.c: New testcase."}, {"sha": "5dbd4597abd189cef89eea523f4548775faccb4b", "filename": "gcc/testsuite/gfortran.dg/class_9.f03", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_9.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_9.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_9.f03?ref=aa9aed001981645070c365bfde5911cc941d37f2", "patch": "@@ -11,6 +11,7 @@ module m\n   procedure, nopass :: a\n   procedure, nopass :: b\n   procedure, pass :: c\n+  procedure, nopass :: d\n end type\n \n contains\n@@ -30,6 +31,11 @@ real function c (x)\n     c = 4.*x%v\n   end function\n \n+  subroutine d (x)\n+    real :: x\n+    if (abs(x-3.0)>1E-3) call abort()\n+  end subroutine\n+\n   subroutine s (x)\n     class(t) :: x\n     real :: r\n@@ -48,6 +54,8 @@ subroutine s (x)\n     r = x%a(x%c ())   ! failed\n     if (r .ne. a(c (x))) call abort\n \n+    call x%d (x%a(1.5))  ! failed\n+\n   end subroutine\n \n end"}, {"sha": "554b6cd122d42a9c2f3e6ae639e49d80e895fa3a", "filename": "gcc/testsuite/gfortran.dg/select_type_7.f03", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9aed001981645070c365bfde5911cc941d37f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_7.f03?ref=aa9aed001981645070c365bfde5911cc941d37f2", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+!\n+! PR 41766: [OOP] SELECT TYPE selector as actual argument with INTENT(INOUT)\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+ implicit none\n+\n+ type t1\n+   integer :: a\n+ end type\n+\n+ type, extends(t1) :: t2\n+   integer :: b\n+ end type\n+\n+ class(t1),allocatable :: cp\n+\n+ allocate(t2 :: cp)\n+\n+ select type (cp)\n+   type is (t2)\n+     cp%a = 98\n+     cp%b = 76\n+     call s(cp)\n+     print *,cp%a,cp%b\n+     if (cp%a /= cp%b) call abort()\n+   class default\n+     call abort()\n+ end select\n+\n+contains\n+\n+  subroutine s(f)\n+    type(t2), intent(inout) :: f\n+    f%a = 3\n+    f%b = 3\n+  end subroutine\n+\n+end"}]}