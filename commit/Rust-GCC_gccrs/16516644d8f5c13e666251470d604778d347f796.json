{"sha": "16516644d8f5c13e666251470d604778d347f796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1MTY2NDRkOGY1YzEzZTY2NjI1MTQ3MGQ2MDQ3NzhkMzQ3Zjc5Ng==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2019-10-24T03:13:00Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-21T04:48:36Z"}, "message": "According to instruction_tables.pdf\n\n1. Set cost of movement inside mask registers a bit higher than gpr's.\n2. Set cost of movement between mask register and gpr much higher than movement\n   inside gpr, but still less equal than load/store.\n3. Set cost of mask register load/store a bit higher than gpr load/store.\n\ngcc/\n\t* config/i386/x86-tune-costs.h (skylake_cost): Adjust cost\n\tmodel.", "tree": {"sha": "7a0c0863b9b3f0647c742c45d5b82c83428725ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a0c0863b9b3f0647c742c45d5b82c83428725ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16516644d8f5c13e666251470d604778d347f796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16516644d8f5c13e666251470d604778d347f796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16516644d8f5c13e666251470d604778d347f796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16516644d8f5c13e666251470d604778d347f796/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d2bc36c4440c126decee5a8379c158d9012adfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d2bc36c4440c126decee5a8379c158d9012adfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d2bc36c4440c126decee5a8379c158d9012adfc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a782a9dd9e35f0545b20172378ae18a3706aa96f", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16516644d8f5c13e666251470d604778d347f796/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16516644d8f5c13e666251470d604778d347f796/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=16516644d8f5c13e666251470d604778d347f796", "patch": "@@ -1727,12 +1727,12 @@ struct processor_costs skylake_cost = {\n   {8, 8, 8, 12, 24},\t\t\t/* cost of storing SSE registers\n \t\t\t\t\t   in 32,64,128,256 and 512-bit */\n   6, 6,\t\t\t\t\t/* SSE->integer and integer->SSE moves */\n-  2, 2,\t\t\t\t/* mask->integer and integer->mask moves */\n-  {4, 4, 4},\t\t\t\t/* cost of loading mask register\n+  4, 6,\t\t\t\t/* mask->integer and integer->mask moves */\n+  {6, 6, 6},\t\t\t\t/* cost of loading mask register\n \t\t\t\t\t   in QImode, HImode, SImode.  */\n-  {6, 6, 6},\t\t\t\t/* cost if storing mask register\n+  {8, 8, 8},\t\t\t\t/* cost if storing mask register\n \t\t\t\t\t   in QImode, HImode, SImode.  */\n-  2,\t\t\t\t\t/* cost of moving mask register.  */\n+  3,\t\t\t\t\t/* cost of moving mask register.  */\n   /* End of register allocator costs.  */\n   },\n "}]}