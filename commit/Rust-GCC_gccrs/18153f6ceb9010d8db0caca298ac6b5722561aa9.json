{"sha": "18153f6ceb9010d8db0caca298ac6b5722561aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxNTNmNmNlYjkwMTBkOGRiMGNhY2EyOThhYzZiNTcyMjU2MWFhOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-06-01T00:03:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-06-01T00:03:36Z"}, "message": "ifcvt.c (merge_if_block): Be prepared for JOIN to have no remaining edges.\n\n        * ifcvt.c (merge_if_block): Be prepared for JOIN to have no\n        remaining edges.\n        (find_if_block): Allow THEN with no outgoing edges.\n        * flow.c (merge_blocks_nomove): Remove a barrier not following\n        a jump as well.\n\nFrom-SVN: r34317", "tree": {"sha": "857b75cf5f3db288fe081b33b66a74bd6672fee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/857b75cf5f3db288fe081b33b66a74bd6672fee7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18153f6ceb9010d8db0caca298ac6b5722561aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18153f6ceb9010d8db0caca298ac6b5722561aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18153f6ceb9010d8db0caca298ac6b5722561aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18153f6ceb9010d8db0caca298ac6b5722561aa9/comments", "author": null, "committer": null, "parents": [{"sha": "e0fa93b3ca30abe9423a3f70cc172c21f2d2fdf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0fa93b3ca30abe9423a3f70cc172c21f2d2fdf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0fa93b3ca30abe9423a3f70cc172c21f2d2fdf0"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "52f19389d2a9ee6c658842e4f054d1cba9a1792b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18153f6ceb9010d8db0caca298ac6b5722561aa9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18153f6ceb9010d8db0caca298ac6b5722561aa9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18153f6ceb9010d8db0caca298ac6b5722561aa9", "patch": "@@ -4,6 +4,9 @@\n \n 2000-05-31  Richard Henderson  <rth@cygnus.com>\n \n+\t* ifcvt.c (merge_if_block): Be prepared for JOIN to have no \n+\tremaining edges.\n+\t(find_if_block): Allow THEN with no outgoing edges.\n \t* flow.c (merge_blocks_nomove): Remove a barrier not following\n \ta jump as well.\n "}, {"sha": "eee72092afb02edda4e4aa32669e3b784fcb5acc", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18153f6ceb9010d8db0caca298ac6b5722561aa9/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18153f6ceb9010d8db0caca298ac6b5722561aa9/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=18153f6ceb9010d8db0caca298ac6b5722561aa9", "patch": "@@ -1356,8 +1356,10 @@ merge_if_block (test_bb, then_bb, else_bb, join_bb)\n   /* The JOIN block may have had quite a number of other predecessors too.\n      Since we've already merged the TEST, THEN and ELSE blocks, we should\n      have only one remaining edge from our if-then-else diamond.  If there\n-     is more than one remaining edge, it must come from elsewhere.  */\n-  else if (join_bb->pred->pred_next == NULL)\n+     is more than one remaining edge, it must come from elsewhere.  There\n+     may be zero incoming edges if the THEN block didn't actually join \n+     back up (as with a call to abort).  */\n+  else if (join_bb->pred == NULL || join_bb->pred->pred_next == NULL)\n     {\n       /* We can merge the JOIN.  */\n       if (combo_bb->global_live_at_end)\n@@ -1459,15 +1461,29 @@ find_if_block (test_bb, then_edge, else_edge)\n   if (then_bb->pred->pred_next != NULL_EDGE)\n     return FALSE;\n \n-  /* The THEN block of an IF-THEN combo must have exactly one successor.  */\n-  if (then_succ == NULL_EDGE\n-      || then_succ->succ_next != NULL_EDGE\n-      || (then_succ->flags & EDGE_COMPLEX))\n+  /* The THEN block of an IF-THEN combo must have zero or one successors.  */\n+  if (then_succ != NULL_EDGE\n+      && (then_succ->succ_next != NULL_EDGE\n+          || (then_succ->flags & EDGE_COMPLEX)))\n     return FALSE;\n \n+  /* If the THEN block has no successors, conditional execution can still\n+     make a conditional call.  Don't do this unless the ELSE block has\n+     only one incoming edge -- the CFG manipulation is too ugly otherwise.  */\n+  if (then_succ == NULL)\n+    {\n+      if (else_bb->pred->pred_next == NULL_EDGE)\n+\t{\n+\t  join_bb = else_bb;\n+\t  else_bb = NULL_BLOCK;\n+\t}\n+      else\n+\treturn FALSE;\n+    }\n+\n   /* If the THEN block's successor is the other edge out of the TEST block,\n      then we have an IF-THEN combo without an ELSE.  */\n-  if (then_succ->dest == else_bb)\n+  else if (then_succ->dest == else_bb)\n     {\n       join_bb = else_bb;\n       else_bb = NULL_BLOCK;"}]}