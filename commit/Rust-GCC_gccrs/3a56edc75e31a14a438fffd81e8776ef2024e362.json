{"sha": "3a56edc75e31a14a438fffd81e8776ef2024e362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1NmVkYzc1ZTMxYTE0YTQzOGZmZmQ4MWU4Nzc2ZWYyMDI0ZTM2Mg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-10-12T05:15:02Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-10-12T05:15:02Z"}, "message": "re PR debug/41616 (Variables promoted to Gimple registers by aliasing are not getting debug statements.)\n\ngcc/ChangeLog:\nPR debug/41616\n* tree-into-ssa.c (insert_phi_nodes_for): Build debug bind stmts\non updates too.\n(maybe_register_def): Likewise.  Take stmt iterator.\n(rewrite_update_stmt): Take stmt iterator and pass it on.\n(rewrite_update_enter_block): Pass stmt iterator.\ngcc/testsuite/ChangeLog:\nPR debug/41616\n* gcc.dg/guality/pr41616-1.c: New.\n\nFrom-SVN: r152662", "tree": {"sha": "d087d9d1177e086bc11ec7da7061b55a4c8b04f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d087d9d1177e086bc11ec7da7061b55a4c8b04f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a56edc75e31a14a438fffd81e8776ef2024e362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a56edc75e31a14a438fffd81e8776ef2024e362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a56edc75e31a14a438fffd81e8776ef2024e362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a56edc75e31a14a438fffd81e8776ef2024e362/comments", "author": null, "committer": null, "parents": [{"sha": "45fe7947ed05c189b2010011593f9226326d06da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45fe7947ed05c189b2010011593f9226326d06da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45fe7947ed05c189b2010011593f9226326d06da"}], "stats": {"total": 63, "additions": 55, "deletions": 8}, "files": [{"sha": "81e7fda9826b09f69c793fa3908e7a1e38f27bbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a56edc75e31a14a438fffd81e8776ef2024e362", "patch": "@@ -1,3 +1,12 @@\n+2009-10-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/41616\n+\t* tree-into-ssa.c (insert_phi_nodes_for): Build debug bind stmts\n+\ton updates too.\n+\t(maybe_register_def): Likewise.  Take stmt iterator.\n+\t(rewrite_update_stmt): Take stmt iterator and pass it on.\n+\t(rewrite_update_enter_block): Pass stmt iterator.\n+\n 2009-10-11  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* config/spu/spu.c (TARGET_BUILTIN_DECL): Define."}, {"sha": "20d915faf9613881785129daf5e65f45fc8be269", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a56edc75e31a14a438fffd81e8776ef2024e362", "patch": "@@ -1,3 +1,8 @@\n+2009-10-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/41616\n+\t* gcc.dg/guality/pr41616-1.c: New.\n+\n 2009-10-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/37204"}, {"sha": "c38d76b7c9eec98ce3e9f48e6444aa8dab067a97", "filename": "gcc/testsuite/gcc.dg/guality/pr41616-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41616-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41616-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41616-1.c?ref=3a56edc75e31a14a438fffd81e8776ef2024e362", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run { xfail *-*-* } } */\n+/* { dg-options \"-g -O2\" } */\n+\n+#include \"guality.h\"\n+\n+inline int f(int *a)\n+{\n+  return *a;\n+}\n+\n+int\n+main(int argc, char *argv[])\n+{\n+  int b = -1;\n+  GUALCHKVAL (b);\n+  if (argc > 0)\n+    b = -f(&b);\n+  GUALCHKVAL (b);\n+  return b;\n+}"}, {"sha": "8672a5e6317e7d0c9a54b8c26b41a03810262768", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a56edc75e31a14a438fffd81e8776ef2024e362/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=3a56edc75e31a14a438fffd81e8776ef2024e362", "patch": "@@ -1121,9 +1121,12 @@ insert_phi_nodes_for (tree var, bitmap phi_insertion_points, bool update_p)\n       else\n \t{\n \t  tree tracked_var;\n+\n \t  gcc_assert (DECL_P (var));\n \t  phi = create_phi_node (var, bb);\n-\t  if (!update_p && (tracked_var = target_for_debug_bind (var)))\n+\n+\t  tracked_var = target_for_debug_bind (var);\n+\t  if (tracked_var)\n \t    {\n \t      gimple note = gimple_build_debug_bind (tracked_var,\n \t\t\t\t\t\t     PHI_RESULT (phi),\n@@ -1818,7 +1821,8 @@ maybe_replace_use_in_debug_stmt (use_operand_p use_p)\n    DEF_P.  */\n \n static inline void\n-maybe_register_def (def_operand_p def_p, gimple stmt)\n+maybe_register_def (def_operand_p def_p, gimple stmt,\n+\t\t    gimple_stmt_iterator gsi)\n {\n   tree def = DEF_FROM_PTR (def_p);\n   tree sym = DECL_P (def) ? def : SSA_NAME_VAR (def);\n@@ -1829,8 +1833,17 @@ maybe_register_def (def_operand_p def_p, gimple stmt)\n     {\n       if (DECL_P (def))\n \t{\n+\t  tree tracked_var;\n+\n \t  def = make_ssa_name (def, stmt);\n \t  SET_DEF (def_p, def);\n+\n+\t  tracked_var = target_for_debug_bind (sym);\n+\t  if (tracked_var)\n+\t    {\n+\t      gimple note = gimple_build_debug_bind (tracked_var, def, stmt);\n+\t      gsi_insert_after (&gsi, note, GSI_SAME_STMT);\n+\t    }\n \t}\n \n       register_new_update_single (def, sym);\n@@ -1858,7 +1871,7 @@ maybe_register_def (def_operand_p def_p, gimple stmt)\n    in OLD_SSA_NAMES.  */\n \n static void\n-rewrite_update_stmt (gimple stmt)\n+rewrite_update_stmt (gimple stmt, gimple_stmt_iterator gsi)\n {\n   use_operand_p use_p;\n   def_operand_p def_p;\n@@ -1920,7 +1933,7 @@ rewrite_update_stmt (gimple stmt)\n      marked for renaming.  */\n   if (register_defs_p (stmt))\n     FOR_EACH_SSA_DEF_OPERAND (def_p, stmt, iter, SSA_OP_ALL_DEFS)\n-      maybe_register_def (def_p, stmt);\n+      maybe_register_def (def_p, stmt, gsi);\n }\n \n \n@@ -2079,11 +2092,11 @@ rewrite_update_enter_block (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n \n   /* Step 2.  Rewrite every variable used in each statement in the block.  */\n   if (TEST_BIT (interesting_blocks, bb->index))\n-   {\n-     gcc_assert (bitmap_bit_p (blocks_to_update, bb->index));\n+    {\n+      gcc_assert (bitmap_bit_p (blocks_to_update, bb->index));\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-        rewrite_update_stmt (gsi_stmt (gsi));\n-   }\n+        rewrite_update_stmt (gsi_stmt (gsi), gsi);\n+    }\n \n   /* Step 3.  Update PHI nodes.  */\n   rewrite_update_phi_arguments (bb);"}]}