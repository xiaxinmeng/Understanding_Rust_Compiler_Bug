{"sha": "40f93bb5be85c6bb202bdb02b71efea13071e12a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBmOTNiYjViZTg1YzZiYjIwMmJkYjAyYjcxZWZlYTEzMDcxZTEyYQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2012-05-02T19:34:31Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2012-05-02T19:34:31Z"}, "message": "crossconfig.m4: Since we know that all TPF builds are cross- builds and cannot run...\n\n* crossconfig.m4: Since we know that all TPF builds are cross-\nbuilds and cannot run configuration-time link tests, do not\nallow it; just go with known supported linker options.\n* configure: Regenerate (called as GLIBCXX_CROSSCONFIG).\n\nFrom-SVN: r187062", "tree": {"sha": "3548681ee6ca7f2fc51a2eb7e71a98e767f02e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3548681ee6ca7f2fc51a2eb7e71a98e767f02e7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40f93bb5be85c6bb202bdb02b71efea13071e12a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f93bb5be85c6bb202bdb02b71efea13071e12a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40f93bb5be85c6bb202bdb02b71efea13071e12a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f93bb5be85c6bb202bdb02b71efea13071e12a/comments", "author": null, "committer": null, "parents": [{"sha": "43f7c4322c96c3cc1f7a54d210a0c8a4b2344def", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f7c4322c96c3cc1f7a54d210a0c8a4b2344def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f7c4322c96c3cc1f7a54d210a0c8a4b2344def"}], "stats": {"total": 149, "additions": 9, "deletions": 140}, "files": [{"sha": "f16fb9972af6dae912e6c5b3a3c1679b023f7728", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f93bb5be85c6bb202bdb02b71efea13071e12a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f93bb5be85c6bb202bdb02b71efea13071e12a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=40f93bb5be85c6bb202bdb02b71efea13071e12a", "patch": "@@ -1,3 +1,10 @@\n+2012-05-02  DJ Delorie  <dj@redhat.com>\n+\n+\t* crossconfig.m4: Since we know that all TPF builds are cross-\n+\tbuilds and cannot run configuration-time link tests, do not\n+\tallow it; just go with known supported linker options.\n+\t* configure: Regenerate (called as GLIBCXX_CROSSCONFIG).\n+\n 2012-05-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/hashtable_policy.h: Correct namepace nesting for"}, {"sha": "e0af9c8de6cdbc36041b30b7ef974a86c98b5d92", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 139, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f93bb5be85c6bb202bdb02b71efea13071e12a/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f93bb5be85c6bb202bdb02b71efea13071e12a/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=40f93bb5be85c6bb202bdb02b71efea13071e12a", "patch": "@@ -63763,145 +63763,7 @@ $as_echo \"$ac_ld_relro\" >&6; }\n     ;;\n   *-tpf)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'\n-\n-\n-  # If we're not using GNU ld, then there's no point in even trying these\n-  # tests.  Check for that first.  We should have already tested for gld\n-  # by now (in libtool), but require it now just to be safe...\n-  test -z \"$SECTION_LDFLAGS\" && SECTION_LDFLAGS=''\n-  test -z \"$OPT_LDFLAGS\" && OPT_LDFLAGS=''\n-\n-\n-\n-  # The name set by libtool depends on the version of libtool.  Shame on us\n-  # for depending on an impl detail, but c'est la vie.  Older versions used\n-  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n-  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n-  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n-  # set (hence we're using an older libtool), then set it.\n-  if test x${with_gnu_ld+set} != xset; then\n-    if test x${ac_cv_prog_gnu_ld+set} != xset; then\n-      # We got through \"ac_require(ac_prog_ld)\" and still not set?  Huh?\n-      with_gnu_ld=no\n-    else\n-      with_gnu_ld=$ac_cv_prog_gnu_ld\n-    fi\n-  fi\n-\n-  # Start by getting the version number.  I think the libtool test already\n-  # does some of this, but throws away the result.\n-  glibcxx_ld_is_gold=no\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n-$as_echo_n \"checking for ld version... \" >&6; }\n-\n-    if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n-      glibcxx_ld_is_gold=yes\n-    fi\n-    ldver=`$LD --version 2>/dev/null |\n-\t   sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n-\n-    glibcxx_gnu_ld_version=`echo $ldver | \\\n-\t   $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_gnu_ld_version\" >&5\n-$as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n-  fi\n-\n-  # Set --gc-sections.\n-  glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n-    if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n-      glibcxx_have_gc_sections=yes\n-    fi\n-  else\n-    glibcxx_gcsections_min_ld=21602\n-    if test x\"$with_gnu_ld\" = x\"yes\" &&\n-\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n-      glibcxx_have_gc_sections=yes\n-    fi\n-  fi\n-  if test \"$glibcxx_have_gc_sections\" = \"yes\"; then\n-    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n-    # NB: This flag only works reliably after 2.16.1. Configure tests\n-    # for this are difficult, so hard wire a value that should work.\n-\n-    ac_test_CFLAGS=\"${CFLAGS+set}\"\n-    ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-Wl,--gc-sections'\n-\n-    # Check for -Wl,--gc-sections\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,--gc-sections\" >&5\n-$as_echo_n \"checking for ld that supports -Wl,--gc-sections... \" >&6; }\n-    if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n- int one(void) { return 1; }\n-     int two(void) { return 2; }\n-\n-int\n-main ()\n-{\n- two();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_gcsections=yes\n-else\n-  ac_gcsections=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-    if test \"$ac_gcsections\" = \"yes\"; then\n-      rm -f conftest.c\n-      touch conftest.c\n-      if $CC -c conftest.c; then\n-\tif $LD --gc-sections -o conftest conftest.o 2>&1 | \\\n-\t   grep \"Warning: gc-sections option ignored\" > /dev/null; then\n-\t  ac_gcsections=no\n-\tfi\n-      fi\n-      rm -f conftest.c conftest.o conftest\n-    fi\n-    if test \"$ac_gcsections\" = \"yes\"; then\n-      SECTION_LDFLAGS=\"-Wl,--gc-sections $SECTION_LDFLAGS\"\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_gcsections\" >&5\n-$as_echo \"$ac_gcsections\" >&6; }\n-\n-    if test \"$ac_test_CFLAGS\" = set; then\n-      CFLAGS=\"$ac_save_CFLAGS\"\n-    else\n-      # this is the suspicious part\n-      CFLAGS=''\n-    fi\n-  fi\n-\n-  # Set -z,relro.\n-  # Note this is only for shared objects.\n-  ac_ld_relro=no\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n-$as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n-$as_echo \"$ac_ld_relro\" >&6; }\n-  fi\n-\n-  # Set linker optimization flags.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    OPT_LDFLAGS=\"-Wl,-O1 $OPT_LDFLAGS\"\n-  fi\n-\n-\n-\n+    SECTION_LDFLAGS='-Wl,--gc-sections $SECTION_LDFLAGS'\n \n     $as_echo \"#define HAVE_FINITE 1\" >>confdefs.h\n "}, {"sha": "943ea676ea2730c1ec3541ff3b447d38ce93afa1", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f93bb5be85c6bb202bdb02b71efea13071e12a/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f93bb5be85c6bb202bdb02b71efea13071e12a/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=40f93bb5be85c6bb202bdb02b71efea13071e12a", "patch": "@@ -222,8 +222,8 @@ case \"${host}\" in\n     ;;\n   *-tpf)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'\n+    SECTION_LDFLAGS='-Wl,--gc-sections $SECTION_LDFLAGS'\n     AC_SUBST(SECTION_FLAGS)\n-    GLIBCXX_CHECK_LINKER_FEATURES\n     AC_DEFINE(HAVE_FINITE)\n     AC_DEFINE(HAVE_FINITEF)\n     AC_DEFINE(HAVE_FREXPF)"}]}