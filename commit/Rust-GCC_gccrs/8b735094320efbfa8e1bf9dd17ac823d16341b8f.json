{"sha": "8b735094320efbfa8e1bf9dd17ac823d16341b8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3MzUwOTQzMjBlZmJmYThlMWJmOWRkMTdhYzgyM2QxNjM0MWI4Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T08:45:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T08:45:05Z"}, "message": "Removed, no longer used.\n\nFrom-SVN: r251864", "tree": {"sha": "bb01462d44f77acff5a5e7f5e8ac7e5c3bb228cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb01462d44f77acff5a5e7f5e8ac7e5c3bb228cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b735094320efbfa8e1bf9dd17ac823d16341b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b735094320efbfa8e1bf9dd17ac823d16341b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b735094320efbfa8e1bf9dd17ac823d16341b8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b735094320efbfa8e1bf9dd17ac823d16341b8f/comments", "author": null, "committer": null, "parents": [{"sha": "ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7"}], "stats": {"total": 1538, "additions": 0, "deletions": 1538}, "files": [{"sha": "819652d242b5b98ebb325a5b0c215bde569523f7", "filename": "gcc/ada/indepsw-mingw.adb", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Findepsw-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Findepsw-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Findepsw-mingw.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,67 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                              I N D E P S W                               --\n---                                                                          --\n---                                 B o d y                                  --\n---                            (Windows version)                             --\n---                                                                          --\n---          Copyright (C) 2009-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Windows version\n-\n-package body Indepsw is\n-\n-   Map_Switch : aliased constant String := \"-Wl,-Map,\";\n-\n-   -------------\n-   -- Convert --\n-   -------------\n-\n-   procedure Convert\n-     (Switch   : Switch_Kind;\n-      Argument : String;\n-      To       : out String_List_Access)\n-   is\n-   begin\n-      case Switch is\n-         when Map_File =>\n-            To := new Argument_List'(1 => new String'(Map_Switch & Argument));\n-      end case;\n-   end Convert;\n-\n-   ------------------\n-   -- Is_Supported --\n-   ------------------\n-\n-   function Is_Supported (Switch : Switch_Kind) return Boolean is\n-   begin\n-      case Switch is\n-         when Map_File =>\n-            return True;\n-      end case;\n-   end Is_Supported;\n-\n-end Indepsw;"}, {"sha": "754507130b6117fefb1afe1e889cbfd8f2fc742e", "filename": "gcc/ada/s-tfsetr-default.adb", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tfsetr-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tfsetr-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tfsetr-default.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,314 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                     S Y S T E M . T R A C E S . S E N D                  --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This version is for all targets, provided that System.IO.Put_Line is\n---  functional. It prints debug information to Standard Output\n-\n-with System.IO;     use System.IO;\n-with System.Regpat; use System.Regpat;\n-\n-----------------\n--- Send_Trace --\n-----------------\n-\n---  Prints debug information both in a human readable form\n---  and in the form they are sent from upper layers.\n-\n-separate (System.Traces.Format)\n-procedure Send_Trace (Id : Trace_T; Info : String) is\n-\n-   type Param_Type is\n-     (Name_Param,\n-      Caller_Param,\n-      Entry_Param,\n-      Timeout_Param,\n-      Acceptor_Param,\n-      Parent_Param,\n-      Number_Param);\n-   --  Type of parameter found in the message\n-\n-   Info_Trace : String_Trace := Format_Trace (Info);\n-\n-   function Get_Param\n-     (Input    : String_Trace;\n-      Param    : Param_Type;\n-      How_Many : Integer)\n-      return     String;\n-   --  Extract a parameter from the given input string\n-\n-   ---------------\n-   -- Get_Param --\n-   ---------------\n-\n-   function Get_Param\n-     (Input    : String_Trace;\n-      Param    : Param_Type;\n-      How_Many : Integer)\n-      return     String\n-   is\n-      pragma Unreferenced (How_Many);\n-\n-      Matches : Match_Array (1 .. 2);\n-   begin\n-      --  We need comments here ???\n-\n-      case Param is\n-         when Name_Param =>\n-            Match (\"/N:([\\w]+)\", Input, Matches);\n-\n-         when Caller_Param =>\n-            Match (\"/C:([\\w]+)\", Input, Matches);\n-\n-         when Entry_Param =>\n-            Match (\"/E:([\\s]*) +([0-9 ,]+)\", Input, Matches);\n-\n-         when Timeout_Param =>\n-            Match (\"/T:([\\s]*) +([0-9]+.[0-9]+)\", Input, Matches);\n-\n-         when Acceptor_Param =>\n-            Match (\"/A:([\\w]+)\", Input, Matches);\n-\n-         when Parent_Param =>\n-            Match (\"/P:([\\w]+)\", Input, Matches);\n-\n-         when Number_Param =>\n-            Match (\"/#:([\\s]*) +([0-9]+)\", Input, Matches);\n-      end case;\n-\n-      if Matches (1).First < Input'First then\n-         return \"\";\n-      end if;\n-\n-      case Param is\n-         when Entry_Param\n-            | Number_Param\n-            | Timeout_Param\n-         =>\n-            return Input (Matches (2).First .. Matches (2).Last);\n-\n-         when others =>\n-            return Input (Matches (1).First .. Matches (1).Last);\n-      end case;\n-   end Get_Param;\n-\n---  Start of processing for Send_Trace\n-\n-begin\n-   New_Line;\n-   Put_Line (\"- Trace Debug Info ----------------\");\n-   Put (\"Caught event Id : \");\n-\n-   case Id is\n-      when M_Accept_Complete => Put (\"M_Accept_Complete\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" completes accept on entry \"\n-                   & Get_Param (Info_Trace, Entry_Param, 1) & \" with \"\n-                   & Get_Param (Info_Trace, Caller_Param, 1));\n-\n-      when M_Select_Else     => Put (\"M_Select_Else\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" selects else statement\");\n-\n-      when M_RDV_Complete    => Put (\"M_RDV_Complete\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" completes rendezvous with \"\n-                   & Get_Param (Info_Trace, Caller_Param, 1));\n-\n-      when M_Call_Complete   => Put (\"M_Call_Complete\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" completes call\");\n-\n-      when M_Delay           => Put (\"M_Delay\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" completes delay \"\n-                   & Get_Param (Info_Trace, Timeout_Param, 1));\n-\n-      when E_Missed          => Put (\"E_Missed\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" got an invalid acceptor \"\n-                   & Get_Param (Info_Trace, Acceptor_Param, 1));\n-\n-      when E_Timeout         => Put (\"E_Timeout\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" ends select due to timeout \");\n-\n-      when E_Kill            => Put (\"E_Kill\");\n-         New_Line;\n-         Put_Line (\"Asynchronous Transfer of Control on task \"\n-                   & Get_Param (Info_Trace, Name_Param, 1));\n-\n-      when W_Delay           => Put (\"W_Delay\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" sleeping \"\n-                   & Get_Param (Info_Trace, Timeout_Param, 1)\n-                   & \" seconds\");\n-\n-      when WU_Delay           => Put (\"WU_Delay\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" sleeping until \"\n-                   & Get_Param (Info_Trace, Timeout_Param, 1));\n-\n-      when W_Call            => Put (\"W_Call\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" calling entry \"\n-                   & Get_Param (Info_Trace, Entry_Param, 1)\n-                   & \" of \"  & Get_Param (Info_Trace, Acceptor_Param, 1));\n-\n-      when W_Accept          => Put (\"W_Accept\");\n-         New_Line;\n-         Put (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-              & \" waiting on \"\n-              & Get_Param (Info_Trace, Number_Param, 1)\n-              & \" accept(s)\"\n-              & \", \" & Get_Param (Info_Trace, Entry_Param, 1));\n-         New_Line;\n-\n-      when W_Select          => Put (\"W_Select\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" waiting on \"\n-                   & Get_Param (Info_Trace, Number_Param, 1)\n-                   & \" select(s)\"\n-                      & \", \" & Get_Param (Info_Trace, Entry_Param, 1));\n-         New_Line;\n-\n-      when W_Completion      => Put (\"W_Completion\");\n-         New_Line;\n-            Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                      & \" waiting for completion \");\n-\n-      when WT_Select         => Put (\"WT_Select\");\n-         New_Line;\n-         Put (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-              & \" waiting \" & Get_Param (Info_Trace, Timeout_Param, 1)\n-              & \" seconds  on \"\n-              & Get_Param (Info_Trace, Number_Param, 1)\n-              & \" select(s)\");\n-\n-         if Get_Param (Info_Trace, Number_Param, 1) /= \"\" then\n-            Put (\", \" & Get_Param (Info_Trace, Entry_Param, 1));\n-         end if;\n-\n-         New_Line;\n-\n-      when WT_Call           => Put (\"WT_Call\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" calling entry \"\n-                   & Get_Param (Info_Trace, Entry_Param, 1)\n-                   & \" of \"  & Get_Param (Info_Trace, Acceptor_Param, 1)\n-                   & \" with timeout \"\n-                   & Get_Param (Info_Trace, Timeout_Param, 1));\n-\n-      when WT_Completion     => Put (\"WT_Completion\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" waiting \"\n-                   & Get_Param (Info_Trace, Timeout_Param, 1)\n-                   & \" for call completion\");\n-\n-      when PO_Call           => Put (\"PO_Call\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" calling protected entry  \"\n-                   & Get_Param (Info_Trace, Entry_Param, 1));\n-\n-      when POT_Call          => Put (\"POT_Call\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" calling protected entry  \"\n-                   & Get_Param (Info_Trace, Entry_Param, 1)\n-                   & \" with timeout \"\n-                   & Get_Param (Info_Trace, Timeout_Param, 1));\n-\n-      when PO_Run            => Put (\"PO_Run\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                      & \" running entry  \"\n-                   & Get_Param (Info_Trace, Entry_Param, 1)\n-                   & \" for \"\n-                   & Get_Param (Info_Trace, Caller_Param, 1));\n-\n-      when PO_Done           => Put (\"PO_Done\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" finished call from \"\n-                   & Get_Param (Info_Trace, Caller_Param, 1));\n-\n-      when PO_Lock           => Put (\"PO_Lock\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" took lock\");\n-\n-      when PO_Unlock         => Put (\"PO_Unlock\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" released lock\");\n-\n-      when T_Create          => Put (\"T_Create\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" created\");\n-\n-      when T_Activate        => Put (\"T_Activate\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" activated\");\n-\n-      when T_Abort           => Put (\"T_Abort\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" aborted by \"\n-                   & Get_Param (Info_Trace, Parent_Param, 1));\n-\n-      when T_Terminate       => Put (\"T_Terminate\");\n-         New_Line;\n-         Put_Line (\"Task \" & Get_Param (Info_Trace, Name_Param, 1)\n-                   & \" terminated\");\n-\n-      when others\n-        => Put (\"Invalid Id\");\n-   end case;\n-\n-   Put_Line (\"  --> \" & Info_Trace);\n-   Put_Line (\"-----------------------------------\");\n-   New_Line;\n-end Send_Trace;"}, {"sha": "cb57b5e00e142caeb692e1567df21a285a8a7794", "filename": "gcc/ada/s-tfsetr-vxworks.adb", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tfsetr-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tfsetr-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tfsetr-vxworks.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,104 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                     S Y S T E M . T R A C E S . S E N D                  --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---           Copyright (C) 2001-2016, Free Software Foundation, Inc.        --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This version is for VxWorks targets\n-\n---  Trace information is sent to WindView using the wvEvent function\n-\n---  Note that wvEvent is from the VxWorks API\n-\n---  When adding a new event, just give an Id to then event, and then modify\n---  the WindView events database.\n-\n---  Refer to WindView User's Guide for more details on how to add new events\n---  to the events database.\n-\n-----------------\n--- Send_Trace --\n-----------------\n-\n---  This procedure formats the string, maps the event Id to an Id\n---  recognized by WindView, and send the event using wvEvent\n-\n-separate (System.Traces.Format)\n-procedure Send_Trace (Id : Trace_T; Info : String) is\n-\n-   procedure Wv_Event\n-     (Id : Integer;\n-      Buffer : System.Address;\n-      Size : Integer);\n-   pragma Import (C, Wv_Event, \"wvEvent\");\n-\n-   Info_Trace : String_Trace;\n-   Id_Event   : Integer;\n-\n-begin\n-   Info_Trace := Format_Trace (Info);\n-\n-   case Id is\n-      when M_Accept_Complete => Id_Event := 30000;\n-      when M_Select_Else     => Id_Event := 30001;\n-      when M_RDV_Complete    => Id_Event := 30002;\n-      when M_Call_Complete   => Id_Event := 30003;\n-      when M_Delay           => Id_Event := 30004;\n-      when E_Kill            => Id_Event := 30005;\n-      when E_Missed          => Id_Event := 30006;\n-      when E_Timeout         => Id_Event := 30007;\n-\n-      when W_Call            => Id_Event := 30010;\n-      when W_Accept          => Id_Event := 30011;\n-      when W_Select          => Id_Event := 30012;\n-      when W_Completion      => Id_Event := 30013;\n-      when W_Delay           => Id_Event := 30014;\n-      when WT_Select         => Id_Event := 30015;\n-      when WT_Call           => Id_Event := 30016;\n-      when WT_Completion     => Id_Event := 30017;\n-      when WU_Delay          => Id_Event := 30018;\n-\n-      when PO_Call           => Id_Event := 30020;\n-      when POT_Call          => Id_Event := 30021;\n-      when PO_Run            => Id_Event := 30022;\n-      when PO_Lock           => Id_Event := 30023;\n-      when PO_Unlock         => Id_Event := 30024;\n-      when PO_Done           => Id_Event := 30025;\n-\n-      when T_Create          => Id_Event := 30030;\n-      when T_Activate        => Id_Event := 30031;\n-      when T_Abort           => Id_Event := 30032;\n-      when T_Terminate       => Id_Event := 30033;\n-\n-      --  Unrecognized events are given the special Id_Event value 29999\n-\n-      when others            => Id_Event := 29999;\n-   end case;\n-\n-   Wv_Event (Id_Event, Info_Trace'Address, Max_Size);\n-end Send_Trace;"}, {"sha": "e370efafd46da61abbc5ab7a8e627ff36054eed9", "filename": "gcc/ada/s-traces-default.adb", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-traces-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-traces-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traces-default.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,71 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                         S Y S T E M . T R A C E S                        --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-with System.Soft_Links;\n-with System.Parameters;\n-with System.Traces.Format;\n-\n-package body System.Traces is\n-\n-   package SSL renames System.Soft_Links;\n-   use System.Traces.Format;\n-\n-   ----------------------\n-   -- Send_Trace_Info  --\n-   ----------------------\n-\n-   procedure Send_Trace_Info (Id : Trace_T) is\n-      Task_S  : constant String := SSL.Task_Name.all;\n-      Trace_S : String (1 .. 3 + Task_S'Length);\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3) := \"/N:\";\n-         Trace_S (4 .. Trace_S'Last) := Task_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info (Id : Trace_T; Timeout : Duration) is\n-      Task_S    : constant String := SSL.Task_Name.all;\n-      Timeout_S : constant String := Duration'Image (Timeout);\n-      Trace_S   : String (1 .. 6 + Task_S'Length + Timeout_S'Length);\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3) := \"/N:\";\n-         Trace_S (4 .. 3 + Task_S'Length) := Task_S;\n-         Trace_S (4 + Task_S'Length .. 6 + Task_S'Length) := \"/T:\";\n-         Trace_S (7 + Task_S'Length .. Trace_S'Last) := Timeout_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-end System.Traces;"}, {"sha": "abf7e8da9a6894216d68ceb4e470a4985413d93a", "filename": "gcc/ada/s-traces.adb", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-traces.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-traces.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traces.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,54 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                         S Y S T E M . T R A C E S                        --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package body System.Traces is\n-\n-   pragma Warnings (Off); -- kill warnings on unreferenced formals\n-\n-   ---------------------\n-   -- Send_Trace_Info --\n-   ---------------------\n-\n-   procedure Send_Trace_Info (Id : Trace_T) is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   ---------------------\n-   -- Send_Trace_Info --\n-   ---------------------\n-\n-   procedure Send_Trace_Info (Id : Trace_T; Timeout : Duration) is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-end System.Traces;"}, {"sha": "89c7cc42dd3e80936007a3d1a6506d577cd98dd9", "filename": "gcc/ada/s-traces.ads", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-traces.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-traces.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traces.ads?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,113 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                         S Y S T E M . T R A C E S                        --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package implements functions for traces when tasking is not involved\n-\n---  Warning : NO dependencies to tasking should be created here\n-\n---  This package and all its children are used to implement debug information\n-\n---  A new primitive, Send_Trace_Info (Id : Trace_T; 'data') is introduced.\n---  Trace_T is an event identifier, 'data' are the information to pass\n---  with the event. This procedure is used from within the Runtime to send\n---  debug information.\n-\n---  This primitive is overloaded in System.Traces.Tasking and this package\n-\n---  Send_Trace_Info calls Send_Trace, in System.Traces.Send, which is target\n---  dependent, to send the debug information to a debugger, stream ..\n-\n---  To add a new event, just add them to the Trace_T type, and write the\n---  corresponding Send_Trace_Info procedure. It may be required for some\n---  target to modify Send_Trace (e.g. VxWorks).\n-\n---  To add a new target, just adapt System.Traces.Send as needed\n-\n-package System.Traces is\n-   pragma Preelaborate;\n-\n-   type Trace_T is\n-     (\n-      --  Events handled\n-\n-      --  Messages\n-\n-      M_Accept_Complete,\n-      M_Select_Else,\n-      M_RDV_Complete,\n-      M_Call_Complete,\n-      M_Delay,\n-\n-      --  Errors\n-\n-      E_Missed,\n-      E_Timeout,\n-      E_Kill,\n-\n-      --  Waiting events\n-\n-      W_Call,\n-      W_Accept,\n-      W_Select,\n-      W_Completion,\n-      W_Delay,\n-      WU_Delay,\n-\n-      WT_Call,\n-      WT_Select,\n-      WT_Completion,\n-\n-      --  Protected objects events\n-\n-      PO_Call,\n-      POT_Call,\n-      PO_Run,\n-      PO_Lock,\n-      PO_Unlock,\n-      PO_Done,\n-\n-      --  Task handling events\n-\n-      T_Create,\n-      T_Activate,\n-      T_Abort,\n-      T_Terminate);\n-\n-   --  Send_Trace_Info procedures\n-\n-   --  They are overloaded, depending on the parameters passed with\n-   --  the event, e.g. Time information, Task name, Accept name ...\n-\n-   procedure Send_Trace_Info (Id : Trace_T);\n-\n-   procedure Send_Trace_Info (Id : Trace_T; Timeout : Duration);\n-\n-end System.Traces;"}, {"sha": "93f0e24c5b3cf7ee328efa95acdeccd32a7fd9bc", "filename": "gcc/ada/s-trafor-default.adb", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-trafor-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-trafor-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trafor-default.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,113 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                  S Y S T E M . T R A C E S . F O R M A T                 --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-with System.Parameters;\n-\n-package body System.Traces.Format is\n-\n-   procedure Send_Trace (Id : Trace_T; Info : String) is separate;\n-\n-   ------------------\n-   -- Format_Trace --\n-   ------------------\n-\n-   function Format_Trace (Source : String) return String_Trace is\n-      Length : constant Integer := Source'Length;\n-      Result : String_Trace     := (others => ' ');\n-\n-   begin\n-      --  If run-time tracing active, then fill the string\n-\n-      if Parameters.Runtime_Traces then\n-         if Max_Size - Length > 0 then\n-            Result (1 .. Length) := Source (1 .. Length);\n-            Result (Length + 1 .. Max_Size) := (others => ' ');\n-            Result (Length + 1) := ASCII.NUL;\n-         else\n-            Result (1 .. Max_Size - 1) :=\n-              Source (Source'First .. Source'First - 1 + Max_Size - 1);\n-            Result (Max_Size) := ASCII.NUL;\n-         end if;\n-      end if;\n-\n-      return Result;\n-   end Format_Trace;\n-\n-   ------------\n-   -- Append --\n-   ------------\n-\n-   function Append\n-     (Source : String_Trace;\n-      Annex  : String) return String_Trace\n-   is\n-      Result        : String_Trace     := (others => ' ');\n-      Annex_Length  : constant Integer := Annex'Length;\n-      Source_Length : Integer;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-\n-         --  First we determine the size used, without the spaces at the end,\n-         --  if a String_Trace is present. Look at System.Traces.Tasking for\n-         --  examples.\n-\n-         Source_Length := 1;\n-         while Source (Source_Length) /= ASCII.NUL loop\n-            Source_Length := Source_Length + 1;\n-         end loop;\n-\n-         --  Then we fill the string\n-\n-         if Source_Length - 1 + Annex_Length <= Max_Size then\n-            Result (1 .. Source_Length - 1) :=\n-              Source (1 .. Source_Length - 1);\n-\n-            Result (Source_Length .. Source_Length - 1 + Annex_Length) :=\n-              Annex (1 ..  Annex_Length);\n-\n-            Result (Source_Length + Annex_Length) := ASCII.NUL;\n-\n-            Result (Source_Length + Annex_Length + 1 .. Max_Size) :=\n-              (others => ' ');\n-\n-         else\n-            Result (1 .. Source_Length - 1) := Source (1 .. Source_Length - 1);\n-            Result (Source_Length .. Max_Size - 1) :=\n-              Annex (1 .. Max_Size - Source_Length);\n-            Result (Max_Size) := ASCII.NUL;\n-         end if;\n-      end if;\n-\n-      return Result;\n-   end Append;\n-\n-end System.Traces.Format;"}, {"sha": "82cdf97ba05f7657e01d1f5057a2f5c2148260d9", "filename": "gcc/ada/s-trafor-default.ads", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-trafor-default.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-trafor-default.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trafor-default.ads?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,61 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                  S Y S T E M . T R A C E S . F O R M A T                 --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package implements functions to format run-time traces\n-\n-package System.Traces.Format is\n-   pragma Preelaborate;\n-\n-   Max_Size : constant Integer := 128;\n-   --  Maximum size if event messages\n-\n-   subtype String_Trace is String (1 .. Max_Size);\n-   --  Specific type in which trace information is stored. An ASCII.NUL\n-   --  character ends the string so that it is compatible with C strings\n-   --  which is useful on some targets (e.g. VxWorks)\n-\n-   --  These private functions handles String_Trace formatting\n-\n-   function Format_Trace (Source : String) return String_Trace;\n-   --  Put a String in a String_Trace, truncates the string if necessary.\n-   --  Similar to Head( .. ) found in Ada.Strings.Bounded\n-\n-   function Append\n-     (Source : String_Trace;\n-      Annex  : String)\n-      return   String_Trace;\n-   pragma Inline (Append);\n-   --  Concatenates two string, similar to & operator from Ada.String.Unbounded\n-\n-   procedure Send_Trace (Id : Trace_T; Info : String);\n-   --  This function (which is a subunit) send messages to external programs\n-\n-end System.Traces.Format;"}, {"sha": "9e45771bd0924a0c30dddf2de9609959b291b542", "filename": "gcc/ada/s-tratas-default.adb", "status": "removed", "additions": 0, "deletions": 367, "changes": 367, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tratas-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tratas-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tratas-default.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,367 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                 S Y S T E M . T R A C E S . T A S K I N G                --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-with System.Tasking;       use System.Tasking;\n-with System.Soft_Links;\n-with System.Parameters;\n-with System.Traces.Format; use System.Traces.Format;\n-with System.Traces;        use System.Traces;\n-\n-package body System.Traces.Tasking is\n-\n-   use System.Traces;\n-\n-   package SSL renames System.Soft_Links;\n-\n-   function Extract_Accepts (Task_Name : Task_Id) return String_Trace;\n-   --  This function is used to extract data joined with\n-   --  W_Select, WT_Select, W_Accept events\n-\n-   ---------------------\n-   -- Send_Trace_Info --\n-   ---------------------\n-\n-   procedure Send_Trace_Info (Id : Trace_T; Task_Name2 : Task_Id) is\n-      Task_S  : constant String := SSL.Task_Name.all;\n-      Task2_S : constant String :=\n-                  Task_Name2.Common.Task_Image\n-                    (1 .. Task_Name2.Common.Task_Image_Len);\n-      Trace_S : String (1 .. 6 + Task_S'Length + Task2_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task2_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         case Id is\n-            when M_RDV_Complete\n-               | PO_Done\n-            =>\n-               Trace_S (1 .. 3)                 := \"/N:\";\n-               Trace_S (4 .. 3 + L0)            := Task_S;\n-               Trace_S (4 + L0 .. 6 + L0)       := \"/C:\";\n-               Trace_S (7 + L0 .. Trace_S'Last) := Task2_S;\n-               Send_Trace (Id, Trace_S);\n-\n-            when E_Missed =>\n-               Trace_S (1 .. 3)                 := \"/N:\";\n-               Trace_S (4 .. 3 + L0)            := Task_S;\n-               Trace_S (4 + L0 .. 6 + L0)       := \"/A:\";\n-               Trace_S (7 + L0 .. Trace_S'Last) := Task2_S;\n-               Send_Trace (Id, Trace_S);\n-\n-            when E_Kill =>\n-               Trace_S (1 .. 3)                 := \"/N:\";\n-               Trace_S (4 .. 3 + L1)            := Task2_S;\n-               Trace_S (4 + L1 .. Trace_S'Last) := (others => ' ');\n-               Send_Trace (Id, Trace_S);\n-\n-            when T_Create =>\n-               Trace_S (1 .. 3)                 := \"/N:\";\n-               Trace_S (4 .. 3 + L1)            := Task2_S;\n-               Trace_S (4 + L1 .. Trace_S'Last) := (others => ' ');\n-               Send_Trace (Id, Trace_S);\n-\n-            when others =>\n-               null;\n-               --  should raise an exception ???\n-         end case;\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Task_Name2   : Task_Id;\n-      Entry_Number : Entry_Index)\n-   is\n-      Task_S  : constant String := SSL.Task_Name.all;\n-      Task2_S : constant String :=\n-                  Task_Name2.Common.Task_Image\n-                    (1 .. Task_Name2.Common.Task_Image_Len);\n-      Entry_S   : constant String := Integer'Image (Integer (Entry_Number));\n-      Trace_S   : String (1 .. 9 + Task_S'Length\n-                                 + Task2_S'Length + Entry_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task_S'Length + Entry_S'Length;\n-      L2 : constant Integer := Task_S'Length + Task2_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         case Id is\n-            when M_Accept_Complete =>\n-               Trace_S (1 .. 3)                  := \"/N:\";\n-               Trace_S (4 .. 3 + L0)             := Task_S;\n-               Trace_S (4 + L0 .. 6 + L0)        := \"/E:\";\n-               Trace_S (7 + L0 .. 6 + L1)         := Entry_S;\n-               Trace_S (7 + L1 .. 9 + L1)        := \"/C:\";\n-               Trace_S (10 + L1 .. Trace_S'Last) := Task2_S;\n-               Send_Trace (Id, Trace_S);\n-\n-            when W_Call =>\n-               Trace_S (1 .. 3)                  := \"/N:\";\n-               Trace_S (4 .. 3 + L0)             := Task_S;\n-               Trace_S (4 + L0 .. 6 + L0)        := \"/A:\";\n-               Trace_S (7 + L0 .. 6 + L2)        := Task2_S;\n-               Trace_S (7 + L2 .. 9 + L2)        := \"/C:\";\n-               Trace_S (10 + L2 .. Trace_S'Last) := Entry_S;\n-               Send_Trace (Id, Trace_S);\n-\n-            when others =>\n-               null;\n-               --  should raise an exception ???\n-         end case;\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Task_Name    : Task_Id;\n-      Task_Name2   : Task_Id;\n-      Entry_Number : Entry_Index)\n-   is\n-      Task_S  : constant String :=\n-                  Task_Name.Common.Task_Image\n-                    (1 .. Task_Name.Common.Task_Image_Len);\n-      Task2_S : constant String :=\n-                  Task_Name2.Common.Task_Image\n-                    (1 .. Task_Name2.Common.Task_Image_Len);\n-      Entry_S   : constant String := Integer'Image (Integer (Entry_Number));\n-      Trace_S   : String (1 .. 9 + Task_S'Length\n-                                 + Task2_S'Length + Entry_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task_S'Length + Entry_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         case Id is\n-            when PO_Run =>\n-               Trace_S (1 .. 3)                  := \"/N:\";\n-               Trace_S (4 .. 3 + L0)             := Task_S;\n-               Trace_S (4 + L0 .. 6 + L0)        := \"/E:\";\n-               Trace_S (7 + L0 .. 6 + L1)        := Entry_S;\n-               Trace_S (7 + L1 .. 9 + L1)        := \"/C:\";\n-               Trace_S (10 + L1 .. Trace_S'Last) := Task2_S;\n-               Send_Trace (Id, Trace_S);\n-\n-            when others =>\n-               null;\n-               --  should raise an exception ???\n-         end case;\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info (Id : Trace_T; Entry_Number : Entry_Index) is\n-      Task_S  : constant String := SSL.Task_Name.all;\n-      Entry_S : constant String := Integer'Image (Integer (Entry_Number));\n-      Trace_S : String (1 .. 6 + Task_S'Length + Entry_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3)                 := \"/N:\";\n-         Trace_S (4 .. 3 + L0)            := Task_S;\n-         Trace_S (4 + L0 .. 6 + L0)       := \"/E:\";\n-         Trace_S (7 + L0 .. Trace_S'Last) := Entry_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id         : Trace_T;\n-      Task_Name  : Task_Id;\n-      Task_Name2 : Task_Id)\n-   is\n-      Task_S  : constant String :=\n-                  Task_Name.Common.Task_Image\n-                    (1 .. Task_Name.Common.Task_Image_Len);\n-      Task2_S : constant String :=\n-                  Task_Name2.Common.Task_Image\n-                    (1 .. Task_Name2.Common.Task_Image_Len);\n-      Trace_S : String (1 .. 6 + Task_S'Length + Task2_S'Length);\n-\n-      L0 : constant Integer := Task2_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3)                 := \"/N:\";\n-         Trace_S (4 .. 3 + L0)            := Task2_S;\n-         Trace_S (4 + L0 .. 6 + L0)       := \"/P:\";\n-         Trace_S (7 + L0 .. Trace_S'Last) := Task_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Acceptor     : Task_Id;\n-      Entry_Number : Entry_Index;\n-      Timeout      : Duration)\n-   is\n-      Task_S     : constant String := SSL.Task_Name.all;\n-      Acceptor_S : constant String :=\n-                     Acceptor.Common.Task_Image\n-                       (1 .. Acceptor.Common.Task_Image_Len);\n-      Entry_S    : constant String := Integer'Image (Integer (Entry_Number));\n-      Timeout_S  : constant String := Duration'Image (Timeout);\n-      Trace_S    : String (1 .. 12 + Task_S'Length + Acceptor_S'Length\n-                                   + Entry_S'Length + Timeout_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task_S'Length + Acceptor_S'Length;\n-      L2 : constant Integer :=\n-             Task_S'Length + Acceptor_S'Length + Entry_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3)                  := \"/N:\";\n-         Trace_S (4 .. 3 + L0)             := Task_S;\n-         Trace_S (4 + L0 .. 6 + L0)        := \"/A:\";\n-         Trace_S (7 + L0 .. 6 + L1)        := Acceptor_S;\n-         Trace_S (7 + L1 .. 9 + L1)        := \"/E:\";\n-         Trace_S (10 + L1 .. 9 + L2)       := Entry_S;\n-         Trace_S (10 + L2 .. 12 + L2)      := \"/T:\";\n-         Trace_S (13 + L2 .. Trace_S'Last) := Timeout_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Entry_Number : Entry_Index;\n-      Timeout      : Duration)\n-   is\n-      Task_S    : constant String := SSL.Task_Name.all;\n-      Entry_S   : constant String := Integer'Image (Integer (Entry_Number));\n-      Timeout_S : constant String := Duration'Image (Timeout);\n-      Trace_S   : String (1 .. 9 + Task_S'Length\n-                                 + Entry_S'Length + Timeout_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task_S'Length + Entry_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3)                  := \"/N:\";\n-         Trace_S (4 .. 3 + L0)             := Task_S;\n-         Trace_S (4 + L0 .. 6 + L0)        := \"/E:\";\n-         Trace_S (7 + L0 .. 6 + L1)        := Entry_S;\n-         Trace_S (7 + L1 .. 9 + L1)        := \"/T:\";\n-         Trace_S (10 + L1 .. Trace_S'Last) := Timeout_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id        : Trace_T;\n-      Task_Name : Task_Id;\n-      Number    : Integer)\n-   is\n-      Task_S    : constant String := SSL.Task_Name.all;\n-      Number_S  : constant String := Integer'Image (Number);\n-      Accepts_S : constant String := Extract_Accepts (Task_Name);\n-      Trace_S   : String (1 .. 9 + Task_S'Length\n-                                 + Number_S'Length + Accepts_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task_S'Length + Number_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3)                  := \"/N:\";\n-         Trace_S (4 .. 3 + L0)             := Task_S;\n-         Trace_S (4 + L0 .. 6 + L0)        := \"/#:\";\n-         Trace_S (7 + L0 .. 6 + L1)        := Number_S;\n-         Trace_S (7 + L1 .. 9 + L1)        := \"/E:\";\n-         Trace_S (10 + L1 .. Trace_S'Last) := Accepts_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id        : Trace_T;\n-      Task_Name : Task_Id;\n-      Number    : Integer;\n-      Timeout   : Duration)\n-   is\n-      Task_S    : constant String := SSL.Task_Name.all;\n-      Timeout_S : constant String := Duration'Image (Timeout);\n-      Number_S  : constant String := Integer'Image (Number);\n-      Accepts_S : constant String := Extract_Accepts (Task_Name);\n-      Trace_S   : String (1 .. 12 + Task_S'Length + Timeout_S'Length\n-                                  + Number_S'Length + Accepts_S'Length);\n-\n-      L0 : constant Integer := Task_S'Length;\n-      L1 : constant Integer := Task_S'Length + Timeout_S'Length;\n-      L2 : constant Integer :=\n-             Task_S'Length + Timeout_S'Length + Number_S'Length;\n-\n-   begin\n-      if Parameters.Runtime_Traces then\n-         Trace_S (1 .. 3)                  := \"/N:\";\n-         Trace_S (4 .. 3 + L0)             := Task_S;\n-         Trace_S (4 + L0 .. 6 + L0)        := \"/T:\";\n-         Trace_S (7 + L0 .. 6 + L1)        := Timeout_S;\n-         Trace_S (7 + L1 .. 9 + L1)        := \"/#:\";\n-         Trace_S (10 + L1 .. 9 + L2)       := Number_S;\n-         Trace_S (10 + L2 .. 12 + L2)      := \"/E:\";\n-         Trace_S (13 + L2 .. Trace_S'Last) := Accepts_S;\n-         Send_Trace (Id, Trace_S);\n-      end if;\n-   end Send_Trace_Info;\n-\n-   ---------------------\n-   -- Extract_Accepts --\n-   ---------------------\n-\n-   --  This function returns a string in which all opened\n-   --  Accepts or Selects are given, separated by semi-colons.\n-\n-   function Extract_Accepts (Task_Name : Task_Id) return String_Trace is\n-      Info_Annex : String_Trace := (ASCII.NUL, others => ' ');\n-\n-   begin\n-      for J in Task_Name.Open_Accepts'First ..\n-        Task_Name.Open_Accepts'Last - 1\n-      loop\n-         Info_Annex := Append (Info_Annex, Integer'Image\n-                               (Integer (Task_Name.Open_Accepts (J).S)) & \",\");\n-      end loop;\n-\n-      Info_Annex := Append (Info_Annex,\n-                            Integer'Image (Integer\n-                                           (Task_Name.Open_Accepts\n-                                            (Task_Name.Open_Accepts'Last).S)));\n-      return Info_Annex;\n-   end Extract_Accepts;\n-end System.Traces.Tasking;"}, {"sha": "7a6ac5d8fe8913aa3285945f981024ce68a5900f", "filename": "gcc/ada/s-tratas.adb", "status": "removed", "additions": 0, "deletions": 119, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tratas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tratas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tratas.adb?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,119 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                 S Y S T E M . T R A C E S . T A S K I N G                --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package body System.Traces.Tasking is\n-\n-   pragma Warnings (Off); -- kill warnings on unreferenced formals\n-\n-   ---------------------\n-   -- Send_Trace_Info --\n-   ---------------------\n-\n-   procedure Send_Trace_Info (Id : Trace_T; Task_Name2 : ST.Task_Id) is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Task_Name2   : ST.Task_Id;\n-      Entry_Number : ST.Entry_Index)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Task_Name    : ST.Task_Id;\n-      Task_Name2   : ST.Task_Id;\n-      Entry_Number : ST.Entry_Index)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id         : Trace_T;\n-      Task_Name  : ST.Task_Id;\n-      Task_Name2 : ST.Task_Id)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Entry_Number : ST.Entry_Index)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Acceptor     : ST.Task_Id;\n-      Entry_Number : ST.Entry_Index;\n-      Timeout      : Duration)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Entry_Number : ST.Entry_Index;\n-      Timeout      : Duration)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id        : Trace_T;\n-      Task_Name : ST.Task_Id;\n-      Number    : Integer)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-   procedure Send_Trace_Info\n-     (Id        : Trace_T;\n-      Task_Name : ST.Task_Id;\n-      Number    : Integer;\n-      Timeout   : Duration)\n-   is\n-   begin\n-      null;\n-   end Send_Trace_Info;\n-\n-end System.Traces.Tasking;"}, {"sha": "8f89445cdc7afe35fda5fd52575270084cdb3287", "filename": "gcc/ada/s-tratas.ads", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tratas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-tratas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tratas.ads?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,95 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n---                                                                          --\n---                  S Y S T E M . T R A C E S . T A S K I N G               --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides all procedures used to implement debug traces\n---  in the case tasking is involved.\n-\n---  See System.Traces for an overview of the various files involved in Tracing\n-\n---  If tasking is not involved, refer to System.Traces.General\n-\n-with System.Tasking;\n-\n-package System.Traces.Tasking is\n-   pragma Preelaborate;\n-\n-   package ST renames System.Tasking;\n-\n-   --  Send_Trace_Info procedures\n-\n-   --  They are overloaded, depending on the parameters passed with the event\n-\n-   procedure Send_Trace_Info\n-     (Id         : Trace_T;\n-      Task_Name2 : ST.Task_Id);\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Task_Name2   : ST.Task_Id;\n-      Entry_Number : ST.Entry_Index);\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Task_Name    : ST.Task_Id;\n-      Task_Name2   : ST.Task_Id;\n-      Entry_Number : ST.Entry_Index);\n-\n-   procedure Send_Trace_Info\n-     (Id         : Trace_T;\n-      Task_Name  : ST.Task_Id;\n-      Task_Name2 : ST.Task_Id);\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Entry_Number : ST.Entry_Index);\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Acceptor     : ST.Task_Id;\n-      Entry_Number : ST.Entry_Index;\n-      Timeout      : Duration);\n-\n-   procedure Send_Trace_Info\n-     (Id           : Trace_T;\n-      Entry_Number : ST.Entry_Index;\n-      Timeout      : Duration);\n-\n-   procedure Send_Trace_Info\n-     (Id         : Trace_T;\n-      Task_Name  : ST.Task_Id;\n-      Number     : Integer);\n-\n-   procedure Send_Trace_Info\n-     (Id         : Trace_T;\n-      Task_Name  : ST.Task_Id;\n-      Number     : Integer;\n-      Timeout    : Duration);\n-end System.Traces.Tasking;"}, {"sha": "a67c2d6561682be56316298890480d9776809272", "filename": "gcc/ada/s-vxwork-sparcv9.ads", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-vxwork-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3d4d827dd6fd753aa16ff2b91b03b197181bf7/gcc%2Fada%2Fs-vxwork-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-sparcv9.ads?ref=ed3d4d827dd6fd753aa16ff2b91b03b197181bf7", "patch": "@@ -1,60 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n---                                                                          --\n---                        S Y S T E M . V X W O R K S                       --\n---                                                                          --\n---                                   S p e c                                --\n---                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Sparc64 VxWorks version of this package\n-\n-with Interfaces;\n-\n-package System.VxWorks is\n-   pragma Preelaborate;\n-\n-   --  Floating point context record. SPARCV9 version\n-\n-   FP_NUM_DREGS : constant := 32;\n-\n-   type RType is new Interfaces.Unsigned_64;\n-   for RType'Alignment use 8;\n-\n-   type Fpd_Array is array (1 .. FP_NUM_DREGS) of RType;\n-   for Fpd_Array'Alignment use 8;\n-\n-   type FP_CONTEXT is record\n-      fpd : Fpd_Array;\n-      fsr : RType;\n-   end record;\n-\n-   for FP_CONTEXT'Alignment use 8;\n-   pragma Convention (C, FP_CONTEXT);\n-\n-   Num_HW_Interrupts : constant := 256;\n-   --  Number of entries in hardware interrupt vector table\n-\n-end System.VxWorks;"}]}