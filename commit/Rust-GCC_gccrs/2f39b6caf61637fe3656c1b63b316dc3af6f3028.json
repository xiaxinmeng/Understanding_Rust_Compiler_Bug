{"sha": "2f39b6caf61637fe3656c1b63b316dc3af6f3028", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzOWI2Y2FmNjE2MzdmZTM2NTZjMWI2M2IzMTZkYzNhZjZmMzAyOA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-09-28T23:29:02Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-09-28T23:29:02Z"}, "message": "cse.c (cse_insn): Avoid creating direct non-local jumps.\n\n\t* cse.c (cse_insn): Avoid creating direct non-local jumps.\n\t* combine.c (can_combine_p): Likewise.\n\t* local-alloc. (update_equiv_regs): Likewise.\n\nFrom-SVN: r88258", "tree": {"sha": "2ac40772304a0e5a5f796356ffe7f8326d39ef03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ac40772304a0e5a5f796356ffe7f8326d39ef03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f39b6caf61637fe3656c1b63b316dc3af6f3028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f39b6caf61637fe3656c1b63b316dc3af6f3028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f39b6caf61637fe3656c1b63b316dc3af6f3028", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f39b6caf61637fe3656c1b63b316dc3af6f3028/comments", "author": null, "committer": null, "parents": [{"sha": "b0b324b07fc46746d3eada8cc27d6000a3756bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b324b07fc46746d3eada8cc27d6000a3756bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0b324b07fc46746d3eada8cc27d6000a3756bed"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "129c408820456c548162398e01ca38564acf422a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f39b6caf61637fe3656c1b63b316dc3af6f3028", "patch": "@@ -1,3 +1,9 @@\n+2004-09-28  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* cse.c (cse_insn): Avoid creating direct non-local jumps.\n+\t* combine.c (can_combine_p): Likewise.\n+\t* local-alloc. (update_equiv_regs): Likewise.\n+\n 2004-09-28  Richard Henderson  <rth@redhat.com>\n \n \tPR 17531"}, {"sha": "2c7fbf5e74dc93b63c9d8b38438a48ee06b81b61", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2f39b6caf61637fe3656c1b63b316dc3af6f3028", "patch": "@@ -1176,6 +1176,8 @@ can_combine_p (rtx insn, rtx i3, rtx pred ATTRIBUTE_UNUSED, rtx succ,\n       /* Don't substitute into an incremented register.  */\n       || FIND_REG_INC_NOTE (i3, dest)\n       || (succ && FIND_REG_INC_NOTE (succ, dest))\n+      /* Don't substitute into a non-local goto, this confuses CFG.  */\n+      || (JUMP_P (i3) && find_reg_note (i3, REG_NON_LOCAL_GOTO, NULL_RTX))\n #if 0\n       /* Don't combine the end of a libcall into anything.  */\n       /* ??? This gives worse code, and appears to be unnecessary, since no"}, {"sha": "651203d1064c944be77eb761e0ac04fbf26f2461", "filename": "gcc/cse.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=2f39b6caf61637fe3656c1b63b316dc3af6f3028", "patch": "@@ -5395,6 +5395,11 @@ cse_insn (rtx insn, rtx libcall_insn)\n \t\t  || (GET_CODE (trial) == LABEL_REF\n \t\t      && ! condjump_p (insn))))\n \t    {\n+\t      /* Don't substitute non-local labels, this confuses CFG.  */\n+\t      if (GET_CODE (trial) == LABEL_REF\n+\t\t  && LABEL_REF_NONLOCAL_P (trial))\n+\t\tcontinue;\n+\n \t      SET_SRC (sets[i].rtl) = trial;\n \t      cse_jumps_altered = 1;\n \t      break;"}, {"sha": "64db8c4258f692a483678220879bda070b8ddffe", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f39b6caf61637fe3656c1b63b316dc3af6f3028/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=2f39b6caf61637fe3656c1b63b316dc3af6f3028", "patch": "@@ -1010,6 +1010,11 @@ update_equiv_regs (void)\n \t  if (! INSN_P (insn))\n \t    continue;\n \n+\t  /* Don't substitute into a non-local goto, this confuses CFG.  */\n+\t  if (JUMP_P (insn)\n+\t      && find_reg_note (insn, REG_NON_LOCAL_GOTO, NULL_RTX))\n+\t    continue;\n+\n \t  for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n \t    {\n \t      if (REG_NOTE_KIND (link) == REG_DEAD"}]}