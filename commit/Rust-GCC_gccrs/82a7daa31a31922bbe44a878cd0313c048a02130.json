{"sha": "82a7daa31a31922bbe44a878cd0313c048a02130", "node_id": "C_kwDOANBUbNoAKDgyYTdkYWEzMWEzMTkyMmJiZTQ0YTg3OGNkMDMxM2MwNDhhMDIxMzA", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-11-19T17:24:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-01T10:24:43Z"}, "message": "[Ada] Fix incorrect fixed-point computation in expression function\n\ngcc/ada/\n\n\t* einfo.ads (E_Decimal_Fixed_Point_Subtype): Fix pasto.\n\t* freeze.adb (Freeze_Fixed_Point_Type): Retrieve the underlying type\n\tof the first subtype and do not use a stale value of Small_Value.\n\t* sem_res.adb (Resolve_Real_Literal): In the case of a fixed-point\n\ttype, make sure that the base type is frozen and use its Small_Value\n\tto compute the corresponding integer value of the literal.", "tree": {"sha": "9db7700054d45266272e1ebf755106c0b318d2b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9db7700054d45266272e1ebf755106c0b318d2b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82a7daa31a31922bbe44a878cd0313c048a02130", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a7daa31a31922bbe44a878cd0313c048a02130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a7daa31a31922bbe44a878cd0313c048a02130", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a7daa31a31922bbe44a878cd0313c048a02130/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba12deb95594b898094b199f9f5ec1a52542be6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba12deb95594b898094b199f9f5ec1a52542be6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba12deb95594b898094b199f9f5ec1a52542be6b"}], "stats": {"total": 53, "additions": 27, "deletions": 26}, "files": [{"sha": "ca2ba2033532a7791d49760a85217fcf2dac92a9", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a7daa31a31922bbe44a878cd0313c048a02130/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a7daa31a31922bbe44a878cd0313c048a02130/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=82a7daa31a31922bbe44a878cd0313c048a02130", "patch": "@@ -5353,7 +5353,7 @@ package Einfo is\n    --    Size_Clause                           (synth)\n \n    --  E_Decimal_Fixed_Point_Type\n-   --  E_Decimal_Fixed_Subtype$$$no such thing\n+   --  E_Decimal_Fixed_Point_Subtype\n    --    Scale_Value\n    --    Digits_Value\n    --    Scalar_Range"}, {"sha": "ad841cf14e32706f4124ae8434142f743fa61208", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 17, "deletions": 22, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a7daa31a31922bbe44a878cd0313c048a02130/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a7daa31a31922bbe44a878cd0313c048a02130/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=82a7daa31a31922bbe44a878cd0313c048a02130", "patch": "@@ -8997,8 +8997,9 @@ package body Freeze is\n       Brng  : constant Node_Id    := Scalar_Range (Btyp);\n       BLo   : constant Node_Id    := Low_Bound (Brng);\n       BHi   : constant Node_Id    := High_Bound (Brng);\n-      Par   : constant Entity_Id  := First_Subtype (Typ);\n-      Small : constant Ureal      := Small_Value (Typ);\n+      Ftyp  : constant Entity_Id  := Underlying_Type (First_Subtype (Typ));\n+\n+      Small : Ureal;\n       Loval : Ureal;\n       Hival : Ureal;\n       Atype : Entity_Id;\n@@ -9037,7 +9038,7 @@ package body Freeze is\n \n       function Larger (A, B : Ureal) return Boolean is\n       begin\n-         return A > B and then A - Small > B;\n+         return A > B and then A - Small_Value (Typ) > B;\n       end Larger;\n \n       -------------\n@@ -9046,7 +9047,7 @@ package body Freeze is\n \n       function Smaller (A, B : Ureal) return Boolean is\n       begin\n-         return A < B and then A + Small < B;\n+         return A < B and then A + Small_Value (Typ) < B;\n       end Smaller;\n \n    --  Start of processing for Freeze_Fixed_Point_Type\n@@ -9057,9 +9058,15 @@ package body Freeze is\n       --  so that all characteristics of the type (size, bounds) can be\n       --  computed and validated in the call to Minimum_Size that follows.\n \n-      if Has_Delayed_Aspects (First_Subtype (Typ)) then\n-         Analyze_Aspects_At_Freeze_Point (First_Subtype (Typ));\n-         Set_Has_Delayed_Aspects (First_Subtype (Typ), False);\n+      if Has_Delayed_Aspects (Ftyp) then\n+         Analyze_Aspects_At_Freeze_Point (Ftyp);\n+         Set_Has_Delayed_Aspects (Ftyp, False);\n+      end if;\n+\n+      --  Inherit the Small value from the first subtype in any case\n+\n+      if Typ /= Ftyp then\n+         Set_Small_Value (Typ, Small_Value (Ftyp));\n       end if;\n \n       --  If Esize of a subtype has not previously been set, set it now\n@@ -9074,16 +9081,6 @@ package body Freeze is\n          end if;\n       end if;\n \n-      --  The 'small attribute may have been specified with an aspect,\n-      --  in which case it is processed after a subtype declaration, so\n-      --  inherit now the specified value.\n-\n-      if Typ /= Par\n-        and then Present (Find_Aspect (Par, Aspect_Small))\n-      then\n-         Set_Small_Value (Typ, Small_Value (Par));\n-      end if;\n-\n       --  Immediate return if the range is already analyzed. This means that\n       --  the range is already set, and does not need to be computed by this\n       --  routine.\n@@ -9100,6 +9097,7 @@ package body Freeze is\n          return;\n       end if;\n \n+      Small := Small_Value (Typ);\n       Loval := Realval (Lo);\n       Hival := Realval (Hi);\n \n@@ -9137,7 +9135,6 @@ package body Freeze is\n             Size_Excl_EP  : Int;\n \n             Model_Num     : Ureal;\n-            First_Subt    : Entity_Id;\n             Actual_Lo     : Ureal;\n             Actual_Hi     : Ureal;\n \n@@ -9279,10 +9276,8 @@ package body Freeze is\n                --  to get a base type whose size is smaller than the specified\n                --  size of the first subtype.\n \n-               First_Subt := First_Subtype (Typ);\n-\n-               if Has_Size_Clause (First_Subt)\n-                 and then Size_Incl_EP <= Esize (First_Subt)\n+               if Has_Size_Clause (Ftyp)\n+                 and then Size_Incl_EP <= Esize (Ftyp)\n                then\n                   Actual_Size := Size_Incl_EP;\n                   Actual_Lo   := Loval_Incl_EP;"}, {"sha": "84612c3d7ba99694af992c0dc166d2b32309d979", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a7daa31a31922bbe44a878cd0313c048a02130/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a7daa31a31922bbe44a878cd0313c048a02130/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=82a7daa31a31922bbe44a878cd0313c048a02130", "patch": "@@ -10765,17 +10765,23 @@ package body Sem_Res is\n \n    begin\n       --  Special processing for fixed-point literals to make sure that the\n-      --  value is an exact multiple of small where this is required. We skip\n-      --  this for the universal real case, and also for generic types.\n+      --  value is an exact multiple of the small where this is required. We\n+      --  skip this for the universal real case, and also for generic types.\n \n       if Is_Fixed_Point_Type (Typ)\n         and then Typ /= Universal_Fixed\n         and then Typ /= Any_Fixed\n         and then not Is_Generic_Type (Typ)\n       then\n+         --  We must freeze the base type to get the proper value of the small\n+\n+         if not Is_Frozen (Base_Type (Typ)) then\n+            Freeze_Fixed_Point_Type (Base_Type (Typ));\n+         end if;\n+\n          declare\n             Val   : constant Ureal := Realval (N);\n-            Cintr : constant Ureal := Val / Small_Value (Typ);\n+            Cintr : constant Ureal := Val / Small_Value (Base_Type (Typ));\n             Cint  : constant Uint  := UR_Trunc (Cintr);\n             Den   : constant Uint  := Norm_Den (Cintr);\n             Stat  : Boolean;"}]}