{"sha": "d560a41c5c43524d82795ac4421eab2df6764e30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2MGE0MWM1YzQzNTI0ZDgyNzk1YWM0NDIxZWFiMmRmNjc2NGUzMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-08-29T22:44:05Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-08-29T22:44:05Z"}, "message": "function.h (struct function): Add rtl_inline_init, saved_for_inline.\n\n        * function.h (struct function): Add rtl_inline_init, saved_for_inline.\n        * integrate.c (save_for_inline): Set saved_for_inline.\n        * c-semantics.c (genrtl_scope_stmt): Check it.\n        * toplev.c (wrapup_global_declarations): Check it.\n        (rest_of_handle_inlining): Set and check rtl_inline_init.\n        (rest_of_compilation): Remove out of date comment.\n\nFrom-SVN: r70931", "tree": {"sha": "b8bd1c0f20314f33063c82cf2cf403d0630408e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8bd1c0f20314f33063c82cf2cf403d0630408e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d560a41c5c43524d82795ac4421eab2df6764e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d560a41c5c43524d82795ac4421eab2df6764e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d560a41c5c43524d82795ac4421eab2df6764e30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d560a41c5c43524d82795ac4421eab2df6764e30/comments", "author": null, "committer": null, "parents": [{"sha": "3a70d621853e616201bac254b8e3900b63b6fcf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70d621853e616201bac254b8e3900b63b6fcf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a70d621853e616201bac254b8e3900b63b6fcf4"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "d573615b6e3b3e270810cfe95c47a9aa8afe791b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d560a41c5c43524d82795ac4421eab2df6764e30", "patch": "@@ -1,3 +1,12 @@\n+2003-08-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* function.h (struct function): Add rtl_inline_init, saved_for_inline.\n+\t* integrate.c (save_for_inline): Set saved_for_inline.\n+\t* c-semantics.c (genrtl_scope_stmt): Check it.\n+\t* toplev.c (wrapup_global_declarations): Check it.\n+\t(rest_of_handle_inlining): Set and check rtl_inline_init.\n+\t(rest_of_compilation): Remove out of date comment.\n+\n 2003-08-29  Richard Henderson  <rth@redhat.com>\n \n \t* function.c (allocate_struct_function): New, split out of ..."}, {"sha": "4163d44919901a108e699601fd7f30dcdf689920", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=d560a41c5c43524d82795ac4421eab2df6764e30", "patch": "@@ -645,6 +645,7 @@ genrtl_scope_stmt (tree t)\n \t  if (TREE_CODE (fn) == FUNCTION_DECL\n \t      && DECL_CONTEXT (fn) == current_function_decl\n \t      && DECL_SAVED_INSNS (fn)\n+\t      && DECL_SAVED_INSNS (fn)->saved_for_inline\n \t      && !TREE_ASM_WRITTEN (fn)\n \t      && TREE_ADDRESSABLE (fn))\n \t    {"}, {"sha": "f94a64286f3e13c7260d3e678be8e27b02920536", "filename": "gcc/function.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=d560a41c5c43524d82795ac4421eab2df6764e30", "patch": "@@ -504,6 +504,13 @@ struct function GTY(())\n \n   /* Nonzero if code to initialize arg_pointer_save_area has been emitted.  */\n   unsigned int arg_pointer_save_area_init : 1;\n+\n+  /* Flag for use by ther rtl inliner, to tell if the function has been\n+     processed at least once.  */\n+  unsigned int rtl_inline_init : 1;\n+\n+  /* Nonzero if the rtl inliner has saved the function for inlining.  */\n+  unsigned int saved_for_inline : 1;\n };\n \n /* The function currently being compiled.  */"}, {"sha": "15474ba3f248eae0cf2438ffe14cd750610c216d", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=d560a41c5c43524d82795ac4421eab2df6764e30", "patch": "@@ -492,7 +492,7 @@ save_for_inline (tree fndecl)\n     }\n   cfun->original_decl_initial = DECL_INITIAL (fndecl);\n   cfun->no_debugging_symbols = (write_symbols == NO_DEBUG);\n-  DECL_SAVED_INSNS (fndecl) = cfun;\n+  cfun->saved_for_inline = 1;\n \n   /* Clean up.  */\n   if (! flag_no_inline)"}, {"sha": "3e639c6a151c8a6033ef1efaecd0ff7e67d8b6e7", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560a41c5c43524d82795ac4421eab2df6764e30/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d560a41c5c43524d82795ac4421eab2df6764e30", "patch": "@@ -1588,6 +1588,7 @@ wrapup_global_declarations (tree *vec, int len)\n \t  if (TREE_CODE (decl) == FUNCTION_DECL\n \t      && DECL_INITIAL (decl) != 0\n \t      && DECL_SAVED_INSNS (decl) != 0\n+\t      && DECL_SAVED_INSNS (decl)->saved_for_inline\n \t      && (flag_keep_inline_functions\n \t\t  || (TREE_PUBLIC (decl) && !DECL_COMDAT (decl))\n \t\t  || TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))))\n@@ -2464,8 +2465,9 @@ rest_of_handle_inlining (tree decl)\n \n   /* If we are reconsidering an inline function at the end of\n      compilation, skip the stuff for making it inline.  */\n-  if (DECL_SAVED_INSNS (decl) != 0)\n+  if (cfun->rtl_inline_init)\n     return 0;\n+  cfun->rtl_inline_init = 1;\n \n   /* If this is nested inside an inlined external function, pretend\n      it was only declared.  Since we cannot inline such functions,\n@@ -2522,7 +2524,7 @@ rest_of_handle_inlining (tree decl)\n \n   if (open_dump_file (DFI_rtl, decl))\n     {\n-      if (DECL_SAVED_INSNS (decl))\n+      if (DECL_SAVED_INSNS (decl) && DECL_SAVED_INSNS (decl)->saved_for_inline)\n \tfprintf (rtl_dump_file, \";; (integrable)\\n\\n\");\n       close_dump_file (DFI_rtl, print_rtl, insns);\n     }\n@@ -3553,9 +3555,6 @@ rest_of_compilation (tree decl)\n   if (! DECL_DEFER_OUTPUT (decl))\n     {\n       free_after_compilation (cfun);\n-\n-      /* Clear integrate.c's pointer to the cfun structure we just\n-\t destroyed.  */\n       DECL_SAVED_INSNS (decl) = 0;\n     }\n   cfun = 0;"}]}