{"sha": "c12beea07b1e3f88e7570f9fde7a6def03759f7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEyYmVlYTA3YjFlM2Y4OGU3NTcwZjlmZGU3YTZkZWYwMzc1OWY3Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-06-17T10:15:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T10:15:35Z"}, "message": "exp_ch6.adb, [...]: Use Make_Temporary\n\n2010-06-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch6.adb, exp_ch7.adb, exp_ch5.adb: Use Make_Temporary\n\t* tbuild.ads (Make_Temporary): More comment updates\n\t* tbuild.adb: Minor reformatting\n\nFrom-SVN: r160894", "tree": {"sha": "0916061956041f2d10c70858f733f38dcf23dd4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0916061956041f2d10c70858f733f38dcf23dd4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c12beea07b1e3f88e7570f9fde7a6def03759f7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c12beea07b1e3f88e7570f9fde7a6def03759f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c12beea07b1e3f88e7570f9fde7a6def03759f7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c12beea07b1e3f88e7570f9fde7a6def03759f7f/comments", "author": null, "committer": null, "parents": [{"sha": "191fcb3a9f04680935145a21a32f5ba30e3bea74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191fcb3a9f04680935145a21a32f5ba30e3bea74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/191fcb3a9f04680935145a21a32f5ba30e3bea74"}], "stats": {"total": 209, "additions": 81, "deletions": 128}, "files": [{"sha": "f6c1a7bb87b791938d6352f7fbd779ca1d41efd7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c12beea07b1e3f88e7570f9fde7a6def03759f7f", "patch": "@@ -1,3 +1,9 @@\n+2010-06-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch6.adb, exp_ch7.adb, exp_ch5.adb: Use Make_Temporary\n+\t* tbuild.ads (Make_Temporary): More comment updates\n+\t* tbuild.adb: Minor reformatting\n+\n 2010-06-17  Robert Dewar  <dewar@adacore.com>\n \n \t* checks.adb, exp_aggr.adb, exp_atag.adb, exp_attr.adb, exp_ch11.adb,"}, {"sha": "2cdb9c8111d0aa7f839c056320e760ae1b7e5cc7", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 35, "deletions": 61, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=c12beea07b1e3f88e7570f9fde7a6def03759f7f", "patch": "@@ -516,8 +516,7 @@ package body Exp_Ch5 is\n \n       if Nkind (Rhs) = N_String_Literal then\n          declare\n-            Temp : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+            Temp : constant Entity_Id := Make_Temporary (Loc, 'T', Rhs);\n             Decl : Node_Id;\n \n          begin\n@@ -1028,13 +1027,8 @@ package body Exp_Ch5 is\n          R_Index := First_Index (R_Type);\n \n          for J in 1 .. Ndim loop\n-            Lnn (J) :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('L'));\n-\n-            Rnn (J) :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('R'));\n+            Lnn (J) := Make_Temporary (Loc, 'L');\n+            Rnn (J) := Make_Temporary (Loc, 'R');\n \n             L_Index_Type (J) := Etype (L_Index);\n             R_Index_Type (J) := Etype (R_Index);\n@@ -1624,8 +1618,7 @@ package body Exp_Ch5 is\n             BPAR_Expr : constant Node_Id   := Relocate_Node (Prefix (Lhs));\n             BPAR_Typ  : constant Entity_Id := Etype (BPAR_Expr);\n             Tnn       : constant Entity_Id :=\n-                          Make_Defining_Identifier (Loc,\n-                            Chars => New_Internal_Name ('T'));\n+                          Make_Temporary (Loc, 'T', BPAR_Expr);\n \n          begin\n             --  Insert the post assignment first, because we want to copy the\n@@ -2848,8 +2841,7 @@ package body Exp_Ch5 is\n                      --  Create an access type designating the function's\n                      --  result subtype.\n \n-                     Ref_Type :=\n-                       Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+                     Ref_Type := Make_Temporary (Loc, 'A');\n \n                      Ptr_Type_Decl :=\n                        Make_Full_Type_Declaration (Loc,\n@@ -2867,9 +2859,7 @@ package body Exp_Ch5 is\n                      --  from an implicit access value passed in by the caller\n                      --  or from the result of an allocator.\n \n-                     Alloc_Obj_Id :=\n-                       Make_Defining_Identifier (Loc,\n-                         Chars => New_Internal_Name ('R'));\n+                     Alloc_Obj_Id := Make_Temporary (Loc, 'R');\n                      Set_Etype (Alloc_Obj_Id, Ref_Type);\n \n                      Alloc_Obj_Decl :=\n@@ -3854,8 +3844,7 @@ package body Exp_Ch5 is\n       then\n          declare\n             Return_Object_Entity : constant Entity_Id :=\n-                                     Make_Defining_Identifier (Loc,\n-                                       New_Internal_Name ('R'));\n+                                     Make_Temporary (Loc, 'R', Exp);\n             Obj_Decl : constant Node_Id :=\n                          Make_Object_Declaration (Loc,\n                            Defining_Identifier => Return_Object_Entity,\n@@ -4009,13 +3998,9 @@ package body Exp_Ch5 is\n          elsif CW_Or_Has_Controlled_Part (Utyp) then\n             declare\n                Loc        : constant Source_Ptr := Sloc (N);\n-               Temp       : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                Chars => New_Internal_Name ('R'));\n-               Acc_Typ    : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                Chars => New_Internal_Name ('A'));\n+               Acc_Typ    : constant Entity_Id := Make_Temporary (Loc, 'A');\n                Alloc_Node : Node_Id;\n+               Temp       : Entity_Id;\n \n             begin\n                Set_Ekind (Acc_Typ, E_Access_Type);\n@@ -4031,13 +4016,15 @@ package body Exp_Ch5 is\n                    Expression =>\n                      Make_Qualified_Expression (Loc,\n                        Subtype_Mark => New_Reference_To (Etype (Exp), Loc),\n-                       Expression => Relocate_Node (Exp)));\n+                       Expression   => Relocate_Node (Exp)));\n \n                --  We do not want discriminant checks on the declaration,\n                --  given that it gets its value from the allocator.\n \n                Set_No_Initialization (Alloc_Node);\n \n+               Temp := Make_Temporary (Loc, 'R', Alloc_Node);\n+\n                Insert_List_Before_And_Analyze (N, New_List (\n                  Make_Full_Type_Declaration (Loc,\n                    Defining_Identifier => Acc_Typ,\n@@ -4118,18 +4105,18 @@ package body Exp_Ch5 is\n \n          else\n             declare\n+               ExpR       : constant Node_Id   := Relocate_Node (Exp);\n                Result_Id  : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                Chars => New_Internal_Name ('R'));\n-               Result_Exp : constant Node_Id :=\n+                              Make_Temporary (Loc, 'R', ExpR);\n+               Result_Exp : constant Node_Id   :=\n                               New_Reference_To (Result_Id, Loc);\n-               Result_Obj : constant Node_Id :=\n+               Result_Obj : constant Node_Id   :=\n                               Make_Object_Declaration (Loc,\n                                 Defining_Identifier => Result_Id,\n                                 Object_Definition   =>\n                                   New_Reference_To (R_Type, Loc),\n                                 Constant_Present    => True,\n-                                Expression          => Relocate_Node (Exp));\n+                                Expression          => ExpR);\n \n             begin\n                Set_Assignment_OK (Result_Obj);\n@@ -4213,16 +4200,16 @@ package body Exp_Ch5 is\n         or else Is_Possibly_Unaligned_Object (Exp)\n       then\n          declare\n-            Tnn : constant Entity_Id :=\n-                    Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+            ExpR : constant Node_Id   := Relocate_Node (Exp);\n+            Tnn  : constant Entity_Id := Make_Temporary (Loc, 'T', ExpR);\n          begin\n             Insert_Action (Exp,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Tnn,\n                 Constant_Present    => True,\n                 Object_Definition   => New_Occurrence_Of (R_Type, Loc),\n-                Expression          => Relocate_Node (Exp)),\n-                Suppress => All_Checks);\n+                Expression          => ExpR),\n+              Suppress            => All_Checks);\n             Rewrite (Exp, New_Occurrence_Of (Tnn, Loc));\n          end;\n       end if;\n@@ -4255,8 +4242,8 @@ package body Exp_Ch5 is\n \n          else\n             declare\n-               Tnn : constant Entity_Id :=\n-                       Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+               ExpR : constant Node_Id   := Relocate_Node (Exp);\n+               Tnn  : constant Entity_Id := Make_Temporary (Loc, 'T', ExpR);\n \n             begin\n                --  For a complex expression of an elementary type, capture\n@@ -4268,7 +4255,7 @@ package body Exp_Ch5 is\n                       Defining_Identifier => Tnn,\n                       Constant_Present    => True,\n                       Object_Definition   => New_Occurrence_Of (R_Type, Loc),\n-                      Expression          => Relocate_Node (Exp)),\n+                      Expression          => ExpR),\n                     Suppress => All_Checks);\n \n                   Rewrite (Exp, New_Occurrence_Of (Tnn, Loc));\n@@ -4281,7 +4268,7 @@ package body Exp_Ch5 is\n                     Make_Object_Renaming_Declaration (Loc,\n                       Defining_Identifier => Tnn,\n                       Subtype_Mark        => New_Occurrence_Of (R_Type, Loc),\n-                      Name                => Relocate_Node (Exp)),\n+                      Name                => ExpR),\n                     Suppress => All_Checks);\n \n                   Rewrite (Exp, New_Occurrence_Of (Tnn, Loc));\n@@ -4421,8 +4408,7 @@ package body Exp_Ch5 is\n       --  Save the Tag in a local variable Tag_Tmp\n \n       if Save_Tag then\n-         Tag_Tmp :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+         Tag_Tmp := Make_Temporary (Loc, 'A');\n \n          Append_To (Res,\n            Make_Object_Declaration (Loc,\n@@ -4461,8 +4447,7 @@ package body Exp_Ch5 is\n                      New_Reference_To (Controller_Component (T), Loc));\n             end if;\n \n-            Prev_Tmp :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('B'));\n+            Prev_Tmp := Make_Temporary (Loc, 'B');\n \n             Append_To (Res,\n               Make_Object_Declaration (Loc,\n@@ -4477,9 +4462,7 @@ package body Exp_Ch5 is\n                       Unchecked_Convert_To (RTE (RE_Finalizable), Ctrl_Ref),\n                     Selector_Name => Make_Identifier (Loc, Name_Prev))));\n \n-            Next_Tmp :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('C'));\n+            Next_Tmp := Make_Temporary (Loc, 'C');\n \n             Append_To (Res,\n               Make_Object_Declaration (Loc,\n@@ -4638,9 +4621,7 @@ package body Exp_Ch5 is\n                      Make_Integer_Literal (Loc,\n                        Intval => System_Storage_Unit));\n \n-               Range_Type :=\n-                 Make_Defining_Identifier (Loc,\n-                   New_Internal_Name ('G'));\n+               Range_Type := Make_Temporary (Loc, 'G');\n \n                Append_To (Res,\n                  Make_Subtype_Declaration (Loc,\n@@ -4659,9 +4640,7 @@ package body Exp_Ch5 is\n \n                Append_To (Res,\n                  Make_Subtype_Declaration (Loc,\n-                   Defining_Identifier =>\n-                     Make_Defining_Identifier (Loc,\n-                       New_Internal_Name ('S')),\n+                   Defining_Identifier => Make_Temporary (Loc, 'S'),\n                    Subtype_Indication  =>\n                      Make_Subtype_Indication (Loc,\n                        Subtype_Mark =>\n@@ -4673,9 +4652,7 @@ package body Exp_Ch5 is\n \n                --  type A is access S\n \n-               Opaque_Type :=\n-                 Make_Defining_Identifier (Loc,\n-                   Chars => New_Internal_Name ('A'));\n+               Opaque_Type := Make_Temporary (Loc, 'A');\n \n                Append_To (Res,\n                  Make_Full_Type_Declaration (Loc,\n@@ -4721,17 +4698,16 @@ package body Exp_Ch5 is\n                   --  Last index before hole: determined by position of the\n                   --  _Controller.Prev component.\n \n-                  Last_Before_Hole :=\n-                    Make_Defining_Identifier (Loc,\n-                      New_Internal_Name ('L'));\n+                  Last_Before_Hole := Make_Temporary (Loc, 'L');\n \n                   Append_To (Res,\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => Last_Before_Hole,\n                       Object_Definition   => New_Occurrence_Of (\n                         RTE (RE_Storage_Offset), Loc),\n                       Constant_Present    => True,\n-                      Expression          => Make_Op_Add (Loc,\n+                      Expression          =>\n+                        Make_Op_Add (Loc,\n                           Make_Attribute_Reference (Loc,\n                             Prefix => Prev_Ref,\n                             Attribute_Name => Name_Position),\n@@ -4756,9 +4732,7 @@ package body Exp_Ch5 is\n \n                   --  First index after hole\n \n-                  First_After_Hole :=\n-                    Make_Defining_Identifier (Loc,\n-                      New_Internal_Name ('F'));\n+                  First_After_Hole := Make_Temporary (Loc, 'F');\n \n                   Append_To (Res,\n                     Make_Object_Declaration (Loc,"}, {"sha": "46eb51ef5e93d5e7bd628acc0bd67382f383d491", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 24, "deletions": 50, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c12beea07b1e3f88e7570f9fde7a6def03759f7f", "patch": "@@ -808,9 +808,7 @@ package body Exp_Ch6 is\n       Elm := First_Elmt (Var_List);\n       while Present (Elm) loop\n          Var := Node (Elm);\n-         Ent :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('S'));\n+         Ent := Make_Temporary (Loc, 'S');\n          Append_Elmt (Ent, Shad_List);\n \n          --  Insert a declaration for this temporary at the start of the\n@@ -966,9 +964,7 @@ package body Exp_Ch6 is\n             return;\n          end if;\n \n-         Temp :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('T'));\n+         Temp := Make_Temporary (Loc, 'T');\n \n          --  Use formal type for temp, unless formal type is an unconstrained\n          --  array, in which case we don't have to worry about bounds checks,\n@@ -1220,9 +1216,7 @@ package body Exp_Ch6 is\n \n          Reset_Packed_Prefix;\n \n-         Temp :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('T'));\n+         Temp := Make_Temporary (Loc, 'T');\n          Incod  := Relocate_Node (Actual);\n          Outcod := New_Copy_Tree (Incod);\n \n@@ -1387,9 +1381,7 @@ package body Exp_Ch6 is\n             return Entity (Actual);\n \n          else\n-            Var :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('T'));\n+            Var := Make_Temporary (Loc, 'T');\n \n             N_Node :=\n               Make_Object_Renaming_Declaration (Loc,\n@@ -3312,8 +3304,8 @@ package body Exp_Ch6 is\n \n       procedure Make_Exit_Label;\n       --  Build declaration for exit label to be used in Return statements,\n-      --  sets Exit_Lab (the label node) and Lab_Decl (corresponding implcit\n-      --  declaration).\n+      --  sets Exit_Lab (the label node) and Lab_Decl (corresponding implicit\n+      --  declaration). Does nothing if Exit_Lab already set.\n \n       function Process_Formals (N : Node_Id) return Traverse_Result;\n       --  Replace occurrence of a formal with the corresponding actual, or the\n@@ -3343,20 +3335,15 @@ package body Exp_Ch6 is\n       ---------------------\n \n       procedure Make_Exit_Label is\n+         Lab_Ent : Entity_Id;\n       begin\n-         --  Create exit label for subprogram if one does not exist yet\n-\n          if No (Exit_Lab) then\n-            Lab_Id :=\n-              Make_Identifier (Loc,\n-                Chars => New_Internal_Name ('L'));\n-            Set_Entity (Lab_Id,\n-              Make_Defining_Identifier (Loc, Chars (Lab_Id)));\n+            Lab_Ent := Make_Temporary (Loc, 'L');\n+            Lab_Id  := New_Reference_To (Lab_Ent, Loc);\n             Exit_Lab := Make_Label (Loc, Lab_Id);\n-\n             Lab_Decl :=\n               Make_Implicit_Label_Declaration (Loc,\n-                Defining_Identifier  => Entity (Lab_Id),\n+                Defining_Identifier  => Lab_Ent,\n                 Label_Construct      => Exit_Lab);\n          end if;\n       end Make_Exit_Label;\n@@ -3793,9 +3780,7 @@ package body Exp_Ch6 is\n             end if;\n \n          else\n-            Temp :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('C'));\n+            Temp := Make_Temporary (Loc, 'C');\n \n             --  If the actual for an in/in-out parameter is a view conversion,\n             --  make it into an unchecked conversion, given that an untagged\n@@ -3883,8 +3868,7 @@ package body Exp_Ch6 is\n          else\n             --  Replace call with temporary and create its declaration\n \n-            Temp :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('C'));\n+            Temp := Make_Temporary (Loc, 'C');\n             Set_Is_Internal (Temp);\n \n             --  For the unconstrained case, the generated temporary has the\n@@ -4610,10 +4594,8 @@ package body Exp_Ch6 is\n          --  define _object later on.\n \n          declare\n-            Decls : List_Id;\n-            Obj_Ptr : constant Entity_Id :=  Make_Defining_Identifier (Loc,\n-                                               Chars =>\n-                                                 New_Internal_Name ('T'));\n+            Decls   : List_Id;\n+            Obj_Ptr : constant Entity_Id :=  Make_Temporary (Loc, 'T');\n \n          begin\n             Decls := New_List (\n@@ -4623,7 +4605,7 @@ package body Exp_Ch6 is\n                      Make_Access_To_Object_Definition (Loc,\n                        Subtype_Indication =>\n                          New_Reference_To\n-                      (Corresponding_Record_Type (Scop), Loc))));\n+                           (Corresponding_Record_Type (Scop), Loc))));\n \n             Insert_Actions (N, Decls);\n             Insert_Actions (N, Freeze_Entity (Obj_Ptr, Sloc (N)));\n@@ -5117,8 +5099,7 @@ package body Exp_Ch6 is\n          --  Create a new access object and initialize it to the result of the\n          --  new uninitialized allocator.\n \n-         Return_Obj_Access :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+         Return_Obj_Access := Make_Temporary (Loc, 'R', Allocator);\n          Set_Etype (Return_Obj_Access, Acc_Type);\n \n          Insert_Action (Allocator,\n@@ -5251,9 +5232,7 @@ package body Exp_Ch6 is\n \n          --  Create a temporary object to hold the function result\n \n-         Return_Obj_Id :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('R'));\n+         Return_Obj_Id := Make_Temporary (Loc, 'R');\n          Set_Etype (Return_Obj_Id, Result_Subt);\n \n          Return_Obj_Decl :=\n@@ -5406,8 +5385,7 @@ package body Exp_Ch6 is\n \n       --  Create an access type designating the function's result subtype\n \n-      Ptr_Typ :=\n-        Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+      Ptr_Typ := Make_Temporary (Loc, 'A');\n \n       Ptr_Typ_Decl :=\n         Make_Full_Type_Declaration (Loc,\n@@ -5422,7 +5400,7 @@ package body Exp_Ch6 is\n       --  Finally, create an access object initialized to a reference to the\n       --  function call.\n \n-      Obj_Id := Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+      Obj_Id := Make_Temporary (Loc, 'R');\n       Set_Etype (Obj_Id, Ptr_Typ);\n \n       Obj_Decl :=\n@@ -5684,8 +5662,7 @@ package body Exp_Ch6 is\n \n       --  Create an access type designating the function's result subtype\n \n-      Ref_Type :=\n-        Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+      Ref_Type := Make_Temporary (Loc, 'A');\n \n       Ptr_Typ_Decl :=\n         Make_Full_Type_Declaration (Loc,\n@@ -5712,15 +5689,13 @@ package body Exp_Ch6 is\n       --  Finally, create an access object initialized to a reference to the\n       --  function call.\n \n-      Def_Id :=\n-        Make_Defining_Identifier (Loc,\n-          Chars => New_Internal_Name ('R'));\n-      Set_Etype (Def_Id, Ref_Type);\n-\n       New_Expr :=\n         Make_Reference (Loc,\n           Prefix => Relocate_Node (Func_Call));\n \n+      Def_Id := Make_Temporary (Loc, 'R', New_Expr);\n+      Set_Etype (Def_Id, Ref_Type);\n+\n       Insert_After_And_Analyze (Ptr_Typ_Decl,\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Def_Id,\n@@ -5744,8 +5719,7 @@ package body Exp_Ch6 is\n \n          Rewrite (Object_Decl,\n            Make_Object_Renaming_Declaration (Loc,\n-             Defining_Identifier => Make_Defining_Identifier (Loc,\n-                                      New_Internal_Name ('D')),\n+             Defining_Identifier => Make_Temporary (Loc, 'D'),\n              Access_Definition   => Empty,\n              Subtype_Mark        => New_Occurrence_Of (Result_Subt, Loc),\n              Name                => Call_Deref));"}, {"sha": "4c7183442df54141aacc0a4f6fc74841abdf6780", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=c12beea07b1e3f88e7570f9fde7a6def03759f7f", "patch": "@@ -586,9 +586,7 @@ package body Exp_Ch7 is\n          --  Here we generate the required loop\n \n          else\n-            Index :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n-\n+            Index := Make_Temporary (Loc, 'J');\n             Append (New_Reference_To (Index, Loc), Index_List);\n \n             return New_List (\n@@ -1162,7 +1160,7 @@ package body Exp_Ch7 is\n         and then not Sec_Stack_Needed_For_Return (Current_Scope)\n         and then VM_Target = No_VM\n       then\n-         Mark := Make_Defining_Identifier (Loc, New_Internal_Name ('M'));\n+         Mark := Make_Temporary (Loc, 'M');\n          Append_To (New_Decls,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Mark,\n@@ -1785,9 +1783,7 @@ package body Exp_Ch7 is\n                      end if;\n                   end if;\n \n-                  Id :=\n-                    Make_Defining_Identifier (Flist_Loc,\n-                      Chars => New_Internal_Name ('F'));\n+                  Id := Make_Temporary (Flist_Loc, 'F');\n                end;\n \n                Set_Finalization_Chain_Entity (S, Id);\n@@ -3438,7 +3434,7 @@ package body Exp_Ch7 is\n       --       Fxxx : Finalizable_Ptr renames Lxxx.F;\n \n       if Present (Finalization_Chain_Entity (S)) then\n-         LC := Make_Defining_Identifier (Loc, New_Internal_Name ('L'));\n+         LC := Make_Temporary (Loc, 'L');\n \n          --  Use the Sloc of the first declaration of N's containing list, to\n          --  maintain monotonicity of source-line stepping during debugging."}, {"sha": "b92854ec29dbc4b57d135b574ed0f331313a3375", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=c12beea07b1e3f88e7570f9fde7a6def03759f7f", "patch": "@@ -686,7 +686,6 @@ package body Tbuild is\n       Loc    : Source_Ptr) return Node_Id\n    is\n       Occurrence : Node_Id;\n-\n    begin\n       Occurrence := New_Node (N_Identifier, Loc);\n       Set_Chars (Occurrence, Chars (Def_Id));"}, {"sha": "2e82cc17d6ad623f51c22f5222cb5a8e10798bf2", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c12beea07b1e3f88e7570f9fde7a6def03759f7f/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=c12beea07b1e3f88e7570f9fde7a6def03759f7f", "patch": "@@ -180,15 +180,19 @@ package Tbuild is\n      (Loc          : Source_Ptr;\n       Id           : Character;\n       Related_Node : Node_Id := Empty) return Entity_Id;\n-   --  This function should be used for all cases where a temporary is\n-   --  built with a name to be obtained by New_Internal_Name (here Id is\n-   --  the character passed as the argument to New_Internal_Name). Loc\n-   --  is the location for the Sloc value of the resulting Entity.\n+   --  This function should be used for all cases where a defining identifier\n+   --  is to be built with a name to be obtained by New_Internal_Name (here Id\n+   --  is the character passed as the argument to New_Internal_Name). Loc is\n+   --  the location for the Sloc value of the resulting Entity. Note that this\n+   --  can be used for all kinds of temporary defining identifiers used in\n+   --  expansion (objects, subtypes, functions etc).\n    --\n-   --  Related_Node is used when the identifier is capturing the value of\n-   --  an expression (e.g. an aggregate). It should be set whenever possible\n-   --  to point to the expression that is being captured. This is provided\n-   --  to get better error messages, especially from CodePeer reports.\n+   --  Related_Node is used when the defining identifier is for an object that\n+   --  captures the value of an expression (e.g. an aggregate). It should be\n+   --  set whenever possible to point to the expression that is being captured.\n+   --  This is provided to get better error messages, e.g. from CodePeer.\n+   --\n+   --  Make_Temp_Id would probably be a better name for this function???\n \n    function Make_Unsuppress_Block\n      (Loc   : Source_Ptr;"}]}