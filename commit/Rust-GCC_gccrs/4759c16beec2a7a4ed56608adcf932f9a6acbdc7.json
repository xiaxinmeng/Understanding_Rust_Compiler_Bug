{"sha": "4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "node_id": "C_kwDOANBUbNoAKDQ3NTljMTZiZWVjMmE3YTRlZDU2NjA4YWRjZjkzMmY5YTZhY2JkYzc", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2022-01-02T16:40:48Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2022-01-02T16:40:48Z"}, "message": "Use optab_libfunc to access sync_lock_test_and_set libfunc on hppa-linux.\n\n2022-01-02  John David Anglin  <danglin@gcc.gnu.org>\n\ngcc/ChangeLog:\n\n\t* config/pa/pa.md (atomic_storeq): Use optab_libfunc to access\n\tsync_lock_test_and_set libfunc. Call convert_memory_address to\n\tconvert memory address to Pmode.\n\t(atomic_storehi, atomic_storesi, atomic_storedi): Likewise.", "tree": {"sha": "17b6f7d208bf037933b017e1c4a74cf5c913418c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b6f7d208bf037933b017e1c4a74cf5c913418c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4759c16beec2a7a4ed56608adcf932f9a6acbdc7/comments", "author": null, "committer": null, "parents": [{"sha": "62eb5308fe6c46f7eded3c9e06c53491515a6e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62eb5308fe6c46f7eded3c9e06c53491515a6e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62eb5308fe6c46f7eded3c9e06c53491515a6e63"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "31e3b1bff80994dfc49545ca43c9ab92a18a75a9", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4759c16beec2a7a4ed56608adcf932f9a6acbdc7/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4759c16beec2a7a4ed56608adcf932f9a6acbdc7/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "patch": "@@ -10366,10 +10366,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n {\n   if (TARGET_SYNC_LIBCALL)\n     {\n-      rtx libfunc = init_one_libfunc (\"__sync_lock_test_and_set_1\");\n+      rtx libfunc = optab_libfunc (sync_lock_test_and_set_optab, QImode);\n+      rtx addr = convert_memory_address (Pmode, XEXP (operands[0], 0));\n \n-      emit_library_call (libfunc, LCT_NORMAL, VOIDmode,\n-\t\t\t XEXP (operands[0], 0), Pmode,\n+      emit_library_call (libfunc, LCT_NORMAL, VOIDmode, addr, Pmode,\n \t\t\t operands[1], QImode);\n       DONE;\n     }\n@@ -10386,10 +10386,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n {\n   if (TARGET_SYNC_LIBCALL)\n     {\n-      rtx libfunc = init_one_libfunc (\"__sync_lock_test_and_set_2\");\n+      rtx libfunc = optab_libfunc (sync_lock_test_and_set_optab, HImode);\n+      rtx addr = convert_memory_address (Pmode, XEXP (operands[0], 0));\n \n-      emit_library_call (libfunc, LCT_NORMAL, VOIDmode,\n-\t\t\t XEXP (operands[0], 0), Pmode,\n+      emit_library_call (libfunc, LCT_NORMAL, VOIDmode, addr, Pmode,\n \t\t\t operands[1], HImode);\n       DONE;\n     }\n@@ -10406,10 +10406,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n {\n   if (TARGET_SYNC_LIBCALL)\n     {\n-      rtx libfunc = init_one_libfunc (\"__sync_lock_test_and_set_4\");\n+      rtx libfunc = optab_libfunc (sync_lock_test_and_set_optab, SImode);\n+      rtx addr = convert_memory_address (Pmode, XEXP (operands[0], 0));\n \n-      emit_library_call (libfunc, LCT_NORMAL, VOIDmode,\n-\t\t\t XEXP (operands[0], 0), Pmode,\n+      emit_library_call (libfunc, LCT_NORMAL, VOIDmode, addr, Pmode,\n \t\t\t operands[1], SImode);\n       DONE;\n     }\n@@ -10459,10 +10459,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \n   if (TARGET_SYNC_LIBCALL)\n     {\n-      rtx libfunc = init_one_libfunc (\"__sync_lock_test_and_set_8\");\n+      rtx libfunc = optab_libfunc (sync_lock_test_and_set_optab, DImode);\n+      rtx addr = convert_memory_address (Pmode, XEXP (operands[0], 0));\n \n-      emit_library_call (libfunc, LCT_NORMAL, VOIDmode,\n-\t\t\t XEXP (operands[0], 0), Pmode,\n+      emit_library_call (libfunc, LCT_NORMAL, VOIDmode, addr, Pmode,\n \t\t\t operands[1], DImode);\n       DONE;\n     }"}]}