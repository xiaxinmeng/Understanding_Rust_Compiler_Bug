{"sha": "3685dcd7fb618b8dc7c7352a76a55efa959aae84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4NWRjZDdmYjYxOGI4ZGM3YzczNTJhNzZhNTVlZmE5NTlhYWU4NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-25T16:46:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-25T16:46:33Z"}, "message": "PR libstdc++/86292 fix exception safety of std::vector<InputIterator> constructor\n\n\tPR libstdc++/86292\n\t* include/bits/stl_vector.h (vector::_M_range_initialize<InputIter>):\n\tAdd try-catch block.\n\t* testsuite/23_containers/vector/cons/86292.cc: New.\n\nFrom-SVN: r262029", "tree": {"sha": "1aeddbf1357b2f3f31a97780ba5c469d890d0437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aeddbf1357b2f3f31a97780ba5c469d890d0437"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3685dcd7fb618b8dc7c7352a76a55efa959aae84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3685dcd7fb618b8dc7c7352a76a55efa959aae84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3685dcd7fb618b8dc7c7352a76a55efa959aae84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3685dcd7fb618b8dc7c7352a76a55efa959aae84/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b03f3a94e6d33afda64661776256517aa1b63ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03f3a94e6d33afda64661776256517aa1b63ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03f3a94e6d33afda64661776256517aa1b63ea6"}], "stats": {"total": 88, "additions": 81, "deletions": 7}, "files": [{"sha": "1b6746def94e024363576ee83a0cc71d5258f2c3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685dcd7fb618b8dc7c7352a76a55efa959aae84/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685dcd7fb618b8dc7c7352a76a55efa959aae84/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3685dcd7fb618b8dc7c7352a76a55efa959aae84", "patch": "@@ -1,5 +1,10 @@\n 2018-06-25  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/86292\n+\t* include/bits/stl_vector.h (vector::_M_range_initialize<InputIter>):\n+\tAdd try-catch block.\n+\t* testsuite/23_containers/vector/cons/86292.cc: New.\n+\n \t* doc/xml/manual/status_cxx2017.xml: Document N4531 status.\n \n \t* include/experimental/algorithm (sample, shuffle): Add new overloads"}, {"sha": "129d45cd34b163f2bfce80f0921e36aa2104426c", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685dcd7fb618b8dc7c7352a76a55efa959aae84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685dcd7fb618b8dc7c7352a76a55efa959aae84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=3685dcd7fb618b8dc7c7352a76a55efa959aae84", "patch": "@@ -1440,22 +1440,27 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // Called by the second initialize_dispatch above\n       template<typename _InputIterator>\n \tvoid\n-\t_M_range_initialize(_InputIterator __first,\n-\t\t\t    _InputIterator __last, std::input_iterator_tag)\n+\t_M_range_initialize(_InputIterator __first, _InputIterator __last,\n+\t\t\t    std::input_iterator_tag)\n \t{\n-\t  for (; __first != __last; ++__first)\n+\t  __try {\n+\t    for (; __first != __last; ++__first)\n #if __cplusplus >= 201103L\n-\t    emplace_back(*__first);\n+\t      emplace_back(*__first);\n #else\n-\t    push_back(*__first);\n+\t      push_back(*__first);\n #endif\n+\t  } __catch(...) {\n+\t    clear();\n+\t    __throw_exception_again;\n+\t  }\n \t}\n \n       // Called by the second initialize_dispatch above\n       template<typename _ForwardIterator>\n \tvoid\n-\t_M_range_initialize(_ForwardIterator __first,\n-\t\t\t    _ForwardIterator __last, std::forward_iterator_tag)\n+\t_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,\n+\t\t\t    std::forward_iterator_tag)\n \t{\n \t  const size_type __n = std::distance(__first, __last);\n \t  this->_M_impl._M_start = this->_M_allocate(__n);"}, {"sha": "7103efb82ff984bc0d669cf3d92117fa37a2df09", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/86292.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685dcd7fb618b8dc7c7352a76a55efa959aae84/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F86292.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685dcd7fb618b8dc7c7352a76a55efa959aae84/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F86292.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F86292.cc?ref=3685dcd7fb618b8dc7c7352a76a55efa959aae84", "patch": "@@ -0,0 +1,64 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+#include <testsuite_iterators.h>\n+\n+struct X\n+{\n+  X() { ++count; }\n+  X(const X&) { if (++copies >= max_copies) throw 1; ++count; }\n+  ~X() { --count; }\n+\n+  static int count;\n+  static int copies;\n+  static int max_copies;\n+};\n+\n+int X::count = 0;\n+int X::copies = 0;\n+int X::max_copies = 0;\n+\n+void\n+test01()\n+{\n+  X x[3];\n+  const int count = X::count;\n+  X::max_copies = 2;\n+  __gnu_test::test_container<const X, __gnu_test::input_iterator_wrapper>\n+    x_input(x, x+3);\n+  bool caught = false;\n+  try\n+  {\n+    std::vector<X> v(x_input.begin(), x_input.end());\n+  }\n+  catch(int)\n+  {\n+    caught = true;\n+  }\n+  VERIFY( caught );\n+  VERIFY( X::count == count );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}