{"sha": "f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2MGZiYTZhZjlhYzE2NWQzZTAyYzBhOTA4M2M5ZTA4OTdlMGM1Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:51:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:51:26Z"}, "message": "[multiple changes]\n\n2014-02-19  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Check_Refined_Global_Item):\n\tA state or variable acts as a constituent only it is part of an\n\tencapsulating state and the state has visible refinement.\n\n2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Contract): Do not warn on a\n\tpostcondition for a function when the expression does not mention\n\t'Result but the function has in-out parameters.\n\n2014-02-19  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Add documentation on Value_Size forcing biased\n\trepresentation.\n\nFrom-SVN: r207886", "tree": {"sha": "772babd2e9028f0dfee6e59082db66f9dcb9db28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/772babd2e9028f0dfee6e59082db66f9dcb9db28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/comments", "author": null, "committer": null, "parents": [{"sha": "b4f149c250b7674ad08e093d65d5cf185b04b519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f149c250b7674ad08e093d65d5cf185b04b519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f149c250b7674ad08e093d65d5cf185b04b519"}], "stats": {"total": 72, "additions": 69, "deletions": 3}, "files": [{"sha": "9df54e5dea7928903be51f54bbc301107a21c346", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "patch": "@@ -1,3 +1,20 @@\n+2014-02-19  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Check_Refined_Global_Item):\n+\tA state or variable acts as a constituent only it is part of an\n+\tencapsulating state and the state has visible refinement.\n+\n+2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Contract): Do not warn on a\n+\tpostcondition for a function when the expression does not mention\n+\t'Result but the function has in-out parameters.\n+\n+2014-02-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Add documentation on Value_Size forcing biased\n+\trepresentation.\n+\n 2014-02-19  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* lib-xref.ads Remove the small table of letter and symbol usage as we"}, {"sha": "6453c28c1b1d7a5b1da04cde83cb292c503ba9a5", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "patch": "@@ -14262,6 +14262,34 @@ For all other types, the @code{Object_Size}\n and Value_Size are the same (and equivalent to the RM attribute @code{Size}).\n Only @code{Size} may be specified for such types.\n \n+Note that @code{Value_Size} can be used to force biased representation\n+for a particular subtype. Consider this example:\n+\n+@smallexample\n+   type R is (A, B, C, D, E, F);\n+   subtype RAB is R range A .. B;\n+   subtype REF is R range E .. F;\n+@end smallexample\n+\n+@noindent\n+By default, @code{RAB}\n+has a size of 1 (sufficient to accomodate the representation\n+of @code{A} and @code{B}, 0 and 1), and @code{REF}\n+has a size of 3 (sufficient to accomodate the representation\n+of @code{E} and @code{F}, 4 and 5). But if we add the\n+following @code{Value_Size} attribute definition clause:\n+\n+@smallexample\n+   for REF'Value_Size use 1;\n+@end smallexample\n+\n+@noindent\n+then biased representation is forced for @code{REF},\n+and 0 will represent @code{E} and 1 will represent @code{F}.\n+A warning is issued when a @code{Value_Size} attribute\n+definition clause forces biased representation. This\n+warning can be turned off using @code{-gnatw.B}.\n+\n @node Component_Size Clauses\n @section Component_Size Clauses\n @cindex Component_Size Clause"}, {"sha": "5231dfde7b14e5b1a7f70272bad853af6f8a3316", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "patch": "@@ -3663,7 +3663,25 @@ package body Sem_Ch6 is\n             Error_Msg_N\n               (\"contract cases do not mention result?T?\", Case_Prag);\n \n+         --  OK if we have at least one IN OUT parameter\n+\n          elsif Present (Post_Prag) and then not Seen_In_Post then\n+            declare\n+               F : Entity_Id;\n+            begin\n+               F := First_Formal (Subp);\n+               while Present (F) loop\n+                  if Ekind (F) = E_In_Out_Parameter then\n+                     return;\n+                  else\n+                     Next_Formal (F);\n+                  end if;\n+               end loop;\n+            end;\n+\n+            --  If no in-out parameters and no mention of Result, the contract\n+            --  is certainly suspicious.\n+\n             Error_Msg_N\n               (\"function postcondition does not mention result?T?\", Post_Prag);\n          end if;"}, {"sha": "723ac3b1adbbcbadd454ccdbb3eebce8257bb0d8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f660fba6af9ac165d3e02c0a9083c9e0897e0c52/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "patch": "@@ -22610,10 +22610,13 @@ package body Sem_Prag is\n          --  Start of processing for Check_Refined_Global_Item\n \n          begin\n-            --  The state or variable acts as a constituent of a state, collect\n-            --  it for the state completeness checks performed later on.\n+            --  When the state or variable acts as a constituent of another\n+            --  state with a visible refinement, collect it for the state\n+            --  completeness checks performed later on.\n \n-            if Present (Encapsulating_State (Item_Id)) then\n+            if Present (Encapsulating_State (Item_Id))\n+             and then Has_Visible_Refinement (Encapsulating_State (Item_Id))\n+            then\n                if Global_Mode = Name_Input then\n                   Add_Item (Item_Id, In_Constits);\n "}]}