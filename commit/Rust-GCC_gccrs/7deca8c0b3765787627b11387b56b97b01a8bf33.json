{"sha": "7deca8c0b3765787627b11387b56b97b01a8bf33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RlY2E4YzBiMzc2NTc4NzYyN2IxMTM4N2I1NmI5N2IwMWE4YmYzMw==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-05-29T19:19:31Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-05-29T19:19:31Z"}, "message": "PR fortran/95090 - ICE: identifier overflow\n\nThe initial fix for this PR uncovered several latent issues with further\ntoo small string buffers which showed up only when testing on i686.\nProvide sufficiently large temporaries.\n\n2020-05-29  Harald Anlauf  <anlauf@gmx.de>\n\ngcc/fortran/\n\tPR fortran/95090\n\t* class.c (get_unique_type_string): Enlarge temporary for\n\tname-mangling.  Use strncpy to prevent buffer overrun.\n\t(get_unique_hashed_string): Enlarge temporary.\n\t(gfc_hash_value): Enlarge temporary for name-mangling.", "tree": {"sha": "ae7870ac3c001d275f373ebe1f44e79de3712670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7870ac3c001d275f373ebe1f44e79de3712670"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7deca8c0b3765787627b11387b56b97b01a8bf33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7deca8c0b3765787627b11387b56b97b01a8bf33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7deca8c0b3765787627b11387b56b97b01a8bf33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7deca8c0b3765787627b11387b56b97b01a8bf33/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "316fe6b40165c26b30375f8ad85384379133f89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316fe6b40165c26b30375f8ad85384379133f89b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316fe6b40165c26b30375f8ad85384379133f89b"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "db395624a16da697faa59d06e5aa86d31a494270", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7deca8c0b3765787627b11387b56b97b01a8bf33/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7deca8c0b3765787627b11387b56b97b01a8bf33/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=7deca8c0b3765787627b11387b56b97b01a8bf33", "patch": "@@ -479,11 +479,12 @@ gfc_class_initializer (gfc_typespec *ts, gfc_expr *init_expr)\n static void\n get_unique_type_string (char *string, gfc_symbol *derived)\n {\n-  char dt_name[GFC_MAX_SYMBOL_LEN+1];\n+  /* Provide sufficient space to hold \"Pdtsymbol\".  */\n+  char dt_name[GFC_MAX_SYMBOL_LEN+4];\n   if (derived->attr.unlimited_polymorphic)\n     strcpy (dt_name, \"STAR\");\n   else\n-    strcpy (dt_name, gfc_dt_upper_string (derived->name));\n+    strncpy (dt_name, gfc_dt_upper_string (derived->name), sizeof (dt_name));\n   if (derived->attr.unlimited_polymorphic)\n     sprintf (string, \"_%s\", dt_name);\n   else if (derived->module)\n@@ -501,7 +502,8 @@ get_unique_type_string (char *string, gfc_symbol *derived)\n static void\n get_unique_hashed_string (char *string, gfc_symbol *derived)\n {\n-  char tmp[2*GFC_MAX_SYMBOL_LEN+2];\n+  /* Provide sufficient space to hold \"symbol_Pdtsymbol\".  */\n+  char tmp[2*GFC_MAX_SYMBOL_LEN+5];\n   get_unique_type_string (&tmp[0], derived);\n   /* If string is too long, use hash value in hex representation (allow for\n      extra decoration, cf. gfc_build_class_symbol & gfc_find_derived_vtab).\n@@ -523,7 +525,8 @@ unsigned int\n gfc_hash_value (gfc_symbol *sym)\n {\n   unsigned int hash = 0;\n-  char c[2*(GFC_MAX_SYMBOL_LEN+1)];\n+  /* Provide sufficient space to hold \"symbol_Pdtsymbol\".  */\n+  char c[2*GFC_MAX_SYMBOL_LEN+5];\n   int i, len;\n \n   get_unique_type_string (&c[0], sym);"}]}