{"sha": "d7f1df66b24583dde50993c2aed5e4d517c44026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmMWRmNjZiMjQ1ODNkZGU1MDk5M2MyYWVkNWU0ZDUxN2M0NDAyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-13T17:59:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-13T17:59:26Z"}, "message": "re PR c++/26965 (Unnecessary debug info for unused consts in C++)\n\n\tPR debug/26965\n\t* dwarf2out.c (gen_variable_die): Don't worry about DECL_COMDAT.\n\tDon't emit a second declaration at any scope.\n\nFrom-SVN: r154157", "tree": {"sha": "f9d3c9aa30a408ec448ad5914b9f091633af6b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9d3c9aa30a408ec448ad5914b9f091633af6b13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f1df66b24583dde50993c2aed5e4d517c44026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f1df66b24583dde50993c2aed5e4d517c44026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f1df66b24583dde50993c2aed5e4d517c44026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f1df66b24583dde50993c2aed5e4d517c44026/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3119b91dc67118b407a742b03279a14dc6fa5ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3119b91dc67118b407a742b03279a14dc6fa5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3119b91dc67118b407a742b03279a14dc6fa5ec"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "50b9dc2cee77bbee8c2b018411608a31e69de1c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7f1df66b24583dde50993c2aed5e4d517c44026", "patch": "@@ -1,3 +1,9 @@\n+2009-11-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR debug/26965\n+\t* dwarf2out.c (gen_variable_die): Don't worry about DECL_COMDAT.\n+\tDon't emit a second declaration at any scope.\n+\n 2009-11-13  Andrey Belevantsev  <abel@ispras.ru>\n \n         PR rtl-optimization/41697"}, {"sha": "2ebe0ae522bfbeda7b44d35bab7c953e7ff55b84", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d7f1df66b24583dde50993c2aed5e4d517c44026", "patch": "@@ -17926,26 +17926,6 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n   dw_die_ref old_die = decl ? lookup_decl_die (decl) : NULL;\n   dw_die_ref origin_die;\n   int declaration = (DECL_EXTERNAL (decl_or_origin)\n-\t\t     /* If DECL is COMDAT and has not actually been\n-\t\t\temitted, we cannot take its address; there\n-\t\t\tmight end up being no definition anywhere in\n-\t\t\tthe program.  For example, consider the C++\n-\t\t\ttest case:\n-\n-\t\t\t  template <class T>\n-\t\t\t  struct S { static const int i = 7; };\n-\n-\t\t\t  template <class T>\n-\t\t\t  const int S<T>::i;\n-\n-\t\t\t  int f() { return S<int>::i; }\n-\n-\t\t\tHere, S<int>::i is not DECL_EXTERNAL, but no\n-\t\t\tdefinition is required, so the compiler will\n-\t\t\tnot emit a definition.  */\n-\t\t     || (TREE_CODE (decl_or_origin) == VAR_DECL\n-\t\t\t && DECL_COMDAT (decl_or_origin)\n-\t\t\t && !TREE_ASM_WRITTEN (decl_or_origin))\n \t\t     || class_or_namespace_scope_p (context_die));\n \n   if (!origin)\n@@ -18059,8 +18039,7 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n      and if we already emitted a DIE for it, don't emit a second\n      DIE for it again.  */\n   if (old_die\n-      && declaration\n-      && old_die->die_parent == context_die)\n+      && declaration)\n     return;\n \n   /* For static data members, the declaration in the class is supposed"}, {"sha": "c50863f17b0ce8b2dbf822d658efb51cc2dc90e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7f1df66b24583dde50993c2aed5e4d517c44026", "patch": "@@ -1,5 +1,8 @@\n 2009-11-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR debug/26965\n+\t* g++.dg/debug/dwarf2/static-data-member2.C: New.\n+\n \tPR c++/35075\n \t* g++.dg/template/ref5.C: New.\n "}, {"sha": "56814450372e7ed84aa0246703aadbdb9d770fa1", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/static-data-member2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fstatic-data-member2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f1df66b24583dde50993c2aed5e4d517c44026/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fstatic-data-member2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fstatic-data-member2.C?ref=d7f1df66b24583dde50993c2aed5e4d517c44026", "patch": "@@ -0,0 +1,12 @@\n+// PR debug/26965\n+// { dg-options \"-gdwarf-2 -dA\" }\n+// { dg-final { scan-assembler-not \"DW_TAG_variable\" } }\n+// { dg-final { scan-assembler-not \"DW_TAG_enumerator\" } }\n+// { dg-final { scan-assembler-not \"DW_TAG_enumeration_type\" } }\n+\n+enum x { i = 1 };\n+class c {\n+  static const x beg = i;\n+  int foo () { return (int) beg; }\n+};\n+void bar () { }"}]}