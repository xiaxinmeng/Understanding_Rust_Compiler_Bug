{"sha": "ebc2b117e43191de355187553586aef30048f098", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjMmIxMTdlNDMxOTFkZTM1NTE4NzU1MzU4NmFlZjMwMDQ4ZjA5OA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-06-07T23:41:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-16T09:18:08Z"}, "message": "[Ada] Implicit dereferencing in container indexing\n\ngcc/ada/\n\n\t* sem_ch4.adb (Try_Container_Indexing): When the prefix type is\n\tan access type, change it to the designated type, change the\n\tprefix to an explicit dereference, and emit a ?d? warning for\n\tthe implicit dereference. Include a ??? comment questioning\n\twhether this is the right context in which to perform the\n\timplicit dereferencing.", "tree": {"sha": "92e164376b99c97d3020ef94b28d5868c5140622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e164376b99c97d3020ef94b28d5868c5140622"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebc2b117e43191de355187553586aef30048f098", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc2b117e43191de355187553586aef30048f098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc2b117e43191de355187553586aef30048f098", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc2b117e43191de355187553586aef30048f098/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6801105e167376e8839007a1539a8167fb09306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6801105e167376e8839007a1539a8167fb09306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6801105e167376e8839007a1539a8167fb09306"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "76ce11d1fd538063f9cc02c0a317c97aca248d38", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc2b117e43191de355187553586aef30048f098/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc2b117e43191de355187553586aef30048f098/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ebc2b117e43191de355187553586aef30048f098", "patch": "@@ -7979,7 +7979,7 @@ package body Sem_Ch4 is\n       Prefix : Node_Id;\n       Exprs  : List_Id) return Boolean\n    is\n-      Pref_Typ : constant Entity_Id := Etype (Prefix);\n+      Pref_Typ : Entity_Id := Etype (Prefix);\n \n       function Constant_Indexing_OK return Boolean;\n       --  Constant_Indexing is legal if there is no Variable_Indexing defined\n@@ -8415,6 +8415,25 @@ package body Sem_Ch4 is\n          return True;\n       end if;\n \n+      --  An explicit dereference needs to be created in the case of a prefix\n+      --  that's an access.\n+\n+      --  It seems that this should be done elsewhere, but not clear where that\n+      --  should happen. Normally Insert_Explicit_Dereference is called via\n+      --  Resolve_Implicit_Dereference, called from Resolve_Indexed_Component,\n+      --  but that won't be called in this case because we transform the\n+      --  indexing to a call. Resolve_Call.Check_Prefixed_Call takes care of\n+      --  implicit dereferencing and referencing on prefixed calls, but that\n+      --  would be too late, even if we expanded to a prefix call, because\n+      --  Process_Indexed_Component will flag an error before the resolution\n+      --  happens. ???\n+\n+      if Is_Access_Type (Pref_Typ) then\n+         Pref_Typ := Implicitly_Designated_Type (Pref_Typ);\n+         Insert_Explicit_Dereference (Prefix);\n+         Error_Msg_NW (Warn_On_Dereference, \"?d?implicit dereference\", N);\n+      end if;\n+\n       C_Type := Pref_Typ;\n \n       --  If indexing a class-wide container, obtain indexing primitive from"}]}