{"sha": "f65eb9e641751e70ee4f0600218866794023ac65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1ZWI5ZTY0MTc1MWU3MGVlNGYwNjAwMjE4ODY2Nzk0MDIzYWM2NQ==", "commit": {"author": {"name": "Edward Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2014-10-02T12:38:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-10-02T12:38:41Z"}, "message": "stl_function.h: Generic associative lookup feature is not supported.\n\n2014-10-02  Edward Smith-Rowland  <3dw4rd@verizon.net>\n\n\t* include/bits/stl_function.h: Generic associative lookup feature\n\tis not supported.\n\t* testsuite/experimental/feat-lib-fund.cc: <experimental/any> is\n\tactually available.\n\t* testsuite/experimental/feat-cxx14.cc: Add test for __cpp_lib_is_final.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust.\n\t* testsuite/20_util/duration/literals/range.cc: Adjust.\n\t* testsuite/20_util/duration/requirements/typedefs_neg1.cc: Adjust.\n\t* testsuite/20_util/duration/requirements/typedefs_neg2.cc: Adjust.\n\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Adjust.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Adjust.\n\t* testsuite/23_containers/array/tuple_interface/get_neg.cc: Adjust.\n\t* testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc:\n\tAdjust.\n\nFrom-SVN: r215801", "tree": {"sha": "a8d568fb87ba97986e0502f9c7ed487331b3c2da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8d568fb87ba97986e0502f9c7ed487331b3c2da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f65eb9e641751e70ee4f0600218866794023ac65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65eb9e641751e70ee4f0600218866794023ac65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65eb9e641751e70ee4f0600218866794023ac65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65eb9e641751e70ee4f0600218866794023ac65/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a6b6a9f2188011a39f1710c610983f64489a587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6b6a9f2188011a39f1710c610983f64489a587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6b6a9f2188011a39f1710c610983f64489a587"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "fe2c2e5e4442470048a8dfed8cb537e117c2739e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -1,3 +1,21 @@\n+2014-10-02  Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* include/bits/stl_function.h: Generic associative lookup feature\n+\tis not supported.\n+\t* testsuite/experimental/feat-lib-fund.cc: <experimental/any> is\n+\tactually available.\n+\t* testsuite/experimental/feat-cxx14.cc: Add test for __cpp_lib_is_final.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust.\n+\t* testsuite/20_util/duration/literals/range.cc: Adjust.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg1.cc: Adjust.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg2.cc: Adjust.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Adjust.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Adjust.\n+\t* testsuite/23_containers/array/tuple_interface/get_neg.cc: Adjust.\n+\t* testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc:\n+\tAdjust.\n+\n 2014-10-01  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* python/libstdcxx/v6/printers.py (StdDebugIteratorPrinter.to_string):"}, {"sha": "71215b879e504358b911c5f3680ba44270fc8f21", "filename": "libstdc++-v3/include/bits/stl_function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -219,7 +219,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #if __cplusplus > 201103L\n \n #define __cpp_lib_transparent_operators 201210\n-#define __cpp_lib_generic_associative_lookup 201304\n+//#define __cpp_lib_generic_associative_lookup 201304\n \n   template<>\n     struct plus<void>"}, {"sha": "2d03f4f68db592c3be35eb76678a994d4e1e1719", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 2088 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 2099 }\n \n #include <utility>\n "}, {"sha": "556781523a63976bce86d3e1c478fe276a1306e9", "filename": "libstdc++-v3/testsuite/20_util/duration/literals/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -27,5 +27,5 @@ test01()\n \n   // std::numeric_limits<int64_t>::max() == 9223372036854775807;\n   auto h = 9223372036854775808h;\n-  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 799 }\n+  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 796 }\n }"}, {"sha": "774885a2da608542c02f4792a92d301b9dd4fca9", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -31,5 +31,5 @@ void test01()\n   test_type d;\n }\n \n-// { dg-error \"rep cannot be a duration\" \"\" { target *-*-* } 249 }\n+// { dg-error \"rep cannot be a duration\" \"\" { target *-*-* } 246 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 31 }"}, {"sha": "3ffaf40fda52c99dafc8d8ad990bfe10b660b15a", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg2.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -32,5 +32,5 @@ void test01()\n   test_type d;\t\t\t// { dg-error \"required from here\" }\n }\n \n-// { dg-error \"must be a specialization of ratio\" \"\" { target *-*-* } 250 }\n+// { dg-error \"must be a specialization of ratio\" \"\" { target *-*-* } 247 }\n // { dg-prune-output \"not a member\" }"}, {"sha": "7c9d127a15f3634ee37df7345e659dc6f5b85789", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -33,5 +33,5 @@ void test01()\n   test_type d;\n }\n \n-// { dg-error \"period must be positive\" \"\" { target *-*-* } 252 }\n+// { dg-error \"period must be positive\" \"\" { target *-*-* } 249 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 33 }"}, {"sha": "eaad899b05fb1faa070381c8a602a62b312975a8", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1753 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1717 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1764 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1728 }"}, {"sha": "40811a858b74b1c11db079f8d8b5005c33301fac", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1656 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1620 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1667 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1631 }"}, {"sha": "979d7f6b5aa32e56506b75a17578609350d1fe9a", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/get_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -28,6 +28,6 @@ int n1 = std::get<1>(a);\n int n2 = std::get<1>(std::move(a));\n int n3 = std::get<1>(ca);\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 277 }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 286 }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 294 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 274 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 283 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 291 }"}, {"sha": "4b1e5aeb661633a4cd3bd7b363f2c110d30d8ce2", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_neg.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -23,4 +23,4 @@\n \n typedef std::tuple_element<1, std::array<int, 1>>::type type;\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 325 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 322 }"}, {"sha": "1c590dd841bff42c9aa1f67fe26e68362faebb8b", "filename": "libstdc++-v3/testsuite/experimental/feat-cxx14.cc", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-cxx14.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-cxx14.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-cxx14.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -78,11 +78,11 @@\n #  error \"__cpp_lib_complex_udls != 201309\"\n #endif\n \n-#ifndef  __cpp_lib_generic_associative_lookup\n-#  error \"__cpp_lib_generic_associative_lookup\"\n-#elif  __cpp_lib_generic_associative_lookup != 201304\n-#  error \"__cpp_lib_generic_associative_lookup != 201304\"\n-#endif\n+//#ifndef  __cpp_lib_generic_associative_lookup\n+//#  error \"__cpp_lib_generic_associative_lookup\"\n+//#elif  __cpp_lib_generic_associative_lookup != 201304\n+//#  error \"__cpp_lib_generic_associative_lookup != 201304\"\n+//#endif\n \n //#ifndef  __cpp_lib_null_iterators\n //#  error \"__cpp_lib_null_iterators\"\n@@ -111,3 +111,9 @@\n #elif  __cpp_lib_shared_timed_mutex != 201402\n #  error \"__cpp_lib_shared_timed_mutex != 201402\"\n #endif\n+\n+#ifndef  __cpp_lib_is_final\n+#  error \"__cpp_lib_is_final\"\n+#elif  __cpp_lib_is_final != 201402\n+#  error \"__cpp_lib_is_final != 201402\"\n+#endif"}, {"sha": "50d1ce247f057d9b8700cb21d6538b33562be14a", "filename": "libstdc++-v3/testsuite/experimental/feat-lib-fund.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65eb9e641751e70ee4f0600218866794023ac65/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc?ref=f65eb9e641751e70ee4f0600218866794023ac65", "patch": "@@ -12,9 +12,9 @@\n //#  error \"<experimental/net>\"\n //#endif\n \n-//#if !__has_include(<experimental/any>)\n-//#  error \"<experimental/any>\"\n-//#endif\n+#if !__has_include(<experimental/any>)\n+#  error \"<experimental/any>\"\n+#endif\n \n //#if !__has_include(<experimental/memory_resource>)\n //#  error \"<experimental/memory_resource>\""}]}