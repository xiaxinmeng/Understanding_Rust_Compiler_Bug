{"sha": "9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwMGEzOTczN2NkNmY4YjMwY2U0YmRlMzZjNmRhMTFjNDE1ZWY5Mw==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2017-07-06T08:12:33Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2017-07-06T08:12:33Z"}, "message": "[testsuite] Add dg-require-stack-check\n\n2017-07-06  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\t* doc/sourcebuild.texi (Test Directives, Variants of\n\tdg-require-support): Add documentation for dg-require-stack-check.\n\n\tgcc/testsuite/\n\t* lib/target-supports-dg.exp (dg-require-stack-check): New.\n\t* lib/target-supports.exp (check_stack_check_available): New.\n\t* g++.dg/other/i386-9.C: Add dg-require-stack-check.\n\t* gcc.c-torture/compile/stack-check-1.c: Likewise.\n\t* gcc.dg/graphite/run-id-pr47653.c: Likewise.\n\t* gcc.dg/pr47443.c: Likewise.\n\t* gcc.dg/pr48134.c: Likewise.\n\t* gcc.dg/pr70017.c: Likewise.\n\t* gcc.target/aarch64/stack-checking.c: Likewise.\n\t* gcc.target/arm/stack-checking.c: Likewise.\n\t* gcc.target/i386/pr48723.c: Likewise.\n\t* gcc.target/i386/pr55672.c: Likewise.\n\t* gcc.target/i386/pr67265-2.c: Likewise.\n\t* gcc.target/i386/pr67265.c: Likewise.\n\t* gnat.dg/opt49.adb: Likewise.\n\t* gnat.dg/stack_check1.adb: Likewise.\n\t* gnat.dg/stack_check2.adb: Likewise.\n\t* gnat.dg/stack_check3.adb: Likewise.\n\nFrom-SVN: r250013", "tree": {"sha": "0bb7f135399c6e956487f07750ac13d23f8f4e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bb7f135399c6e956487f07750ac13d23f8f4e4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/comments", "author": null, "committer": null, "parents": [{"sha": "b32d067bbcaac072d31d8e5af6f367dc289c48f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32d067bbcaac072d31d8e5af6f367dc289c48f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32d067bbcaac072d31d8e5af6f367dc289c48f0"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "2acf140f4075e189fc70716f14685711373af6ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,3 +1,8 @@\n+2017-07-06  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* doc/sourcebuild.texi (Test Directives, Variants of\n+\tdg-require-support): Add documentation for dg-require-stack-check.\n+\n 2017-07-05  Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \t* config/i386/subst.md (mask_scalar, round_scalar,"}, {"sha": "85af8778167ba6e41f2007bda5fbae80bcf8856e", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -2311,6 +2311,11 @@ the codeset to convert to.\n Skip the test if the target does not support profiling with option\n @var{profopt}.\n \n+@item dg-require-stack-check @var{check}\n+Skip the test if the target does not support the @code{-fstack-check}\n+option.  If @var{check} is @code{\"\"}, support for @code{-fstack-check}\n+is checked, for @code{-fstack-check=(\"@var{check}\")} otherwise.\n+\n @item dg-require-visibility @var{vis}\n Skip the test if the target does not support the @code{visibility} attribute.\n If @var{vis} is @code{\"\"}, support for @code{visibility(\"hidden\")} is"}, {"sha": "d629c2bd90d8a9a1411bad6edc63dd7355412027", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,3 +1,24 @@\n+2017-07-06  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* lib/target-supports-dg.exp (dg-require-stack-check): New.\n+\t* lib/target-supports.exp (check_stack_check_available): New.\n+\t* g++.dg/other/i386-9.C: Add dg-require-stack-check.\n+\t* gcc.c-torture/compile/stack-check-1.c: Likewise.\n+\t* gcc.dg/graphite/run-id-pr47653.c: Likewise.\n+\t* gcc.dg/pr47443.c: Likewise.\n+\t* gcc.dg/pr48134.c: Likewise.\n+\t* gcc.dg/pr70017.c: Likewise.\n+\t* gcc.target/aarch64/stack-checking.c: Likewise.\n+\t* gcc.target/arm/stack-checking.c: Likewise.\n+\t* gcc.target/i386/pr48723.c: Likewise.\n+\t* gcc.target/i386/pr55672.c: Likewise.\n+\t* gcc.target/i386/pr67265-2.c: Likewise.\n+\t* gcc.target/i386/pr67265.c: Likewise.\n+\t* gnat.dg/opt49.adb: Likewise.\n+\t* gnat.dg/stack_check1.adb: Likewise.\n+\t* gnat.dg/stack_check2.adb: Likewise.\n+\t* gnat.dg/stack_check3.adb: Likewise.\n+\n 2017-07-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR target/80103"}, {"sha": "782cf875eef4383d61fc28bddd2f67c52d9a9528", "filename": "gcc/testsuite/g++.dg/other/i386-9.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-9.C?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -2,6 +2,7 @@\n // Testcase by Zdenek Sojka <zsojka@seznam.cz>\n \n // { dg-do run { target i?86-*-* x86_64-*-* } }\n+/* { dg-require-stack-check \"\" } */\n // { dg-options \"-Os -mpreferred-stack-boundary=5 -fstack-check -fno-omit-frame-pointer\" }\n \n int main()"}, {"sha": "2a03f7c29ae3ef605a16c09857626dae45fcb019", "filename": "gcc/testsuite/gcc.c-torture/compile/stack-check-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstack-check-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstack-check-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstack-check-1.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,3 +1,4 @@\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-stack-check \"\" } */\n /* { dg-additional-options \"-fstack-check\" } */\n #include \"20031023-1.c\""}, {"sha": "ca91af471cadd4b91cff424374eeb0ae5fdcb49e", "filename": "gcc/testsuite/gcc.dg/graphite/run-id-pr47653.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr47653.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr47653.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr47653.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-stack-check \"generic\" } */\n /* { dg-options \"-O -fstack-check=generic -ftree-pre -fgraphite-identity\" } */\n /* nvptx doesn't expose a stack.  */\n /* { dg-skip-if \"\" { nvptx-*-* } } */"}, {"sha": "5a5c43f253736618dd185f44fbbf43ebe3abcd0d", "filename": "gcc/testsuite/gcc.dg/pr47443.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47443.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47443.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47443.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,5 +1,6 @@\n /* PR tree-optimization/47443 */\n /* { dg-do compile } */\n+/* { dg-require-stack-check \"generic\" } */\n /* { dg-options \"-O -fstack-check=generic\" } */\n \n static inline int bar (char *c, int i)"}, {"sha": "446ad01b45271a071167d66f84955278b7977bec", "filename": "gcc/testsuite/gcc.dg/pr48134.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48134.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48134.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48134.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-stack-check \"specific\" } */\n /* { dg-options \"-O2 -fstack-check=specific -fno-tree-dse -fno-tree-fre -fno-tree-loop-optimize -g\" } */\n \n struct S"}, {"sha": "3489d5baf48960ef4d7a02881d638c3f9657f514", "filename": "gcc/testsuite/gcc.dg/pr70017.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70017.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-stack-check \"generic\" } */\n /* { dg-options \"-fstack-check=generic\" } */\n \n /* Check that the expected warning is issued for large frames.  */"}, {"sha": "eaa40581c865b00a7547245d132d961dcd43780b", "filename": "gcc/testsuite/gcc.target/aarch64/stack-checking.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstack-checking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstack-checking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstack-checking.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run { target { *-*-linux* } } } */\n+/* { dg-require-stack-check \"\" } */\n /* { dg-options \"-fstack-check\" } */\n \n int main(void)"}, {"sha": "4b53bedd97b73f8090cbe976ca72c5c11116940e", "filename": "gcc/testsuite/gcc.target/arm/stack-checking.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-checking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-checking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-checking.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run { target { *-*-linux* } } } */\n+/* { dg-require-stack-check \"\" } */\n /* { dg-options \"-fstack-check\" } */\n-/* { dg-skip-if \"\" { arm_thumb1 } } */\n \n int main(void)\n {"}, {"sha": "222c075fbf7e0d5cfabd0ffbbe971260256e7ae4", "filename": "gcc/testsuite/gcc.target/i386/pr48723.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48723.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48723.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48723.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-stack-check \"\" } */\n /* { dg-options \"-fstack-check -mavx\" } */\n \n struct S0"}, {"sha": "f7b0d717e011e94d77f8f6c7a4065d5c0ccf5768", "filename": "gcc/testsuite/gcc.target/i386/pr55672.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55672.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55672.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55672.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-stack-check \"generic\" } */\n /* { dg-options \"-O -fstack-check=generic\" } */\n \n int main ()"}, {"sha": "690a78455572d17bc8dec0cb35caae9f62ff1e67", "filename": "gcc/testsuite/gcc.target/i386/pr67265-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67265-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67265-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67265-2.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-stack-check \"\" } */\n /* { dg-options \"-O -fstack-check\" } */\n \n void foo (int n)"}, {"sha": "2671acc043ad88285ce9c991ce4360ec24574408", "filename": "gcc/testsuite/gcc.target/i386/pr67265.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67265.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67265.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67265.c?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -2,6 +2,7 @@\n /* Reduced testcase by Johannes Dewender <gnu@JonnyJD.net> */\n \n /* { dg-do compile } */\n+/* { dg-require-stack-check \"\" } */\n /* { dg-options \"-O -fstack-check -fPIC\" } */\n \n int a, b, c, d, e;"}, {"sha": "42ab953a2e05f0237bdc00359510665012681d42", "filename": "gcc/testsuite/gnat.dg/opt49.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fopt49.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fopt49.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt49.adb?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n -- { dg-do run }\n+-- { dg-require-stack-check \"\" }\n -- { dg-options \"-O -fstack-check\" }\n \n procedure Opt49 is"}, {"sha": "eaad745bdf60a41fb26645f2739cf8989f71c399", "filename": "gcc/testsuite/gnat.dg/stack_check1.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check1.adb?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n -- { dg-do run }\n+-- { dg-require-stack-check \"\" }\n -- { dg-options \"-fstack-check\" }\n \n -- This test requires architecture- and OS-specific support code for unwinding"}, {"sha": "f34d647c862cdb94c943ce201a39eae3ee5040fc", "filename": "gcc/testsuite/gnat.dg/stack_check2.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check2.adb?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n -- { dg-do run }\n+-- { dg-require-stack-check \"\" }\n -- { dg-options \"-fstack-check\" }\n \n -- This test requires architecture- and OS-specific support code for unwinding"}, {"sha": "3bb859c82f804c20e1a0b8c2b4e2444267db3016", "filename": "gcc/testsuite/gnat.dg/stack_check3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstack_check3.adb?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1,4 +1,5 @@\n -- { dg-do compile }\n+-- { dg-require-stack-check \"\" }\n -- { dg-options \"-O -fstack-check\" }\n \n package body Stack_Check3 is"}, {"sha": "d50d8b07ada525aaeb58100908e47aaec53bc26f", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -265,6 +265,21 @@ proc dg-require-linker-plugin { args } {\n     }\n }\n \n+# If this target does not support the \"stack-check\" option, skip this\n+# test.\n+\n+proc dg-require-stack-check { args } {\n+    set stack_check_available [ check_stack_check_available [lindex $args 1 ] ]\n+    if { $stack_check_available == -1 } {\n+\tupvar name name\n+\tunresolved \"$name\"\n+    }\n+    if { $stack_check_available != 1 } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+    }\n+}\n+\n # Add any target-specific flags needed for accessing the given list\n # of features.  This must come after all dg-options.\n "}, {"sha": "d19892e88d549c7f46b8a639567b9e5f65dcdddf", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e00a39737cd6f8b30ce4bde36c6da11c415ef93/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=9e00a39737cd6f8b30ce4bde36c6da11c415ef93", "patch": "@@ -1063,6 +1063,17 @@ proc check_effective_target_fstack_protector {} {\n     } \"-fstack-protector\"]\n }\n \n+# Return 1 if the target supports -fstack-check or -fstack-check=$stack_kind\n+proc check_stack_check_available { stack_kind } {\n+    if [string match \"\" $stack_kind] then {\n+\tset stack_opt \"-fstack-check\"\n+    } else { set stack_opt \"-fstack-check=$stack_kind\" }\n+\n+    return [check_no_compiler_messages stack_check executable {\n+\tint main (void) { return 0; }\n+    } \"$stack_opt\"]\n+}\n+\n # Return 1 if compilation with -freorder-blocks-and-partition is error-free\n # for trivial code, 0 otherwise.  As some targets (ARM for example) only\n # warn when -fprofile-use is also supplied we test that combination too."}]}