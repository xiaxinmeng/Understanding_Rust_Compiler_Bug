{"sha": "bbf531f021aba59416ddda3f260bc5feb64daaf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJmNTMxZjAyMWFiYTU5NDE2ZGRkYTNmMjYwYmM1ZmViNjRkYWFmMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2009-06-30T00:02:10Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2009-06-30T00:02:10Z"}, "message": "dwarf2.h: Remove.\n\ngcc\n\t* dwarf2.h: Remove.\n\t* Makefile.in (DWARF2_H): New variable.\n\t(except.o): Use it.\n\t(dwarf2out.o): Likewise.\n\t(dwarf2asm.o): Likewise.\n\t* config/i386/t-i386: Use DWARF2_H.\n\t* except.c: Include elf/dwarf2.h.\n\t* unwind-dw2.c: Include elf/dwarf2.h.\n\t* dwarf2out.c: Include elf/dwarf2.h.\n\t(dw_loc_descr_struct) <dw_loc_opc>: Now a bitfield.\n\t<dtprel>: New field.\n\t(dwarf_stack_op_name): Don't handle INTERNAL_DW_OP_tls_addr.\n\t(size_of_loc_descr): Likewise.\n\t(output_loc_operands_raw): Likewise.\n\t(output_loc_operands): Handle new dtprel field.\n\t(loc_checksum): Update.\n\t(loc_descriptor_from_tree_1) <VAR_DDECL>: Set dtprel field.\n\t* unwind-dw2-fde-glibc.c: Include elf/dwarf2.h.\n\t* unwind-dw2-fde.c: Include elf/dwarf2.h.\n\t* dwarf2asm.c: Include elf/dwarf2.h.\n\t* unwind-dw2-fde-darwin.c: Include elf/dwarf2.h.\n\t* config/mmix/mmix.c: Include elf/dwarf2.h.\n\t* config/rs6000/darwin-fallback.c: Include elf/dwarf2.h.\n\t* config/xtensa/unwind-dw2-xtensa.c: Include elf/dwarf2.h.\n\t* config/sh/sh.c: Include elf/dwarf2.h.\n\t* config/i386/i386.c: Include elf/dwarf2.h.\ngcc/ada\n\t* raise-gcc.c: Include elf/dwarf2.h.\ninclude\n\t* elf/dwarf2.h: New file.  Merged with gdb.\n\nFrom-SVN: r149070", "tree": {"sha": "d3aa30322264d3dffd85d63f5b54a710c119245b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3aa30322264d3dffd85d63f5b54a710c119245b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbf531f021aba59416ddda3f260bc5feb64daaf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf531f021aba59416ddda3f260bc5feb64daaf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf531f021aba59416ddda3f260bc5feb64daaf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf531f021aba59416ddda3f260bc5feb64daaf3/comments", "author": null, "committer": null, "parents": [{"sha": "bae381358c0458a2c37435a40830e6b56956a834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae381358c0458a2c37435a40830e6b56956a834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae381358c0458a2c37435a40830e6b56956a834"}], "stats": {"total": 144, "additions": 96, "deletions": 48}, "files": [{"sha": "61ffa34ee73b8daa43ca8e6a90d19f867c92d02f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -1,3 +1,32 @@\n+2009-06-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* dwarf2.h: Remove.\n+\t* Makefile.in (DWARF2_H): New variable.\n+\t(except.o): Use it.\n+\t(dwarf2out.o): Likewise.\n+\t(dwarf2asm.o): Likewise.\n+\t* config/i386/t-i386: Use DWARF2_H.\n+\t* except.c: Include elf/dwarf2.h.\n+\t* unwind-dw2.c: Include elf/dwarf2.h.\n+\t* dwarf2out.c: Include elf/dwarf2.h.\n+\t(dw_loc_descr_struct) <dw_loc_opc>: Now a bitfield.\n+\t<dtprel>: New field.\n+\t(dwarf_stack_op_name): Don't handle INTERNAL_DW_OP_tls_addr.\n+\t(size_of_loc_descr): Likewise.\n+\t(output_loc_operands_raw): Likewise.\n+\t(output_loc_operands): Handle new dtprel field.\n+\t(loc_checksum): Update.\n+\t(loc_descriptor_from_tree_1) <VAR_DDECL>: Set dtprel field.\n+\t* unwind-dw2-fde-glibc.c: Include elf/dwarf2.h.\n+\t* unwind-dw2-fde.c: Include elf/dwarf2.h.\n+\t* dwarf2asm.c: Include elf/dwarf2.h.\n+\t* unwind-dw2-fde-darwin.c: Include elf/dwarf2.h.\n+\t* config/mmix/mmix.c: Include elf/dwarf2.h.\n+\t* config/rs6000/darwin-fallback.c: Include elf/dwarf2.h.\n+\t* config/xtensa/unwind-dw2-xtensa.c: Include elf/dwarf2.h.\n+\t* config/sh/sh.c: Include elf/dwarf2.h.\n+\t* config/i386/i386.c: Include elf/dwarf2.h.\n+\n 2009-06-29  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.h (CPP_SPEC): Remove __cop macro."}, {"sha": "8bd09a8565cb0376659b02f9f6e8dc567ab389d0", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -405,6 +405,7 @@ SPLAY_TREE_H= $(srcdir)/../include/splay-tree.h\n FIBHEAP_H   = $(srcdir)/../include/fibheap.h\n PARTITION_H = $(srcdir)/../include/partition.h\n MD5_H\t    = $(srcdir)/../include/md5.h\n+DWARF2_H    = $(srcdir)/../include/elf/dwarf2.h\n \n # Default native SYSTEM_HEADER_DIR, to be overridden by targets.\n NATIVE_SYSTEM_HEADER_DIR = /usr/include\n@@ -2592,7 +2593,7 @@ except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(EXCEPT_H) $(FUNCTION_H) $(EXPR_H) libfuncs.h \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h $(TOPLEV_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n-   gt-except.h $(CGRAPH_H) $(INTEGRATE_H) $(DIAGNOSTIC_H) dwarf2.h \\\n+   gt-except.h $(CGRAPH_H) $(INTEGRATE_H) $(DIAGNOSTIC_H) $(DWARF2_H) \\\n    $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H) $(TREE_FLOW_H)\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n@@ -2635,14 +2636,14 @@ sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) debug.h \\\n    output.h $(TOPLEV_H) $(TM_P_H) gsyms.h langhooks.h $(TARGET_H) sdbout.h \\\n    gt-sdbout.h reload.h $(VARRAY_H)\n dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) version.h $(RTL_H) dwarf2.h debug.h $(FLAGS_H) insn-config.h \\\n+   $(TREE_H) version.h $(RTL_H) $(DWARF2_H) debug.h $(FLAGS_H) insn-config.h \\\n    output.h $(DIAGNOSTIC_H) $(REAL_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n    libfuncs.h $(TOPLEV_H) dwarf2out.h reload.h $(GGC_H) $(EXCEPT_H) dwarf2asm.h \\\n    $(TM_P_H) langhooks.h $(HASHTAB_H) gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) \\\n    $(MD5_H) $(INPUT_H) $(FUNCTION_H) $(VARRAY_H)\n dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FLAGS_H) $(RTL_H) $(TREE_H) output.h dwarf2asm.h $(TM_P_H) $(GGC_H) \\\n-   gt-dwarf2asm.h dwarf2.h $(SPLAY_TREE_H) $(TARGET_H)\n+   gt-dwarf2asm.h $(DWARF2_H) $(SPLAY_TREE_H) $(TARGET_H)\n vmsdbgout.o : vmsdbgout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) version.h \\\n    $(FLAGS_H) $(RTL_H) output.h vmsdbg.h debug.h langhooks.h $(FUNCTION_H) $(TARGET_H)\n xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\"}, {"sha": "1374c4cfaf8b0ea9f9ac1c89a87aafbbcbf4700a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -1,3 +1,7 @@\n+2009-06-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* raise-gcc.c: Include elf/dwarf2.h.\n+\n 2009-06-27  Laurent GUERBY  <laurent@guerby.net>\n \n \t* tb-gcc.c (trace_callback): Add casts to silence warning."}, {"sha": "b30145af531375ca83c501317e7afbefa614d9db", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -96,7 +96,7 @@ __gnat_Unwind_ForcedUnwind (_Unwind_Exception *, void *, void *);\n \n #ifdef IN_RTS   /* For eh personality routine */\n \n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind-dw2-fde.h\"\n #include \"unwind-pe.h\"\n "}, {"sha": "8bb82f3fb6c897f193d4f8cef08b38ae428bddab", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -48,7 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"cgraph.h\"\n #include \"gimple.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"df.h\"\n #include \"tm-constrs.h\"\n #include \"params.h\""}, {"sha": "087c4743d2faddf6fa819116386972c0692733c2", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -22,7 +22,7 @@ i386.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(INSN_ATTR_H) $(FLAGS_H) $(C_COMMON_H) except.h $(FUNCTION_H) \\\n   $(RECOG_H) $(EXPR_H) $(OPTABS_H) toplev.h $(BASIC_BLOCK_H) \\\n   $(GGC_H) $(TARGET_H) $(TARGET_DEF_H) langhooks.h $(CGRAPH_H) \\\n-  $(TREE_GIMPLE_H) dwarf2.h $(DF_H) tm-constrs.h $(PARAMS_H)\n+  $(TREE_GIMPLE_H) $(DWARF2_H) $(DF_H) tm-constrs.h $(PARAMS_H)\n \n i386-c.o: $(srcdir)/config/i386/i386-c.c \\\n   $(srcdir)/config/i386/i386-protos.h $(CONFIG_H) $(SYSTEM_H) coretypes.h \\"}, {"sha": "f81512401f61c7581fa653d8e730d6d60a97554d", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"recog.h\"\n #include \"ggc.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"debug.h\"\n #include \"tm_p.h\"\n #include \"integrate.h\""}, {"sha": "e4d5afe50ac224ee68972ede062ed9d7cf2d26da", "filename": "gcc/config/rs6000/darwin-fallback.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Frs6000%2Fdarwin-fallback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Frs6000%2Fdarwin-fallback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin-fallback.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -28,7 +28,7 @@\n #include \"tsystem.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind.h\"\n #include \"unwind-dw2.h\"\n #include <stdint.h>"}, {"sha": "08cae31b995fd5c892b7215f11ce1206baa3baf7", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -38,7 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"recog.h\"\n #include \"integrate.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\""}, {"sha": "235b8a12563d019982c18eddcdac36ed559bc8ac", "filename": "gcc/config/xtensa/unwind-dw2-xtensa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fxtensa%2Funwind-dw2-xtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fconfig%2Fxtensa%2Funwind-dw2-xtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Funwind-dw2-xtensa.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -28,7 +28,7 @@\n #include \"tsystem.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind.h\"\n #ifdef __USING_SJLJ_EXCEPTIONS__\n # define NO_SIZE_OF_ENCODED_VALUE"}, {"sha": "4e2c9980feb688a583e9404b2f2df4347f504d76", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -29,7 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"target.h\"\n #include \"dwarf2asm.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"splay-tree.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\""}, {"sha": "f954d6e2ea29aa032216565241fc6671004b3f39", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 31, "deletions": 20, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -74,7 +74,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"libfuncs.h\"\n #include \"except.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"dwarf2out.h\"\n #include \"dwarf2asm.h\"\n #include \"toplev.h\"\n@@ -3886,7 +3886,10 @@ dw_val_node;\n \n typedef struct GTY(()) dw_loc_descr_struct {\n   dw_loc_descr_ref dw_loc_next;\n-  enum dwarf_location_atom dw_loc_opc;\n+  ENUM_BITFIELD (dwarf_location_atom) dw_loc_opc : 8;\n+  /* Used to distinguish DW_OP_addr with a direct symbol relocation\n+     from DW_OP_addr with a dtp-relative symbol relocation.  */\n+  unsigned int dtprel : 1;\n   int dw_loc_addr;\n   dw_val_node dw_loc_oprnd1;\n   dw_val_node dw_loc_oprnd2;\n@@ -3918,7 +3921,6 @@ dwarf_stack_op_name (unsigned int op)\n   switch (op)\n     {\n     case DW_OP_addr:\n-    case INTERNAL_DW_OP_tls_addr:\n       return \"DW_OP_addr\";\n     case DW_OP_deref:\n       return \"DW_OP_deref\";\n@@ -4333,7 +4335,6 @@ size_of_loc_descr (dw_loc_descr_ref loc)\n   switch (loc->dw_loc_opc)\n     {\n     case DW_OP_addr:\n-    case INTERNAL_DW_OP_tls_addr:\n       size += DWARF2_ADDR_SIZE;\n       break;\n     case DW_OP_const1u:\n@@ -4474,9 +4475,6 @@ output_loc_operands (dw_loc_descr_ref loc)\n   switch (loc->dw_loc_opc)\n     {\n #ifdef DWARF2_DEBUGGING_INFO\n-    case DW_OP_addr:\n-      dw2_asm_output_addr_rtx (DWARF2_ADDR_SIZE, val1->v.val_addr, NULL);\n-      break;\n     case DW_OP_const2u:\n     case DW_OP_const2s:\n       dw2_asm_output_data (2, val1->v.val_int, NULL);\n@@ -4502,7 +4500,6 @@ output_loc_operands (dw_loc_descr_ref loc)\n       }\n       break;\n #else\n-    case DW_OP_addr:\n     case DW_OP_const2u:\n     case DW_OP_const2s:\n     case DW_OP_const4u:\n@@ -4585,16 +4582,27 @@ output_loc_operands (dw_loc_descr_ref loc)\n       dw2_asm_output_data (1, val1->v.val_int, NULL);\n       break;\n \n-    case INTERNAL_DW_OP_tls_addr:\n-      if (targetm.asm_out.output_dwarf_dtprel)\n+    case DW_OP_addr:\n+      if (loc->dtprel)\n \t{\n-\t  targetm.asm_out.output_dwarf_dtprel (asm_out_file,\n-\t\t\t\t\t       DWARF2_ADDR_SIZE,\n-\t\t\t\t\t       val1->v.val_addr);\n-\t  fputc ('\\n', asm_out_file);\n+\t  if (targetm.asm_out.output_dwarf_dtprel)\n+\t    {\n+\t      targetm.asm_out.output_dwarf_dtprel (asm_out_file,\n+\t\t\t\t\t\t   DWARF2_ADDR_SIZE,\n+\t\t\t\t\t\t   val1->v.val_addr);\n+\t      fputc ('\\n', asm_out_file);\n+\t    }\n+\t  else\n+\t    gcc_unreachable ();\n \t}\n       else\n-\tgcc_unreachable ();\n+\t{\n+#ifdef DWARF2_DEBUGGING_INFO\n+\t  dw2_asm_output_addr_rtx (DWARF2_ADDR_SIZE, val1->v.val_addr, NULL);\n+#else\n+\t  gcc_unreachable ();\n+#endif\n+\t}\n       break;\n \n     default:\n@@ -4728,9 +4736,6 @@ output_loc_operands_raw (dw_loc_descr_ref loc)\n       dw2_asm_output_data_sleb128_raw (val2->v.val_int);\n       break;\n \n-    case INTERNAL_DW_OP_tls_addr:\n-      gcc_unreachable ();\n-\n     default:\n       /* Other codes have no operands.  */\n       break;\n@@ -7280,7 +7285,10 @@ pop_compile_unit (dw_die_ref old_unit)\n static inline void\n loc_checksum (dw_loc_descr_ref loc, struct md5_ctx *ctx)\n {\n-  CHECKSUM (loc->dw_loc_opc);\n+  int tem;\n+\n+  tem = (loc->dtprel << 8) | ((unsigned int) loc->dw_loc_opc);\n+  CHECKSUM (tem);\n   CHECKSUM (loc->dw_loc_oprnd1);\n   CHECKSUM (loc->dw_loc_oprnd2);\n }\n@@ -10772,6 +10780,7 @@ loc_descriptor_from_tree_1 (tree loc, int want_address)\n \t  rtx rtl;\n \t  enum dwarf_location_atom first_op;\n \t  enum dwarf_location_atom second_op;\n+\t  bool dtprel = false;\n \n \t  if (targetm.have_tls)\n \t    {\n@@ -10785,7 +10794,8 @@ loc_descriptor_from_tree_1 (tree loc, int want_address)\n \t     \t  module.  */\n \t      if (DECL_EXTERNAL (loc) && !targetm.binds_local_p (loc))\n \t\treturn 0;\n-\t      first_op = (enum dwarf_location_atom) INTERNAL_DW_OP_tls_addr;\n+\t      first_op = DW_OP_addr;\n+\t      dtprel = true;\n \t      second_op = DW_OP_GNU_push_tls_address;\n \t    }\n \t  else\n@@ -10810,6 +10820,7 @@ loc_descriptor_from_tree_1 (tree loc, int want_address)\n \t  ret = new_loc_descr (first_op, 0, 0);\n \t  ret->dw_loc_oprnd1.val_class = dw_val_class_addr;\n \t  ret->dw_loc_oprnd1.v.val_addr = rtl;\n+\t  ret->dtprel = dtprel;\n \n \t  ret1 = new_loc_descr (second_op, 0, 0);\n \t  add_loc_descr (&ret, ret1);"}, {"sha": "4a02fe305b44201713da6b54445f109c008a6a9e", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -65,7 +65,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"dwarf2asm.h\"\n #include \"dwarf2out.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"toplev.h\"\n #include \"hashtab.h\"\n #include \"intl.h\""}, {"sha": "c033bbe0cb540a6c1a67cea62b048e10d43ec042", "filename": "gcc/unwind-dw2-fde-darwin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2-fde-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2-fde-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde-darwin.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -27,7 +27,7 @@\n #include \"tsystem.h\"\n #include <string.h>\n #include <stdlib.h>\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind.h\"\n #define NO_BASE_OF_ENCODED_VALUE\n #define DWARF2_OBJECT_END_PTR_EXTENSION"}, {"sha": "0e3d0a34bff7767e03f6aba96fce069e210553d0", "filename": "gcc/unwind-dw2-fde-glibc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2-fde-glibc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2-fde-glibc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde-glibc.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -37,7 +37,7 @@\n #endif\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind.h\"\n #define NO_BASE_OF_ENCODED_VALUE\n #include \"unwind-pe.h\""}, {"sha": "6780700e6aff2cf7debc1f7d16a3c1749d77e749", "filename": "gcc/unwind-dw2-fde.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2-fde.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2-fde.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -29,7 +29,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"tsystem.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind.h\"\n #define NO_BASE_OF_ENCODED_VALUE\n #include \"unwind-pe.h\""}, {"sha": "0ceda12a44bd9418aa4535da44837ec4d401d033", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -27,7 +27,7 @@\n #include \"tsystem.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"dwarf2.h\"\n+#include \"elf/dwarf2.h\"\n #include \"unwind.h\"\n #ifdef __USING_SJLJ_EXCEPTIONS__\n # define NO_SIZE_OF_ENCODED_VALUE"}, {"sha": "148e404957a421072563ed616fbe2d481a3479f0", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -1,3 +1,7 @@\n+2009-06-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* elf/dwarf2.h: New file.  Merged with gdb.\n+\n 2009-06-09  Ian Lance Taylor  <ian@airs.com>\n \n \t* ansidecl.h (ATTRIBUTE_UNUSED_LABEL): Define for C++."}, {"sha": "f0dbfd28f72760bdab1de26a6981b1a401d0eb10", "filename": "include/elf/dwarf2.h", "status": "renamed", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf531f021aba59416ddda3f260bc5feb64daaf3/include%2Felf%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf531f021aba59416ddda3f260bc5feb64daaf3/include%2Felf%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Felf%2Fdwarf2.h?ref=bbf531f021aba59416ddda3f260bc5feb64daaf3", "patch": "@@ -37,13 +37,14 @@\n    by UNIX International.  Copies of this specification are available from\n    UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.\n \n-   This file also now contains definitions from the DWARF 3 specification.  */\n+   This file also now contains definitions from the DWARF 3 specification\n+   published Dec 20, 2005, available from: http://dwarf.freestandards.org.  */\n \n /* This file is shared between GCC and GDB, and should not contain\n    prototypes.  */\n \n-#ifndef GCC_DWARF2_H\n-#define GCC_DWARF2_H\n+#ifndef _ELF_DWARF2_H\n+#define _ELF_DWARF2_H\n \n /* Structure found in the .debug_line section.  */\n typedef struct\n@@ -281,7 +282,7 @@ enum dwarf_attribute\n     DW_AT_return_addr = 0x2a,\n     DW_AT_start_scope = 0x2c,\n     DW_AT_bit_stride = 0x2e,\n-    DW_AT_stride_size = DW_AT_bit_stride,\n+#define DW_AT_stride_size   DW_AT_bit_stride  /* Note: The use of DW_AT_stride_size is deprecated.  */\n     DW_AT_upper_bound = 0x2f,\n     DW_AT_abstract_origin = 0x31,\n     DW_AT_accessibility = 0x32,\n@@ -317,7 +318,7 @@ enum dwarf_attribute\n     DW_AT_associated    = 0x4f,\n     DW_AT_data_location = 0x50,\n     DW_AT_byte_stride   = 0x51,\n-    DW_AT_stride        = DW_AT_byte_stride,\n+#define DW_AT_stride   DW_AT_byte_stride  /* Note: The use of DW_AT_stride is deprecated.  */\n     DW_AT_entry_pc      = 0x52,\n     DW_AT_use_UTF8      = 0x53,\n     DW_AT_extension     = 0x54,\n@@ -563,12 +564,8 @@ enum dwarf_location_atom\n     DW_OP_HP_mod_range   = 0xe4,\n     DW_OP_HP_unmod_range = 0xe5,\n     DW_OP_HP_tls         = 0xe6,\n-\n-    /* Used internally in dwarf2out.c to distinguish DW_OP_addr with a\n-       direct symbol relocation from DW_OP_addr with a dtp-relative\n-       symbol relocation.  */\n-    INTERNAL_DW_OP_tls_addr = 0x103\n-\n+    /* PGI (STMicroelectronics) extensions.  */\n+    DW_OP_PGI_omp_thread_num = 0xf8\n   };\n \n /* Type encodings.  */\n@@ -722,6 +719,7 @@ enum dwarf_line_number_x_ops\n     DW_LNE_end_sequence = 1,\n     DW_LNE_set_address = 2,\n     DW_LNE_define_file = 3,\n+    DW_LNE_set_discriminator = 4,\n     /* HP extensions.  */\n     DW_LNE_HP_negate_is_UV_update      = 0x11,\n     DW_LNE_HP_push_context             = 0x12,\n@@ -782,6 +780,7 @@ enum dwarf_call_frame_info\n \n #define DW_CIE_ID\t  0xffffffff\n #define DW64_CIE_ID\t  0xffffffffffffffffULL\n+#define DW_CIE_VERSION\t  1\n \n #define DW_CFA_extended   0\n \n@@ -856,4 +855,4 @@ enum dwarf_macinfo_record_type\n \n #define DW_EH_PE_indirect\t0x80\n \n-#endif /* dwarf2.h */\n+#endif /* _ELF_DWARF2_H */", "previous_filename": "gcc/dwarf2.h"}]}