{"sha": "8ae884c09fbba91e9cec391290ee4a2859e7ff41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlODg0YzA5ZmJiYTkxZTljZWMzOTEyOTBlZTRhMjg1OWU3ZmY0MQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-17T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-17T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "b6fb0ccbb48921792478383fb975bbd25129706c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6fb0ccbb48921792478383fb975bbd25129706c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ae884c09fbba91e9cec391290ee4a2859e7ff41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae884c09fbba91e9cec391290ee4a2859e7ff41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae884c09fbba91e9cec391290ee4a2859e7ff41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae884c09fbba91e9cec391290ee4a2859e7ff41/comments", "author": null, "committer": null, "parents": [{"sha": "c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c86ab96c20a3f52fb59e0532ae9c93665deb44"}], "stats": {"total": 239, "additions": 238, "deletions": 1}, "files": [{"sha": "1d3f9d5712a6e6ad2bb7964d2b5bc2587dc04de9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ae884c09fbba91e9cec391290ee4a2859e7ff41", "patch": "@@ -1,3 +1,58 @@\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/91710\n+\t* config/aarch64/aarch64.c (aarch64_function_arg_alignment): Change\n+\tabi_break argument from bool * to unsigned *, store there the pre-GCC 9\n+\talignment.\n+\t(aarch64_layout_arg, aarch64_gimplify_va_arg_expr): Adjust callers.\n+\t(aarch64_function_arg_regno_p): Likewise.  Only emit -Wpsabi note if\n+\tthe old and new alignment after applying MIN/MAX to it is different.\n+\n+2021-04-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/100048\n+\t* config/aarch64/aarch64-sve.md (@aarch64_sve_trn1_conv<mode>): New.\n+\t* config/aarch64/aarch64.c (aarch64_expand_sve_const_pred_trn): Use new\n+\tTRN optab.\n+\t* config/aarch64/iterators.md (UNSPEC_TRN1_CONV): New.\n+\n+2021-04-16  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* doc/extend.texi (PowerPC AltiVec/VSX Built-in Functions): Revise\n+\tthis section and its subsections.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/100075\n+\t* config/aarch64/aarch64.md (*neg_asr_si2_extr, *extrsi5_insn_di): New\n+\tdefine_insn patterns.\n+\n+2021-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/98689\n+\t* reg-notes.def (UNTYPED_CALL): New note.\n+\t* combine.c (distribute_notes): Handle it.\n+\t* emit-rtl.c (try_split): Likewise.\n+\t* rtlanal.c (rtx_properties::try_to_add_insn): Likewise.  Assume\n+\tthat calls with the note implicitly set all return value registers.\n+\t* builtins.c (expand_builtin_apply): Add a REG_UNTYPED_CALL\n+\tto untyped_calls.\n+\n+2021-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/99596\n+\t* rtlanal.c (rtx_properties::try_to_add_insn): Don't add global\n+\tregister accesses for const calls.  Assume that pure functions\n+\tcan only read from global registers.  Ignore cases in which\n+\tthe stack pointer has been marked global.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99767\n+\t* tree-vect-loop.c (vect_transform_loop): Don't remove just\n+\tdead scalar .MASK_LOAD calls, but also dead .COND_* calls - replace\n+\tthem by their last argument.\n+\n 2021-04-15  Martin Liska  <mliska@suse.cz>\n \n \t* doc/invoke.texi: Other params don't use it, remove it."}, {"sha": "be1258941c25220c2bb46346072e7aaf2bc8ae78", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=8ae884c09fbba91e9cec391290ee4a2859e7ff41", "patch": "@@ -1 +1 @@\n-20210416\n+20210417"}, {"sha": "69f1927429f7bef242bd1b6d44c3b724c30680d7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8ae884c09fbba91e9cec391290ee4a2859e7ff41", "patch": "@@ -1,3 +1,48 @@\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/100111\n+\t* constexpr.c (cxx_eval_store_expression): Don't add CONSTRUCTORs\n+\tfor empty classes into *valp when types don't match even when *valp\n+\tis NULL.\n+\n+2021-04-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/99803\n+\t* decl.c (make_typename_type): Give an error and return when\n+\tname is is_overloaded_fn.\n+\t* parser.c (cp_parser_class_name): Don't check is_overloaded_fn\n+\tbefore calling make_typename_type.\n+\n+2021-04-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99700\n+\t* constexpr.c (reduced_constant_expression_p): For array\n+\tCONSTRUCTORs, use a dedicated loop that additionally verifies\n+\tthe CONSTRUCTOR spans the entire array.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99850\n+\t* parser.c (cp_parser_constraint_requires_parens) <case CPP_DEREF>:\n+\tIf lambda_p, return pce_ok instead of pce_maybe_postfix.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99833\n+\t* pt.c (extract_locals_r): When handling DECL_EXPR of a structured\n+\tbinding, add to data.internal also all corresponding structured\n+\tbinding decls.\n+\n+2021-04-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100079\n+\t* cp-tree.h (first_field): Declare.\n+\t* mangle.c (range_expr_nelts): New.\n+\t(write_expression): Improve class NTTP mangling.\n+\t* pt.c (get_template_parm_object): Clear TREE_HAS_CONSTRUCTOR.\n+\t* tree.c (zero_init_expr_p): Improve class NTTP handling.\n+\t* decl.c: Adjust comment.\n+\n 2021-04-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/80456"}, {"sha": "86ef778903695bc8b66e6129c77a7b257d5d9b05", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8ae884c09fbba91e9cec391290ee4a2859e7ff41", "patch": "@@ -1,3 +1,21 @@\n+2021-04-16  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100094\n+\t* trans-array.c (gfc_trans_deferred_array): Add code to initialize\n+\tpointers and allocatables with correct TKR parameters.\n+\n+2021-04-16  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100018\n+\t* resolve.c: Add association check before de-referencing pointer.\n+\n+2021-04-16  Harald Anlauf  <anlauf@gmx.de>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/63797\n+\t* module.c (write_symtree): Do not write interface of intrinsic\n+\tprocedure to module file for F2003 and newer.\n+\n 2021-04-15  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/99307"}, {"sha": "b1d790434a8da9a042eb9531911f6593f3a6c43c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae884c09fbba91e9cec391290ee4a2859e7ff41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ae884c09fbba91e9cec391290ee4a2859e7ff41", "patch": "@@ -1,3 +1,115 @@\n+2021-04-16  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100094\n+\t* gfortran.dg/PR100094.f90: New test.\n+\n+2021-04-16  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/96770\n+\t* gcc.target/arm/pure-code/pr96770.c: Fix scan-assembler-times\n+\twith movt/movw.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/91710\n+\t* gcc.target/aarch64/pr91710.c: New test.\n+\n+2021-04-16  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100018\n+\t* gfortran.dg/PR10018.f90: New test.\n+\n+2021-04-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/100048\n+\t* gcc.target/aarch64/sve/pr100048.c: New test.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/100111\n+\t* g++.dg/cpp0x/constexpr-100111.C: New test.\n+\n+2021-04-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/99803\n+\t* g++.dg/cpp2a/typename14.C: Don't expect particular error\n+\tmessages.\n+\t* g++.dg/cpp2a/typename19.C: New test.\n+\n+2021-04-16  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.dg/gimplefe-40.c: Moved to...\n+\t* gcc.dg/vect/gimplefe-40.c: ...here.\n+\t* gcc.dg/gimplefe-41.c: Moved to...\n+\t* gcc.dg/vect/gimplefe-41.c: ...here.\n+\n+2021-04-16  Harald Anlauf  <anlauf@gmx.de>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/63797\n+\t* gfortran.dg/pr63797.f90: New test.\n+\n+2021-04-16  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* gcc.dg/tree-ssa/pr83403-1.c: Revert\n+\tmax-completely-peeled-insns to the default value on IBM Z.\n+\t* gcc.dg/tree-ssa/pr83403-2.c: Likewise.\n+\n+2021-04-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99700\n+\t* g++.dg/cpp2a/constexpr-init21.C: New test.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/100075\n+\t* gcc.target/aarch64/pr100075.c: New test.\n+\n+2021-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/99596\n+\t* gcc.target/arm/pr99596.c: New test.\n+\n+2021-04-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/100067\n+\t* g++.target/arm/arm.exp (dg_runtest_extra_prunes): Update prune\n+\ttemplate.\n+\t* gcc.target/arm/arm.exp (dg_runtest_extra_prunes): Likewise.\n+\t* g++.target/arm/mve.exp (dg_runtest_extra_prunes): Likewise.  Fix\n+\tmissing quotes around switch names.\n+\t* gcc.target/arm/mve/mve.exp: (dg_runtest_extra_prunes): Likewise.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99767\n+\t* gcc.target/aarch64/pr99767.c: New test.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99850\n+\t* g++.dg/cpp23/lambda-specifiers2.C: New test.\n+\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99833\n+\t* g++.dg/cpp1z/pr99833.C: New test.\n+\t* g++.dg/cpp2a/pr99833.C: New test.\n+\n+2021-04-16  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* gcc.dg/unroll-and-jam.c: Revert max-completely-peel-times to\n+\tthe default value on IBM Z.\n+\n+2021-04-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100079\n+\t* g++.dg/abi/mangle71.C: Fix expected mangling.\n+\t* g++.dg/abi/mangle77.C: New test.\n+\t* g++.dg/cpp2a/nontype-class-union1.C: Likewise.\n+\t* g++.dg/cpp2a/nontype-class-equiv1.C: Removed.\n+\t* g++.dg/cpp2a/nontype-class44.C: New test.\n+\n 2021-04-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/99420"}, {"sha": "68fd8eaa5288008a59f24406fffb4a78c4a325e9", "filename": "intl/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae884c09fbba91e9cec391290ee4a2859e7ff41/intl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae884c09fbba91e9cec391290ee4a2859e7ff41/intl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FChangeLog?ref=8ae884c09fbba91e9cec391290ee4a2859e7ff41", "patch": "@@ -1,3 +1,10 @@\n+2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR jit/100096\n+\t* configure.ac: Add --enable-host-shared support.\n+\t* Makefile.in: Update copyright.  Add @PICFLAG@ to CFLAGS.\n+\t* configure: Regenerated.\n+\n 2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/92008"}]}