{"sha": "a782ee4583f2ba7ed58316876df076acbae61100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4MmVlNDU4M2YyYmE3ZWQ1ODMxNjg3NmRmMDc2YWNiYWU2MTEwMA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2006-01-23T23:44:16Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2006-01-23T23:44:16Z"}, "message": "re PR testsuite/25891 (gomp tests run on non-libgomp (non-thread) ports, failing all)\n\n\tPR testsuite/25891\n\t* lib/target-supports.exp (check_effective_target_fopenmp): New proc.\n\t* gcc.dg/gomp/gomp.exp: Return without testing anything if\n\tcheck_effective_target_fopenmp returns 0.\n\nFrom-SVN: r110148", "tree": {"sha": "08428cb2217ff983df10d217c8dc57f351b86337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08428cb2217ff983df10d217c8dc57f351b86337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a782ee4583f2ba7ed58316876df076acbae61100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a782ee4583f2ba7ed58316876df076acbae61100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a782ee4583f2ba7ed58316876df076acbae61100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a782ee4583f2ba7ed58316876df076acbae61100/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "839009978ae5e2e4f30057e2cdfd925a05c9cc95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839009978ae5e2e4f30057e2cdfd925a05c9cc95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839009978ae5e2e4f30057e2cdfd925a05c9cc95"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "aa0ed47e6352a24b1f35d3ed0c2f253db3bf79fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a782ee4583f2ba7ed58316876df076acbae61100/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a782ee4583f2ba7ed58316876df076acbae61100/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a782ee4583f2ba7ed58316876df076acbae61100", "patch": "@@ -1,3 +1,10 @@\n+2006-01-24  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR testsuite/25891\n+\t* lib/target-supports.exp (check_effective_target_fopenmp): New proc.\n+\t* gcc.dg/gomp/gomp.exp: Return without testing anything if\n+\tcheck_effective_target_fopenmp returns 0.\n+\n 2006-01-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/20548"}, {"sha": "7ce426deb79cf1aa155b8462e1a8305cbbf503fc", "filename": "gcc/testsuite/gcc.dg/gomp/gomp.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a782ee4583f2ba7ed58316876df076acbae61100/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a782ee4583f2ba7ed58316876df076acbae61100/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fgomp.exp?ref=a782ee4583f2ba7ed58316876df076acbae61100", "patch": "@@ -3,6 +3,10 @@\n # Load support procs.\n load_lib gcc-dg.exp\n \n+if ![check_effective_target_fopenmp] {\n+  return\n+}\n+\n # Initialize `dg'.\n dg-init\n "}, {"sha": "851218fb0184eee9da02de251410aef8eb5d23f2", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a782ee4583f2ba7ed58316876df076acbae61100/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a782ee4583f2ba7ed58316876df076acbae61100/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=a782ee4583f2ba7ed58316876df076acbae61100", "patch": "@@ -468,6 +468,41 @@ proc check_effective_target_tls_runtime {} {\n     return $et_tls_runtime_saved\n }\n \n+# Return 1 if compilation with -fopenmp is error-free for trivial\n+# code, 0 otherwise.\n+\n+proc check_effective_target_fopenmp {} {\n+    global et_fopenmp_saved\n+    global et_fopenmp_target_name\n+\n+    if { ![info exists et_fopenmp_target_name] } {\n+\tset et_fopenmp_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_fopenmp_target_name } {\n+\tverbose \"check_effective_target_fopenmp: `$et_fopenmp_target_name'\" 2\n+\tset et_fopenmp_target_name $current_target\n+\tif [info exists et_fopenmp_saved] {\n+\t    verbose \"check_effective_target_fopenmp: removing cached result\" 2\n+\t    unset et_fopenmp_saved\n+\t}\n+    }\n+\n+    if [info exists et_fopenmp_saved] {\n+\tverbose \"check_effective_target_fopenmp: using cached result\" 2\n+    } else {\n+\tverbose \"check_effective_target_fopenmp: compiling source\" 2\n+\n+\tset et_fopenmp_saved [string match \"\" [get_compiler_messages fopenmp object {\n+\t    void foo (void) { }\n+\t} \"-fopenmp\"]]\n+    }\n+    verbose \"check_effective_target_fopenmp: returning $et_fopenmp_saved\" 2\n+    return $et_fopenmp_saved\n+}\n+\n # Return 1 if -fpic and -fPIC are supported, as in no warnings or errors\n # emitted, 0 otherwise.  Whether a shared library can actually be built is\n # out of scope for this test."}]}