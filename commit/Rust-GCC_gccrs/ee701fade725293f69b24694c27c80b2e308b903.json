{"sha": "ee701fade725293f69b24694c27c80b2e308b903", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3MDFmYWRlNzI1MjkzZjY5YjI0Njk0YzI3YzgwYjJlMzA4YjkwMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-23T21:50:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-23T21:50:37Z"}, "message": "whitespace changes\n\nFrom-SVN: r46446", "tree": {"sha": "1b375be2485787138cf695fc1763e955ecad7e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b375be2485787138cf695fc1763e955ecad7e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee701fade725293f69b24694c27c80b2e308b903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee701fade725293f69b24694c27c80b2e308b903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee701fade725293f69b24694c27c80b2e308b903", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee701fade725293f69b24694c27c80b2e308b903/comments", "author": null, "committer": null, "parents": [{"sha": "f295ecef02545a8bce7e09caa6cb15876d1807c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f295ecef02545a8bce7e09caa6cb15876d1807c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f295ecef02545a8bce7e09caa6cb15876d1807c2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "beeac60c12ebacf087dc92996f64e623d3f85310", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee701fade725293f69b24694c27c80b2e308b903/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee701fade725293f69b24694c27c80b2e308b903/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=ee701fade725293f69b24694c27c80b2e308b903", "patch": "@@ -6567,7 +6567,8 @@ emit_input_reload_insns (chain, rl, old, j)\n \t\t      [REGNO (SUBREG_REG (oldequiv))] != 0)))\n \t  || (CONSTANT_P (oldequiv)\n \t      && PREFERRED_RELOAD_CLASS (oldequiv,\n-\t\t\tREGNO_REG_CLASS (REGNO (reloadreg))) == NO_REGS))\n+\t\t\t\t\t (REGNO_REG_CLASS (REGNO (reloadreg)))\n+\t\t\t\t\t == NO_REGS)))\n \treal_oldequiv = rl->in;\n       gen_reload (reloadreg, real_oldequiv, rl->opnum,\n \t\t  rl->when_needed);"}]}