{"sha": "5db698f69596792710fcaed354fec8e1b3cd6937", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiNjk4ZjY5NTk2NzkyNzEwZmNhZWQzNTRmZWM4ZTFiM2NkNjkzNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1999-01-13T16:27:23Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-01-13T16:27:23Z"}, "message": "decl.c (grokdeclarator): Undo 1998-12-14 change.\n\n\t* decl.c (grokdeclarator): Undo 1998-12-14 change.\n\t* tree.c (build_cplus_array_type_1): Likewise.\n\t* pt.c (instantiate_class_template): Remove misleading comment.\n\t(tsubst_aggr_type): Substitute if there are template parameters,\n\tregardless of whether or not they use template arguments.\n\t(unify): Likewise, but for unification.\n\nFrom-SVN: r24656", "tree": {"sha": "ce6703680015d590b1e0ead271681375f49331bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce6703680015d590b1e0ead271681375f49331bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db698f69596792710fcaed354fec8e1b3cd6937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db698f69596792710fcaed354fec8e1b3cd6937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db698f69596792710fcaed354fec8e1b3cd6937", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db698f69596792710fcaed354fec8e1b3cd6937/comments", "author": null, "committer": null, "parents": [{"sha": "39268973a6bade5db1cc14e6034c96f0584292c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39268973a6bade5db1cc14e6034c96f0584292c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39268973a6bade5db1cc14e6034c96f0584292c9"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "36d3a34fc4df3f56ad3d2c432d845f2eb2cba359", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5db698f69596792710fcaed354fec8e1b3cd6937", "patch": "@@ -1,3 +1,12 @@\n+1999-01-13  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* decl.c (grokdeclarator): Undo 1998-12-14 change.\n+\t* tree.c (build_cplus_array_type_1): Likewise.\n+\t* pt.c (instantiate_class_template): Remove misleading comment.\n+\t(tsubst_aggr_type): Substitute if there are template parameters,\n+\tregardless of whether or not they use template arguments.\n+\t(unify): Likewise, but for unification.\n+\n 1999-01-12  Richard Henderson  <rth@cygnus.com>\n \n \t* cp-tree.h (flag_permissive): Declare extern."}, {"sha": "bf887d2918d4d2b77109d8d0cf64a7c07a05cfa6", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5db698f69596792710fcaed354fec8e1b3cd6937", "patch": "@@ -9890,9 +9890,13 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t    && TREE_TYPE (size) == TREE_TYPE (TREE_OPERAND (size, 0)))\n \t\t  size = TREE_OPERAND (size, 0);\n \n-\t\t/* If this involves a template parameter, it'll be\n-\t\t   constant, but we don't know what the value is yet.  */\n-\t\tif (uses_template_parms (size))\n+\t\t/* If this involves a template parameter, it will be a\n+\t\t   constant at instantiation time, but we don't know\n+\t\t   what the value is yet.  Even if no template\n+\t\t   parameters are involved, we may an expression that\n+\t\t   is not a constant; we don't even simplify `1 + 2'\n+\t\t   when processing a template.  */\n+\t\tif (processing_template_decl)\n \t\t  {\n \t\t    /* Resolve a qualified reference to an enumerator or\n \t\t       static const data member of ours.  */"}, {"sha": "fea1c345be84784e37f275cc0d215dc6a5c5f1a9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5db698f69596792710fcaed354fec8e1b3cd6937", "patch": "@@ -4475,9 +4475,7 @@ instantiate_class_template (type)\n          struct S<int> {};\n \n        Now, the `S<U>' in `f<int>' is the specialization, not an\n-       instantiation of the original template.  Mark the type as\n-       complete, in the same way that we do for a definition of a\n-       template class.  */\n+       instantiation of the original template.  */\n     goto end;\n \n   /* Determine what specialization of the original template to\n@@ -5043,7 +5041,7 @@ tsubst_aggr_type (t, args, in_decl, entering_scope)\n       /* else fall through */\n     case ENUMERAL_TYPE:\n     case UNION_TYPE:\n-      if (uses_template_parms (t))\n+      if (TYPE_TEMPLATE_INFO (t))\n \t{\n \t  tree argvec;\n \t  tree context;\n@@ -7671,7 +7669,7 @@ unify (tparms, targs, parm, arg, strict, explicit_mask)\n       if (TREE_CODE (arg) != TREE_CODE (parm))\n \treturn 1;\n   \n-      if (CLASSTYPE_TEMPLATE_INFO (parm) && uses_template_parms (parm))\n+      if (CLASSTYPE_TEMPLATE_INFO (parm))\n \t{\n \t  tree t = NULL_TREE;\n \t  if (strict & UNIFY_ALLOW_DERIVED)"}, {"sha": "fdf46cfdfa51e5e534500fb8334a89e6b862cc97", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5db698f69596792710fcaed354fec8e1b3cd6937", "patch": "@@ -416,8 +416,7 @@ build_cplus_array_type_1 (elt_type, index_type)\n       saveable_obstack = &permanent_obstack;\n     }\n \n-  if (uses_template_parms (elt_type)\n-      || uses_template_parms (index_type))\n+  if (processing_template_decl)\n     {\n       t = make_node (ARRAY_TYPE);\n       TREE_TYPE (t) = elt_type;"}, {"sha": "f5875854562ac85afe7e43b0468b58e34a511014", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash25.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db698f69596792710fcaed354fec8e1b3cd6937/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash25.C?ref=5db698f69596792710fcaed354fec8e1b3cd6937", "patch": "@@ -0,0 +1,7 @@\n+// Build don't link:\n+\n+template <class T>\n+void f()\n+{\n+  int i[1 << 3];\n+}"}]}