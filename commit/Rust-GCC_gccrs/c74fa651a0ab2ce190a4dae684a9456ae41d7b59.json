{"sha": "c74fa651a0ab2ce190a4dae684a9456ae41d7b59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0ZmE2NTFhMGFiMmNlMTkwYTRkYWU2ODRhOTQ1NmFlNDFkN2I1OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-21T03:17:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-21T03:17:44Z"}, "message": "(choose_reload_regs): Handle earlyclobbers\nwhen inheriting from reg_last_reload_reg.\n\nFrom-SVN: r4524", "tree": {"sha": "a05fa6206daf8380dc8a0f688a336cb82c4b7b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a05fa6206daf8380dc8a0f688a336cb82c4b7b11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c74fa651a0ab2ce190a4dae684a9456ae41d7b59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74fa651a0ab2ce190a4dae684a9456ae41d7b59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74fa651a0ab2ce190a4dae684a9456ae41d7b59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74fa651a0ab2ce190a4dae684a9456ae41d7b59/comments", "author": null, "committer": null, "parents": [{"sha": "6de4738425645b8ca1cab80330b580ba38e8a6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de4738425645b8ca1cab80330b580ba38e8a6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6de4738425645b8ca1cab80330b580ba38e8a6a2"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "d5288070ba858d6864fa8d68851db2091955463b", "filename": "gcc/reload1.c", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74fa651a0ab2ce190a4dae684a9456ae41d7b59/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74fa651a0ab2ce190a4dae684a9456ae41d7b59/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=c74fa651a0ab2ce190a4dae684a9456ae41d7b59", "patch": "@@ -4820,18 +4820,40 @@ choose_reload_regs (insn, avoid_return_reg)\n \n \t\t      if (k == nr)\n \t\t\t{\n-\t\t\t  /* Mark the register as in use for this part of\n-\t\t\t     the insn.  */\n-\t\t\t  mark_reload_reg_in_use (spill_regs[i],\n-\t\t\t\t\t\t  reload_opnum[r],\n-\t\t\t\t\t\t  reload_when_needed[r],\n-\t\t\t\t\t\t  reload_mode[r]);\n-\t\t\t  reload_reg_rtx[r] = reg_last_reload_reg[regno];\n-\t\t\t  reload_inherited[r] = 1;\n-\t\t\t  reload_inheritance_insn[r] = reg_reloaded_insn[i];\n-\t\t\t  reload_spill_index[r] = i;\n-\t\t\t  SET_HARD_REG_BIT (reload_reg_used_for_inherit,\n-\t\t\t\t\t    spill_regs[i]);\n+\t\t\t  int i1;\n+\n+\t\t\t  /* We found a register that contains the\n+\t\t\t     value we need.  If this register is the\n+\t\t\t     same as an `earlyclobber' operand of the\n+\t\t\t     current insn, just mark it as a place to\n+\t\t\t     reload from since we can't use it as the\n+\t\t\t     reload register itself.  */\n+\n+\t\t\t  for (i1 = 0; i1 < n_earlyclobbers; i1++)\n+\t\t\t    if (reg_overlap_mentioned_for_reload_p\n+\t\t\t\t(reg_last_reload_reg[regno],\n+\t\t\t\t reload_earlyclobbers[i1]))\n+\t\t\t      break;\n+\n+\t\t\t  if (i1 != n_earlyclobbers)\n+\t\t\t    reload_override_in[r] = reg_last_reload_reg[regno];\n+\t\t\t  else\n+\t\t\t    {\n+\t\t\t      /* We can use this as a reload reg.  */\n+\t\t\t      /* Mark the register as in use for this part of\n+\t\t\t\t the insn.  */\n+\t\t\t      mark_reload_reg_in_use (spill_regs[i],\n+\t\t\t\t\t\t      reload_opnum[r],\n+\t\t\t\t\t\t      reload_when_needed[r],\n+\t\t\t\t\t\t      reload_mode[r]);\n+\t\t\t      reload_reg_rtx[r] = reg_last_reload_reg[regno];\n+\t\t\t      reload_inherited[r] = 1;\n+\t\t\t      reload_inheritance_insn[r]\n+\t\t\t\t= reg_reloaded_insn[i];\n+\t\t\t      reload_spill_index[r] = i;\n+\t\t\t      SET_HARD_REG_BIT (reload_reg_used_for_inherit,\n+\t\t\t\t\t\tspill_regs[i]);\n+\t\t\t    }\n \t\t\t}\n \t\t    }\n \t\t}"}]}