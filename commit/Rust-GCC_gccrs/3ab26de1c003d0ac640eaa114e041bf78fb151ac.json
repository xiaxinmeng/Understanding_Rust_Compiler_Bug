{"sha": "3ab26de1c003d0ac640eaa114e041bf78fb151ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FiMjZkZTFjMDAzZDBhYzY0MGVhYTExNGUwNDFiZjc4ZmIxNTFhYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-01-28T19:13:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-04T09:11:17Z"}, "message": "[Ada] Get rid of Disable_FE_Inline_Always\n\n2020-06-04  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* adabkend.adb, back_end.ads, opt.ads, sem_ch6.adb: Get rid of\n\tDisable_FE_Inline_Always.", "tree": {"sha": "0e32a46586cf6337b2acac7caf95ae91e1102b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e32a46586cf6337b2acac7caf95ae91e1102b10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ab26de1c003d0ac640eaa114e041bf78fb151ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab26de1c003d0ac640eaa114e041bf78fb151ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab26de1c003d0ac640eaa114e041bf78fb151ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab26de1c003d0ac640eaa114e041bf78fb151ac/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "198064c06a1e1e85cf498ad42983c5eab1f27c4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198064c06a1e1e85cf498ad42983c5eab1f27c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198064c06a1e1e85cf498ad42983c5eab1f27c4a"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "6fb4a84b71fb584422e60a96d0f72c7c4faacedf", "filename": "gcc/ada/adabkend.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fadabkend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fadabkend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.adb?ref=3ab26de1c003d0ac640eaa114e041bf78fb151ac", "patch": "@@ -189,7 +189,6 @@ package body Adabkend is\n          elsif Switch_Chars (First .. Last) = \"fno-inline\" then\n             Lib.Store_Compilation_Switch (Switch_Chars);\n             Opt.Disable_FE_Inline := True;\n-            Opt.Disable_FE_Inline_Always := True;\n             return;\n \n          --  Similar processing for -fpreserve-control-flow"}, {"sha": "05f6e5bcc3daccd935f45adff0e9722867cca983", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=3ab26de1c003d0ac640eaa114e041bf78fb151ac", "patch": "@@ -67,7 +67,6 @@ package Back_End is\n    --  default for all of these in Opt is False).\n    --\n    --    Opt.Disable_FE_Inline\n-   --    Opt.Disable_FE_Inline_Always\n    --    Opt.Suppress_Control_Float_Optimizations\n    --    Opt.Generate_SCO\n    --    Opt.Generate_SCO_Instance_Table"}, {"sha": "2bf95e80275605a7b96063700e1fc11ab1f59726", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=3ab26de1c003d0ac640eaa114e041bf78fb151ac", "patch": "@@ -493,11 +493,10 @@ package Opt is\n    --  Set to False with switch -f of gnatclean and gprclean\n \n    Disable_FE_Inline        : Boolean := False;\n-   Disable_FE_Inline_Always : Boolean := False;\n    --  GNAT\n-   --  Request to disable front end inlining from pragma Inline or pragma\n-   --  Inline_Always out of the presence of the -fno-inline back end flag\n-   --  on the command line, regardless of any other switches that are set.\n+   --  Request to disable front end inlining from pragma Inline in the\n+   --  presence of the -fno-inline back end flag on the command line,\n+   --  regardless of any other switches that are set.\n    --  It remains the back end's reponsibility to honor -fno-inline at the\n    --  back end level.\n "}, {"sha": "03211c111f0bca2eb0542b828d79799db7a47cbb", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab26de1c003d0ac640eaa114e041bf78fb151ac/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3ab26de1c003d0ac640eaa114e041bf78fb151ac", "patch": "@@ -4289,8 +4289,7 @@ package body Sem_Ch6 is\n          --  Legacy implementation (relying on front-end inlining)\n \n          if not Back_End_Inlining then\n-            if (Has_Pragma_Inline_Always (Spec_Id)\n-                 and then not Opt.Disable_FE_Inline_Always)\n+            if Has_Pragma_Inline_Always (Spec_Id)\n               or else (Front_End_Inlining\n                         and then not Opt.Disable_FE_Inline)\n             then"}]}