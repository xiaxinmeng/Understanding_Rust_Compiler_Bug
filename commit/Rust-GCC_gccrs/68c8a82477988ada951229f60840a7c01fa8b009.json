{"sha": "68c8a82477988ada951229f60840a7c01fa8b009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjOGE4MjQ3Nzk4OGFkYTk1MTIyOWY2MDg0MGE3YzAxZmE4YjAwOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-31T08:41:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-31T08:41:46Z"}, "message": "re PR bootstrap/52041 (Bootstrap failure at revision 183650 with --enable-checking=release)\n\n\tPR bootstrap/52041\n\tPR bootstrap/52039\n\tPR target/51974\n\t* ree.c (add_removable_extension): Change def_map argument\n\tto unsigned *, store in def_map 1 + offset into *insn_list vector\n\tinstead of pointers into the vector.\n\t(find_removable_extensions): Adjust caller.\n\nFrom-SVN: r183751", "tree": {"sha": "d92e60ba154efe0bc8bd1a0a084c48545d6ebf75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d92e60ba154efe0bc8bd1a0a084c48545d6ebf75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c8a82477988ada951229f60840a7c01fa8b009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c8a82477988ada951229f60840a7c01fa8b009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c8a82477988ada951229f60840a7c01fa8b009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c8a82477988ada951229f60840a7c01fa8b009/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5516da864ae471bb00fd34cede479006bd0ee7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5516da864ae471bb00fd34cede479006bd0ee7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5516da864ae471bb00fd34cede479006bd0ee7b"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "d451dcc193f3bd431d1f58f6db2a9857e0e78357", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c8a82477988ada951229f60840a7c01fa8b009/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c8a82477988ada951229f60840a7c01fa8b009/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68c8a82477988ada951229f60840a7c01fa8b009", "patch": "@@ -1,3 +1,13 @@\n+2012-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/52041\n+\tPR bootstrap/52039\n+\tPR target/51974\n+\t* ree.c (add_removable_extension): Change def_map argument\n+\tto unsigned *, store in def_map 1 + offset into *insn_list vector\n+\tinstead of pointers into the vector.\n+\t(find_removable_extensions): Adjust caller.\n+\n 2012-01-30  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.md: Resolve all AS1 and AS2 macros."}, {"sha": "86fd900213a2ff5542f4994abc2bbbc8c6d5f7b5", "filename": "gcc/ree.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c8a82477988ada951229f60840a7c01fa8b009/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c8a82477988ada951229f60840a7c01fa8b009/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=68c8a82477988ada951229f60840a7c01fa8b009", "patch": "@@ -747,10 +747,11 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n static void\n add_removable_extension (const_rtx expr, rtx insn,\n \t\t\t VEC (ext_cand, heap) **insn_list,\n-\t\t\t ext_cand **def_map)\n+\t\t\t unsigned *def_map)\n {\n   enum rtx_code code;\n   enum machine_mode mode;\n+  unsigned int idx;\n   rtx src, dest;\n \n   /* We are looking for SET (REG N) (ANY_EXTEND (REG N)).  */\n@@ -786,7 +787,8 @@ add_removable_extension (const_rtx expr, rtx insn,\n       /* Second, make sure the reaching definitions don't feed another and\n \t different extension.  FIXME: this obviously can be improved.  */\n       for (def = defs; def; def = def->next)\n-\tif ((cand = def_map[INSN_UID(DF_REF_INSN (def->ref))])\n+\tif ((idx = def_map[INSN_UID(DF_REF_INSN (def->ref))])\n+\t    && (cand = VEC_index (ext_cand, *insn_list, idx - 1))\n \t    && (cand->code != code || cand->mode != mode))\n \t  {\n \t    if (dump_file)\n@@ -805,9 +807,10 @@ add_removable_extension (const_rtx expr, rtx insn,\n       cand->code = code;\n       cand->mode = mode;\n       cand->insn = insn;\n+      idx = VEC_length (ext_cand, *insn_list);\n \n       for (def = defs; def; def = def->next)\n-\tdef_map[INSN_UID(DF_REF_INSN (def->ref))] = cand;\n+\tdef_map[INSN_UID(DF_REF_INSN (def->ref))] = idx;\n     }\n }\n \n@@ -820,7 +823,7 @@ find_removable_extensions (void)\n   VEC (ext_cand, heap) *insn_list = NULL;\n   basic_block bb;\n   rtx insn, set;\n-  ext_cand **def_map = XCNEWVEC (ext_cand *, max_insn_uid);\n+  unsigned *def_map = XCNEWVEC (unsigned, max_insn_uid);\n \n   FOR_EACH_BB (bb)\n     FOR_BB_INSNS (bb, insn)"}]}