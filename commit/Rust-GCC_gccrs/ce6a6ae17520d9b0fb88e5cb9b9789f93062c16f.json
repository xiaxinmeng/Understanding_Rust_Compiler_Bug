{"sha": "ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U2YTZhZTE3NTIwZDliMGZiODhlNWNiOWI5Nzg5ZjkzMDYyYzE2Zg==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2013-06-04T16:44:22Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2013-06-04T16:44:22Z"}, "message": "Fix Cilk Plus tests for simulators.\n\n2013-06-04  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n\n        * c-c++-common/cilk-plus/AN/array_test1.c (main): Replaced argc, argv\n        parameters with void.\n        (main2): Removed argc parameter.\n        * c-c++-common/cilk-plus/AN/array_test2.c (main2): Likewise.\n        (main): Replaced argc, argv parameters with void.\n        * c-c++-common/cilk-plus/AN/array_test_ND.c (main): Likewise.\n        (main2): Removed argc parameter.\n        * c-c++-common/cilk-plus/AN/builtin_fn_custom.c (main): Replaced argc\n        argv parameters with void.  Added __asm volatile to avoid optimization\n        on argc, if necessary.\n        * c-c++-common/cilk-plus/AN/builtin_fn_mutating (main): Likewise.\n        * c-c++-common/cilk-plus/AN/builtin_func_double.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/builtin_func_double2.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/conditional.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/exec-once.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/exec-once2.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/fn_ptr.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/gather-scatter-errors.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/gather_scatter.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/misc.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/parser_errors.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/parser_errors2.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/parser_errors3.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/parser_errors4.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/rank_mismatch2.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/sec_implicit_ex.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/sec_reduce_return.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/test_builtin_return.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/vla.c (main): Likewise.\n        * c-c++-common/cilk-plus/AN/comma-exp.c (main): Replaced argc, argv\n        parameters with void.\n        (main2): Removed argc parameter.\n        * c-c++-common/cilk-plus/AN/if_test.c (main2): Likewise.\n        (main): Replaced argc, argv parameters with void.\n        * c-c++-common/cilk-plus/AN/fp_triplet_values (main2): Replace argc,\n        argv parameters with void.  Also renamed this function as main, and\n        delete the existing main.\n        * c-c++-common/cilk-plus/AN/sec_implicit.c (main2): Likewise.\n        * c-c++-common/cilk-plus/AN/sec_implicit2.c (main2): Likewise.\n        * c-c++-common/cilk-plus/AN/sec_reduce_max_min_ind.c (main2): Likewise.\n\nFrom-SVN: r199661", "tree": {"sha": "786cea1fb8274afd4c0a9995bdfa6579ed9356b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/786cea1fb8274afd4c0a9995bdfa6579ed9356b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/comments", "author": null, "committer": null, "parents": [{"sha": "b7342d25edd340e285e50712017f99414db7c54d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7342d25edd340e285e50712017f99414db7c54d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7342d25edd340e285e50712017f99414db7c54d"}], "stats": {"total": 277, "additions": 122, "deletions": 155}, "files": [{"sha": "d0b4700db3fa08905e34cf3fff9158c567d73b1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,3 +1,46 @@\n+2013-06-04  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\t* c-c++-common/cilk-plus/AN/array_test1.c (main): Replaced argc, argv\n+\tparameters with void.\n+\t(main2): Removed argc parameter.\n+\t* c-c++-common/cilk-plus/AN/array_test2.c (main2): Likewise.\n+\t(main): Replaced argc, argv parameters with void.\n+\t* c-c++-common/cilk-plus/AN/array_test_ND.c (main): Likewise.\n+\t(main2): Removed argc parameter.\n+\t* c-c++-common/cilk-plus/AN/builtin_fn_custom.c (main): Replaced argc\n+\targv parameters with void.  Added __asm volatile to avoid optimization\n+\ton argc, if necessary.\n+\t* c-c++-common/cilk-plus/AN/builtin_fn_mutating (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/builtin_func_double.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/builtin_func_double2.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/conditional.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/exec-once.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/exec-once2.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/fn_ptr.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/gather-scatter-errors.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/gather_scatter.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/misc.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/parser_errors.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/parser_errors2.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/parser_errors3.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/parser_errors4.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/rank_mismatch2.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/sec_implicit_ex.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/sec_reduce_return.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/test_builtin_return.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/vla.c (main): Likewise.\n+\t* c-c++-common/cilk-plus/AN/comma-exp.c (main): Replaced argc, argv\n+\tparameters with void.\n+\t(main2): Removed argc parameter.\n+\t* c-c++-common/cilk-plus/AN/if_test.c (main2): Likewise.\n+\t(main): Replaced argc, argv parameters with void.\n+\t* c-c++-common/cilk-plus/AN/fp_triplet_values (main2): Replace argc,\n+\targv parameters with void.  Also renamed this function as main, and\n+\tdelete the existing main.\n+\t* c-c++-common/cilk-plus/AN/sec_implicit.c (main2): Likewise.\n+\t* c-c++-common/cilk-plus/AN/sec_implicit2.c (main2): Likewise.\n+\t* c-c++-common/cilk-plus/AN/sec_reduce_max_min_ind.c (main2): Likewise.\n+\n 2013-06-04  Ian Bolton  <ian.bolton@arm.com>\n \n \t* gcc.target/aarch64/movi_1.c: New test."}, {"sha": "e4f1ea8a73a1126acff9eef009fb1379b2a75258", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/array_test1.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test1.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -3,23 +3,17 @@\n \n #include <stdlib.h>\n \n-int main2 (int argc, char **argv);\n+int main2 (char **argv);\n \n-int main(int argc, char **argv)\n+int main(void)\n {\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\t     \n-      x = main2 (2, (char **)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-      \n+  int x = 0; \n+  const char *array[] = {\"a.out\", \"5\"};\t     \n+  x = main2 ((char **)array);\n   return x;\n }\n \n-int main2 (int argc, char **argv)\n+int main2 (char **argv)\n {\n   int array[10], ii = 0, x = 2, z= 0 , y = 0 ;\n   for (ii = 0; ii < 10; ii++)"}, {"sha": "60f2de2834a1a0869c8a94fc77e4bdc96c483731", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/array_test2.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test2.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -2,23 +2,17 @@\n /* { dg-options \"-fcilkplus\" } */\n \n #include <stdlib.h>\n-int main2(int argc, char **argv);\n-int main(int argc, char **argv)\n+int main2 (char **argv);\n+int main(void)\n {\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\t     \n-      x = main2 (2, (char **)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-      \n+  int x = 0; \n+  const char *array[] = {\"a.out\", \"5\"};\t     \n+  x = main2 ((char **)array);\n   return x;\n }\n \n \n-int main2(int argc, char **argv)\n+int main2(char **argv)\n {\n   int array[10], array2[10], ii = 0, x = 2, z= 0 , y = 0 ;\n "}, {"sha": "e89bbab268bb2a61a7ac828f6c501a883ebd4dba", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/array_test_ND.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test_ND.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test_ND.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Farray_test_ND.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -2,28 +2,21 @@\n /* { dg-options \"-fcilkplus\" } */\n \n #include <stdlib.h>\n-int main2(int argc, char **argv);\n-int main(int argc, char **argv)\n+int main2(char **argv);\n+int main(void)\n {\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"10\", \"15\"};\t     \n-      x = main2 (3, (char **)array);\n-    }\n-  else if (argc == 3)\n-    x = main2 (argc, argv);\n-  else\n-    return 1;\n-      \n+  int x = 0; \n+  const char *array[] = {\"a.out\", \"10\", \"15\"};\t     \n+  x = main2 ((char **)array);\n   return x;\n }\n \n-int main2(int argc, char **argv)\n+int main2(char **argv)\n {  \n   int array[10][15], ii = 0, jj = 0,x = 0, z= 1 , y = 10 ;\n   int array_2[10][15];\n- \n+  int argc = 3;\n+  __asm volatile (\"\" : \"+r\" (argc));\n \n   for (ii = 0; ii < 10; ii++) {\n     for (jj = 0; jj< 15; jj++) {"}, {"sha": "c5d3d7c75308fe7a7a3cc565be9c46695f2074cf", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/builtin_fn_custom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_custom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_custom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_custom.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -16,7 +16,7 @@ double my_func (double x, double y)\n \n \n /* char __sec_reduce_add (int *); */\n-int main(int argc, char **argv)\n+int main(void)\n {\n   int ii,array[10], y = 0, y_int = 0, array2[10];\n   double x, yy, array3[10], array4[10];"}, {"sha": "663556509207ec2980c42badaa45277386a8158f", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/builtin_fn_mutating.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -13,7 +13,7 @@ void my_func (double *x, double y)\n }\n \n \n-int main(int argc, char **argv)\n+int main(void)\n {\n   int ii,array[10], y = 0, y_int = 0, array2[10];\n   double x = 0.000, yy, array3[10], array4[10];"}, {"sha": "0c05994ee301c75b97954733bec50b241e32962d", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/builtin_func_double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_func_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_func_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_func_double.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -4,7 +4,7 @@\n /* #include <stdlib.h> */\n \n /* char __sec_reduce_add (int *); */\n-int main(int argc, char **argv)\n+int main(void)\n {\n   int ii,array[10], y = 0, y_int = 0, array2[10];\n   double x, yy, array3[10], array4[10];"}, {"sha": "7337a5106d98dcd8cecf995409631378a648e378", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/builtin_func_double2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_func_double2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_func_double2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fbuiltin_func_double2.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -5,8 +5,9 @@\n #include <stdio.h>\n #endif\n \n-int main(int argc, char **argv)\n+int main(void)\n {\n+  int argc = 1;\n   int ii,array[10], y = 0, y_int = 0, array2[10], y_int2=0, y2=0;\n   double x, yy, array3[10], array4[10];\n   int all_zero, all_nonzero, any_zero, any_nonzero;\n@@ -20,6 +21,7 @@ int main(int argc, char **argv)\n \tarray3[ii] = (double) ii + 0.00;\n       array4[ii] = (double) (1.00000/ (double)(ii+1));\n     }\n+  __asm volatile (\"\" : \"+r\" (argc));\n   y_int = __sec_reduce_any_nonzero (array3[:] + array[4]); \n   y_int2 = __sec_reduce_any_zero (array3[:] + array[4]); \n   y = __sec_reduce_all_nonzero ((array3[:] + array4[:]) * (argc-1)); "}, {"sha": "845d916ab96bd444928fbf902a60b8a703afb26f", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/comma_exp.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fcomma_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fcomma_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fcomma_exp.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -3,25 +3,20 @@\n \n #include <stdlib.h>\n \n-int main2 (int argc, char **argv);\n-int main(int argc, char **argv)\n+int main2 (char **argv);\n+int main(void)\n {\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\t     \n-      x = main2 (2, (char **)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-      \n+  int x = 0; \n+  const char *array[] = {\"a.out\", \"5\"};\t     \n+  x = main2 ((char **)array);\n   return x;\n }\n \n-int main2 (int argc, char **argv)\n+int main2 (char **argv)\n {\n+  int argc = 2;\n   int array[10], array2[10], ii = 0, x = 2, z= 0 , y = 0 ;\n-\n+  __asm volatile (\"\" : \"+r\" (argc));\n   for (ii = 0; ii < 10; ii++)\n     array[ii] = 10;\n "}, {"sha": "07c50173bfb7abaf64514d8bb595d61631c45943", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/conditional.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fconditional.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fconditional.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fconditional.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -2,10 +2,12 @@\n /* { dg-options \"-fcilkplus\" } */\n \n #include <stdlib.h>\n-int main(int argc, char **argv)\n+int main(void)\n {\n+  int argc = 1;\n   short array[1000], array2[1000], *array3, cond[1000], ii = 0;\n \n+  __asm volatile (\"\" : \"+r\" (argc));\n   for (ii = 0; ii < 1000; ii++) {\n     cond[ii] = 1;\n     array[ii] = 1000;"}, {"sha": "00b018a2c858cb9d184742d51226d0f2b8ca9647", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/exec-once.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fexec-once.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fexec-once.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fexec-once.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -17,7 +17,7 @@ int func (int *x)\n #endif\n    return *x;\n }\n-int main (int argc, char **argv)\n+int main (void)\n {\n   char array[NUMBER], array2[NUMBER];\n   int ii, d = 2;"}, {"sha": "d9f39dd66a8e7fa816e727c95cbc8da88cd94df7", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/exec-once2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fexec-once2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fexec-once2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fexec-once2.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -35,11 +35,13 @@ int func4(int x)\n \n \n /* This program makes an assumption that argc == 1.  */\n-int main (int argc, char **argv)\n+int main (void)\n {\n-\n+  int argc = 1;\n   int array[2500];\n \n+  /* This is done to make sure the compiler does not optimize out argc.  */\n+  __asm volatile (\"\" : \"+r\" (argc));\n   /* This should set array[0->999] to 5.  */\n   array[argc-1:func2(++argc):1] = 5;\n   array[1000:500:1] = 10; /* set all variables in array[1000-->1499] to 10.  */"}, {"sha": "024a15899945cdb59a2e91fd921825b32a80de08", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/fn_ptr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ffn_ptr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ffn_ptr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ffn_ptr.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -2,12 +2,13 @@\n \n typedef int (*foo)(int);\n \n-int main(int argc, char **argv)\n+int main(void)\n {\n   int array[10], array2[10][10];\n   foo func_array[10];\n   foo func_array2[10][10];\n   foo ***func_array_ptr;\n+  int argc = 5;\n \n   array[:] =  func_array[:](10); /* { dg-error \"array notations cannot be used with function pointer arrays\" } */\n   func_array[0:5](10); /* { dg-error \"array notations cannot be used with function pointer arrays\" } */"}, {"sha": "b2ac7bcc85aa79cf8e0f3bad6bb62c58bce6bb75", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/fp_triplet_values.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ffp_triplet_values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ffp_triplet_values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ffp_triplet_values.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -3,27 +3,12 @@\n \n float q;\n \n-int main2 (int argc, char **argv);\n-int main (int argc, char **argv)\n-{\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\n-      x = main2 (2, (char **)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-\n-  return x;\n-}\n-\n void func (int *x)\n {\n   *x = 5;\n }\n \n-int main2 (int argc, char **argv)\n+int main (void)\n {\n   int array[10], array2[10];\n   array2[:] = array[1.5:2]; /* { dg-error \"start-index of array notation triplet is not an integer\" } */"}, {"sha": "f425fbec0f5daa517e749f23f933c0382ebc6136", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/gather-scatter-errors.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fgather-scatter-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fgather-scatter-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fgather-scatter-errors.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,10 +1,10 @@\n /* { dg-options \"-fcilkplus\" } */\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n   extern int func (int);\n   int array[10][10], array2[10];\n-\n+  int argc = 1;\n   array2[array[:][:]] = 5; /* { dg-error \"rank of the array's index is greater than 1\" } */\n \n   array2[array[:][:]] = 5; /* { dg-error \"rank of the array's index is greater than 1\" } */"}, {"sha": "b11a40ed3258481c7f7f0331508795508b098bf5", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/gather_scatter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fgather_scatter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fgather_scatter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fgather_scatter.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -5,7 +5,7 @@\n #include <stdio.h>\n #endif\n \n-int main(int argc, char **argv)\n+int main(void)\n {\n   int array[10][10], array2[10], array3[10], x = 0, y;\n   int x_correct, y_correct, ii, jj = 0;"}, {"sha": "5544d4550aa8f4a08fc9d79003fec18a8e13fdc8", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/if_test.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fif_test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fif_test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fif_test.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -5,31 +5,25 @@\n #include <stdio.h>\n #endif\n #include <stdlib.h>\n-int main2 (int argc, char **argv);\n+int main2 (char **argv);\n int main(int argc, char **argv)\n {\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"10\", \"15\"};\t     \n-      x = main2 (3, (char **) array);\n-    }\n-  else if (argc == 3)\n-    x = main2 (argc, argv);\n-  else\n-    return 1;\n- \n+  int x = 0; \n+  const char *array[] = {\"a.out\", \"10\", \"15\"};\t     \n+  x = main2 ((char **) array);\n   return x;\n }\n \n \n-int main2 (int argc, char **argv)\n+int main2 (char **argv)\n {\n   int x = 3, y, z, array[10], array2[10], TwodArray[10][10], jj,kk,ll ;\n   int array2_check[10], array2d_check[10][10], array2d[10][10];\n   int FourDArray[10][10][10][10], array4[10][10][10][10];\n   int array4_check[10][10][10][10];\n-  int ii = 0; \n+  int ii = 0, argc = 3; \n+    \n+  __asm volatile (\"\" : \"+r\" (argc));\n \n   for (ii = 0; ii < 10; ii++)\n     {"}, {"sha": "35eb11537d1f38e72a1f9a29033ef037db008d22", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fmisc.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n   int array[10], array2[10][10];\n   int x, ii, jj ;"}, {"sha": "a0a3742f5df1d789f827bbc27ca53d0a6e626b09", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/parser_errors.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n   int array[10][10], array2[10];\n   "}, {"sha": "2e86b4f92daaddadc3e49d3ef1d62711e2ac9194", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/parser_errors2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors2.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n   int array[10][10], array2[10];\n   "}, {"sha": "34dfa16dd8182b66e04979e2a6077da11901ffa8", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/parser_errors3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors3.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n   int array[10][10], array2[10];\n   "}, {"sha": "eba28a81ce3840f690fff7fdf9aa56d5cbabe6a1", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/parser_errors4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fparser_errors4.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n   int array[10][10], array2[10];\n   "}, {"sha": "4a4882dbae6af70fcf9c11b670189d5994cb507d", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/rank_mismatch2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Frank_mismatch2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Frank_mismatch2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Frank_mismatch2.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -7,10 +7,10 @@ int function_call (int x)\n   return x;\n }\n \n-int main(int argc, char **argv)\n+int main (void)\n {\n   int array[100], array2[100][100];\n-\n+  int argc = 4;\n   array[:] = array[:] + array2[:][:]; /* { dg-error \"rank mismatch between\" } */\n \n   if (array[:] + array2[:][:]) /* { dg-error \"rank mismatch between\" } */"}, {"sha": "bacbf3505667f43abc7a5a7db65f70504a97cad5", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/sec_implicit.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,22 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main2 (int argc, char **argv);\n-int main (int argc, char **argv)\n-{\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\n-      x = main2 (2, (char **)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-\n-  return x;\n-}\n-\n-int main2 (int argc, char **argv)\n+int main (void)\n {\n   int array[10][10], array2[10];\n "}, {"sha": "0aef0c29aca5699f4b44f5fda850ac8afcc12ab3", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/sec_implicit2.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit2.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,25 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main2 (int argc, char **argv);\n-int main (int argc, char **argv)\n-{\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\n-      x = main2 (2, (char**)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-\n-  return x;\n-}\n-\n-int main2 (int argc, char **argv)\n+int main (void)\n {\n+  int argc = 2;\n   int array[10][10], array2[10];\n-\n+  __asm volatile (\"\" : \"+r\" (argc));\n   array[:][:] = __sec_implicit_index(argc) + array[:][:]; /* { dg-error \"__sec_implicit_index parameter\" } */\n   return 0;\n }"}, {"sha": "c22b818434a2a9c3dc1de59793a26cc4ed7793e4", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/sec_implicit_ex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit_ex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit_ex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_implicit_ex.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -5,7 +5,7 @@ void abort (void);\n void exit  (int);\n \n \n-int main(int argc, char **argv)\n+int main(void)\n {\n   int jj, kk, array_3C[10][10][10];\n   int ii,array[10], y = 0, y_int = 0, array2[10], array_3[10][10][10];"}, {"sha": "9652e1594b400a4be9ed7b6d591fc92773052478", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/sec_reduce_max_min_ind.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_reduce_max_min_ind.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_reduce_max_min_ind.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_reduce_max_min_ind.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -1,22 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int main2 (int argc, char **argv);\n-int main (int argc, char **argv)\n-{\n-  int x = 0;\n-  if (argc == 1)\n-    {\n-      const char *array[] = {\"a.out\", \"5\"};\n-      x = main2 (2, (char **)array);\n-    }\n-  else\n-    x = main2 (argc, argv);\n-\n-  return x;\n-}\n-\n-int main2 (int argc, char **argv)\n+int main (void)\n {\n   int array[10][10], array2[10];\n   int x, y;"}, {"sha": "034017146f3b7479fe199a2257d0efd7b3918150", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/sec_reduce_return.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_reduce_return.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_reduce_return.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fsec_reduce_return.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -11,10 +11,12 @@ int mult_all (int *my_array, int size)\n   return __sec_reduce_mul (my_array[0:size]);\n }\n \n-int main (int argc, char **argv)\n+int main (void)\n {\n+  int argc = 1;\n   int array[10000];\n-\n+  \n+  __asm volatile (\"\" : \"+r\" (argc));\n   array[:] = argc; /* All elements should be one.  */\n \n   if (add_all (array, 10000) != 10000)"}, {"sha": "b9f9f8d65073bd9ddb2807b59ff12cfc26f66d54", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/test_builtin_return.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ftest_builtin_return.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ftest_builtin_return.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Ftest_builtin_return.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -28,11 +28,13 @@ int func4 (int *a1, int *a2)\n {\n   return a1[NUMBER-1] * (__sec_reduce_add (a1[0:NUMBER] * a2[0:NUMBER]) + a2[0] + a2[1] + a2[3])/a1[NUMBER-2];\n }\n-int main(int argc, char **argv)\n+int main(void)\n {\n   int array[NUMBER], array2[NUMBER];\n   int return_value = 0;\n   int ii = 0;\n+  int argc = 1;\n+  __asm volatile (\"\" : \"+r\" (argc));\n   for (ii = 0; ii < NUMBER; ii++)\n     {\n       array[ii] = argc; /* This should calculate to 1.  */"}, {"sha": "843745e384f47f810789a971ee5c822e862d7ea4", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/vla.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fvla.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fvla.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fvla.c?ref=ce6a6ae17520d9b0fb88e5cb9b9789f93062c16f", "patch": "@@ -5,8 +5,10 @@ int func (int x)\n {\n   return x++;\n }\n-int main(int argc, char **argv)\n+int main(void)\n {\n+  int argc = 1;\n+  __asm volatile (\"\" : \"+r\" (argc));\n   int array[argc];\n \n   array[:] = 5; /* { dg-error \"start-index and length fields necessary for using array notations in variable-length arrays.\" }  */"}]}