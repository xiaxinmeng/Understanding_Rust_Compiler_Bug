{"sha": "4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1ZjY2YzMwMTFmYTNiZDMxMTljMjU0ZmMzNWVkMzUzZDdiZGNkMA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@sendai.cygnus.com", "date": "1998-12-10T20:28:00Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1998-12-10T20:28:00Z"}, "message": "decl.c (long_zero_node, [...]): New global variables, initialized.\n\nThu Dec 10 20:00:54 1998  Alexandre Petit-Bianco  <apbianco@sendai.cygnus.com>\n\t* decl.c (long_zero_node, float_zero_node, double_zero_node): New\n \tglobal variables, initialized.\n\t* java-tree.h (long_zero_node, float_zero_node, double_zero_node):\n \tDeclared new global variables.\n\t* lex.c (java_lex): Return long_zero_node, float_zero_node,\n \tdouble_zero_node, integer_zero_node upon direct matching.\n\t* parse.y (purify_type_name): Added function prototype.\n\t(duplicate_declaration_error_p): Consider new_type as potentially\n \tbeing a incomplete type. Use purify_type_name on type string.\n\t(method_header): saved_type: unused variable removed. Don't figure\n \treturn type if method name is invalid.\n\t(java_complete_tree): Set CAN_COMPLETE_NORMALLY after `node' was\n \tprocessed by patch_unaryop.\n\t(patch_unaryop): Fixed typo in comment. Re-convert pre/post\n \tincrement/decrement node into its original type after binary\n \tnumeric promotion on its operands.\nFixes a bug occuring when an error occurs in constructor\ndeclaration. Fixes a bug on ++/-- operators on non integer operands.\n\nFrom-SVN: r24255", "tree": {"sha": "1772e0af80d015dfe5d83b4dfff3f622c83554e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1772e0af80d015dfe5d83b4dfff3f622c83554e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/comments", "author": null, "committer": null, "parents": [{"sha": "737e7965de64b49022c536aaa33a4e0d8de29582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737e7965de64b49022c536aaa33a4e0d8de29582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/737e7965de64b49022c536aaa33a4e0d8de29582"}], "stats": {"total": 985, "additions": 519, "deletions": 466}, "files": [{"sha": "b005ce4140a217cd7db92240305244f5e6453ffd", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "patch": "@@ -1,3 +1,22 @@\n+Thu Dec 10 20:00:54 1998  Alexandre Petit-Bianco  <apbianco@sendai.cygnus.com>\n+\n+\t* decl.c (long_zero_node, float_zero_node, double_zero_node): New\n+ \tglobal variables, initialized.\n+\t* java-tree.h (long_zero_node, float_zero_node, double_zero_node):\n+ \tDeclared new global variables.\n+\t* lex.c (java_lex): Return long_zero_node, float_zero_node,\n+ \tdouble_zero_node, integer_zero_node upon direct matching.\n+\t* parse.y (purify_type_name): Added function prototype.\n+\t(duplicate_declaration_error_p): Consider new_type as potentially\n+ \tbeing a incomplete type. Use purify_type_name on type string.\n+\t(method_header): saved_type: unused variable removed. Don't figure\n+ \treturn type if method name is invalid.\n+\t(java_complete_tree): Set CAN_COMPLETE_NORMALLY after `node' was\n+ \tprocessed by patch_unaryop.\n+\t(patch_unaryop): Fixed typo in comment. Re-convert pre/post\n+ \tincrement/decrement node into its original type after binary\n+ \tnumeric promotion on its operands.\n+\n Thu Dec 10 11:02:49 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (array_initializer:): Array init operand is NULL_TREE"}, {"sha": "e0fbcfbcfca1b9aa51274df8b89fb17d1892098d", "filename": "gcc/java/decl.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "patch": "@@ -316,9 +316,14 @@ tree class_dtable_decl;\n tree error_mark_node;\n \n /* Two expressions that are constants with value zero.\n-   The first is of type `int', the second of type `void *'.  */\n+   The first is of type `int', the second of type `void *'.\n+   Other of type `long', `float' and `double' follow.  */\n tree integer_zero_node;\n tree null_pointer_node;\n+tree long_zero_node;\n+tree float_zero_node;\n+tree double_zero_node;\n+\n tree empty_stmt_node;\n \n /* Nodes for boolean constants TRUE and FALSE. */\n@@ -467,6 +472,9 @@ init_decl_processing ()\n   integer_four_node = build_int_2 (4, 0);\n   integer_negative_one_node = build_int_2 (-1, 0);\n \n+  long_zero_node = build_int_2 (0, 0);\n+  TREE_TYPE (long_zero_node) = long_type_node;\n+\n   void_type_node = make_node (VOID_TYPE);\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"void\"), void_type_node));\n   layout_type (void_type_node);\t/* Uses size_zero_node */\n@@ -524,6 +532,9 @@ init_decl_processing ()\n                         double_type_node));\n   layout_type (double_type_node);\n \n+  float_zero_node = build_real (float_type_node, dconst0);\n+  double_zero_node = build_real (double_type_node, dconst0);\n+\n   unqualified_object_id_node = get_identifier (\"Object\");\n   object_type_node = lookup_class (get_identifier (\"java.lang.Object\"));\n   object_ptr_type_node = promote_type (object_type_node);"}, {"sha": "a81295eb682fe3ada9736986ec474862e7a59fa4", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "patch": "@@ -227,6 +227,9 @@ extern tree return_address_type_node;\n extern tree boolean_true_node, boolean_false_node;\n \n /* Integer constants not declared in tree.h. */\n+extern tree long_zero_node;\n+extern tree float_zero_node;\n+extern tree double_zero_node;\n extern tree integer_negative_one_node;\n extern tree integer_two_node;\n extern tree integer_four_node;"}, {"sha": "d60e97db91eed985fedd8632d7446d836e725ea2", "filename": "gcc/java/lex.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "patch": "@@ -623,19 +623,17 @@ java_lex (java_lval)\n               switch (c)\n \t\t{\t\t\n \t\tcase 'L': case 'l':\n-\t\t  SET_LVAL_NODE_TYPE (integer_zero_node, long_type_node);\n+\t\t  SET_LVAL_NODE (long_zero_node);\n \t\t  return (INT_LIT_TK);\n \t\tcase 'f': case 'F':\n-\t\t  SET_LVAL_NODE_TYPE (build_real (float_type_node, dconst0),\n-\t\t\t\t\tfloat_type_node);\n+\t\t  SET_LVAL_NODE (float_zero_node);\n \t\t  return (FP_LIT_TK);\n \t\tcase 'd': case 'D':\n-\t\t  SET_LVAL_NODE_TYPE (build_real (double_type_node, dconst0),\n-\t\t\t\t\tdouble_type_node);\n+\t\t  SET_LVAL_NODE (double_zero_node);\n \t\t  return (FP_LIT_TK);\n \t\tdefault:\n \t\t  java_unget_unicode ();\n-\t\t  SET_LVAL_NODE_TYPE (integer_zero_node, int_type_node);\n+\t\t  SET_LVAL_NODE (integer_zero_node);\n \t\t  return (INT_LIT_TK);\n \t\t}\n \t    }"}, {"sha": "06c4e0efd35d685f8f4fa48b9e6e48a041ae1ba7", "filename": "gcc/java/parse.c", "status": "modified", "additions": 451, "deletions": 440, "changes": 891, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "patch": "@@ -313,6 +313,7 @@ static tree patch_new_array_init PROTO ((tree, tree));\n static tree patch_array_constructor PROTO ((tree, tree));\n static tree maybe_build_array_element_wfl PROTO ((tree));\n static int array_constructor_check_entry PROTO ((tree, tree));\n+static char *purify_type_name PROTO ((char *));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -358,7 +359,7 @@ static tree wfl_append = NULL_TREE;\n /* The \"toString\" identifier used for String `+' operator. */\n static tree wfl_to_string = NULL_TREE;\n \n-#line 286 \"./parse.y\"\n+#line 287 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -662,56 +663,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   436,   442,   444,   445,   446,   447,   448,   452,   454,   457,\n-   459,   460,   463,   465,   468,   472,   476,   480,   486,   488,\n-   490,   492,   497,   499,   502,   506,   511,   516,   518,   519,\n-   520,   521,   522,   523,   524,   527,   532,   538,   540,   543,\n-   546,   548,   552,   554,   557,   584,   586,   590,   603,   605,\n-   609,   616,   617,   619,   629,   634,   649,   653,   656,   659,\n-   662,   664,   666,   668,   672,   674,   676,   678,   682,   684,\n-   686,   693,   699,   704,   708,   711,   715,   717,   720,   722,\n-   723,   724,   728,   730,   731,   733,   738,   741,   751,   754,\n-   756,   760,   763,   770,   776,   784,   786,   788,   790,   792,\n-   796,   798,   802,   809,   810,   814,   817,   819,   821,   823,\n-   825,   827,   829,   831,   838,   841,   843,   852,   854,   858,\n-   863,   868,   872,   877,   879,   881,   888,   890,   892,   896,\n-   899,   901,   905,   907,   908,   913,   918,   924,   932,   939,\n-   942,   945,   949,   952,   956,   965,   967,   969,   974,   981,\n-   989,   991,   995,  1003,  1014,  1018,  1021,  1024,  1027,  1030,\n-  1033,  1036,  1039,  1041,  1045,  1051,  1056,  1058,  1062,  1065,\n-  1069,  1071,  1074,  1076,  1077,  1079,  1083,  1087,  1093,  1098,\n-  1101,  1103,  1107,  1113,  1117,  1122,  1125,  1129,  1134,  1142,\n-  1144,  1147,  1149,  1151,  1155,  1159,  1162,  1166,  1168,  1169,\n-  1170,  1171,  1172,  1182,  1184,  1185,  1186,  1187,  1190,  1192,\n-  1193,  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1204,\n-  1209,  1220,  1227,  1231,  1242,  1252,  1258,  1264,  1270,  1272,\n-  1278,  1280,  1286,  1288,  1290,  1292,  1294,  1298,  1300,  1301,\n-  1302,  1303,  1304,  1305,  1308,  1311,  1313,  1315,  1319,  1324,\n-  1329,  1335,  1345,  1351,  1353,  1355,  1362,  1365,  1367,  1369,\n-  1373,  1375,  1378,  1382,  1384,  1387,  1394,  1400,  1402,  1404,\n-  1408,  1416,  1419,  1421,  1423,  1427,  1432,  1441,  1446,  1449,\n-  1456,  1458,  1460,  1464,  1467,  1476,  1483,  1485,  1489,  1502,\n-  1504,  1510,  1516,  1520,  1522,  1526,  1529,  1531,  1535,  1538,\n-  1540,  1542,  1546,  1549,  1551,  1553,  1557,  1560,  1562,  1564,\n-  1568,  1574,  1576,  1580,  1587,  1589,  1591,  1593,  1597,  1605,\n-  1608,  1610,  1612,  1616,  1618,  1625,  1633,  1650,  1652,  1654,\n-  1658,  1664,  1669,  1671,  1674,  1676,  1678,  1680,  1681,  1682,\n-  1683,  1687,  1689,  1691,  1696,  1698,  1700,  1702,  1704,  1708,\n-  1711,  1716,  1718,  1723,  1724,  1725,  1726,  1727,  1729,  1731,\n-  1733,  1735,  1737,  1741,  1743,  1746,  1752,  1757,  1761,  1764,\n-  1766,  1768,  1772,  1774,  1776,  1778,  1782,  1785,  1789,  1795,\n-  1797,  1805,  1808,  1810,  1814,  1819,  1827,  1831,  1834,  1836,\n-  1847,  1858,  1863,  1872,  1874,  1878,  1881,  1883,  1888,  1893,\n-  1898,  1905,  1907,  1908,  1909,  1912,  1917,  1922,  1924,  1925,\n-  1927,  1929,  1930,  1932,  1936,  1939,  1943,  1946,  1950,  1952,\n-  1954,  1956,  1957,  1959,  1963,  1971,  1973,  1975,  1987,  1989,\n-  1995,  1997,  1999,  2003,  2005,  2010,  2015,  2020,  2022,  2024,\n-  2028,  2030,  2035,  2040,  2042,  2046,  2048,  2053,  2058,  2063,\n-  2065,  2067,  2071,  2073,  2078,  2083,  2088,  2093,  2095,  2097,\n-  2099,  2101,  2103,  2107,  2109,  2114,  2119,  2121,  2125,  2127,\n-  2132,  2136,  2138,  2143,  2147,  2149,  2154,  2158,  2160,  2165,\n-  2169,  2171,  2176,  2180,  2182,  2187,  2193,  2195,  2199,  2201,\n-  2204,  2207,  2215,  2217,  2218,  2221,  2223,  2226,  2230\n+   437,   443,   445,   446,   447,   448,   449,   453,   455,   458,\n+   460,   461,   464,   466,   469,   473,   477,   481,   487,   489,\n+   491,   493,   498,   500,   503,   507,   512,   517,   519,   520,\n+   521,   522,   523,   524,   525,   528,   533,   539,   541,   544,\n+   547,   549,   553,   555,   558,   585,   587,   591,   604,   606,\n+   610,   617,   618,   620,   630,   635,   650,   654,   657,   660,\n+   663,   665,   667,   669,   673,   675,   677,   679,   683,   685,\n+   687,   694,   700,   705,   709,   712,   716,   718,   721,   723,\n+   724,   725,   729,   731,   732,   734,   739,   742,   752,   755,\n+   757,   761,   764,   771,   777,   785,   787,   789,   791,   793,\n+   797,   799,   803,   810,   811,   815,   818,   820,   822,   824,\n+   826,   828,   830,   832,   839,   842,   844,   853,   855,   859,\n+   864,   869,   873,   878,   880,   882,   889,   891,   893,   897,\n+   900,   902,   906,   908,   909,   914,   919,   925,   933,   940,\n+   943,   946,   950,   953,   957,   966,   968,   970,   975,   982,\n+   990,   992,   996,  1004,  1015,  1019,  1022,  1025,  1028,  1031,\n+  1034,  1037,  1040,  1042,  1046,  1052,  1057,  1059,  1063,  1066,\n+  1070,  1072,  1075,  1077,  1078,  1080,  1084,  1088,  1094,  1099,\n+  1102,  1104,  1108,  1114,  1118,  1123,  1126,  1130,  1135,  1143,\n+  1145,  1148,  1150,  1152,  1156,  1160,  1163,  1167,  1169,  1170,\n+  1171,  1172,  1173,  1183,  1185,  1186,  1187,  1188,  1191,  1193,\n+  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1205,\n+  1210,  1221,  1228,  1232,  1243,  1253,  1259,  1265,  1271,  1273,\n+  1279,  1281,  1287,  1289,  1291,  1293,  1295,  1299,  1301,  1302,\n+  1303,  1304,  1305,  1306,  1309,  1312,  1314,  1316,  1320,  1325,\n+  1330,  1336,  1346,  1352,  1354,  1356,  1363,  1366,  1368,  1370,\n+  1374,  1376,  1379,  1383,  1385,  1388,  1395,  1401,  1403,  1405,\n+  1409,  1417,  1420,  1422,  1424,  1428,  1433,  1442,  1447,  1450,\n+  1457,  1459,  1461,  1465,  1468,  1477,  1484,  1486,  1490,  1503,\n+  1505,  1511,  1517,  1521,  1523,  1527,  1530,  1532,  1536,  1539,\n+  1541,  1543,  1547,  1550,  1552,  1554,  1558,  1561,  1563,  1565,\n+  1569,  1575,  1577,  1581,  1588,  1590,  1592,  1594,  1598,  1606,\n+  1609,  1611,  1613,  1617,  1619,  1626,  1634,  1651,  1653,  1655,\n+  1659,  1665,  1670,  1672,  1675,  1677,  1679,  1681,  1682,  1683,\n+  1684,  1688,  1690,  1692,  1697,  1699,  1701,  1703,  1705,  1709,\n+  1712,  1717,  1719,  1724,  1725,  1726,  1727,  1728,  1730,  1732,\n+  1734,  1736,  1738,  1742,  1744,  1747,  1753,  1758,  1762,  1765,\n+  1767,  1769,  1773,  1775,  1777,  1779,  1783,  1786,  1790,  1796,\n+  1798,  1806,  1809,  1811,  1815,  1820,  1828,  1832,  1835,  1837,\n+  1848,  1859,  1864,  1873,  1875,  1879,  1882,  1884,  1889,  1894,\n+  1899,  1906,  1908,  1909,  1910,  1913,  1918,  1923,  1925,  1926,\n+  1928,  1930,  1931,  1933,  1937,  1940,  1944,  1947,  1951,  1953,\n+  1955,  1957,  1958,  1960,  1964,  1972,  1974,  1976,  1988,  1990,\n+  1996,  1998,  2000,  2004,  2006,  2011,  2016,  2021,  2023,  2025,\n+  2029,  2031,  2036,  2041,  2043,  2047,  2049,  2054,  2059,  2064,\n+  2066,  2068,  2072,  2074,  2079,  2084,  2089,  2094,  2096,  2098,\n+  2100,  2102,  2104,  2108,  2110,  2115,  2120,  2122,  2126,  2128,\n+  2133,  2137,  2139,  2144,  2148,  2150,  2155,  2159,  2161,  2166,\n+  2170,  2172,  2177,  2181,  2183,  2188,  2194,  2196,  2200,  2202,\n+  2205,  2208,  2216,  2218,  2219,  2222,  2224,  2227,  2231\n };\n #endif\n \n@@ -2745,66 +2746,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 438 \"./parse.y\"\n+#line 439 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 482 \"./parse.y\"\n+#line 483 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 487 \"./parse.y\"\n+#line 488 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 489 \"./parse.y\"\n+#line 490 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 491 \"./parse.y\"\n+#line 492 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 493 \"./parse.y\"\n+#line 494 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 508 \"./parse.y\"\n+#line 509 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 517 \"./parse.y\"\n+#line 518 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 529 \"./parse.y\"\n+#line 530 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 533 \"./parse.y\"\n+#line 534 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 545 \"./parse.y\"\n+#line 546 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 547 \"./parse.y\"\n+#line 548 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 549 \"./parse.y\"\n+#line 550 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 559 \"./parse.y\"\n+#line 560 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2832,15 +2833,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 585 \"./parse.y\"\n+#line 586 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 587 \"./parse.y\"\n+#line 588 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 592 \"./parse.y\"\n+#line 593 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  tree node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n@@ -2854,40 +2855,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 604 \"./parse.y\"\n+#line 605 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 606 \"./parse.y\"\n+#line 607 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 611 \"./parse.y\"\n+#line 612 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  maybe_generate_finit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 618 \"./parse.y\"\n+#line 619 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 620 \"./parse.y\"\n+#line 621 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 631 \"./parse.y\"\n+#line 632 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 635 \"./parse.y\"\n+#line 636 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2901,116 +2902,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 651 \"./parse.y\"\n+#line 652 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 653 \"./parse.y\"\n+#line 654 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 657 \"./parse.y\"\n+#line 658 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 659 \"./parse.y\"\n+#line 660 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 663 \"./parse.y\"\n+#line 664 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 665 \"./parse.y\"\n+#line 666 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 667 \"./parse.y\"\n+#line 668 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 669 \"./parse.y\"\n+#line 670 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 673 \"./parse.y\"\n+#line 674 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 675 \"./parse.y\"\n+#line 676 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 677 \"./parse.y\"\n+#line 678 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 679 \"./parse.y\"\n+#line 680 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 683 \"./parse.y\"\n+#line 684 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 685 \"./parse.y\"\n+#line 686 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 687 \"./parse.y\"\n+#line 688 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 695 \"./parse.y\"\n+#line 696 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 700 \"./parse.y\"\n+#line 701 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 705 \"./parse.y\"\n+#line 706 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 710 \"./parse.y\"\n+#line 711 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 712 \"./parse.y\"\n+#line 713 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 725 \"./parse.y\"\n+#line 726 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 732 \"./parse.y\"\n+#line 733 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 734 \"./parse.y\"\n+#line 735 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 740 \"./parse.y\"\n+#line 741 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 742 \"./parse.y\"\n+#line 743 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3020,19 +3021,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 755 \"./parse.y\"\n+#line 756 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 757 \"./parse.y\"\n+#line 758 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 762 \"./parse.y\"\n+#line 763 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 764 \"./parse.y\"\n+#line 765 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3041,101 +3042,101 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 771 \"./parse.y\"\n+#line 772 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 777 \"./parse.y\"\n+#line 778 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 787 \"./parse.y\"\n+#line 788 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 789 \"./parse.y\"\n+#line 790 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 791 \"./parse.y\"\n+#line 792 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 793 \"./parse.y\"\n+#line 794 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 103:\n-#line 804 \"./parse.y\"\n+#line 805 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 809 \"./parse.y\"\n+#line 810 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 105:\n-#line 811 \"./parse.y\"\n+#line 812 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 816 \"./parse.y\"\n+#line 817 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 818 \"./parse.y\"\n+#line 819 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 820 \"./parse.y\"\n+#line 821 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 822 \"./parse.y\"\n+#line 823 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 824 \"./parse.y\"\n+#line 825 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 826 \"./parse.y\"\n+#line 827 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 828 \"./parse.y\"\n+#line 829 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 830 \"./parse.y\"\n+#line 831 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 832 \"./parse.y\"\n+#line 833 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 840 \"./parse.y\"\n+#line 841 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 842 \"./parse.y\"\n+#line 843 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 844 \"./parse.y\"\n+#line 845 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3146,169 +3147,169 @@ case 117:\n \t\t;\n     break;}\n case 118:\n-#line 853 \"./parse.y\"\n+#line 854 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 855 \"./parse.y\"\n+#line 856 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 860 \"./parse.y\"\n+#line 861 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 864 \"./parse.y\"\n+#line 865 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 869 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 874 \"./parse.y\"\n+#line 875 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 878 \"./parse.y\"\n+#line 879 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 880 \"./parse.y\"\n+#line 881 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 882 \"./parse.y\"\n+#line 883 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 889 \"./parse.y\"\n+#line 890 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 891 \"./parse.y\"\n+#line 892 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 893 \"./parse.y\"\n+#line 894 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 898 \"./parse.y\"\n+#line 899 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 900 \"./parse.y\"\n+#line 901 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 902 \"./parse.y\"\n+#line 903 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 909 \"./parse.y\"\n+#line 910 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 915 \"./parse.y\"\n+#line 916 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 919 \"./parse.y\"\n+#line 920 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 926 \"./parse.y\"\n+#line 927 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 934 \"./parse.y\"\n+#line 935 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 939 \"./parse.y\"\n+#line 940 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 944 \"./parse.y\"\n+#line 945 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 946 \"./parse.y\"\n+#line 947 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 951 \"./parse.y\"\n+#line 952 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 953 \"./parse.y\"\n+#line 954 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 961 \"./parse.y\"\n+#line 962 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 966 \"./parse.y\"\n+#line 967 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 968 \"./parse.y\"\n+#line 969 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 970 \"./parse.y\"\n+#line 971 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 976 \"./parse.y\"\n+#line 977 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 982 \"./parse.y\"\n+#line 983 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 990 \"./parse.y\"\n+#line 991 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 992 \"./parse.y\"\n+#line 993 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 997 \"./parse.y\"\n+#line 998 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3317,7 +3318,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 1004 \"./parse.y\"\n+#line 1005 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3326,168 +3327,168 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1016 \"./parse.y\"\n+#line 1017 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1018 \"./parse.y\"\n+#line 1019 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1022 \"./parse.y\"\n+#line 1023 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1024 \"./parse.y\"\n+#line 1025 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1028 \"./parse.y\"\n+#line 1029 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1030 \"./parse.y\"\n+#line 1031 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1034 \"./parse.y\"\n+#line 1035 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1036 \"./parse.y\"\n+#line 1037 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1040 \"./parse.y\"\n+#line 1041 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1042 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1047 \"./parse.y\"\n+#line 1048 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1052 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1057 \"./parse.y\"\n+#line 1058 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1059 \"./parse.y\"\n+#line 1060 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1064 \"./parse.y\"\n+#line 1065 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1066 \"./parse.y\"\n+#line 1067 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1078 \"./parse.y\"\n+#line 1079 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1080 \"./parse.y\"\n+#line 1081 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1089 \"./parse.y\"\n+#line 1090 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1094 \"./parse.y\"\n+#line 1095 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1100 \"./parse.y\"\n+#line 1101 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 181:\n-#line 1102 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 182:\n-#line 1104 \"./parse.y\"\n+#line 1105 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 183:\n-#line 1109 \"./parse.y\"\n+#line 1110 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 184:\n-#line 1114 \"./parse.y\"\n+#line 1115 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 185:\n-#line 1118 \"./parse.y\"\n+#line 1119 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 186:\n-#line 1124 \"./parse.y\"\n+#line 1125 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 187:\n-#line 1126 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 188:\n-#line 1131 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 189:\n-#line 1136 \"./parse.y\"\n+#line 1137 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 193:\n-#line 1150 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 194:\n-#line 1152 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 196:\n-#line 1161 \"./parse.y\"\n+#line 1162 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1163 \"./parse.y\"\n+#line 1164 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 203:\n-#line 1173 \"./parse.y\"\n+#line 1174 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3497,11 +3498,11 @@ case 203:\n \t\t;\n     break;}\n case 220:\n-#line 1206 \"./parse.y\"\n+#line 1207 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 221:\n-#line 1211 \"./parse.y\"\n+#line 1212 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3511,27 +3512,27 @@ case 221:\n \t\t;\n     break;}\n case 222:\n-#line 1222 \"./parse.y\"\n+#line 1223 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 223:\n-#line 1228 \"./parse.y\"\n+#line 1229 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 224:\n-#line 1233 \"./parse.y\"\n+#line 1234 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 225:\n-#line 1244 \"./parse.y\"\n+#line 1245 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3542,105 +3543,105 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1253 \"./parse.y\"\n+#line 1254 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 227:\n-#line 1259 \"./parse.y\"\n+#line 1260 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1265 \"./parse.y\"\n+#line 1266 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1271 \"./parse.y\"\n+#line 1272 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 230:\n-#line 1273 \"./parse.y\"\n+#line 1274 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 231:\n-#line 1279 \"./parse.y\"\n+#line 1280 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 232:\n-#line 1281 \"./parse.y\"\n+#line 1282 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 233:\n-#line 1287 \"./parse.y\"\n+#line 1288 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1289 \"./parse.y\"\n+#line 1290 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1291 \"./parse.y\"\n+#line 1292 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1293 \"./parse.y\"\n+#line 1294 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1295 \"./parse.y\"\n+#line 1296 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 245:\n-#line 1310 \"./parse.y\"\n+#line 1311 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 246:\n-#line 1312 \"./parse.y\"\n+#line 1313 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 247:\n-#line 1314 \"./parse.y\"\n+#line 1315 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 248:\n-#line 1316 \"./parse.y\"\n+#line 1317 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1321 \"./parse.y\"\n+#line 1322 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 250:\n-#line 1326 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1331 \"./parse.y\"\n+#line 1332 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 252:\n-#line 1335 \"./parse.y\"\n+#line 1336 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3651,112 +3652,112 @@ case 252:\n \t\t;\n     break;}\n case 253:\n-#line 1347 \"./parse.y\"\n+#line 1348 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 254:\n-#line 1352 \"./parse.y\"\n+#line 1353 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 255:\n-#line 1354 \"./parse.y\"\n+#line 1355 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 256:\n-#line 1356 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 257:\n-#line 1364 \"./parse.y\"\n+#line 1365 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 258:\n-#line 1366 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1368 \"./parse.y\"\n+#line 1369 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1370 \"./parse.y\"\n+#line 1371 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 266:\n-#line 1389 \"./parse.y\"\n+#line 1390 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 267:\n-#line 1395 \"./parse.y\"\n+#line 1396 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1401 \"./parse.y\"\n+#line 1402 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 269:\n-#line 1403 \"./parse.y\"\n+#line 1404 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 270:\n-#line 1405 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1410 \"./parse.y\"\n+#line 1411 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 272:\n-#line 1418 \"./parse.y\"\n+#line 1419 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 273:\n-#line 1420 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1422 \"./parse.y\"\n+#line 1423 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1424 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1429 \"./parse.y\"\n+#line 1430 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1434 \"./parse.y\"\n+#line 1435 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 278:\n-#line 1443 \"./parse.y\"\n+#line 1444 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 279:\n-#line 1448 \"./parse.y\"\n+#line 1449 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 280:\n-#line 1450 \"./parse.y\"\n+#line 1451 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3765,23 +3766,23 @@ case 280:\n \t\t;\n     break;}\n case 281:\n-#line 1457 \"./parse.y\"\n+#line 1458 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 282:\n-#line 1459 \"./parse.y\"\n+#line 1460 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1461 \"./parse.y\"\n+#line 1462 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1466 \"./parse.y\"\n+#line 1467 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 285:\n-#line 1468 \"./parse.y\"\n+#line 1469 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3790,23 +3791,23 @@ case 285:\n \t\t;\n     break;}\n case 286:\n-#line 1478 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 287:\n-#line 1484 \"./parse.y\"\n+#line 1485 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 288:\n-#line 1486 \"./parse.y\"\n+#line 1487 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 289:\n-#line 1491 \"./parse.y\"\n+#line 1492 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3819,176 +3820,176 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1503 \"./parse.y\"\n+#line 1504 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 291:\n-#line 1505 \"./parse.y\"\n+#line 1506 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 292:\n-#line 1511 \"./parse.y\"\n+#line 1512 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 293:\n-#line 1517 \"./parse.y\"\n+#line 1518 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 294:\n-#line 1521 \"./parse.y\"\n+#line 1522 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 295:\n-#line 1523 \"./parse.y\"\n+#line 1524 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 296:\n-#line 1528 \"./parse.y\"\n+#line 1529 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1530 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1532 \"./parse.y\"\n+#line 1533 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 299:\n-#line 1537 \"./parse.y\"\n+#line 1538 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1539 \"./parse.y\"\n+#line 1540 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 301:\n-#line 1541 \"./parse.y\"\n+#line 1542 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1543 \"./parse.y\"\n+#line 1544 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 303:\n-#line 1548 \"./parse.y\"\n+#line 1549 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1550 \"./parse.y\"\n+#line 1551 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1552 \"./parse.y\"\n+#line 1553 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1554 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1559 \"./parse.y\"\n+#line 1560 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1561 \"./parse.y\"\n+#line 1562 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1563 \"./parse.y\"\n+#line 1564 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1565 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1570 \"./parse.y\"\n+#line 1571 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 312:\n-#line 1575 \"./parse.y\"\n+#line 1576 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1577 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1582 \"./parse.y\"\n+#line 1583 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 315:\n-#line 1588 \"./parse.y\"\n+#line 1589 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 316:\n-#line 1590 \"./parse.y\"\n+#line 1591 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1592 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 318:\n-#line 1594 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1599 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 320:\n-#line 1607 \"./parse.y\"\n+#line 1608 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 321:\n-#line 1609 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1611 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1613 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 325:\n-#line 1619 \"./parse.y\"\n+#line 1620 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 326:\n-#line 1627 \"./parse.y\"\n+#line 1628 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 327:\n-#line 1635 \"./parse.y\"\n+#line 1636 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4006,203 +4007,203 @@ case 327:\n \t\t;\n     break;}\n case 328:\n-#line 1651 \"./parse.y\"\n+#line 1652 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 329:\n-#line 1653 \"./parse.y\"\n+#line 1654 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 330:\n-#line 1655 \"./parse.y\"\n+#line 1656 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 331:\n-#line 1660 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 332:\n-#line 1665 \"./parse.y\"\n+#line 1666 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 336:\n-#line 1677 \"./parse.y\"\n+#line 1678 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 337:\n-#line 1679 \"./parse.y\"\n+#line 1680 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 342:\n-#line 1688 \"./parse.y\"\n+#line 1689 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 343:\n-#line 1690 \"./parse.y\"\n+#line 1691 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 344:\n-#line 1692 \"./parse.y\"\n+#line 1693 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 345:\n-#line 1697 \"./parse.y\"\n+#line 1698 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 346:\n-#line 1699 \"./parse.y\"\n+#line 1700 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 347:\n-#line 1701 \"./parse.y\"\n+#line 1702 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 348:\n-#line 1703 \"./parse.y\"\n+#line 1704 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1705 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1710 \"./parse.y\"\n+#line 1711 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 351:\n-#line 1712 \"./parse.y\"\n+#line 1713 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 352:\n-#line 1717 \"./parse.y\"\n+#line 1718 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 353:\n-#line 1719 \"./parse.y\"\n+#line 1720 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 358:\n-#line 1728 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 359:\n-#line 1730 \"./parse.y\"\n+#line 1731 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 360:\n-#line 1732 \"./parse.y\"\n+#line 1733 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1734 \"./parse.y\"\n+#line 1735 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1736 \"./parse.y\"\n+#line 1737 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1738 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1748 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 367:\n-#line 1753 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 368:\n-#line 1758 \"./parse.y\"\n+#line 1759 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 369:\n-#line 1763 \"./parse.y\"\n+#line 1764 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 370:\n-#line 1765 \"./parse.y\"\n+#line 1766 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1767 \"./parse.y\"\n+#line 1768 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 372:\n-#line 1769 \"./parse.y\"\n+#line 1770 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 373:\n-#line 1773 \"./parse.y\"\n+#line 1774 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 374:\n-#line 1775 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1777 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 376:\n-#line 1779 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 377:\n-#line 1784 \"./parse.y\"\n+#line 1785 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 378:\n-#line 1786 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 379:\n-#line 1791 \"./parse.y\"\n+#line 1792 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 380:\n-#line 1796 \"./parse.y\"\n+#line 1797 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1798 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 382:\n-#line 1807 \"./parse.y\"\n+#line 1808 \"./parse.y\"\n { ctxp->osb_number = 1; ;\n     break;}\n case 383:\n-#line 1809 \"./parse.y\"\n+#line 1810 \"./parse.y\"\n { ctxp->osb_number++; ;\n     break;}\n case 384:\n-#line 1811 \"./parse.y\"\n+#line 1812 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1816 \"./parse.y\"\n+#line 1817 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 386:\n-#line 1820 \"./parse.y\"\n+#line 1821 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4212,19 +4213,19 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1828 \"./parse.y\"\n+#line 1829 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 388:\n-#line 1833 \"./parse.y\"\n+#line 1834 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1835 \"./parse.y\"\n+#line 1836 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 390:\n-#line 1837 \"./parse.y\"\n+#line 1838 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4237,7 +4238,7 @@ case 390:\n \t\t;\n     break;}\n case 391:\n-#line 1848 \"./parse.y\"\n+#line 1849 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4250,121 +4251,121 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1859 \"./parse.y\"\n+#line 1860 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 393:\n-#line 1864 \"./parse.y\"\n+#line 1865 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1873 \"./parse.y\"\n+#line 1874 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 395:\n-#line 1875 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1880 \"./parse.y\"\n+#line 1881 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 397:\n-#line 1882 \"./parse.y\"\n+#line 1883 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1884 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 399:\n-#line 1889 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1894 \"./parse.y\"\n+#line 1895 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1899 \"./parse.y\"\n+#line 1900 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 406:\n-#line 1914 \"./parse.y\"\n+#line 1915 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 407:\n-#line 1919 \"./parse.y\"\n+#line 1920 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1926 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 411:\n-#line 1928 \"./parse.y\"\n+#line 1929 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 413:\n-#line 1931 \"./parse.y\"\n+#line 1932 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 414:\n-#line 1933 \"./parse.y\"\n+#line 1934 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1938 \"./parse.y\"\n+#line 1939 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 416:\n-#line 1940 \"./parse.y\"\n+#line 1941 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 1945 \"./parse.y\"\n+#line 1946 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 418:\n-#line 1947 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 1953 \"./parse.y\"\n+#line 1954 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 421:\n-#line 1955 \"./parse.y\"\n+#line 1956 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 423:\n-#line 1958 \"./parse.y\"\n+#line 1959 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 1960 \"./parse.y\"\n+#line 1961 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1965 \"./parse.y\"\n+#line 1966 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (ctxp->osb_number--)\n@@ -4373,15 +4374,15 @@ case 425:\n \t\t;\n     break;}\n case 426:\n-#line 1972 \"./parse.y\"\n+#line 1973 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 1974 \"./parse.y\"\n+#line 1975 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 1976 \"./parse.y\"\n+#line 1977 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (ctxp->osb_number--)\n@@ -4395,275 +4396,275 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 1988 \"./parse.y\"\n+#line 1989 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 430:\n-#line 1990 \"./parse.y\"\n+#line 1991 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 431:\n-#line 1996 \"./parse.y\"\n+#line 1997 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 432:\n-#line 1998 \"./parse.y\"\n+#line 1999 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2000 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2006 \"./parse.y\"\n+#line 2007 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 436:\n-#line 2011 \"./parse.y\"\n+#line 2012 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 437:\n-#line 2016 \"./parse.y\"\n+#line 2017 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2021 \"./parse.y\"\n+#line 2022 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 2023 \"./parse.y\"\n+#line 2024 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2025 \"./parse.y\"\n+#line 2026 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2031 \"./parse.y\"\n+#line 2032 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 443:\n-#line 2036 \"./parse.y\"\n+#line 2037 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2041 \"./parse.y\"\n+#line 2042 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2043 \"./parse.y\"\n+#line 2044 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 447:\n-#line 2049 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2054 \"./parse.y\"\n+#line 2055 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2059 \"./parse.y\"\n+#line 2060 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2064 \"./parse.y\"\n+#line 2065 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2066 \"./parse.y\"\n+#line 2067 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2068 \"./parse.y\"\n+#line 2069 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2074 \"./parse.y\"\n+#line 2075 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 2079 \"./parse.y\"\n+#line 2080 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2084 \"./parse.y\"\n+#line 2085 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2089 \"./parse.y\"\n+#line 2090 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2094 \"./parse.y\"\n+#line 2095 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 459:\n-#line 2096 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 460:\n-#line 2098 \"./parse.y\"\n+#line 2099 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2100 \"./parse.y\"\n+#line 2101 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2102 \"./parse.y\"\n+#line 2103 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2104 \"./parse.y\"\n+#line 2105 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 465:\n-#line 2110 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 2115 \"./parse.y\"\n+#line 2116 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2120 \"./parse.y\"\n+#line 2121 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 468:\n-#line 2122 \"./parse.y\"\n+#line 2123 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 470:\n-#line 2128 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 2133 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2139 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2144 \"./parse.y\"\n+#line 2145 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2150 \"./parse.y\"\n+#line 2151 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2155 \"./parse.y\"\n+#line 2156 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2161 \"./parse.y\"\n+#line 2162 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2166 \"./parse.y\"\n+#line 2167 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2172 \"./parse.y\"\n+#line 2173 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2177 \"./parse.y\"\n+#line 2178 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2183 \"./parse.y\"\n+#line 2184 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 486:\n-#line 2188 \"./parse.y\"\n+#line 2189 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 487:\n-#line 2194 \"./parse.y\"\n+#line 2195 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 488:\n-#line 2196 \"./parse.y\"\n+#line 2197 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 491:\n-#line 2206 \"./parse.y\"\n+#line 2207 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 492:\n-#line 2208 \"./parse.y\"\n+#line 2209 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4868,7 +4869,7 @@ case 492:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2234 \"./parse.y\"\n+#line 2235 \"./parse.y\"\n \n \f\n \n@@ -5660,10 +5661,15 @@ duplicate_declaration_error_p (new_field_name, new_type, cl)\n \t\t\t  new_field_name);\n   if (decl)\n     {\n-      char *t1 = strdup (lang_printable_name (new_type, 1));\n+      char *t1 = strdup (purify_type_name\n+\t\t\t ((TREE_CODE (new_type) == POINTER_TYPE \n+\t\t\t   && TREE_TYPE (new_type) == NULL_TREE) ?\n+\t\t\t  IDENTIFIER_POINTER (TYPE_NAME (new_type)) :\n+\t\t\t  lang_printable_name (new_type, 1)));\n       /* The type may not have been completed by the time we report\n \t the error */\n-      char *t2 = strdup (((TREE_CODE (TREE_TYPE (decl)) == POINTER_TYPE \n+      char *t2 = strdup (purify_type_name\n+\t\t\t ((TREE_CODE (TREE_TYPE (decl)) == POINTER_TYPE \n \t\t\t   && TREE_TYPE (TREE_TYPE (decl)) == NULL_TREE) ?\n \t\t\t  IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (decl))) :\n \t\t\t  lang_printable_name (TREE_TYPE (decl), 1)));\n@@ -5885,7 +5891,7 @@ method_header (flags, type, mdecl, throws)\n   tree id = TREE_PURPOSE (mdecl);\n   tree this_class = TREE_TYPE (ctxp->current_parsed_class);\n   tree type_wfl = NULL_TREE;\n-  tree meth_name, current, orig_arg, saved_type;\n+  tree meth_name = NULL_TREE, current, orig_arg;\n   int saved_lineno;\n   int constructor_ok = 0, must_chain;\n   \n@@ -5967,8 +5973,8 @@ method_header (flags, type, mdecl, throws)\n   /* Do the returned type resolution and registration if necessary */\n   SET_TYPE_FOR_RESOLUTION (type, type_wfl, must_chain);\n \n-  saved_type = type;\n-  type = build_array_from_name (type, type_wfl, meth_name, &meth_name);\n+  if (meth_name)\n+    type = build_array_from_name (type, type_wfl, meth_name, &meth_name);\n   EXPR_WFL_NODE (id) = meth_name;\n   PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n@@ -10461,7 +10467,9 @@ java_complete_tree (node)\n       TREE_OPERAND (node, 0) = java_complete_tree (wfl_op1);\n       if (TREE_OPERAND (node, 0) == error_mark_node)\n \treturn error_mark_node;\n-      return patch_unaryop (node, wfl_op1);\n+      node = patch_unaryop (node, wfl_op1);\n+      CAN_COMPLETE_NORMALLY (node) = 1;\n+      break;\n \n     case ARRAY_REF:\n       /* There are cases were wfl_op1 is a WFL. patch_array_ref knows\n@@ -11939,13 +11947,16 @@ patch_unaryop (node, wfl_op)\n \t}\n       else\n \t{\n-\t  /* Before the addition, binary numeric promotion if performed on\n+\t  /* Before the addition, binary numeric promotion is performed on\n \t     both operands */\n-\t  value = integer_one_node;\n-\t  prom_type = binary_numeric_promotion (op_type, TREE_TYPE (value), \n-\t\t\t\t\t\t&op, &value);\n-\t  /* And write the promoted increment back */\n+\t  value = build_int_2 (1, 0);\n+\t  TREE_TYPE (node) = \n+\t    binary_numeric_promotion (op_type, TREE_TYPE (value), &op, &value);\n+\t  /* And write the promoted incremented and increment */\n+\t  TREE_OPERAND (node, 0) = op;\n \t  TREE_OPERAND (node, 1) = value;\n+\t  /* Convert the overall back into its original type. */\n+\t  return fold (convert (op_type, node));\n \t}\n       break;\n \n@@ -11965,7 +11976,7 @@ patch_unaryop (node, wfl_op)\n \t  op = do_unary_numeric_promotion (op);\n \t  prom_type = TREE_TYPE (op);\n \t  if (code == UNARY_PLUS_EXPR)\n-\t    node = op;\n+\t    return fold (op);\n \t}\n       break;\n \n@@ -12010,18 +12021,18 @@ patch_unaryop (node, wfl_op)\n \t  error_found = 1;\n \t}\n       else\n-\tnode = value;\n+\treturn fold (value);\n       break;\n     }\n   \n   if (error_found)\n     return error_mark_node;\n-  /* In the case of UNARY_PLUS_EXPR, we replaced NODE by a new one */\n-  else if (code != UNARY_PLUS_EXPR && code != CONVERT_EXPR)\n-    {\n-      TREE_OPERAND (node, 0) = op;\n-      TREE_TYPE (node) = prom_type;\n-    }\n+\n+  /* There are cases where node has been replaced by something else\n+     and we don't end up returning here: UNARY_PLUS_EXPR,\n+     CONVERT_EXPR, {POST,PRE}{INCR,DECR}EMENT_EXPR. */\n+  TREE_OPERAND (node, 0) = op;\n+  TREE_TYPE (node) = prom_type;\n   return fold (node);\n }\n "}, {"sha": "622aee1489ef93efdb291aea4be55bf33ad8ac1e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=4a5f66c3011fa3bd3119c254fc35ed353d7bdcd0", "patch": "@@ -237,6 +237,7 @@ static tree patch_new_array_init PROTO ((tree, tree));\n static tree patch_array_constructor PROTO ((tree, tree));\n static tree maybe_build_array_element_wfl PROTO ((tree));\n static int array_constructor_check_entry PROTO ((tree, tree));\n+static char *purify_type_name PROTO ((char *));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -3022,10 +3023,15 @@ duplicate_declaration_error_p (new_field_name, new_type, cl)\n \t\t\t  new_field_name);\n   if (decl)\n     {\n-      char *t1 = strdup (lang_printable_name (new_type, 1));\n+      char *t1 = strdup (purify_type_name\n+\t\t\t ((TREE_CODE (new_type) == POINTER_TYPE \n+\t\t\t   && TREE_TYPE (new_type) == NULL_TREE) ?\n+\t\t\t  IDENTIFIER_POINTER (TYPE_NAME (new_type)) :\n+\t\t\t  lang_printable_name (new_type, 1)));\n       /* The type may not have been completed by the time we report\n \t the error */\n-      char *t2 = strdup (((TREE_CODE (TREE_TYPE (decl)) == POINTER_TYPE \n+      char *t2 = strdup (purify_type_name\n+\t\t\t ((TREE_CODE (TREE_TYPE (decl)) == POINTER_TYPE \n \t\t\t   && TREE_TYPE (TREE_TYPE (decl)) == NULL_TREE) ?\n \t\t\t  IDENTIFIER_POINTER (TYPE_NAME (TREE_TYPE (decl))) :\n \t\t\t  lang_printable_name (TREE_TYPE (decl), 1)));\n@@ -3247,7 +3253,7 @@ method_header (flags, type, mdecl, throws)\n   tree id = TREE_PURPOSE (mdecl);\n   tree this_class = TREE_TYPE (ctxp->current_parsed_class);\n   tree type_wfl = NULL_TREE;\n-  tree meth_name, current, orig_arg, saved_type;\n+  tree meth_name = NULL_TREE, current, orig_arg;\n   int saved_lineno;\n   int constructor_ok = 0, must_chain;\n   \n@@ -3329,8 +3335,8 @@ method_header (flags, type, mdecl, throws)\n   /* Do the returned type resolution and registration if necessary */\n   SET_TYPE_FOR_RESOLUTION (type, type_wfl, must_chain);\n \n-  saved_type = type;\n-  type = build_array_from_name (type, type_wfl, meth_name, &meth_name);\n+  if (meth_name)\n+    type = build_array_from_name (type, type_wfl, meth_name, &meth_name);\n   EXPR_WFL_NODE (id) = meth_name;\n   PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n@@ -7823,7 +7829,9 @@ java_complete_tree (node)\n       TREE_OPERAND (node, 0) = java_complete_tree (wfl_op1);\n       if (TREE_OPERAND (node, 0) == error_mark_node)\n \treturn error_mark_node;\n-      return patch_unaryop (node, wfl_op1);\n+      node = patch_unaryop (node, wfl_op1);\n+      CAN_COMPLETE_NORMALLY (node) = 1;\n+      break;\n \n     case ARRAY_REF:\n       /* There are cases were wfl_op1 is a WFL. patch_array_ref knows\n@@ -9301,13 +9309,16 @@ patch_unaryop (node, wfl_op)\n \t}\n       else\n \t{\n-\t  /* Before the addition, binary numeric promotion if performed on\n+\t  /* Before the addition, binary numeric promotion is performed on\n \t     both operands */\n-\t  value = integer_one_node;\n-\t  prom_type = binary_numeric_promotion (op_type, TREE_TYPE (value), \n-\t\t\t\t\t\t&op, &value);\n-\t  /* And write the promoted increment back */\n+\t  value = build_int_2 (1, 0);\n+\t  TREE_TYPE (node) = \n+\t    binary_numeric_promotion (op_type, TREE_TYPE (value), &op, &value);\n+\t  /* And write the promoted incremented and increment */\n+\t  TREE_OPERAND (node, 0) = op;\n \t  TREE_OPERAND (node, 1) = value;\n+\t  /* Convert the overall back into its original type. */\n+\t  return fold (convert (op_type, node));\n \t}\n       break;\n \n@@ -9327,7 +9338,7 @@ patch_unaryop (node, wfl_op)\n \t  op = do_unary_numeric_promotion (op);\n \t  prom_type = TREE_TYPE (op);\n \t  if (code == UNARY_PLUS_EXPR)\n-\t    node = op;\n+\t    return fold (op);\n \t}\n       break;\n \n@@ -9372,18 +9383,18 @@ patch_unaryop (node, wfl_op)\n \t  error_found = 1;\n \t}\n       else\n-\tnode = value;\n+\treturn fold (value);\n       break;\n     }\n   \n   if (error_found)\n     return error_mark_node;\n-  /* In the case of UNARY_PLUS_EXPR, we replaced NODE by a new one */\n-  else if (code != UNARY_PLUS_EXPR && code != CONVERT_EXPR)\n-    {\n-      TREE_OPERAND (node, 0) = op;\n-      TREE_TYPE (node) = prom_type;\n-    }\n+\n+  /* There are cases where node has been replaced by something else\n+     and we don't end up returning here: UNARY_PLUS_EXPR,\n+     CONVERT_EXPR, {POST,PRE}{INCR,DECR}EMENT_EXPR. */\n+  TREE_OPERAND (node, 0) = op;\n+  TREE_TYPE (node) = prom_type;\n   return fold (node);\n }\n "}]}