{"sha": "70e72c3a11315fb6a228b7f58d027c2e1fbb9940", "node_id": "C_kwDOANBUbNoAKDcwZTcyYzNhMTEzMTVmYjZhMjI4YjdmNThkMDI3YzJlMWZiYjk5NDA", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-20T16:52:45Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-21T08:10:45Z"}, "message": "Avoid threading circular paths.\n\nThe backward threader keeps a hash of visited blocks to avoid crossing\nthe same block twice.  Interestingly, we haven't been checking it for\nthe final block out of the path.  This may be inherited from the old\ncode, as it was simple enough that it didn't matter.  With the\nupcoming changes enabling the fully resolving threader, it gets\ntripped often enough to cause wrong code to be generated.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-threadbackward.c (back_threader::maybe_register_path):\n\tAvoid threading circular paths.", "tree": {"sha": "2c069ab6626af6f4632614411e9112117e95c869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c069ab6626af6f4632614411e9112117e95c869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e72c3a11315fb6a228b7f58d027c2e1fbb9940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e72c3a11315fb6a228b7f58d027c2e1fbb9940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e72c3a11315fb6a228b7f58d027c2e1fbb9940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e72c3a11315fb6a228b7f58d027c2e1fbb9940/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d438dd2523a35e073eed04d146f1e73e2514d93d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d438dd2523a35e073eed04d146f1e73e2514d93d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d438dd2523a35e073eed04d146f1e73e2514d93d"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "38913b06717c5d01bb9da311e605460abd0a08a3", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e72c3a11315fb6a228b7f58d027c2e1fbb9940/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e72c3a11315fb6a228b7f58d027c2e1fbb9940/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=70e72c3a11315fb6a228b7f58d027c2e1fbb9940", "patch": "@@ -140,6 +140,10 @@ back_threader::maybe_register_path ()\n \n   if (taken_edge && taken_edge != UNREACHABLE_EDGE)\n     {\n+      // Avoid circular paths.\n+      if (m_visited_bbs.contains (taken_edge->dest))\n+\treturn UNREACHABLE_EDGE;\n+\n       bool irreducible = false;\n       bool profitable\n \t= m_profit.profitable_path_p (m_path, m_name, taken_edge, &irreducible);"}]}