{"sha": "c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d", "node_id": "C_kwDOANBUbNoAKGM3MWExMjhhM2UxZmY2ZWU1Mjc0ZmMyZGY0OWVhNjUwYmM5ZTZjMmQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-26T07:59:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-26T12:49:30Z"}, "message": "tree-optimization/108547 - robustify uninit predicate analysis\n\nPredicate analysis, when looking through casts doesn't bother to\nconvert boundary constants to the type of the bounded variables.\nThe following robustifies value_sat_pred_p to use widest_ints\nto deal with this, like other code in predicate analysis.\n\n\tPR tree-optimization/108547\n\t* gimple-predicate-analysis.cc (value_sat_pred_p):\n\tUse widest_int.\n\n\t* gcc.dg/uninit-pr108547.c: New testcase.", "tree": {"sha": "f49abe9f802133f27a862a980a40e74e72d4b53e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f49abe9f802133f27a862a980a40e74e72d4b53e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0573a0778af88e805f7630ac8640ecd67d692665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0573a0778af88e805f7630ac8640ecd67d692665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0573a0778af88e805f7630ac8640ecd67d692665"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "094e8c7aff3ec69622cc4f2125b2c0cb2a942fad", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d", "patch": "@@ -728,11 +728,11 @@ value_sat_pred_p (tree val, tree boundary, tree_code cmpc,\n   if (cmpc != BIT_AND_EXPR)\n     return is_value_included_in (val, boundary, cmpc);\n \n-  wide_int andw = wi::to_wide (val) & wi::to_wide (boundary);\n+  widest_int andw = wi::to_widest (val) & wi::to_widest (boundary);\n   if (exact_p)\n-    return andw == wi::to_wide (val);\n+    return andw == wi::to_widest (val);\n \n-  return andw.to_uhwi ();\n+  return wi::ne_p (andw, 0);\n }\n \n /* Return true if the domain of single predicate expression PRED1"}, {"sha": "d8f6c9ff87a3b6ae4f95555376505b064e936fdc", "filename": "gcc/testsuite/gcc.dg/uninit-pr108547.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr108547.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr108547.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr108547.c?ref=c71a128a3e1ff6ee5274fc2df49ea650bc9e6c2d", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+int func_7_uc_10li_19 (int);\n+int li_4, li_5, us_8;\n+unsigned char func_7_ptr_13, func_7_uc_14;\n+void func_7_ptr_18() {\n+  if (li_5) {\n+    for (;;)\n+      ;\n+    short s_15;\n+    for (; func_7_uc_14;) {\n+      us_8 = 7;\n+      for (; us_8; us_8 += 1)\n+      lblD2AF1FAB:\n+        if (us_8)\n+          li_4 = 1;\n+      func_7_uc_14 += (__INTPTR_TYPE__)func_7_ptr_18;\n+      if (func_7_ptr_13 & 1 && (func_7_uc_14 &= func_7_ptr_13))\n+        s_15 %= func_7_uc_10li_19(s_15); /* { dg-warning \"uninitialized\" } */\n+    }\n+  }\n+  goto lblD2AF1FAB;\n+}"}]}