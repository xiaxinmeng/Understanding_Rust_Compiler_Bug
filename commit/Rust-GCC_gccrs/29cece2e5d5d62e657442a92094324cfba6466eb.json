{"sha": "29cece2e5d5d62e657442a92094324cfba6466eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljZWNlMmU1ZDVkNjJlNjU3NDQyYTkyMDk0MzI0Y2ZiYTY0NjZlYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-04-23T20:59:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-23T20:59:05Z"}, "message": "parse.y (check_class_key): Allow KEY to be union/enum/struct/class node with attributes.\n\n\t* parse.y (check_class_key): Allow KEY to be union/enum/struct/class\n\tnode with attributes.\n\n\t* g++.dg/parse/attr1.C: New test.\n\nFrom-SVN: r52678", "tree": {"sha": "ee6ed88377a7ea38a81e1b662785e9f4346dcd9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee6ed88377a7ea38a81e1b662785e9f4346dcd9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29cece2e5d5d62e657442a92094324cfba6466eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cece2e5d5d62e657442a92094324cfba6466eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29cece2e5d5d62e657442a92094324cfba6466eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cece2e5d5d62e657442a92094324cfba6466eb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e67bb8588a51269784cdee84dc985b33eae90a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e67bb8588a51269784cdee84dc985b33eae90a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e67bb8588a51269784cdee84dc985b33eae90a9"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "027456165786b29492f3830e65a9b76ccf3f05ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=29cece2e5d5d62e657442a92094324cfba6466eb", "patch": "@@ -1,3 +1,8 @@\n+2002-04-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parse.y (check_class_key): Allow KEY to be union/enum/struct/class\n+\tnode with attributes.\n+\n 2002-2-23  David O'Brien  <obrien@FreeBSD.org>\n \n \t* g++spec.c (MATH_LIBRARY_PROFILE, LIBSTDCXX_PROFILE): Add."}, {"sha": "491c83ee84cbbada8db8a82b16ace8945778dad5", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=29cece2e5d5d62e657442a92094324cfba6466eb", "patch": "@@ -214,6 +214,8 @@ check_class_key (key, aggr)\n      tree key;\n      tree aggr;\n {\n+  if (TREE_CODE (key) == TREE_LIST)\n+    key = TREE_VALUE (key);\n   if ((key == union_type_node) != (TREE_CODE (aggr) == UNION_TYPE))\n     pedwarn (\"`%s' tag used in naming `%#T'\",\n \t     key == union_type_node ? \"union\""}, {"sha": "07de93d0979f8b3046060fafa4cf06af3c805a0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29cece2e5d5d62e657442a92094324cfba6466eb", "patch": "@@ -1,3 +1,7 @@\n+2002-04-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/parse/attr1.C: New test.\n+\n 2002-04-23  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.c-torture/execute/string-opt-17.c: New test case."}, {"sha": "10d6f57d3a7c7c158fc803071813d4b08aa75e7e", "filename": "gcc/testsuite/g++.dg/parse/attr1.C", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cece2e5d5d62e657442a92094324cfba6466eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr1.C?ref=29cece2e5d5d62e657442a92094324cfba6466eb", "patch": "@@ -0,0 +1,50 @@\n+// Test whether attributes are accepted both immediately after\n+// struct/union keyword and after the closing brace.\n+// { dg-do compile }\n+\n+struct foo\n+{\n+  union __attribute__ ((packed))\n+  {\n+    int a;\n+    long b;\n+  };\n+  union __attribute__ ((packed)) __attribute__ ((unused))\n+  {\n+    int c;\n+    long d;\n+  };\n+};\n+\n+union __attribute__ ((packed)) bar\n+{\n+  int c;\n+  long d;\n+};\n+\n+struct __attribute__ ((packed)) baz\n+{\n+  int e;\n+  long f;\n+};\n+\n+struct foo2\n+{\n+  union\n+  {\n+    int a;\n+    long b;\n+  } __attribute__ ((packed));\n+};\n+\n+union bar2\n+{\n+  int c;\n+  long d;\n+} __attribute__ ((packed));\n+\n+struct baz2\n+{\n+  int e;\n+  long f;\n+} __attribute__ ((packed));"}]}