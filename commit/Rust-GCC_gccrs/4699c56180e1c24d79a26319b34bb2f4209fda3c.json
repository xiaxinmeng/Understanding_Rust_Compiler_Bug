{"sha": "4699c56180e1c24d79a26319b34bb2f4209fda3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY5OWM1NjE4MGUxYzI0ZDc5YTI2MzE5YjM0YmIyZjQyMDlmZGEzYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-22T19:00:23Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-22T19:00:23Z"}, "message": "pt.c (for_each_template_parm): Walk into TYPENAME_TYPEs, INDIRECT_REFs, and COMPONENT_REFs.\n\n\t* pt.c (for_each_template_parm): Walk into TYPENAME_TYPEs,\n\tINDIRECT_REFs, and COMPONENT_REFs.  Handle FIELD_DECLs.\n\nFrom-SVN: r27108", "tree": {"sha": "60c41b570dd9241e15bcd384ed6d89d85844dded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60c41b570dd9241e15bcd384ed6d89d85844dded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4699c56180e1c24d79a26319b34bb2f4209fda3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4699c56180e1c24d79a26319b34bb2f4209fda3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4699c56180e1c24d79a26319b34bb2f4209fda3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4699c56180e1c24d79a26319b34bb2f4209fda3c/comments", "author": null, "committer": null, "parents": [{"sha": "ba50acac81ba0674e185fa5db13cec03726dd6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba50acac81ba0674e185fa5db13cec03726dd6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba50acac81ba0674e185fa5db13cec03726dd6b1"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "54c98b81b59dd604c89d720175f05bfb7a5b53ec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4699c56180e1c24d79a26319b34bb2f4209fda3c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4699c56180e1c24d79a26319b34bb2f4209fda3c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4699c56180e1c24d79a26319b34bb2f4209fda3c", "patch": "@@ -1,5 +1,8 @@\n 1999-05-22  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* pt.c (for_each_template_parm): Walk into TYPENAME_TYPEs,\n+\tINDIRECT_REFs, and COMPONENT_REFs.  Handle FIELD_DECLs.\n+\t\n \t* cp-tree.h (push_nested_namespace): Declare.\n \t(pop_nested_namespace): Likewise.\n \t* decl.c (push_nested_namespace): New function."}, {"sha": "702c48fab12369ac737859116cd4d8dcc1dea72d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4699c56180e1c24d79a26319b34bb2f4209fda3c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4699c56180e1c24d79a26319b34bb2f4209fda3c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4699c56180e1c24d79a26319b34bb2f4209fda3c", "patch": "@@ -4117,7 +4117,6 @@ for_each_template_parm (t, fn, data)\n \n     case FUNCTION_DECL:\n     case VAR_DECL:\n-      /* ??? What about FIELD_DECLs?  */\n       if (DECL_LANG_SPECIFIC (t) && DECL_TEMPLATE_INFO (t)\n \t  && for_each_template_parm (DECL_TI_ARGS (t), fn, data))\n \treturn 1;\n@@ -4162,6 +4161,7 @@ for_each_template_parm (t, fn, data)\n     case VOID_TYPE:\n     case BOOLEAN_TYPE:\n     case NAMESPACE_DECL:\n+    case FIELD_DECL:\n       return 0;\n \n       /* constants */\n@@ -4192,16 +4192,24 @@ for_each_template_parm (t, fn, data)\n     case ALIGNOF_EXPR:\n       return for_each_template_parm (TREE_OPERAND (t, 0), fn, data);\n \n+    case TYPENAME_TYPE:\n+      if (!fn)\n+\treturn 1;\n+      return (for_each_template_parm (TYPE_CONTEXT (t), fn, data)\n+\t      || for_each_template_parm (TYPENAME_TYPE_FULLNAME (t),\n+\t\t\t\t\t fn, data));\n+\n     case INDIRECT_REF:\n     case COMPONENT_REF:\n-      /* We assume that the object must be instantiated in order to build\n-\t the COMPONENT_REF, so we test only whether the type of the\n-\t COMPONENT_REF uses template parms.  On the other hand, if\n-\t there's no type, then this thing must be some expression\n+      /* If there's no type, then this thing must be some expression\n \t involving template parameters.  */\n-      if (TREE_TYPE (t))\n-\treturn for_each_template_parm (TREE_TYPE (t), fn, data);\n-      /* Fall through.  */\n+      if (!fn && !TREE_TYPE (t))\n+\treturn 1;\n+      if (TREE_CODE (t) == COMPONENT_REF)\n+\treturn (for_each_template_parm (TREE_OPERAND (t, 0), fn, data)\n+\t\t|| for_each_template_parm (TREE_OPERAND (t, 1), fn, data));\n+      else\n+\treturn for_each_template_parm (TREE_OPERAND (t, 0), fn, data);\n \n     case MODOP_EXPR:\n     case CAST_EXPR:\n@@ -4213,7 +4221,6 @@ for_each_template_parm (t, fn, data)\n     case DOTSTAR_EXPR:\n     case TYPEID_EXPR:\n     case LOOKUP_EXPR:\n-    case TYPENAME_TYPE:\n       if (!fn)\n \treturn 1;\n       /* Fall through.  */"}, {"sha": "3d63461f9578b3689efde633f86d4abdc33517b8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec32.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4699c56180e1c24d79a26319b34bb2f4209fda3c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4699c56180e1c24d79a26319b34bb2f4209fda3c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec32.C?ref=4699c56180e1c24d79a26319b34bb2f4209fda3c", "patch": "@@ -0,0 +1,5 @@\n+// Build don't link:\n+// Origin: Raja R Harinath <harinath@cs.umn.edu>\n+\n+template<class T1, class T2> class foo;\n+template<class T> struct foo<T,typename T::bar>;"}]}