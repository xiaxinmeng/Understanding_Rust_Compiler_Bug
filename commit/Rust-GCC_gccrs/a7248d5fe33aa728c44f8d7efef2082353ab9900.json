{"sha": "a7248d5fe33aa728c44f8d7efef2082353ab9900", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcyNDhkNWZlMzNhYTcyOGM0NGY4ZDdlZmVmMjA4MjM1M2FiOTkwMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-10-17T17:51:00Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-17T17:51:00Z"}, "message": "re PR c++/44524 (improve diagnostic for . vs -> typo)\n\n/cp\n2011-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/44524\n\t* typeck.c (build_class_member_access_expr): Provide a better error\n\tmessage for X.Y where X is a pointer to class type.\n\t(finish_class_member_access_expr): Likewise.\n\n/testsuite\n2011-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/44524\n\t* g++.dg/parse/error41.C: New.\n\t* g++.dg/parse/error20.C: Adjust.\n\nFrom-SVN: r180103", "tree": {"sha": "dc6b6815c68df3f834831589f13d4f9e0b6e03bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc6b6815c68df3f834831589f13d4f9e0b6e03bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7248d5fe33aa728c44f8d7efef2082353ab9900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7248d5fe33aa728c44f8d7efef2082353ab9900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7248d5fe33aa728c44f8d7efef2082353ab9900", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7248d5fe33aa728c44f8d7efef2082353ab9900/comments", "author": null, "committer": null, "parents": [{"sha": "3e8f763093ca87b56616ebef3ee3d194af8c9fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8f763093ca87b56616ebef3ee3d194af8c9fcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e8f763093ca87b56616ebef3ee3d194af8c9fcb"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "453dce15d486324009a44ef92aeaa6653b9d7939", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a7248d5fe33aa728c44f8d7efef2082353ab9900", "patch": "@@ -1,3 +1,10 @@\n+2011-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/44524\n+\t* typeck.c (build_class_member_access_expr): Provide a better error\n+\tmessage for X.Y where X is a pointer to class type.\n+\t(finish_class_member_access_expr): Likewise.\n+\n 2011-10-15  Tom Tromey  <tromey@redhat.com>\n \t    Dodji Seketeli  <dodji@redhat.com>\n "}, {"sha": "749aa3f5ac97f735a172cafdbc00a4ab813f0cca", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a7248d5fe33aa728c44f8d7efef2082353ab9900", "patch": "@@ -2128,8 +2128,16 @@ build_class_member_access_expr (tree object, tree member,\n   if (!CLASS_TYPE_P (object_type))\n     {\n       if (complain & tf_error)\n-\terror (\"request for member %qD in %qE, which is of non-class type %qT\",\n-\t       member, object, object_type);\n+\t{\n+\t  if (POINTER_TYPE_P (object_type)\n+\t      && CLASS_TYPE_P (TREE_TYPE (object_type)))\n+\t    error (\"request for member %qD in %qE, which is of pointer \"\n+\t\t   \"type %qT (maybe you meant to use %<->%> ?)\",\n+\t\t   member, object, object_type);\n+\t  else\n+\t    error (\"request for member %qD in %qE, which is of non-class \"\n+\t\t   \"type %qT\", member, object, object_type);\n+\t}\n       return error_mark_node;\n     }\n \n@@ -2508,8 +2516,16 @@ finish_class_member_access_expr (tree object, tree name, bool template_p,\n   if (!CLASS_TYPE_P (object_type))\n     {\n       if (complain & tf_error)\n-\terror (\"request for member %qD in %qE, which is of non-class type %qT\",\n-\t       name, object, object_type);\n+\t{\n+\t  if (POINTER_TYPE_P (object_type)\n+\t      && CLASS_TYPE_P (TREE_TYPE (object_type)))\n+\t    error (\"request for member %qD in %qE, which is of pointer \"\n+\t\t   \"type %qT (maybe you meant to use %<->%> ?)\",\n+\t\t   name, object, object_type);\n+\t  else\n+\t    error (\"request for member %qD in %qE, which is of non-class \"\n+\t\t   \"type %qT\", name, object, object_type);\n+\t}\n       return error_mark_node;\n     }\n "}, {"sha": "3a6edad480e826a848004a53712501ddab29eace", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7248d5fe33aa728c44f8d7efef2082353ab9900", "patch": "@@ -1,3 +1,9 @@\n+2011-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/44524\n+\t* g++.dg/parse/error41.C: New.\n+\t* g++.dg/parse/error20.C: Adjust.\n+\n 2011-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50757"}, {"sha": "6119df9b2d1c45bb55e9f59f117136390c93a44d", "filename": "gcc/testsuite/g++.dg/parse/error20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror20.C?ref=a7248d5fe33aa728c44f8d7efef2082353ab9900", "patch": "@@ -12,7 +12,7 @@ struct C {\n };\n int main() {\n   C c;\n-  A(c.p.i); // { dg-error \"9:request for member 'i' in 'c.C::p', which is of non-class type 'B\" }\n+  A(c.p.i); // { dg-error \"9:request for member 'i' in 'c.C::p', which is of pointer type 'B\" }\n   return 0;\n }\n "}, {"sha": "621a2e252ed50fbc5e03a218646e6ae1cc08385c", "filename": "gcc/testsuite/g++.dg/parse/error41.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7248d5fe33aa728c44f8d7efef2082353ab9900/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror41.C?ref=a7248d5fe33aa728c44f8d7efef2082353ab9900", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/44524\n+\n+template<typename, typename>\n+struct map\n+{\n+  bool empty();\n+};\n+\n+int bar(map<int, float> *X) {\n+  return X.empty();  // { dg-error \"which is of pointer type 'map\" }\n+}"}]}