{"sha": "4c714dd4a6abb732bde7d33d4660347ec0d0b897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM3MTRkZDRhNmFiYjczMmJkZTdkMzNkNDY2MDM0N2VjMGQwYjg5Nw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-06-01T02:51:18Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-06-01T02:51:18Z"}, "message": "basic-block.h, [...]: Don't include errors.h and include toplev.h if necessary.\n\n\t* basic-block.h, bb-reorder.c, c-gimplify.c, config/darwin.c,\n\tconfig/rs6000/rs6000-c.c, dominance.c, gimple-low.c, gimplify.c,\n\tlambda-code.c, lambda-trans.c, tree-browser.c, tree-cfg.c,\n\ttree-chrec.c, tree-data-ref.c, tree-dfa.c, tree-eh.c,\n\ttree-if-conv.c, tree-into-ssa.c, tree-loop-linear.c,\n\ttree-mudflap.c, tree-nomudflap.c, tree-outof-ssa.c,\n\ttree-pretty-print.c, tree-scalar-evolution.c, tree-sra.c,\n\ttree-ssa-ccp.c, tree-ssa-copy.c, tree-ssa-dce.c, tree-ssa-dom.c,\n\ttree-ssa-dse.c, tree-ssa-forwprop.c, tree-ssa-live.c,\n\ttree-ssa-operands.c, tree-ssa-phiopt.c, tree-ssa-pre.c,\n\ttree-ssa-propagate.c, tree-ssa-sink.c, tree-ssa-threadupdate.c,\n\ttree-ssa-uncprop.c, tree-ssa.c, tree-vect-analyze.c,\n\ttree-vect-transform.c, tree-vectorizer.c, vec.c: Don't include\n\terrors.h and include toplev.h if necessary.\n\n\t* rtl.c, varray.c: If we're compiling as a GENERATOR_FILE, include\n\terrors.h otherwise include toplev.h.\n\n\t* Makefile.in: Update dependencies.\n\nada:\n\t* misc.c: Don't include errors.h.\n\nfortran:\n\t* fortran/trans-decl.c: Don't include errors.h.\n\t* fortran/Make-lang.in: Updates dependencies.\n\njava:\n\t* java/verify-glue.c: Don't include errors.h and include toplev.h.\n\t* java/Make-lang.in: Updates dependencies.\n\ntreelang:\n\t* treelang/lex.l, treelang/parse.y: Don't include errors.h and\n\tinclude toplev.h.\n\t* treelang/Make-lang.in: Updates dependencies.\n\nFrom-SVN: r100420", "tree": {"sha": "e2cfabc179c7b01344eb0f207d1bd8379ba6a2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2cfabc179c7b01344eb0f207d1bd8379ba6a2ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c714dd4a6abb732bde7d33d4660347ec0d0b897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c714dd4a6abb732bde7d33d4660347ec0d0b897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c714dd4a6abb732bde7d33d4660347ec0d0b897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c714dd4a6abb732bde7d33d4660347ec0d0b897/comments", "author": null, "committer": null, "parents": [{"sha": "d68c2f42dc71adddb3acae1a2469a28d0783f34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68c2f42dc71adddb3acae1a2469a28d0783f34c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68c2f42dc71adddb3acae1a2469a28d0783f34c"}], "stats": {"total": 226, "additions": 123, "deletions": 103}, "files": [{"sha": "468a0b7f7e9a18828f8706284d7e86422250e38a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -1,3 +1,26 @@\n+2005-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* basic-block.h, bb-reorder.c, c-gimplify.c, config/darwin.c,\n+\tconfig/rs6000/rs6000-c.c, dominance.c, gimple-low.c, gimplify.c,\n+\tlambda-code.c, lambda-trans.c, tree-browser.c, tree-cfg.c,\n+\ttree-chrec.c, tree-data-ref.c, tree-dfa.c, tree-eh.c,\n+\ttree-if-conv.c, tree-into-ssa.c, tree-loop-linear.c,\n+\ttree-mudflap.c, tree-nomudflap.c, tree-outof-ssa.c,\n+\ttree-pretty-print.c, tree-scalar-evolution.c, tree-sra.c,\n+\ttree-ssa-ccp.c, tree-ssa-copy.c, tree-ssa-dce.c, tree-ssa-dom.c,\n+\ttree-ssa-dse.c, tree-ssa-forwprop.c, tree-ssa-live.c,\n+\ttree-ssa-operands.c, tree-ssa-phiopt.c, tree-ssa-pre.c,\n+\ttree-ssa-propagate.c, tree-ssa-sink.c, tree-ssa-threadupdate.c,\n+\ttree-ssa-uncprop.c, tree-ssa.c, tree-vect-analyze.c,\n+\ttree-vect-transform.c, tree-vectorizer.c, vec.c: Don't include\n+\terrors.h and include toplev.h if necessary.\n+\t\n+\t* rtl.c, varray.c: If we're compiling as a GENERATOR_FILE, include\n+\terrors.h otherwise include toplev.h.\n+\t\n+\t* Makefile.in: Update dependencies.\n+\t\n+\n 2005-06-01  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/cygming.h (NO_PROFILE_COUNTERS): Define."}, {"sha": "716e47c2a9a4dbfb41dfbf3ac6da41b56ee4d57e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -1660,32 +1660,32 @@ stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    toplev.h\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   errors.h toplev.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   toplev.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) bitmap.h \\\n    $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n    $(TREE_GIMPLE_H) tree-inline.h $(VARRAY_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    langhooks.h domwalk.h tree-pass.h $(GGC_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    bitmap.h $(CFGLOOP_H) $(FLAGS_H) hard-reg-set.h $(HASHTAB_H) \\\n    $(TREE_GIMPLE_H) tree-inline.h $(VARRAY_H)\n tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    langhooks.h tree-pass.h $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) bitmap.h \\\n    $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) $(TREE_GIMPLE_H) \\\n-   tree-inline.h $(VARRAY_H)\n+   tree-inline.h $(VARRAY_H) toplev.h\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H)\n tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    langhooks.h\n tree-ssa-phiopt.o : tree-ssa-phiopt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H)\n tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -1694,26 +1694,26 @@ tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) tree-pass.h langhooks.h tree-ssa-propagate.h $(FLAGS_H)\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(DIAGNOSTIC_H) function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n    tree-ssa-propagate.h vec.h gt-tree-ssa-propagate.h $(FLAGS_H) $(VARRAY_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) domwalk.h real.h tree-pass.h $(FLAGS_H) langhooks.h \\\n    tree-ssa-propagate.h $(CFGLOOP_H)\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(DIAGNOSTIC_H) function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h real.h tree-pass.h $(FLAGS_H) \\\n    langhooks.h tree-ssa-propagate.h\n tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) errors.h function.h $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) function.h $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) tree-pass.h $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(VARRAY_H) $(GGC_H) gt-tree-ssanames.h  $(TREE_FLOW_H)\n@@ -1723,17 +1723,17 @@ tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) domwalk.h $(GGC_H)\n tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) errors.h function.h $(TIMEVAR_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) function.h $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) \\\n    bitmap.h $(FLAGS_H) $(HASHTAB_H) $(TREE_GIMPLE_H) tree-inline.h \\\n-   $(VARRAY_H)\n+   $(VARRAY_H) toplev.h\n tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) function.h $(TIMEVAR_H) tree-pass.h \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) \\\n    bitmap.h $(FLAGS_H) $(HASHTAB_H) langhooks.h $(TREE_GIMPLE_H) \\\n    tree-inline.h\n tree-ssa-pre.o : tree-ssa-pre.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) errors.h $(TIMEVAR_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(CFGLOOP_H) \\\n    alloc-pool.h $(BASIC_BLOCK_H) bitmap.h $(FIBHEAP_H) $(HASHTAB_H) \\\n    langhooks.h real.h $(TREE_GIMPLE_H) tree-inline.h tree-iterator.h\n@@ -1746,7 +1746,7 @@ tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(CFGLOOP_H) $(SCEV_H) tree-chrec.h $(TIMEVAR_H)\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n-   $(DIAGNOSTIC_H) errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(DIAGNOSTIC_H) function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) except.h langhooks.h $(CFGLOOP_H) tree-pass.h \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h $(HASHTAB_H) toplev.h \\\n    tree-ssa-propagate.h\n@@ -1761,7 +1761,7 @@ tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_DUMP_H) $(DIAGNOSTIC_H) except.h tree-pass.h $(FLAGS_H) langhooks.h \\\n    $(BASIC_BLOCK_H) hard-reg-set.h\n tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) errors.h $(TIMEVAR_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) alloc-pool.h \\\n    $(BASIC_BLOCK_H) bitmap.h $(CFGLOOP_H) $(FIBHEAP_H) $(HASHTAB_H) \\\n    langhooks.h real.h $(TREE_GIMPLE_H) tree-inline.h tree-iterator.h\n@@ -1772,24 +1772,24 @@ tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    $(CFGLOOP_H) $(RTL_H) $(C_COMMON_H) tree-chrec.h $(TREE_DATA_REF_H) \\\n-   $(SCEV_H) tree-pass.h $(DIAGNOSTIC_H) errors.h $(TARGET_H) $(TREE_DUMP_H) \\\n+   $(SCEV_H) tree-pass.h $(DIAGNOSTIC_H) $(TARGET_H) $(TREE_DUMP_H) \\\n    $(VARRAY_H)\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(TREE_GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n-   errors.h tree-inline.h $(HASHTAB_H) pointer-set.h $(FLAGS_H) function.h \\\n+   tree-inline.h $(HASHTAB_H) pointer-set.h $(FLAGS_H) function.h \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n    tree-pass.h $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n    $(TREE_GIMPLE_H)\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) errors.h tree-inline.h \\\n-   $(FLAGS_H) function.h $(TM_H) $(TIMEVAR_H) tree-pass.h \\\n+   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) tree-inline.h \\\n+   $(FLAGS_H) function.h $(TM_H) $(TIMEVAR_H) tree-pass.h toplev.h \\\n    gt-tree-ssa-operands.h coretypes.h langhooks.h tree-ssa-opfinalize.h\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_H) $(FLAGS_H) function.h except.h langhooks.h \\\n    $(GGC_H) tree-pass.h coretypes.h $(TIMEVAR_H) $(TM_P_H) \\\n-   $(TREE_DUMP_H) tree-inline.h tree-iterator.h\n+   $(TREE_DUMP_H) tree-inline.h tree-iterator.h toplev.h\n tree-ssa-loop.o : tree-ssa-loop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n@@ -1841,52 +1841,52 @@ tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    function.h langhooks.h $(FLAGS_H) $(CGRAPH_H) tree-inline.h \\\n    tree-mudflap.h $(GGC_H) $(CGRAPH_H) tree-pass.h $(CFGLOOP_H) \\\n    $(BASIC_BLOCK_H) graph.h hard-reg-set.h\n-c-gimplify.o : c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) errors.h \\\n+c-gimplify.o : c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(C_TREE_H) $(C_COMMON_H) $(DIAGNOSTIC_H) $(TREE_GIMPLE_H) $(VARRAY_H) \\\n    $(FLAGS_H) langhooks.h toplev.h $(RTL_H) $(TREE_FLOW_H) $(LANGHOOKS_DEF_H) \\\n    $(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n    hard-reg-set.h $(TREE_DUMP_H) tree-inline.h\n-gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) errors.h \\\n+gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(DIAGNOSTIC_H) $(TREE_GIMPLE_H) tree-inline.h $(VARRAY_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h except.h $(FLAGS_H) $(RTL_H) function.h $(EXPR_H) output.h \\\n-   $(GGC_H) gt-gimplify.h $(HASHTAB_H) real.h $(TARGET_H)\n-gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) errors.h \\\n+   $(GGC_H) gt-gimplify.h $(HASHTAB_H) real.h $(TARGET_H) toplev.h\n+gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(DIAGNOSTIC_H) $(TREE_GIMPLE_H) tree-inline.h $(VARRAY_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    except.h $(FLAGS_H) $(RTL_H) function.h $(EXPR_H) tree-pass.h \\\n    $(HASHTAB_H) toplev.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) errors.h tree-inline.h $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n+   $(TREE_H) tree-inline.h $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    $(TM_H) coretypes.h\n tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   errors.h $(GGC_H) $(TREE_H) tree-chrec.h tree-pass.h $(PARAMS_H) \\\n+   $(GGC_H) $(TREE_H) tree-chrec.h tree-pass.h $(PARAMS_H) \\\n    $(DIAGNOSTIC_H) $(VARRAY_H)\n tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) errors.h $(GGC_H) $(TREE_H) $(RTL_H) \\\n+   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) tree-pass.h $(FLAGS_H) tree-chrec.h\n tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   errors.h $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_DATA_REF_H) $(SCEV_H) tree-pass.h tree-chrec.h\n tree-vect-analyze.o: tree-vect-analyze.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    tree-vectorizer.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) tree-chrec.h\n tree-vect-transform.o: tree-vect-transform.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) errors.h $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) \\\n+   coretypes.h $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(TIMEVAR_H) $(CFGLOOP_H) $(TARGET_H) tree-pass.h $(EXPR_H) \\\n    tree-vectorizer.h $(TREE_DATA_REF_H) $(SCEV_H) langhooks.h toplev.h \\\n    tree-chrec.h\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    tree-pass.h $(EXPR_H) tree-vectorizer.h $(TREE_DATA_REF_H) $(SCEV_H) \\\n    input.h $(TARGET_H) $(CFGLAYOUT_H) toplev.h tree-chrec.h\n tree-loop-linear.o: tree-loop-linear.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) errors.h $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    tree-pass.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) $(LAMBDA_H) \\\n    $(TARGET_H) tree-chrec.h $(VARRAY_H)\n@@ -1896,17 +1896,17 @@ tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n tree-gimple.o : tree-gimple.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(EXPR_H) \\\n    $(RTL_H) $(TREE_GIMPLE_H) $(TM_H) coretypes.h bitmap.h $(GGC_H) \\\n    output.h $(TREE_FLOW_H)\n-tree-mudflap.o : $(CONFIG_H) errors.h $(SYSTEM_H) $(TREE_H) tree-inline.h \\\n+tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) tree-inline.h \\\n    $(TREE_GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(CGRAPH_H) $(GGC_H) \\\n    gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) function.h hard-reg-set.h \\\n-   $(RTL_H) $(TM_P_H) $(TREE_FLOW_H)\n-tree-nomudflap.o : $(CONFIG_H) errors.h $(SYSTEM_H) $(TREE_H) tree-inline.h \\\n+   $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) toplev.h\n+tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) tree-inline.h \\\n    $(C_TREE_H) $(C_COMMON_H) $(TREE_GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    output.h $(VARRAY_H) langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n-   $(GGC_H) gt-tree-mudflap.h tree-pass.h\n+   $(GGC_H) gt-tree-mudflap.h tree-pass.h toplev.h\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n-   errors.h $(TREE_H) $(DIAGNOSTIC_H) real.h $(HASHTAB_H) $(TREE_FLOW_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) real.h $(HASHTAB_H) $(TREE_FLOW_H) \\\n    $(TM_H) coretypes.h tree-iterator.h tree-chrec.h langhooks.h\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) real.h toplev.h $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n@@ -1955,7 +1955,7 @@ rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(CONFIG_H)\n \n rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) real.h \\\n-  $(GGC_H) errors.h $(BCONFIG_H) insn-notes.def reg-notes.def\n+  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def toplev.h\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) real.h $(FLAGS_H) \\\n@@ -2098,16 +2098,16 @@ resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) real.h insn-config.h $(INSN_ATTR_H) $(RECOG_H) \\\n    $(BASIC_BLOCK_H) $(TM_P_H) function.h output.h\n-tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) errors.h $(TREE_H) \\\n+tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(TREE_GIMPLE_H)\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(DIAGNOSTIC_H) function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n    tree-ssa-propagate.h $(FLAGS_H) $(TARGET_H)\n-tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) errors.h $(TREE_H) $(RTL_H) \\\n+tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n     $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) tree-inline.h \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_GIMPLE_H) \\\n     langhooks.h tree-pass.h $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n@@ -2201,7 +2201,7 @@ loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n    output.h $(EXPR_H) coretypes.h $(TM_H) $(HASHTAB_H) $(RECOG_H) $(VARRAY_H) \\\n    $(OBSTACK_H)\n dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h errors.h $(OBSTACK_H)\n+   hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h $(OBSTACK_H) toplev.h\n et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    et-forest.h alloc-pool.h $(BASIC_BLOCK_H)\n combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -2223,9 +2223,9 @@ global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) reload.h function.h $(RECOG_H) $(REGS_H) hard-reg-set.h \\\n    insn-config.h output.h toplev.h $(TM_P_H) $(MACHMODE_H)\n varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) \\\n-   errors.h $(HASHTAB_H) $(BCONFIG_H) $(VARRAY_H)\n+   $(HASHTAB_H) $(BCONFIG_H) $(VARRAY_H) toplev.h\n vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) coretypes.h vec.h $(GGC_H) \\\n-   errors.h\n+   toplev.h\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) function.h real.h toplev.h \\\n@@ -2317,7 +2317,7 @@ lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h \\\n bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(CFGLAYOUT_H) $(FIBHEAP_H) \\\n    $(TARGET_H) function.h $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H) \\\n-   errors.h $(PARAMS_H)\n+   $(PARAMS_H) toplev.h\n tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h $(CFGLAYOUT_H) \\\n    $(FLAGS_H) $(TIMEVAR_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H)\n@@ -2338,9 +2338,9 @@ ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n lambda-mat.o : lambda-mat.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n    $(TM_H) coretypes.h $(TREE_H) $(VARRAY_H)\n lambda-trans.o: lambda-trans.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) coretypes.h errors.h $(TARGET_H) $(TREE_H) $(VARRAY_H)\n+   $(TM_H) coretypes.h $(TARGET_H) $(TREE_H) $(VARRAY_H)\n lambda-code.o: lambda-code.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   errors.h $(TM_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) coretypes.h $(TARGET_H) \\\n    tree-chrec.h tree-pass.h vec.h"}, {"sha": "2f7e1d8ef9bc46d6d0d94184ffa7e1c04bfac2eb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -1,3 +1,7 @@\n+2005-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* misc.c: Don't include errors.h.\n+\n 2005-05-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* raise.c (db): Add ATTRIBUTE_PRINTF_2."}, {"sha": "8d59496fd172baea14a00532f132b0b773d7392b", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -41,7 +41,6 @@\n #include \"tree.h\"\n #include \"real.h\"\n #include \"rtl.h\"\n-#include \"errors.h\"\n #include \"diagnostic.h\"\n #include \"expr.h\"\n #include \"libfuncs.h\""}, {"sha": "da5e4510209223ec9d1e81f9cab71f41a731ab1e", "filename": "gcc/basic-block.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -29,7 +29,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n #include \"vec.h\"\n-#include \"errors.h\"\n #include \"function.h\"\n \n /* Head of register set linked list.  */"}, {"sha": "e0cba445c674fce911557bfc6c99db47393ae66e", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -81,8 +81,8 @@\n #include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"expr.h\"\n-#include \"errors.h\"\n #include \"params.h\"\n+#include \"toplev.h\"\n \n /* The number of rounds.  In most cases there will only be 4 rounds, but\n    when partitioning hot and cold basic blocks into separate sections of"}, {"sha": "f7e87bf489e0ca12f9ded59f3830d4eb0d0d398b", "filename": "gcc/c-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-gimplify.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -29,7 +29,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"errors.h\"\n #include \"varray.h\"\n #include \"c-tree.h\"\n #include \"c-common.h\""}, {"sha": "c82c77b00473705e4a79427d8827c2f02b897c3b", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -43,7 +43,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"langhooks.h\"\n #include \"target.h\"\n #include \"tm_p.h\"\n-#include \"errors.h\"\n+#include \"toplev.h\"\n #include \"hashtab.h\"\n \n /* Darwin supports a feature called fix-and-continue, which is used"}, {"sha": "4fa46b4eed03536b46c1159b8caffa33b6fab223", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -31,7 +31,7 @@\n #include \"c-common.h\"\n #include \"c-pragma.h\"\n #include \"c-tree.h\"\n-#include \"errors.h\"\n+#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"langhooks.h\""}, {"sha": "00e3495d923a68f5ae070707b88b139cb3b2cf1e", "filename": "gcc/dominance.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -41,7 +41,7 @@\n #include \"hard-reg-set.h\"\n #include \"obstack.h\"\n #include \"basic-block.h\"\n-#include \"errors.h\"\n+#include \"toplev.h\"\n #include \"et-forest.h\"\n \n /* Whether the dominators and the postdominators are available.  */"}, {"sha": "388e87eb02b60960e63be53fe89666a8ec533be4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -1,3 +1,8 @@\n+2005-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fortran/trans-decl.c: Don't include errors.h.\n+\t* fortran/Make-lang.in: Updates dependencies.\n+\n 2005-05-31  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/18109"}, {"sha": "11fbc1de683f376c810eae25abfef84e59c30b31", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -284,7 +284,7 @@ fortran/f95-lang.o: $(GFORTRAN_TRANS_DEPS) fortran/mathbuiltins.def \\\n fortran/convert.o: $(GFORTRAN_TRANS_DEPS)\n fortran/trans.o: $(GFORTRAN_TRANS_DEPS)\n fortran/trans-decl.o: $(GFORTRAN_TRANS_DEPS) gt-fortran-trans-decl.h \\\n-  cgraph.h $(TARGET_H) function.h errors.h $(FLAGS_H) tree-gimple.h \\\n+  cgraph.h $(TARGET_H) function.h $(FLAGS_H) tree-gimple.h \\\n   tree-dump.h\n fortran/trans-types.o: $(GFORTRAN_TRANS_DEPS) gt-fortran-trans-types.h \\\n   real.h toplev.h $(TARGET_H)"}, {"sha": "9b2b669a5b262ee6c2def488bcb43e0ad88a4b2a", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -32,7 +32,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tm.h\"\n #include \"target.h\"\n #include \"function.h\"\n-#include \"errors.h\"\n #include \"flags.h\"\n #include \"cgraph.h\"\n #include \"gfortran.h\""}, {"sha": "e56efca4f858aaa25f49d18fa0c575bfae2c9bc8", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -25,7 +25,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n-#include \"errors.h\"\n #include \"varray.h\"\n #include \"tree-gimple.h\"\n #include \"tree-inline.h\""}, {"sha": "02da99b5672259cb51e17989add217e97f200d48", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -27,7 +27,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n-#include \"errors.h\"\n #include \"varray.h\"\n #include \"tree-gimple.h\"\n #include \"tree-inline.h\"\n@@ -45,6 +44,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"output.h\"\n #include \"expr.h\"\n #include \"ggc.h\"\n+#include \"toplev.h\"\n #include \"target.h\"\n \n static struct gimplify_ctx"}, {"sha": "43dec17af1693606862042e1c98accff138834ee", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -1,3 +1,8 @@\n+2005-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* java/verify-glue.c: Don't include errors.h and include toplev.h.\n+\t* java/Make-lang.in: Updates dependencies.\n+\n 2005-05-26  Ranjit Mathew  <rmathew@hotmail.com>\n \n \tPR java/19870."}, {"sha": "31bb323f668f049a7215532b30aa619b8f9def9d", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -353,7 +353,7 @@ java/verify.o: java/verify.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n   java/javaop.h java/java-opcodes.h java/java-except.h toplev.h $(SYSTEM_H) \\\n   coretypes.h $(TM_H)\n java/verify-glue.o: java/verify-glue.c $(CONFIG_H) $(SYSTEM_H) $(JAVA_TREE_H) \\\n-  coretypes.h $(TM_H) java/verify.h\n+  coretypes.h $(TM_H) java/verify.h toplev.h\n java/verify-impl.o: java/verify-impl.c $(CONFIG_H) java/verify.h $(SYSTEM_H) \\\n   coretypes.h  java/jcf.h $(JAVA_TREE_H)\n java/zextract.o: java/zextract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\"}, {"sha": "e743f98e8c1df375cd109f686b4cf5ec268a0bab", "filename": "gcc/java/verify-glue.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fjava%2Fverify-glue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fjava%2Fverify-glue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-glue.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -30,12 +30,12 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"errors.h\"\n #include \"parse.h\"\n \n #include \"verify.h\"\n #include \"java-tree.h\"\n #include \"java-except.h\"\n+#include \"toplev.h\"\n \n void *\n vfy_alloc (size_t bytes)"}, {"sha": "aeba13e062988f5c24b2995aa38e6f7053e08261", "filename": "gcc/lambda-code.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Flambda-code.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Flambda-code.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-code.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"target.h\""}, {"sha": "a3a11f190cac3cb16dbcb58c3d1418d5b60da1d2", "filename": "gcc/lambda-trans.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Flambda-trans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Flambda-trans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-trans.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"target.h\""}, {"sha": "0c46c6066c028197b2eb3c1841de992b5e3d96e6", "filename": "gcc/rtl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -33,7 +33,11 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"rtl.h\"\n #include \"real.h\"\n #include \"ggc.h\"\n-#include \"errors.h\"\n+#ifdef GENERATOR_FILE\n+# include \"errors.h\"\n+#else\n+# include \"toplev.h\"\n+#endif\n \n \f\n /* Indexed by rtx code, gives number of operands for an rtx with that code."}, {"sha": "f07cf968fcec8d1edce778c53afd9757f5f01b92", "filename": "gcc/tree-browser.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-browser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-browser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-browser.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"tree.h\"\n #include \"tree-inline.h\"\n #include \"diagnostic.h\""}, {"sha": "2776f21600a945dc344934d7bb0281bc368620b6", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "335bc7c6f3a564f74fffd329e464c5ae109b43a8", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -28,7 +28,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\""}, {"sha": "c1fdb8ff53a56063ba21fe77348b7692a52ceb98", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -78,7 +78,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n "}, {"sha": "7f205c4354d9f2b63bea0b600febba42baf10fd8", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"timevar.h\"\n #include \"expr.h\"\n #include \"ggc.h\""}, {"sha": "bbe06721f755d39806a3f8584c5c1aeb766844d5", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -36,6 +36,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"timevar.h\"\n #include \"langhooks.h\"\n #include \"ggc.h\"\n+#include \"toplev.h\"\n \n \f\n /* Nonzero if we are using EH to handle cleanups.  */"}, {"sha": "8b940ca8bf49a2b4cb31d68089160c8f3fdea991", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -84,7 +84,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n #include \"flags.h\""}, {"sha": "7a50f73f2591fbe71600283699838a4952fbf946", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "741c95df4d234f5bf595c00103108f42c9316578", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -24,7 +24,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"target.h\""}, {"sha": "0234c5976e63e2d0407d8fb8f714ea99d33b1433", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -22,7 +22,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n \n #include \"config.h\"\n-#include \"errors.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n@@ -45,6 +44,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"langhooks.h\"\n #include \"ggc.h\"\n #include \"cgraph.h\"\n+#include \"toplev.h\"\n \n /* Internal function decls */\n "}, {"sha": "00ebd6d6858cfedd8e84f9880b29eca1f9a297a4", "filename": "gcc/tree-nomudflap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-nomudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-nomudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nomudflap.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -21,7 +21,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n \n #include \"config.h\"\n-#include \"errors.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n@@ -38,6 +37,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tree-mudflap.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\"\n+#include \"toplev.h\"\n \n \n "}, {"sha": "a32ecf683414cbc2a73ae74642c0cbb8dc123b78", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -32,7 +32,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n@@ -46,6 +45,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree-dump.h\"\n #include \"tree-ssa-live.h\"\n #include \"tree-pass.h\"\n+#include \"toplev.h\"\n \n /* Flags to pass to remove_ssa_form.  */\n "}, {"sha": "86649458f005d3092399f53f5d31080822568f0b", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n #include \"real.h\""}, {"sha": "82cbc2f6b82d1fada2f02d8c0539bc309676a4da", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -235,7 +235,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n "}, {"sha": "973f84c12ebd9e042e808d0cedc719a2e00e60b6", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -25,7 +25,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n "}, {"sha": "4068f4bd718e62c07203221076f92bb879840bdd", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -199,7 +199,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "c096a711e25196282119ddbaee15ddc3ad36cf84", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "65c85eb54e9cd7ac6a682f93ec3ac1f0abd13f57", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -47,7 +47,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n \n /* These RTL headers are needed for basic-block.h.  */"}, {"sha": "8e79a46e17ff77591790f7d999ebd2a10dfec6f0", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "19b93f7b3d359f9ac2556d7bf08caed6f1d881cf", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -22,7 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"rtl.h\""}, {"sha": "754f0821c061753c7b5e13c6ed66fa7125a12693", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -22,7 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"rtl.h\""}, {"sha": "886a9eba0ab18a7bbb039be2dc18cfb751eb2aee", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -37,7 +37,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"hashtab.h\"\n #include \"tree-dump.h\"\n #include \"tree-ssa-live.h\"\n-#include \"errors.h\"\n+#include \"toplev.h\"\n \n static void live_worklist (tree_live_info_p, int *, int);\n static tree_live_info_p new_tree_live_info (var_map);"}, {"sha": "83ec21b949714795e2884372f0d82cb50cd38db4", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -26,12 +26,12 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n-#include \"errors.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\"\n #include \"timevar.h\"\n+#include \"toplev.h\"\n \n #include \"langhooks.h\"\n "}, {"sha": "bf532220ad1fbdca297121b65a3a1e614256f153", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -22,7 +22,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"rtl.h\""}, {"sha": "6ec3cdc194b975fd90c071e2b53469342d3124c5", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\""}, {"sha": "f272aa54b4bf37f29747d61570def0231c4d5f20", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -30,7 +30,6 @@\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "6bd77ab9f95e74236f427df9b6945c691f36605b", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\""}, {"sha": "25f6cdfdc020e620a1d69c3555ebcef96f85925b", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "38130604b8554146fe5f6c225b2735c1fc269d53", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\""}, {"sha": "4a4da1c90ed4dbe86f4cd7c272dff87946c26026", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"errors.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"diagnostic.h\"\n@@ -45,6 +44,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"hashtab.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\"\n+#include \"toplev.h\"\n \n /* Remove the corresponding arguments from the PHI nodes in E's\n    destination block and redirect it to DEST.  Return redirected edge."}, {"sha": "4d2058f9371b6922cef075db2d29375b4d7042d6", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\""}, {"sha": "97d338441b38d961bcc3268e9ed39461c0169d77", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,7 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"target.h\""}, {"sha": "c8985b94a400aa2962c74bd921d3e3156e3434c8", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -124,7 +124,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"target.h\""}, {"sha": "b0d3f002fa2cbd67c0c8106d185a31a46653c4cb", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -1,3 +1,9 @@\n+2005-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* treelang/lex.l, treelang/parse.y: Don't include errors.h and\n+\tinclude toplev.h.\n+\t* treelang/Make-lang.in: Updates dependencies.\n+\n 2005-05-02  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR treelang/21345"}, {"sha": "bb170b554ad5883abaf35ec715dcd554087226c5", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -116,11 +116,12 @@ treelang/spec.o: treelang/spec.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h diagnostic.h $(TREE_H) flags.h toplev.h langhooks.h $(TM_H)\n \n treelang/parse.o: treelang/parse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) diagnostic.h treelang/treelang.h input.h treelang/treetree.h\n+  $(TM_H) diagnostic.h treelang/treelang.h input.h treelang/treetree.h \\\n+  toplev.h\n \n treelang/lex.o: treelang/lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) diagnostic.h $(TREE_H) treelang/treelang.h input.h \\\n-  treelang/parse.h\n+  treelang/parse.h toplev.h\n \n # generated files the files from lex and yacc are put into the source\n # directory in case someone wants to build but does not have"}, {"sha": "9e4943046b82e78882016d99c27b9a55746869c3", "filename": "gcc/treelang/lex.l", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2Flex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2Flex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Flex.l?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -37,13 +37,13 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"input.h\"\n-#include \"errors.h\"\n #include \"tree.h\"\n \n /* Token defs.  */\n #include \"treelang.h\"\n #include \"parse.h\"\n #include \"treetree.h\"\n+#include \"toplev.h\"\n \n extern int option_lexer_trace;\n "}, {"sha": "fe1d9b162071fb86331ada201de91dadb0847f2d", "filename": "gcc/treelang/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Ftreelang%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Fparse.y?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -39,11 +39,11 @@ the GCC compiler.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n #include \"timevar.h\"\n \n #include \"treelang.h\"\n #include \"treetree.h\"\n+#include \"toplev.h\"\n \n #define YYDEBUG 1\n #define YYPRINT(file, type, value) print_token (file, type, value) "}, {"sha": "ee3d76d3910a1e9b058b39140af03d9d454b5e3c", "filename": "gcc/varray.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -31,7 +31,11 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"errors.h\"\n+#ifdef GENERATOR_FILE\n+# include \"errors.h\"\n+#else\n+# include \"toplev.h\"\n+#endif\n #include \"varray.h\"\n #include \"ggc.h\"\n #include \"hashtab.h\""}, {"sha": "225cfb1545caef114fb668d6d46d50792cb9f955", "filename": "gcc/vec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fvec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c714dd4a6abb732bde7d33d4660347ec0d0b897/gcc%2Fvec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.c?ref=4c714dd4a6abb732bde7d33d4660347ec0d0b897", "patch": "@@ -23,9 +23,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"ggc.h\"\n #include \"vec.h\"\n-#include \"errors.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"toplev.h\"\n \n struct vec_prefix \n {"}]}