{"sha": "881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "node_id": "C_kwDOANBUbNoAKDg4MWJmOGRlOWIwN2ZiNTAxZDYxYWRlOGY1MjFmMWNjOWRiZTcxMmU", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2023-01-10T18:40:56Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2023-02-01T14:26:02Z"}, "message": "Ranger cache - always use range_from_dom when updating.\n\nWhen updating an existing range, if we dont query the dom tree, we can\nget the global range instead of a proper range on some incoming edges\nwhich cause the range to not be refined properly.\n\n\tPR tree-optimization/108356\n\tgcc/\n\t* gimple-range-cache.cc (ranger_cache::range_on_edge): Always\n\tdo a search of the DOM tree for a range.\n\n\tgcc/testsuite/\n\t* gcc.dg/pr108356.c: New.", "tree": {"sha": "3f35bf8091bc25b3d8158f905efa69a77b02b210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f35bf8091bc25b3d8158f905efa69a77b02b210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881bf8de9b07fb501d61ade8f521f1cc9dbe712e/comments", "author": null, "committer": null, "parents": [{"sha": "78589691ee158e689fa9bb7dec1165da475ea634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78589691ee158e689fa9bb7dec1165da475ea634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78589691ee158e689fa9bb7dec1165da475ea634"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "20c444bc4f4fd492b661f744c8ca682fa0804043", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881bf8de9b07fb501d61ade8f521f1cc9dbe712e/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881bf8de9b07fb501d61ade8f521f1cc9dbe712e/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "patch": "@@ -998,7 +998,7 @@ bool\n ranger_cache::range_on_edge (vrange &r, edge e, tree expr)\n {\n   if (gimple_range_ssa_p (expr))\n-    return edge_range (r, e, expr, RFD_NONE);\n+    return edge_range (r, e, expr, RFD_READ_ONLY);\n   return get_tree_range (r, expr, NULL);\n }\n "}, {"sha": "1df6b278e45dc3f37b199b0accd7bbbe440889d3", "filename": "gcc/testsuite/gcc.dg/pr108356.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881bf8de9b07fb501d61ade8f521f1cc9dbe712e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108356.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881bf8de9b07fb501d61ade8f521f1cc9dbe712e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108356.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108356.c?ref=881bf8de9b07fb501d61ade8f521f1cc9dbe712e", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+char a;\n+static char c = 3;\n+char d;\n+void foo();\n+short(b)(short e, short f) { return e + f; }\n+int main() {\n+  unsigned g = 0;\n+  if (c)\n+    ;\n+  else\n+    foo();\n+  for (; g < 2; g = b(g, 2)) {\n+    d = g ? 0 : a;\n+    if (g)\n+      c = 0;\n+  }\n+}\n+\n+\n+/* { dg-final { scan-tree-dump-not \"foo\" \"optimized\" } } */"}]}