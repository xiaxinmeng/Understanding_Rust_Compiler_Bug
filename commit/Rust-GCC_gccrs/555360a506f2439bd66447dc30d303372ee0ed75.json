{"sha": "555360a506f2439bd66447dc30d303372ee0ed75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU1MzYwYTUwNmYyNDM5YmQ2NjQ0N2RjMzBkMzAzMzcyZWUwZWQ3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-03-02T13:50:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-03-02T13:50:15Z"}, "message": "[multiple changes]\n\n2004-03-02  Emmanuel Briot  <briot@act-europe.fr>\n\n\t* ali.adb (Read_Instantiation_Instance): Do not modify the\n\tcurrent_file_num when reading information about instantiations, since\n\tthis corrupts files in later references.\n\n2004-03-02  Vincent Celier  <celier@gnat.com>\n\n\t* bcheck.adb (Check_Consistency): Get the full path of an ALI file\n\tbefore checking if it is read-only.\n\n\t* bld.adb (Recursive_Process): Concatenate <PROJECT>.src_dirs in front\n\tof SRC_DIRS and eliminate duplicates.\n\n\t* gprcmd.adb: Replace command \"path\" with command \"path_sep\" to return\n\tthe path separator.\n\t(Usage): Document path_sep\n\n\t* Makefile.generic: For Ada and GNU C++ cases, link directly with the\n\tC++ compiler. No need for a script.\n\tReplace use of C*_INCLUDE_PATH env var for GCC compilers with CPATH.\n\tDo not call gprcmd to build the C*_INCLUDE_PATHs, do it with function\n\tsubst.\n\n\t* prj-env.adb (For_All_Source_Dirs): Only add source dirs in project\n\twhere there are Ada sources.\n\t(Set_Ada_Paths): Only add to the include path the source dirs of project\n\twith Ada sources.\n\t(Add_To_Path): Add the Display_Values of the directories, not their\n\tValues.\n\n\t* prj-nmsc.adb (Find_Sources): Set flag Sources_Present in the project\n\tdata.\n\n\t* prj-nmsc.adb (Add_ALI_For): Make sure that the element Display_Value\n\tis not No_Name.\n\t(Find_Source_Dirs): Set Display_Value to a non canonicalized value, only\n\tValue is canonicalized.\n\t(Language_Independent_Check): Do not copy Value to Display_Value when\n\tcanonicalizing Value.\n\n\t* prj-part.adb (Post_Parse_Context_Clause): Compare canonical cased\n\tpath to find limited with cycles.\n\t(Parse_Single_Project): Use canonical cased path to find the end of a\n\twith cycle.\n\n2004-03-02  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch10.adb (Optional_Subunit): Verify that unit contains a subunit\n\tand not a child unit.\n\n\t* sinfo.ads, sinfo.adb: Rearrange flags so that Private_Present can\n\tappear in a with_clause.\n\n\t* decl.c (gnat_to_gnu_type): If entity is a generic type, which can\n\tonly happen in type_annotate mode, do not try to elaborate it.\n\n\t* exp_util.adb (Force_Evaluation): If expression is a selected\n\tcomponent on the left of an assignment, use a renaming rather than a\n\ttemporary to remove side effects.\n\n\t* freeze.adb (Freeze_Entity): Do not freeze a global entity within an\n\tinlined instance body, which is analyzed before the end of the\n\tenclosing scope.\n\n2004-03-02  Robert Dewar  <dewar@gnat.com>\n\n\t* par-ch10.adb, par-ch3.adb, par-ch4.adb, scng.adb,\n\tsem_ch4.adb: Use new feature for substitution of keywords in VMS\n\n\t* errout.ads, errout.adb: Implement new circuit for substitution of\n\tkeywords in VMS.\n\n\t* sem_case.adb (Analyze_Choices): Place message properly when case is\n\ta subtype reference rather than an explicit range.\n\n\t* sem_elim.adb, s-tpobop.ads, exp_ch2.adb: Minor reformatting\n\n2004-03-02  Doug Rupp  <rupp@gnat.com>\n\n\t* init.c (__gnat_initialize)[VMS]: Resignal RDB-E-STREAM_EOF.\n\n2004-03-02  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* s-tporft.adb: Add missing locking around call to Initialize_ATCB.\n\n2004-03-02  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* utils.c (finish_record_type): Do not set DECL_NONADDRESSABLE for a\n\tBLKmode bitfield.\n\nFrom-SVN: r78758", "tree": {"sha": "ffca003370276e7fdf11cb7188a875852481cff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffca003370276e7fdf11cb7188a875852481cff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/555360a506f2439bd66447dc30d303372ee0ed75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/555360a506f2439bd66447dc30d303372ee0ed75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/555360a506f2439bd66447dc30d303372ee0ed75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/555360a506f2439bd66447dc30d303372ee0ed75/comments", "author": null, "committer": null, "parents": [{"sha": "c24938d49f6373ddbf29927e3bdacdf633a01ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24938d49f6373ddbf29927e3bdacdf633a01ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c24938d49f6373ddbf29927e3bdacdf633a01ab4"}], "stats": {"total": 784, "additions": 510, "deletions": 274}, "files": [{"sha": "20f8dbb8e123acb8e4b692511854e9ea533c3210", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -1,3 +1,94 @@\n+2004-03-02  Emmanuel Briot  <briot@act-europe.fr>\n+\n+\t* ali.adb (Read_Instantiation_Instance): Do not modify the\n+\tcurrent_file_num when reading information about instantiations, since\n+\tthis corrupts files in later references.\n+\n+2004-03-02  Vincent Celier  <celier@gnat.com>\n+\n+\t* bcheck.adb (Check_Consistency): Get the full path of an ALI file\n+\tbefore checking if it is read-only.\n+\n+\t* bld.adb (Recursive_Process): Concatenate <PROJECT>.src_dirs in front\n+\tof SRC_DIRS and eliminate duplicates.\n+\n+\t* gprcmd.adb: Replace command \"path\" with command \"path_sep\" to return\n+\tthe path separator.\n+\t(Usage): Document path_sep\n+\n+\t* Makefile.generic: For Ada and GNU C++ cases, link directly with the\n+\tC++ compiler. No need for a script.\n+\tReplace use of C*_INCLUDE_PATH env var for GCC compilers with CPATH.\n+\tDo not call gprcmd to build the C*_INCLUDE_PATHs, do it with function\n+\tsubst.\n+\n+\t* prj-env.adb (For_All_Source_Dirs): Only add source dirs in project\n+\twhere there are Ada sources.\n+\t(Set_Ada_Paths): Only add to the include path the source dirs of project\n+\twith Ada sources.\n+\t(Add_To_Path): Add the Display_Values of the directories, not their\n+\tValues.\n+\n+\t* prj-nmsc.adb (Find_Sources): Set flag Sources_Present in the project\n+\tdata.\n+\n+\t* prj-nmsc.adb (Add_ALI_For): Make sure that the element Display_Value\n+\tis not No_Name.\n+\t(Find_Source_Dirs): Set Display_Value to a non canonicalized value, only\n+\tValue is canonicalized.\n+\t(Language_Independent_Check): Do not copy Value to Display_Value when\n+\tcanonicalizing Value.\n+\n+\t* prj-part.adb (Post_Parse_Context_Clause): Compare canonical cased\n+\tpath to find limited with cycles.\n+\t(Parse_Single_Project): Use canonical cased path to find the end of a\n+\twith cycle.\n+\n+2004-03-02  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch10.adb (Optional_Subunit): Verify that unit contains a subunit\n+\tand not a child unit.\n+\n+\t* sinfo.ads, sinfo.adb: Rearrange flags so that Private_Present can\n+\tappear in a with_clause.\n+\n+\t* decl.c (gnat_to_gnu_type): If entity is a generic type, which can\n+\tonly happen in type_annotate mode, do not try to elaborate it.\n+\n+\t* exp_util.adb (Force_Evaluation): If expression is a selected\n+\tcomponent on the left of an assignment, use a renaming rather than a\n+\ttemporary to remove side effects.\n+\n+\t* freeze.adb (Freeze_Entity): Do not freeze a global entity within an\n+\tinlined instance body, which is analyzed before the end of the\n+\tenclosing scope.\n+\n+2004-03-02  Robert Dewar  <dewar@gnat.com>\n+\n+\t* par-ch10.adb, par-ch3.adb, par-ch4.adb, scng.adb,\n+\tsem_ch4.adb: Use new feature for substitution of keywords in VMS\n+\n+\t* errout.ads, errout.adb: Implement new circuit for substitution of\n+\tkeywords in VMS.\n+\n+\t* sem_case.adb (Analyze_Choices): Place message properly when case is\n+\ta subtype reference rather than an explicit range.\n+\n+\t* sem_elim.adb, s-tpobop.ads, exp_ch2.adb: Minor reformatting\n+\n+2004-03-02  Doug Rupp  <rupp@gnat.com>\n+\n+\t* init.c (__gnat_initialize)[VMS]: Resignal RDB-E-STREAM_EOF.\n+\n+2004-03-02  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* s-tporft.adb: Add missing locking around call to Initialize_ATCB.\n+\n+2004-03-02  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* utils.c (finish_record_type): Do not set DECL_NONADDRESSABLE for a\n+\tBLKmode bitfield.\n+\n 2004-02-25  Robert Dewar  <dewar@gnat.com>\n \n \t* 51osinte.ads, 52osinte.ads, 53osinte.ads, 54osinte.ads,"}, {"sha": "a678d2416509e79e56c5d3a714d0d73382f8e0c8", "filename": "gcc/ada/Makefile.generic", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2FMakefile.generic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2FMakefile.generic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.generic?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -230,20 +230,16 @@ ifeq ($(filter c++,$(LANGUAGES)),c++)\n \n    ifeq ($(filter ada,$(LANGUAGES)),ada)\n       # C++ and Ada mixed\n-      LINKER = $(OBJ_DIR)/c++linker\n       LARGS = --LINK=$(LINKER)\n \n       ifeq ($(strip $(filter-out %gcc %g++,$(CXX))),)\n-         # Case of GNU C++ and GNAT\n-\n-$(LINKER): Makefile.$(PROJECT_BASE)\n-\t@echo \\#!/bin/sh > $(LINKER)\n-\t@echo unset BINUTILS_ROOT >> $(LINKER)\n-\t@echo unset GCC_ROOT >> $(LINKER)\n-\t@echo $(CXX) $$\\* >> $(LINKER)\n-\t@chmod +x $(LINKER)\n+         # Case of GNAT and a GNU C++ compiler\n+$(LINKER):\n \n       else\n+         # Case of GNAT and a non GNU C++ compiler\n+         LINKER = $(OBJ_DIR)/c++linker\n+\n $(LINKER): Makefile.$(PROJECT_BASE)\n \t@echo \\#!/bin/sh > $(LINKER)\n \t@echo $(CXX) $$\\* $(shell gcc -print-libgcc-file-name) >> $(LINKER)\n@@ -399,10 +395,13 @@ endif\n \n ifeq ($(strip $(filter-out %gcc %g++,$(CC) $(CXX))),)\n # Compiler is GCC, take avantage of the preprocessor option -MD and\n-# C*_INCLUDE_PATH environment variables\n+# the CPATH environment variable\n \n-export C_INCLUDE_PATH:=$(shell gprcmd path $(SRC_DIRS))$(C_INCLUDE_PATH)\n-export CXX_INCLUDE_PATH:=$(shell gprcmd path $(SRC_DIRS))$(CXX_INCLUDE_PATH)\n+empty:=\n+space:=$(empty) $(empty)\n+path_sep:=$(shell gprcmd path_sep)\n+SRC_DIRS_PATH:= $(subst $(space),$(path_sep),$(SRC_DIRS))\n+export CPATH:=$(SRC_DIRS_PATH)$(path_sep)$(CPATH)\n \n DEP_CFLAGS = -Wp,-MD,$(OBJ_DIR)/$(*F).d\n "}, {"sha": "9561a11b143cf2a626f5b8b8709a64e7a1f0a46b", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -1811,6 +1811,8 @@ package body ALI is\n                   ----------------------------------\n \n                   procedure Read_Instantiation_Reference is\n+                     Local_File_Num : Sdep_Id := Current_File_Num;\n+\n                   begin\n                      Xref.Increment_Last;\n \n@@ -1824,12 +1826,12 @@ package body ALI is\n                         if Nextc = '|' then\n                            XR.File_Num :=\n                              Sdep_Id (N + Nat (First_Sdep_Entry) - 1);\n-                           Current_File_Num := XR.File_Num;\n+                           Local_File_Num := XR.File_Num;\n                            P := P + 1;\n                            N := Get_Nat;\n \n                         else\n-                           XR.File_Num := Current_File_Num;\n+                           XR.File_Num := Local_File_Num;\n                         end if;\n \n                         XR.Line  := N;"}, {"sha": "16aeb8589ea01defdb16c7ee605ecb44d08fd5aa", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -572,6 +572,8 @@ package body Bcheck is\n       Src : Source_Id;\n       --  Source file Id for this Sdep entry\n \n+      ALI_Path_Id : Name_Id;\n+\n    begin\n       --  First, we go through the source table to see if there are any cases\n       --  in which we should go after source files and compute checksums of\n@@ -655,18 +657,17 @@ package body Bcheck is\n                   end if;\n \n                else\n-                  if Osint.Is_Readonly_Library (ALIs.Table (A).Afile) then\n-                     Error_Msg_Name_2 :=\n-                       Osint.Find_File ((ALIs.Table (A).Afile), Osint.Library);\n-\n+                  ALI_Path_Id :=\n+                    Osint.Find_File ((ALIs.Table (A).Afile), Osint.Library);\n+                  if Osint.Is_Readonly_Library (ALI_Path_Id) then\n                      if Tolerate_Consistency_Errors then\n                         Error_Msg (\"?% should be recompiled\");\n-                        Error_Msg_Name_1 := Error_Msg_Name_2;\n+                        Error_Msg_Name_1 := ALI_Path_Id;\n                         Error_Msg (\"?(% is obsolete and read-only)\");\n \n                      else\n                         Error_Msg (\"% must be compiled\");\n-                        Error_Msg_Name_1 := Error_Msg_Name_2;\n+                        Error_Msg_Name_1 := ALI_Path_Id;\n                         Error_Msg (\"(% is obsolete and read-only)\");\n                      end if;\n "}, {"sha": "a39076be834bcb5b23a8ed0dd673bc841cb29801", "filename": "gcc/ada/bld.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fbld.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fbld.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbld.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -3120,11 +3120,14 @@ package body Bld is\n                   end if;\n                end if;\n \n-               --  Add source dirs of this project file to variable SRC_DIRS\n+               --  Add source dirs of this project file to variable SRC_DIRS.\n+               --  Put them in front, and remove duplicates.\n \n-               Put (\"SRC_DIRS:=$(SRC_DIRS) $(\");\n+               Put (\"SRC_DIRS:=$(\");\n                Put (Uname);\n-               Put (\".src_dirs)\");\n+               Put (\".src_dirs) $(filter-out $(\");\n+               Put (Uname);\n+               Put (\".src_dirs),$(SRC_DIRS))\");\n                New_Line;\n \n                --  Set OBJ_DIR to the object directory"}, {"sha": "f7e55f3b5090fc2e3fe3681013bf195f0fc64824", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -114,6 +114,10 @@ gnat_to_gnu_type (Entity_Id gnat_entity)\n {\n   tree gnu_decl;\n \n+  /* The back end never attempts to annotate generic types */\n+  if (Is_Generic_Type (gnat_entity) && type_annotate_only)\n+     return void_type_node;\n+\n   /* Convert the ada entity type into a GCC TYPE_DECL node.  */\n   gnu_decl = gnat_to_gnu_entity (gnat_entity, NULL_TREE, 0);\n   if (TREE_CODE (gnu_decl) != TYPE_DECL)"}, {"sha": "ed5ad56745e2eb750d40d52de672c461a4e51fd2", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -37,6 +37,7 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Erroutc;  use Erroutc;\n with Fname;    use Fname;\n+with Hostparm; use Hostparm;\n with Lib;      use Lib;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -187,6 +188,14 @@ package body Errout is\n    --  'Class appended to its name (see Add_Class procedure), and is\n    --  otherwise unchanged.\n \n+   procedure VMS_Convert;\n+   --  This procedure has no effect if called when the host is not OpenVMS.\n+   --  If the host is indeed OpenVMS, then the error message stored in\n+   --  Msg_Buffer is scanned for appearences of switch names which need\n+   --  converting to corresponding VMS qualifer names. See Gnames/Vnames\n+   --  table in Errout spec for precise definition of the conversion that\n+   --  is performed by this routine in OpenVMS mode.\n+\n    -----------------------\n    -- Change_Error_Text --\n    -----------------------\n@@ -2258,6 +2267,8 @@ package body Errout is\n                Set_Msg_Char (C);\n          end case;\n       end loop;\n+\n+      VMS_Convert;\n    end Set_Msg_Text;\n \n    ----------------\n@@ -2485,4 +2496,53 @@ package body Errout is\n       end if;\n    end Unwind_Internal_Type;\n \n+   -----------------\n+   -- VMS_Convert --\n+   -----------------\n+\n+   procedure VMS_Convert is\n+      P : Natural;\n+      L : Natural;\n+      N : Natural;\n+\n+   begin\n+      if not OpenVMS then\n+         return;\n+      end if;\n+\n+      P := Msg_Buffer'First;\n+      loop\n+         if P >= Msglen then\n+            return;\n+         end if;\n+\n+         if Msg_Buffer (P) = '-' then\n+            for G in Gnames'Range loop\n+               L := Gnames (G)'Length;\n+\n+               --  See if we have \"-ggg switch\", where ggg is Gnames entry\n+\n+               if P + L + 7 <= Msglen\n+                 and then Msg_Buffer (P + 1 .. P + L) = Gnames (G).all\n+                 and then Msg_Buffer (P + L + 1 .. P + L + 7) = \" switch\"\n+               then\n+                  --  Replace by \"/vvv qualifier\", where vvv is Vnames entry\n+\n+                  N := Vnames (G)'Length;\n+                  Msg_Buffer (P + N + 11 .. Msglen + N - L + 3) :=\n+                    Msg_Buffer (P + L + 8 .. Msglen);\n+                  Msg_Buffer (P) := '/';\n+                  Msg_Buffer (P + 1 .. P + N) := Vnames (G).all;\n+                  Msg_Buffer (P + N + 1 .. P + N + 10) := \" qualifier\";\n+                  P := P + N + 10;\n+                  Msglen := Msglen + N - L + 3;\n+                  exit;\n+               end if;\n+            end loop;\n+         end if;\n+\n+         P := P + 1;\n+      end loop;\n+   end VMS_Convert;\n+\n end Errout;"}, {"sha": "75ebfe908a6ee6f2d55867c9777ea33518562420", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -276,6 +276,43 @@ package Errout is\n    --      to be non-serious, and does not cause Serious_Errors_Detected\n    --      to be incremented (so expansion is not prevented by such a msg).\n \n+   ----------------------------------------\n+   -- Specialization of Messages for VMS --\n+   ----------------------------------------\n+\n+   --  Some messages mention gcc-style switch names. When using an OpenVMS\n+   --  host, such switch names must be converted to their corresponding VMS\n+   --  qualifer. The following table controls this translation. In each case\n+   --  the original message must contain the string \"-xxx switch\", where xxx\n+   --  is the Gname? entry from below, and this string will be replaced by\n+   --  \"/yyy qualifier\", where yyy is the corresponding Vname? entry.\n+\n+   Gname1 : aliased constant String := \"fno-strict-aliasing\";\n+   Vname1 : aliased constant String := \"OPTIMIZE=NO_ALIASING\";\n+\n+   Gname2 : aliased constant String := \"gnatX\";\n+   Vname2 : aliased constant String := \"EXTENSIONS_ALLOWED\";\n+\n+   Gname3 : aliased constant String := \"gnatW\";\n+   Vname3 : aliased constant String := \"WIDE_CHARACTER_ENCODING\";\n+\n+   Gname4 : aliased constant String := \"gnatf\";\n+   Vname4 : aliased constant String := \"REPORT_ERRORS=FULL\";\n+\n+   type Cstring_Ptr is access constant String;\n+\n+   Gnames : array (Nat range <>) of Cstring_Ptr :=\n+              (Gname1'Access,\n+               Gname2'Access,\n+               Gname3'Access,\n+               Gname4'Access);\n+\n+   Vnames : array (Nat range <>) of Cstring_Ptr :=\n+              (Vname1'Access,\n+               Vname2'Access,\n+               Vname3'Access,\n+               Vname4'Access);\n+\n    -----------------------------------------------------\n    -- Global Values Used for Error Message Insertions --\n    -----------------------------------------------------"}, {"sha": "bc8c2ff0d4f2e7ddf2d95ed6df22e146c81acd77", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -695,6 +695,7 @@ package body Exp_Ch2 is\n    --  where rec is a selector whose Entry_Formal link points to the formal\n    --  For a formal of a task entity, the formal is rewritten as a local\n    --  renaming.\n+\n    --  In addition, a formal that is marked volatile because it is aliased\n    --  through an address clause is rewritten as dereference as well.\n "}, {"sha": "d79ec31e527d7da4823a4019f1461967f28af555", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -1320,8 +1320,41 @@ package body Exp_Util is\n    ----------------------\n \n    procedure Force_Evaluation (Exp : Node_Id; Name_Req : Boolean := False) is\n+      Component_In_Lhs : Boolean := False;\n+      Par              : Node_Id;\n+\n    begin\n-      Remove_Side_Effects (Exp, Name_Req, Variable_Ref => True);\n+      --  Loop to determine whether there is a component reference in\n+      --  the left hand side if this appears on the left side of an\n+      --  assignment statement. Needed to determine if form of result\n+      --  must be a variable.\n+\n+      Par := Exp;\n+      while Present (Par)\n+        and then Nkind (Par) = N_Selected_Component\n+      loop\n+         if Nkind (Parent (Par)) = N_Assignment_Statement\n+           and then Par = Name (Parent (Par))\n+         then\n+            Component_In_Lhs := True;\n+            exit;\n+         else\n+            Par := Parent (Par);\n+         end if;\n+      end loop;\n+\n+      --  If the expression is a selected component, it is being evaluated\n+      --  as part of a discriminant check. If it is part of a left-hand\n+      --  side, this is the last use of its value and it is safe to create\n+      --  a renaming for it, rather than a temporary. In addition, if it\n+      --  is not an addressable field, creating a temporary may be a problem\n+      --  for gigi, or might drop the value of the assignment. Therefore,\n+      --  if the expression is on the lhs of an assignment, remove side\n+      --  effects without requiring a temporary, and create a renaming.\n+      --  (See remove_side_effects for details).\n+\n+      Remove_Side_Effects\n+        (Exp, Name_Req, Variable_Ref => not Component_In_Lhs);\n    end Force_Evaluation;\n \n    ------------------------"}, {"sha": "be1eb29658b6922d46a41efe889cb0c6742457db", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -1909,6 +1909,35 @@ package body Freeze is\n                S := Scope (S);\n             end loop;\n          end;\n+\n+      --  Similarly, an inlined instance body may make reference to global\n+      --  entities, but these references cannot be the proper freezing point\n+      --  for them, and the the absence of inlining freezing will take place\n+      --  in their own scope. Normally instance bodies are analyzed after\n+      --  the enclosing compilation, and everything has been frozen at the\n+      --  proper place, but with front-end inlining an instance body is\n+      --  compiled before the end of the enclosing scope, and as a result\n+      --  out-of-order freezing must be prevented.\n+\n+      elsif Front_End_Inlining\n+        and then  In_Instance_Body\n+        and then Present (Scope (E))\n+      then\n+         declare\n+            S : Entity_Id := Scope (E);\n+         begin\n+            while Present (S) loop\n+               if Is_Generic_Instance (S) then\n+                  exit;\n+               else\n+                  S := Scope (S);\n+               end if;\n+            end loop;\n+\n+            if No (S) then\n+               return No_List;\n+            end if;\n+         end;\n       end if;\n \n       --  Here to freeze the entity"}, {"sha": "323059e395e37d18b9bb860eed8f663eda6d017c", "filename": "gcc/ada/gprcmd.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fgprcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fgprcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprcmd.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -372,8 +372,8 @@ procedure Gprcmd is\n                                 \"copy file time stamp from file1 to file2\");\n       Put_Line (Standard_Error, \"  prefix      \" &\n                                 \"get the prefix of the GNAT installation\");\n-      Put_Line (Standard_Error, \"  path        \" &\n-                                \"convert a directory list into a path list\");\n+      Put_Line (Standard_Error, \"  path_sep    \" &\n+                                \"returns the path separator\");\n       Put_Line (Standard_Error, \"  linkopts      \" &\n                                 \"process attribute Linker'Linker_Options\");\n       Put_Line (Standard_Error, \"  ignore      \" &\n@@ -530,11 +530,8 @@ begin\n \n       --  For \"path\" just add path separator after each directory argument\n \n-      elsif Cmd = \"path\" then\n-         for J in 2 .. Argument_Count loop\n-            Put (Argument (J));\n-            Put (Path_Separator);\n-         end loop;\n+      elsif Cmd = \"path_sep\" then\n+         Put (Path_Separator);\n \n       --  Check the linker options for relative paths. Insert the project\n       --  base dir before relative paths."}, {"sha": "13b891d93ed1d50efc7b700ed13bee794e7e39cf", "filename": "gcc/ada/init.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -1401,6 +1401,9 @@ __gnat_error_handler (int *sigargs, void *mechargs)\n     case 1381050: /* Nickerson bug #33 ??? */\n       return SS$_RESIGNAL;\n \n+    case 20480426: /* RDB-E-STREAM_EOF */\n+      return SS$_RESIGNAL;\n+\n     case 11829410: /* Resignalled as Use_Error for CE10VRC */\n       return SS$_RESIGNAL;\n "}, {"sha": "017030e05d3b775b997a9bf1b797bc9dc35c69b1", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,6 @@ pragma Style_Checks (All_Checks);\n \n with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n-with Hostparm; use Hostparm;\n with Uname;    use Uname;\n \n separate (Par)\n@@ -796,15 +795,8 @@ package body Ch10 is\n \n             if not Extensions_Allowed then\n                Error_Msg_SP (\"`LIMITED WITH` is an Ada0X extension\");\n-\n-               if OpenVMS then\n-                  Error_Msg_SP\n-                    (\"\\unit must be compiled with \" &\n-                     \"'/'E'X'T'E'N'S'I'O'N'S'_'A'L'L'O'W'E'D qualifier\");\n-               else\n-                  Error_Msg_SP\n-                    (\"\\unit must be compiled with -gnatX switch\");\n-               end if;\n+               Error_Msg_SP\n+                 (\"\\unit must be compiled with -gnatX switch\");\n             end if;\n          else\n             Has_Limited := False;\n@@ -819,15 +811,7 @@ package body Ch10 is\n \n                if not Extensions_Allowed then\n                   Error_Msg_SP (\"`WITH TYPE` is a non-standard extension\");\n-\n-                  if OpenVMS then\n-                     Error_Msg_SP\n-                       (\"\\unit must be compiled with \" &\n-                        \"'/'E'X'T'E'N'S'I'O'N'S'_'A'L'L'O'W'E'D qualifier\");\n-                  else\n-                     Error_Msg_SP\n-                       (\"\\unit must be compiled with -gnatX switch\");\n-                  end if;\n+                  Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n                end if;\n \n                Scan;  -- past TYPE"}, {"sha": "c5f24646bce1011b9d796b2bc1523768c2de73b3", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 3, "deletions": 28, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -28,7 +28,6 @@ pragma Style_Checks (All_Checks);\n --  Turn off subprogram body ordering check. Subprograms are in order\n --  by RM section rather than alphabetical\n \n-with Hostparm; use Hostparm;\n with Sinfo.CN; use Sinfo.CN;\n \n separate (Par)\n@@ -1325,15 +1324,7 @@ package body Ch3 is\n                Error_Msg_SP\n                  (\"generalized use of anonymous access types \" &\n                   \"is an Ada 0Y extension\");\n-\n-               if OpenVMS then\n-                  Error_Msg_SP\n-                    (\"\\unit must be compiled with \" &\n-                     \"'/'E'X'T'E'N'S'I'O'N'S'_'A'L'L'O'W'E'D qualifier\");\n-               else\n-                  Error_Msg_SP\n-                    (\"\\unit must be compiled with -gnatX switch\");\n-               end if;\n+               Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n             end if;\n \n             Acc_Node := P_Access_Definition;\n@@ -2125,15 +2116,7 @@ package body Ch3 is\n             Error_Msg_SP\n               (\"generalized use of anonymous access types \" &\n                \"is an Ada 0Y extension\");\n-\n-            if OpenVMS then\n-               Error_Msg_SP\n-                 (\"\\unit must be compiled with \" &\n-                  \"'/'E'X'T'E'N'S'I'O'N'S'_'A'L'L'O'W'E'D qualifier\");\n-            else\n-               Error_Msg_SP\n-                 (\"\\unit must be compiled with -gnatX switch\");\n-            end if;\n+            Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n          end if;\n \n          Set_Subtype_Indication (CompDef_Node, Empty);\n@@ -2862,15 +2845,7 @@ package body Ch3 is\n                   Error_Msg_SP\n                     (\"Generalized use of anonymous access types \" &\n                      \"is an Ada0X extension\");\n-\n-                  if OpenVMS then\n-                     Error_Msg_SP\n-                       (\"\\unit must be compiled with \" &\n-                        \"'/'E'X'T'E'N'S'I'O'N'S'_'A'L'L'O'W'E'D qualifier\");\n-                  else\n-                     Error_Msg_SP\n-                       (\"\\unit must be compiled with -gnatX switch\");\n-                  end if;\n+                  Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n                end if;\n \n                Set_Subtype_Indication (CompDef_Node, Empty);"}, {"sha": "0334034b76d73411f87b68841d8d83d51d0db48e", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,8 +28,6 @@ pragma Style_Checks (All_Checks);\n --  Turn off subprogram body ordering check. Subprograms are in order\n --  by RM section rather than alphabetical\n \n-with Hostparm; use Hostparm;\n-\n separate (Par)\n package body Ch4 is\n \n@@ -1411,15 +1409,7 @@ package body Ch4 is\n          if not Extensions_Allowed then\n             Error_Msg_SP\n               (\"(Ada 0Y) limited aggregates are an Ada0X extension\");\n-\n-            if OpenVMS then\n-               Error_Msg_SP\n-                 (\"\\unit must be compiled with \" &\n-                  \"'/'E'X'T'E'N'S'I'O'N'S'_'A'L'L'O'W'E'D qualifier\");\n-            else\n-               Error_Msg_SP\n-                 (\"\\unit must be compiled with -gnatX switch\");\n-            end if;\n+            Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n          end if;\n \n          Set_Box_Present (Assoc_Node);"}, {"sha": "d7a47b0a601581911362c8d4b29f6e231bb5dcd6", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,25 +61,25 @@ package body Prj.Env is\n    --  platforms, except on VMS where the logical names are deassigned, thus\n    --  avoiding the pollution of the environment of the caller.\n \n-   package Namings is new Table.Table (\n-     Table_Component_Type => Naming_Data,\n-     Table_Index_Type     => Naming_Id,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 5,\n-     Table_Increment      => 100,\n-     Table_Name           => \"Prj.Env.Namings\");\n+   package Namings is new Table.Table\n+     (Table_Component_Type => Naming_Data,\n+      Table_Index_Type     => Naming_Id,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 5,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Env.Namings\");\n \n    Default_Naming : constant Naming_Id := Namings.First;\n \n    Fill_Mapping_File : Boolean := True;\n \n-   package Path_Files is new Table.Table (\n-     Table_Component_Type => Name_Id,\n-     Table_Index_Type     => Natural,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 50,\n-     Table_Increment      => 50,\n-     Table_Name           => \"Prj.Env.Path_Files\");\n+   package Path_Files is new Table.Table\n+     (Table_Component_Type => Name_Id,\n+      Table_Index_Type     => Natural,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 50,\n+      Table_Increment      => 50,\n+      Table_Name           => \"Prj.Env.Path_Files\");\n    --  Table storing all the temp path file names.\n    --  Used by Delete_All_Path_Files.\n \n@@ -322,7 +322,7 @@ package body Prj.Env is\n    begin\n       while Current /= Nil_String loop\n          Source_Dir := String_Elements.Table (Current);\n-         Add_To_Path (Get_Name_String (Source_Dir.Value));\n+         Add_To_Path (Get_Name_String (Source_Dir.Display_Value));\n          Current := Source_Dir.Next;\n       end loop;\n    end Add_To_Path;\n@@ -1420,13 +1420,16 @@ package body Prj.Env is\n             The_String : String_Element;\n \n          begin\n-            --  Call action with the name of every source directorie\n-\n-            while Current /= Nil_String loop\n-               The_String := String_Elements.Table (Current);\n-               Action (Get_Name_String (The_String.Value));\n-               Current := The_String.Next;\n-            end loop;\n+            --  If there are Ada sources, call action with the name of every\n+            --  source directory.\n+\n+            if Projects.Table (Project).Sources_Present then\n+               while Current /= Nil_String loop\n+                  The_String := String_Elements.Table (Current);\n+                  Action (Get_Name_String (The_String.Value));\n+                  Current := The_String.Next;\n+               end loop;\n+            end if;\n          end;\n \n          --  If we are extending a project, visit it\n@@ -1866,8 +1869,11 @@ package body Prj.Env is\n                if Process_Source_Dirs then\n \n                   --  Add to path all source directories of this project\n+                  --  if there are Ada sources.\n \n-                  Add_To_Path_File (Data.Source_Dirs, Source_FD);\n+                  if Projects.Table (Project).Sources_Present then\n+                     Add_To_Path_File (Data.Source_Dirs, Source_FD);\n+                  end if;\n                end if;\n \n                if Process_Object_Dirs then"}, {"sha": "5c42d5cea38efe53c53d819d5a6481f35f6422e4", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 97, "deletions": 113, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -758,9 +758,10 @@ package body Prj.Nmsc is\n          --  If a non extending project is not supposed to contain\n          --  any source, then we never call Find_Sources.\n \n-         if Data.Extends = No_Project\n-           and then Current_Source = Nil_String\n-         then\n+         if Current_Source /= Nil_String then\n+            Data.Sources_Present := True;\n+\n+         elsif Data.Extends = No_Project then\n             Error_Msg\n               (Project,\n                \"there are no Ada sources in this project\",\n@@ -1405,7 +1406,7 @@ package body Prj.Nmsc is\n                         String_Elements.Increment_Last;\n                         String_Elements.Table (String_Elements.Last) :=\n                           (Value    => ALI_Name_Id,\n-                           Display_Value => No_Name,\n+                           Display_Value => ALI_Name_Id,\n                            Location => String_Elements.Table\n                                                          (Interfaces).Location,\n                            Flag     => False,\n@@ -2573,10 +2574,6 @@ package body Prj.Nmsc is\n          Directory : constant String := Get_Name_String (From);\n          Element   : String_Element;\n \n-         Canonical_Directory_Id : Name_Id;\n-         pragma Unreferenced (Canonical_Directory_Id);\n-         --  Is this in fact being used for anything useful ???\n-\n          procedure Recursive_Find_Dirs (Path : Name_Id);\n          --  Find all the subdirectories (recursively) of Path and add them\n          --  to the list of source directories of the project.\n@@ -2593,136 +2590,128 @@ package body Prj.Nmsc is\n             Element  : String_Element;\n             Found    : Boolean := False;\n \n-            Canonical_Path : Name_Id := No_Name;\n+            Non_Canonical_Path : Name_Id := No_Name;\n+            Canonical_Path     : Name_Id := No_Name;\n+\n+            The_Path : constant String :=\n+                         Normalize_Pathname (Get_Name_String (Path)) &\n+            Directory_Separator;\n+\n+            The_Path_Last : constant Natural :=\n+                              Compute_Directory_Last (The_Path);\n \n          begin\n-            Get_Name_String (Path);\n+            Name_Len := The_Path_Last - The_Path'First + 1;\n+            Name_Buffer (1 .. Name_Len) :=\n+              The_Path (The_Path'First .. The_Path_Last);\n+            Non_Canonical_Path := Name_Find;\n+            Get_Name_String (Non_Canonical_Path);\n             Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n+            Canonical_Path := Name_Find;\n \n-            declare\n-               The_Path : constant String :=\n-                            Normalize_Pathname\n-                              (Name => Name_Buffer (1 .. Name_Len)) &\n-                               Directory_Separator;\n+            --  To avoid processing the same directory several times, check\n+            --  if the directory is already in Recursive_Dirs. If it is,\n+            --  then there is nothing to do, just return. If it is not, put\n+            --  it there and continue recursive processing.\n \n-               The_Path_Last : constant Natural :=\n-                                 Compute_Directory_Last (The_Path);\n+            if Recursive_Dirs.Get (Canonical_Path) then\n+               return;\n \n-            begin\n-               Name_Len := The_Path_Last - The_Path'First + 1;\n-               Name_Buffer (1 .. Name_Len) :=\n-                 The_Path (The_Path'First .. The_Path_Last);\n-               Canonical_Path := Name_Find;\n+            else\n+               Recursive_Dirs.Set (Canonical_Path, True);\n+            end if;\n \n-               --  To avoid processing the same directory several times, check\n-               --  if the directory is already in Recursive_Dirs. If it is,\n-               --  then there is nothing to do, just return. If it is not, put\n-               --  it there and continue recursive processing.\n+            --  Check if directory is already in list\n \n-               if Recursive_Dirs.Get (Canonical_Path) then\n-                  return;\n+            while List /= Nil_String loop\n+               Element := String_Elements.Table (List);\n \n-               else\n-                  Recursive_Dirs.Set (Canonical_Path, True);\n+               if Element.Value /= No_Name then\n+                  Found := Element.Value = Canonical_Path;\n+                  exit when Found;\n                end if;\n \n-               --  Check if directory is already in list\n-\n-               while List /= Nil_String loop\n-                  Element := String_Elements.Table (List);\n-\n-                  if Element.Value /= No_Name then\n-                     Get_Name_String (Element.Value);\n-                     Found :=\n-                       The_Path (The_Path'First .. The_Path_Last) =\n-                       Name_Buffer (1 .. Name_Len);\n-                     exit when Found;\n-                  end if;\n-\n-                  List := Element.Next;\n-               end loop;\n-\n-               --  If directory is not already in list, put it there\n-\n-               if not Found then\n-                  if Current_Verbosity = High then\n-                     Write_Str  (\"   \");\n-                     Write_Line (The_Path (The_Path'First .. The_Path_Last));\n-                  end if;\n+               List := Element.Next;\n+            end loop;\n \n-                  String_Elements.Increment_Last;\n-                  Element :=\n-                    (Value    => Canonical_Path,\n-                     Display_Value => No_Name,\n-                     Location => No_Location,\n-                     Flag     => False,\n-                     Next     => Nil_String);\n+            --  If directory is not already in list, put it there\n \n-                  --  Case of first source directory\n+            if not Found then\n+               if Current_Verbosity = High then\n+                  Write_Str  (\"   \");\n+                  Write_Line (The_Path (The_Path'First .. The_Path_Last));\n+               end if;\n \n-                  if Last_Source_Dir = Nil_String then\n-                     Data.Source_Dirs := String_Elements.Last;\n+               String_Elements.Increment_Last;\n+               Element :=\n+                 (Value    => Canonical_Path,\n+                  Display_Value => Non_Canonical_Path,\n+                  Location => No_Location,\n+                  Flag     => False,\n+                  Next     => Nil_String);\n \n-                     --  Here we already have source directories.\n+               --  Case of first source directory\n \n-                  else\n-                     --  Link the previous last to the new one\n+               if Last_Source_Dir = Nil_String then\n+                  Data.Source_Dirs := String_Elements.Last;\n \n-                     String_Elements.Table (Last_Source_Dir).Next :=\n-                       String_Elements.Last;\n-                  end if;\n+                  --  Here we already have source directories.\n \n-                  --  And register this source directory as the new last\n+               else\n+                  --  Link the previous last to the new one\n \n-                  Last_Source_Dir  := String_Elements.Last;\n-                  String_Elements.Table (Last_Source_Dir) := Element;\n+                  String_Elements.Table (Last_Source_Dir).Next :=\n+                    String_Elements.Last;\n                end if;\n \n-               --  Now look for subdirectories. We do that even when this\n-               --  directory is already in the list, because some of its\n-               --  subdirectories may not be in the list yet.\n+               --  And register this source directory as the new last\n \n-               Open (Dir, The_Path (The_Path'First .. The_Path_Last));\n+               Last_Source_Dir  := String_Elements.Last;\n+               String_Elements.Table (Last_Source_Dir) := Element;\n+            end if;\n \n-               loop\n-                  Read (Dir, Name, Last);\n-                  exit when Last = 0;\n+            --  Now look for subdirectories. We do that even when this\n+            --  directory is already in the list, because some of its\n+            --  subdirectories may not be in the list yet.\n \n-                  if Name (1 .. Last) /= \".\"\n-                    and then Name (1 .. Last) /= \"..\"\n-                  then\n-                     --  Avoid . and ..\n+            Open (Dir, The_Path (The_Path'First .. The_Path_Last));\n \n-                     if Current_Verbosity = High then\n-                        Write_Str  (\"   Checking \");\n-                        Write_Line (Name (1 .. Last));\n-                     end if;\n+            loop\n+               Read (Dir, Name, Last);\n+               exit when Last = 0;\n \n-                     declare\n-                        Path_Name : String :=\n-                                      Normalize_Pathname\n-                                        (Name      => Name (1 .. Last),\n-                                         Directory =>\n-                                           The_Path\n-                                            (The_Path'First .. The_Path_Last));\n+               if Name (1 .. Last) /= \".\"\n+                 and then Name (1 .. Last) /= \"..\"\n+               then\n+                  --  Avoid . and ..\n \n-                     begin\n-                        Canonical_Case_File_Name (Path_Name);\n+                  if Current_Verbosity = High then\n+                     Write_Str  (\"   Checking \");\n+                     Write_Line (Name (1 .. Last));\n+                  end if;\n \n-                        if Is_Directory (Path_Name) then\n+                  declare\n+                     Path_Name : constant String :=\n+                                   Normalize_Pathname\n+                                     (Name      => Name (1 .. Last),\n+                                      Directory =>\n+                                        The_Path\n+                                          (The_Path'First .. The_Path_Last));\n \n-                           --  We have found a new subdirectory, call self\n+                  begin\n+                     if Is_Directory (Path_Name) then\n \n-                           Name_Len := Path_Name'Length;\n-                           Name_Buffer (1 .. Name_Len) := Path_Name;\n-                           Recursive_Find_Dirs (Name_Find);\n-                        end if;\n-                     end;\n-                  end if;\n-               end loop;\n+                        --  We have found a new subdirectory, call self\n \n-               Close (Dir);\n-            end;\n+                        Name_Len := Path_Name'Length;\n+                        Name_Buffer (1 .. Name_Len) := Path_Name;\n+                        Recursive_Find_Dirs (Name_Find);\n+                     end if;\n+                  end;\n+               end if;\n+            end loop;\n+\n+            Close (Dir);\n \n          exception\n             when Directory_Error =>\n@@ -2742,10 +2731,6 @@ package body Prj.Nmsc is\n          --  Directory    := Name_Buffer (1 .. Name_Len);\n          --  Why is above line commented out ???\n \n-         Canonical_Directory_Id := Name_Find;\n-         --  What is purpose of above assignment ???\n-         --  Are we sure it is being used ???\n-\n          if Current_Verbosity = High then\n             Write_Str (Directory);\n             Write_Line (\"\"\")\");\n@@ -3098,7 +3083,6 @@ package body Prj.Nmsc is\n             while Current /= Nil_String loop\n                Element := String_Elements.Table (Current);\n                if Element.Value /= No_Name then\n-                  Element.Display_Value := Element.Value;\n                   Get_Name_String (Element.Value);\n                   Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n                   Element.Value := Name_Find;"}, {"sha": "61826c9050760d9276517a2a5c84885fa3ff4f56", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -759,6 +759,7 @@ package body Prj.Part is\n                   begin\n                      Name_Len := Normed'Length;\n                      Name_Buffer (1 .. Name_Len) := Normed;\n+                     Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n                      Canonical_Path_Name := Name_Find;\n \n                      for Index in 1 .. Project_Stack.Last loop\n@@ -886,7 +887,9 @@ package body Prj.Part is\n             for Current in reverse 1 .. Project_Stack.Last loop\n                Error_Msg_Name_1 := Project_Stack.Table (Current).Path_Name;\n \n-               if Error_Msg_Name_1 /= Canonical_Path_Name then\n+               if Project_Stack.Table (Current).Canonical_Path_Name /=\n+                    Canonical_Path_Name\n+               then\n                   Error_Msg\n                     (\"\\  { which itself is imported by\", Token_Ptr);\n "}, {"sha": "a28972b62a1475ad91c166a379ca768256a335b6", "filename": "gcc/ada/s-tpobop.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fs-tpobop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fs-tpobop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.ads?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -110,7 +110,10 @@ package System.Tasking.Protected_Objects.Operations is\n    --\n    --  This must be called with abortion deferred and with the corresponding\n    --  object locked.\n-   --  If Unlock_Object, then Object is unlocked on return.\n+   --\n+   --  If Unlock_Object is set True, then Object is unlocked on return,\n+   --  otherwise Object remains locked and the caller is responsible for\n+   --  the required unlock.\n \n    procedure Complete_Entry_Body (Object : Entries.Protection_Entries_Access);\n    --  Called from within an entry body procedure, indicates that the"}, {"sha": "43c5da9da397dcc283d8b0619ca420f9dbfb44f6", "filename": "gcc/ada/s-tporft.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fs-tporft.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fs-tporft.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tporft.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -63,11 +63,13 @@ begin\n \n    --  Finish initialization\n \n+   Lock_RTS;\n    System.Tasking.Initialize_ATCB\n      (Self_Id, null, Null_Address, Null_Task,\n       Foreign_Task_Elaborated'Access,\n       System.Priority'First, Task_Info.Unspecified_Task_Info, 0, Self_Id,\n       Succeeded);\n+   Unlock_RTS;\n    pragma Assert (Succeeded);\n \n    Self_Id.Master_of_Task := 0;"}, {"sha": "f0189c1428b4168b3ad6b7ad0ba0103ca8116d65", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -333,15 +333,7 @@ package body Scng is\n \n       procedure Error_Illegal_Wide_Character is\n       begin\n-         if OpenVMS then\n-            Error_Msg_S\n-              (\"illegal wide character, check \" &\n-                 \"'/'W'I'D'E'_'C'H'A'R'A'C'T'E'R'_'E'N'C'O'D'I'N'G qualifier\");\n-         else\n-            Error_Msg_S\n-              (\"illegal wide character, check -gnatW switch\");\n-         end if;\n-\n+         Error_Msg_S (\"illegal wide character, check -gnatW switch\");\n          Scan_Ptr := Scan_Ptr + 1;\n       end Error_Illegal_Wide_Character;\n "}, {"sha": "a6f8a7a35a2d3f09f374273b7018efc9738b3643", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 41, "deletions": 7, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -556,6 +556,9 @@ package body Sem_Case is\n       is\n          E : Entity_Id;\n \n+         Enode : Node_Id;\n+         --  This is where we post error messages for bounds out of range\n+\n          Nb_Choices        : constant Nat := Choice_Table'Length;\n          Sort_Choice_Table : Sort_Choice_Table_Type (0 .. Nb_Choices);\n \n@@ -638,24 +641,55 @@ package body Sem_Case is\n                end if;\n             end if;\n \n-            --  Check for bound out of range.\n+            --  Check for low bound out of range\n \n             if Lo_Val < Bounds_Lo then\n+\n+               --  If the choice is an entity name, then it is a type, and\n+               --  we want to post the message on the reference to this\n+               --  entity. Otherwise we want to post it on the lower bound\n+               --  of the range.\n+\n+               if Is_Entity_Name (Choice) then\n+                  Enode := Choice;\n+               else\n+                  Enode := Lo;\n+               end if;\n+\n+               --  Specialize message for integer/enum type\n+\n                if Is_Integer_Type (Bounds_Type) then\n                   Error_Msg_Uint_1 := Bounds_Lo;\n-                  Error_Msg_N (\"minimum allowed choice value is^\", Lo);\n+                  Error_Msg_N (\"minimum allowed choice value is^\", Enode);\n                else\n                   Error_Msg_Name_1 := Choice_Image (Bounds_Lo, Bounds_Type);\n-                  Error_Msg_N (\"minimum allowed choice value is%\", Lo);\n+                  Error_Msg_N (\"minimum allowed choice value is%\", Enode);\n                end if;\n+            end if;\n+\n+            --  Check for high bound out of range\n+\n+            if Hi_Val > Bounds_Hi then\n+\n+               --  If the choice is an entity name, then it is a type, and\n+               --  we want to post the message on the reference to this\n+               --  entity. Otherwise we want to post it on the upper bound\n+               --  of the range.\n+\n+               if Is_Entity_Name (Choice) then\n+                  Enode := Choice;\n+               else\n+                  Enode := Hi;\n+               end if;\n+\n+               --  Specialize message for integer/enum type\n \n-            elsif Hi_Val > Bounds_Hi then\n                if Is_Integer_Type (Bounds_Type) then\n                   Error_Msg_Uint_1 := Bounds_Hi;\n-                  Error_Msg_N (\"maximum allowed choice value is^\", Hi);\n+                  Error_Msg_N (\"maximum allowed choice value is^\", Enode);\n                else\n                   Error_Msg_Name_1 := Choice_Image (Bounds_Hi, Bounds_Type);\n-                  Error_Msg_N (\"maximum allowed choice value is%\", Hi);\n+                  Error_Msg_N (\"maximum allowed choice value is%\", Enode);\n                end if;\n             end if;\n "}, {"sha": "c6fa436ffb7555600c148e55ea7e326d6a782129", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -958,9 +958,15 @@ package body Sem_Ch10 is\n          then\n             Comp_Unit := Cunit (Unum);\n \n-            Set_Corresponding_Stub (Unit (Comp_Unit), N);\n-            Analyze_Subunit (Comp_Unit);\n-            Set_Library_Unit (N, Comp_Unit);\n+            if Nkind (Unit (Comp_Unit)) /= N_Subunit then\n+               Error_Msg_N\n+                 (\"expected SEPARATE subunit, found child unit\",\n+                  Cunit_Entity (Unum));\n+            else\n+               Set_Corresponding_Stub (Unit (Comp_Unit), N);\n+               Analyze_Subunit (Comp_Unit);\n+               Set_Library_Unit (N, Comp_Unit);\n+            end if;\n \n          elsif Unum = No_Unit\n            and then Present (Nam)"}, {"sha": "0f561d9ce3510fdac12f7f51bb4a441392179e5e", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -29,7 +29,6 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Exp_Util; use Exp_Util;\n-with Hostparm; use Hostparm;\n with Itypes;   use Itypes;\n with Lib.Xref; use Lib.Xref;\n with Namet;    use Namet;\n@@ -285,14 +284,7 @@ package body Sem_Ch4 is\n          List_Operand_Interps (Left_Opnd  (N));\n          List_Operand_Interps (Right_Opnd (N));\n       else\n-\n-         if OpenVMS then\n-            Error_Msg_N (\n-               \"\\use '/'R'E'P'O'R'T'_'E'R'R'O'R'S'='F'U'L'L for details\",\n-                N);\n-         else\n-            Error_Msg_N (\"\\use -gnatf for details\", N);\n-         end if;\n+         Error_Msg_N (\"\\use -gnatf switch for details\", N);\n       end if;\n    end Ambiguous_Operands;\n "}, {"sha": "3f99d828fc48b7dc0352d93f3cb67f265e55773c", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -289,11 +289,11 @@ package body Sem_Elim is\n \n             --  Then we need to see if the static scope matches within the\n             --  compilation unit.\n+\n             --  At the moment, gnatelim does not consider block statements as\n             --  scopes (even if a block is named)\n \n             Scop := Scope (E);\n-\n             while Ekind (Scop) = E_Block loop\n                Scop := Scope (Scop);\n             end loop;\n@@ -305,7 +305,6 @@ package body Sem_Elim is\n                   end if;\n \n                   Scop := Scope (Scop);\n-\n                   while Ekind (Scop) = E_Block loop\n                      Scop := Scope (Scop);\n                   end loop;\n@@ -324,7 +323,6 @@ package body Sem_Elim is\n                end if;\n \n                Scop := Scope (Scop);\n-\n                while Ekind (Scop) = E_Block loop\n                   Scop := Scope (Scop);\n                end loop;"}, {"sha": "c7133d22e48e081fddb71ab5e47761c87d072bdd", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -861,7 +861,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_With_Clause);\n-      return Flag15 (N);\n+      return Flag14 (N);\n    end Elaborate_All_Present;\n \n    function Elaborate_Present\n@@ -2040,7 +2040,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Compilation_Unit\n-        or else NT (N).Nkind = N_Formal_Derived_Type_Definition);\n+        or else NT (N).Nkind = N_Formal_Derived_Type_Definition\n+        or else NT (N).Nkind = N_With_Clause);\n       return Flag15 (N);\n    end Private_Present;\n \n@@ -3317,7 +3318,7 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_With_Clause);\n-      Set_Flag15 (N, Val);\n+      Set_Flag14 (N, Val);\n    end Set_Elaborate_All_Present;\n \n    procedure Set_Elaborate_Present\n@@ -4487,7 +4488,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Compilation_Unit\n-        or else NT (N).Nkind = N_Formal_Derived_Type_Definition);\n+        or else NT (N).Nkind = N_Formal_Derived_Type_Definition\n+        or else NT (N).Nkind = N_With_Clause);\n       Set_Flag15 (N, Val);\n    end Set_Private_Present;\n "}, {"sha": "4ebb16fc902e335857b931b1f58985452e780537", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -825,7 +825,7 @@ package Sinfo is\n    --    This flag is set in the N_With_Clause node to indicate that a\n    --    pragma Elaborate pragma appears for the with'ed units.\n \n-   --  Elaborate_All_Present (Flag15-Sem)\n+   --  Elaborate_All_Present (Flag14-Sem)\n    --    This flag is set in the N_With_Clause node to indicate that a\n    --    pragma Elaborate_All pragma appears for the with'ed units.\n \n@@ -872,7 +872,7 @@ package Sinfo is\n    --    generic templates, this is harmless.\n \n    --  Entity_Or_Associated_Node (Node4-Sem)\n-   --    A synonym for both Entity and Asasociated_Node. Used by convention\n+   --    A synonym for both Entity and Associated_Node. Used by convention\n    --    in the code when referencing this field in cases where it is not\n    --    known whether the field contains an Entity or an Associated_Node.\n \n@@ -5102,7 +5102,8 @@ package Sinfo is\n       --  Last_Name (Flag6) (set to True if last name or only one name)\n       --  Context_Installed (Flag13-Sem)\n       --  Elaborate_Present (Flag4-Sem)\n-      --  Elaborate_All_Present (Flag15-Sem)\n+      --  Elaborate_All_Present (Flag14-Sem)\n+      --  Private_Present (Flag15) set if with_clause has private keyword\n       --  Implicit_With (Flag16-Sem)\n       --  Limited_Present (Flag17)  set if LIMITED is present\n       --  Limited_View_Installed (Flag18-Sem)\n@@ -5111,6 +5112,7 @@ package Sinfo is\n \n       --  Note: Limited_Present and Limited_View_Installed give support to\n       --        Ada 0Y (AI-50217).\n+      --  Similarly, Private_Present gives support to AI-50262.\n \n       ----------------------\n       -- With_Type clause --\n@@ -7120,7 +7122,7 @@ package Sinfo is\n      (N : Node_Id) return Boolean;    -- Flag13\n \n    function Elaborate_All_Present\n-     (N : Node_Id) return Boolean;    -- Flag15\n+     (N : Node_Id) return Boolean;    -- Flag14\n \n    function Elaborate_Present\n      (N : Node_Id) return Boolean;    -- Flag4\n@@ -7906,7 +7908,7 @@ package Sinfo is\n      (N : Node_Id; Val : Boolean := True);    -- Flag13\n \n    procedure Set_Elaborate_All_Present\n-     (N : Node_Id; Val : Boolean := True);    -- Flag15\n+     (N : Node_Id; Val : Boolean := True);    -- Flag14\n \n    procedure Set_Elaborate_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag4"}, {"sha": "37a9fbd0aea9f20b1068fe6d62a7d59ae43fd49d", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/555360a506f2439bd66447dc30d303372ee0ed75/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=555360a506f2439bd66447dc30d303372ee0ed75", "patch": "@@ -791,8 +791,11 @@ finish_record_type (tree record_type,\n \tDECL_BIT_FIELD (field) = 0;\n \n       /* If we still have DECL_BIT_FIELD set at this point, we know the field\n-\t is technically not addressable.  */\n-      DECL_NONADDRESSABLE_P (field) |= DECL_BIT_FIELD (field);\n+\t is technically not addressable.  Except that it can actually be\n+\t addressed if the field is BLKmode and happens to be properly\n+\t aligned.  */\n+      DECL_NONADDRESSABLE_P (field)\n+\t|= DECL_BIT_FIELD (field) && DECL_MODE (field) != BLKmode;\n \n       if (has_rep && ! DECL_BIT_FIELD (field))\n \tTYPE_ALIGN (record_type)"}]}