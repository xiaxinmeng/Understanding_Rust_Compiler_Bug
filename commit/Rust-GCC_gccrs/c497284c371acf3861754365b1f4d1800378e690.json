{"sha": "c497284c371acf3861754365b1f4d1800378e690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5NzI4NGMzNzFhY2YzODYxNzU0MzY1YjFmNGQxODAwMzc4ZTY5MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-06-30T08:51:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-06-30T08:51:00Z"}, "message": "Call BUILT_IN_ASAN_HANDLE_NO_RETURN before BUILT_IN_UNWIND_RESUME (PR sanitizer/81021).\n\n2017-06-30  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/81021\n\t* g++.dg/asan/pr81021.C: New test.\n2017-06-30  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/81021\n\t* tree-eh.c (lower_resx): Call BUILT_IN_ASAN_HANDLE_NO_RETURN\n\tbefore BUILT_IN_UNWIND_RESUME when ASAN is used.\n\nFrom-SVN: r249833", "tree": {"sha": "bc8710aa85afaf74385085ba3f7dc7a14c9f7f3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc8710aa85afaf74385085ba3f7dc7a14c9f7f3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c497284c371acf3861754365b1f4d1800378e690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c497284c371acf3861754365b1f4d1800378e690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c497284c371acf3861754365b1f4d1800378e690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c497284c371acf3861754365b1f4d1800378e690/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "516fa8946459e29b26035d1d273e8fafbaaa95ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516fa8946459e29b26035d1d273e8fafbaaa95ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/516fa8946459e29b26035d1d273e8fafbaaa95ce"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "5401bdab0f42a346b0d31f8e94583ab40d8d2093", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c497284c371acf3861754365b1f4d1800378e690/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c497284c371acf3861754365b1f4d1800378e690/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c497284c371acf3861754365b1f4d1800378e690", "patch": "@@ -1,3 +1,9 @@\n+2017-06-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/81021\n+\t* tree-eh.c (lower_resx): Call BUILT_IN_ASAN_HANDLE_NO_RETURN\n+\tbefore BUILT_IN_UNWIND_RESUME when ASAN is used.\n+\n 2017-06-30  Yvan Roux  <yvan.roux@linaro.org>\n \n \t* doc/invoke.texi (AArch64): Add missing options and remove redundant"}, {"sha": "274fced11a2294d70149c46d19f2f3a9c8333ac2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c497284c371acf3861754365b1f4d1800378e690/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c497284c371acf3861754365b1f4d1800378e690/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c497284c371acf3861754365b1f4d1800378e690", "patch": "@@ -1,3 +1,8 @@\n+2017-06-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/81021\n+\t* g++.dg/asan/pr81021.C: New test.\n+\n 2017-06-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81249"}, {"sha": "daa0525c2734c9c7923f2f12fa1c31f21e00f95d", "filename": "gcc/testsuite/g++.dg/asan/pr81021.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c497284c371acf3861754365b1f4d1800378e690/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr81021.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c497284c371acf3861754365b1f4d1800378e690/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr81021.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr81021.C?ref=c497284c371acf3861754365b1f4d1800378e690", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do run }\n+\n+#include <string>\n+\n+struct ConfigFile {\n+    ConfigFile(std::string filename, std::string delimiter) { throw \"error\"; }\n+    ConfigFile(std::string filename) {}\n+};\n+\n+struct Configuration {\n+    ConfigFile _configFile;\n+\n+    Configuration(const std::string &root, const char *baseName) \n+        : _configFile(root + baseName, \"=\") { }\n+    Configuration(const std::string &root, const char *a, const char *b) \n+        : _configFile(root + a + b) { }\n+};\n+\n+\n+void test() {\n+    std::string root(\"etc\");\n+    try {\n+        Configuration config(root, \"notthere\");\n+    }\n+    catch (...) {\n+        // exception is thrown, caught here and ignored...\n+    }\n+    Configuration config(root, \"a\", \"b\"); // ASAN error during constructor here\n+}\n+\n+int main(int argc, const char *argv[]) {\n+    test();\n+}"}, {"sha": "79d02adbade937e603e6f0081e458e49f368f792", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c497284c371acf3861754365b1f4d1800378e690/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c497284c371acf3861754365b1f4d1800378e690/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=c497284c371acf3861754365b1f4d1800378e690", "patch": "@@ -43,6 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"cfgloop.h\"\n #include \"gimple-low.h\"\n+#include \"asan.h\"\n \n /* In some instances a tree and a gimple need to be stored in a same table,\n    i.e. in hash tables. This is a structure to do this. */\n@@ -3302,6 +3303,18 @@ lower_resx (basic_block bb, gresx *stmt,\n \t  gimple_call_set_lhs (x, var);\n \t  gsi_insert_before (&gsi, x, GSI_SAME_STMT);\n \n+\t  /* When exception handling is delegated to a caller function, we\n+\t     have to guarantee that shadow memory variables living on stack\n+\t     will be cleaner before control is given to a parent function.  */\n+\t  if (sanitize_flags_p (SANITIZE_ADDRESS))\n+\t    {\n+\t      tree decl\n+\t\t= builtin_decl_implicit (BUILT_IN_ASAN_HANDLE_NO_RETURN);\n+\t      gimple *g = gimple_build_call (decl, 0);\n+\t      gimple_set_location (g, gimple_location (stmt));\n+\t      gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n+\t    }\n+\n \t  fn = builtin_decl_implicit (BUILT_IN_UNWIND_RESUME);\n \t  x = gimple_build_call (fn, 1, var);\n \t  gsi_insert_before (&gsi, x, GSI_SAME_STMT);"}]}