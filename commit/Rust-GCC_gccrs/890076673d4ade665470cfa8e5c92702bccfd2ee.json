{"sha": "890076673d4ade665470cfa8e5c92702bccfd2ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkwMDc2NjczZDRhZGU2NjU0NzBjZmE4ZTVjOTI3MDJiY2NmZDJlZQ==", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2020-10-29T12:56:17Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2020-11-03T13:21:27Z"}, "message": "arm: Add vld1_bf16 + vld1q_bf16 intrinsics\n\ngcc/ChangeLog\n\n2020-10-29  Andrea Corallo  <andrea.corallo@arm.com>\n\n\t* config/arm/arm-builtins.c (VAR14): Define macro.\n\t* config/arm/arm_neon_builtins.def: Touch for:\n\t__builtin_neon_vld1v4bf, __builtin_neon_vld1v8bf.\n\t* config/arm/arm_neon.h (vld1_bf16, vld1q_bf16): Add intrinsics.\n\ngcc/testsuite/ChangeLog\n\n2020-10-29  Andrea Corallo  <andrea.corallo@arm.com>\n\n\t* gcc.target/arm/simd/vld1_bf16_1.c: New test.", "tree": {"sha": "f2334b9dea7b6289bbc4c65c522625700e3d1548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2334b9dea7b6289bbc4c65c522625700e3d1548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/890076673d4ade665470cfa8e5c92702bccfd2ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890076673d4ade665470cfa8e5c92702bccfd2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890076673d4ade665470cfa8e5c92702bccfd2ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890076673d4ade665470cfa8e5c92702bccfd2ee/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d65303b699447233e320e00342bcdba9cd1148f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d65303b699447233e320e00342bcdba9cd1148f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d65303b699447233e320e00342bcdba9cd1148f3"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "51e31807aa94c214f706f7616cca9a6a41ec6037", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=890076673d4ade665470cfa8e5c92702bccfd2ee", "patch": "@@ -946,6 +946,9 @@ typedef struct {\n #define VAR13(T, N, A, B, C, D, E, F, G, H, I, J, K, L, M) \\\n   VAR12 (T, N, A, B, C, D, E, F, G, H, I, J, K, L) \\\n   VAR1 (T, N, M)\n+#define VAR14(T, N, A, B, C, D, E, F, G, H, I, J, K, L, M, O) \\\n+  VAR13 (T, N, A, B, C, D, E, F, G, H, I, J, K, L, M) \\\n+  VAR1 (T, N, O)\n \n /* The builtin data can be found in arm_neon_builtins.def, arm_vfp_builtins.def\n    and arm_acle_builtins.def.  The entries in arm_neon_builtins.def require"}, {"sha": "b77175eaa3e9b32c260934c795f7689433d2d882", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=890076673d4ade665470cfa8e5c92702bccfd2ee", "patch": "@@ -19557,6 +19557,20 @@ vst4q_bf16 (bfloat16_t * __ptr, bfloat16x8x4_t __val)\n   return __builtin_neon_vst4v8bf (__ptr, __bu.__o);\n }\n \n+__extension__ extern __inline bfloat16x4_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld1_bf16 (bfloat16_t const * __ptr)\n+{\n+  return __builtin_neon_vld1v4bf (__ptr);\n+}\n+\n+__extension__ extern __inline bfloat16x8_t\n+__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n+vld1q_bf16 (const bfloat16_t * __ptr)\n+{\n+  return __builtin_neon_vld1v8bf (__ptr);\n+}\n+\n __extension__ extern __inline bfloat16x4x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld2_bf16 (bfloat16_t const * __ptr)"}, {"sha": "07eda44cc5874b099e3d844ed16310a760135e45", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=890076673d4ade665470cfa8e5c92702bccfd2ee", "patch": "@@ -310,8 +310,9 @@ VAR1 (TERNOP, vtbx1, v8qi)\n VAR1 (TERNOP, vtbx2, v8qi)\n VAR1 (TERNOP, vtbx3, v8qi)\n VAR1 (TERNOP, vtbx4, v8qi)\n-VAR12 (LOAD1, vld1,\n-        v8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v2di)\n+VAR14 (LOAD1, vld1,\n+        v8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v2di,\n+        v4bf, v8bf)\n VAR12 (LOAD1LANE, vld1_lane,\n \tv8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di, v4bf, v8bf)\n VAR10 (LOAD1, vld1_dup,"}, {"sha": "b6b00dc03c27893a2e8c739af7e753f49706de49", "filename": "gcc/testsuite/gcc.target/arm/simd/vld1_bf16_1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvld1_bf16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890076673d4ade665470cfa8e5c92702bccfd2ee/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvld1_bf16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvld1_bf16_1.c?ref=890076673d4ade665470cfa8e5c92702bccfd2ee", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon } */\n+/* { dg-additional-options \"-save-temps -O2 -mfloat-abi=hard\" }  */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+\n+#include \"arm_neon.h\"\n+\n+/*\n+**test_vld1_bf16:\n+**\tvld1.16\t{d0}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x4_t\n+test_vld1_bf16 (bfloat16_t const *p)\n+{\n+  return vld1_bf16 (p);\n+}\n+\n+/*\n+**test_vld1q_bf16:\n+**\tvld1.16\t{d0-d1}, \\[r0\\]\n+**\tbx\tlr\n+*/\n+bfloat16x8_t\n+test_vld1q_bf16 (bfloat16_t const *p)\n+{\n+  return vld1q_bf16 (p);\n+}"}]}