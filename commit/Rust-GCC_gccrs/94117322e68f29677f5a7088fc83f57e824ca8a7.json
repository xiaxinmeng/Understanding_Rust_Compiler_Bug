{"sha": "94117322e68f29677f5a7088fc83f57e824ca8a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxMTczMjJlNjhmMjk2NzdmNWE3MDg4ZmM4M2Y1N2U4MjRjYThhNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-11-27T08:21:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-16T13:00:59Z"}, "message": "[Ada] Another small adjustment to System.Value_R\n\ngcc/ada/\n\n\t* libgnat/s-valuer.adb (Scan_Decimal_Digits): Tweak overflow test.\n\t(Scan_Integral_Digits): Likewise.", "tree": {"sha": "f71699012f27f915e85ab22b9cd12a0ed456a48c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f71699012f27f915e85ab22b9cd12a0ed456a48c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94117322e68f29677f5a7088fc83f57e824ca8a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94117322e68f29677f5a7088fc83f57e824ca8a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94117322e68f29677f5a7088fc83f57e824ca8a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94117322e68f29677f5a7088fc83f57e824ca8a7/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe22e189a355f19eb1344fcaf91bc2bb0b95f36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbe22e189a355f19eb1344fcaf91bc2bb0b95f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbe22e189a355f19eb1344fcaf91bc2bb0b95f36"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "65a0d509e5a85fbc99e489cc11b4547ae043c0cb", "filename": "gcc/ada/libgnat/s-valuer.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94117322e68f29677f5a7088fc83f57e824ca8a7/gcc%2Fada%2Flibgnat%2Fs-valuer.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94117322e68f29677f5a7088fc83f57e824ca8a7/gcc%2Fada%2Flibgnat%2Fs-valuer.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valuer.adb?ref=94117322e68f29677f5a7088fc83f57e824ca8a7", "patch": "@@ -236,12 +236,15 @@ package body System.Value_R is\n                Temp := Value * Uns (Base) + Uns (Digit);\n \n                --  Check if Temp is larger than Precision_Limit, taking into\n-               --  account that Temp may have wrapped around.\n+               --  account that Temp may wrap around when Precision_Limit is\n+               --  equal to the largest integer.\n \n                if Value <= Umax\n                  or else (Value <= UmaxB\n-                           and then Temp <= Precision_Limit\n-                           and then Temp >= Uns (Base))\n+                           and then ((Precision_Limit < Uns'Last\n+                                       and then Temp <= Precision_Limit)\n+                                     or else (Precision_Limit = Uns'Last\n+                                               and then Temp >= Uns (Base))))\n                then\n                   Value := Temp;\n                   Scale := Scale - 1;\n@@ -386,12 +389,15 @@ package body System.Value_R is\n             Temp := Value * Uns (Base) + Uns (Digit);\n \n             --  Check if Temp is larger than Precision_Limit, taking into\n-            --  account that Temp may have wrapped around.\n+            --  account that Temp may wrap around when Precision_Limit is\n+            --  equal to the largest integer.\n \n             if Value <= Umax\n               or else (Value <= UmaxB\n-                        and then Temp <= Precision_Limit\n-                        and then Temp >= Uns (Base))\n+                        and then ((Precision_Limit < Uns'Last\n+                                    and then Temp <= Precision_Limit)\n+                                  or else (Precision_Limit = Uns'Last\n+                                            and then Temp >= Uns (Base))))\n             then\n                Value := Temp;\n "}]}