{"sha": "f8921d7ddfff1ccf3718d7fb82821ff0dff98708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5MjFkN2RkZmZmMWNjZjM3MThkN2ZiODI4MjFmZjBkZmY5ODcwOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-10-07T15:12:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-10-07T15:12:00Z"}, "message": "* config/i386/i386.md (*lea_1_rex64, *lea_1, *lea_1_zext,\n\n\t*lea_2_rex64): Move before *add<mode>_1 pattern.\n\nFrom-SVN: r152530", "tree": {"sha": "1db09a0f288758a24991953178f456259d72f320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1db09a0f288758a24991953178f456259d72f320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8921d7ddfff1ccf3718d7fb82821ff0dff98708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8921d7ddfff1ccf3718d7fb82821ff0dff98708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8921d7ddfff1ccf3718d7fb82821ff0dff98708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8921d7ddfff1ccf3718d7fb82821ff0dff98708/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1fc237361486af6ebfd558b03496ce317c0b0434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc237361486af6ebfd558b03496ce317c0b0434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc237361486af6ebfd558b03496ce317c0b0434"}], "stats": {"total": 73, "additions": 39, "deletions": 34}, "files": [{"sha": "2893556ea8b658e6cbab1e8138efb784857605d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8921d7ddfff1ccf3718d7fb82821ff0dff98708/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8921d7ddfff1ccf3718d7fb82821ff0dff98708/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8921d7ddfff1ccf3718d7fb82821ff0dff98708", "patch": "@@ -1,3 +1,8 @@\n+2009-10-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*lea_1_rex64, *lea_1, *lea_1_zext,\n+\t*lea_2_rex64): Move before *add<mode>_1 pattern.\n+\n 2009-10-07  Jan Hubicka  <jh@suse.cz>\n \n \t* collect2.c (main): Add -fno-whole-program.\n@@ -87,7 +92,7 @@\n \t(maybe_add_dllexport) New function.\n \t(i386_pe_adjust_class_at_definition): Use it to propagate dllexport\n \tto class members.\n-\t\n+\n 2009-10-07  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/a2.md: Remove duplicated lines."}, {"sha": "d24f7ecb778aeb9a39637b4ee20a352d7d3a8a3f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8921d7ddfff1ccf3718d7fb82821ff0dff98708/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8921d7ddfff1ccf3718d7fb82821ff0dff98708/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f8921d7ddfff1ccf3718d7fb82821ff0dff98708", "patch": "@@ -6181,6 +6181,39 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*lea_1_rex64\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(match_operand:DI 1 \"no_seg_address_operand\" \"p\"))]\n+  \"TARGET_64BIT\"\n+  \"lea{q}\\t{%a1, %0|%0, %a1}\"\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_insn \"*lea_1\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(match_operand:SI 1 \"no_seg_address_operand\" \"p\"))]\n+  \"!TARGET_64BIT\"\n+  \"lea{l}\\t{%a1, %0|%0, %a1}\"\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+(define_insn \"*lea_1_zext\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI\n+\t (subreg:SI (match_operand:DI 1 \"no_seg_address_operand\" \"p\") 0)))]\n+  \"TARGET_64BIT\"\n+  \"lea{l}\\t{%a1, %k0|%k0, %a1}\"\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+(define_insn \"*lea_2_rex64\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(subreg:SI (match_operand:DI 1 \"no_seg_address_operand\" \"p\") 0))]\n+  \"TARGET_64BIT\"\n+  \"lea{l}\\t{%a1, %0|%0, %a1}\"\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_insn \"*add<mode>_1\"\n   [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=r,rm,r,r\")\n \t(plus:SWI48\n@@ -7364,39 +7397,6 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"QI\")])\n \n-(define_insn \"*lea_1_rex64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(match_operand:DI 1 \"no_seg_address_operand\" \"p\"))]\n-  \"TARGET_64BIT\"\n-  \"lea{q}\\t{%a1, %0|%0, %a1}\"\n-  [(set_attr \"type\" \"lea\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"*lea_1\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(match_operand:SI 1 \"no_seg_address_operand\" \"p\"))]\n-  \"!TARGET_64BIT\"\n-  \"lea{l}\\t{%a1, %0|%0, %a1}\"\n-  [(set_attr \"type\" \"lea\")\n-   (set_attr \"mode\" \"SI\")])\n-\n-(define_insn \"*lea_1_zext\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(zero_extend:DI\n-\t (subreg:SI (match_operand:DI 1 \"no_seg_address_operand\" \"p\") 0)))]\n-  \"TARGET_64BIT\"\n-  \"lea{l}\\t{%a1, %k0|%k0, %a1}\"\n-  [(set_attr \"type\" \"lea\")\n-   (set_attr \"mode\" \"SI\")])\n-\n-(define_insn \"*lea_2_rex64\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(subreg:SI (match_operand:DI 1 \"no_seg_address_operand\" \"p\") 0))]\n-  \"TARGET_64BIT\"\n-  \"lea{l}\\t{%a1, %0|%0, %a1}\"\n-  [(set_attr \"type\" \"lea\")\n-   (set_attr \"mode\" \"SI\")])\n-\n ;; The lea patterns for non-Pmodes needs to be matched by\n ;; several insns converted to real lea by splitters.\n "}]}