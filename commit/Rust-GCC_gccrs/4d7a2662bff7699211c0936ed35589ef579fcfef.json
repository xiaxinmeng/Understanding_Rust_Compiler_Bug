{"sha": "4d7a2662bff7699211c0936ed35589ef579fcfef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ3YTI2NjJiZmY3Njk5MjExYzA5MzZlZDM1NTg5ZWY1NzlmY2ZlZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-11-17T00:25:05Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-11-17T00:25:05Z"}, "message": "stdarg-2.c, stdarg-4.c: Condition PowerPC tests for saving FPRs on powerpc_fprs.\n\n\t* gcc.dg/tree-ssa/stdarg-2.c, gcc.dg/tree-ssa/stdarg-4.c:\n\tCondition PowerPC tests for saving FPRs on powerpc_fprs.\n\t* gcc.target/powerpc/compress-float-ppc.c,\n\tgcc.target/powerpc/compress-float-ppc-pic.c: Only test if\n\tpowerpc_fprs.\n\t* gcc.target/powerpc/rs6000-power2-2.c: Only test if powerpc_fprs;\n\tdo not pass -mhard-float.\n\nFrom-SVN: r118912", "tree": {"sha": "0cc3ce573cfde6c8cb1a7c24f81d82a0fb108f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cc3ce573cfde6c8cb1a7c24f81d82a0fb108f88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d7a2662bff7699211c0936ed35589ef579fcfef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7a2662bff7699211c0936ed35589ef579fcfef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7a2662bff7699211c0936ed35589ef579fcfef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7a2662bff7699211c0936ed35589ef579fcfef/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "328488eb1e23529f41ad71fcd7d50b435d39c911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328488eb1e23529f41ad71fcd7d50b435d39c911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328488eb1e23529f41ad71fcd7d50b435d39c911"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "c58709639995517f89eb45b8b32c4087ebf23324", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d7a2662bff7699211c0936ed35589ef579fcfef", "patch": "@@ -1,3 +1,13 @@\n+2006-11-17  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/tree-ssa/stdarg-2.c, gcc.dg/tree-ssa/stdarg-4.c:\n+\tCondition PowerPC tests for saving FPRs on powerpc_fprs.\n+\t* gcc.target/powerpc/compress-float-ppc.c,\n+\tgcc.target/powerpc/compress-float-ppc-pic.c: Only test if\n+\tpowerpc_fprs.\n+\t* gcc.target/powerpc/rs6000-power2-2.c: Only test if powerpc_fprs;\n+\tdo not pass -mhard-float.\n+\n 2006-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/volatile_aggregate.adb: New test."}, {"sha": "6b4783c53a1bead8e8836eaea2a696e8a140392b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c?ref=4d7a2662bff7699211c0936ed35589ef579fcfef", "patch": "@@ -58,7 +58,7 @@ f3 (int i, ...)\n   va_end (ap);\n }\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 1 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n@@ -225,7 +225,7 @@ f12 (int i, ...)\n   va_end (ap);\n }\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 24 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and 3 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n@@ -245,7 +245,7 @@ f13 (int i, ...)\n   va_end (ap);\n }\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 24 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and 3 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n@@ -265,7 +265,7 @@ f14 (int i, ...)\n   va_end (ap);\n }\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 24 GPR units and 3\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 1 GPR units and 2 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n@@ -289,7 +289,7 @@ f15 (int i, ...)\n   va_end (ap);\n }\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save 1 GPR units and 2 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */"}, {"sha": "d0e47e18b6404683add7e9433554af809f924f88", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c?ref=4d7a2662bff7699211c0936ed35589ef579fcfef", "patch": "@@ -41,7 +41,7 @@ f2 (int i, ...)\n   va_end (ap);\n }\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n@@ -85,7 +85,7 @@ f4 (int i, ...)\n     }\n }\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and 1 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */"}, {"sha": "aa1da5245ffbf55432851070020449629a7d264f", "filename": "gcc/testsuite/gcc.target/powerpc/compress-float-ppc-pic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcompress-float-ppc-pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcompress-float-ppc-pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcompress-float-ppc-pic.c?ref=4d7a2662bff7699211c0936ed35589ef579fcfef", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-do compile { target powerpc_fprs } } */\n /* { dg-options \"-O2 -fpic\" } */\n double foo (double x) {\n   return x + 1.75;"}, {"sha": "312642e68fc1ac2fd95400aba93dd5239759beda", "filename": "gcc/testsuite/gcc.target/powerpc/compress-float-ppc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcompress-float-ppc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcompress-float-ppc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcompress-float-ppc.c?ref=4d7a2662bff7699211c0936ed35589ef579fcfef", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-do compile { target powerpc_fprs } } */\n /* { dg-options \"-O2\" } */\n double foo (double x) {\n   return x + 1.75;"}, {"sha": "567ad8c927805392b04d1b20f20f3f314decf63e", "filename": "gcc/testsuite/gcc.target/powerpc/rs6000-power2-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7a2662bff7699211c0936ed35589ef579fcfef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-2.c?ref=4d7a2662bff7699211c0936ed35589ef579fcfef", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { ilp32 } } } */\n-/* { dg-options \"-O3 -mcpu=power2 -fno-schedule-insns -w -mhard-float\" } */\n+/* { dg-do compile { target { powerpc_fprs && ilp32 } } } */\n+/* { dg-options \"-O3 -mcpu=power2 -fno-schedule-insns -w\" } */\n /* { dg-final { scan-assembler-not \"lfd\" } } */\n /* { dg-final { scan-assembler-not \"sfd\" } } */\n /* { dg-final { scan-assembler \"lfq\" } } */"}]}