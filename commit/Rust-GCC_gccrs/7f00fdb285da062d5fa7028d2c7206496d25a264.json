{"sha": "7f00fdb285da062d5fa7028d2c7206496d25a264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YwMGZkYjI4NWRhMDYyZDVmYTcwMjhkMmM3MjA2NDk2ZDI1YTI2NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-12T00:12:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-12T00:12:20Z"}, "message": "PR libstdc++/88811 fix typo introduced in r266569\n\n\tPR libstdc++/88811\n\tPR libstdc++/83306\n\t* src/filesystem/path.cc: Fix typo. If first path is empty, show []\n\tbefore second path.\n\t* testsuite/experimental/filesystem/filesystem_error/cons.cc: New\n\ttest.\n\nFrom-SVN: r267868", "tree": {"sha": "edbaaee58fd86d3bc7a8b07ccf284b65438ac867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edbaaee58fd86d3bc7a8b07ccf284b65438ac867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f00fdb285da062d5fa7028d2c7206496d25a264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f00fdb285da062d5fa7028d2c7206496d25a264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f00fdb285da062d5fa7028d2c7206496d25a264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f00fdb285da062d5fa7028d2c7206496d25a264/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66dc59e24fc7bcf28d1ec20919f7014a701bfc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66dc59e24fc7bcf28d1ec20919f7014a701bfc9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66dc59e24fc7bcf28d1ec20919f7014a701bfc9d"}], "stats": {"total": 105, "additions": 103, "deletions": 2}, "files": [{"sha": "4dbf75bf48fa17c318e9f0fed8e809624af06734", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f00fdb285da062d5fa7028d2c7206496d25a264/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f00fdb285da062d5fa7028d2c7206496d25a264/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7f00fdb285da062d5fa7028d2c7206496d25a264", "patch": "@@ -1,3 +1,12 @@\n+2019-01-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/88811\n+\tPR libstdc++/83306\n+\t* src/filesystem/path.cc: Fix typo. If first path is empty, show []\n+\tbefore second path.\n+\t* testsuite/experimental/filesystem/filesystem_error/cons.cc: New\n+\ttest.\n+\n 2019-01-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/intro.xml: Include new section."}, {"sha": "92def10e33ec760779a0759e4c44c4e1d7d9ef72", "filename": "libstdc++-v3/src/filesystem/path.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f00fdb285da062d5fa7028d2c7206496d25a264/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f00fdb285da062d5fa7028d2c7206496d25a264/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc?ref=7f00fdb285da062d5fa7028d2c7206496d25a264", "patch": "@@ -494,7 +494,7 @@ fs::filesystem_error::_M_gen_what()\n   const std::string pstr2 = _M_path2.u8string();\n   experimental::string_view s = this->system_error::what();\n   const size_t len = 18 + s.length()\n-    + (pstr1.length() ? pstr1.length() + 3 : 0)\n+    + (pstr1.length() || pstr2.length() ? pstr1.length() + 3 : 0)\n     + (pstr2.length() ? pstr2.length() + 3 : 0);\n   std::string w;\n   w.reserve(len);\n@@ -506,8 +506,10 @@ fs::filesystem_error::_M_gen_what()\n       w += pstr1;\n       w += ']';\n     }\n-  if (!pstr1.empty())\n+  if (!pstr2.empty())\n     {\n+      if (pstr1.empty())\n+\tw += \" []\";\n       w += \" [\";\n       w += pstr2;\n       w += ']';"}, {"sha": "a08852df1e39cb9a99360bac8864174a8a093193", "filename": "libstdc++-v3/testsuite/experimental/filesystem/filesystem_error/cons.cc", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f00fdb285da062d5fa7028d2c7206496d25a264/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Ffilesystem_error%2Fcons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f00fdb285da062d5fa7028d2c7206496d25a264/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Ffilesystem_error%2Fcons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Ffilesystem_error%2Fcons.cc?ref=7f00fdb285da062d5fa7028d2c7206496d25a264", "patch": "@@ -0,0 +1,90 @@\n+// Copyright (C) 2018-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -lstdc++fs\" }\n+// { dg-do run { target c++11 } }\n+// { dg-require-filesystem-ts \"\" }\n+\n+#include <experimental/filesystem>\n+#include <testsuite_hooks.h>\n+\n+using std::experimental::filesystem::filesystem_error;\n+using std::experimental::filesystem::path;\n+\n+bool contains(std::string what_str, std::string expected)\n+{\n+  return what_str.find(expected) != std::string::npos;\n+}\n+\n+void\n+test01()\n+{\n+  const char* const str = \"error test\";\n+  const std::error_code ec = make_error_code(std::errc::is_a_directory);\n+  const path p1 = \"test/path/one\";\n+  const path p2 = \"/test/path/two\";\n+\n+  const filesystem_error e1(str, ec);\n+  VERIFY( contains(e1.what(), str) );\n+  VERIFY( !contains(e1.what(), \"[]\") ); // no \"empty path\" in the string\n+  VERIFY( e1.path1().empty() );\n+  VERIFY( e1.path2().empty() );\n+  VERIFY( e1.code() == ec );\n+\n+  const filesystem_error e2(str, p1, ec);\n+  VERIFY( e2.path1() == p1 );\n+  VERIFY( e2.path2().empty() );\n+  VERIFY( contains(e2.what(), str) );\n+  VERIFY( contains(e2.what(), p1.string()) );\n+  VERIFY( e2.code() == ec );\n+\n+  const filesystem_error e3(str, path{}, ec);\n+  VERIFY( e3.path1().empty() );\n+  VERIFY( e3.path2().empty() );\n+  VERIFY( contains(e3.what(), str) );\n+  VERIFY( e3.code() == ec );\n+\n+  const filesystem_error e4(str, p1, p2, ec);\n+  VERIFY( e4.path1() == p1 );\n+  VERIFY( e4.path2() == p2 );\n+  VERIFY( contains(e4.what(), str) );\n+  VERIFY( contains(e4.what(), p1.string()) );\n+  VERIFY( contains(e4.what(), p2.string()) );\n+  VERIFY( !contains(e4.what(), \"[]\") );\n+  VERIFY( e4.code() == ec );\n+\n+  const filesystem_error e5(str, p1, path{}, ec);\n+  VERIFY( e5.path1() == p1 );\n+  VERIFY( e5.path2().empty() );\n+  VERIFY( contains(e5.what(), str) );\n+  VERIFY( contains(e5.what(), p1.string()) );\n+  VERIFY( e5.code() == ec );\n+\n+  const filesystem_error e6(str, path{}, p2, ec);\n+  VERIFY( e6.path1().empty() );\n+  VERIFY( e6.path2() == p2 );\n+  VERIFY( contains(e6.what(), str) );\n+  VERIFY( contains(e6.what(), \"[]\") );\n+  VERIFY( contains(e6.what(), p2.string()) );\n+  VERIFY( e6.code() == ec );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}