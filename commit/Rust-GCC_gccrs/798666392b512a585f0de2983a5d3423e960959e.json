{"sha": "798666392b512a585f0de2983a5d3423e960959e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk4NjY2MzkyYjUxMmE1ODVmMGRlMjk4M2E1ZDM0MjNlOTYwOTU5ZQ==", "commit": {"author": {"name": "Matt Jacobson", "email": "mhjacobson@me.com", "date": "2021-07-29T08:57:23Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-17T19:10:39Z"}, "message": "Objective-C: Default flag_objc_sjlj_exceptions off for NeXT ABI >= 2.\n\nSigned-off-by: Matt Jacobson <mhjacobson@me.com>\n\ngcc/c-family/ChangeLog:\n\n\t* c-opts.c (c_common_post_options): Default to\n\tflag_objc_sjlj_exceptions = 1 only when flag_objc_abi < 2.\n\ngcc/objc/ChangeLog:\n\n\t* objc-next-runtime-abi-02.c\n\t(objc_next_runtime_abi_02_init): Warn about and reset\n\tflag_objc_sjlj_exceptions regardless of flag_objc_exceptions.\n\t(next_runtime_02_initialize): Use a checking assert that\n\tflag_objc_sjlj_exceptions is off.", "tree": {"sha": "680c87e13bfae9575fdc64c64b565f20fb76b15e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/680c87e13bfae9575fdc64c64b565f20fb76b15e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/798666392b512a585f0de2983a5d3423e960959e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798666392b512a585f0de2983a5d3423e960959e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/798666392b512a585f0de2983a5d3423e960959e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798666392b512a585f0de2983a5d3423e960959e/comments", "author": {"login": "mhjacobson", "id": 1477437, "node_id": "MDQ6VXNlcjE0Nzc0Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1477437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhjacobson", "html_url": "https://github.com/mhjacobson", "followers_url": "https://api.github.com/users/mhjacobson/followers", "following_url": "https://api.github.com/users/mhjacobson/following{/other_user}", "gists_url": "https://api.github.com/users/mhjacobson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhjacobson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhjacobson/subscriptions", "organizations_url": "https://api.github.com/users/mhjacobson/orgs", "repos_url": "https://api.github.com/users/mhjacobson/repos", "events_url": "https://api.github.com/users/mhjacobson/events{/privacy}", "received_events_url": "https://api.github.com/users/mhjacobson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60b94d8bd2280837e980a53cf81bdf902d726e61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b94d8bd2280837e980a53cf81bdf902d726e61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60b94d8bd2280837e980a53cf81bdf902d726e61"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "373af0cf06f1302c897d7ab0b82ec5fe580472bb", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798666392b512a585f0de2983a5d3423e960959e/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798666392b512a585f0de2983a5d3423e960959e/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=798666392b512a585f0de2983a5d3423e960959e", "patch": "@@ -852,9 +852,9 @@ c_common_post_options (const char **pfilename)\n   else if (!flag_gnu89_inline && !flag_isoc99)\n     error (\"%<-fno-gnu89-inline%> is only supported in GNU99 or C99 mode\");\n \n-  /* Default to ObjC sjlj exception handling if NeXT runtime.  */\n+  /* Default to ObjC sjlj exception handling if NeXT runtime < v2.  */\n   if (flag_objc_sjlj_exceptions < 0)\n-    flag_objc_sjlj_exceptions = flag_next_runtime;\n+    flag_objc_sjlj_exceptions = (flag_next_runtime && flag_objc_abi < 2);\n   if (flag_objc_exceptions && !flag_objc_sjlj_exceptions)\n     flag_exceptions = 1;\n "}, {"sha": "c552013ab272c6f761fb4a9c007e3c0590b6119d", "filename": "gcc/objc/objc-next-runtime-abi-02.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798666392b512a585f0de2983a5d3423e960959e/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798666392b512a585f0de2983a5d3423e960959e/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c?ref=798666392b512a585f0de2983a5d3423e960959e", "patch": "@@ -245,7 +245,7 @@ objc_next_runtime_abi_02_init (objc_runtime_hooks *rthooks)\n {\n   extern_names = ggc_cleared_vec_alloc<hash> (SIZEHASHTABLE);\n \n-  if (flag_objc_exceptions && flag_objc_sjlj_exceptions)\n+  if (flag_objc_sjlj_exceptions)\n     {\n       inform (UNKNOWN_LOCATION,\n \t      \"%<-fobjc-sjlj-exceptions%> is ignored for \"\n@@ -507,7 +507,7 @@ static void next_runtime_02_initialize (void)\n   objc_getPropertyStruct_decl = NULL_TREE;\n   objc_setPropertyStruct_decl = NULL_TREE;\n \n-  gcc_assert (!flag_objc_sjlj_exceptions);\n+  gcc_checking_assert (!flag_objc_sjlj_exceptions);\n \n   /* Although we warn that fobjc-exceptions is required for exceptions\n      code, we carry on and create it anyway.  */"}]}