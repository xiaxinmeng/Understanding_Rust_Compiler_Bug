{"sha": "8a3a7e67a1514815319cde8141b2edb0e7ed8701", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEzYTdlNjdhMTUxNDgxNTMxOWNkZTgxNDFiMmVkYjBlN2VkODcwMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2014-04-18T15:52:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2014-04-18T15:52:50Z"}, "message": "aarch64: Fix build error in aarch64_register_move_cost\n\n        * config/aarch64/aarch64.c (aarch64_register_move_cost): Pass a mode\n        to GET_MODE_SIZE, not a reg_class_t.\n\nFrom-SVN: r209517", "tree": {"sha": "2b4b4417747ac614bde309e2b75d2b767a0a58f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b4b4417747ac614bde309e2b75d2b767a0a58f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a3a7e67a1514815319cde8141b2edb0e7ed8701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a3a7e67a1514815319cde8141b2edb0e7ed8701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a3a7e67a1514815319cde8141b2edb0e7ed8701", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a3a7e67a1514815319cde8141b2edb0e7ed8701/comments", "author": null, "committer": null, "parents": [{"sha": "ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "67109f8f1761ba0d094d1d44221c01d62de425a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a3a7e67a1514815319cde8141b2edb0e7ed8701/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a3a7e67a1514815319cde8141b2edb0e7ed8701/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a3a7e67a1514815319cde8141b2edb0e7ed8701", "patch": "@@ -1,3 +1,8 @@\n+2014-04-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_register_move_cost): Pass a mode\n+\tto GET_MODE_SIZE, not a reg_class_t.\n+\n 2014-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/vsx.md (vsx_xxmrghw_<mode>): Adjust for"}, {"sha": "7b6c2b38e03a556b8b31164d1a54a697087d8f3c", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a3a7e67a1514815319cde8141b2edb0e7ed8701/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a3a7e67a1514815319cde8141b2edb0e7ed8701/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=8a3a7e67a1514815319cde8141b2edb0e7ed8701", "patch": "@@ -4847,9 +4847,11 @@ aarch64_address_cost (rtx x ATTRIBUTE_UNUSED,\n }\n \n static int\n-aarch64_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t    reg_class_t from, reg_class_t to)\n+aarch64_register_move_cost (enum machine_mode mode,\n+\t\t\t    reg_class_t from_i, reg_class_t to_i)\n {\n+  enum reg_class from = (enum reg_class) from_i;\n+  enum reg_class to = (enum reg_class) to_i;\n   const struct cpu_regmove_cost *regmove_cost\n     = aarch64_tune_params->regmove_cost;\n \n@@ -4875,8 +4877,7 @@ aarch64_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n      secondary reload.  A general register is used as a scratch to move\n      the upper DI value and the lower DI value is moved directly,\n      hence the cost is the sum of three moves. */\n-\n-  if (! TARGET_SIMD && GET_MODE_SIZE (from) == 128 && GET_MODE_SIZE (to) == 128)\n+  if (! TARGET_SIMD && GET_MODE_SIZE (mode) == 128)\n     return regmove_cost->GP2FP + regmove_cost->FP2GP + regmove_cost->FP2FP;\n \n   return regmove_cost->FP2FP;"}]}