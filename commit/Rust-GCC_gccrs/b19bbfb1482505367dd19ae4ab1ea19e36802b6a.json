{"sha": "b19bbfb1482505367dd19ae4ab1ea19e36802b6a", "node_id": "C_kwDOANBUbNoAKGIxOWJiZmIxNDgyNTA1MzY3ZGQxOWFlNGFiMWVhMTllMzY4MDJiNmE", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-09-30T18:29:31Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-09-30T18:29:31Z"}, "message": "Fortran: resolve expressions during SIZE simplification\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/102458\n\t* simplify.c (simplify_size): Resolve expressions used in array\n\tspecifications so that SIZE can be simplified.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/102458\n\t* gfortran.dg/pr102458b.f90: New test.", "tree": {"sha": "cefdb5e5b056c1ebf3bf9ad3df6dee2d9c8dd260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cefdb5e5b056c1ebf3bf9ad3df6dee2d9c8dd260"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b19bbfb1482505367dd19ae4ab1ea19e36802b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19bbfb1482505367dd19ae4ab1ea19e36802b6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b19bbfb1482505367dd19ae4ab1ea19e36802b6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19bbfb1482505367dd19ae4ab1ea19e36802b6a/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a0861ef29521e90293bd0236d2bb30b71a4970e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0861ef29521e90293bd0236d2bb30b71a4970e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0861ef29521e90293bd0236d2bb30b71a4970e"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "f40e4930b5815ddc125dee690d2cec462daae4b6", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19bbfb1482505367dd19ae4ab1ea19e36802b6a/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19bbfb1482505367dd19ae4ab1ea19e36802b6a/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=b19bbfb1482505367dd19ae4ab1ea19e36802b6a", "patch": "@@ -7471,6 +7471,7 @@ simplify_size (gfc_expr *array, gfc_expr *dim, int k)\n   mpz_t size;\n   gfc_expr *return_value;\n   int d;\n+  gfc_ref *ref;\n \n   /* For unary operations, the size of the result is given by the size\n      of the operand.  For binary ones, it's the size of the first operand\n@@ -7527,6 +7528,10 @@ simplify_size (gfc_expr *array, gfc_expr *dim, int k)\n       return simplified;\n     }\n \n+  for (ref = array->ref; ref; ref = ref->next)\n+    if (ref->type == REF_ARRAY && ref->u.ar.as)\n+      gfc_resolve_array_spec (ref->u.ar.as, 0);\n+\n   if (dim == NULL)\n     {\n       if (!gfc_array_size (array, &size))"}, {"sha": "3e1026e635a862a45357a0a19bc829336d568649", "filename": "gcc/testsuite/gfortran.dg/pr102458b.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19bbfb1482505367dd19ae4ab1ea19e36802b6a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr102458b.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19bbfb1482505367dd19ae4ab1ea19e36802b6a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr102458b.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr102458b.f90?ref=b19bbfb1482505367dd19ae4ab1ea19e36802b6a", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+! { dg-final { scan-tree-dump-times \"_gfortran_stop_numeric\" 0 \"original\" } }\n+! PR fortran/102458\n+\n+subroutine s4\n+  integer, parameter :: n = 4\n+  integer            :: w(transfer(n, n)) = 1\n+  integer            :: x(transfer(n, n))\n+  integer            :: y(2*int(n) - n)\n+  type t\n+     integer         :: z(int(n))\n+  end type t\n+  type(t)            :: tt, uu(3)\n+  integer, parameter :: i = size (w)\n+  integer, parameter :: k = size (x)\n+  integer, parameter :: m = size (y)\n+  integer, parameter :: j = size (tt% z)\n+  integer, parameter :: l = size (uu(2)% z)\n+  if (i /= n .or. k /= n .or. m /= n .or. j /= n .or. l /= n) stop 1\n+end"}]}