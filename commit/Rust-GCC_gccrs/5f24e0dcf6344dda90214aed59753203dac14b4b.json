{"sha": "5f24e0dcf6344dda90214aed59753203dac14b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyNGUwZGNmNjM0NGRkYTkwMjE0YWVkNTk3NTMyMDNkYWMxNGI0Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-02-15T21:06:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-15T21:06:16Z"}, "message": "cfgcleanup.c: Include params.h.\n\n        * cfgcleanup.c: Include params.h.\n        (try_crossjump_bb): Use PARAM_MAX_CROSSJUMP_EDGES.  Fix test for\n        too many outgoing edges from a block.\n        * Makefile.in (cfgcleanup.o): Depend on PARAMS_H.\n        * params.def (max-crossjump-edges): New.\n        * doc/invoke.texi: Document it.\n\nFrom-SVN: r62942", "tree": {"sha": "d9e25ddc6c9d0b6ad9a565e5db34fc03dfed353b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9e25ddc6c9d0b6ad9a565e5db34fc03dfed353b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f24e0dcf6344dda90214aed59753203dac14b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f24e0dcf6344dda90214aed59753203dac14b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f24e0dcf6344dda90214aed59753203dac14b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f24e0dcf6344dda90214aed59753203dac14b4b/comments", "author": null, "committer": null, "parents": [{"sha": "9381bbc998366a7d255d2ad86d3f87b64b22ba22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9381bbc998366a7d255d2ad86d3f87b64b22ba22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9381bbc998366a7d255d2ad86d3f87b64b22ba22"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "bba56b8a3a118ca0680226e32abe3ebe9bcce8f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f24e0dcf6344dda90214aed59753203dac14b4b", "patch": "@@ -1,3 +1,12 @@\n+2003-02-15  Richard Henderson  <rth@redhat.com>\n+\n+\t* cfgcleanup.c: Include params.h.\n+\t(try_crossjump_bb): Use PARAM_MAX_CROSSJUMP_EDGES.  Fix test for\n+\ttoo many outgoing edges from a block.\n+\t* Makefile.in (cfgcleanup.o): Depend on PARAMS_H.\n+\t* params.def (max-crossjump-edges): New.\n+\t* doc/invoke.texi: Document it.\n+\n 2003-02-15  Richard Henderson  <rth@redhat.com>\n \n         * recog.c (split_all_insns): Include new blocks in life update;"}, {"sha": "8af0a704c59f5248ea1c6df72afbafd6f68b5514", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5f24e0dcf6344dda90214aed59753203dac14b4b", "patch": "@@ -1593,9 +1593,10 @@ cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n    insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n    function.h except.h $(GGC_H)\n-cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TIMEVAR_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h flags.h $(RECOG_H) toplev.h \\\n-   $(GGC_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H)\n+cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+   $(RTL_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h flags.h \\\n+   $(RECOG_H) toplev.h $(GGC_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H) \\\n+   $(PARAMS_H)\n cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h flags.h\n cfgloopanal.o : cfgloopanal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\"}, {"sha": "3607fc3fcddd82b3fecc20aec3dfb8ec8dd30485", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=5f24e0dcf6344dda90214aed59753203dac14b4b", "patch": "@@ -45,6 +45,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"recog.h\"\n #include \"toplev.h\"\n #include \"cselib.h\"\n+#include \"params.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n \n@@ -1464,7 +1465,7 @@ try_crossjump_bb (mode, bb)\n {\n   edge e, e2, nexte2, nexte, fallthru;\n   bool changed;\n-  int n = 0;\n+  int n = 0, max;\n \n   /* Nothing to do if there is not at least two incoming edges.  */\n   if (!bb->pred || !bb->pred->pred_next)\n@@ -1473,11 +1474,13 @@ try_crossjump_bb (mode, bb)\n   /* It is always cheapest to redirect a block that ends in a branch to\n      a block that falls through into BB, as that adds no branches to the\n      program.  We'll try that combination first.  */\n-  for (fallthru = bb->pred; fallthru; fallthru = fallthru->pred_next, n++)\n+  fallthru = NULL;\n+  max = PARAM_VALUE (PARAM_MAX_CROSSJUMP_EDGES);\n+  for (e = bb->pred; e ; e = e->pred_next, n++)\n     {\n-      if (fallthru->flags & EDGE_FALLTHRU)\n-\tbreak;\n-      if (n > 100)\n+      if (e->flags & EDGE_FALLTHRU)\n+\tfallthru = e;\n+      if (n > max)\n \treturn false;\n     }\n "}, {"sha": "0c6f4eb4dd76c256ec8f699d798e8cdaa482a3d3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5f24e0dcf6344dda90214aed59753203dac14b4b", "patch": "@@ -4346,6 +4346,13 @@ In each case, the @var{value} is an integer.  The allowable choices for\n @var{name} are given in the following table:\n \n @table @gcctabopt\n+@item max-crossjump-edges\n+The maximum number of incoming edges to consider for crossjumping.\n+The algorithm used by @option(-fcrossjumping) is @math{O(N^2)} in\n+the number of edges incoming to each block.  Increasing values mean\n+more aggressive optimization, making the compile time increase with\n+probably small improvement in executable size.\n+\n @item max-delay-slot-insn-search\n The maximum number of instructions to consider when looking for an\n instruction to fill a delay slot.  If more than this arbitrary number of"}, {"sha": "66d823164d2eec618230b51581bcd65b9a86327e", "filename": "gcc/params.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f24e0dcf6344dda90214aed59753203dac14b4b/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=5f24e0dcf6344dda90214aed59753203dac14b4b", "patch": "@@ -202,6 +202,12 @@ DEFPARAM(TRACER_MIN_BRANCH_PROBABILITY,\n this threshold (in percents). Used when profile feedback is not available\",\n \t 50)\n \n+/* The maximum number of incoming edges to consider for crossjumping.  */\n+DEFPARAM(PARAM_MAX_CROSSJUMP_EDGES,\n+\t \"max-crossjump-edges\",\n+\t \"The maximum number of incoming edges to consider for crossjumping\",\n+\t 100)\n+\n #ifdef ENABLE_GC_ALWAYS_COLLECT\n # define GGC_MIN_EXPAND_DEFAULT 0\n # define GGC_MIN_HEAPSIZE_DEFAULT 0"}]}