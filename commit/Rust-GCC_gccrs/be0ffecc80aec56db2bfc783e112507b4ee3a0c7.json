{"sha": "be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwZmZlY2M4MGFlYzU2ZGIyYmZjNzgzZTExMjUwN2I0ZWUzYTBjNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-29T16:56:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-29T16:56:57Z"}, "message": "i386.opt (flag_fentry): Do not init to -1.\n\n\t* config/i386/i386.opt (flag_fentry): Do not init to -1.\n\t* config/i386/i386.c (ix86_option_override_internal): Simplify\n\tsetting of opts->x_flag_entry.\n\nFrom-SVN: r251416", "tree": {"sha": "64e85ca54e1b6dd899e51c81eb964ea26d337f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64e85ca54e1b6dd899e51c81eb964ea26d337f43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/comments", "author": null, "committer": null, "parents": [{"sha": "8eb91869020f454f3af6ffa7dd4f401f9f5dc680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb91869020f454f3af6ffa7dd4f401f9f5dc680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb91869020f454f3af6ffa7dd4f401f9f5dc680"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "3cf1c74b7586f933f9ca31db1d371d05dd1f6e8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "patch": "@@ -1,3 +1,9 @@\n+2017-08-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.opt (flag_fentry): Do not init to -1.\n+\t* config/i386/i386.c (ix86_option_override_internal): Simplify\n+\tsetting of opts->x_flag_entry.\n+\n 2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n \t    Richard Biener  <rguenther@suse.de>\n@@ -461,8 +467,7 @@\n \n 2017-08-22  Richard Biener  <rguenther@suse.de>\n \n-\t* tree-cfg.c (gimple_split_edge): Avoid reallocating target\n-\tPHI nodes.\n+\t* tree-cfg.c (gimple_split_edge): Avoid reallocating target PHI nodes.\n \n 2017-08-22  Richard Biener  <rguenther@suse.de>\n \n@@ -500,8 +505,7 @@\n \t(-mvsx-scalar-double): Likewise.\n \t(-mallow-df-permute): Likewise.\n \t(-mvectorize-builtins): Likewise.\n-\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok):\n-\tLikewise.\n+\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Likewise.\n \t(rs6000_builtin_vectorized_function): Likewise.\n \t(rs6000_builtin_md_vectorized_function): Likewise.\n \t(rs6000_opt_vars): Likewise."}, {"sha": "509fd3a26d5b78022e8ae69f0985a3a2333fdee5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "patch": "@@ -6545,27 +6545,18 @@ ix86_option_override_internal (bool main_args_p,\n     opts->x_target_flags |= MASK_CLD & ~opts_set->x_target_flags;\n #endif\n \n-  if (!TARGET_64BIT_P (opts->x_ix86_isa_flags) && opts->x_flag_pic)\n+  /* Set the default value for -mfentry.  */\n+  if (!opts_set->x_flag_fentry)\n+    opts->x_flag_fentry = TARGET_SEH;\n+  else\n     {\n-      if (opts->x_flag_fentry > 0)\n-        sorry (\"-mfentry isn%'t supported for 32-bit in combination \"\n+      if (!TARGET_64BIT_P (opts->x_ix86_isa_flags) && opts->x_flag_pic\n+\t  && opts->x_flag_fentry)\n+\tsorry (\"-mfentry isn%'t supported for 32-bit in combination \"\n \t       \"with -fpic\");\n-      opts->x_flag_fentry = 0;\n-    }\n-  else if (TARGET_SEH)\n-    {\n-      if (opts->x_flag_fentry == 0)\n+      else if (TARGET_SEH && !opts->x_flag_fentry)\n \tsorry (\"-mno-fentry isn%'t compatible with SEH\");\n-      opts->x_flag_fentry = 1;\n     }\n-  else if (opts->x_flag_fentry < 0)\n-   {\n-#if defined(PROFILE_BEFORE_PROLOGUE)\n-     opts->x_flag_fentry = 1;\n-#else\n-     opts->x_flag_fentry = 0;\n-#endif\n-   }\n \n   if (TARGET_SEH && TARGET_CALL_MS2SYSV_XLOGUES)\n     sorry (\"-mcall-ms2sysv-xlogues isn%'t currently supported with SEH\");"}, {"sha": "81bbc1e2170a1e37b4d79843c4b9aa0fc0843c8b", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0ffecc80aec56db2bfc783e112507b4ee3a0c7/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=be0ffecc80aec56db2bfc783e112507b4ee3a0c7", "patch": "@@ -862,7 +862,7 @@ Target Report Mask(ISA_PREFETCHWT1) Var(ix86_isa_flags) Save\n Support PREFETCHWT1 built-in functions and code generation.\n \n mfentry\n-Target Report Var(flag_fentry) Init(-1)\n+Target Report Var(flag_fentry)\n Emit profiling counter call at function entry before prologue.\n \n mrecord-mcount"}]}