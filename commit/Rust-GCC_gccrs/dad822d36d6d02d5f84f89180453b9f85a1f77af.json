{"sha": "dad822d36d6d02d5f84f89180453b9f85a1f77af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFkODIyZDM2ZDZkMDJkNWY4NGY4OTE4MDQ1M2I5Zjg1YTFmNzdhZg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-02-10T11:38:12Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-02-10T11:38:12Z"}, "message": "rtl.h (schedule_insns, [...]): Move under the file in which they are actually declared.\n\n* rtl.h (schedule_insns, schedule_ebbs, fix_sched_param,\ngen_lowpart_SUBREG): Move under the file in which they\nare actually declared.\n\nFrom-SVN: r77597", "tree": {"sha": "ee8b233694db30f6f631a5587485d27b09ae5b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee8b233694db30f6f631a5587485d27b09ae5b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dad822d36d6d02d5f84f89180453b9f85a1f77af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad822d36d6d02d5f84f89180453b9f85a1f77af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dad822d36d6d02d5f84f89180453b9f85a1f77af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad822d36d6d02d5f84f89180453b9f85a1f77af/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd2710546b7ef850ed0d0634a92f1b39fd5ebef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2710546b7ef850ed0d0634a92f1b39fd5ebef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2710546b7ef850ed0d0634a92f1b39fd5ebef3"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "babd5fdb47dd6d5bdb65e95ee7dce6c115a9a52b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad822d36d6d02d5f84f89180453b9f85a1f77af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad822d36d6d02d5f84f89180453b9f85a1f77af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dad822d36d6d02d5f84f89180453b9f85a1f77af", "patch": "@@ -1,3 +1,9 @@\n+2004-02-10  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* rtl.h (schedule_insns, schedule_ebbs, fix_sched_param,\n+\tgen_lowpart_SUBREG): Move under the file in which they\n+\tare actually declared.\n+\n 2004-02-10  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* doc/sourcebuild.texi: Add libada documentation."}, {"sha": "03024667bb5d11713e88d6439660a93ed7bf630b", "filename": "gcc/rtl.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad822d36d6d02d5f84f89180453b9f85a1f77af/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad822d36d6d02d5f84f89180453b9f85a1f77af/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=dad822d36d6d02d5f84f89180453b9f85a1f77af", "patch": "@@ -1892,8 +1892,6 @@ extern rtx gen_rtx_REG (enum machine_mode, unsigned);\n extern rtx gen_rtx_SUBREG (enum machine_mode, rtx, int);\n extern rtx gen_rtx_MEM (enum machine_mode, rtx);\n \n-extern rtx gen_lowpart_SUBREG (enum machine_mode, rtx);\n-\n /* We need the cast here to ensure that we get the same result both with\n    and without prototypes.  */\n #define GEN_INT(N)  gen_rtx_CONST_INT (VOIDmode, (HOST_WIDE_INT) (N))\n@@ -2103,6 +2101,7 @@ extern void delete_insn_chain (rtx, rtx);\n extern rtx unlink_insn_chain (rtx, rtx);\n extern rtx delete_insn_and_edges (rtx);\n extern void delete_insn_chain_and_edges (rtx, rtx);\n+extern rtx gen_lowpart_SUBREG (enum machine_mode, rtx);\n \n /* In combine.c */\n extern int combine_instructions (rtx, unsigned int);\n@@ -2115,11 +2114,17 @@ extern void dump_combine_total_stats (FILE *);\n /* In web.c */\n extern void web_main (void);\n \n-/* In sched.c.  */\n+/* In sched-rgn.c.  */\n #ifdef BUFSIZ\n extern void schedule_insns (FILE *);\n+#endif\n+\n+/* In sched-ebb.c.  */\n+#ifdef BUFSIZ\n extern void schedule_ebbs (FILE *);\n #endif\n+\n+/* In haifa-sched.c.  */\n extern void fix_sched_param (const char *, const char *);\n \n /* In print-rtl.c */"}]}