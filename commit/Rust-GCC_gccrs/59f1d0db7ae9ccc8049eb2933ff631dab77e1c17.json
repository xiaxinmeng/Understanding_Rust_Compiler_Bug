{"sha": "59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmMWQwZGI3YWU5Y2NjODA0OWViMjkzM2ZmNjMxZGFiNzdlMWMxNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-11-18T13:36:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-18T13:36:38Z"}, "message": "* tree.c (warn_deprecated_use): Show declaration with inform.\n\nFrom-SVN: r217714", "tree": {"sha": "2b2244051f5df75ce11258f354090a2201a8dc5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b2244051f5df75ce11258f354090a2201a8dc5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "023d89c70b3912087d9e4a1db51993ed94fdd088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023d89c70b3912087d9e4a1db51993ed94fdd088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023d89c70b3912087d9e4a1db51993ed94fdd088"}], "stats": {"total": 136, "additions": 68, "deletions": 68}, "files": [{"sha": "66a2fd363927a03bb34626744bb289b4c643d879", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -1,3 +1,7 @@\n+2014-11-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (warn_deprecated_use): Show declaration with inform.\n+\n 2014-11-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63914"}, {"sha": "b65beb15bc6c84a294a8a1d9708b10e635d3518d", "filename": "gcc/testsuite/g++.dg/warn/deprecated-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-3.C?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -10,5 +10,5 @@ struct Foo\n void g(void)\n {\n   Foo f;\n-  (int)f; // { dg-warning \"'Foo::operator int\\\\(\\\\)' is deprecated \\\\(declared at\" }\n+  (int)f; // { dg-warning \"'Foo::operator int\\\\(\\\\)' is deprecated\" }\n }"}, {"sha": "4afb2841a74aafbf976feabf4df12ee3f0d10040", "filename": "gcc/testsuite/g++.dg/warn/deprecated-6.C", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-6.C?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -5,16 +5,16 @@\n typedef int INT1 __attribute__((deprecated(\"Please avoid INT1\")));\n typedef INT1 INT2 __attribute__ ((__deprecated__(\"Please avoid INT2\")));\n \n-typedef INT1 INT1a; \t\t\t/* { dg-warning \"'INT1' is deprecated .declared at \\[^\\n\\]*: Please avoid INT1\" \"\" } */\n+typedef INT1 INT1a; \t\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n \n-INT1 should_be_unavailable; \t\t/* { dg-warning \"'INT1' is deprecated .declared at \\[^\\n\\]*: Please avoid INT1\" \"\" } */\n+INT1 should_be_unavailable; \t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n INT1a should_not_be_deprecated;\n \n INT1 f1(void) __attribute__ ((deprecated(\"Please avoid f1\"))); \n-INT1 f2(void) { return 0; }\t\t/* { dg-warning \"'INT1' is deprecated .declared at \\[^\\n\\]*: Please avoid INT1\" \"\" } */\n+INT1 f2(void) { return 0; }\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n \n INT2 f3(void) __attribute__ ((__deprecated__(\"Please avoid f3\"))); \n-INT2 f4(void) { return 0; }\t\t/* { dg-warning \"'INT2' is deprecated .declared at \\[^\\n\\]*: Please avoid INT2\" \"\" } */\n+INT2 f4(void) { return 0; }\t\t/* { dg-warning \"'INT2' is deprecated: Please avoid INT2\" \"\" } */\n int f5(INT2 x);\t\t\t\t/* { dg-warning \"'INT2' is deprecated\" \"\" } */\n int f6(INT2 x) __attribute__ ((__deprecated__(\"Please avoid f6\")));\n \n@@ -23,7 +23,7 @@ typedef enum Color {red, green, blue} Color __attribute__((deprecated(\"Please av\n int g1;\n int g2 __attribute__ ((deprecated(\"Please avoid g2\")));\n int g3 __attribute__ ((__deprecated__(\"Please avoid g3\")));\n-Color k;\t\t\t\t/* { dg-warning \"'Color' is deprecated .declared at \\[^\\n\\]*: Please avoid Color\" \"\" } */\n+Color k;\t\t\t\t/* { dg-warning \"'Color' is deprecated: Please avoid Color\" \"\" } */\n \n typedef struct {\n   int field1;\n@@ -44,47 +44,47 @@ typedef struct {\n \n int func1()\n {\n-   INT1 w;\t\t\t\t/* { dg-warning \"'INT1' is deprecated .declared at \\[^\\n\\]*: Please avoid INT1\" \"\" } */\n+   INT1 w;\t\t\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n    int x __attribute__ ((deprecated(\"Please avoid x\")));\n    int y __attribute__ ((__deprecated__(\"Please avoid y\")));\n    int z;\n-   int (*pf)() = f1;\t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid f1\" \"\" } */\n+   int (*pf)() = f1;\t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated: Please avoid f1\" \"\" } */\n \n-   z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"'x' is deprecated .declared at \\[^\\n\\]*: Please avoid x\" \"\" } */\n-   \t\t\t\t\t/* { dg-warning \"'y' is deprecated .declared at \\[^\\n\\]*: Please avoid y\" \"y\" { target *-*-* } 53 } */\n-   \t\t\t\t\t/* { dg-warning \"'g2' is deprecated .declared at \\[^\\n\\]*: Please avoid g2\" \"g2\" { target *-*-* } 53 } */\n-   \t\t\t\t\t/* { dg-warning \"'g3' is deprecated .declared at \\[^\\n\\]*: Please avoid g3\" \"g3\" { target *-*-* } 53 } */\n-   return f1(); \t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid f1\" \"f1\" } */\n+   z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"'x' is deprecated: Please avoid x\" \"\" } */\n+\t\t\t\t\t/* { dg-warning \"'y' is deprecated: Please avoid y\" \"y\" { target *-*-* } 53 } */\n+\t\t\t\t\t/* { dg-warning \"'g2' is deprecated: Please avoid g2\" \"g2\" { target *-*-* } 53 } */\n+\t\t\t\t\t/* { dg-warning \"'g3' is deprecated: Please avoid g3\" \"g3\" { target *-*-* } 53 } */\n+   return f1(); \t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated: Please avoid f1\" \"f1\" } */\n }\n \n int func2(S1 *p)\n {\n   S1 lp;\n   \n   if (p->field1)\n-     return p->field2;\t\t\t/* { dg-warning \"'S1::field2' is deprecated .declared at \\[^\\n\\]*: Please avoid field2\" \"\" } */\n-  else if (lp.field4)\t\t\t/* { dg-warning \"'S1::field4' is deprecated .declared at \\[^\\n\\]*: Please avoid field4\" \"\" } */\n+     return p->field2;\t\t\t/* { dg-warning \"'S1::field2' is deprecated: Please avoid field2\" \"\" } */\n+  else if (lp.field4)\t\t\t/* { dg-warning \"'S1::field4' is deprecated: Please avoid field4\" \"\" } */\n      return p->field3;\n   \n   p->u1.field5 = g1 + p->field7;\n-  p->u2.field9;\t\t\t\t/* { dg-warning \"'S1::u2' is deprecated .declared at \\[^\\n\\]*: Please avoid u2\" \"\" } */\n-  return p->u1.field6 + p->field8;\t/* { dg-warning \"'S1::<anonymous union>::field6' is deprecated .declared at \\[^\\n\\]*: Please avoid field6\" \"\" } */\n-  \t\t\t\t\t/* { dg-warning \"'S1::field8' is deprecated .declared at \\[^\\n\\]*: Please avoid field8\" \"field8\" { target *-*-* } 71 } */\n+  p->u2.field9;\t\t\t\t/* { dg-warning \"'S1::u2' is deprecated: Please avoid u2\" \"\" } */\n+  return p->u1.field6 + p->field8;\t/* { dg-warning \"'S1::<anonymous union>::field6' is deprecated: Please avoid field6\" \"\" } */\n+\t\t\t\t\t/* { dg-warning \"'S1::field8' is deprecated: Please avoid field8\" \"field8\" { target *-*-* } 71 } */\n }\n \n struct SS1 {\n   int x;\n-  INT1 y; \t\t\t\t/* { dg-warning \"'INT1' is deprecated .declared at \\[^\\n\\]*: Please avoid INT1\" \"\" } */\n+  INT1 y; \t\t\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n } __attribute__ ((deprecated(\"Please avoid SS1\")));\n \n-struct SS1 *p1;\t\t\t\t/* { dg-warning \"'SS1' is deprecated .declared at \\[^\\n\\]*: Please avoid SS1\" \"\" } */\n+struct SS1 *p1;\t\t\t\t/* { dg-warning \"'SS1' is deprecated: Please avoid SS1\" \"\" } */\n \n struct __attribute__ ((__deprecated__(\"Please avoid SS2\"))) SS2 {\n   int x;\n-  INT1 y; \t\t\t\t/* { dg-warning \"'INT1' is deprecated .declared at \\[^\\n\\]*: Please avoid INT1\" \"\" } */\n+  INT1 y; \t\t\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n };\n \n-struct SS2 *p2;\t\t\t\t/* { dg-warning \"'SS2' is deprecated .declared at \\[^\\n\\]*: Please avoid SS2\" \"\" } */\n+struct SS2 *p2;\t\t\t\t/* { dg-warning \"'SS2' is deprecated: Please avoid SS2\" \"\" } */\n \n class T {\n   public:\n@@ -94,17 +94,17 @@ class T {\n     int x;\n } __attribute__ ((deprecated(\"Please avoid T\")));\n \n-T *p3;\t\t\t\t// { dg-warning \"'T' is deprecated .declared at \\[^\\n\\]*: Please avoid T\" }\n+T *p3;\t\t\t\t// { dg-warning \"'T' is deprecated: Please avoid T\" }\n \n inline void T::member1(int) {}\n \n-int T::member3(T *p)\t\t// { dg-warning \"'T' is deprecated .declared at \\[^\\n\\]*: Please avoid T\" }\n+int T::member3(T *p)\t\t// { dg-warning \"'T' is deprecated: Please avoid T\" }\n {\n-  p->member1(1);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid member1\" \"\" } */\n-  (*p).member1(2);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid member1\" \"\" } */\n-  p->member2(1);\t\t\t/* { dg-warning \"'void T::member2\\\\(INT1\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid member2\" \"\" } */\n-  (*p).member2(2);\t\t\t/* { dg-warning \"'void T::member2\\\\(INT1\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid member2\" \"\" } */\n+  p->member1(1);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated: Please avoid member1\" \"\" } */\n+  (*p).member1(2);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated: Please avoid member1\" \"\" } */\n+  p->member2(1);\t\t\t/* { dg-warning \"'void T::member2\\\\(INT1\\\\)' is deprecated: Please avoid member2\" \"\" } */\n+  (*p).member2(2);\t\t\t/* { dg-warning \"'void T::member2\\\\(INT1\\\\)' is deprecated: Please avoid member2\" \"\" } */\n   p->member3(p);\n   (*p).member3(p);\n-  return f1(); \t\t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated .declared at \\[^\\n\\]*: Please avoid f1\" \"\" } */\n+  return f1(); \t\t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated: Please avoid f1\" \"\" } */\n }"}, {"sha": "152d65cbfbfb348b6a6a2b2fc185547f80070603", "filename": "gcc/testsuite/gcc.dg/deprecated-4.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-4.c?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -24,7 +24,7 @@ typedef enum {red, green, blue} Color __attribute__((deprecated(\"Please avoid Co\n int g1;\n int g2 __attribute__ ((deprecated(\"Please avoid g2\")));\n int g3 __attribute__ ((__deprecated__(\"Please avoid g3\")));\n-Color k;\t\t\t\t/* { dg-warning \"'Color' is deprecated .declared at \\[^\\n\\]*: Please avoid Color\" \"\" } */\n+Color k;\t\t\t\t/* { dg-warning \"'Color' is deprecated: Please avoid Color\" \"\" } */\n \n typedef struct {\n   int field1;\n@@ -49,40 +49,40 @@ int func1()\n    int x __attribute__ ((deprecated(\"Avoid x\")));\n    int y __attribute__ ((__deprecated__(\"Bad y\")));\n    int z;\n-   int (*pf)() = f1;\t\t\t/* { dg-warning \"'f1' is deprecated .declared at \\[^\\n\\]*: Please avoid f1\" \"\" } */\n+   int (*pf)() = f1;\t\t\t/* { dg-warning \"'f1' is deprecated: Please avoid f1\" \"\" } */\n \n-   z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"'x' is deprecated .declared at \\[^\\n\\]*: Avoid x\" \"\" } */\n-\t\t\t\t\t/* { dg-warning \"'y' is deprecated .declared at \\[^\\n\\]*: Bad y\" \"y\" { target *-*-* } 54  } */\n-\t\t\t\t\t/* { dg-warning \"'g2' is deprecated .declared at \\[^\\n\\]*: Please avoid g2\" \"g2\" { target *-*-* } 54  }  */\n-\t\t\t\t\t/* { dg-warning \"'g3' is deprecated .declared at \\[^\\n\\]*: Please avoid g3\" \"g3\" { target *-*-* } 54  } */\n-   return f1(); \t\t\t/* { dg-warning \"'f1' is deprecated .declared at \\[^\\n\\]*: Please avoid f1\" \"\" } */\n+   z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"'x' is deprecated: Avoid x\" \"\" } */\n+\t\t\t\t\t/* { dg-warning \"'y' is deprecated: Bad y\" \"y\" { target *-*-* } 54  } */\n+\t\t\t\t\t/* { dg-warning \"'g2' is deprecated: Please avoid g2\" \"g2\" { target *-*-* } 54  }  */\n+\t\t\t\t\t/* { dg-warning \"'g3' is deprecated: Please avoid g3\" \"g3\" { target *-*-* } 54  } */\n+   return f1(); \t\t\t/* { dg-warning \"'f1' is deprecated: Please avoid f1\" \"\" } */\n }\n \n int func2(S1 *p)\n {\n   S1 lp;\n   \n   if (p->field1)\n-     return p->field2;\t\t\t/* { dg-warning \"'field2' is deprecated .declared at \\[^\\n\\]*: Please avoid field2\" \"\" } */\n-  else if (lp.field4)\t\t\t/* { dg-warning \"'field4' is deprecated .declared at \\[^\\n\\]*: Please avoid field4\" \"\" } */\n+     return p->field2;\t\t\t/* { dg-warning \"'field2' is deprecated: Please avoid field2\" \"\" } */\n+  else if (lp.field4)\t\t\t/* { dg-warning \"'field4' is deprecated: Please avoid field4\" \"\" } */\n      return p->field3;\n   \n   p->u1.field5 = g1 + p->field7;\n-  p->u2.field9;\t\t\t\t/* { dg-warning \"'u2' is deprecated .declared at \\[^\\n\\]*: Please avoid u2\" \"\" } */\n-  return p->u1.field6 + p->field8;\t/* { dg-warning \"'field6' is deprecated .declared at \\[^\\n\\]*: Please avoid field6\" \"\" } */\n-  \t\t\t\t\t/* { dg-warning \"'field8' is deprecated .declared at \\[^\\n\\]*: Please avoid field8\" \"field8\" { target *-*-* } 72 } */\n+  p->u2.field9;\t\t\t\t/* { dg-warning \"'u2' is deprecated: Please avoid u2\" \"\" } */\n+  return p->u1.field6 + p->field8;\t/* { dg-warning \"'field6' is deprecated: Please avoid field6\" \"\" } */\n+\t\t\t\t\t/* { dg-warning \"'field8' is deprecated: Please avoid field8\" \"field8\" { target *-*-* } 72 } */\n }\n \n struct SS1 {\n   int x;\n   INT1 y; \t\t\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n } __attribute__ ((deprecated(\"Please avoid SS1\")));\n \n-struct SS1 *p1;\t\t\t\t/* { dg-warning \"'SS1' is deprecated .declared at \\[^\\n\\]*: Please avoid SS1\" \"\" } */\n+struct SS1 *p1;\t\t\t\t/* { dg-warning \"'SS1' is deprecated: Please avoid SS1\" \"\" } */\n \n struct __attribute__ ((__deprecated__(\"Please avoid SS2\"))) SS2 {\n   int x;\n   INT1 y; \t\t\t\t/* { dg-warning \"'INT1' is deprecated: Please avoid INT1\" \"\" } */\n };\n \n-struct SS2 *p2;\t\t\t\t/* { dg-warning \"'SS2' is deprecated .declared at \\[^\\n\\]*: Please avoid SS2\" \"\" } */\n+struct SS2 *p2;\t\t\t\t/* { dg-warning \"'SS2' is deprecated: Please avoid SS2\" \"\" } */"}, {"sha": "a757c4a3dcbcf2b002da86e76c4f1b54bd29d304", "filename": "gcc/testsuite/gcc.dg/deprecated-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-5.c?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -4,4 +4,4 @@\n /* { dg-options \"\" } */\n \n struct { int a; } __attribute__((deprecated (\"Do not use\"))) x; /* { dg-warning \"type is deprecated\" } */\n-typeof(x) y; /* { dg-warning \"type is deprecated .declared at .*.: Do not use\" } */\n+typeof(x) y; /* { dg-warning \"type is deprecated: Do not use\" } */"}, {"sha": "a361050dbf39d53f1f166b44f01db3da61a60655", "filename": "gcc/testsuite/gcc.dg/deprecated-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated-6.c?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -7,5 +7,5 @@ void func(void);\n void func(void) __attribute__((deprecated (\"Do not use\")));\n \n void f(void) {\n-  func(); /* { dg-warning \"'func' is deprecated .declared at .*.: Do not use\" } */\n+  func(); /* { dg-warning \"'func' is deprecated: Do not use\" } */\n }"}, {"sha": "48cec44117e4a0878f6fe5ef071573d052ff004c", "filename": "gcc/testsuite/obj-c++.dg/attributes/method-attribute-3.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fattributes%2Fmethod-attribute-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fattributes%2Fmethod-attribute-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fattributes%2Fmethod-attribute-3.mm?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -20,5 +20,5 @@ int foo (void)\n {\n   obj *p = [obj new];\n   \n-  return [p vargsn:0];  /* { dg-warning \"'vargsn:' is deprecated .declared at\" } */\n+  return [p vargsn:0];  /* { dg-warning \"'vargsn:' is deprecated\" } */\n }"}, {"sha": "48cec44117e4a0878f6fe5ef071573d052ff004c", "filename": "gcc/testsuite/objc.dg/attributes/method-attribute-3.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-attribute-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-attribute-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-attribute-3.m?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -20,5 +20,5 @@ int foo (void)\n {\n   obj *p = [obj new];\n   \n-  return [p vargsn:0];  /* { dg-warning \"'vargsn:' is deprecated .declared at \" } */\n+  return [p vargsn:0];  /* { dg-warning \"'vargsn:' is deprecated\" } */\n }"}, {"sha": "091a4d093fcc9d4d1179c46603598cc59362d2de", "filename": "gcc/tree.c", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f1d0db7ae9ccc8049eb2933ff631dab77e1c17/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=59f1d0db7ae9ccc8049eb2933ff631dab77e1c17", "patch": "@@ -12034,17 +12034,17 @@ warn_deprecated_use (tree node, tree attr)\n   else\n     msg = NULL;\n \n+  bool w;\n   if (DECL_P (node))\n     {\n-      expanded_location xloc = expand_location (DECL_SOURCE_LOCATION (node));\n       if (msg)\n-\twarning (OPT_Wdeprecated_declarations,\n-\t\t \"%qD is deprecated (declared at %r%s:%d%R): %s\",\n-\t\t node, \"locus\", xloc.file, xloc.line, msg);\n+\tw = warning (OPT_Wdeprecated_declarations,\n+\t\t     \"%qD is deprecated: %s\", node, msg);\n       else\n-\twarning (OPT_Wdeprecated_declarations,\n-\t\t \"%qD is deprecated (declared at %r%s:%d%R)\",\n-\t\t node, \"locus\", xloc.file, xloc.line);\n+\tw = warning (OPT_Wdeprecated_declarations,\n+\t\t     \"%qD is deprecated\", node);\n+      if (w)\n+\tinform (DECL_SOURCE_LOCATION (node), \"declared here\");\n     }\n   else if (TYPE_P (node))\n     {\n@@ -12062,30 +12062,26 @@ warn_deprecated_use (tree node, tree attr)\n \n       if (decl)\n \t{\n-\t  expanded_location xloc\n-\t    = expand_location (DECL_SOURCE_LOCATION (decl));\n \t  if (what)\n \t    {\n \t      if (msg)\n-\t\twarning (OPT_Wdeprecated_declarations,\n-\t\t\t \"%qE is deprecated (declared at %r%s:%d%R): %s\",\n-\t\t\t what, \"locus\", xloc.file, xloc.line, msg);\n+\t\tw = warning (OPT_Wdeprecated_declarations,\n+\t\t\t     \"%qE is deprecated: %s\", what, msg);\n \t      else\n-\t\twarning (OPT_Wdeprecated_declarations,\n-\t\t\t \"%qE is deprecated (declared at %r%s:%d%R)\",\n-\t\t\t what, \"locus\", xloc.file, xloc.line);\n+\t\tw = warning (OPT_Wdeprecated_declarations,\n+\t\t\t     \"%qE is deprecated\", what);\n \t    }\n \t  else\n \t    {\n \t      if (msg)\n-\t\twarning (OPT_Wdeprecated_declarations,\n-\t\t\t \"type is deprecated (declared at %r%s:%d%R): %s\",\n-\t\t\t \"locus\", xloc.file, xloc.line, msg);\n+\t\tw = warning (OPT_Wdeprecated_declarations,\n+\t\t\t     \"type is deprecated: %s\", msg);\n \t      else\n-\t\twarning (OPT_Wdeprecated_declarations,\n-\t\t\t \"type is deprecated (declared at %r%s:%d%R)\",\n-\t\t\t \"locus\", xloc.file, xloc.line);\n+\t\tw = warning (OPT_Wdeprecated_declarations,\n+\t\t\t     \"type is deprecated\");\n \t    }\n+\t  if (w)\n+\t    inform (DECL_SOURCE_LOCATION (decl), \"declared here\");\n \t}\n       else\n \t{"}]}