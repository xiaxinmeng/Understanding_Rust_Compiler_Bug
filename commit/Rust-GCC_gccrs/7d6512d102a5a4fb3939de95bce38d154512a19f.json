{"sha": "7d6512d102a5a4fb3939de95bce38d154512a19f", "node_id": "C_kwDOANBUbNoAKDdkNjUxMmQxMDJhNWE0ZmIzOTM5ZGU5NWJjZTM4ZDE1NDUxMmExOWY", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-07T20:50:23Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-07T22:09:36Z"}, "message": "Fortran: handle zero-sized arrays in ctors with typespec [PR108010]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/108010\n\t* arith.cc (reduce_unary): Handle zero-sized arrays.\n\t(reduce_binary_aa): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/108010\n\t* gfortran.dg/pr108010.f90: New test.", "tree": {"sha": "07c95b9ab84bcb3557cd266d1867a52e81118f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07c95b9ab84bcb3557cd266d1867a52e81118f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d6512d102a5a4fb3939de95bce38d154512a19f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6512d102a5a4fb3939de95bce38d154512a19f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6512d102a5a4fb3939de95bce38d154512a19f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6512d102a5a4fb3939de95bce38d154512a19f/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3db5bee0079d48ab7c82f8df1cc7efd87a6fed04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db5bee0079d48ab7c82f8df1cc7efd87a6fed04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db5bee0079d48ab7c82f8df1cc7efd87a6fed04"}], "stats": {"total": 78, "additions": 74, "deletions": 4}, "files": [{"sha": "c0d12cfad9d310d4cf0d38783cded17abfed413b", "filename": "gcc/fortran/arith.cc", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6512d102a5a4fb3939de95bce38d154512a19f/gcc%2Ffortran%2Farith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6512d102a5a4fb3939de95bce38d154512a19f/gcc%2Ffortran%2Farith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.cc?ref=7d6512d102a5a4fb3939de95bce38d154512a19f", "patch": "@@ -1342,8 +1342,16 @@ reduce_unary (arith (*eval) (gfc_expr *, gfc_expr **), gfc_expr *op,\n   else\n     {\n       gfc_constructor *c = gfc_constructor_first (head);\n-      r = gfc_get_array_expr (c->expr->ts.type, c->expr->ts.kind,\n-\t\t\t      &op->where);\n+      if (c == NULL)\n+\t{\n+\t  /* Handle zero-sized arrays.  */\n+\t  r = gfc_get_array_expr (op->ts.type, op->ts.kind, &op->where);\n+\t}\n+      else\n+\t{\n+\t  r = gfc_get_array_expr (c->expr->ts.type, c->expr->ts.kind,\n+\t\t\t\t  &op->where);\n+\t}\n       r->shape = gfc_copy_shape (op->shape, op->rank);\n       r->rank = op->rank;\n       r->value.constructor = head;\n@@ -1501,8 +1509,16 @@ reduce_binary_aa (arith (*eval) (gfc_expr *, gfc_expr *, gfc_expr **),\n   else\n     {\n       gfc_constructor *c = gfc_constructor_first (head);\n-      r = gfc_get_array_expr (c->expr->ts.type, c->expr->ts.kind,\n-\t\t\t      &op1->where);\n+      if (c == NULL)\n+\t{\n+\t  /* Handle zero-sized arrays.  */\n+\t  r = gfc_get_array_expr (op1->ts.type, op1->ts.kind, &op1->where);\n+\t}\n+      else\n+\t{\n+\t  r = gfc_get_array_expr (c->expr->ts.type, c->expr->ts.kind,\n+\t\t\t\t  &op1->where);\n+\t}\n       r->shape = gfc_copy_shape (op1->shape, op1->rank);\n       r->rank = op1->rank;\n       r->value.constructor = head;"}, {"sha": "303b2b98220fb771d713fd43efa3a1390f3d8118", "filename": "gcc/testsuite/gfortran.dg/pr108010.f90", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6512d102a5a4fb3939de95bce38d154512a19f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108010.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6512d102a5a4fb3939de95bce38d154512a19f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108010.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr108010.f90?ref=7d6512d102a5a4fb3939de95bce38d154512a19f", "patch": "@@ -0,0 +1,54 @@\n+! { dg-do run }\n+! PR fortran/108010 - ICE in reduce_unary, reduce_binary_aa\n+! Contributed by G.Steinmetz\n+\n+program p\n+  implicit none\n+  print *,   + [integer :: [real ::]]\n+  print *,   - [integer :: [real ::]]\n+  print *, 1 + [integer :: [real ::]]\n+  print *, 1 - [integer :: [real ::]]\n+  print *, 2 * [integer :: [real ::]]\n+  print *,   - [real :: [real ::], 2]\n+  print *,   + [integer :: [real ::], 2]\n+  print *,   - [integer :: [real ::], 2]\n+  print *, 1 + [integer :: [real ::], 2]\n+  print *, 1 - [integer :: [real ::], 2]\n+  print *, 2 * [integer :: [real ::], 2]\n+  print *, [integer :: [real ::]] + [integer :: [real ::]]\n+  print *, [integer :: [real ::]] - [integer :: [real ::]]\n+  print *, [integer :: [real ::]] * [integer :: [real ::]]\n+  print *, [integer :: [real ::], 2] + [real :: [real ::], 3]\n+  print *, [integer :: [real ::], 2] - [real :: [real ::], 3]\n+  print *, [integer :: [real ::], 2] * [real :: [real ::], 3]\n+\n+  ! Validate type of resulting arrays\n+  if (.not. is_int ([integer :: [real ::]]                         )) stop 1\n+  if (.not. is_int ([integer :: [real ::]] + [integer :: [real ::]])) stop 2\n+  if (.not. is_real([real :: [integer ::]]                         )) stop 3\n+  if (.not. is_real([real :: [integer ::]] + [real :: [integer ::]])) stop 4\n+  if (.not. is_real([real :: [integer ::]] + [integer :: [real ::]])) stop 5\n+  if (.not. is_real([integer :: [real ::]] + [real :: [integer ::]])) stop 6\n+\n+contains\n+\n+  logical function is_int (x)\n+    class(*) :: x(:)\n+    select type (x)\n+    type is (integer)\n+       is_int = .true.\n+    class default\n+       is_int = .false.\n+    end select\n+  end function is_int\n+    \n+  logical function is_real (x)\n+    class(*) :: x(:)\n+    select type (x)\n+    type is (real)\n+       is_real = .true.\n+    class default\n+       is_real = .false.\n+    end select\n+  end function is_real\n+end"}]}