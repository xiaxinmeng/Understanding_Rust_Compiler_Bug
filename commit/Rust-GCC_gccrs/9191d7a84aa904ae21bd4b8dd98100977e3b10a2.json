{"sha": "9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5MWQ3YTg0YWE5MDRhZTIxYmQ0YjhkZDk4MTAwOTc3ZTNiMTBhMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-22T14:37:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-22T14:37:34Z"}, "message": "complex (complex<float>::real, [...]): Declare as const member functions.\n\n2013-04-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tN3669\n\t* include/std/complex (complex<float>::real, complex<float>::imag,\n\tcomplex<double>::real, complex<double>::imag,\n\tcomplex<long double>::real, complex<long double>::imag): Declare\n\tas const member functions.\n\t* include/std/type_traits (integral_constant<>::operator value_type):\n\tLikewise.\n\nFrom-SVN: r198141", "tree": {"sha": "8b3ef21b4574c51260d640bb39660a93ff2dedd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b3ef21b4574c51260d640bb39660a93ff2dedd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/comments", "author": null, "committer": null, "parents": [{"sha": "88a581daa7f2c350e061b12db8ed24a0417a6058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a581daa7f2c350e061b12db8ed24a0417a6058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a581daa7f2c350e061b12db8ed24a0417a6058"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "ff956355d2e4127aa741478a3cd4a9b622859ae0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "patch": "@@ -1,3 +1,13 @@\n+2013-04-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tN3669\n+\t* include/std/complex (complex<float>::real, complex<float>::imag,\n+\tcomplex<double>::real, complex<double>::imag,\n+\tcomplex<long double>::real, complex<long double>::imag): Declare\n+\tas const member functions.\n+\t* include/std/type_traits (integral_constant<>::operator value_type):\n+\tLikewise.\n+\n 2013-04-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/57010"}, {"sha": "b31e8b18d71b21e7c75187c1f4820d28e2a25393", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "patch": "@@ -1066,11 +1066,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // DR 387. std::complex over-encapsulated.\n       __attribute ((__abi_tag__ (\"cxx11\")))\n       constexpr float \n-      real() { return __real__ _M_value; }\n+      real() const { return __real__ _M_value; }\n \n       __attribute ((__abi_tag__ (\"cxx11\")))\n       constexpr float \n-      imag() { return __imag__ _M_value; }\n+      imag() const { return __imag__ _M_value; }\n #else\n       float& \n       real() { return __real__ _M_value; }\n@@ -1217,11 +1217,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // DR 387. std::complex over-encapsulated.\n       __attribute ((__abi_tag__ (\"cxx11\")))\n       constexpr double \n-      real() { return __real__ _M_value; }\n+      real() const { return __real__ _M_value; }\n \n       __attribute ((__abi_tag__ (\"cxx11\")))\n       constexpr double \n-      imag() { return __imag__ _M_value; }\n+      imag() const { return __imag__ _M_value; }\n #else\n       double& \n       real() { return __real__ _M_value; }\n@@ -1369,11 +1369,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // DR 387. std::complex over-encapsulated.\n       __attribute ((__abi_tag__ (\"cxx11\")))\n       constexpr long double \n-      real() { return __real__ _M_value; }\n+      real() const { return __real__ _M_value; }\n \n       __attribute ((__abi_tag__ (\"cxx11\")))\n       constexpr long double \n-      imag() { return __imag__ _M_value; }\n+      imag() const { return __imag__ _M_value; }\n #else\n       long double& \n       real() { return __real__ _M_value; }"}, {"sha": "5bff0ab59591b7607974764959f1c665849ece51", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9191d7a84aa904ae21bd4b8dd98100977e3b10a2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=9191d7a84aa904ae21bd4b8dd98100977e3b10a2", "patch": "@@ -59,7 +59,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       static constexpr _Tp                  value = __v;\n       typedef _Tp                           value_type;\n       typedef integral_constant<_Tp, __v>   type;\n-      constexpr operator value_type() { return value; }\n+      constexpr operator value_type() const { return value; }\n     };\n   \n   template<typename _Tp, _Tp __v>"}]}