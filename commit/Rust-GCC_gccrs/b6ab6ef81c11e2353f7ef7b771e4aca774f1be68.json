{"sha": "b6ab6ef81c11e2353f7ef7b771e4aca774f1be68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhYjZlZjgxYzExZTIzNTNmN2VmN2I3NzFlNGFjYTc3NGYxYmU2OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-15T07:03:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-15T07:03:02Z"}, "message": "re PR tree-optimization/68823 ([graphite] tramp3d-v4 compiled with -floop-nest-optimize crashes)\n\n2017-09-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68823\n\t* graphite-scop-detection.c (build_alias_set): If we have a\n\tpossible dependence check whether we can handle them by just\n\tlooking at the DRs DR_ACCESS_FNs.\n\t(build_scops): If build_alias_set fails, fail the SCOP.\n\nFrom-SVN: r252780", "tree": {"sha": "9e2b8734f0c5eb99451354e6773cf50410049d68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e2b8734f0c5eb99451354e6773cf50410049d68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29d326425c0ac7b5cbacf7621c7ffbffc3b33ade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d326425c0ac7b5cbacf7621c7ffbffc3b33ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d326425c0ac7b5cbacf7621c7ffbffc3b33ade"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "4ff9f794bf94a31c8419f89dd8345807c630f297", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6ab6ef81c11e2353f7ef7b771e4aca774f1be68", "patch": "@@ -1,3 +1,11 @@\n+2017-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68823\n+\t* graphite-scop-detection.c (build_alias_set): If we have a\n+\tpossible dependence check whether we can handle them by just\n+\tlooking at the DRs DR_ACCESS_FNs.\n+\t(build_scops): If build_alias_set fails, fail the SCOP.\n+\n 2017-09-14  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def (BU_FLOAT128_1_HW): New macros"}, {"sha": "bc66dfdac129c6d5130379519410ec20c51bb8a8", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ab6ef81c11e2353f7ef7b771e4aca774f1be68/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=b6ab6ef81c11e2353f7ef7b771e4aca774f1be68", "patch": "@@ -1855,7 +1855,7 @@ try_generate_gimple_bb (scop_p scop, basic_block bb)\n \n /* Compute alias-sets for all data references in DRS.  */\n \n-static void\n+static bool \n build_alias_set (scop_p scop)\n {\n   int num_vertices = scop->drs.length ();\n@@ -1868,6 +1868,18 @@ build_alias_set (scop_p scop)\n     for (j = i+1; scop->drs.iterate (j, &dr2); j++)\n       if (dr_may_alias_p (dr1->dr, dr2->dr, true))\n \t{\n+\t  /* Dependences in the same alias set need to be handled\n+\t     by just looking at DR_ACCESS_FNs.  */\n+\t  if (DR_NUM_DIMENSIONS (dr1->dr) != DR_NUM_DIMENSIONS (dr2->dr)\n+\t      || ! operand_equal_p (DR_BASE_OBJECT (dr1->dr),\n+\t\t\t\t    DR_BASE_OBJECT (dr2->dr),\n+\t\t\t\t    OEP_ADDRESS_OF)\n+\t      || ! types_compatible_p (TREE_TYPE (DR_BASE_OBJECT (dr1->dr)),\n+\t\t\t\t       TREE_TYPE (DR_BASE_OBJECT (dr2->dr))))\n+\t    {\n+\t      free_graph (g);\n+\t      return false;\n+\t    }\n \t  add_edge (g, i, j);\n \t  add_edge (g, j, i);\n \t}\n@@ -1883,6 +1895,7 @@ build_alias_set (scop_p scop)\n     scop->drs[i].alias_set = g->vertices[i].component + 1;\n \n   free_graph (g);\n+  return true;\n }\n \n /* Gather BBs and conditions for a SCOP.  */\n@@ -2075,7 +2088,12 @@ build_scops (vec<scop_p> *scops)\n       scop->pbbs.qsort (cmp_pbbs);\n       order.release ();\n \n-      build_alias_set (scop);\n+      if (! build_alias_set (scop))\n+\t{\n+\t  DEBUG_PRINT (dp << \"[scop-detection-fail] cannot handle dependences\\n\");\n+\t  free_scop (scop);\n+\t  continue;\n+\t}\n \n       /* Do not optimize a scop containing only PBBs that do not belong\n \t to any loops.  */"}]}