{"sha": "17d9767f79871acc437342147837d842fa52b3de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkOTc2N2Y3OTg3MWFjYzQzNzM0MjE0NzgzN2Q4NDJmYTUyYjNkZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-08-11T19:26:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-08-11T19:26:26Z"}, "message": "compiler: Change return type comma-ok assignments to untyped bools.\n\nFixes https://code.google.com/p/go/issues/detail?id=8476. The test will be submitted once this is fixed in gc and go/types.\n\nFrom-SVN: r213832", "tree": {"sha": "8616390095dce34a20106bd27437692c9f9ce404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8616390095dce34a20106bd27437692c9f9ce404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17d9767f79871acc437342147837d842fa52b3de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d9767f79871acc437342147837d842fa52b3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17d9767f79871acc437342147837d842fa52b3de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d9767f79871acc437342147837d842fa52b3de/comments", "author": null, "committer": null, "parents": [{"sha": "b2f86285bd25e572ff37c4aac6ae35a14214dadb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f86285bd25e572ff37c4aac6ae35a14214dadb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f86285bd25e572ff37c4aac6ae35a14214dadb"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "811c8f5b79f1f9f0b8301e1cbfb09591fc0b5b23", "filename": "gcc/go/gofrontend/runtime.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d9767f79871acc437342147837d842fa52b3de/gcc%2Fgo%2Fgofrontend%2Fruntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d9767f79871acc437342147837d842fa52b3de/gcc%2Fgo%2Fgofrontend%2Fruntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fruntime.cc?ref=17d9767f79871acc437342147837d842fa52b3de", "patch": "@@ -24,7 +24,7 @@ enum Runtime_function_type\n {\n   // General indicator that value is not used.\n   RFT_VOID,\n-  // Go type bool, C type _Bool.\n+  // Go untyped bool, C type _Bool.\n   RFT_BOOL,\n   // Go type *bool, C type _Bool*.\n   RFT_BOOLPTR,\n@@ -93,7 +93,7 @@ runtime_function_type(Runtime_function_type bft)\n \t  go_unreachable();\n \n \tcase RFT_BOOL:\n-\t  t = Type::lookup_bool_type();\n+\t  t = Type::make_boolean_type();\n \t  break;\n \n \tcase RFT_BOOLPTR:"}, {"sha": "090c193b8ca45fb9a561ea1b25046c2750d6dd95", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d9767f79871acc437342147837d842fa52b3de/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d9767f79871acc437342147837d842fa52b3de/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=17d9767f79871acc437342147837d842fa52b3de", "patch": "@@ -1150,7 +1150,10 @@ Tuple_map_assignment_statement::do_lower(Gogo*, Named_object*,\n \n   // var present_temp bool\n   Temporary_statement* present_temp =\n-    Statement::make_temporary(Type::lookup_bool_type(), NULL, loc);\n+    Statement::make_temporary((this->present_->type()->is_sink_type())\n+\t\t\t      ? Type::make_boolean_type()\n+\t\t\t      : this->present_->type(),\n+\t\t\t      NULL, loc);\n   b->add_statement(present_temp);\n \n   // present_temp = mapaccess2(DESCRIPTOR, MAP, &key_temp, &val_temp)\n@@ -1163,7 +1166,6 @@ Tuple_map_assignment_statement::do_lower(Gogo*, Named_object*,\n   Expression* a4 = Expression::make_unary(OPERATOR_AND, ref, loc);\n   Expression* call = Runtime::make_call(Runtime::MAPACCESS2, loc, 4,\n \t\t\t\t\ta1, a2, a3, a4);\n-\n   ref = Expression::make_temporary_reference(present_temp, loc);\n   ref->set_is_lvalue();\n   Statement* s = Statement::make_assignment(ref, call, loc);\n@@ -1426,7 +1428,10 @@ Tuple_receive_assignment_statement::do_lower(Gogo*, Named_object*,\n \n   // var closed_temp bool\n   Temporary_statement* closed_temp =\n-    Statement::make_temporary(Type::lookup_bool_type(), NULL, loc);\n+    Statement::make_temporary((this->closed_->type()->is_sink_type())\n+\t\t\t      ? Type::make_boolean_type()\n+\t\t\t      : this->closed_->type(),\n+\t\t\t      NULL, loc);\n   b->add_statement(closed_temp);\n \n   // closed_temp = chanrecv2(type, channel, &val_temp)"}]}