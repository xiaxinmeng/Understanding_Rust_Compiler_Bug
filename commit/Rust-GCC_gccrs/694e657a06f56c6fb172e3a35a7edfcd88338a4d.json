{"sha": "694e657a06f56c6fb172e3a35a7edfcd88338a4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk0ZTY1N2EwNmY1NmM2ZmIxNzJlM2EzNWE3ZWRmY2Q4ODMzOGE0ZA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2004-07-23T14:25:41Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-07-23T14:25:41Z"}, "message": "DefaultContentHandlerFactory.java: Check in real file missed in last commit.\n\n2004-07-23  Mark Wielaard  <mark@klomp.org>\n\n\t* gnu/java/net/DefaultContentHandlerFactory.java: Check in real file\n\tmissed in last commit.\n\nFrom-SVN: r85080", "tree": {"sha": "bd4f59d554e5698c4eb4dd018b0cc949e9e25455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd4f59d554e5698c4eb4dd018b0cc949e9e25455"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/694e657a06f56c6fb172e3a35a7edfcd88338a4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694e657a06f56c6fb172e3a35a7edfcd88338a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694e657a06f56c6fb172e3a35a7edfcd88338a4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694e657a06f56c6fb172e3a35a7edfcd88338a4d/comments", "author": null, "committer": null, "parents": [{"sha": "392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392abf6bf98fae1c29d777be3b0eed41c43cd9f6"}], "stats": {"total": 58, "additions": 54, "deletions": 4}, "files": [{"sha": "502d3e867c230af6e379264f625bf7e944a47961", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e657a06f56c6fb172e3a35a7edfcd88338a4d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e657a06f56c6fb172e3a35a7edfcd88338a4d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=694e657a06f56c6fb172e3a35a7edfcd88338a4d", "patch": "@@ -1,3 +1,8 @@\n+2004-07-23  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/net/DefaultContentHandlerFactory.java: Check in real file\n+\tmissed in last commit.\n+\n 2004-07-23  Mark Wielaard  <mark@klomp.org>\n \n \t* java/lang/System.java (static): Set http.agent system property when"}, {"sha": "a653cff051bd14768244e8bb45ccb74f6fb476a6", "filename": "libjava/gnu/java/net/DefaultContentHandlerFactory.java", "status": "modified", "additions": 49, "deletions": 4, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e657a06f56c6fb172e3a35a7edfcd88338a4d/libjava%2Fgnu%2Fjava%2Fnet%2FDefaultContentHandlerFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e657a06f56c6fb172e3a35a7edfcd88338a4d/libjava%2Fgnu%2Fjava%2Fnet%2FDefaultContentHandlerFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FDefaultContentHandlerFactory.java?ref=694e657a06f56c6fb172e3a35a7edfcd88338a4d", "patch": "@@ -1,4 +1,4 @@\n-/* DefaultContentHandlerFactory.java -- DUMMY implementation\n+/* DefaultContentHandlerFactory.java\n    Copyright (C) 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -7,7 +7,7 @@\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n-\n+ \n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n@@ -35,16 +35,61 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package gnu.java.net;\n \n+import java.awt.Toolkit;\n+import java.io.IOException;\n import java.net.ContentHandler;\n import java.net.ContentHandlerFactory;\n+import java.net.URLConnection;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+\n+import gnu.java.awt.ClasspathToolkit;\n \n-public class DefaultContentHandlerFactory\n-  implements ContentHandlerFactory\n+/** Content Handler for Image types, using the AWT Toolkit's image decoder. */\n+class ImageHandler extends ContentHandler\n {\n+  static ImageHandler instance = new ImageHandler();\n+  \n+  public Object getContent(URLConnection urlc) throws IOException\n+  {\n+    ClasspathToolkit tk = (ClasspathToolkit) Toolkit.getDefaultToolkit();\n+    java.awt.image.ImageProducer ip = tk.createImageProducer(urlc.getURL());\n+    return ip;\n+  }\n+}\n+\n+/**\n+ */\n+public class DefaultContentHandlerFactory implements ContentHandlerFactory\n+{\n+  /** For now, hard code the list of types that we assume should\n+   *  be supported by the Toolkit. ClasspathToolkit should perhaps provide\n+   *  an API to express what Image MIME types the Toolkit understands.\n+   */\n+  private static String[] known_image_types =\n+    {\n+      \"image/bmp\",\n+      \"image/gif\",\n+      \"image/jpeg\",\n+      \"image/png\",\n+      \"image/tiff\",\n+      \"image/x-portable-anymap\",\n+      \"image/x-cmu-raster\",\n+      \"image/x-xbitmap\",\n+      \"image/x-xpixmap\"\n+    };\n+   \n+  private static HashSet imageTypes\n+    = new HashSet(Arrays.asList(known_image_types));\n+\n   public ContentHandler createContentHandler(String mimeType)\n   {\n+    if (imageTypes.contains(mimeType))\n+      return ImageHandler.instance;\n+    // Currently, only image types are handled.\n     return null;\n   }\n }"}]}