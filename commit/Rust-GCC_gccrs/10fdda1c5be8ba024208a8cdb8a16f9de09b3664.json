{"sha": "10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBmZGRhMWM1YmU4YmEwMjQyMDhhOGNkYjhhMTZmOWRlMDliMzY2NA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-01-11T08:51:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:51:51Z"}, "message": "[Ada] Minor reformatting\n\n2018-01-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb, exp_ch9.adb, exp_util.adb, sem_aggr.adb, sem_ch3.adb,\n\tsem_res.adb, sem_util.adb: Minor reformatting.\n\nFrom-SVN: r256496", "tree": {"sha": "6766e6baf3e0ad31c00867b587c094662b79ec0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6766e6baf3e0ad31c00867b587c094662b79ec0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6000d73e1efaa2a97b7723a9bf94238d1705ed"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "4d186b21b40d2306d9b4f876fbf252ca108809f3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -1,3 +1,8 @@\n+2018-01-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_aggr.adb, exp_ch9.adb, exp_util.adb, sem_aggr.adb, sem_ch3.adb,\n+\tsem_res.adb, sem_util.adb: Minor reformatting.\n+\n 2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma, case Predicate): Indicate that the type"}, {"sha": "dd135b5025e0fe9dc8de37ff1cf1798d38f110a2", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -1538,11 +1538,9 @@ package body Exp_Aggr is\n             --  proper context, in which the loop parameter is visible.\n \n             if Present (Comp_Typ) and then not Is_Array_Type (Comp_Typ) then\n-               if\n-                 Nkind (Parent (Expr_Q)) = N_Iterated_Component_Association\n-                or else\n-                  Nkind (Parent (Parent ((Expr_Q))))\n-                     = N_Iterated_Component_Association\n+               if Nkind (Parent (Expr_Q)) = N_Iterated_Component_Association\n+                 or else Nkind (Parent (Parent ((Expr_Q)))) =\n+                           N_Iterated_Component_Association\n                then\n                   null;\n                else\n@@ -5009,7 +5007,6 @@ package body Exp_Aggr is\n          --  Scalar types are OK if their size is a multiple of Storage_Unit\n \n          elsif Is_Scalar_Type (Ctyp) then\n-\n             if Csiz mod System_Storage_Unit /= 0 then\n                return False;\n             end if;\n@@ -5500,10 +5497,9 @@ package body Exp_Aggr is\n \n                   return False;\n \n-               elsif\n-                  Nkind (Parent (Expr)) = N_Iterated_Component_Association\n+               elsif Nkind (Parent (Expr)) =\n+                       N_Iterated_Component_Association\n                then\n-\n                   --  Ditto for iterated component associations, which in\n                   --  general require an enclosing loop and involve nonstatic\n                   --  expressions."}, {"sha": "bbd31d02b3e0789c3352bfdd0e15d957c871c2d2", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -11971,14 +11971,14 @@ package body Exp_Ch9 is\n \n       if Create_Secondary_Stack_For_Task (TaskId) then\n          declare\n-            Stack_Size : Node_Id;\n-\n             Size_Expr : constant Node_Id :=\n                           Expression (First (\n                             Pragma_Argument_Associations (\n                               Get_Rep_Pragma (TaskId,\n                                 Name_Secondary_Stack_Size))));\n \n+            Stack_Size : Node_Id;\n+\n          begin\n             --  The secondary stack is defined inside the corresponding\n             --  record. Therefore if the size of the stack is set by means"}, {"sha": "86b57dc0feb2de92ecaa6687998745a712b030e7", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -1129,11 +1129,11 @@ package body Exp_Util is\n             if Present (New_E) then\n                Rewrite (N, New_Occurrence_Of (New_E, Sloc (N)));\n \n-               --  Implement rule in AI12-0166: a precondition for a\n-               --  protected operation cannot include an internal call to\n-               --  a protected function of the type. In the case of an\n-               --  inherited condition for an overriding operation, both the\n-               --  operation and the function are given by primitive wrappers.\n+               --  AI12-0166: a precondition for a protected operation\n+               --  cannot include an internal call to a protected function\n+               --  of the type. In the case of an inherited condition for an\n+               --  overriding operation, both the operation and the function\n+               --  are given by primitive wrappers.\n \n                if Ekind (New_E) = E_Function\n                  and then Is_Primitive_Wrapper (New_E)\n@@ -1144,7 +1144,7 @@ package body Exp_Util is\n                   Error_Msg_NE\n                     (\"internal call to& cannot appear in inherited \"\n                      & \"precondition of protected operation&\",\n-                       N, Wrapped_Entity (New_E));\n+                     N, Wrapped_Entity (New_E));\n                end if;\n \n                --  If the entity is an overridden primitive and we are not"}, {"sha": "b7e892cb1f2a27ef20b2d89c722bedf8faa0eef6", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -1699,8 +1699,9 @@ package body Sem_Aggr is\n          Set_Etype  (Ent, Standard_Void_Type);\n          Set_Parent (Ent, Parent (N));\n          Push_Scope (Ent);\n-         Id := Make_Defining_Identifier (Loc,\n-           Chars => Chars (Defining_Identifier (N)));\n+         Id :=\n+           Make_Defining_Identifier (Loc,\n+             Chars => Chars (Defining_Identifier (N)));\n \n          --  Insert and decorate the index variable in the current scope.\n          --  The expression has to be analyzed once the index variable is"}, {"sha": "142674c98fe35c538172877687a00b93bf1ba9d8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -1749,7 +1749,7 @@ package body Sem_Ch3 is\n                      then\n                         null;\n \n-                     --  The operation is inherited and must be overridden.\n+                     --  The operation is inherited and must be overridden\n \n                      elsif not Comes_From_Source (Prim) then\n                         Error_Msg_NE"}, {"sha": "f3bd3be72af5eedc09b3403d6e183ab0e4265c20", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -9100,7 +9100,6 @@ package body Sem_Res is\n             Error_Msg_N\n               (\"\\even if user-defined equality exists (RM 4.5.2 (28.1/3)?\", N);\n          end if;\n-\n       end Resolve_Set_Membership;\n \n    --  Start of processing for Resolve_Membership_Op"}, {"sha": "ae8617649378080a73c208c61217236db850231a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10fdda1c5be8ba024208a8cdb8a16f9de09b3664/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=10fdda1c5be8ba024208a8cdb8a16f9de09b3664", "patch": "@@ -15824,13 +15824,12 @@ package body Sem_Util is\n       --  conjunct in a postcondition) with a potentially unevaluated operand.\n \n       Par := Parent (Expr);\n-\n-      while not Nkind_In (Par, N_If_Expression,\n+      while not Nkind_In (Par, N_And_Then,\n                                N_Case_Expression,\n-                               N_And_Then,\n-                               N_Or_Else,\n+                               N_If_Expression,\n                                N_In,\n                                N_Not_In,\n+                               N_Or_Else,\n                                N_Quantified_Expression)\n       loop\n          Expr := Par;"}]}