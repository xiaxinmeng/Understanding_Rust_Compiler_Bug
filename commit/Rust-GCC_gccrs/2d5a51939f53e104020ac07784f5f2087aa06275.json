{"sha": "2d5a51939f53e104020ac07784f5f2087aa06275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ1YTUxOTM5ZjUzZTEwNDAyMGFjMDc3ODRmNWYyMDg3YWEwNjI3NQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-21T15:42:22Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-21T15:42:22Z"}, "message": "decl.c (build_result_decl):  New method.\n\n \n\t* decl.c (build_result_decl), java-tree.h:  New method.\n\t(complete_start_java_method):  Handle synchronized methods.\n\tDon't build DECL_RESULT here.  (Ordering dependency problem.)\n\t(start_java_method):  Call build_result_decl here instead  ...\n\t* parse.y (java_complete_expand_method):  ... and here.\n\t(expand_start_java_method): Don't call complete_start_java_method here.\n\t(java_complete_expand_method):  Call it here instead.\n\t* parse.h (BUILD_MONITOR_ENTER, BUILD_MONITOR_EXIT):  Moved to ..\n\t* java-tree.h:  ... here.\n\t* expr.c (force_evaluation_order):  Fix typo, don't handle ARRAY_REF.\n\t* parse.y (java_complete_lhs):  Don't call force_evaluation_order\n\tfor ARRAY_REF - it doesn't work when array bounds are checked.\n\t(patch_array_ref):  Handle it here instead.\n\nFrom-SVN: r25345", "tree": {"sha": "af1eeee393c7515fcfd511cabefdaa237e5e3f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af1eeee393c7515fcfd511cabefdaa237e5e3f1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d5a51939f53e104020ac07784f5f2087aa06275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5a51939f53e104020ac07784f5f2087aa06275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d5a51939f53e104020ac07784f5f2087aa06275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5a51939f53e104020ac07784f5f2087aa06275/comments", "author": null, "committer": null, "parents": [{"sha": "92ada2426b902b319b1cacb44724ede37d3318cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ada2426b902b319b1cacb44724ede37d3318cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92ada2426b902b319b1cacb44724ede37d3318cc"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "42d32d27ffa64fe5bbd7f00cd94595eb64f5424c", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5a51939f53e104020ac07784f5f2087aa06275/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5a51939f53e104020ac07784f5f2087aa06275/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=2d5a51939f53e104020ac07784f5f2087aa06275", "patch": "@@ -2760,7 +2760,8 @@ generate_classfile (clas, state)\n       i = find_utf8_constant (&state->cpool, name);  PUT2 (i);\n       i = find_utf8_constant (&state->cpool, build_java_signature (type));\n       PUT2 (i);\n-      PUT2 (body != NULL_TREE ? 1 : 0);   /* attributes_count */\n+      i = (body != NULL_TREE) + (DECL_FUNCTION_THROWS (part) != NULL_TREE);\n+      PUT2 (i);   /* attributes_count */\n       if (body != NULL_TREE)\n \t{\n \t  int code_attributes_count = 0;\n@@ -2876,6 +2877,24 @@ generate_classfile (clas, state)\n \t\t}\n \t    }\n \t}\n+      if (DECL_FUNCTION_THROWS (part) != NULL_TREE)\n+\t{\n+\t  tree t = DECL_FUNCTION_THROWS (part);\n+\t  int throws_count = list_length (t);\n+\t  static tree Exceptions_node = NULL_TREE;\n+\t  if (Exceptions_node == NULL_TREE)\n+\t    Exceptions_node = get_identifier (\"Exceptions\");\n+\t  ptr = append_chunk (NULL, 8 + 2 * throws_count, state);\n+\t  i = find_utf8_constant (&state->cpool, Exceptions_node);\n+\t  PUT2 (i);  /* attribute_name_index */ \n+\t  i = 2 + 2 * throws_count;  PUT4(i); /* attribute_length */ \n+\t  i = throws_count;  PUT2 (i); \n+\t  for (;  t != NULL_TREE;  t = TREE_CHAIN (t))\n+\t    {\n+\t      i = find_class_constant (&state->cpool, TREE_VALUE (t));\n+\t      PUT2 (i);\n+\t    }\n+\t}\n       methods_count++;\n       current_function_decl = save_function;\n     }"}]}