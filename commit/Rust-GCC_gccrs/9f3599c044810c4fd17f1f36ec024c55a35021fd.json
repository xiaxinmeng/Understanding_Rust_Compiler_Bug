{"sha": "9f3599c044810c4fd17f1f36ec024c55a35021fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzNTk5YzA0NDgxMGM0ZmQxN2YxZjM2ZWMwMjRjNTVhMzUwMjFmZA==", "commit": {"author": {"name": "Mark Doffman", "email": "mark.doffman@codethink.co.uk", "date": "2018-03-16T05:07:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-03-16T05:07:39Z"}, "message": "03-16-2018  Mark Doffman  <mark.doffman@codethink.co.uk>\n            Jim MacArthur  <jim.macarthur@codethink.co.uk>\n\n\t* gfortran.dg/automatic_1.f90: New test.\n\t* gfortran.dg/automatic_repeat.f90: New test\n\t* gfortran.dg/automatic_save.f90: New test.\n\t* gfortran.dg/vax_structure.f90: New test.\n\nFrom-SVN: r258584", "tree": {"sha": "9fb13ff3d92b7dd0c0b8e9d83b730caa32c04f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fb13ff3d92b7dd0c0b8e9d83b730caa32c04f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f3599c044810c4fd17f1f36ec024c55a35021fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3599c044810c4fd17f1f36ec024c55a35021fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3599c044810c4fd17f1f36ec024c55a35021fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3599c044810c4fd17f1f36ec024c55a35021fd/comments", "author": null, "committer": null, "parents": [{"sha": "64300da748c4b945cd384d20c4ac85a8db4caaba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64300da748c4b945cd384d20c4ac85a8db4caaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64300da748c4b945cd384d20c4ac85a8db4caaba"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "14e70af66d65c8a0ced2a146c976fc82ff604aba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f3599c044810c4fd17f1f36ec024c55a35021fd", "patch": "@@ -1,3 +1,11 @@\n+03-16-2018  Mark Doffman  <mark.doffman@codethink.co.uk>\n+            Jim MacArthur  <jim.macarthur@codethink.co.uk>\n+\n+\t* gfortran.dg/automatic_1.f90: New test.\n+\t* gfortran.dg/automatic_repeat.f90: New test\n+\t* gfortran.dg/automatic_save.f90: New test.\n+\t* gfortran.dg/vax_structure.f90: New test.\n+\n 2018-03-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/78741"}, {"sha": "910dcb15565282cbc5909b7cb1ffddf56d8ff958", "filename": "gcc/testsuite/gfortran.dg/automatic_1.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_1.f90?ref=9f3599c044810c4fd17f1f36ec024c55a35021fd", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+! { dg-options \"-O2 -fdec-static -fno-automatic\" }\n+      subroutine foo (b)\n+        logical b\n+        integer i, j\n+        character*24 s\n+        automatic i\n+        if (b) then\n+          i = 26\n+          j = 131\n+          s = 'This is a test string'\n+        else\n+          if (i .eq. 26 .or. j .ne. 131) call abort\n+          if (s .ne. 'This is a test string') call abort\n+        end if\n+      end subroutine foo\n+      subroutine bar (s)\n+        character*42 s\n+        if (s .ne. '0123456789012345678901234567890123456') call abort\n+        call foo (.false.)\n+      end subroutine bar\n+      subroutine baz\n+        character*42 s\n+        ! Just clobber stack a little bit.\n+        s = '0123456789012345678901234567890123456'\n+        call bar (s)\n+      end subroutine baz\n+      call foo (.true.)\n+      call baz\n+      call foo (.false.)\n+      end"}, {"sha": "5c3133a2956038f9d99f9d83d820e58f35185a85", "filename": "gcc/testsuite/gfortran.dg/automatic_repeat.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_repeat.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_repeat.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_repeat.f90?ref=9f3599c044810c4fd17f1f36ec024c55a35021fd", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec-static\" }\n+! An AUTOMATIC statement cannot duplicated\n+FUNCTION X()\n+REAL, AUTOMATIC, AUTOMATIC :: Y ! { dg-error \"Duplicate AUTOMATIC attribute\" }\n+y = 1\n+END FUNCTION X\n+END"}, {"sha": "2455d208ecc795856f7569237e06807e68f80041", "filename": "gcc/testsuite/gfortran.dg/automatic_save.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_save.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_save.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_save.f90?ref=9f3599c044810c4fd17f1f36ec024c55a35021fd", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec-static\" }\n+! An AUTOMATIC statement cannot be used with SAVE\n+FUNCTION X()\n+REAL, SAVE, AUTOMATIC :: Y ! { dg-error \"AUTOMATIC attribute conflicts with SAVE attribute\" }\n+y = 1\n+END FUNCTION X\n+END"}, {"sha": "2658c129a5e15afc300c13090011783f770b92e9", "filename": "gcc/testsuite/gfortran.dg/vax_structure_1.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fvax_structure_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3599c044810c4fd17f1f36ec024c55a35021fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fvax_structure_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvax_structure_1.f90?ref=9f3599c044810c4fd17f1f36ec024c55a35021fd", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec-structure\" }\n+! Tests the VAX STRUCTURE and RECORD statements.\n+! These are syntactic sugar for TYPE statements.\n+\n+      program vax_structure_1\n+      structure /stocklevel/\n+         integer*2   A\n+         integer*4   B\n+         integer*4   CS(0:15)\n+         byte        D(0:15)\n+      end structure\n+\n+      record /stocklevel/ rec1, recs(100)\n+      integer x\n+      integer*2 y\n+\n+      rec1.A = 100\n+      recs(100).CS(10)=1\n+      x = 150\n+      y = 150\n+\n+      print *, rec1.B.eq.100\n+      print *, rec1.A.eq.x ! {dg-error \"are INTEGER(2)/INTEGER(4)\"}\n+      print *, rec1.A.eq.y\n+      print *, recs(100).CS(10)\n+      end program"}]}