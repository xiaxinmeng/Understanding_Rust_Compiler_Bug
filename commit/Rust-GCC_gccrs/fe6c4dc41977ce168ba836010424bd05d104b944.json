{"sha": "fe6c4dc41977ce168ba836010424bd05d104b944", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU2YzRkYzQxOTc3Y2UxNjhiYTgzNjAxMDQyNGJkMDVkMTA0Yjk0NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-09T07:50:12Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-09T07:50:12Z"}, "message": "Implement -fopt-info support for IPA ICF.\n\n2019-08-09  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-icf.c (sem_function::merge): Define AUTO_DUMP_SCOPE and\n\tuse dump_printf to report optimization.\n\t(sem_variable::merge): Likwise.\n\t(sem_item_optimizer::merge_classes): Use dump_printf to report\n\tICF hits.\n2019-08-09  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/ipa/ipa-icf-2.C: Add -optimized to -fdump-ipa-icf.\n\t* g++.dg/ipa/ipa-icf-3.C: Likewise.\n\t* g++.dg/ipa/ipa-icf-4.C: Likewise.\n\t* g++.dg/ipa/ipa-icf-6.C: Likewise.\n\t* gcc.dg/ipa/ipa-icf-1.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-10.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-11.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-12.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-13.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-16.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-18.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-2.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-20.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-21.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-23.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-25.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-26.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-27.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-3.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-35.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-36.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-37.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-38.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-39.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-5.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-7.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-8.c: Likewise.\n\t* gcc.dg/ipa/ipa-icf-merge-1.c: Likewise.\n\t* gcc.dg/ipa/pr64307.c: Likewise.\n\t* gcc.dg/ipa/pr90555.c: Likewise.\n\nFrom-SVN: r274230", "tree": {"sha": "715e0309c47eb72a65e8da4ab95868a1e9f94564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/715e0309c47eb72a65e8da4ab95868a1e9f94564"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe6c4dc41977ce168ba836010424bd05d104b944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6c4dc41977ce168ba836010424bd05d104b944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6c4dc41977ce168ba836010424bd05d104b944", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6c4dc41977ce168ba836010424bd05d104b944/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c220ecd21b11575cdfb53d64f3c7e850fede78a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c220ecd21b11575cdfb53d64f3c7e850fede78a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c220ecd21b11575cdfb53d64f3c7e850fede78a9"}], "stats": {"total": 309, "additions": 185, "deletions": 124}, "files": [{"sha": "21652c835eb7ae8e887a4c7634d37668f45f7e90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,3 +1,11 @@\n+2019-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.c (sem_function::merge): Define AUTO_DUMP_SCOPE and\n+\tuse dump_printf to report optimization.\n+\t(sem_variable::merge): Likwise.\n+\t(sem_item_optimizer::merge_classes): Use dump_printf to report\n+\tICF hits.\n+\n 2019-08-09  Martin Liska  <mliska@suse.cz>\n \n \t* value-prof.c (gimple_divmod_fixed_value_transform):"}, {"sha": "c9c3cb4a331450277f404595adfb02dc1818fc4e", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 114, "deletions": 94, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1024,20 +1024,23 @@ sem_function::merge (sem_item *alias_item)\n   bool original_address_matters = original->address_matters_p ();\n   bool alias_address_matters = alias->address_matters_p ();\n \n+  AUTO_DUMP_SCOPE (\"merge\",\n+\t\t   dump_user_location_t::from_function_decl (decl));\n+\n   if (DECL_EXTERNAL (alias->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Not unifying; alias is external.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; alias is external.\\n\");\n       return false;\n     }\n \n   if (DECL_NO_INLINE_WARNING_P (original->decl)\n       != DECL_NO_INLINE_WARNING_P (alias->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Not unifying; \"\n-\t\t \"DECL_NO_INLINE_WARNING mismatch.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; DECL_NO_INLINE_WARNING mismatch.\\n\");\n       return false;\n     }\n \n@@ -1047,21 +1050,20 @@ sem_function::merge (sem_item *alias_item)\n        || (DECL_SECTION_NAME (alias->decl) && !alias->implicit_section))\n       && DECL_SECTION_NAME (original->decl) != DECL_SECTION_NAME (alias->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Not unifying; \"\n-\t\t \"original and alias are in different sections.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; \"\n+\t\t     \"original and alias are in different sections.\\n\");\n       return false;\n     }\n \n   if (!original->in_same_comdat_group_p (alias)\n       || original->comdat_local_p ())\n     {\n-      if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Not unifying; alias nor wrapper cannot be created; \"\n-\t\t \"across comdat group boundary\\n\\n\");\n-\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; alias nor wrapper cannot be created; \"\n+\t\t     \"across comdat group boundary\\n\");\n       return false;\n     }\n \n@@ -1106,10 +1108,10 @@ sem_function::merge (sem_item *alias_item)\n       if (!sem_item::compare_referenced_symbol_properties (NULL, original, alias,\n \t\t\t\t\t\t\t   alias->address_taken))\n         {\n-\t  if (dump_file)\n-\t    fprintf (dump_file,\n-\t\t     \"Wrapper cannot be created because referenced symbol \"\n-\t\t     \"properties mismatch\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Wrapper cannot be created because referenced symbol \"\n+\t\t\t \"properties mismatch\\n\");\n         }\n       /* Do not turn function in one comdat group into wrapper to another\n \t comdat group. Other compiler producing the body of the\n@@ -1120,40 +1122,41 @@ sem_function::merge (sem_item *alias_item)\n \t       && (DECL_COMDAT_GROUP (alias->decl)\n \t\t   != DECL_COMDAT_GROUP (original->decl)))\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file,\n-\t\t     \"Wrapper cannot be created because of COMDAT\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Wrapper cannot be created because of COMDAT\\n\");\n \t}\n       else if (DECL_STATIC_CHAIN (alias->decl)\n \t       || DECL_STATIC_CHAIN (original->decl))\n         {\n-\t  if (dump_file)\n-\t    fprintf (dump_file,\n-\t\t     \"Cannot create wrapper of nested function.\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Cannot create wrapper of nested function.\\n\");\n         }\n       /* TODO: We can also deal with variadic functions never calling\n \t VA_START.  */\n       else if (stdarg_p (TREE_TYPE (alias->decl)))\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file,\n-\t\t     \"cannot create wrapper of stdarg function.\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"cannot create wrapper of stdarg function.\\n\");\n \t}\n       else if (ipa_fn_summaries\n \t       && ipa_fn_summaries->get (alias) != NULL\n \t       && ipa_fn_summaries->get (alias)->self_size <= 2)\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file, \"Wrapper creation is not \"\n-\t\t     \"profitable (function is too small).\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION, \"Wrapper creation is not \"\n+\t\t\t \"profitable (function is too small).\\n\");\n \t}\n       /* If user paid attention to mark function noinline, assume it is\n \t somewhat special and do not try to turn it into a wrapper that\n \t cannot be undone by inliner.  */\n       else if (lookup_attribute (\"noinline\", DECL_ATTRIBUTES (alias->decl)))\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file, \"Wrappers are not created for noinline.\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Wrappers are not created for noinline.\\n\");\n \t}\n       else\n         create_wrapper = true;\n@@ -1171,9 +1174,10 @@ sem_function::merge (sem_item *alias_item)\n \n       if (!redirect_callers && !create_wrapper)\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file, \"Not unifying; cannot redirect callers nor \"\n-\t\t     \"produce wrapper\\n\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Not unifying; cannot redirect callers nor \"\n+\t\t\t \"produce wrapper\\n\");\n \t  return false;\n \t}\n \n@@ -1202,27 +1206,29 @@ sem_function::merge (sem_item *alias_item)\n         redirect_callers = false;\n       if (!local_original)\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file, \"Not unifying; \"\n-\t\t     \"cannot produce local alias.\\n\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Not unifying; cannot produce local alias.\\n\");\n \t  return false;\n \t}\n \n       if (!redirect_callers && !create_wrapper)\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file, \"Not unifying; \"\n-\t\t     \"cannot redirect callers nor produce a wrapper\\n\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Not unifying; \"\n+\t\t\t \"cannot redirect callers nor produce a wrapper\\n\");\n \t  return false;\n \t}\n       if (!create_wrapper\n \t  && !alias->call_for_symbol_and_aliases (cgraph_node::has_thunk_p,\n \t\t\t\t\t\t  NULL, true)\n \t  && !alias->can_remove_if_no_direct_calls_p ())\n \t{\n-\t  if (dump_file)\n-\t    fprintf (dump_file, \"Not unifying; cannot make wrapper and \"\n-\t\t     \"function has other uses than direct calls\\n\\n\");\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t\t \"Not unifying; cannot make wrapper and \"\n+\t\t\t \"function has other uses than direct calls\\n\");\n \t  return false;\n \t}\n     }\n@@ -1238,9 +1244,10 @@ sem_function::merge (sem_item *alias_item)\n \t  alias->icf_merged = true;\n \t  local_original->icf_merged = true;\n \n-\t  if (dump_file && nredirected)\n-\t    fprintf (dump_file, \"%i local calls have been \"\n-\t\t     \"redirected.\\n\", nredirected);\n+\t  if (dump_enabled_p ())\n+\t    dump_printf (MSG_NOTE,\n+\t\t\t \"%i local calls have been \"\n+\t\t\t \"redirected.\\n\", nredirected);\n \t}\n \n       /* If all callers was redirected, do not produce wrapper.  */\n@@ -1272,8 +1279,9 @@ sem_function::merge (sem_item *alias_item)\n       original->call_for_symbol_thunks_and_aliases\n \t (set_local, (void *)(size_t) original->local_p (), true);\n \n-      if (dump_file)\n-\tfprintf (dump_file, \"Unified; Function alias has been created.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_OPTIMIZED_LOCATIONS,\n+\t\t     \"Unified; Function alias has been created.\\n\");\n     }\n   if (create_wrapper)\n     {\n@@ -1285,8 +1293,9 @@ sem_function::merge (sem_item *alias_item)\n       ipa_merge_profiles (original, alias, true);\n       alias->create_wrapper (local_original);\n \n-      if (dump_file)\n-\tfprintf (dump_file, \"Unified; Wrapper has been created.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_OPTIMIZED_LOCATIONS,\n+\t\t     \"Unified; Wrapper has been created.\\n\");\n     }\n \n   /* It's possible that redirection can hit thunks that block\n@@ -1299,8 +1308,8 @@ sem_function::merge (sem_item *alias_item)\n      on this optimization.  */\n   if (original->merged_comdat && !alias->merged_comdat)\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Dropping merged_comdat flag.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_NOTE, \"Dropping merged_comdat flag.\\n\");\n       if (local_original)\n         local_original->merged_comdat = false;\n       original->merged_comdat = false;\n@@ -1313,8 +1322,9 @@ sem_function::merge (sem_item *alias_item)\n       alias->reset ();\n       alias->body_removed = true;\n       alias->icf_merged = true;\n-      if (dump_file)\n-\tfprintf (dump_file, \"Unified; Function body was removed.\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_OPTIMIZED_LOCATIONS,\n+\t\t     \"Unified; Function body was removed.\\n\");\n     }\n \n   return true;\n@@ -2085,18 +2095,21 @@ sem_variable::merge (sem_item *alias_item)\n {\n   gcc_assert (alias_item->type == VAR);\n \n+  AUTO_DUMP_SCOPE (\"merge\",\n+\t\t   dump_user_location_t::from_function_decl (decl));\n   if (!sem_item::target_supports_symbol_aliases_p ())\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Not unifying; \"\n-\t\t \"Symbol aliases are not supported by target\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION, \"Not unifying; \"\n+\t\t     \"Symbol aliases are not supported by target\\n\");\n       return false;\n     }\n \n   if (DECL_EXTERNAL (alias_item->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Not unifying; alias is external.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; alias is external.\\n\");\n       return false;\n     }\n \n@@ -2128,9 +2141,9 @@ sem_variable::merge (sem_item *alias_item)\n   if (DECL_IN_CONSTANT_POOL (alias->decl)\n       || DECL_IN_CONSTANT_POOL (original->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Not unifying; constant pool variables.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; constant pool variables.\\n\");\n       return false;\n     }\n \n@@ -2140,45 +2153,48 @@ sem_variable::merge (sem_item *alias_item)\n        || (DECL_SECTION_NAME (alias->decl) && !alias->implicit_section))\n       && DECL_SECTION_NAME (original->decl) != DECL_SECTION_NAME (alias->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Not unifying; \"\n-\t\t \"original and alias are in different sections.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; \"\n+\t\t     \"original and alias are in different sections.\\n\");\n       return false;\n     }\n \n   /* We cannot merge if address comparsion metters.  */\n   if (alias_address_matters && flag_merge_constants < 2)\n     {\n-      if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Not unifying; address of original may be compared.\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; address of original may be compared.\\n\");\n       return false;\n     }\n \n   if (DECL_ALIGN (original->decl) < DECL_ALIGN (alias->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Not unifying; \"\n-\t\t \"original and alias have incompatible alignments\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; \"\n+\t\t     \"original and alias have incompatible alignments\\n\");\n \n       return false;\n     }\n \n   if (DECL_COMDAT_GROUP (original->decl) != DECL_COMDAT_GROUP (alias->decl))\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Not unifying; alias cannot be created; \"\n-\t\t \"across comdat group boundary\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; alias cannot be created; \"\n+\t\t     \"across comdat group boundary\\n\");\n \n       return false;\n     }\n \n   if (original_discardable)\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Not unifying; alias cannot be created; \"\n-\t\t \"target is discardable\\n\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; alias cannot be created; \"\n+\t\t     \"target is discardable\\n\");\n \n       return false;\n     }\n@@ -2199,8 +2215,9 @@ sem_variable::merge (sem_item *alias_item)\n       varpool_node::create_alias (alias_var->decl, decl);\n       alias->resolve_alias (original);\n \n-      if (dump_file)\n-\tfprintf (dump_file, \"Unified; Variable alias has been created.\\n\");\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_OPTIMIZED_LOCATIONS,\n+\t\t     \"Unified; Variable alias has been created.\\n\");\n \n       return true;\n     }\n@@ -3477,23 +3494,26 @@ sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n \t    if (alias == source)\n \t      continue;\n \n-\t    if (dump_file)\n+\t    dump_user_location_t loc\n+\t      = dump_user_location_t::from_function_decl (source->decl);\n+\t    if (dump_enabled_p ())\n \t      {\n-\t\tfprintf (dump_file, \"Semantic equality hit:%s->%s\\n\",\n-\t\t\t xstrdup_for_dump (source->node->name ()),\n-\t\t\t xstrdup_for_dump (alias->node->name ()));\n-\t\tfprintf (dump_file, \"Assembler symbol names:%s->%s\\n\",\n-\t\t\t xstrdup_for_dump (source->node->asm_name ()),\n-\t\t\t xstrdup_for_dump (alias->node->asm_name ()));\n+\t\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n+\t\t\t\t \"Semantic equality hit:%s->%s\\n\",\n+\t\t\t\t xstrdup_for_dump (source->node->name ()),\n+\t\t\t\t xstrdup_for_dump (alias->node->name ()));\n+\t\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n+\t\t\t\t \"Assembler symbol names:%s->%s\\n\",\n+\t\t\t\t xstrdup_for_dump (source->node->asm_name ()),\n+\t\t\t\t xstrdup_for_dump (alias->node->asm_name ()));\n \t      }\n \n \t    if (lookup_attribute (\"no_icf\", DECL_ATTRIBUTES (alias->decl)))\n \t      {\n-\t        if (dump_file)\n-\t\t  fprintf (dump_file,\n-\t\t\t   \"Merge operation is skipped due to no_icf \"\n-\t\t\t   \"attribute.\\n\\n\");\n-\n+\t\tif (dump_enabled_p ())\n+\t\t  dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n+\t\t\t\t   \"Merge operation is skipped due to no_icf \"\n+\t\t\t\t   \"attribute.\\n\");\n \t\tcontinue;\n \t      }\n "}, {"sha": "73022f37b1fba8d99ba32fa612b4363781cd3db3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,3 +1,36 @@\n+2019-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/ipa/ipa-icf-2.C: Add -optimized to -fdump-ipa-icf.\n+\t* g++.dg/ipa/ipa-icf-3.C: Likewise.\n+\t* g++.dg/ipa/ipa-icf-4.C: Likewise.\n+\t* g++.dg/ipa/ipa-icf-6.C: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-1.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-10.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-11.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-12.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-13.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-16.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-18.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-2.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-20.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-21.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-23.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-25.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-26.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-27.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-3.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-35.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-36.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-37.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-38.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-39.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-5.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-7.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-8.c: Likewise.\n+\t* gcc.dg/ipa/ipa-icf-merge-1.c: Likewise.\n+\t* gcc.dg/ipa/pr64307.c: Likewise.\n+\t* gcc.dg/ipa/pr90555.c: Likewise.\n+\n 2019-08-09  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/tree-prof/indir-call-prof.C: Add -optimize"}, {"sha": "7f56189eebbc31df9bcc861b8b27bbcd5b615c71", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-2.C?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n class A\n {"}, {"sha": "5a3cca24fa27ca3505f0ee993ce8465a684f6315", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-3.C?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n __attribute__ ((noinline))\n int zero()"}, {"sha": "86954055382f9748cf08507d5c26d9b0bcc6fe92", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-4.C?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf -fno-inline\" } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized -fno-inline\" } */\n \n namespace {\n struct A"}, {"sha": "7bcb9dc4808afc0f52b9762869a0362f1c783931", "filename": "gcc/testsuite/g++.dg/ipa/ipa-icf-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fipa-icf-6.C?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O3 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O3 -fdump-ipa-icf-optimized\"  } */\n \n struct A {                                                                      \n   A() {ptr=&b;}                                                                 "}, {"sha": "8cb9186238ceae1c037e318b11cff13101c19f97", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-1.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n #include <stdio.h>\n "}, {"sha": "8fdac3883ee5bbde23f272816d7f6ae11dd59ce2", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-10.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n int ferda(int x, int y) __attribute__ ((pure));\n int funkce(int a, int b) __attribute__ ((pure));"}, {"sha": "dbc0cbe7b616f9ce32ba20280c7704b0c0a6ec23", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-11.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n __attribute__ ((noinline))\n int fce(int a, int b)"}, {"sha": "7ed75f8bfd924596042413d7771eb930af9e0644", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-12.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n #include <stdlib.h>\n #include <stdio.h>"}, {"sha": "d58f182d23771a372f242cdc8a3d88cfd6db9e34", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-13.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized-all-all\"  } */\n \n #include <stdlib.h>\n #include <stdio.h>"}, {"sha": "b11cae06534d711322d96431e6f4f54c13b6f4cb", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-16.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n #include <stdio.h>\n "}, {"sha": "7753e1e4abb29aa158350f002ad267fcbc7194c3", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-18.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n __attribute__ ((noinline))\n int foo(int x)"}, {"sha": "e6e165a9a62ca6913844d7ce9d0d681f0c95fe77", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-2.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n #include <stdio.h>\n "}, {"sha": "42e9ce95f09b2593ddca1a452873dbc06b0125a2", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-20.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n #include <math.h>\n "}, {"sha": "ea7164c2ef7e57fce98913baf692a7e7be834df3", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-21.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-21.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -msse2 -fdump-ipa-icf-optimized\"  } */\n \n #include <xmmintrin.h>\n "}, {"sha": "805a406efed87a30a358ee05f8f1b4dcde63fc88", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-23.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n struct A\n {"}, {"sha": "5b963a843e799a13bcedad89d70a6234f095b909", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-25.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-25.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized-all\"  } */\n \n static int zip();\n static int zap();"}, {"sha": "42c538630c28e8d6a1a9986e51d268c6803105d9", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-26.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-26.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n void destroy (void)\n {"}, {"sha": "a2ce86ab1db5cb1cc83c4e6742cf1806af202de7", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-27.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-27.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf -fno-inline\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized -fno-inline\"  } */\n \n void destroy (void)\n {"}, {"sha": "8d83a281cd04b5d9b697ef31cef465e39e5ff7b7", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-3.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n typedef int v4si __attribute__ ((vector_size (16)));\n "}, {"sha": "03bac84bdbeef9d245940b4848968fee3d06375d", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-35.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-35.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized-all-all\"  } */\n \n void f1()\n {"}, {"sha": "e630b6dc14074c592887f2d7c7d40781ab68c58c", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-36.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-36.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf -fmerge-all-constants\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized-all-all-all-all -fmerge-all-constants\"  } */\n static int a;\n static int b;\n static const int c = 2;"}, {"sha": "e482bd275d93c2c6742170157bb00bf145fd76af", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-37.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-37.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized-all-all-all-all\"  } */\n static int a;\n static int b;\n static const int c = 2;"}, {"sha": "b9aea90b4004bedc8b340fa4ac20f24027ca91c0", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-38.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"-O2 -fdump-ipa-icf -flto -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized -flto -fdump-tree-optimized\" } */\n /* { dg-require-effective-target lto } */\n /* { dg-additional-sources \"ipa-icf-38a.c\" }*/\n "}, {"sha": "83ccd20ac56c820a706f53f4251469e21b37513d", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-39.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-39.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-39.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-39.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-alias \"\" } */\n-/* { dg-options \"-O2 -fdump-ipa-icf -fmerge-all-constants -fdbg-cnt=merged_ipa_icf:1:3\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized -fmerge-all-constants -fdbg-cnt=merged_ipa_icf:1:3\"  } */\n /* { dg-prune-output \"dbg_cnt 'merged_ipa_icf' set to 1-3\" } */\n /* { dg-prune-output \"\\\\*\\\\*\\\\*dbgcnt:.*limit.*reached\" } */\n "}, {"sha": "40d71740f653d6faa0a2c0b1a4eae199f6966807", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-5.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target c99_runtime } } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n /* { dg-add-options c99_runtime } */\n \n #include <complex.h>"}, {"sha": "87a6d261b3ba2178a22c2bf8e7b750f3b9c71fae", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-7.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target c99_runtime } } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n /* { dg-add-options c99_runtime } */\n \n #include <complex.h>"}, {"sha": "fe95c2ccd569a9703d4ab20e44f3a24a493d5b16", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-8.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n \n #include <stdio.h>\n "}, {"sha": "f96e8e866a4bb085d2aad3b2e7568373be7cdc7f", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-merge-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-merge-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-merge-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-merge-1.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-additional-options \"-O2 -fdump-ipa-icf\" } */\n+/* { dg-additional-options \"-O2 -fdump-ipa-icf-optimized\" } */\n \n /* Picking 'main' as a candiate target for equivalent functios is not a\n    good idea.  */"}, {"sha": "e2c9121c037a4590855c3df8ee043eb303886532", "filename": "gcc/testsuite/gcc.dg/ipa/pr64307.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr64307.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr64307.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr64307.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target c99_runtime } } */\n-/* { dg-options \"-O0 -fipa-icf -fdump-ipa-icf\"  } */\n+/* { dg-options \"-O0 -fipa-icf -fdump-ipa-icf-optimized\"  } */\n \n #include <complex.h>\n "}, {"sha": "d357405bb9a57fcdbf3c6d2b140dbd4fbdb5400b", "filename": "gcc/testsuite/gcc.dg/ipa/pr90555.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr90555.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe6c4dc41977ce168ba836010424bd05d104b944/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr90555.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr90555.c?ref=fe6c4dc41977ce168ba836010424bd05d104b944", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-fopenmp-simd -O2 -mavx512f -fdump-ipa-icf\" } */\n+/* { dg-options \"-fopenmp-simd -O2 -mavx512f -fdump-ipa-icf-optimized\" } */\n \n #define N 1024\n int a[N];"}]}