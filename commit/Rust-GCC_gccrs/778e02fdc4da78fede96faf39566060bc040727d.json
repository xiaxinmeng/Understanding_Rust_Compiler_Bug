{"sha": "778e02fdc4da78fede96faf39566060bc040727d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc4ZTAyZmRjNGRhNzhmZWRlOTZmYWYzOTU2NjA2MGJjMDQwNzI3ZA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-11-13T01:08:06Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-11-13T01:08:06Z"}, "message": "opts-global.c (postpone_unknown_option_warning): Fix spelling.\n\n2014-11-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* opts-global.c (postpone_unknown_option_warning): Fix spelling.\n\t(print_ignored_options): Fix quoting.\n\t* opts.c (common_handle_option): Likewise.\n\t(set_debug_level): Likewise.\n\t* toplev.c (process_options): Likewise.\n\nFrom-SVN: r217457", "tree": {"sha": "71af228ae671518483d416113abf3431b7af5e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71af228ae671518483d416113abf3431b7af5e72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/778e02fdc4da78fede96faf39566060bc040727d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/778e02fdc4da78fede96faf39566060bc040727d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/778e02fdc4da78fede96faf39566060bc040727d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/778e02fdc4da78fede96faf39566060bc040727d/comments", "author": null, "committer": null, "parents": [{"sha": "75171b6e814b00577083c9a9f411de759cc6e5ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75171b6e814b00577083c9a9f411de759cc6e5ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75171b6e814b00577083c9a9f411de759cc6e5ef"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "5b96094511f74fce291e855182cfe6fb39f5b6ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778e02fdc4da78fede96faf39566060bc040727d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778e02fdc4da78fede96faf39566060bc040727d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=778e02fdc4da78fede96faf39566060bc040727d", "patch": "@@ -1,3 +1,11 @@\n+2014-11-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* opts-global.c (postpone_unknown_option_warning): Fix spelling.\n+\t(print_ignored_options): Fix quoting.\n+\t* opts.c (common_handle_option): Likewise.\n+\t(set_debug_level): Likewise.\n+\t* toplev.c (process_options): Likewise.\n+\n 2014-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/63838"}, {"sha": "80a84f629d252f42ff6be2e69d4e7e44ca9b88a3", "filename": "gcc/opts-global.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778e02fdc4da78fede96faf39566060bc040727d/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778e02fdc4da78fede96faf39566060bc040727d/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=778e02fdc4da78fede96faf39566060bc040727d", "patch": "@@ -132,7 +132,7 @@ complain_wrong_lang (const struct cl_decoded_option *decoded,\n    we only complain about unknown -Wno-* options if they may have\n    prevented a diagnostic. Otherwise, we just ignore them.  Note that\n    if we do complain, it is only as a warning, not an error; passing\n-   the compiler an unrecognised -Wno-* option should never change\n+   the compiler an unrecognized -Wno-* option should never change\n    whether the compilation succeeds or fails.  */\n \n static void\n@@ -152,7 +152,7 @@ print_ignored_options (void)\n \n       opt = ignored_options.pop ();\n       warning_at (UNKNOWN_LOCATION, 0,\n-\t\t  \"unrecognized command line option \\\"%s\\\"\", opt);\n+\t\t  \"unrecognized command line option %qs\", opt);\n     }\n }\n "}, {"sha": "195cadd3e5ff54fd14fb9b32b9921648e1067fda", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778e02fdc4da78fede96faf39566060bc040727d/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778e02fdc4da78fede96faf39566060bc040727d/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=778e02fdc4da78fede96faf39566060bc040727d", "patch": "@@ -1923,7 +1923,7 @@ common_handle_option (struct gcc_options *opts,\n \t\t\t     ? STATIC_BUILTIN_STACK_CHECK\n \t\t\t     : GENERIC_STACK_CHECK;\n       else\n-\twarning_at (loc, 0, \"unknown stack check parameter \\\"%s\\\"\", arg);\n+\twarning_at (loc, 0, \"unknown stack check parameter %qs\", arg);\n       break;\n \n     case OPT_fstack_limit:\n@@ -2199,7 +2199,7 @@ set_debug_level (enum debug_info_type type, int extended, const char *arg,\n       if (opts_set->x_write_symbols != NO_DEBUG\n \t  && opts->x_write_symbols != NO_DEBUG\n \t  && type != opts->x_write_symbols)\n-\terror_at (loc, \"debug format \\\"%s\\\" conflicts with prior selection\",\n+\terror_at (loc, \"debug format %qs conflicts with prior selection\",\n \t\t  debug_type_names[type]);\n       opts->x_write_symbols = type;\n       opts_set->x_write_symbols = type;\n@@ -2217,9 +2217,9 @@ set_debug_level (enum debug_info_type type, int extended, const char *arg,\n     {\n       int argval = integral_argument (arg);\n       if (argval == -1)\n-\terror_at (loc, \"unrecognised debug output level \\\"%s\\\"\", arg);\n+\terror_at (loc, \"unrecognised debug output level %qs\", arg);\n       else if (argval > 3)\n-\terror_at (loc, \"debug output level %s is too high\", arg);\n+\terror_at (loc, \"debug output level %qs is too high\", arg);\n       else\n \topts->x_debug_info_level = (enum debug_info_levels) argval;\n     }"}, {"sha": "c259705d5b4c2c6dd5be8562ac106d2c8bbd86ed", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778e02fdc4da78fede96faf39566060bc040727d/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778e02fdc4da78fede96faf39566060bc040727d/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=778e02fdc4da78fede96faf39566060bc040727d", "patch": "@@ -1470,7 +1470,7 @@ process_options (void)\n     debug_hooks = &vmsdbg_debug_hooks;\n #endif\n   else\n-    error (\"target system does not support the \\\"%s\\\" debug format\",\n+    error (\"target system does not support the %qs debug format\",\n \t   debug_type_names[write_symbols]);\n \n   /* We know which debug output will be used so we can set flag_var_tracking"}]}