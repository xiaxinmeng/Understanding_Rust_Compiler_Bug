{"sha": "f79b86a43ec258a7c603862e39b1e90cb8a18375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc5Yjg2YTQzZWMyNThhN2M2MDM4NjJlMzliMWU5MGNiOGExODM3NQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2012-06-18T17:57:06Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2012-06-18T17:57:06Z"}, "message": "Add a new parameter to the function output_return_instruction to handle simple...\n\nAdd a new parameter to the function output_return_instruction to handle\nsimple cases of return when no epilogue needs to be printed out.\n\ngcc/ \n\n2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n            Sameera Deshpande  <sameera.deshpande@arm.com>\n            Greta Yorsh  <greta.yorsh@arm.com>\n\n        * config/arm/arm-protos.h (output_return_instruction): New parameter and\n\tint to bool change of parameter types.\n        * config/arm/arm.c (output_return_instruction): Likewise.\n        * config/arm/arm.md (arm_simple_return): New pattern.\n        (arm_return, cond_return, cond_return_inverted): Add new arguments.\n        * config/arm/thumb2.md (thumb2_return): Update condition and code.\n\n\nCo-Authored-By: Greta Yorsh <greta.yorsh@arm.com>\nCo-Authored-By: Sameera Deshpande <sameera.deshpande@arm.com>\n\nFrom-SVN: r188743", "tree": {"sha": "d31f07cf00ce3ad4e2b2a7e03381593067850721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d31f07cf00ce3ad4e2b2a7e03381593067850721"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f79b86a43ec258a7c603862e39b1e90cb8a18375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79b86a43ec258a7c603862e39b1e90cb8a18375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f79b86a43ec258a7c603862e39b1e90cb8a18375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79b86a43ec258a7c603862e39b1e90cb8a18375/comments", "author": null, "committer": null, "parents": [{"sha": "d461c88a2526adaeb72ad43eef718ee9306c418d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d461c88a2526adaeb72ad43eef718ee9306c418d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d461c88a2526adaeb72ad43eef718ee9306c418d"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "45497a73b70f30ebc381d642597da481a9418364", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f79b86a43ec258a7c603862e39b1e90cb8a18375", "patch": "@@ -1,3 +1,14 @@\n+2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n+            Sameera Deshpande  <sameera.deshpande@arm.com>\n+            Greta Yorsh  <greta.yorsh@arm.com>\n+\n+        * config/arm/arm-protos.h (output_return_instruction): New parameter and\n+\tint to bool change of parameter types.\n+        * config/arm/arm.c (output_return_instruction): Likewise.\n+        * config/arm/arm.md (arm_simple_return): New pattern.\n+        (arm_return, cond_return, cond_return_inverted): Add new arguments.\n+        * config/arm/thumb2.md (thumb2_return): Update condition and code.\n+\n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n             Sameera Deshpande  <sameera.deshpande@arm.com>\n             Greta Yorsh  <greta.yorsh@arm.com>"}, {"sha": "e19c6356731faab70a7e564c5373a5da4db68e3d", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=f79b86a43ec258a7c603862e39b1e90cb8a18375", "patch": "@@ -148,7 +148,7 @@ extern int arm_address_offset_is_imm (rtx);\n extern const char *output_add_immediate (rtx *);\n extern const char *arithmetic_instr (rtx, int);\n extern void output_ascii_pseudo_op (FILE *, const unsigned char *, int);\n-extern const char *output_return_instruction (rtx, int, int);\n+extern const char *output_return_instruction (rtx, bool, bool, bool);\n extern void arm_poke_function_name (FILE *, const char *);\n extern void arm_final_prescan_insn (rtx);\n extern int arm_debugger_arg_offset (int, rtx);"}, {"sha": "b9e0f7bbf1a5e48f86aee833a6214cf6947f643d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f79b86a43ec258a7c603862e39b1e90cb8a18375", "patch": "@@ -15516,9 +15516,11 @@ arm_get_vfp_saved_size (void)\n \n \n /* Generate a function exit sequence.  If REALLY_RETURN is false, then do\n-   everything bar the final return instruction.  */\n+   everything bar the final return instruction.  If simple_return is true,\n+   then do not output epilogue, because it has already been emitted in RTL.  */\n const char *\n-output_return_instruction (rtx operand, int really_return, int reverse)\n+output_return_instruction (rtx operand, bool really_return, bool reverse,\n+                           bool simple_return)\n {\n   char conditional[10];\n   char instr[100];\n@@ -15561,7 +15563,7 @@ output_return_instruction (rtx operand, int really_return, int reverse)\n   offsets = arm_get_frame_offsets ();\n   live_regs_mask = offsets->saved_regs_mask;\n \n-  if (live_regs_mask)\n+  if (!simple_return && live_regs_mask)\n     {\n       const char * return_reg;\n \n@@ -15689,7 +15691,7 @@ output_return_instruction (rtx operand, int really_return, int reverse)\n \t{\n \t  /* The return has already been handled\n \t     by loading the LR into the PC.  */\n-\t  really_return = 0;\n+          return \"\";\n \t}\n     }\n "}, {"sha": "5954323e1a4ce6dcbb5d2d96e4e492b0f728ba7a", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f79b86a43ec258a7c603862e39b1e90cb8a18375", "patch": "@@ -8519,7 +8519,7 @@\n         arm_ccfsm_state += 2;\n         return \\\"\\\";\n       }\n-    return output_return_instruction (const_true_rtx, TRUE, FALSE);\n+    return output_return_instruction (const_true_rtx, true, false, false);\n   }\"\n   [(set_attr \"type\" \"load1\")\n    (set_attr \"length\" \"12\")\n@@ -8540,7 +8540,7 @@\n         arm_ccfsm_state += 2;\n         return \\\"\\\";\n       }\n-    return output_return_instruction (operands[0], TRUE, FALSE);\n+    return output_return_instruction (operands[0], true, false, false);\n   }\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"length\" \"12\")\n@@ -8561,13 +8561,30 @@\n         arm_ccfsm_state += 2;\n         return \\\"\\\";\n       }\n-    return output_return_instruction (operands[0], TRUE, TRUE);\n+    return output_return_instruction (operands[0], true, true, false);\n   }\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"length\" \"12\")\n    (set_attr \"type\" \"load1\")]\n )\n \n+(define_insn \"*arm_simple_return\"\n+  [(simple_return)]\n+  \"TARGET_ARM\"\n+  \"*\n+  {\n+    if (arm_ccfsm_state == 2)\n+      {\n+        arm_ccfsm_state += 2;\n+        return \\\"\\\";\n+      }\n+    return output_return_instruction (const_true_rtx, true, false, true);\n+  }\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n ;; Generate a sequence of instructions to determine if the processor is\n ;; in 26-bit or 32-bit mode, and return the appropriate return address\n ;; mask."}, {"sha": "fd0bea63f417cc88c60fdb8f4e2048db7080aeda", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f79b86a43ec258a7c603862e39b1e90cb8a18375/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=f79b86a43ec258a7c603862e39b1e90cb8a18375", "patch": "@@ -635,17 +635,12 @@\n    (set_attr \"length\" \"20\")]\n )\n \n-;; Note: this is not predicable, to avoid issues with linker-generated\n-;; interworking stubs.\n (define_insn \"*thumb2_return\"\n-  [(return)]\n-  \"TARGET_THUMB2 && USE_RETURN_INSN (FALSE)\"\n-  \"*\n-  {\n-    return output_return_instruction (const_true_rtx, TRUE, FALSE);\n-  }\"\n-  [(set_attr \"type\" \"load1\")\n-   (set_attr \"length\" \"12\")]\n+  [(simple_return)]\n+  \"TARGET_THUMB2\"\n+  \"* return output_return_instruction (const_true_rtx, true, false, true);\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")]\n )\n \n (define_insn_and_split \"thumb2_eh_return\""}]}