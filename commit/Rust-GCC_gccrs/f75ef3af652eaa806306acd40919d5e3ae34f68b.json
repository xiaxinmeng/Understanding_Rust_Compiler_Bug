{"sha": "f75ef3af652eaa806306acd40919d5e3ae34f68b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc1ZWYzYWY2NTJlYWE4MDYzMDZhY2Q0MDkxOWQ1ZTNhZTM0ZjY4Yg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-06-16T08:37:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:37:25Z"}, "message": "exp_ch7.adb (Find_Node_To_Be_Wrapped): If the node appears within the entry_call alternative of a conditional entry...\n\n2005-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch7.adb (Find_Node_To_Be_Wrapped): If the node appears within\n\tthe entry_call alternative of a conditional entry call, wrap the\n\tconditional entry call itself.\n\nFrom-SVN: r101033", "tree": {"sha": "172b6ce07e68323d18783d5ee4d211a038c71d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/172b6ce07e68323d18783d5ee4d211a038c71d32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f75ef3af652eaa806306acd40919d5e3ae34f68b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75ef3af652eaa806306acd40919d5e3ae34f68b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75ef3af652eaa806306acd40919d5e3ae34f68b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75ef3af652eaa806306acd40919d5e3ae34f68b/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbf663a91f6415e6f8f8d37943f0cbef92fa4b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf663a91f6415e6f8f8d37943f0cbef92fa4b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf663a91f6415e6f8f8d37943f0cbef92fa4b71"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "bd18e62fc7de002bd80f7850c99943df37ba50ce", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f75ef3af652eaa806306acd40919d5e3ae34f68b/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f75ef3af652eaa806306acd40919d5e3ae34f68b/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=f75ef3af652eaa806306acd40919d5e3ae34f68b", "patch": "@@ -291,7 +291,7 @@ package body Exp_Ch7 is\n    --      controller but this would not tackle view conversions properly.\n    --    - A classwide type can always potentially have controlled components\n    --      but the record controller of the corresponding actual type may not\n-   --      be nown at compile time so the dispatch table contains a special\n+   --      be known at compile time so the dispatch table contains a special\n    --      field that allows to compute the offset of the record controller\n    --      dynamically. See s-finimp.Deep_Tag_Attach and a-tags.RC_Offset\n \n@@ -1758,7 +1758,11 @@ package body Exp_Ch7 is\n                  N_Procedure_Call_Statement =>\n                if Nkind (Parent (The_Parent)) = N_Entry_Call_Alternative\n                  and then\n-                   Nkind (Parent (Parent (The_Parent))) = N_Timed_Entry_Call\n+                   (Nkind (Parent (Parent (The_Parent)))\n+                     = N_Timed_Entry_Call\n+                   or else\n+                     Nkind (Parent (Parent (The_Parent)))\n+                       = N_Conditional_Entry_Call)\n                then\n                   return Parent (Parent (The_Parent));\n                else"}]}