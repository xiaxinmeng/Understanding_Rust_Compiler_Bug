{"sha": "bf7499197fbb065123257c374064f6bb715c951b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3NDk5MTk3ZmJiMDY1MTIzMjU3YzM3NDA2NGY2YmI3MTVjOTUxYg==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2016-07-04T14:25:22Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-07-04T14:25:22Z"}, "message": "S/390: Add support for z13 instructions lochi and locghi.\n\nThe attached patch adds patterns to make use of the z13 LOCHI and\nLOCGHI instructions.\n\ngcc/ChangeLog:\n\n2016-07-04  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md: Add \"z13\" cpu_facility.\n\t(\"*mov<mode>cc\"): Add support for z13 instructions lochi and locghi.\n\t* config/s390/predicates.md (\"loc_operand\"): New predicate for \"load on\n\tcondition\" type instructions.\n\ngcc/testsuite/ChangeLog:\n\n2016-07-04  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/vector/vec-scalar-cmp-1.c: Expect lochi instead\n\tof locr.\n\t* gcc.target/s390/loc-1.c: New test.\n\nFrom-SVN: r237984", "tree": {"sha": "92b00ae746adb67fef8e83316aacddbee9caf653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92b00ae746adb67fef8e83316aacddbee9caf653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf7499197fbb065123257c374064f6bb715c951b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7499197fbb065123257c374064f6bb715c951b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf7499197fbb065123257c374064f6bb715c951b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7499197fbb065123257c374064f6bb715c951b/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fc0c9c844bcc61de8642f9a31c0144c15d9f822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc0c9c844bcc61de8642f9a31c0144c15d9f822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc0c9c844bcc61de8642f9a31c0144c15d9f822"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "3c1177d5958c6327da4ef736e26daa6e30a96bb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7499197fbb065123257c374064f6bb715c951b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7499197fbb065123257c374064f6bb715c951b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf7499197fbb065123257c374064f6bb715c951b", "patch": "@@ -1,3 +1,10 @@\n+2016-07-04  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md: Add \"z13\" cpu_facility.\n+\t(\"*mov<mode>cc\"): Add support for z13 instructions lochi and locghi.\n+\t* config/s390/predicates.md (\"loc_operand\"): New predicate for \"load on\n+\tcondition\" type instructions.\n+\n 2016-07-04  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \t    Jeff Law  <law@redhat.com>\n "}, {"sha": "75e4cb86b20b8c33b20cdf8d9a0ce3876829a87d", "filename": "gcc/config/s390/predicates.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Fconfig%2Fs390%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Fconfig%2Fs390%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fpredicates.md?ref=bf7499197fbb065123257c374064f6bb715c951b", "patch": "@@ -182,6 +182,13 @@\n   return s390_contiguous_bitmask_p (INTVAL (op), GET_MODE_BITSIZE (mode), NULL, NULL);\n })\n \n+;; Return true if OP is ligitimate for any LOC instruction.\n+\n+(define_predicate \"loc_operand\"\n+  (ior (match_operand 0 \"nonimmediate_operand\")\n+      (and (match_code \"const_int\")\n+\t   (match_test \"INTVAL (op) <= 32767 && INTVAL (op) >= -32768\"))))\n+\n ;; operators --------------------------------------------------------------\n \n ;; Return nonzero if OP is a valid comparison operator"}, {"sha": "6d8d04181ef3a4f0a2be06fb138d67cf5de4883a", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=bf7499197fbb065123257c374064f6bb715c951b", "patch": "@@ -483,7 +483,7 @@\n   (const (symbol_ref \"s390_tune_attr\")))\n \n (define_attr \"cpu_facility\"\n-  \"standard,ieee,zarch,cpu_zarch,longdisp,extimm,dfp,z10,z196,zEC12,vec\"\n+  \"standard,ieee,zarch,cpu_zarch,longdisp,extimm,dfp,z10,z196,zEC12,vec,z13\"\n   (const_string \"standard\"))\n \n (define_attr \"enabled\" \"\"\n@@ -528,7 +528,12 @@\n \n          (and (eq_attr \"cpu_facility\" \"vec\")\n               (match_test \"TARGET_VX\"))\n-\t (const_int 1)]\n+\t (const_int 1)\n+\n+         (and (eq_attr \"cpu_facility\" \"z13\")\n+              (match_test \"TARGET_Z13\"))\n+\t (const_int 1)\n+\t ]\n \t(const_int 0)))\n \n ;; Pipeline description for z900.  For lack of anything better,\n@@ -6309,21 +6314,23 @@\n \t\t\t\t     XEXP (operands[1], 1));\n })\n \n-; locr, loc, stoc, locgr, locg, stocg\n+; locr, loc, stoc, locgr, locg, stocg, lochi, locghi\n (define_insn_and_split \"*mov<mode>cc\"\n-  [(set (match_operand:GPR 0 \"nonimmediate_operand\"   \"=d,d,d,d,S,S,&d\")\n+  [(set (match_operand:GPR 0 \"nonimmediate_operand\"   \"=d,d,d,d,d,d,S,S,&d\")\n \t(if_then_else:GPR\n \t  (match_operator 1 \"s390_comparison\"\n-\t    [(match_operand 2 \"cc_reg_operand\"        \" c,c,c,c,c,c,c\")\n+\t    [(match_operand 2 \"cc_reg_operand\"        \" c,c,c,c,c,c,c,c,c\")\n \t     (match_operand 5 \"const_int_operand\"     \"\")])\n-\t  (match_operand:GPR 3 \"nonimmediate_operand\" \" d,0,S,0,d,0,S\")\n-\t  (match_operand:GPR 4 \"nonimmediate_operand\" \" 0,d,0,S,0,d,S\")))]\n+\t  (match_operand:GPR 3 \"loc_operand\" \" d,0,S,0,K,0,d,0,S\")\n+\t  (match_operand:GPR 4 \"loc_operand\" \" 0,d,0,S,0,K,0,d,S\")))]\n   \"TARGET_Z196\"\n   \"@\n    loc<g>r%C1\\t%0,%3\n    loc<g>r%D1\\t%0,%4\n    loc<g>%C1\\t%0,%3\n    loc<g>%D1\\t%0,%4\n+   loc<g>hi%C1\\t%0,%h3\n+   loc<g>hi%D1\\t%0,%h4\n    stoc<g>%C1\\t%3,%0\n    stoc<g>%D1\\t%4,%0\n    #\"\n@@ -6340,7 +6347,8 @@\n \t (match_dup 0)\n \t (match_dup 4)))]\n   \"\"\n-  [(set_attr \"op_type\" \"RRF,RRF,RSY,RSY,RSY,RSY,*\")])\n+  [(set_attr \"op_type\" \"RRF,RRF,RSY,RSY,RIE,RIE,RSY,RSY,*\")\n+   (set_attr \"cpu_facility\" \"*,*,*,*,z13,z13,*,*,*\")])\n \n ;;\n ;;- Multiply instructions."}, {"sha": "59a437c0421afa87fb8a0f9bc41c51c77c5204b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf7499197fbb065123257c374064f6bb715c951b", "patch": "@@ -1,3 +1,9 @@\n+2016-07-04  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/vector/vec-scalar-cmp-1.c: Expect lochi instead of\n+\tlocr.\n+\t* gcc.target/s390/loc-1.c: New test.\n+\n 2016-07-04  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \t* gcc/testsuite/gcc.target/i386/avx512f-vect-perm-1.c: New test."}, {"sha": "26dbd9cecb38d6b3bd26daedbe963f3caa8881ea", "filename": "gcc/testsuite/gcc.target/s390/loc-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Floc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Floc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Floc-1.c?ref=bf7499197fbb065123257c374064f6bb715c951b", "patch": "@@ -0,0 +1,22 @@\n+/* Test load on condition patterns.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzarch\" } */\n+\n+unsigned long loc_r (unsigned long rc, unsigned long cond, unsigned long val)\n+{\n+  if (cond)\n+    rc = val;\n+  return rc;\n+}\n+/* { dg-final { scan-assembler \"\\tlocgrne\\t%r2,%r4\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"\\tlocrne\\t%r2,%r4\" { target { ! lp64 } } } } */\n+\n+long loc_hi (long rc, long cond)\n+{\n+  if (cond)\n+    rc = (long)-1;\n+  return rc;\n+}\n+/* { dg-final { scan-assembler \"\\tlocghine\\t%r2,-1\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"\\tlochine\\t%r2,-1\" { target { ! lp64 } } } } */"}, {"sha": "5f63eda4bea0f313cd09aae364f09900a83afe18", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-scalar-cmp-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-scalar-cmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7499197fbb065123257c374064f6bb715c951b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-scalar-cmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-scalar-cmp-1.c?ref=bf7499197fbb065123257c374064f6bb715c951b", "patch": "@@ -8,8 +8,8 @@\n /* { dg-final { scan-assembler-times \"wfchedbs\\t%v\\[0-9\\]*,%v2,%v0\" 1 } } */\n /* { dg-final { scan-assembler-times \"wfchdbs\\t%v\\[0-9\\]*,%v2,%v0\" 1 } } */\n /* { dg-final { scan-assembler-times \"wfchedbs\\t%v\\[0-9\\]*,%v2,%v0\" 1 } } */\n-/* { dg-final { scan-assembler-times \"locrne\" 5 } } */\n-/* { dg-final { scan-assembler-times \"locrno\" 1 } } */\n+/* { dg-final { scan-assembler-times \"lochine\" 5 } } */\n+/* { dg-final { scan-assembler-times \"lochino\" 1 } } */\n \n \n int"}]}