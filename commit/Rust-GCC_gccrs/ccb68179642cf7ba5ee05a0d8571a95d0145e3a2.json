{"sha": "ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiNjgxNzk2NDJjZjdiYTVlZTA1YTBkODU3MWE5NWQwMTQ1ZTNhMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-20T18:28:38Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-23T09:19:15Z"}, "message": "auto-inc-dec: Don't add incs/decs to bare CLOBBERs [PR93124]\n\nIn this PR, auto-inc-dec was trying to turn:\n\n    (set (reg X) (plus (reg X) (const_int N)))\n    (clobber (mem (reg X)))\n\ninto:\n\n    (clobber (mem (pre_modify (reg X) ...)))\n\nBut bare clobber insns are just there to describe dataflow.  They're\nnot supposed to generate any code.\n\n2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR rtl-optimization/93124\n\t* auto-inc-dec.c (merge_in_block): Don't add auto inc/decs to\n\tbare USE and CLOBBER insns.\n\ngcc/testsuite/\n\t* gcc.dg/torture/pr93124.c: New test.", "tree": {"sha": "bb866a5e9962d58d733d13c3c95c251dc61c33e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb866a5e9962d58d733d13c3c95c251dc61c33e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92bea423c295f5c6c9b0cf06a5a555011cc98bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bea423c295f5c6c9b0cf06a5a555011cc98bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92bea423c295f5c6c9b0cf06a5a555011cc98bdc"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "d16ebbb7c3a13ec65d2c7e0c1e255e11d8ed55f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "patch": "@@ -1,3 +1,9 @@\n+2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/93124\n+\t* auto-inc-dec.c (merge_in_block): Don't add auto inc/decs to\n+\tbare USE and CLOBBER insns.\n+\n 2020-01-22  Andrew Pinski  <apinski@marvell.com>\n \n \t* config/arc/arc.c (output_short_suffix): Check insn for nullness."}, {"sha": "7d0d91403f3856ceb5acd6768a14d929f4ec4b33", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "patch": "@@ -1602,9 +1602,15 @@ merge_in_block (int max_reg, basic_block bb)\n       else\n \t{\n \t  insn_is_add_or_inc = false;\n-\t  mem_insn.insn = insn;\n-\t  if (find_mem (&PATTERN (insn)))\n-\t    success_in_block++;\n+\t  /* We can't use auto inc/dec for bare USEs and CLOBBERs,\n+\t     since they aren't supposed to generate any code.  */\n+\t  rtx_code code = GET_CODE (PATTERN (insn));\n+\t  if (code != USE && code != CLOBBER)\n+\t    {\n+\t      mem_insn.insn = insn;\n+\t      if (find_mem (&PATTERN (insn)))\n+\t\tsuccess_in_block++;\n+\t    }\n \t}\n \n       /* If the inc insn was merged with a mem, the inc insn is gone"}, {"sha": "d10c6fc8b81158e136a4dfdd47d3e14f430c6ef9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "patch": "@@ -1,3 +1,7 @@\n+2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/torture/pr93124.c: New test.\n+\n 2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93382"}, {"sha": "16bc8b54f14925e3e4bf593158fa851843fd985a", "filename": "gcc/testsuite/gcc.dg/torture/pr93124.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr93124.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr93124.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr93124.c?ref=ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-additional-options \"-fno-rerun-cse-after-loop -fno-guess-branch-probability -fno-tree-fre\" } */\n+\n+int x;\n+\n+void fn2 ();\n+void fn3 ();\n+void fn4 ();\n+void fn5 ();\n+void fn6 ();\n+\n+void\n+fn1 (void)\n+{\n+  int n;\n+  for (n = 0;; ++n) {\n+    {\n+      struct { char a[n]; } s;\n+      fn2 (s);\n+    }\n+    struct { unsigned a[x]; } s;\n+    int i, b;\n+    for (i = 0; i < n; ++i)\n+      ;\n+    fn2 (s);\n+    {\n+      struct { char a[n]; } s;\n+      int i;\n+      for (i = 0; i < n; ++i)\n+        s.a[i] = i;\n+      fn3 (s, s);\n+    }\n+    fn4 ();\n+    {\n+      struct { unsigned a[n]; } s;\n+      fn5 (s);\n+    }\n+    {\n+      struct { char a[b]; } s;\n+      for (; i < n;)\n+        s.a[i] = i;\n+      fn6 (s);\n+    }\n+  }\n+}"}]}