{"sha": "36c3edb1e39c74e2705efac738a389b5597d9d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZjM2VkYjFlMzljNzRlMjcwNWVmYWM3MzhhMzg5YjU1OTdkOWQ4OA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-04-14T11:57:52Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-04-14T11:57:52Z"}, "message": "[Fortran] Fix name conflict check for use-assoc (PR 92736)\n\n\t* module.c (gfc_match_use): Fix name-conflict check for use-associating\n\tthe same symbol again in a submodule.\n\n\t* gfortran.dg/use_rename_10.f90: New.\n\t* gfortran.dg/use_rename_11.f90: New.", "tree": {"sha": "dcdde80e293fc0bb3cc264d9ae50151ef19b216a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcdde80e293fc0bb3cc264d9ae50151ef19b216a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36c3edb1e39c74e2705efac738a389b5597d9d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c3edb1e39c74e2705efac738a389b5597d9d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c3edb1e39c74e2705efac738a389b5597d9d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c3edb1e39c74e2705efac738a389b5597d9d88/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b0e49a52e1884b501861c128b0a98dec50bdd2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0e49a52e1884b501861c128b0a98dec50bdd2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0e49a52e1884b501861c128b0a98dec50bdd2e"}], "stats": {"total": 143, "additions": 131, "deletions": 12}, "files": [{"sha": "9473ecbe1bbaf30eca3b66e1ac4a258ccc654ecd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=36c3edb1e39c74e2705efac738a389b5597d9d88", "patch": "@@ -1,3 +1,8 @@\n+2020-04-14  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* module.c (gfc_match_use): Fix name-conflict check for use-associating\n+\tthe same symbol again in a submodule.\n+\n 2020-04-13  Linus Koenig <link@sig-st.de>\n \n \tPR fortran/94192"}, {"sha": "eccf92bf658ab2eb6f7079195a2b90403c6ba3c4", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=36c3edb1e39c74e2705efac738a389b5597d9d88", "patch": "@@ -648,18 +648,6 @@ gfc_match_use (void)\n \t  if (type == INTERFACE_USER_OP)\n \t    new_use->op = INTRINSIC_USER;\n \n-\t  st = gfc_find_symtree (gfc_current_ns->sym_root, name);\n-\t  if (st && type != INTERFACE_USER_OP)\n-\t    {\n-\t      if (m == MATCH_YES)\n-\t\tgfc_error (\"Symbol %qs at %L conflicts with the rename symbol \"\n-\t\t\t   \"at %L\", name, &st->n.sym->declared_at, &loc);\n-\t      else\n-\t\tgfc_error (\"Symbol %qs at %L conflicts with the symbol \"\n-\t\t\t   \"at %L\", name, &st->n.sym->declared_at, &loc);\n-\t      goto cleanup;\n-\t    }\n-\n \t  if (use_list->only_flag)\n \t    {\n \t      if (m != MATCH_YES)\n@@ -691,6 +679,20 @@ gfc_match_use (void)\n \t\tgoto cleanup;\n \t    }\n \n+\t  st = gfc_find_symtree (gfc_current_ns->sym_root, name);\n+\t  if (st && type != INTERFACE_USER_OP\n+\t      && (st->n.sym->module != use_list->module_name\n+\t\t  || strcmp (st->n.sym->name, new_use->use_name) != 0))\n+\t    {\n+\t      if (m == MATCH_YES)\n+\t\tgfc_error (\"Symbol %qs at %L conflicts with the rename symbol \"\n+\t\t\t   \"at %L\", name, &st->n.sym->declared_at, &loc);\n+\t      else\n+\t\tgfc_error (\"Symbol %qs at %L conflicts with the symbol \"\n+\t\t\t   \"at %L\", name, &st->n.sym->declared_at, &loc);\n+\t      goto cleanup;\n+\t    }\n+\n \t  if (strcmp (new_use->use_name, use_list->module_name) == 0\n \t      || strcmp (new_use->local_name, use_list->module_name) == 0)\n \t    {"}, {"sha": "f771586d6052d77bc75226e112735f1b39e09fbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36c3edb1e39c74e2705efac738a389b5597d9d88", "patch": "@@ -1,3 +1,8 @@\n+2020-04-14  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/use_rename_10.f90: New.\n+\t* gfortran.dg/use_rename_11.f90: New.\n+\n 2020-04-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94588"}, {"sha": "736d319c5a96c1c7cbb883e9a400997eb3e601b4", "filename": "gcc/testsuite/gfortran.dg/use_rename_10.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_rename_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_rename_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_rename_10.f90?ref=36c3edb1e39c74e2705efac738a389b5597d9d88", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+!\n+! PR fortran/92736\n+!\n+! Contributed by Chinoune Mehdi\n+!\n+module m1\n+  implicit none\n+  integer, parameter :: i = 10\n+end module m1\n+\n+module m2\n+  use m1, only : i\n+  implicit none\n+  interface\n+    module subroutine sb1()\n+    end subroutine sb1\n+  end interface\n+end module m2\n+\n+submodule(m2) s1\n+  use m1, only : i\n+  implicit none\n+contains\n+  module subroutine sb1\n+    print *,\"hello\", i\n+  end subroutine sb1\n+end submodule s1"}, {"sha": "b713ae01d362476211fb41cb6ab73e717d240713", "filename": "gcc/testsuite/gfortran.dg/use_rename_11.f90", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_rename_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c3edb1e39c74e2705efac738a389b5597d9d88/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_rename_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_rename_11.f90?ref=36c3edb1e39c74e2705efac738a389b5597d9d88", "patch": "@@ -0,0 +1,79 @@\n+! { dg-do compile }\n+!\n+! PR fortran/92736\n+!\n+module m\n+  integer :: i, j\n+end module m\n+\n+module m2\n+  integer :: i, k\n+end module m2\n+\n+module mod\n+  use m, only: i\n+  interface\n+    module subroutine sb1()\n+    end subroutine sb1\n+  end interface\n+end\n+\n+! Error: use 'i' both for m's 'i' and 'j'\n+submodule(mod) sub     ! { dg-error \"Symbol 'i' at .1. conflicts with the rename symbol\" }\n+  use m1, only: i => j ! { dg-error \"Symbol 'i' at .1. conflicts with the rename symbol\" }\n+end\n+\n+module mod2\n+  use m, only: i\n+  interface\n+    module subroutine sb1()\n+    end subroutine sb1\n+  end interface\n+end\n+\n+! Error: use 'i' both for m's 'i' and m2's 'k'\n+submodule(mod2) sub2   ! { dg-error \"Symbol 'i' at .1. conflicts with the rename symbol\" }\n+  use m2, only: i => k ! { dg-error \"Symbol 'i' at .1. conflicts with the rename symbol\" }\n+end\n+\n+\n+module mod3\n+  use m, only: i\n+  interface\n+    module subroutine sb1()\n+    end subroutine sb1\n+  end interface\n+end\n+\n+! Error: use 'i' both for m's 'i' and m2's 'i'\n+submodule(mod3) sub3  ! { dg-error \"Symbol 'i' at .1. conflicts with the symbol\" }\n+  use m2, only: i     ! { dg-error \"Symbol 'i' at .1. conflicts with the symbol\" }\n+end\n+\n+\n+module mod4\n+  use m, only: mm => i, i\n+  interface\n+    module subroutine sb1()\n+    end subroutine sb1\n+  end interface\n+end\n+\n+! OK\n+submodule(mod4) sub4\n+  use m, only: i\n+  use m, only: mm => i\n+end\n+\n+module mod5\n+  use m, only: mm => i\n+  interface\n+    module subroutine sb1()\n+    end subroutine sb1\n+  end interface\n+end\n+\n+! mm from both m2 and m\n+submodule(mod5) sub5    ! { dg-error \"Symbol 'mm' at .1. conflicts with the rename symbol\" }\n+  use m2, only: mm => i ! { dg-error \"Symbol 'mm' at .1. conflicts with the rename symbol\" }\n+end"}]}