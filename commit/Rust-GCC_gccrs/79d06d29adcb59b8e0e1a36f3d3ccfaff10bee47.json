{"sha": "79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkMDZkMjlhZGNiNTliOGUwZTFhMzZmM2QzY2NmYWZmMTBiZWU0Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-13T19:11:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-13T19:11:06Z"}, "message": "(stupid_mark_refs): If setting reg set only in this insn and not\nreferenced, make REG_UNUSED note.\n\nFrom-SVN: r14416", "tree": {"sha": "9d5b3e6fcc8578c427f5a7c73f6e2696027adb40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d5b3e6fcc8578c427f5a7c73f6e2696027adb40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47/comments", "author": null, "committer": null, "parents": [{"sha": "a23ea59844cf672a4bc1a57ee0f47f9c75fe7a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23ea59844cf672a4bc1a57ee0f47f9c75fe7a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23ea59844cf672a4bc1a57ee0f47f9c75fe7a0c"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "9a18e5555710b6f5acd760e8947996b9938859a7", "filename": "gcc/stupid.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47/gcc%2Fstupid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47/gcc%2Fstupid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstupid.c?ref=79d06d29adcb59b8e0e1a36f3d3ccfaff10bee47", "patch": "@@ -1,5 +1,5 @@\n /* Dummy data flow analysis for GNU compiler in nonoptimizing mode.\n-   Copyright (C) 1987, 1991, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 91, 94, 95, 96, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -514,6 +514,19 @@ stupid_mark_refs (x, insn)\n \n \t      if (last_setjmp_suid < reg_where_dead[regno])\n \t\tregs_crosses_setjmp[regno] = 1;\n+\n+\t      /* If this register is only used in this insn and is only\n+\t\t set, mark it unused.  We have to do this even when not \n+\t\t optimizing so that MD patterns which count on this\n+\t\t behavior (e.g., it not causing an output reload on\n+\t\t an insn setting CC) will operate correctly.  */\n+\t      if (GET_CODE (SET_DEST (x)) == REG\n+\t\t  &&& REGNO_FIRST_UID (regno) == INSN_UID (insn)\n+\t\t  && REGNO_LAST_UID (regno) == INSN_UID (insn)\n+\t\t  && (code == CLOBBER || ! reg_mentioned_p (SET_DEST (x),\n+\t\t\t\t\t\t\t    SET_SRC (x))))\n+\t\tREG_NOTES (insn) = gen_rtx (EXPR_LIST, REG_UNUSED,\n+\t\t\t\t\t    SET_DEST (x), REG_NOTES (insn));\n \t    }\n \t}\n "}]}