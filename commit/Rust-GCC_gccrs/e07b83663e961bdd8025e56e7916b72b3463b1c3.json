{"sha": "e07b83663e961bdd8025e56e7916b72b3463b1c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3YjgzNjYzZTk2MWJkZDgwMjVlNTZlNzkxNmI3MmIzNDYzYjFjMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-04T17:54:59Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-04T17:54:59Z"}, "message": "[C++ PATCH] give builtin types consistent name\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00201.html\n\tGive builtin types the correct name.\n\t* name-lookup.c (set_global_binding): Assert name is DECL_NAME.\n\t* decl.c (record_builtin_type): Reimplement, use new TYPE_DECL for\n\trname.\n\nFrom-SVN: r253426", "tree": {"sha": "d5d394cf4cd8a033c411e8a75cdd6a12d39b79a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5d394cf4cd8a033c411e8a75cdd6a12d39b79a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e07b83663e961bdd8025e56e7916b72b3463b1c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07b83663e961bdd8025e56e7916b72b3463b1c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07b83663e961bdd8025e56e7916b72b3463b1c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07b83663e961bdd8025e56e7916b72b3463b1c3/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d21f2166b03cfda6b689398f7839520d66123708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21f2166b03cfda6b689398f7839520d66123708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21f2166b03cfda6b689398f7839520d66123708"}], "stats": {"total": 60, "additions": 34, "deletions": 26}, "files": [{"sha": "277b6469e02ce65dcbdba7e80dacd438bcbe7a37", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07b83663e961bdd8025e56e7916b72b3463b1c3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07b83663e961bdd8025e56e7916b72b3463b1c3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e07b83663e961bdd8025e56e7916b72b3463b1c3", "patch": "@@ -1,3 +1,10 @@\n+2017-10-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tGive builtin types the correct name.\n+\t* name-lookup.c (set_global_binding): Assert name is DECL_NAME.\n+\t* decl.c (record_builtin_type): Reimplement, use new TYPE_DECL for\n+\trname.\n+\n 2017-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Andrew Pinski  <apinski@cavium.com>\n "}, {"sha": "99f0af237566e605732b85e3eb3d0b32675698f3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07b83663e961bdd8025e56e7916b72b3463b1c3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07b83663e961bdd8025e56e7916b72b3463b1c3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=e07b83663e961bdd8025e56e7916b72b3463b1c3", "patch": "@@ -3895,47 +3895,47 @@ make_unbound_class_template (tree context, tree name, tree parm_list,\n /* Push the declarations of builtin types into the global namespace.\n    RID_INDEX is the index of the builtin type in the array\n    RID_POINTERS.  NAME is the name used when looking up the builtin\n-   type.  TYPE is the _TYPE node for the builtin type.  */\n+   type.  TYPE is the _TYPE node for the builtin type.\n+\n+   The calls to SET_IDENTIFIER_GLOBAL_VALUE below should be\n+   eliminated.  Built-in types should not be looked up name; their\n+   names are keywords that the parser can recognize.  However, there\n+   is code in c-common.c that uses identifier_global_value to look up\n+   built-in types by name.  */\n \n void\n record_builtin_type (enum rid rid_index,\n \t\t     const char* name,\n \t\t     tree type)\n {\n-  tree rname = NULL_TREE, tname = NULL_TREE;\n-  tree tdecl = NULL_TREE;\n+  tree decl = NULL_TREE;\n \n-  if ((int) rid_index < (int) RID_MAX)\n-    rname = ridpointers[(int) rid_index];\n   if (name)\n-    tname = get_identifier (name);\n-\n-  /* The calls to SET_IDENTIFIER_GLOBAL_VALUE below should be\n-     eliminated.  Built-in types should not be looked up name; their\n-     names are keywords that the parser can recognize.  However, there\n-     is code in c-common.c that uses identifier_global_value to look\n-     up built-in types by name.  */\n-  if (tname)\n     {\n-      tdecl = build_decl (BUILTINS_LOCATION, TYPE_DECL, tname, type);\n+      tree tname = get_identifier (name);\n+      tree tdecl = build_decl (BUILTINS_LOCATION, TYPE_DECL, tname, type);\n       DECL_ARTIFICIAL (tdecl) = 1;\n       SET_IDENTIFIER_GLOBAL_VALUE (tname, tdecl);\n+      decl = tdecl;\n     }\n-  if (rname)\n-    {\n-      if (!tdecl)\n+\n+  if ((int) rid_index < (int) RID_MAX)\n+    if (tree rname = ridpointers[(int) rid_index])\n+      if (!decl || DECL_NAME (decl) != rname)\n \t{\n-\t  tdecl = build_decl (BUILTINS_LOCATION, TYPE_DECL, rname, type);\n-\t  DECL_ARTIFICIAL (tdecl) = 1;\n+\t  tree rdecl = build_decl (BUILTINS_LOCATION, TYPE_DECL, rname, type);\n+\t  DECL_ARTIFICIAL (rdecl) = 1;\n+\t  SET_IDENTIFIER_GLOBAL_VALUE (rname, rdecl);\n+\t  if (!decl)\n+\t    decl = rdecl;\n \t}\n-      SET_IDENTIFIER_GLOBAL_VALUE (rname, tdecl);\n-    }\n-\n-  if (!TYPE_NAME (type))\n-    TYPE_NAME (type) = tdecl;\n \n-  if (tdecl)\n-    debug_hooks->type_decl (tdecl, 0);\n+  if (decl)\n+    {\n+      if (!TYPE_NAME (type))\n+\tTYPE_NAME (type) = decl;\n+      debug_hooks->type_decl (decl, 0);\n+    }\n }\n \n /* Push a type into the namespace so that the back ends ignore it.  */"}, {"sha": "c72a7f4eb5f64fc83f39deff362c7be2f77cdf67", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07b83663e961bdd8025e56e7916b72b3463b1c3/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07b83663e961bdd8025e56e7916b72b3463b1c3/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=e07b83663e961bdd8025e56e7916b72b3463b1c3", "patch": "@@ -4847,6 +4847,7 @@ set_global_binding (tree name, tree val)\n {\n   bool subtime = timevar_cond_start (TV_NAME_LOOKUP);\n \n+  gcc_checking_assert (name == DECL_NAME (val));\n   tree *slot = find_namespace_slot (global_namespace, name, true);\n   tree old = MAYBE_STAT_DECL (*slot);\n "}]}