{"sha": "a7ce6ec39314e69d2789bf4175983fb687225006", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjZTZlYzM5MzE0ZTY5ZDI3ODliZjQxNzU5ODNmYjY4NzIyNTAwNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-02-20T15:15:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-02-20T15:15:52Z"}, "message": "re PR tree-optimization/52298 (ICE: verify_ssa failed: definition in block follows use)\n\n2012-02-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/52298\n\t* tree-vect-stmts.c (vectorizable_store): Properly use\n\tSTMT_VINFO_DR_STEP instead of DR_STEP when vectorizing\n\touter loops.\n\t(vectorizable_load): Likewise.\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_access):\n\tAccess DR_STEP after ensuring it is not NULL.\n\n\t* gcc.dg/torture/pr52298.c: New testcase.\n\t* gcc.dg/vect/pr52298.c: Likewise.\n\nFrom-SVN: r184396", "tree": {"sha": "52b584af322306a457efe446b5f1f3d74618ee07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52b584af322306a457efe446b5f1f3d74618ee07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ce6ec39314e69d2789bf4175983fb687225006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ce6ec39314e69d2789bf4175983fb687225006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ce6ec39314e69d2789bf4175983fb687225006", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ce6ec39314e69d2789bf4175983fb687225006/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0408f13d4b3170e5dc50149f042f21d1527767d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0408f13d4b3170e5dc50149f042f21d1527767d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0408f13d4b3170e5dc50149f042f21d1527767d"}], "stats": {"total": 77, "additions": 73, "deletions": 4}, "files": [{"sha": "b8366f41959ba8a945d540c65cd25eb4e983c7b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7ce6ec39314e69d2789bf4175983fb687225006", "patch": "@@ -1,3 +1,13 @@\n+2012-02-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52298\n+\t* tree-vect-stmts.c (vectorizable_store): Properly use\n+\tSTMT_VINFO_DR_STEP instead of DR_STEP when vectorizing\n+\touter loops.\n+\t(vectorizable_load): Likewise.\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_access):\n+\tAccess DR_STEP after ensuring it is not NULL.\n+\n 2012-02-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/52286"}, {"sha": "caa8eb1321afce31fac136333778eaf29fa1de01", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7ce6ec39314e69d2789bf4175983fb687225006", "patch": "@@ -1,3 +1,9 @@\n+2012-02-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52298\n+\t* gcc.dg/torture/pr52298.c: New testcase.\n+\t* gcc.dg/vect/pr52298.c: Likewise.\n+\n 2012-02-20  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \t* gcc.dg/pr52132.c: Fix FAIL on 16-bit int platforms."}, {"sha": "f0799c1a5c835d645d4d618dea9dbfc97b232ec0", "filename": "gcc/testsuite/gcc.dg/torture/pr52298.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52298.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52298.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52298.c?ref=a7ce6ec39314e69d2789bf4175983fb687225006", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, h;\n+\n+int i[5][5];\n+\n+void\n+fn1 ()\n+{\n+  int l = 0;\n+\n+  for (a = 0; a <= 3; a++)\n+    for (b = 1; b >= 0; b -= 1)\n+      l |= i[0][b];\n+  c = l;\n+}"}, {"sha": "c2401607c4578bb4b293d71619a7c6ced9a4ea37", "filename": "gcc/testsuite/gcc.dg/vect/pr52298.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr52298.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr52298.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr52298.c?ref=a7ce6ec39314e69d2789bf4175983fb687225006", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -ftree-vectorize -fno-tree-pre -fno-tree-loop-im\" } */\n+\n+extern void abort (void);\n+int c[80];\n+\n+__attribute__((noinline)) int\n+foo (void)\n+{\n+  int l = 0;\n+  int a, b;\n+\n+  for (a = 3; a >= 0; a--)\n+    for (b = 7; b >= 0; b--)\n+      l |= c[a+60];\n+  return l;\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  for (i = 0; i < 60; i++)\n+    c[i] = 1;\n+  for (; i < 64; i++)\n+    c[i] = 1 << (i - 59);\n+  if (foo () != 30)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "b7d0cb5174242817c5e586172c5f37fc8c49061a", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=a7ce6ec39314e69d2789bf4175983fb687225006", "patch": "@@ -2319,7 +2319,7 @@ vect_analyze_data_ref_access (struct data_reference *dr)\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n   loop_vec_info loop_vinfo = STMT_VINFO_LOOP_VINFO (stmt_info);\n   struct loop *loop = NULL;\n-  HOST_WIDE_INT dr_step = TREE_INT_CST_LOW (step);\n+  HOST_WIDE_INT dr_step;\n \n   if (loop_vinfo)\n     loop = LOOP_VINFO_LOOP (loop_vinfo);\n@@ -2332,6 +2332,7 @@ vect_analyze_data_ref_access (struct data_reference *dr)\n     }\n \n   /* Allow invariant loads in loops.  */\n+  dr_step = TREE_INT_CST_LOW (step);\n   if (loop_vinfo && dr_step == 0)\n     {\n       GROUP_FIRST_ELEMENT (vinfo_for_stmt (stmt)) = NULL;"}, {"sha": "f0b3dae719cd7ecfe0dbb392f193aec92d930b97", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ce6ec39314e69d2789bf4175983fb687225006/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=a7ce6ec39314e69d2789bf4175983fb687225006", "patch": "@@ -3753,7 +3753,9 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n   if (!STMT_VINFO_DATA_REF (stmt_info))\n     return false;\n \n-  if (tree_int_cst_compare (DR_STEP (dr), size_zero_node) < 0)\n+  if (tree_int_cst_compare (loop && nested_in_vect_loop_p (loop, stmt)\n+\t\t\t    ? STMT_VINFO_DR_STEP (stmt_info) : DR_STEP (dr),\n+\t\t\t    size_zero_node) < 0)\n     {\n       if (vect_print_dump_info (REPORT_DETAILS))\n         fprintf (vect_dump, \"negative step for store.\");\n@@ -4266,7 +4268,10 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n   if (!STMT_VINFO_DATA_REF (stmt_info))\n     return false;\n \n-  negative = tree_int_cst_compare (DR_STEP (dr), size_zero_node) < 0;\n+  negative = tree_int_cst_compare (loop && nested_in_vect_loop_p (loop, stmt)\n+\t\t\t\t   ? STMT_VINFO_DR_STEP (stmt_info)\n+\t\t\t\t   : DR_STEP (dr),\n+\t\t\t\t   size_zero_node) < 0;\n   if (negative && ncopies > 1)\n     {\n       if (vect_print_dump_info (REPORT_DETAILS))\n@@ -4654,7 +4659,7 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n      nested within an outer-loop that is being vectorized.  */\n \n   if (loop && nested_in_vect_loop_p (loop, stmt)\n-      && (TREE_INT_CST_LOW (DR_STEP (dr))\n+      && (TREE_INT_CST_LOW (STMT_VINFO_DR_STEP (stmt_info))\n \t  % GET_MODE_SIZE (TYPE_MODE (vectype)) != 0))\n     {\n       gcc_assert (alignment_support_scheme != dr_explicit_realign_optimized);"}]}