{"sha": "0829d244e790076d9867c95e10e29bfdc1ff9198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgyOWQyNDRlNzkwMDc2ZDk4NjdjOTVlMTBlMjliZmRjMWZmOTE5OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-04-13T16:34:41Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-04-13T16:34:41Z"}, "message": "Makefile.in (ssa.o, regclass.o): Depend on $(EXPR_H).\n\n\t* Makefile.in (ssa.o, regclass.o): Depend on $(EXPR_H).\n\n\t* regclass.c, ssa.c: Include expr.h.\n\n\t* rtl.h (memory_address, force_reg, emit_queue, emit_move_insn,\n\tgen_move_insn): Delete redundant declarations.\n\nFrom-SVN: r41337", "tree": {"sha": "227b40e4acdb6f2db8e8e82363d2ad78610da240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/227b40e4acdb6f2db8e8e82363d2ad78610da240"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0829d244e790076d9867c95e10e29bfdc1ff9198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0829d244e790076d9867c95e10e29bfdc1ff9198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0829d244e790076d9867c95e10e29bfdc1ff9198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0829d244e790076d9867c95e10e29bfdc1ff9198/comments", "author": null, "committer": null, "parents": [{"sha": "78faa32d14d4979ccdac3f398396b1fdded71401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78faa32d14d4979ccdac3f398396b1fdded71401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78faa32d14d4979ccdac3f398396b1fdded71401"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "810ee5292f2834a1c42b48181a98f6a4c1176f07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0829d244e790076d9867c95e10e29bfdc1ff9198", "patch": "@@ -1,3 +1,12 @@\n+2001-04-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (ssa.o, regclass.o): Depend on $(EXPR_H).\n+\n+\t* regclass.c, ssa.c: Include expr.h.\n+\n+\t* rtl.h (memory_address, force_reg, emit_queue, emit_move_insn,\n+\tgen_move_insn): Delete redundant declarations.\n+\n 2001-04-13  Alan Modra  <amodra@one.net.au>\n \n \t* pa.c (hppa_init_pic_save): Set rtx_unchanging for"}, {"sha": "463499500ac139d76ffd5b3010675ae9f4e9203e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0829d244e790076d9867c95e10e29bfdc1ff9198", "patch": "@@ -1477,7 +1477,7 @@ resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h flags.h \\\n    real.h insn-config.h $(INSN_ATTR_H) $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n    $(TM_P_H)\n-ssa.o : ssa.c $(CONFIG_H) $(SYSTEM_H) $(REGS_H) varray.h\t\t\t\\\n+ssa.o : ssa.c $(CONFIG_H) $(SYSTEM_H) $(REGS_H) varray.h $(EXPR_H) \\\n    hard-reg-set.h flags.h function.h real.h insn-config.h $(RECOG_H)\t\\\n    $(BASIC_BLOCK_H) output.h ssa.h\n dce.o : dce.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n@@ -1505,7 +1505,7 @@ combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h function.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h toplev.h $(TM_P_H)\n regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h flags.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) insn-config.h $(RECOG_H) reload.h real.h \\\n-   toplev.h function.h output.h $(GGC_H) $(TM_P_H)\n+   toplev.h function.h output.h $(GGC_H) $(TM_P_H) $(EXPR_H)\n local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h function.h $(INSN_ATTR_H) toplev.h $(TM_P_H)"}, {"sha": "001015f7c2efcf870ad79322101a5dd04a3bda71", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=0829d244e790076d9867c95e10e29bfdc1ff9198", "patch": "@@ -27,6 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"expr.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\""}, {"sha": "d7943221885cb587e021aff059dce25eb9ed9e9e", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=0829d244e790076d9867c95e10e29bfdc1ff9198", "patch": "@@ -1196,7 +1196,6 @@ extern rtx operand_subword_force\tPARAMS ((rtx, unsigned int,\n extern int subreg_lowpart_p\t\tPARAMS ((rtx));\n extern rtx make_safe_from\t\tPARAMS ((rtx, rtx));\n extern rtx convert_memory_address\tPARAMS ((enum machine_mode, rtx));\n-extern rtx memory_address\t\tPARAMS ((enum machine_mode, rtx));\n extern rtx get_insns\t\t\tPARAMS ((void));\n extern const char *get_insn_name\tPARAMS ((int));\n extern rtx get_last_insn\t\tPARAMS ((void));\n@@ -1212,9 +1211,6 @@ extern rtx gen_sequence\t\t\tPARAMS ((void));\n extern rtx immed_double_const\t\tPARAMS ((HOST_WIDE_INT, HOST_WIDE_INT, enum machine_mode));\n extern rtx force_const_mem\t\tPARAMS ((enum machine_mode, rtx));\n \n-/* In explow.c  */\n-extern rtx force_reg\t\t\tPARAMS ((enum machine_mode, rtx));\n-\n /* In varasm.c  */\n extern rtx get_pool_constant\t\tPARAMS ((rtx));\n extern enum machine_mode get_pool_mode\tPARAMS ((rtx));\n@@ -1230,10 +1226,6 @@ extern rtx assign_stack_temp\t\tPARAMS ((enum machine_mode,\n \t\t\t\t\t       HOST_WIDE_INT, int));\n extern rtx assign_temp\t\t\tPARAMS ((union tree_node *,\n \t\t\t\t\t       int, int, int));\n-/* In expr.c  */\n-extern void emit_queue\t\t\tPARAMS ((void));\n-extern rtx emit_move_insn\t\tPARAMS ((rtx, rtx));\n-\n /* In emit-rtl.c */\n extern rtx emit_insn_before\t\tPARAMS ((rtx, rtx));\n extern rtx emit_jump_insn_before\tPARAMS ((rtx, rtx));\n@@ -1333,9 +1325,6 @@ extern rtx simplify_gen_relational\tPARAMS ((enum rtx_code,\n extern rtx simplify_replace_rtx\t\tPARAMS ((rtx, rtx, rtx));\n extern rtx simplify_rtx\t\t\tPARAMS ((rtx));\n \n-/* In optabs.c  */\n-extern rtx gen_move_insn\t\tPARAMS ((rtx, rtx));\n-\n /* In function.c  */\n extern rtx gen_mem_addressof\t\tPARAMS ((rtx, union tree_node *));\n "}, {"sha": "7927274046c98394202cee10cd74873b8b5be920", "filename": "gcc/ssa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0829d244e790076d9867c95e10e29bfdc1ff9198/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=0829d244e790076d9867c95e10e29bfdc1ff9198", "patch": "@@ -33,6 +33,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n \n #include \"rtl.h\"\n+#include \"expr.h\"\n #include \"varray.h\"\n #include \"partition.h\"\n #include \"sbitmap.h\""}]}