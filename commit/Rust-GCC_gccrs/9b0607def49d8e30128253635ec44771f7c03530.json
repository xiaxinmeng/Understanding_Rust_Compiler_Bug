{"sha": "9b0607def49d8e30128253635ec44771f7c03530", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwNjA3ZGVmNDlkOGUzMDEyODI1MzYzNWVjNDQ3NzFmN2MwMzUzMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-06-11T21:01:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-06-11T21:01:23Z"}, "message": "Fix ptrmem comparison for unions.\n\n\t* constexpr.c (cxx_eval_binary_expression): Special case comparison\n\tof pointers to members of the same union.\n\nFrom-SVN: r261454", "tree": {"sha": "a98da6dca0c6e3ad3e616778fb314a3e406ed415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a98da6dca0c6e3ad3e616778fb314a3e406ed415"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b0607def49d8e30128253635ec44771f7c03530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0607def49d8e30128253635ec44771f7c03530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0607def49d8e30128253635ec44771f7c03530", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0607def49d8e30128253635ec44771f7c03530/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "960a58b949d97b106bc3579e7c451d0f4f5749ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960a58b949d97b106bc3579e7c451d0f4f5749ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960a58b949d97b106bc3579e7c451d0f4f5749ac"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "4c7041b6cc416c10311f402432b8910203875be8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0607def49d8e30128253635ec44771f7c03530/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0607def49d8e30128253635ec44771f7c03530/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9b0607def49d8e30128253635ec44771f7c03530", "patch": "@@ -1,3 +1,8 @@\n+2018-06-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (cxx_eval_binary_expression): Special case comparison\n+\tof pointers to members of the same union.\n+\n 2018-06-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/86094 - wrong code with defaulted move ctor."}, {"sha": "97a338535db764a3a5cb3db0cd0dd8596f2bb69f", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0607def49d8e30128253635ec44771f7c03530/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0607def49d8e30128253635ec44771f7c03530/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=9b0607def49d8e30128253635ec44771f7c03530", "patch": "@@ -2051,8 +2051,22 @@ cxx_eval_binary_expression (const constexpr_ctx *ctx, tree t,\n \n       if (TREE_CODE (lhs) == PTRMEM_CST\n \t  && TREE_CODE (rhs) == PTRMEM_CST)\n-\tr = constant_boolean_node (cp_tree_equal (lhs, rhs) == is_code_eq,\n-\t\t\t\t   type);\n+\t{\n+\t  tree lmem = PTRMEM_CST_MEMBER (lhs);\n+\t  tree rmem = PTRMEM_CST_MEMBER (rhs);\n+\t  bool eq;\n+\t  if (TREE_CODE (lmem) == TREE_CODE (rmem)\n+\t      && TREE_CODE (lmem) == FIELD_DECL\n+\t      && TREE_CODE (DECL_CONTEXT (lmem)) == UNION_TYPE\n+\t      && same_type_p (DECL_CONTEXT (lmem),\n+\t\t\t      DECL_CONTEXT (rmem)))\n+\t    /* If both refer to (possibly different) members of the same union\n+\t       (12.3), they compare equal. */\n+\t    eq = true;\n+\t  else\n+\t    eq = cp_tree_equal (lhs, rhs);\n+\t  r = constant_boolean_node (eq == is_code_eq, type);\n+\t}\n       else if ((TREE_CODE (lhs) == PTRMEM_CST\n \t\t|| TREE_CODE (rhs) == PTRMEM_CST)\n \t       && (null_member_pointer_value_p (lhs)"}, {"sha": "71d2df858600d5e119ed17a2b2bdaade1be4ea31", "filename": "gcc/testsuite/g++.dg/expr/ptrmem10.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0607def49d8e30128253635ec44771f7c03530/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fptrmem10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0607def49d8e30128253635ec44771f7c03530/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fptrmem10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fptrmem10.C?ref=9b0607def49d8e30128253635ec44771f7c03530", "patch": "@@ -0,0 +1,28 @@\n+/* [expr.eq] If both refer to (possibly different) members of the same union\n+   (12.3), they compare equal. */\n+// { dg-do run { target c++11 } }\n+// { dg-additional-options -O }\n+\n+union U\n+{\n+  int i;\n+  int j;\n+};\n+\n+#define SA(X) static_assert ((X),#X)\n+SA (&U::i == &U::j);\n+SA (!(&U::i != &U::j));\n+\n+#define assert(X) do { if (!(X)) __builtin_abort(); } while(0)\n+\n+void f (int U::*p, int U::*q)\n+{\n+  assert (p==q);\n+  assert (!(p!=q));\n+}\n+\n+int main()\n+{\n+  assert (&U::i == &U::j);\n+  assert (!(&U::i != &U::j));\n+}"}]}