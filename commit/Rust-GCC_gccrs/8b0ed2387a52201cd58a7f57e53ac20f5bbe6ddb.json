{"sha": "8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "node_id": "C_kwDOANBUbNoAKDhiMGVkMjM4N2E1MjIwMWNkNThhN2Y1N2U1M2FjMjBmNWJiZTZkZGI", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-02-15T09:52:28Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:24Z"}, "message": "gccrs: builtins: Return empty list of tokens instead of nullptr\n\ngcc/rust/ChangeLog:\n\n\t* expand/rust-macro-builtins.cc (MacroBuiltin::include_handler): Do not\n\treturn nullptr token in expansion of `include!()`\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/empty.in: New test.\n\t* rust/compile/include_empty.rs: New test.", "tree": {"sha": "a3ed5d6ce5df273b0eb027825bc209174024a027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ed5d6ce5df273b0eb027825bc209174024a027"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecdce2bf17af6fb30823e900118e96a08887a748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecdce2bf17af6fb30823e900118e96a08887a748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecdce2bf17af6fb30823e900118e96a08887a748"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "97594921dec66e604c832825739f67a994d44b4d", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "patch": "@@ -752,8 +752,19 @@ MacroBuiltin::include_handler (Location invoc_locus, AST::MacroInvocData &invoc)\n       nodes.push_back (node);\n     }\n \n-  // FIXME: Do not return an empty token vector here\n-  return AST::Fragment (nodes, nullptr);\n+  // FIXME: This returns an empty vector of tokens and works fine, but is that\n+  // the expected behavior? `include` macros are a bit harder to reason about\n+  // since they include tokens. Furthermore, our lexer has no easy way to return\n+  // a slice of tokens like the MacroInvocLexer. So it gets even harder to\n+  // extrac tokens from here. For now, let's keep it that way and see if it\n+  // eventually breaks, but I don't expect it to cause many issues since the\n+  // list of tokens is only used when a macro invocation mixes eager\n+  // macro invocations and already expanded tokens. Think\n+  // `concat!(a!(), 15, b!())`. We need to be able to expand a!(), expand b!(),\n+  // and then insert the `15` token in between. In the case of `include!()`, we\n+  // only have one argument. So it's either going to be a macro invocation or a\n+  // string literal.\n+  return AST::Fragment (nodes, std::vector<std::unique_ptr<AST::Token>> ());\n }\n \n AST::Fragment"}, {"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "gcc/testsuite/rust/compile/empty.in", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/gcc%2Ftestsuite%2Frust%2Fcompile%2Fempty.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/gcc%2Ftestsuite%2Frust%2Fcompile%2Fempty.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fempty.in?ref=8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "patch": "@@ -0,0 +1 @@\n+"}, {"sha": "28e940fa0ac7d5b593f8da348c428ee5815701ef", "filename": "gcc/testsuite/rust/compile/include_empty.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/gcc%2Ftestsuite%2Frust%2Fcompile%2Finclude_empty.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb/gcc%2Ftestsuite%2Frust%2Fcompile%2Finclude_empty.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Finclude_empty.rs?ref=8b0ed2387a52201cd58a7f57e53ac20f5bbe6ddb", "patch": "@@ -0,0 +1,8 @@\n+#[rustc_builtin_macro]\n+macro_rules! include {\n+    () => {};\n+}\n+\n+include!(\"empty.in\");\n+\n+fn main() {}"}]}