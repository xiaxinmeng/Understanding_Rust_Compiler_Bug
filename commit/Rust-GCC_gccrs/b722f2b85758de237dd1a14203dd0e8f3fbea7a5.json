{"sha": "b722f2b85758de237dd1a14203dd0e8f3fbea7a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcyMmYyYjg1NzU4ZGUyMzdkZDFhMTQyMDNkZDBlOGYzZmJlYTdhNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-05-18T06:46:33Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-05-18T06:46:33Z"}, "message": "(convert_to_real): Accept boolean values.\n\nFrom-SVN: r7325", "tree": {"sha": "9fcac478314df59691e15d4cb037052676b69471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fcac478314df59691e15d4cb037052676b69471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b722f2b85758de237dd1a14203dd0e8f3fbea7a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b722f2b85758de237dd1a14203dd0e8f3fbea7a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b722f2b85758de237dd1a14203dd0e8f3fbea7a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b722f2b85758de237dd1a14203dd0e8f3fbea7a5/comments", "author": null, "committer": null, "parents": [{"sha": "b89a6f69c346a29ea2a1630881430b8941fd47cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89a6f69c346a29ea2a1630881430b8941fd47cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89a6f69c346a29ea2a1630881430b8941fd47cd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2cb5990e732627341defc239978fa7de99c86c7c", "filename": "gcc/convert.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b722f2b85758de237dd1a14203dd0e8f3fbea7a5/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b722f2b85758de237dd1a14203dd0e8f3fbea7a5/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=b722f2b85758de237dd1a14203dd0e8f3fbea7a5", "patch": "@@ -85,7 +85,7 @@ convert_to_real (type, expr)\n     return build1 (flag_float_store ? CONVERT_EXPR : NOP_EXPR,\n \t\t   type, expr);\n \n-  if (form == INTEGER_TYPE || form == ENUMERAL_TYPE)\n+  if (INTEGRAL_TYPE_P (TREE_TYPE (expr)))\n     return build1 (FLOAT_EXPR, type, expr);\n \n   if (form == COMPLEX_TYPE)"}]}