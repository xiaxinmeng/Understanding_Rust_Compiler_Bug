{"sha": "2a81fe20dd558aef586fb7aa5c53779e129bc961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE4MWZlMjBkZDU1OGFlZjU4NmZiN2FhNWM1Mzc3OWUxMjliYzk2MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-11-03T10:23:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-11-03T10:23:38Z"}, "message": "locale_facets.tcc (num_get<>::do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, bool&): Tidy.\n\n2008-11-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n\titer_type, ios_base&, ios_base::iostate&, bool&): Tidy.\n\t* testsuite/22_locale/num_get/get/char/37958.cc: Extend.\n\t* testsuite/22_locale/num_get/get/wchar_t/37958.cc: Likewise.\n\nFrom-SVN: r141546", "tree": {"sha": "3b32ab342e4b87d857d3e1a708d76fbf4a328a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b32ab342e4b87d857d3e1a708d76fbf4a328a02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a81fe20dd558aef586fb7aa5c53779e129bc961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a81fe20dd558aef586fb7aa5c53779e129bc961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a81fe20dd558aef586fb7aa5c53779e129bc961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a81fe20dd558aef586fb7aa5c53779e129bc961/comments", "author": null, "committer": null, "parents": [{"sha": "6f1fe305cca7c694ca11586ecddf77131a537423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1fe305cca7c694ca11586ecddf77131a537423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f1fe305cca7c694ca11586ecddf77131a537423"}], "stats": {"total": 133, "additions": 128, "deletions": 5}, "files": [{"sha": "47ffacc35cea3c6343bf11a200f5922ca95b9ece", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2a81fe20dd558aef586fb7aa5c53779e129bc961", "patch": "@@ -1,3 +1,10 @@\n+2008-11-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n+\titer_type, ios_base&, ios_base::iostate&, bool&): Tidy.\n+\t* testsuite/22_locale/num_get/get/char/37958.cc: Extend.\n+\t* testsuite/22_locale/num_get/get/wchar_t/37958.cc: Likewise.\n+\n 2008-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/37958 (cont again)"}, {"sha": "9a44007e451feccccfc0f06d9c925eac8c2d1e4e", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=2a81fe20dd558aef586fb7aa5c53779e129bc961", "patch": "@@ -623,14 +623,16 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t      if (!__donef)\n \t\t__testf = __c == __lc->_M_falsename[__n];\n \n+\t      if (!__testf && __donet)\n+\t\tbreak;\n+\n \t      if (!__donet)\n \t\t__testt = __c == __lc->_M_truename[__n];\n \n-\t      if (!__testt && !__testf)\n+\t      if (!__testt && __donef)\n \t\tbreak;\n \n-\t      if ((!__testt && __n >= __lc->_M_falsename_size)\n-\t\t  || (!__testf && __n >= __lc->_M_truename_size))\n+\t      if (!__testt && !__testf)\n \t\tbreak;\n \n \t      ++__n;"}, {"sha": "fe8161c31d537207424e649c401943c7239e58d0", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/char/37958.cc", "status": "modified", "additions": 58, "deletions": 1, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F37958.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F37958.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F37958.cc?ref=2a81fe20dd558aef586fb7aa5c53779e129bc961", "patch": "@@ -42,6 +42,12 @@ struct Punct3: std::numpunct<char>\n   std::string do_falsename() const { return \"\"; }\n };\n \n+struct Punct4: std::numpunct<char>\n+{\n+  std::string do_truename() const { return \"one\"; }\n+  std::string do_falsename() const { return \"two\"; }\n+};\n+\n // libstdc++/37958\n void test01()\n {\n@@ -50,21 +56,24 @@ void test01()\n   \n   bool test __attribute__((unused)) = true;\n \n-  istringstream iss0, iss1, iss2, iss3;\n+  istringstream iss0, iss1, iss2, iss3, iss4;\n   iss1.imbue(locale(iss1.getloc(), new Punct1));\n   iss2.imbue(locale(iss2.getloc(), new Punct2));\n   iss3.imbue(locale(iss3.getloc(), new Punct3));\n+  iss4.imbue(locale(iss4.getloc(), new Punct4));\n   const num_get<char>& ng0 = use_facet<num_get<char> >(iss0.getloc());\n   const num_get<char>& ng1 = use_facet<num_get<char> >(iss1.getloc());\n   const num_get<char>& ng2 = use_facet<num_get<char> >(iss2.getloc());\n   const num_get<char>& ng3 = use_facet<num_get<char> >(iss3.getloc());\n+  const num_get<char>& ng4 = use_facet<num_get<char> >(iss4.getloc());\n \n   ios_base::iostate err = ios_base::goodbit;\n   iterator_type end;\n   bool b0 = false;\n   bool b1 = false;\n   bool b2 = false;\n   bool b3 = true;\n+  bool b4 = false;\n \n   iss0.str(\"true\");\n   iss0.setf(ios_base::boolalpha);\n@@ -102,6 +111,14 @@ void test01()\n   VERIFY( b1 == false );\n   VERIFY( *end == 'c' );\n \n+  iss1.str(\"ab\");\n+  iss1.clear();\n+  b1 = true;\n+  err = ios_base::goodbit;\n+  end = ng1.get(iss1.rdbuf(), 0, iss1, err, b1);\n+  VERIFY( err == (ios_base::failbit | ios_base::eofbit) );\n+  VERIFY( b1 == false );\n+\n   iss2.str(\"1\");\n   iss2.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n@@ -116,6 +133,15 @@ void test01()\n   VERIFY( err == ios_base::goodbit );\n   VERIFY( b2 == false );\n \n+  iss2.str(\"2\");\n+  iss2.clear();\n+  b2 = true;\n+  err = ios_base::goodbit;\n+  end = ng2.get(iss2.rdbuf(), 0, iss2, err, b2);\n+  VERIFY( err == ios_base::failbit );\n+  VERIFY( b2 == false );\n+  VERIFY( *end == '2' );\n+\n   iss3.str(\"blah\");\n   iss3.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n@@ -131,6 +157,37 @@ void test01()\n   end = ng3.get(iss3.rdbuf(), 0, iss3, err, b3);\n   VERIFY( err == ios_base::failbit );\n   VERIFY( b3 == false );\n+\n+  iss4.str(\"one\");\n+  iss4.setf(ios_base::boolalpha);\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b4 == true );\n+\n+  iss4.str(\"two\");\n+  iss4.clear();\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b4 == false );\n+\n+  iss4.str(\"three\");\n+  iss4.clear();\n+  b4 = true;\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == ios_base::failbit );\n+  VERIFY( b4 == false );\n+  VERIFY( *end == 'h' );\n+\n+  iss4.str(\"on\");\n+  iss4.clear();\n+  b4 = true;\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == (ios_base::failbit | ios_base::eofbit) );\n+  VERIFY( b4 == false );\n }\n \n int main()"}, {"sha": "e48024510e0593f22aec3c4d14ec013aac455275", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/wchar_t/37958.cc", "status": "modified", "additions": 58, "deletions": 1, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F37958.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a81fe20dd558aef586fb7aa5c53779e129bc961/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F37958.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F37958.cc?ref=2a81fe20dd558aef586fb7aa5c53779e129bc961", "patch": "@@ -42,6 +42,12 @@ struct Punct3: std::numpunct<wchar_t>\n   std::wstring do_falsename() const { return L\"\"; }\n };\n \n+struct Punct4: std::numpunct<wchar_t>\n+{\n+  std::wstring do_truename() const { return L\"one\"; }\n+  std::wstring do_falsename() const { return L\"two\"; }\n+};\n+\n // libstdc++/37958\n void test01()\n {\n@@ -50,21 +56,24 @@ void test01()\n   \n   bool test __attribute__((unused)) = true;\n \n-  wistringstream iss0, iss1, iss2, iss3;\n+  wistringstream iss0, iss1, iss2, iss3, iss4;\n   iss1.imbue(locale(iss1.getloc(), new Punct1));\n   iss2.imbue(locale(iss2.getloc(), new Punct2));\n   iss3.imbue(locale(iss3.getloc(), new Punct3));\n+  iss4.imbue(locale(iss4.getloc(), new Punct4));\n   const num_get<wchar_t>& ng0 = use_facet<num_get<wchar_t> >(iss0.getloc());\n   const num_get<wchar_t>& ng1 = use_facet<num_get<wchar_t> >(iss1.getloc());\n   const num_get<wchar_t>& ng2 = use_facet<num_get<wchar_t> >(iss2.getloc());\n   const num_get<wchar_t>& ng3 = use_facet<num_get<wchar_t> >(iss3.getloc());\n+  const num_get<wchar_t>& ng4 = use_facet<num_get<wchar_t> >(iss4.getloc());\n \n   ios_base::iostate err = ios_base::goodbit;\n   iterator_type end;\n   bool b0 = false;\n   bool b1 = false;\n   bool b2 = false;\n   bool b3 = true;\n+  bool b4 = false;\n \n   iss0.str(L\"true\");\n   iss0.setf(ios_base::boolalpha);\n@@ -102,6 +111,14 @@ void test01()\n   VERIFY( b1 == false );\n   VERIFY( *end == L'c' );\n \n+  iss1.str(L\"ab\");\n+  iss1.clear();\n+  b1 = true;\n+  err = ios_base::goodbit;\n+  end = ng1.get(iss1.rdbuf(), 0, iss1, err, b1);\n+  VERIFY( err == (ios_base::failbit | ios_base::eofbit) );\n+  VERIFY( b1 == false );\n+\n   iss2.str(L\"1\");\n   iss2.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n@@ -116,6 +133,15 @@ void test01()\n   VERIFY( err == ios_base::goodbit );\n   VERIFY( b2 == false );\n \n+  iss2.str(L\"2\");\n+  iss2.clear();\n+  b2 = true;\n+  err = ios_base::goodbit;\n+  end = ng2.get(iss2.rdbuf(), 0, iss2, err, b2);\n+  VERIFY( err == ios_base::failbit );\n+  VERIFY( b2 == false );\n+  VERIFY( *end == L'2' );\n+\n   iss3.str(L\"blah\");\n   iss3.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n@@ -131,6 +157,37 @@ void test01()\n   end = ng3.get(iss3.rdbuf(), 0, iss3, err, b3);\n   VERIFY( err == ios_base::failbit );\n   VERIFY( b3 == false );\n+\n+  iss4.str(L\"one\");\n+  iss4.setf(ios_base::boolalpha);\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b4 == true );\n+\n+  iss4.str(L\"two\");\n+  iss4.clear();\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b4 == false );\n+\n+  iss4.str(L\"three\");\n+  iss4.clear();\n+  b4 = true;\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == ios_base::failbit );\n+  VERIFY( b4 == false );\n+  VERIFY( *end == L'h' );\n+\n+  iss4.str(L\"on\");\n+  iss4.clear();\n+  b4 = true;\n+  err = ios_base::goodbit;\n+  end = ng4.get(iss4.rdbuf(), 0, iss4, err, b4);\n+  VERIFY( err == (ios_base::failbit | ios_base::eofbit) );\n+  VERIFY( b4 == false );\n }\n \n int main()"}]}