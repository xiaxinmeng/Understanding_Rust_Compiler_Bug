{"sha": "50a2d3be7bf473c7590f77350fadf3471427ce09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhMmQzYmU3YmY0NzNjNzU5MGY3NzM1MGZhZGYzNDcxNDI3Y2UwOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-10-29T08:45:06Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-10-29T08:45:06Z"}, "message": "Fix unsigned type overflow in memory report.\n\n2019-10-29  Martin Liska  <mliska@suse.cz>\n\n\t* ggc-common.c: One can't subtract unsigned types\n\tin compare function.\n\nFrom-SVN: r277560", "tree": {"sha": "1535cbd21da96dd65bfd76e013d9b46a237393d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1535cbd21da96dd65bfd76e013d9b46a237393d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50a2d3be7bf473c7590f77350fadf3471427ce09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a2d3be7bf473c7590f77350fadf3471427ce09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a2d3be7bf473c7590f77350fadf3471427ce09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a2d3be7bf473c7590f77350fadf3471427ce09/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3518424d4bf6a9654c7fea7f046ed839e888b1d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3518424d4bf6a9654c7fea7f046ed839e888b1d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3518424d4bf6a9654c7fea7f046ed839e888b1d6"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "b6eeeaddc8ee0e8b9d44d58cdfbc4dee44df2b7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a2d3be7bf473c7590f77350fadf3471427ce09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a2d3be7bf473c7590f77350fadf3471427ce09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50a2d3be7bf473c7590f77350fadf3471427ce09", "patch": "@@ -1,3 +1,8 @@\n+2019-10-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* ggc-common.c: One can't subtract unsigned types\n+\tin compare function.\n+\n 2019-10-29  Martin Liska  <mliska@suse.cz>\n \n \t* cgraphunit.c (symbol_table::compile): Pass"}, {"sha": "48db4208599f60d7609ab5b8ef14e7fc12b6b91e", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a2d3be7bf473c7590f77350fadf3471427ce09/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a2d3be7bf473c7590f77350fadf3471427ce09/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=50a2d3be7bf473c7590f77350fadf3471427ce09", "patch": "@@ -928,10 +928,13 @@ class ggc_usage: public mem_usage\n   static int\n   compare (const void *first, const void *second)\n   {\n-    const mem_pair_t f = *(const mem_pair_t *)first;\n-    const mem_pair_t s = *(const mem_pair_t *)second;\n+    const mem_pair_t mem1 = *(const mem_pair_t *) first;\n+    const mem_pair_t mem2 = *(const mem_pair_t *) second;\n \n-    return s.second->get_balance () - f.second->get_balance ();\n+    size_t balance1 = mem1.second->get_balance ();\n+    size_t balance2 = mem2.second->get_balance ();\n+\n+    return balance1 == balance2 ? 0 : (balance1 < balance2 ? 1 : -1);\n   }\n \n   /* Dump header with NAME.  */"}]}