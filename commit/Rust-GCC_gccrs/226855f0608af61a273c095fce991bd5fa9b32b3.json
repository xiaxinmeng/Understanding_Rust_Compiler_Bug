{"sha": "226855f0608af61a273c095fce991bd5fa9b32b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2ODU1ZjA2MDhhZjYxYTI3M2MwOTVmY2U5OTFiZDVmYTliMzJiMw==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2011-05-27T19:39:07Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2011-05-27T19:39:07Z"}, "message": "re PR tree-optimization/46728 (GCC does not generate fmadd for pow (x, 0.75)+y on powerpc)\n\n2011-05-27  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/46728\n\t* gcc.target/powerpc/pr46728-1.c: New.\n\t* gcc.target/powerpc/pr46728-2.c: New.\n\t* gcc.target/powerpc/pr46728-3.c: New.\n\t* gcc.target/powerpc/pr46728-4.c: New.\n\t* gcc.target/powerpc/pr46728-5.c: New.\n\t* gcc.dg/pr46728-6.c: New.\n\t* gcc.target/powerpc/pr46728-7.c: New.\n\t* gcc.target/powerpc/pr46728-8.c: New.\n\t* gcc.dg/pr46728-9.c: New.\n\t* gcc.target/powerpc/pr46728-10.c: New.\n\t* gcc.target/powerpc/pr46728-11.c: New.\n\t* gcc.dg/pr46728-12.c: New.\n\t* gcc.target/powerpc/pr46728-13.c: New.\n\t* gcc.target/powerpc/pr46728-14.c: New.\n\t* gcc.target/powerpc/pr46728-15.c: New.\n\t* gcc.target/powerpc/pr46728-16.c: New.\n\nFrom-SVN: r174358", "tree": {"sha": "3358e2cb793e8d4dccef207dc73d80aa9263fe8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3358e2cb793e8d4dccef207dc73d80aa9263fe8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/226855f0608af61a273c095fce991bd5fa9b32b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226855f0608af61a273c095fce991bd5fa9b32b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226855f0608af61a273c095fce991bd5fa9b32b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226855f0608af61a273c095fce991bd5fa9b32b3/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a47d328ff345b05eb6fec4683ac04ac939064bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47d328ff345b05eb6fec4683ac04ac939064bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47d328ff345b05eb6fec4683ac04ac939064bfc"}], "stats": {"total": 615, "additions": 615, "deletions": 0}, "files": [{"sha": "a8be7cdc30016c1422a3116eb6746a01fc63603d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -1,3 +1,23 @@\n+2011-05-27  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/46728\n+\t* gcc.target/powerpc/pr46728-1.c: New.\n+\t* gcc.target/powerpc/pr46728-2.c: New.\n+\t* gcc.target/powerpc/pr46728-3.c: New.\n+\t* gcc.target/powerpc/pr46728-4.c: New.\n+\t* gcc.target/powerpc/pr46728-5.c: New.\n+\t* gcc.dg/pr46728-6.c: New.\n+\t* gcc.target/powerpc/pr46728-7.c: New.\n+\t* gcc.target/powerpc/pr46728-8.c: New.\n+\t* gcc.dg/pr46728-9.c: New.\n+\t* gcc.target/powerpc/pr46728-10.c: New.\n+\t* gcc.target/powerpc/pr46728-11.c: New.\n+\t* gcc.dg/pr46728-12.c: New.\n+\t* gcc.target/powerpc/pr46728-13.c: New.\n+\t* gcc.target/powerpc/pr46728-14.c: New.\n+\t* gcc.target/powerpc/pr46728-15.c: New.\n+\t* gcc.target/powerpc/pr46728-16.c: New.\n+\n 2011-05-27  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/abi/mangle47.C: New."}, {"sha": "c383e878c5d8521c262f96d8950427e4305e9855", "filename": "gcc/testsuite/gcc.dg/pr46728-12.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-12.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 1.0 / 3.0);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 729.0, 64.0, .0008797 };\n+  double PREC = 0.999999;\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (fabs (convert_it (values[i]) / cbrt (values[i])) < PREC)\n+      abort ();\n+\n+  return 0;\n+}"}, {"sha": "66c6e2cabece0861c35c5cdf51c7036fdd2ee2a7", "filename": "gcc/testsuite/gcc.dg/pr46728-6.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-6.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -lm\" } */\n+\n+#include <math.h>\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  volatile double result;\n+\n+  result = pow (-0.0, 3.0);\n+  result = pow (26.47, -2.0);\n+  result = pow (0.0, 0.0);\n+  result = pow (22.3, 1.0);\n+  result = pow (33.2, -1.0);\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-not \"pow\" } } */"}, {"sha": "7496976205fa97a7b65e5883f945434e6cf20522", "filename": "gcc/testsuite/gcc.dg/pr46728-9.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46728-9.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 0.5);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  double PREC = 0.999999;\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (fabs (convert_it (values[i]) / sqrt (values[i])) < PREC)\n+      abort ();\n+\n+  return 0;\n+}\n+"}, {"sha": "16336243a30bd004bf58f97a9aec3e9ae9b35883", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-1.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 0.5);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != sqrt (values[i]))\n+      abort ();\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"fsqrt\" 2 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pow\" { target powerpc*-*-* } } } */"}, {"sha": "84833c84a0ece46b9352df00a1a316fb2967f0fb", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-10.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-10.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 0.25);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != sqrt (sqrt (values[i])))\n+      abort ();\n+\n+  return 0;\n+}\n+"}, {"sha": "0dd0f7571a36c7205605dfa28c02b02bea31f2b5", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-11.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-11.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 0.75);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  double PREC = 0.999999;\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    {\n+      volatile double x, y;\n+      x = sqrt (values[i]);\n+      y = sqrt (sqrt (values[i]));\n+  \n+      if (fabs (convert_it (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+    }\n+\n+  return 0;\n+}"}, {"sha": "71015a942c0d9a5681fa7faf9d54fd01c7d3ed29", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-13.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-13.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 1.0 / 6.0);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 729.0, 64.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != cbrt (sqrt (values[i])))\n+      abort ();\n+\n+  return 0;\n+}"}, {"sha": "d5fc83ba2d9c85d095eef66e30aab418965d1d54", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-14.c", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-14.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,78 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it_1 (double x)\n+{\n+  return pow (x, 1.5);\n+}\n+\n+static double\n+convert_it_2 (double x)\n+{\n+  return pow (x, 2.5);\n+}\n+\n+static double\n+convert_it_3 (double x)\n+{\n+  return pow (x, -0.5);\n+}\n+\n+static double\n+convert_it_4 (double x)\n+{\n+  return pow (x, 10.5);\n+}\n+\n+static double\n+convert_it_5 (double x)\n+{\n+  return pow (x, -3.5);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  double PREC = .999999;\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    {\n+      volatile double x, y;\n+\n+      x = sqrt (values[i]);\n+      y = __builtin_powi (values[i], 1);\n+      if (fabs (convert_it_1 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = sqrt (values[i]);\n+      y = __builtin_powi (values[i], 2);\n+      if (fabs (convert_it_2 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = sqrt (values[i]);\n+      y = __builtin_powi (values[i], -1);\n+      if (fabs (convert_it_3 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = sqrt (values[i]);\n+      y = __builtin_powi (values[i], 10);\n+      if (fabs (convert_it_4 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = sqrt (values[i]);\n+      y = __builtin_powi (values[i], -4);\n+      if (fabs (convert_it_5 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+    }\n+\n+  return 0;\n+}"}, {"sha": "0586e29013f8676ae5e1040eb78eb191022c570b", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-15.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-15.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it_1 (double x)\n+{\n+  return pow (x, 10.0 / 3.0);\n+}\n+\n+static double\n+convert_it_2 (double x)\n+{\n+  return pow (x, 11.0 / 3.0);\n+}\n+\n+static double\n+convert_it_3 (double x)\n+{\n+  return pow (x, -7.0 / 3.0);\n+}\n+\n+static double\n+convert_it_4 (double x)\n+{\n+  return pow (x, -8.0 / 3.0);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  double PREC = .999999;\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    {\n+      volatile double x, y;\n+\n+      x = __builtin_powi (values[i], 3);\n+      y = __builtin_powi (cbrt (values[i]), 1);\n+      if (fabs (convert_it_1 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = __builtin_powi (values[i], 3);\n+      y = __builtin_powi (cbrt (values[i]), 2);\n+      if (fabs (convert_it_2 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = __builtin_powi (values[i], -3);\n+      y = __builtin_powi (cbrt (values[i]), 2);\n+      if (fabs (convert_it_3 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+\n+      x = __builtin_powi (values[i], -3);\n+      y = __builtin_powi (cbrt (values[i]), 1);\n+      if (fabs (convert_it_4 (values[i]) / (x * y)) < PREC)\n+\tabort ();\n+    }\n+\n+  return 0;\n+}"}, {"sha": "d9488e3b7a3d6757bfe63b51ae979be12bb0fb9d", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-16.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-16.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -mcpu=power6\" } */\n+\n+double foo (double x, double y)\n+{\n+  return __builtin_pow (x, 0.75) + y;\n+}\n+\n+\n+/* { dg-final { scan-assembler \"fmadd\" { target powerpc*-*-* } } } */"}, {"sha": "abf92491f95a37dde0c373debd044635f3dddbc2", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-2.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-2.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 0.25);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != sqrt (sqrt (values[i])))\n+      abort ();\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"fsqrt\" 4 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pow\" { target powerpc*-*-* } } } */"}, {"sha": "a00f7940a42713cd307d277518167a2dccd4bba6", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-3.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-3.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 0.75);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != sqrt(values[i]) * sqrt (sqrt (values[i])))\n+      abort ();\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"sqrt\" 4 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pow\" { target powerpc*-*-* } } } */"}, {"sha": "95d8fbe89eaf9ae749987ebb6440ab9b4b620020", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-4.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-4.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 1.0 / 3.0);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 729.0, 64.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != cbrt (values[i]))\n+      abort ();\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"cbrt\" 2 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pow\" { target powerpc*-*-* } } } */"}, {"sha": "a380d5225218ed3c4fffef48a45b055e2bb3b4d5", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-5.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-5.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it (double x)\n+{\n+  return pow (x, 1.0 / 6.0);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 729.0, 64.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    if (convert_it (values[i]) != cbrt (sqrt (values[i])))\n+      abort ();\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"cbrt\" 2 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \" pow \" { target powerpc*-*-* } } } */"}, {"sha": "873596cff374a2f4635e881236a06a2f0ee463ef", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-7.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-7.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it_1 (double x)\n+{\n+  return pow (x, 1.5);\n+}\n+\n+static double\n+convert_it_2 (double x)\n+{\n+  return pow (x, 2.5);\n+}\n+\n+static double\n+convert_it_3 (double x)\n+{\n+  return pow (x, -0.5);\n+}\n+\n+static double\n+convert_it_4 (double x)\n+{\n+  return pow (x, 10.5);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    {\n+      if (convert_it_1 (values[i]) != sqrt (values[i]) * __builtin_powi (values[i], 1))\n+\tabort ();\n+      if (convert_it_2 (values[i]) != sqrt (values[i]) * __builtin_powi (values[i], 2))\n+\tabort ();\n+      if (convert_it_3 (values[i]) != sqrt (values[i]) * __builtin_powi (values[i], -1))\n+\tabort ();\n+      if (convert_it_4 (values[i]) != sqrt (values[i]) * __builtin_powi (values[i], 10))\n+\tabort ();\n+    }\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"sqrt\" 5 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pow\" { target powerpc*-*-* } } } */"}, {"sha": "6480c7df9ba5a0c630e25da30f1d1bc33116759e", "filename": "gcc/testsuite/gcc.target/powerpc/pr46728-8.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226855f0608af61a273c095fce991bd5fa9b32b3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr46728-8.c?ref=226855f0608af61a273c095fce991bd5fa9b32b3", "patch": "@@ -0,0 +1,61 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm -mpowerpc-gpopt\" } */\n+\n+#include <math.h>\n+\n+extern void abort (void);\n+\n+#define NVALS 6\n+\n+static double\n+convert_it_1 (double x)\n+{\n+  return pow (x, 10.0 / 3.0);\n+}\n+\n+static double\n+convert_it_2 (double x)\n+{\n+  return pow (x, 11.0 / 3.0);\n+}\n+\n+static double\n+convert_it_3 (double x)\n+{\n+  return pow (x, -7.0 / 3.0);\n+}\n+\n+static double\n+convert_it_4 (double x)\n+{\n+  return pow (x, -8.0 / 3.0);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  double values[NVALS] = { 3.0, 1.95, 2.227, 4.0, 256.0, .0008797 };\n+  unsigned i;\n+\n+  for (i = 0; i < NVALS; i++)\n+    {\n+      if (convert_it_1 (values[i]) != \n+\t  __builtin_powi (values[i], 3) * __builtin_powi (cbrt (values[i]), 1))\n+\tabort ();\n+      if (convert_it_2 (values[i]) != \n+\t  __builtin_powi (values[i], 3) * __builtin_powi (cbrt (values[i]), 2))\n+\tabort ();\n+      if (convert_it_3 (values[i]) != \n+\t  __builtin_powi (values[i], -3) * __builtin_powi (cbrt (values[i]), 2))\n+\tabort ();\n+      if (convert_it_4 (values[i]) !=\n+\t  __builtin_powi (values[i], -3) * __builtin_powi (cbrt (values[i]), 1))\n+\tabort ();\n+    }\n+\n+  return 0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"cbrt\" 5 { target powerpc*-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pow\" { target powerpc*-*-* } } } */"}]}