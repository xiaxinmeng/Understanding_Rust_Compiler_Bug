{"sha": "d1db496104d75a6a2b5c59456b4266dc2ed87486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFkYjQ5NjEwNGQ3NWE2YTJiNWM1OTQ1NmI0MjY2ZGMyZWQ4NzQ4Ng==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-05T20:25:03Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-05T20:25:03Z"}, "message": "(INITIALIZE_TRAMPOLINE): Delete #ifndef/#endif.\n\n(INITIALIZE_TRAMPOLINE): Delete #ifndef/#endif.  Change\nfunction name from __enable_execute_stack to __gcc_flush_cache.\n(TRANSFER_FROM_TRAMPOLINE): Likewise.  Delete code calling\nmprotect.  Uncomment code calling cacheflush.\n\nFrom-SVN: r5614", "tree": {"sha": "03a44a2925bd62d5a776d270b69849182e5988c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03a44a2925bd62d5a776d270b69849182e5988c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1db496104d75a6a2b5c59456b4266dc2ed87486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1db496104d75a6a2b5c59456b4266dc2ed87486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1db496104d75a6a2b5c59456b4266dc2ed87486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1db496104d75a6a2b5c59456b4266dc2ed87486/comments", "author": null, "committer": null, "parents": [{"sha": "40811d84eb78b342673418fa7224a8ae102cab44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40811d84eb78b342673418fa7224a8ae102cab44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40811d84eb78b342673418fa7224a8ae102cab44"}], "stats": {"total": 25, "additions": 4, "deletions": 21}, "files": [{"sha": "001bd3b8cce741589ecb9ce2cbb8c69f5999a7f9", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1db496104d75a6a2b5c59456b4266dc2ed87486/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1db496104d75a6a2b5c59456b4266dc2ed87486/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d1db496104d75a6a2b5c59456b4266dc2ed87486", "patch": "@@ -1982,45 +1982,28 @@ typedef struct mips_args {\n    RTX for the static chain value that should be passed to the\n    function when it is called.  */\n \n-#ifndef INITIALIZE_TRAMPOLINE\n #define INITIALIZE_TRAMPOLINE(ADDR, FUNC, CHAIN)\t\t\t    \\\n {\t\t\t\t\t\t\t\t\t    \\\n   rtx addr = ADDR;\t\t\t\t\t\t\t    \\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (addr, 28)), FUNC);   \\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (addr, 32)), CHAIN);  \\\n \t\t\t\t\t\t\t\t\t    \\\n-  /* Attempt to make stack executable */\t\t\t\t    \\\n-  emit_library_call (gen_rtx (SYMBOL_REF, Pmode, \"__enable_execute_stack\"), \\\n+  /* Flush the instruction cache.  */\t\t\t\t\t    \\\n+  emit_library_call (gen_rtx (SYMBOL_REF, Pmode, \"__gcc_flush_cache\"), \\\n \t\t     0, VOIDmode, 1, addr, Pmode);\t\t\t    \\\n }\n-#endif /* INITIALIZE_TRAMPOLINE */\n \n+/* Flush the instruction cache.  */\n \n-/* Attempt to turn on access permissions for the stack.  */\n-\n-#ifndef TRANSFER_FROM_TRAMPOLINE\n #define TRANSFER_FROM_TRAMPOLINE\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n-__enable_execute_stack (addr)\t\t\t\t\t\t\\\n+__gcc_flush_cache (addr)\t\t\t\t\t\t\\\n      char *addr;\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  int size = getpagesize ();\t\t\t\t\t\t\\\n-  int mask = ~(size-1);\t\t\t\t\t\t\t\\\n-  char *page = (char *) (((int) addr) & mask);\t\t\t\t\\\n-  char *end  = (char *) ((((int) (addr + TRAMPOLINE_SIZE)) & mask) + size); \\\n-\t\t\t\t\t\t\t\t\t\\\n-  /* 7 is PROT_READ | PROT_WRITE | PROT_EXEC */\t\t\t\t\\\n-  if (mprotect (page, end - page, 7) < 0)\t\t\t\t\\\n-    perror (\"mprotect of trampoline code\");\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-/*\t\t\t\t\t\t\t\t\t\\\n   if (cacheflush (addr, TRAMPOLINE_SIZE, 1) < 0)\t\t\t\\\n     perror (\"cacheflush of trampoline code\");\t\t\t\t\\\n- */\t\t\t\t\t\t\t\t\t\\\n }\n-#endif\t/* TRANSFER_FROM_TRAMPOLINE */\n-\n \f\n /* Addressing modes, and classification of registers for them.  */\n "}]}