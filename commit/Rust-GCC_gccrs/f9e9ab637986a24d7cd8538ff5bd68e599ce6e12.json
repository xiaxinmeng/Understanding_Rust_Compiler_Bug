{"sha": "f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjllOWFiNjM3OTg2YTI0ZDdjZDg1MzhmZjViZDY4ZTU5OWNlNmUxMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-21T14:52:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:52:36Z"}, "message": "[Ada] Spurious warning on object declaration with address clause\n\nThe compiler warns on an object declaration with default initialization\nand an address clause, to indicate that the overlay implied by the address\nclause might affect a value elsewhere. The warning is suppressed if the type\ncarries the Suppress_Initialization aspect. With this patch the compiler\nalso inhibits the warning if the aspect is specified for the object itself.\n\n2018-05-21  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb (Warn_Overlay): Do not emit a wawrning on an object\n\tdeclaration with an explicit address clause and a type with default\n\tinitialization, if the declaration carries an aspect\n\tSuppress_Initialization.\n\ngcc/testsuite/\n\n\t* gnat.dg/suppress_initialization.adb,\n\tgnat.dg/suppress_initialization_pkg.ads: New testcase.\n\nFrom-SVN: r260471", "tree": {"sha": "304c4728abcc8b80f44144ef4d6cf9aa929647bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/304c4728abcc8b80f44144ef4d6cf9aa929647bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af5d8cb0f6bbb33cc5f4aae125b7c34a4f59a8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5d8cb0f6bbb33cc5f4aae125b7c34a4f59a8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af5d8cb0f6bbb33cc5f4aae125b7c34a4f59a8cb"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "907142ff6efc545f0bcc4bdaf0cfeac357b832f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "patch": "@@ -1,3 +1,10 @@\n+2018-05-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Warn_Overlay): Do not emit a wawrning on an object\n+\tdeclaration with an explicit address clause and a type with default\n+\tinitialization, if the declaration carries an aspect\n+\tSuppress_Initialization.\n+\n 2018-04-04  Daniel Mercier  <mercier@adacore.com>\n \n \t* pprint.adb: Use mixed case for attribute names."}, {"sha": "9a67061e3fcb5a3c3be9bb11faac3ab1aeee3c41", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "patch": "@@ -8690,11 +8690,14 @@ package body Freeze is\n       --  tested for because predefined String types are initialized by inline\n       --  code rather than by an init_proc). Note that we do not give the\n       --  warning for Initialize_Scalars, since we suppressed initialization\n-      --  in this case. Also, do not warn if Suppress_Initialization is set.\n+      --  in this case. Also, do not warn if Suppress_Initialization is set\n+      --  either on the type, or on the object via pragma or aspect.\n \n       if Present (Expr)\n         and then not Is_Imported (Ent)\n         and then not Initialization_Suppressed (Typ)\n+        and then not (Ekind (Ent) = E_Variable\n+                        and then Initialization_Suppressed (Ent))\n         and then (Has_Non_Null_Base_Init_Proc (Typ)\n                    or else Is_Access_Type (Typ)\n                    or else (Normalize_Scalars"}, {"sha": "d028fcd5c5105752659985ab200e7440058bb55f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "patch": "@@ -1,3 +1,8 @@\n+2018-04-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/suppress_initialization.adb,\n+\tgnat.dg/suppress_initialization_pkg.ads: New testcase.\n+\n 2018-04-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/exit1.adb: New testcase."}, {"sha": "68293d598a3d4de140caae98d2d993c0eb21a2a4", "filename": "gcc/testsuite/gnat.dg/suppress_initialization.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Ftestsuite%2Fgnat.dg%2Fsuppress_initialization.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Ftestsuite%2Fgnat.dg%2Fsuppress_initialization.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsuppress_initialization.adb?ref=f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "patch": "@@ -0,0 +1,8 @@\n+--  { dg-do compile }\n+\n+with Suppress_Initialization_Pkg;\n+\n+procedure Suppress_Initialization is\n+begin\n+   Suppress_Initialization_Pkg.Read;\n+end Suppress_Initialization;"}, {"sha": "4128067158254762eeff616f1fafaaed6e8db271", "filename": "gcc/testsuite/gnat.dg/suppress_initialization_pkg.ads", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Ftestsuite%2Fgnat.dg%2Fsuppress_initialization_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12/gcc%2Ftestsuite%2Fgnat.dg%2Fsuppress_initialization_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsuppress_initialization_pkg.ads?ref=f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "patch": "@@ -0,0 +1,31 @@\n+with Interfaces; use Interfaces;\n+with System;\n+\n+package Suppress_Initialization_Pkg is\n+\n+   type Discriminated_Type (Foo : Unsigned_8 := 0) is record\n+      case Foo is\n+         when 0 =>\n+            Bar  : Boolean;\n+         when 1 =>\n+            Baz  : Unsigned_32;\n+         when others =>\n+            null;\n+      end case;\n+   end record;\n+\n+   for Discriminated_Type use record\n+      Foo at 0 range  0 ..  7;\n+      Bar at 1 range  0 ..  0;\n+      Baz at 1 range  0 .. 31;\n+   end record;\n+\n+   External : Discriminated_Type\n+   with\n+     Volatile,\n+     Suppress_Initialization,\n+     Address => System'To_Address (16#1234_5678#);\n+\n+   procedure Read;\n+\n+end Suppress_Initialization_Pkg;"}]}