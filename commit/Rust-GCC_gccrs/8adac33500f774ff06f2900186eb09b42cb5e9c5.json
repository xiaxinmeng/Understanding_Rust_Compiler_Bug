{"sha": "8adac33500f774ff06f2900186eb09b42cb5e9c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkYWMzMzUwMGY3NzRmZjA2ZjI5MDAxODZlYjA5YjQyY2I1ZTljNQ==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-10-12T20:30:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-10-12T20:30:46Z"}, "message": "combine.c (make_extraction): Correct offset computation.\n\n\t* combine.c (make_extraction): Correct offset computation.\n\t* gcc.c-torture/execute/20051012-1.c: New test.\n\nFrom-SVN: r105330", "tree": {"sha": "7660ea507d7f2bb6251942eadcbc1293734cb064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7660ea507d7f2bb6251942eadcbc1293734cb064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8adac33500f774ff06f2900186eb09b42cb5e9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adac33500f774ff06f2900186eb09b42cb5e9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adac33500f774ff06f2900186eb09b42cb5e9c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adac33500f774ff06f2900186eb09b42cb5e9c5/comments", "author": null, "committer": null, "parents": [{"sha": "949d5b72e23ff9df61d122d367bbf334b9004f46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d5b72e23ff9df61d122d367bbf334b9004f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949d5b72e23ff9df61d122d367bbf334b9004f46"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "f2b9db354b67c72712d30d2c985a27be9fa719ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8adac33500f774ff06f2900186eb09b42cb5e9c5", "patch": "@@ -1,3 +1,7 @@\n+2005-10-12  Adrian Straetling <straetling@de.ibm.com>\n+\n+\t* combine.c (make_extraction): Correct offset computation.\n+\n 2005-10-12  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/t-linux (LIMITS_H_TEST): Define."}, {"sha": "ff10663a147ffda105e8da8463c1c9ab80f60303", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8adac33500f774ff06f2900186eb09b42cb5e9c5", "patch": "@@ -6512,11 +6512,12 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \toffset -= GET_MODE_SIZE (is_mode) - GET_MODE_SIZE (inner_mode);\n \n       /* If this is a constant position, we can move to the desired byte.\n-\t Be careful not to go beyond the original object. */\n+\t Be careful not to go beyond the original object and maintain the\n+\t natural alignment of the memory.  */ \n       if (pos_rtx == 0)\n \t{\n \t  enum machine_mode bfmode = smallest_mode_for_size (len, MODE_INT);\n-\t  offset += pos / GET_MODE_BITSIZE (bfmode);\n+\t  offset += (pos / GET_MODE_BITSIZE (bfmode)) * GET_MODE_SIZE (bfmode);\n \t  pos %= GET_MODE_BITSIZE (bfmode);\n \t}\n "}, {"sha": "be34d210880a99eb59a1758b9b55aa8d91c205f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8adac33500f774ff06f2900186eb09b42cb5e9c5", "patch": "@@ -1,3 +1,7 @@\n+2005-10-12  Adrian Straetling <straetling@de.ibm.com>\n+\n+\t* gcc.c-torture/execute/20051012-1.c: New test.\n+\n 2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/18082"}, {"sha": "f12f42913cc2f86fbf57cfbab118bb1d04a0788b", "filename": "gcc/testsuite/gcc.c-torture/execute/20051012-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051012-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adac33500f774ff06f2900186eb09b42cb5e9c5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051012-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051012-1.c?ref=8adac33500f774ff06f2900186eb09b42cb5e9c5", "patch": "@@ -0,0 +1,24 @@\n+extern void abort (void);\n+\n+struct type \n+{\n+  int *a;\n+  \n+  int b:16;\n+  unsigned int p:9;\n+} t;\n+\n+unsigned int \n+foo ()\n+{\n+  return t.p;\n+}\n+\n+int \n+main (void)\n+{\n+  t.p = 8;\n+  if (foo (t) != 8)\n+    abort ();\n+  return 0;\n+}"}]}