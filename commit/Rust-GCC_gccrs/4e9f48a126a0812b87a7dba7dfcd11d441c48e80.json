{"sha": "4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU5ZjQ4YTEyNmEwODEyYjg3YTdkYmE3ZGZjZDExZDQ0MWM0OGU4MA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-03-26T07:40:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:40:04Z"}, "message": "g-pehage.adb, [...]: Replace Raise_Exception by \"raise with\" construct.\n\n2008-03-26  Robert Dewar  <dewar@adacore.com>\n\n\t* g-pehage.adb, g-regist.adb, g-spipat.ads, g-spipat.adb,\n\ts-asthan.adb, s-parint.adb, s-rpc.adb, s-stchop.adb: Replace\n\tRaise_Exception by \"raise with\" construct.\n\nFrom-SVN: r133568", "tree": {"sha": "e58d32f726e2d188319b9870aafdef0441e585b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e58d32f726e2d188319b9870aafdef0441e585b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/comments", "author": null, "committer": null, "parents": [{"sha": "944f7f28cdb3368b192412eee53cec7210cfe84f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944f7f28cdb3368b192412eee53cec7210cfe84f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944f7f28cdb3368b192412eee53cec7210cfe84f"}], "stats": {"total": 85, "additions": 29, "deletions": 56}, "files": [{"sha": "f64181e1eb8c4f205f190486134bd4e9975f3f0b", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -31,7 +31,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Exceptions;    use Ada.Exceptions;\n with Ada.IO_Exceptions; use Ada.IO_Exceptions;\n \n with GNAT.Heap_Sort_G;\n@@ -1218,8 +1217,7 @@ package body GNAT.Perfect_Hash_Generators is\n          end if;\n \n          if C not in '0' .. '9' then\n-            Raise_Exception\n-              (Program_Error'Identity, \"cannot read position argument\");\n+            raise Program_Error with \"cannot read position argument\";\n          end if;\n \n          while C in '0' .. '9' loop\n@@ -1271,8 +1269,7 @@ package body GNAT.Perfect_Hash_Generators is\n             exit when L < N;\n \n             if Argument (N) /= ',' then\n-               Raise_Exception\n-                 (Program_Error'Identity, \"cannot read position argument\");\n+               raise Program_Error with \"cannot read position argument\";\n             end if;\n \n             N := N + 1;\n@@ -2184,8 +2181,7 @@ package body GNAT.Perfect_Hash_Generators is\n             end loop;\n \n             if Old_Differences = Max_Differences then\n-               Raise_Exception\n-                 (Program_Error'Identity, \"some keys are identical\");\n+               raise Program_Error with \"some keys are identical\";\n             end if;\n \n             --  Insert selected position and sort Sel_Position table"}, {"sha": "8eaa4081bbc515f0b4949318427d9bd24b8cf2d8", "filename": "gcc/ada/g-regist.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-regist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-regist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regist.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -30,14 +30,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Exceptions;\n with Interfaces.C;\n with System;\n with GNAT.Directory_Operations;\n \n package body GNAT.Registry is\n \n-   use Ada;\n    use System;\n \n    ------------------------------\n@@ -156,9 +154,8 @@ package body GNAT.Registry is\n       use type LONG;\n    begin\n       if Result /= ERROR_SUCCESS then\n-         Exceptions.Raise_Exception\n-           (Registry_Error'Identity,\n-            Message & \" (\" & LONG'Image (Result) & ')');\n+         raise Registry_Error with\n+           Message & \" (\" & LONG'Image (Result) & ')';\n       end if;\n    end Check_Result;\n "}, {"sha": "1e0c85c22c43f0c9e214370cdec9ad607b419531", "filename": "gcc/ada/g-spipat.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -36,7 +36,6 @@\n --  a direct translation, but the approach is followed closely. In particular,\n --  we use the one stack approach developed in the SPITBOL implementation.\n \n-with Ada.Exceptions;            use Ada.Exceptions;\n with Ada.Strings.Unbounded.Aux; use Ada.Strings.Unbounded.Aux;\n \n with GNAT.Debug_Utilities;      use GNAT.Debug_Utilities;\n@@ -2782,9 +2781,8 @@ package body GNAT.Spitbol.Patterns is\n \n    procedure Logic_Error is\n    begin\n-      Raise_Exception\n-        (Program_Error'Identity,\n-         \"Internal logic error in GNAT.Spitbol.Patterns\");\n+      raise Program_Error with\n+         \"Internal logic error in GNAT.Spitbol.Patterns\";\n    end Logic_Error;\n \n    -----------\n@@ -3644,9 +3642,8 @@ package body GNAT.Spitbol.Patterns is\n \n    procedure Uninitialized_Pattern is\n    begin\n-      Raise_Exception\n-        (Program_Error'Identity,\n-         \"uninitialized value of type GNAT.Spitbol.Patterns.Pattern\");\n+      raise Program_Error with\n+         \"uninitialized value of type GNAT.Spitbol.Patterns.Pattern\";\n    end Uninitialized_Pattern;\n \n    ------------"}, {"sha": "af4aed19f571c2fb3375c5a866e401928c62e62e", "filename": "gcc/ada/g-spipat.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-spipat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fg-spipat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.ads?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1997-2006, AdaCore                     --\n+--                     Copyright (C) 1997-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -693,6 +693,12 @@ package GNAT.Spitbol.Patterns is\n    --  body, manage to interprete them properly as though they were indeed\n    --  in out parameters.\n \n+   pragma Warnings (Off, VString_Var);\n+   pragma Warnings (Off, Pattern_Var);\n+   --  We turn off warnings for these two types so that when variables are used\n+   --  as arguments in this context, warnings about them not being assigned in\n+   --  the source program will be suppressed.\n+\n    --------------------------------\n    -- Basic Pattern Construction --\n    --------------------------------"}, {"sha": "bb3ac693df440e4beaf1fb78a3122dd953170d26", "filename": "gcc/ada/s-asthan.adb", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-asthan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-asthan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-asthan.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,12 +33,8 @@\n \n --  This is the dummy version used on non-VMS systems\n \n-with Ada.Exceptions;\n-\n package body System.AST_Handling is\n \n-   pragma Warnings (Off); -- kill warnings on unreferenced formals\n-\n    ------------------------\n    -- Create_AST_Handler --\n    ------------------------\n@@ -48,10 +44,7 @@ package body System.AST_Handling is\n       Entryno : Natural) return System.Aux_DEC.AST_Handler\n    is\n    begin\n-      Ada.Exceptions.Raise_Exception\n-        (E       => Program_Error'Identity,\n-         Message => \"AST is implemented only on VMS systems\");\n-\n+      raise Program_Error with \"AST is implemented only on VMS systems\";\n       return System.Aux_DEC.No_AST_Handler;\n    end Create_AST_Handler;\n \n@@ -61,12 +54,7 @@ package body System.AST_Handling is\n       Total_Number      : out Natural)\n    is\n    begin\n-      Ada.Exceptions.Raise_Exception\n-        (E       => Program_Error'Identity,\n-         Message => \"AST is implemented only on VMS systems\");\n-\n-      Actual_Number := 0;\n-      Total_Number := 0;\n+      raise Program_Error with \"AST is implemented only on VMS systems\";\n    end Expand_AST_Packet_Pool;\n \n end System.AST_Handling;"}, {"sha": "622c2d0106273a6a5e3610fdef3f8b0b6d018ca1", "filename": "gcc/ada/s-parint.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-parint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-parint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                   (Dummy body for non-distributed case)                  --\n --                                                                          --\n---          Copyright (C) 1995-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -215,8 +215,7 @@ package body System.Partition_Interface is\n      (E : Ada.Exceptions.Exception_Occurrence)\n    is\n    begin\n-      Ada.Exceptions.Raise_Exception\n-        (Program_Error'Identity, Ada.Exceptions.Exception_Message (E));\n+      raise Program_Error with Ada.Exceptions.Exception_Message (E);\n    end Raise_Program_Error_Unknown_Tag;\n \n    -----------------"}, {"sha": "2fa936761ea5b807e3dbe38a42367efabad0dd04", "filename": "gcc/ada/s-rpc.adb", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-rpc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-rpc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rpc.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,8 +39,6 @@\n \n --  The GLADE distribution package includes a replacement for this file\n \n-with Ada.Exceptions; use Ada.Exceptions;\n-\n package body System.RPC is\n \n    CRLF : constant String := ASCII.CR & ASCII.LF;\n@@ -49,9 +47,6 @@ package body System.RPC is\n            CRLF & \"Distribution support not installed in your environment\" &\n            CRLF & \"For information on GLADE, contact Ada Core Technologies\";\n \n-   pragma Warnings (Off);\n-   --  Kill messages about out parameters not set\n-\n    ----------\n    -- Read --\n    ----------\n@@ -62,7 +57,7 @@ package body System.RPC is\n       Last   : out Ada.Streams.Stream_Element_Offset)\n    is\n    begin\n-      Raise_Exception (Program_Error'Identity, Msg);\n+      raise Program_Error with Msg;\n    end Read;\n \n    -----------\n@@ -74,7 +69,7 @@ package body System.RPC is\n       Item   : Ada.Streams.Stream_Element_Array)\n    is\n    begin\n-      Raise_Exception (Program_Error'Identity, Msg);\n+      raise Program_Error with Msg;\n    end Write;\n \n    ------------\n@@ -87,7 +82,7 @@ package body System.RPC is\n       Result    : access Params_Stream_Type)\n    is\n    begin\n-      Raise_Exception (Program_Error'Identity, Msg);\n+      raise Program_Error with Msg;\n    end Do_RPC;\n \n    ------------\n@@ -99,7 +94,7 @@ package body System.RPC is\n       Params    : access Params_Stream_Type)\n    is\n    begin\n-      Raise_Exception (Program_Error'Identity, Msg);\n+      raise Program_Error with Msg;\n    end Do_APC;\n \n    ----------------------------\n@@ -110,6 +105,7 @@ package body System.RPC is\n      (Partition : Partition_ID;\n       Receiver  : RPC_Receiver)\n    is\n+      pragma Unreferenced (Partition, Receiver);\n    begin\n       null;\n    end Establish_RPC_Receiver;"}, {"sha": "e403bc9b15aa6bb3c4075d6bc97a99776367b114", "filename": "gcc/ada/s-stchop.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-stchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9f48a126a0812b87a7dba7dfcd11d441c48e80/gcc%2Fada%2Fs-stchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop.adb?ref=4e9f48a126a0812b87a7dba7dfcd11d441c48e80", "patch": "@@ -39,8 +39,6 @@ pragma Restrictions (No_Elaboration_Code);\n --  We want to guarantee the absence of elaboration code because the\n --  binder does not handle references to this package.\n \n-with Ada.Exceptions;\n-\n with System.Storage_Elements; use System.Storage_Elements;\n with System.Parameters; use System.Parameters;\n with System.Soft_Links;\n@@ -216,9 +214,7 @@ package body System.Stack_Checking.Operations is\n          (not Stack_Grows_Down and then\n             Stack_Address < Frame_Address)\n       then\n-         Ada.Exceptions.Raise_Exception\n-           (E       => Storage_Error'Identity,\n-            Message => \"stack overflow detected\");\n+         raise Storage_Error with \"stack overflow detected\";\n       end if;\n \n       --  This function first does a \"cheap\" check which is correct\n@@ -270,9 +266,7 @@ package body System.Stack_Checking.Operations is\n             (not Stack_Grows_Down and then\n                   Stack_Address > My_Stack.Limit)\n          then\n-            Ada.Exceptions.Raise_Exception\n-              (E       => Storage_Error'Identity,\n-               Message => \"stack overflow detected\");\n+            raise Storage_Error with \"stack overflow detected\";\n          end if;\n \n          return My_Stack;"}]}