{"sha": "f84cddb99891e30f17c466793c2afd2865240e80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg0Y2RkYjk5ODkxZTMwZjE3YzQ2Njc5M2MyYWZkMjg2NTI0MGU4MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-09T20:19:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-09T20:19:12Z"}, "message": "(yylex): Treat `$' just like `_', except issue a diagnostic if\n!dollars_in_ident or if pedantic.\n\nFrom-SVN: r12927", "tree": {"sha": "6c564514ca465425ae9ef5f1c09d29f573ecdf85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c564514ca465425ae9ef5f1c09d29f573ecdf85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f84cddb99891e30f17c466793c2afd2865240e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84cddb99891e30f17c466793c2afd2865240e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84cddb99891e30f17c466793c2afd2865240e80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84cddb99891e30f17c466793c2afd2865240e80/comments", "author": null, "committer": null, "parents": [{"sha": "d348bc3450a5c0b4204817cc6364d63d79494be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d348bc3450a5c0b4204817cc6364d63d79494be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d348bc3450a5c0b4204817cc6364d63d79494be3"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "2bf91532a5822c86a1f8ba1043e62742d7b1a387", "filename": "gcc/c-lex.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84cddb99891e30f17c466793c2afd2865240e80/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84cddb99891e30f17c466793c2afd2865240e80/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=f84cddb99891e30f17c466793c2afd2865240e80", "patch": "@@ -986,11 +986,6 @@ yylex ()\n       value = ENDFILE;\n       break;\n \n-    case '$':\n-      if (dollars_in_ident)\n-\tgoto letter;\n-      return '$';\n-\n     case 'L':\n       /* Capital L may start a wide-string or wide-character constant.  */\n       {\n@@ -1041,15 +1036,21 @@ yylex ()\n     case 'u':  case 'v':  case 'w':  case 'x':  case 'y':\n     case 'z':\n     case '_':\n+    case '$':\n     letter:\n       p = token_buffer;\n       while (isalnum (c) || c == '_' || c == '$' || c == '@')\n \t{\n \t  /* Make sure this char really belongs in an identifier.  */\n \t  if (c == '@' && ! doing_objc_thang)\n \t    break;\n-\t  if (c == '$' && ! dollars_in_ident)\n-\t    break;\n+\t  if (c == '$')\n+\t    {\n+\t      if (! dollars_in_ident)\n+\t\terror (\"`$' in identifier\");\n+\t      else if (pedantic)\n+\t\tpedwarn (\"`$' in identifier\");\n+\t    }\n \n \t  if (p >= token_buffer + maxtoken)\n \t    p = extend_token_buffer (p);\n@@ -1658,7 +1659,7 @@ yylex ()\n \tungetc (c, finput);\n \t*p = 0;\n \n-\tif (isalnum (c) || c == '.' || c == '_'\n+\tif (isalnum (c) || c == '.' || c == '_' || c == '$'\n \t    || (!flag_traditional && (c == '-' || c == '+')\n \t\t&& (p[-1] == 'e' || p[-1] == 'E')))\n \t  error (\"missing white space after number `%s'\", token_buffer);"}]}