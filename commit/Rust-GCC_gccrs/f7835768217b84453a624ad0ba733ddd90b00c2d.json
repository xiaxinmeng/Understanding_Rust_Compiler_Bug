{"sha": "f7835768217b84453a624ad0ba733ddd90b00c2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4MzU3NjgyMTdiODQ0NTNhNjI0YWQwYmE3MzNkZGQ5MGIwMGMyZA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-01-13T16:23:31Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-01-13T16:23:31Z"}, "message": "gmon-sol2.c (moncontrol, [...]): Don't use PARAMS.\n\n\t* config/sparc/gmon-sol2.c (moncontrol, monstartup, _mcleanup,\n\tinternal_mcount): Don't use PARAMS.\n\t(monstartup, _mcleanup, internal_mcount, moncontrol): Convert to\n\tISO C style.\n\t(internal_mcount): Use __attribute__, not ATTRIBUTE_UNUSED.\n\nFrom-SVN: r61253", "tree": {"sha": "60ae202e33971297d5c44dfb89ccd13bb4d943f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60ae202e33971297d5c44dfb89ccd13bb4d943f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7835768217b84453a624ad0ba733ddd90b00c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7835768217b84453a624ad0ba733ddd90b00c2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7835768217b84453a624ad0ba733ddd90b00c2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7835768217b84453a624ad0ba733ddd90b00c2d/comments", "author": null, "committer": null, "parents": [{"sha": "38a3dbbb3045ee554fa0703ffb92c57b25ca74bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a3dbbb3045ee554fa0703ffb92c57b25ca74bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a3dbbb3045ee554fa0703ffb92c57b25ca74bc"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "9617605f0a64bdd0d2a3cce001b6bb29e26e5f62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7835768217b84453a624ad0ba733ddd90b00c2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7835768217b84453a624ad0ba733ddd90b00c2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7835768217b84453a624ad0ba733ddd90b00c2d", "patch": "@@ -1,3 +1,11 @@\n+2003-01-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* config/sparc/gmon-sol2.c (moncontrol, monstartup, _mcleanup,\n+\tinternal_mcount): Don't use PARAMS.\n+\t(monstartup, _mcleanup, internal_mcount, moncontrol): Convert to\n+\tISO C style.\n+\t(internal_mcount): Use __attribute__, not ATTRIBUTE_UNUSED.\n+\n 2003-01-13  Andreas Schwab  <schwab@suse.de>\n \n \t* config/rs6000/sysv4.h (ASM_OUTPUT_ALIGNED_LOCAL): Output type"}, {"sha": "9f9f019e38b3437cf7e17d5bb628c669ea1c0899", "filename": "gcc/config/sparc/gmon-sol2.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7835768217b84453a624ad0ba733ddd90b00c2d/gcc%2Fconfig%2Fsparc%2Fgmon-sol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7835768217b84453a624ad0ba733ddd90b00c2d/gcc%2Fconfig%2Fsparc%2Fgmon-sol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fgmon-sol2.c?ref=f7835768217b84453a624ad0ba733ddd90b00c2d", "patch": "@@ -88,13 +88,11 @@ static int\ts_scale;\n \n #define\tMSG \"No space for profiling buffer(s)\\n\"\n \n-static void moncontrol\tPARAMS ((int));\n-extern void monstartup\tPARAMS ((char *, char *));\n-extern void _mcleanup\tPARAMS ((void));\n+static void moncontrol (int);\n+extern void monstartup (char *, char *);\n+extern void _mcleanup (void);\n \n-void monstartup(lowpc, highpc)\n-    char\t*lowpc;\n-    char\t*highpc;\n+void monstartup(char *lowpc, char *highpc)\n {\n     int\t\t\tmonsize;\n     char\t\t*buffer;\n@@ -170,7 +168,7 @@ void monstartup(lowpc, highpc)\n }\n \n void\n-_mcleanup()\n+_mcleanup(void)\n {\n     int\t\t\tfd;\n     int\t\t\tfromindex;\n@@ -269,7 +267,8 @@ _mcleanup()\n  * -- [eichin:19920702.1107EST]\n  */\n \n-static void internal_mcount PARAMS ((char *, unsigned short *)) ATTRIBUTE_UNUSED;\n+static void internal_mcount (char *, unsigned short *)\n+     __attribute__ ((__unused__));\n \n /* i7 == last ret, -> frompcindex */\n /* o7 == current ret, -> selfpc */\n@@ -278,9 +277,7 @@ asm(\".global _mcount; _mcount: mov %i7,%o1; mov %o7,%o0;b,a internal_mcount\");\n /* This is for compatibility with old versions of gcc which used mcount.  */\n asm(\".global mcount; mcount: mov %i7,%o1; mov %o7,%o0;b,a internal_mcount\");\n \n-static void internal_mcount(selfpc, frompcindex)\n-\tregister char\t\t\t*selfpc;\n-\tregister unsigned short\t\t*frompcindex;\n+static void internal_mcount(char *selfpc, unsigned short *frompcindex)\n {\n \tregister struct tostruct\t*top;\n \tregister struct tostruct\t*prevtop;\n@@ -410,8 +407,7 @@ static void internal_mcount(selfpc, frompcindex)\n  *\tprofiling is what mcount checks to see if\n  *\tall the data structures are ready.\n  */\n-static void moncontrol(mode)\n-    int mode;\n+static void moncontrol(int mode)\n {\n     if (mode) {\n \t/* start */"}]}