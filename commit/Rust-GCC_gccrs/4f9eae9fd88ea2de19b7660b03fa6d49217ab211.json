{"sha": "4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5ZWFlOWZkODhlYTJkZTE5Yjc2NjBiMDNmYTZkNDkyMTdhYjIxMQ==", "commit": {"author": {"name": "Maya Rashish", "email": "coypu@sdf.org", "date": "2018-06-18T17:28:53Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-06-18T17:28:53Z"}, "message": "crossconfig.m4: Handle OpenBSD just like NetBSD.\n\n2018-06-18  Maya Rashish  <coypu@sdf.org>\n\n\t* crossconfig.m4: Handle OpenBSD just like NetBSD.\n\t* configure: Rebuilt.\n\n\t* config/alpha/openbsd.h (TARGET_DEFAULT): Define.\n\t(LINK_SPEC, STARTFILE_SPEC, ENDFILE_SPEC): Likewise.\n\t(INTMAX_TYPE, UINTMAX_TYPE, WINT_TYPE): Likewise.\n\n\t* config/alpha/elf.h (STARTFILE_SPEC, ENDFILE_SPEC): Move from\n\there to ...\n\t* config/alpha/linux.h (STARTFILE_SPEC, ENDFILE_SPEC): Here.\n\nFrom-SVN: r261707", "tree": {"sha": "a0ba86f5881315bdeec18fd2ac3e57fd5728a712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ba86f5881315bdeec18fd2ac3e57fd5728a712"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/comments", "author": {"login": "coypoop", "id": 14857674, "node_id": "MDQ6VXNlcjE0ODU3Njc0", "avatar_url": "https://avatars.githubusercontent.com/u/14857674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coypoop", "html_url": "https://github.com/coypoop", "followers_url": "https://api.github.com/users/coypoop/followers", "following_url": "https://api.github.com/users/coypoop/following{/other_user}", "gists_url": "https://api.github.com/users/coypoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/coypoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coypoop/subscriptions", "organizations_url": "https://api.github.com/users/coypoop/orgs", "repos_url": "https://api.github.com/users/coypoop/repos", "events_url": "https://api.github.com/users/coypoop/events{/privacy}", "received_events_url": "https://api.github.com/users/coypoop/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "410fb7d7b097d3167e1212693a22bdc0f3a1efdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410fb7d7b097d3167e1212693a22bdc0f3a1efdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410fb7d7b097d3167e1212693a22bdc0f3a1efdf"}], "stats": {"total": 104, "additions": 75, "deletions": 29}, "files": [{"sha": "b3449654b1e08c0dca22dfd307be5fa01a7161cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -14,6 +14,16 @@\n \t(strlen_check_and_optimize_stmt): Same.\n \t* doc/extend.texi (Other Builtins): Document strnlen.\n \n+2018-06-18  Maya Rashish  <coypu@sdf.org>\n+\n+\t* config/alpha/openbsd.h (TARGET_DEFAULT): Define.\n+\t(LINK_SPEC, STARTFILE_SPEC, ENDFILE_SPEC): Likewise.\n+\t(INTMAX_TYPE, UINTMAX_TYPE, WINT_TYPE): Likewise.\n+\n+\t* config/alpha/elf.h (STARTFILE_SPEC, ENDFILE_SPEC): Move from\n+\there to ...\n+\t* config/alpha/linux.h (STARTFILE_SPEC, ENDFILE_SPEC): Here.\n+\n 2018-06-18  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* tree.c (escaped_string::escape): Replace cast to char * by"}, {"sha": "2a767f193f2faa0b66b1cacffc09968e02e562c9", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -100,32 +100,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     ASM_OUTPUT_DEF (FILE, alias, name);\t\t\t\t\\\n   } while (0)\n \n-/* Provide a STARTFILE_SPEC appropriate for ELF.  Here we add the\n-   (even more) magical crtbegin.o file which provides part of the\n-   support for getting C++ file-scope static object constructed\n-   before entering `main'.  */\n-\n-#undef\tSTARTFILE_SPEC\n-#ifdef HAVE_LD_PIE\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}}\\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#else\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p:gcrt1.o%s;:crt1.o%s}}\\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#endif\n-\n-/* Provide a ENDFILE_SPEC appropriate for ELF.  Here we tack on the\n-   magical crtend.o file which provides part of the support for\n-   getting C++ file-scope static object constructed before entering\n-   `main', followed by a normal ELF \"finalizer\" file, `crtn.o'.  */\n-\n-#undef\tENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n-  \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n-   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n-\n /* This variable should be set to 'true' if the target ABI requires\n    unwinding tables even when exceptions are not used.  */\n #define TARGET_UNWIND_TABLES_DEFAULT true"}, {"sha": "2bf52fe78aedc8f1917bce64af6785c5f88786dc", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -78,6 +78,32 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_POSIX_IO\n \n+/* Provide a STARTFILE_SPEC appropriate for ELF.  Here we add the\n+   (even more) magical crtbegin.o file which provides part of the\n+   support for getting C++ file-scope static object constructed\n+   before entering `main'.  */\n+\n+#undef\tSTARTFILE_SPEC\n+#ifdef HAVE_LD_PIE\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}}\\\n+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+#else\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p:gcrt1.o%s;:crt1.o%s}}\\\n+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+#endif\n+\n+/* Provide a ENDFILE_SPEC appropriate for ELF.  Here we tack on the\n+   magical crtend.o file which provides part of the support for\n+   getting C++ file-scope static object constructed before entering\n+   `main', followed by a normal ELF \"finalizer\" file, `crtn.o'.  */\n+\n+#undef\tENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n+   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n+\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n   \"%{static|static-pie:--start-group} %G %L \\\n    %{static|static-pie:--end-group}%{!static:%{!static-pie:%G}}\""}, {"sha": "9f035150d8b718aa5b66302a6ed2d56c835b24bd", "filename": "gcc/config/alpha/openbsd.h", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fopenbsd.h?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -19,6 +19,28 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Controlling the compilation driver.  */\n \n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT \\\n+\t(MASK_FPREGS | MASK_IEEE | MASK_IEEE_CONFORMANT)\n+\n+ #define LINK_SPEC \\\n+  \"%{!shared:%{!nostdlib:%{!r*:%{!e*:-e __start}}}} \\\n+   %{shared:-shared} %{R*} \\\n+   %{static:-Bstatic} \\\n+   %{!static:-Bdynamic} \\\n+   %{rdynamic:-export-dynamic} \\\n+   %{assert*} \\\n+   %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.so}\"\n+\n+/* As an elf system, we need crtbegin/crtend stuff.  */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\\\n+\t%{!shared: %{pg:gcrt0%O%s} %{!pg:%{p:gcrt0%O%s} \\\n+\t%{!p:%{!static:crt0%O%s} %{static:%{nopie:crt0%O%s} \\\n+\t%{!nopie:rcrt0%O%s}}}} crtbegin%O%s} %{shared:crtbeginS%O%s}\"\n+#undef ENDFILE_SPEC\n+#define ENDFILE_SPEC \"%{!shared:crtend%O%s} %{shared:crtendS%O%s}\"\n+\n /* run-time target specifications */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n     do {\t\t\t\t\t\\\n@@ -28,18 +50,27 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Layout of source language data types.  */\n \n-/* This must agree with <machine/ansi.h> */\n+/* This must agree with <machine/_types.h> */\n #undef SIZE_TYPE\n #define SIZE_TYPE \"long unsigned int\"\n \n #undef PTRDIFF_TYPE\n #define PTRDIFF_TYPE \"long int\"\n \n+#undef INTMAX_TYPE\n+#define INTMAX_TYPE \"long long int\"\n+\n+#undef UINTMAX_TYPE\n+#define UINTMAX_TYPE \"long long unsigned int\"\n+\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n+#undef WINT_TYPE\n+#define WINT_TYPE \"int\"\n+\n \f\n #define LOCAL_LABEL_PREFIX\t\".\""}, {"sha": "0af7c93227e7bd11d35b4f3ad3c44826ed70bbcf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -1,3 +1,8 @@\n+2018-06-18  Maya Rashish  <coypu@sdf.org>\n+\n+\t* crossconfig.m4: Handle OpenBSD just like NetBSD.\n+\t* configure: Rebuilt.\n+\n 2018-06-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \tP0754R2 <version> header"}, {"sha": "5a017beaabe0a0d0b9af1bbe0f2388e7aea79271", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -66148,7 +66148,7 @@ fi\n done\n \n     ;;\n-  *-netbsd*)\n+  *-netbsd* | *-openbsd*)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'\n \n "}, {"sha": "0dbfe4057bd50b0f2690f479736b2807c7dd6a1e", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9eae9fd88ea2de19b7660b03fa6d49217ab211/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "patch": "@@ -201,7 +201,7 @@ case \"${host}\" in\n     AC_CHECK_FUNCS(aligned_alloc posix_memalign memalign _aligned_malloc)\n     AC_CHECK_FUNCS(_wfopen)\n     ;;\n-  *-netbsd*)\n+  *-netbsd* | *-openbsd*)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'\n     AC_SUBST(SECTION_FLAGS) \n     GLIBCXX_CHECK_LINKER_FEATURES"}]}