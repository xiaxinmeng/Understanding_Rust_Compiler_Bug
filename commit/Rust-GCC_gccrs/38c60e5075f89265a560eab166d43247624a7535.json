{"sha": "38c60e5075f89265a560eab166d43247624a7535", "node_id": "C_kwDOANBUbNoAKDM4YzYwZTUwNzVmODkyNjVhNTYwZWFiMTY2ZDQzMjQ3NjI0YTc1MzU", "commit": {"author": {"name": "Thomas Rodgers", "email": "rodgert@twrodgers.com", "date": "2021-12-09T23:35:25Z"}, "committer": {"name": "Thomas Rodgers", "email": "rodgert@twrodgers.com", "date": "2021-12-10T01:57:03Z"}, "message": "libstdc++: Make atomic<T*>::wait() const [PR102994]\n\nThis was an oversight in the original commit adding wait/notify\nto atomic<T>.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/102994\n\t* include/bits/atomic_base.h (__atomic_base<_PTp*>::wait()):\n\tAdd const qualifier.\n\t* include/std/atomic (atomic<_Tp*>::wait(), atomic_wait()):\n\tLikewise.\n\t* testsuite/29_atomics/atomic/wait_notify/102994.cc:\n\tNew test.", "tree": {"sha": "7dbdf231a957b4cf2454054b2f93d4854f41e2ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dbdf231a957b4cf2454054b2f93d4854f41e2ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38c60e5075f89265a560eab166d43247624a7535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c60e5075f89265a560eab166d43247624a7535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c60e5075f89265a560eab166d43247624a7535", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c60e5075f89265a560eab166d43247624a7535/comments", "author": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a4fe8091896529a19a7c2c2a32e69f3b5efddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a4fe8091896529a19a7c2c2a32e69f3b5efddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a4fe8091896529a19a7c2c2a32e69f3b5efddb"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "a104adc1a10e9947010195b376587622496250e9", "filename": "libstdc++-v3/include/bits/atomic_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c60e5075f89265a560eab166d43247624a7535/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c60e5075f89265a560eab166d43247624a7535/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h?ref=38c60e5075f89265a560eab166d43247624a7535", "patch": "@@ -893,7 +893,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #if __cpp_lib_atomic_wait\n       _GLIBCXX_ALWAYS_INLINE void\n       wait(__pointer_type __old,\n-\t   memory_order __m = memory_order_seq_cst) noexcept\n+\t   memory_order __m = memory_order_seq_cst) const noexcept\n       {\n \tstd::__atomic_wait_address_v(&_M_p, __old,\n \t\t\t\t     [__m, this]"}, {"sha": "9b827b425dcb31b3c1d6acc287ed33abce7f1d2b", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c60e5075f89265a560eab166d43247624a7535/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c60e5075f89265a560eab166d43247624a7535/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=38c60e5075f89265a560eab166d43247624a7535", "patch": "@@ -646,9 +646,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t    __cmpexch_failure_order(__m));\n       }\n \n-#if __cpp_lib_atomic_wait \n+#if __cpp_lib_atomic_wait\n     void\n-    wait(__pointer_type __old, memory_order __m = memory_order_seq_cst) noexcept\n+    wait(__pointer_type __old, memory_order __m = memory_order_seq_cst) const noexcept\n     { _M_b.wait(__old, __m); }\n \n     // TODO add const volatile overload\n@@ -1434,12 +1434,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Tp>\n     inline void\n-    atomic_notify_one(atomic<_Tp>* __a) noexcept\n+    atomic_notify_one(const atomic<_Tp>* __a) noexcept\n     { __a->notify_one(); }\n \n   template<typename _Tp>\n     inline void\n-    atomic_notify_all(atomic<_Tp>* __a) noexcept\n+    atomic_notify_all(const atomic<_Tp>* __a) noexcept\n     { __a->notify_all(); }\n #endif // __cpp_lib_atomic_wait\n "}, {"sha": "9d92ff954f1ff573a1b6260cbbde91f8620ae4ed", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/wait_notify/102994.cc", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c60e5075f89265a560eab166d43247624a7535/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fwait_notify%2F102994.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c60e5075f89265a560eab166d43247624a7535/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fwait_notify%2F102994.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fwait_notify%2F102994.cc?ref=38c60e5075f89265a560eab166d43247624a7535", "patch": "@@ -0,0 +1,19 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n+// { dg-require-gthreads \"\" }\n+\n+#include <atomic>\n+\n+void\n+test1(const std::atomic<char*>& a, char* p)\n+{\n+  a.wait(p);\n+}\n+\n+void\n+test2(const std::atomic<int>* a, int v)\n+{\n+  std::atomic_wait(a, v);\n+  std::atomic_notify_one(a);\n+  std::atomic_notify_all(a);\n+}"}]}