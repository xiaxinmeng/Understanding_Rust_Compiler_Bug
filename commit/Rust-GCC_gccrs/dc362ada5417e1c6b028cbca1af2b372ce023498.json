{"sha": "dc362ada5417e1c6b028cbca1af2b372ce023498", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzNjJhZGE1NDE3ZTFjNmIwMjhjYmNhMWFmMmIzNzJjZTAyMzQ5OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-03-02T18:47:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-03-02T18:47:03Z"}, "message": "re PR target/79514 (ICE in curr_insn_transform, at lra-constraints.c:3773)\n\n\tPR target/79514\n\t* config/i386/i386.md (*pushxf_rounded): New insn_and_split pattern.\n\ntestsuite/ChangeLog:\n\n\tPR target/79514\n\t* gcc.target/i386/pr79514.c: New test.\n\nFrom-SVN: r245844", "tree": {"sha": "955d07d709e768e1b7f49d517b72d749469e0b0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/955d07d709e768e1b7f49d517b72d749469e0b0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc362ada5417e1c6b028cbca1af2b372ce023498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc362ada5417e1c6b028cbca1af2b372ce023498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc362ada5417e1c6b028cbca1af2b372ce023498", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc362ada5417e1c6b028cbca1af2b372ce023498/comments", "author": null, "committer": null, "parents": [{"sha": "fe792dd82ff149208e9c7df2fab241aeda78afe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe792dd82ff149208e9c7df2fab241aeda78afe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe792dd82ff149208e9c7df2fab241aeda78afe3"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "85cfb5235e03db4762d7bab1ed0676b9c9585805", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc362ada5417e1c6b028cbca1af2b372ce023498", "patch": "@@ -1,3 +1,8 @@\n+2017-03-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/79514\n+\t* config/i386/i386.md (*pushxf_rounded): New insn_and_split pattern.\n+\n 2017-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/79780\n@@ -2036,7 +2041,7 @@\n \tscalar_stmt_cost and vec_stmt_cost.\n \n 2017-02-01  Torvald Riegel  <triegel@redhat.com>\n-            Richard Henderson  <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n \t* builtins.c (fold_builtin_atomic_always_lock_free): Make \"lock-free\"\n \tconditional on existance of a fast atomic load.\n@@ -2337,9 +2342,9 @@\n 2017-01-27  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/79239\n-        * arm.c (arm_option_override): Don't call build_target_option_node\n-        until after doing all option overrides.\n-        (arm_valid_target_attribute_tree): Likewise.\n+\t* arm.c (arm_option_override): Don't call build_target_option_node\n+\tuntil after doing all option overrides.\n+\t(arm_valid_target_attribute_tree): Likewise.\n \n 2017-01-27  Martin Liska  <mliska@suse.cz>\n "}, {"sha": "f9f362eb2445650f54abd2249fc1794564750b4d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=dc362ada5417e1c6b028cbca1af2b372ce023498", "patch": "@@ -3015,6 +3015,36 @@\n   operands[0] = replace_equiv_address (operands[0], stack_pointer_rtx);\n })\n \n+(define_insn_and_split \"*pushxf_rounded\"\n+  [(set (mem:XF\n+\t  (pre_modify:DI\n+\t    (reg:DI SP_REG)\n+\t    (plus:DI (reg:DI SP_REG) (const_int -16))))\n+\t(match_operand:XF 0 \"nonmemory_no_elim_operand\" \"f,r,*r,C\"))]\n+  \"TARGET_64BIT\"\n+  \"#\"\n+  \"&& 1\"\n+  [(set (reg:DI SP_REG) (plus:DI (reg:DI SP_REG) (const_int -16)))\n+   (set (match_dup 1) (match_dup 0))]\n+{\n+  rtx pat = PATTERN (curr_insn);\n+  operands[1] = SET_DEST (pat);\n+\n+  /* Preserve memory attributes. */\n+  operands[1] = replace_equiv_address (operands[1], stack_pointer_rtx);\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387,*,*,*\")\n+   (set (attr \"mode\")\n+\t(cond [(eq_attr \"alternative\" \"1,2,3\")\n+\t\t (const_string \"DI\")\n+\t      ]\n+\t      (const_string \"XF\")))\n+   (set (attr \"preferred_for_size\")\n+     (cond [(eq_attr \"alternative\" \"1\")\n+              (symbol_ref \"false\")]\n+           (symbol_ref \"true\")))])\n+\n (define_insn \"*pushxf\"\n   [(set (match_operand:XF 0 \"push_operand\" \"=<,<,<,<\")\n \t(match_operand:XF 1 \"general_no_elim_operand\" \"f,r,*r,oF\"))]"}, {"sha": "43d415018c895286e3c6ca0b0d7fdfff5a6418f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dc362ada5417e1c6b028cbca1af2b372ce023498", "patch": "@@ -1,3 +1,8 @@\n+2017-03-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/79514\n+\t* gcc.target/i386/pr79514.c: New test.\n+\n 2017-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/79780\n@@ -1082,7 +1087,7 @@\n \n 2017-02-02  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n-        * gcc.dg/sms-8.c: Update options for powerpc*-*-*.\n+\t* gcc.dg/sms-8.c: Update options for powerpc*-*-*.\n \n 2017-02-02  Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "c5b7bf8ef670d7547d6b3c0f31f4b51627d4ced6", "filename": "gcc/testsuite/gcc.target/i386/pr79514.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79514.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc362ada5417e1c6b028cbca1af2b372ce023498/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79514.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79514.c?ref=dc362ada5417e1c6b028cbca1af2b372ce023498", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/79514 */\n+/* { dg-do compile } */\n+/* { dg-options \"-m96bit-long-double\" } */\n+\n+extern void bar (long double);\n+\n+extern long double x;\n+\n+void foo (void)\n+{\n+  bar (x);\n+}"}]}