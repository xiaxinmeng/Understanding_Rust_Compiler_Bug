{"sha": "e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk0OGExZmJkNGRjODY0ZGZiNWZmOWU1NTExZTAzYzYzMDQxNmU1YQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2012-02-15T23:39:28Z"}, "committer": {"name": "Patrick Marlier", "email": "pmarlier@gcc.gnu.org", "date": "2012-02-15T23:39:28Z"}, "message": "re PR libitm/52220 (FAIL: libitm.c++/eh-1.C execution test due to Xcode 4 weakref linker bug)\n\nlibitm/\n2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n\t    Patrick Marlier  <patrick.marlier@gmail.com>\n\n\tPR libitm/52220\n\t* alloc_cpp.cc: No dummy definitions for darwin.\n\t* eh_cpp.cc: Likewise.\n\nlibgcc/\n2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n\t    Patrick Marlier  <patrick.marlier@gmail.com>\n\n\tPR libitm/52220\n\t* config/darwin-crt-tm.c: Generate dummy functions.\n\n\nCo-Authored-By: Patrick Marlier <patrick.marlier@gmail.com>\n\nFrom-SVN: r184293", "tree": {"sha": "6b555950db9f790ccbc9a8b2d3739d727cd63bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b555950db9f790ccbc9a8b2d3739d727cd63bb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3a66c388451d35712a345ee98fb242b116caf10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a66c388451d35712a345ee98fb242b116caf10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3a66c388451d35712a345ee98fb242b116caf10"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "fef5b6d53cb6d2c94ed0b25e17b6bd3ae0f70bb0", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "patch": "@@ -1,3 +1,9 @@\n+2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n+\t    Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\tPR libitm/52220\n+\t* config/darwin-crt-tm.c: Generate dummy functions.\n+\n 2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n \t    Patrick Marlier  <patrick.marlier@gmail.com>\n "}, {"sha": "319b4f89389f66f80bc9b726e682c219010327c9", "filename": "libgcc/config/darwin-crt-tm.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fdarwin-crt-tm.c?ref=e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "patch": "@@ -39,6 +39,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n #define WEAK __attribute__((weak))\n+#define UNUSED __attribute__((unused))\n \n extern void _ITM_registerTMCloneTable (void *, size_t) WEAK;\n extern void _ITM_deregisterTMCloneTable (void *) WEAK;\n@@ -103,3 +104,46 @@ void __doTMdeRegistrations (void)\n }\n \n #endif\n+\n+/* Provide dummy functions to satisfy linkage for versions of the Darwin \n+   tool-chain that that can't handle undefined weak refs at the link stage.\n+   ??? Define these dummy functions only when !HAVE_ELF_STYLE_WEAKREF. */\n+\n+extern void *__cxa_allocate_exception (size_t) WEAK;\n+extern void __cxa_throw (void *, void *, void *) WEAK;\n+extern void *__cxa_begin_catch (void *) WEAK;\n+extern void *__cxa_end_catch (void) WEAK;\n+extern void __cxa_tm_cleanup (void *, void *, unsigned int) WEAK;\n+\n+extern void *_ZnwX (size_t) WEAK;\n+extern void _ZdlPv (void *) WEAK;\n+extern void *_ZnaX (size_t) WEAK;\n+extern void _ZdaPv (void *) WEAK;\n+\n+typedef const struct nothrow_t { } *c_nothrow_p;\n+\n+extern void *_ZnwXRKSt9nothrow_t (size_t, c_nothrow_p) WEAK;\n+extern void _ZdlPvRKSt9nothrow_t (void *, c_nothrow_p) WEAK;\n+extern void *_ZnaXRKSt9nothrow_t (size_t, c_nothrow_p) WEAK;\n+extern void _ZdaPvRKSt9nothrow_t (void *, c_nothrow_p) WEAK;\n+\n+void *__cxa_allocate_exception (size_t s UNUSED) { return NULL; }\n+void __cxa_throw (void * a UNUSED, void * b UNUSED, void * c UNUSED)\n+  { return; }\n+void *__cxa_begin_catch (void * a UNUSED) { return NULL; }\n+void *__cxa_end_catch (void) { return NULL; }\n+void __cxa_tm_cleanup (void * a UNUSED, void * b UNUSED, unsigned int c UNUSED)\n+  { return; }\n+\n+void *_ZnwX (size_t s UNUSED) { return NULL; }\n+void _ZdlPv (void * a UNUSED) { return; }\n+void *_ZnaX (size_t s UNUSED) { return NULL; }\n+void _ZdaPv (void * a UNUSED) { return; }\n+\n+void *_ZnwXRKSt9nothrow_t (size_t s UNUSED, c_nothrow_p b UNUSED)\n+  { return NULL; }\n+void _ZdlPvRKSt9nothrow_t (void * a UNUSED, c_nothrow_p b UNUSED)  { return; }\n+void *_ZnaXRKSt9nothrow_t (size_t s UNUSED, c_nothrow_p b UNUSED)\n+  { return NULL; }\n+void _ZdaPvRKSt9nothrow_t (void * a UNUSED, c_nothrow_p b UNUSED) { return; }\n+"}, {"sha": "e103ca0288bf978383b71ee878cab523fbd45b42", "filename": "libitm/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "patch": "@@ -1,3 +1,10 @@\n+2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n+\t    Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\tPR libitm/52220\n+\t* alloc_cpp.cc: No dummy definitions for darwin.\n+\t* eh_cpp.cc: Likewise.\n+\n 2012-02-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/x86/target.h (GTM_longjmp): Correct the .cfi corrections."}, {"sha": "00a4d3211d928ae9c295bb0d615719f146a8a5db", "filename": "libitm/alloc_cpp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libitm%2Falloc_cpp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libitm%2Falloc_cpp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Falloc_cpp.cc?ref=e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "patch": "@@ -60,7 +60,7 @@ extern void _ZdlPvRKSt9nothrow_t (void *, c_nothrow_p) __attribute__((weak));\n extern void *_ZnaXRKSt9nothrow_t (size_t, c_nothrow_p) __attribute__((weak));\n extern void _ZdaPvRKSt9nothrow_t (void *, c_nothrow_p) __attribute__((weak));\n \n-#if !defined (HAVE_ELF_STYLE_WEAKREF)\n+#if !defined (HAVE_ELF_STYLE_WEAKREF) && !defined (__MACH__)\n void *_ZnwX (size_t) { return NULL; }\n void _ZdlPv (void *) { return; }\n void *_ZnaX (size_t) { return NULL; }"}, {"sha": "5c4ca2843597c0137d4ae4fc103d5ad7fd4b4367", "filename": "libitm/eh_cpp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libitm%2Feh_cpp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e948a1fbd4dc864dfb5ff9e5511e03c630416e5a/libitm%2Feh_cpp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Feh_cpp.cc?ref=e948a1fbd4dc864dfb5ff9e5511e03c630416e5a", "patch": "@@ -39,7 +39,7 @@ extern void *__cxa_begin_catch (void *) WEAK;\n extern void *__cxa_end_catch (void) WEAK;\n extern void __cxa_tm_cleanup (void *, void *, unsigned int) WEAK;\n \n-#if !defined (HAVE_ELF_STYLE_WEAKREF)\n+#if !defined (HAVE_ELF_STYLE_WEAKREF) && !defined (__MACH__)\n void *__cxa_allocate_exception (size_t) { return NULL; }\n void __cxa_throw (void *, void *, void *) { return; }\n void *__cxa_begin_catch (void *) { return NULL; }"}]}