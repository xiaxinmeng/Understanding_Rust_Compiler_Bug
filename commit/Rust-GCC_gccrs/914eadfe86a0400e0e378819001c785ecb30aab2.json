{"sha": "914eadfe86a0400e0e378819001c785ecb30aab2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE0ZWFkZmU4NmEwNDAwZTBlMzc4ODE5MDAxYzc4NWVjYjMwYWFiMg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-06-17T15:10:05Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-06-17T15:11:45Z"}, "message": "IBM Z: Prevent mach optimization on doloop patterns\n\ns390_fix_long_loop_prediction is used in machine dependent\nreorg. There we use single_set to distingiush between conditional\njumps and branch on count patterns.  However, single_set returns a\nnon-NULL value also for PARALLELs in case one of the SETs is dead.\n\n2020-06-17  Andreas Krebbel  <krebbel@linux.ibm.com>\n\ngcc/\n\t* config/s390/s390.c (s390_fix_long_loop_prediction): Exit early\n\tfor PARALLELs.\n\ngcc/testsuite/\n\t* gcc.target/s390/20200617.c: New test.", "tree": {"sha": "79fdaf5aa7f9707f45b2a0b329480319ffcb4bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79fdaf5aa7f9707f45b2a0b329480319ffcb4bdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/914eadfe86a0400e0e378819001c785ecb30aab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914eadfe86a0400e0e378819001c785ecb30aab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/914eadfe86a0400e0e378819001c785ecb30aab2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914eadfe86a0400e0e378819001c785ecb30aab2/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9e230f41eb406380ab0d9c2b73031133d54259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9e230f41eb406380ab0d9c2b73031133d54259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a9e230f41eb406380ab0d9c2b73031133d54259"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "bd49a897c76f2969e14ff97aa36eca4ddfb22f5e", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/914eadfe86a0400e0e378819001c785ecb30aab2/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/914eadfe86a0400e0e378819001c785ecb30aab2/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=914eadfe86a0400e0e378819001c785ecb30aab2", "patch": "@@ -13957,8 +13957,13 @@ s390_fix_long_loop_prediction (rtx_insn *insn)\n   int distance;\n \n   /* This will exclude branch on count and branch on index patterns\n-     since these are correctly statically predicted.  */\n-  if (!set\n+     since these are correctly statically predicted.\n+\n+     The additional check for a PARALLEL is required here since\n+     single_set might be != NULL for PARALLELs where the set of the\n+     iteration variable is dead.  */\n+  if (GET_CODE (PATTERN (insn)) == PARALLEL\n+      || !set\n       || SET_DEST (set) != pc_rtx\n       || GET_CODE (SET_SRC(set)) != IF_THEN_ELSE)\n     return false;"}, {"sha": "067d2e1d90ba901883b5fd5eabaf04284e2922b9", "filename": "gcc/testsuite/gcc.target/s390/20200617.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/914eadfe86a0400e0e378819001c785ecb30aab2/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20200617.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/914eadfe86a0400e0e378819001c785ecb30aab2/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20200617.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20200617.c?ref=914eadfe86a0400e0e378819001c785ecb30aab2", "patch": "@@ -0,0 +1,23 @@\n+/* This ICE'd before f9e1ea10e657af9fb02fafecf1a600740fd34409 because\n+   a doloop pattern with a dead set of the iteration variable was\n+   generated and s390_fix_long_loop_prediction then failed to\n+   recognize it as branch on count pattern.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z10\" } */\n+\n+int a, d, e, f;\n+long b;\n+long *volatile c;\n+void\n+fn1() {\n+  for (; e; ++e)\n+    if (d)\n+      ;\n+    else {\n+      a = 0;\n+      for (; a != 14; ++a)\n+\t*c = b && f;\n+      d = 8;\n+    }\n+}"}]}