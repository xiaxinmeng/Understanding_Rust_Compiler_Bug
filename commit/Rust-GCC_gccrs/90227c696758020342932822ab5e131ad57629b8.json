{"sha": "90227c696758020342932822ab5e131ad57629b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAyMjdjNjk2NzU4MDIwMzQyOTMyODIyYWI1ZTEzMWFkNTc2MjliOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-19T00:43:33Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-19T00:43:33Z"}, "message": "pure-1.c: Make functions static again.\n\n\t* gcc.c-torture/execute/pure-1.c: Make functions static again.\n\tDon't use attribute `noinline'.\n\nFrom-SVN: r54767", "tree": {"sha": "a05626b2da213adf8192bda190fb4faebb6ca5ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a05626b2da213adf8192bda190fb4faebb6ca5ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90227c696758020342932822ab5e131ad57629b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90227c696758020342932822ab5e131ad57629b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90227c696758020342932822ab5e131ad57629b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90227c696758020342932822ab5e131ad57629b8/comments", "author": null, "committer": null, "parents": [{"sha": "ee77717163ba5ee139258e12d9c50c8b141f0fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee77717163ba5ee139258e12d9c50c8b141f0fa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee77717163ba5ee139258e12d9c50c8b141f0fa2"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "518ac60759b7c43377498de99dccc518906545fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90227c696758020342932822ab5e131ad57629b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90227c696758020342932822ab5e131ad57629b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90227c696758020342932822ab5e131ad57629b8", "patch": "@@ -1,3 +1,8 @@\n+2002-06-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.c-torture/execute/pure-1.c: Make functions static again.\n+\tDon't use attribute `noinline'.\n+\n 2002-06-18  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.c-torture/execute/20020615-1.c: Fix typo in comment."}, {"sha": "a516ed940c3ef357fb95950f3ed161af904a35eb", "filename": "gcc/testsuite/gcc.c-torture/execute/pure-1.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90227c696758020342932822ab5e131ad57629b8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90227c696758020342932822ab5e131ad57629b8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c?ref=90227c696758020342932822ab5e131ad57629b8", "patch": "@@ -17,20 +17,13 @@ extern int func0 (int) __attribute__ ((__pure__));\n extern int func1 (int) __attribute__ ((__const__));\n \n /* GCC should automatically detect attributes for these functions.\n-   Don't allow -O3 to inline them.  */\n-#define ANI __attribute__ ((__noinline__))\n-\n-/* ??? If we mark these static, then -O3 will defer them to the end of\n-   compilation, and we won't have detected anything about them at the\n-   point main is compiled.  Leaving them public works until someone runs\n-   the testsuite with -fpic, or has an OS for which targetm.binds_local_p\n-   returns false for some reason.  */\n-int ANI func2 (int a) { return i + a; } /* pure */\n-int ANI func3 (int a) { return a * 3; } /* const */\n-int ANI func4 (int a) { return func0(a) + a; } /* pure */\n-int ANI func5 (int a) { return a + func1(a); } /* const */\n-int ANI func6 (int a) { return func2(a) + a; } /* pure */\n-int ANI func7 (int a) { return a + func3(a); } /* const */\n+   At -O3 They'll be inlined, but that's ok.  */\n+static int func2 (int a) { return i + a; } /* pure */\n+static int func3 (int a) { return a * 3; } /* const */\n+static int func4 (int a) { return func0(a) + a; } /* pure */\n+static int func5 (int a) { return a + func1(a); } /* const */\n+static int func6 (int a) { return func2(a) + a; } /* pure */\n+static int func7 (int a) { return a + func3(a); } /* const */\n \n int main ()\n {"}]}