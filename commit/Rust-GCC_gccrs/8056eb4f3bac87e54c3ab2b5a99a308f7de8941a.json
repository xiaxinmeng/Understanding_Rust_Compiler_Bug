{"sha": "8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA1NmViNGYzYmFjODdlNTRjM2FiMmI1YTk5YTMwOGY3ZGU4OTQxYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-06-09T16:52:57Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-06-09T16:52:57Z"}, "message": "re PR tree-optimization/40351 (ice in generate_subtree_copies for Linux kernel build)\n\n2009-06-09  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/40351\n\t* tree-sra.c (propagate_subacesses_accross_link): Check that a refrence\n\tto a potential artifical subaccess can be constructed.\n\n\t* testsuite/gcc.c-torture/compile/pr40351.c: New file.\n\nFrom-SVN: r148315", "tree": {"sha": "15608c2484c45398ff2166dd929c96b02071886b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15608c2484c45398ff2166dd929c96b02071886b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff346f70754c95c575fabaecb428d29115e7a7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff346f70754c95c575fabaecb428d29115e7a7a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff346f70754c95c575fabaecb428d29115e7a7a5"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "e2b443706b1d7324b5c3870fcadb3de26cc4fb81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "patch": "@@ -1,3 +1,9 @@\n+2009-06-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/40351\n+\t* tree-sra.c (propagate_subacesses_accross_link): Check that a refrence\n+\tto a potential artifical subaccess can be constructed.\n+\n 2009-06-08  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h (sh_optimization_options): Declare."}, {"sha": "8ecbde7ad3a12656d66c61427d20b53303d51d10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "patch": "@@ -1,3 +1,7 @@\n+2009-06-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* testsuite/gcc.c-torture/compile/pr40351.c: New file.\n+\n 2009-06-09  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/align_max.adb: New test."}, {"sha": "9b7e0ccfae1d35baf87114727a8d75628b8d568e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr40351.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40351.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40351.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40351.c?ref=8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "patch": "@@ -0,0 +1,22 @@\n+/* PR tree-optimizations/40351 */\n+\n+struct IO_APIC_route_entry {\n+    unsigned int vector : 8;\n+    unsigned int delivery_mode : 1;\n+    unsigned int mask : 1;\n+    unsigned int __reserved_2 : 15;\n+    unsigned int __reserved_3 : 8;\n+} __attribute__ ((packed));\n+union entry_union {\n+    struct {\n+        unsigned int w1, w2;\n+    };\n+    struct IO_APIC_route_entry entry;\n+};\n+unsigned int io_apic_read(void);\n+struct IO_APIC_route_entry ioapic_read_entry(void)\n+{\n+  union entry_union eu;\n+  eu.w1 = io_apic_read();\n+  return eu.entry;\n+}"}, {"sha": "e5f9b96c41917f744713e46e14be16ba235cd215", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8056eb4f3bac87e54c3ab2b5a99a308f7de8941a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=8056eb4f3bac87e54c3ab2b5a99a308f7de8941a", "patch": "@@ -1544,6 +1544,13 @@ propagate_subacesses_accross_link (struct access *lacc, struct access *racc)\n \t  continue;\n \t}\n \n+      /* If a (part of) a union field in on the RHS of an assignment, it can\n+\t have sub-accesses which do not make sense on the LHS (PR 40351).\n+\t Check that this is not the case.  */\n+      if (!build_ref_for_offset (NULL, TREE_TYPE (lacc->base), norm_offset,\n+\t\t\t\t rchild->type, false))\n+\tcontinue;\n+\n       new_acc = create_artificial_child_access (lacc, rchild, norm_offset);\n       if (racc->first_child)\n \tpropagate_subacesses_accross_link (new_acc, rchild);"}]}