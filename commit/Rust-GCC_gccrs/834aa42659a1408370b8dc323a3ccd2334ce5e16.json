{"sha": "834aa42659a1408370b8dc323a3ccd2334ce5e16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0YWE0MjY1OWExNDA4MzcwYjhkYzMyM2EzY2NkMjMzNGNlNWUxNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-11T22:00:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-11T22:00:42Z"}, "message": "re PR c++/48535 ([C++0x][SFINAE] Hard errors during list-value-initialization)\n\n\tPR c++/48535\n\t* semantics.c (finish_compound_literal): Take complain parm.\n\t(build_lambda_object): Adjust.\n\t* cp-tree.h: Adjust.\n\t* call.c (convert_like_real): Adjust.\n\t* decl.c (check_initializer): Adjust.\n\t* parser.c (cp_parser_postfix_expression): Adjust.\n\t(cp_parser_functional_cast): Adjust.\n\t* pt.c (tsubst_copy_and_build): Adjust.\n\t* typeck2.c (process_init_constructor_record): Adjust.\n\nFrom-SVN: r172285", "tree": {"sha": "bb2e4729240d155e6ce8e883d088bbe7e83df94e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb2e4729240d155e6ce8e883d088bbe7e83df94e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/834aa42659a1408370b8dc323a3ccd2334ce5e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834aa42659a1408370b8dc323a3ccd2334ce5e16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834aa42659a1408370b8dc323a3ccd2334ce5e16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834aa42659a1408370b8dc323a3ccd2334ce5e16/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55b13820b4be09c8b8bceaad41d5b5af2c73b411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55b13820b4be09c8b8bceaad41d5b5af2c73b411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55b13820b4be09c8b8bceaad41d5b5af2c73b411"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "6732794f4be2da70a10293848038cc5236e20748", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -1,5 +1,16 @@\n 2011-04-11  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48535\n+\t* semantics.c (finish_compound_literal): Take complain parm.\n+\t(build_lambda_object): Adjust.\n+\t* cp-tree.h: Adjust.\n+\t* call.c (convert_like_real): Adjust.\n+\t* decl.c (check_initializer): Adjust.\n+\t* parser.c (cp_parser_postfix_expression): Adjust.\n+\t(cp_parser_functional_cast): Adjust.\n+\t* pt.c (tsubst_copy_and_build): Adjust.\n+\t* typeck2.c (process_init_constructor_record): Adjust.\n+\n \tPR c++/48534\n \t* cvt.c (ocp_convert): Use build_nop to convert to underlying type\n \tof scoped enum."}, {"sha": "78104b1540b768192ce1173afdb614f3d3010792", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -5495,7 +5495,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \telttype = cp_build_qualified_type\n \t  (elttype, cp_type_quals (elttype) | TYPE_QUAL_CONST);\n \tarray = build_array_of_n_type (elttype, len);\n-\tarray = finish_compound_literal (array, new_ctor);\n+\tarray = finish_compound_literal (array, new_ctor, complain);\n \n \t/* Build up the initializer_list object.  */\n \ttotype = complete_type (totype);"}, {"sha": "44a20ead20a2fb2e8b784a74cf32809c24926427", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -5297,7 +5297,7 @@ extern tree finish_increment_expr\t\t(tree, enum tree_code);\n extern tree finish_this_expr\t\t\t(void);\n extern tree finish_pseudo_destructor_expr       (tree, tree, tree);\n extern tree finish_unary_op_expr\t\t(enum tree_code, tree);\n-extern tree finish_compound_literal\t\t(tree, tree);\n+extern tree finish_compound_literal\t\t(tree, tree, tsubst_flags_t);\n extern tree finish_fname\t\t\t(tree);\n extern void finish_translation_unit\t\t(void);\n extern tree finish_template_type_parm\t\t(tree, tree);"}, {"sha": "a541402ab6642f87ad2e2a183a9caae279cfdcc2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -5397,7 +5397,8 @@ check_initializer (tree decl, tree init, int flags, tree *cleanup)\n \t\t init appropriately so we can pass it into store_init_value\n \t\t for the error.  */\n \t      if (init && BRACE_ENCLOSED_INITIALIZER_P (init))\n-\t\tinit = finish_compound_literal (type, init);\n+\t\tinit = finish_compound_literal (type, init,\n+\t\t\t\t\t\ttf_warning_or_error);\n \t      else if (CLASS_TYPE_P (type)\n \t\t       && (!init || TREE_CODE (init) == TREE_LIST))\n \t\t{"}, {"sha": "8414ab86481625dc2a8140b1722d78be0b83f3f0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -4897,7 +4897,8 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t\tpostfix_expression\n \t\t  = (finish_compound_literal\n \t\t     (type, build_constructor (init_list_type_node,\n-\t\t\t\t\t       initializer_list)));\n+\t\t\t\t\t       initializer_list),\n+\t\t      tf_warning_or_error));\n \t\tbreak;\n \t      }\n \t  }\n@@ -19936,7 +19937,8 @@ cp_parser_functional_cast (cp_parser* parser, tree type)\n       CONSTRUCTOR_IS_DIRECT_INIT (expression_list) = 1;\n       if (TREE_CODE (type) == TYPE_DECL)\n \ttype = TREE_TYPE (type);\n-      return finish_compound_literal (type, expression_list);\n+      return finish_compound_literal (type, expression_list,\n+\t\t\t\t      tf_warning_or_error);\n     }\n \n "}, {"sha": "208ff2ba433c047ab7d66b81ff0a695f0070ec75", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -13262,7 +13262,7 @@ tsubst_copy_and_build (tree t,\n \tCONSTRUCTOR_IS_DIRECT_INIT (r) = CONSTRUCTOR_IS_DIRECT_INIT (t);\n \n \tif (TREE_HAS_CONSTRUCTOR (t))\n-\t  return finish_compound_literal (type, r);\n+\t  return finish_compound_literal (type, r, complain);\n \n \tTREE_TYPE (r) = type;\n \treturn r;"}, {"sha": "e08ddb32d39618a664f460d7f9a32abf888f4d02", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -2309,14 +2309,16 @@ finish_unary_op_expr (enum tree_code code, tree expr)\n    the CONSTRUCTOR in COMPOUND_LITERAL is being cast.  */\n \n tree\n-finish_compound_literal (tree type, tree compound_literal)\n+finish_compound_literal (tree type, tree compound_literal,\n+\t\t\t tsubst_flags_t complain)\n {\n   if (type == error_mark_node)\n     return error_mark_node;\n \n   if (!TYPE_OBJ_P (type))\n     {\n-      error (\"compound literal of non-object type %qT\", type);\n+      if (complain & tf_error)\n+\terror (\"compound literal of non-object type %qT\", type);\n       return error_mark_node;\n     }\n \n@@ -2338,7 +2340,7 @@ finish_compound_literal (tree type, tree compound_literal)\n \t that it came from T{} rather than T({}).  */\n       CONSTRUCTOR_IS_DIRECT_INIT (compound_literal) = 1;\n       compound_literal = build_tree_list (NULL_TREE, compound_literal);\n-      return build_functional_cast (type, compound_literal, tf_error);\n+      return build_functional_cast (type, compound_literal, complain);\n     }\n \n   if (TREE_CODE (type) == ARRAY_TYPE\n@@ -7928,7 +7930,7 @@ build_lambda_object (tree lambda_expr)\n      But we briefly treat it as an aggregate to make this simpler.  */\n   type = TREE_TYPE (lambda_expr);\n   CLASSTYPE_NON_AGGREGATE (type) = 0;\n-  expr = finish_compound_literal (type, expr);\n+  expr = finish_compound_literal (type, expr, tf_warning_or_error);\n   CLASSTYPE_NON_AGGREGATE (type) = 1;\n \n  out:"}, {"sha": "20b47d59b7e75726e4802dfa634f2584fcffb1aa", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834aa42659a1408370b8dc323a3ccd2334ce5e16/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=834aa42659a1408370b8dc323a3ccd2334ce5e16", "patch": "@@ -1126,7 +1126,8 @@ process_init_constructor_record (tree type, tree init)\n \t  next = build_constructor (init_list_type_node, NULL);\n \t  if (MAYBE_CLASS_TYPE_P (TREE_TYPE (field)))\n \t    {\n-\t      next = finish_compound_literal (TREE_TYPE (field), next);\n+\t      next = finish_compound_literal (TREE_TYPE (field), next,\n+\t\t\t\t\t      tf_warning_or_error);\n \t      /* direct-initialize the target. No temporary is going\n \t\t  to be involved.  */\n \t      if (TREE_CODE (next) == TARGET_EXPR)"}]}